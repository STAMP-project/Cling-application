import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class RegressionTest0 {

    public static boolean debug = false;

    @Test
    public void test0001() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0001");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.text.NumberFormat numberFormat3 = null;
        // The following exception was thrown during execution in test generation
        try {
            fractionFormat2.setNumeratorFormat(numberFormat3);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: numerator format can not be null.");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
    }

    @Test
    public void test0002() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0002");
        java.util.Locale locale0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.fraction.FractionFormat fractionFormat1 = org.apache.commons.math.fraction.FractionFormat.getProperInstance(locale0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test0003() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0003");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.text.NumberFormat numberFormat3 = fractionFormat2.getNumeratorFormat();
        java.text.ParsePosition parsePosition5 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj6 = fractionFormat2.parseObject("hi!", parsePosition5);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(numberFormat3);
    }

    @Test
    public void test0004() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0004");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.lang.StringBuffer stringBuffer4 = null;
        java.text.FieldPosition fieldPosition5 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer6 = fractionFormat2.format((java.lang.Object) (-1.0f), stringBuffer4, fieldPosition5);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test0005() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0005");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.text.NumberFormat numberFormat3 = fractionFormat2.getNumeratorFormat();
        java.lang.StringBuffer stringBuffer5 = null;
        java.text.FieldPosition fieldPosition6 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer7 = fractionFormat2.format((java.lang.Object) (byte) 1, stringBuffer5, fieldPosition6);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(numberFormat3);
    }

    @Test
    public void test0006() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0006");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.text.NumberFormat numberFormat3 = fractionFormat2.getNumeratorFormat();
        java.text.NumberFormat numberFormat4 = null;
        // The following exception was thrown during execution in test generation
        try {
            fractionFormat2.setNumeratorFormat(numberFormat4);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: numerator format can not be null.");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(numberFormat3);
    }

    @Test
    public void test0007() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0007");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.text.NumberFormat numberFormat3 = fractionFormat2.getNumeratorFormat();
        org.apache.commons.math.fraction.Fraction fraction4 = null;
        java.lang.StringBuffer stringBuffer5 = null;
        java.text.FieldPosition fieldPosition6 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer7 = fractionFormat2.format(fraction4, stringBuffer5, fieldPosition6);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(numberFormat3);
    }

    @Test
    public void test0008() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0008");
        java.util.Locale locale0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.fraction.FractionFormat fractionFormat1 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance(locale0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test0009() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0009");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = new org.apache.commons.math.fraction.FractionFormat();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj2 = fractionFormat0.parseObject("hi!");
            org.junit.Assert.fail("Expected exception of type java.text.ParseException; message: Format.parseObject(String) failed");
        } catch (java.text.ParseException e) {
        // Expected exception.
        }
    }

    @Test
    public void test0010() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0010");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.text.NumberFormat numberFormat3 = fractionFormat2.getNumeratorFormat();
        java.text.NumberFormat numberFormat4 = fractionFormat2.getNumeratorFormat();
        java.text.NumberFormat numberFormat5 = fractionFormat2.getNumeratorFormat();
        java.text.NumberFormat numberFormat6 = null;
        // The following exception was thrown during execution in test generation
        try {
            fractionFormat2.setNumeratorFormat(numberFormat6);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: numerator format can not be null.");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(numberFormat3);
        org.junit.Assert.assertNull(numberFormat4);
        org.junit.Assert.assertNull(numberFormat5);
    }

    @Test
    public void test0011() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0011");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.text.NumberFormat numberFormat3 = fractionFormat2.getNumeratorFormat();
        java.text.NumberFormat numberFormat4 = fractionFormat2.getNumeratorFormat();
        java.text.NumberFormat numberFormat5 = fractionFormat2.getNumeratorFormat();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass6 = numberFormat5.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(numberFormat3);
        org.junit.Assert.assertNull(numberFormat4);
        org.junit.Assert.assertNull(numberFormat5);
    }

    @Test
    public void test0012() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0012");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.fraction.Fraction fraction4 = fractionFormat2.parse("hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test0013() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0013");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.text.NumberFormat numberFormat3 = fractionFormat2.getNumeratorFormat();
        java.text.NumberFormat numberFormat4 = fractionFormat2.getNumeratorFormat();
        java.text.NumberFormat numberFormat5 = fractionFormat2.getNumeratorFormat();
        org.apache.commons.math.fraction.Fraction fraction6 = null;
        java.lang.StringBuffer stringBuffer7 = null;
        java.text.FieldPosition fieldPosition8 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer9 = fractionFormat2.format(fraction6, stringBuffer7, fieldPosition8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(numberFormat3);
        org.junit.Assert.assertNull(numberFormat4);
        org.junit.Assert.assertNull(numberFormat5);
    }

    @Test
    public void test0014() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0014");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.text.NumberFormat numberFormat3 = fractionFormat2.getDenominatorFormat();
        org.apache.commons.math.fraction.Fraction fraction4 = null;
        java.lang.StringBuffer stringBuffer5 = null;
        java.text.FieldPosition fieldPosition6 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer7 = fractionFormat2.format(fraction4, stringBuffer5, fieldPosition6);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(numberFormat3);
    }

    @Test
    public void test0015() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0015");
        org.apache.commons.math.fraction.Fraction fraction0 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str1 = org.apache.commons.math.fraction.FractionFormat.formatFraction(fraction0);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot format given object as a fraction");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
    }

    @Test
    public void test0016() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0016");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.text.NumberFormat numberFormat3 = fractionFormat2.getDenominatorFormat();
        java.text.NumberFormat numberFormat4 = fractionFormat2.getNumeratorFormat();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.fraction.Fraction fraction6 = fractionFormat2.parse("");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(numberFormat3);
        org.junit.Assert.assertNull(numberFormat4);
    }

    @Test
    public void test0017() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0017");
        java.text.NumberFormat numberFormat0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.fraction.FractionFormat fractionFormat1 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test0018() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0018");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.text.NumberFormat numberFormat3 = fractionFormat2.getNumeratorFormat();
        java.text.NumberFormat numberFormat4 = fractionFormat2.getNumeratorFormat();
        java.text.NumberFormat numberFormat5 = fractionFormat2.getNumeratorFormat();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj7 = numberFormat5.parseObject("");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(numberFormat3);
        org.junit.Assert.assertNull(numberFormat4);
        org.junit.Assert.assertNull(numberFormat5);
    }

    @Test
    public void test0019() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0019");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.text.NumberFormat numberFormat3 = fractionFormat2.getDenominatorFormat();
        java.text.NumberFormat numberFormat4 = fractionFormat2.getNumeratorFormat();
        java.text.NumberFormat numberFormat5 = fractionFormat2.getNumeratorFormat();
        java.text.NumberFormat numberFormat6 = fractionFormat2.getDenominatorFormat();
        java.text.NumberFormat numberFormat7 = null;
        // The following exception was thrown during execution in test generation
        try {
            fractionFormat2.setDenominatorFormat(numberFormat7);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: denominator format can not be null.");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(numberFormat3);
        org.junit.Assert.assertNull(numberFormat4);
        org.junit.Assert.assertNull(numberFormat5);
        org.junit.Assert.assertNull(numberFormat6);
    }

    @Test
    public void test0020() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0020");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.text.NumberFormat numberFormat3 = fractionFormat2.getDenominatorFormat();
        java.text.NumberFormat numberFormat4 = fractionFormat2.getNumeratorFormat();
        java.text.NumberFormat numberFormat5 = fractionFormat2.getNumeratorFormat();
        java.text.NumberFormat numberFormat6 = fractionFormat2.getDenominatorFormat();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.fraction.Fraction fraction8 = fractionFormat2.parse("0 / 1");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(numberFormat3);
        org.junit.Assert.assertNull(numberFormat4);
        org.junit.Assert.assertNull(numberFormat5);
        org.junit.Assert.assertNull(numberFormat6);
    }

    @Test
    public void test0021() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0021");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.ParsePosition parsePosition2 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.fraction.Fraction fraction3 = fractionFormat0.parse("", parsePosition2);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
    }

    @Test
    public void test0022() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0022");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.text.NumberFormat numberFormat3 = fractionFormat2.getNumeratorFormat();
        java.text.NumberFormat numberFormat4 = fractionFormat2.getNumeratorFormat();
        java.lang.StringBuffer stringBuffer6 = null;
        java.text.FieldPosition fieldPosition7 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer8 = fractionFormat2.format((java.lang.Object) (-1.0f), stringBuffer6, fieldPosition7);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(numberFormat3);
        org.junit.Assert.assertNull(numberFormat4);
    }

    @Test
    public void test0023() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0023");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.text.NumberFormat numberFormat3 = fractionFormat2.getNumeratorFormat();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj5 = numberFormat3.parseObject("");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(numberFormat3);
    }

    @Test
    public void test0024() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0024");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.text.NumberFormat numberFormat3 = fractionFormat2.getDenominatorFormat();
        java.text.NumberFormat numberFormat4 = fractionFormat2.getNumeratorFormat();
        java.text.NumberFormat numberFormat5 = fractionFormat2.getNumeratorFormat();
        java.text.NumberFormat numberFormat6 = null;
        // The following exception was thrown during execution in test generation
        try {
            fractionFormat2.setNumeratorFormat(numberFormat6);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: numerator format can not be null.");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(numberFormat3);
        org.junit.Assert.assertNull(numberFormat4);
        org.junit.Assert.assertNull(numberFormat5);
    }

    @Test
    public void test0025() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0025");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = new org.apache.commons.math.fraction.FractionFormat();
        java.lang.String str2 = fractionFormat0.format((java.lang.Object) 0);
        java.text.ParsePosition parsePosition4 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj5 = fractionFormat0.parseObject("", parsePosition4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "0 / 1" + "'", str2, "0 / 1");
    }

    @Test
    public void test0026() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0026");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.text.NumberFormat numberFormat3 = fractionFormat2.getDenominatorFormat();
        java.text.NumberFormat numberFormat4 = fractionFormat2.getNumeratorFormat();
        java.text.NumberFormat numberFormat5 = fractionFormat2.getNumeratorFormat();
        java.text.NumberFormat numberFormat6 = fractionFormat2.getDenominatorFormat();
        java.text.NumberFormat numberFormat7 = null;
        java.text.NumberFormat numberFormat8 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat9 = new org.apache.commons.math.fraction.FractionFormat(numberFormat7, numberFormat8);
        java.lang.Object obj10 = fractionFormat9.clone();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str11 = numberFormat6.format(obj10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(numberFormat3);
        org.junit.Assert.assertNull(numberFormat4);
        org.junit.Assert.assertNull(numberFormat5);
        org.junit.Assert.assertNull(numberFormat6);
        org.junit.Assert.assertNotNull(obj10);
    }

    @Test
    public void test0027() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0027");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat1 = null;
        // The following exception was thrown during execution in test generation
        try {
            fractionFormat0.setNumeratorFormat(numberFormat1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: numerator format can not be null.");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
    }

    @Test
    public void test0028() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0028");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.text.NumberFormat numberFormat3 = fractionFormat2.getNumeratorFormat();
        java.text.NumberFormat numberFormat4 = fractionFormat2.getNumeratorFormat();
        java.text.NumberFormat numberFormat5 = fractionFormat2.getNumeratorFormat();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str7 = fractionFormat2.format((java.lang.Object) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(numberFormat3);
        org.junit.Assert.assertNull(numberFormat4);
        org.junit.Assert.assertNull(numberFormat5);
    }

    @Test
    public void test0029() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0029");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.text.NumberFormat numberFormat3 = fractionFormat2.getNumeratorFormat();
        java.text.NumberFormat numberFormat4 = fractionFormat2.getNumeratorFormat();
        java.text.ParsePosition parsePosition6 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.fraction.Fraction fraction7 = fractionFormat2.parse("", parsePosition6);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(numberFormat3);
        org.junit.Assert.assertNull(numberFormat4);
    }

    @Test
    public void test0030() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0030");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.text.NumberFormat numberFormat3 = fractionFormat2.getNumeratorFormat();
        java.text.NumberFormat numberFormat4 = fractionFormat2.getNumeratorFormat();
        java.text.NumberFormat numberFormat5 = null;
        java.text.NumberFormat numberFormat6 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat7 = new org.apache.commons.math.fraction.FractionFormat(numberFormat5, numberFormat6);
        java.lang.Object obj8 = fractionFormat7.clone();
        java.lang.StringBuffer stringBuffer9 = null;
        java.text.FieldPosition fieldPosition10 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer11 = fractionFormat2.format(obj8, stringBuffer9, fieldPosition10);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot format given object as a fraction");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(numberFormat3);
        org.junit.Assert.assertNull(numberFormat4);
        org.junit.Assert.assertNotNull(obj8);
    }

    @Test
    public void test0031() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0031");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.text.NumberFormat numberFormat3 = fractionFormat2.getDenominatorFormat();
        java.text.NumberFormat numberFormat4 = fractionFormat2.getNumeratorFormat();
        java.text.NumberFormat numberFormat5 = fractionFormat2.getNumeratorFormat();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj7 = fractionFormat2.parseObject("");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(numberFormat3);
        org.junit.Assert.assertNull(numberFormat4);
        org.junit.Assert.assertNull(numberFormat5);
    }

    @Test
    public void test0032() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0032");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.text.NumberFormat numberFormat3 = fractionFormat2.getDenominatorFormat();
        // The following exception was thrown during execution in test generation
        try {
            java.text.AttributedCharacterIterator attributedCharacterIterator5 = numberFormat3.formatToCharacterIterator((java.lang.Object) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(numberFormat3);
    }

    @Test
    public void test0033() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0033");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = new org.apache.commons.math.fraction.FractionFormat();
        java.lang.String str2 = fractionFormat0.format((java.lang.Object) 0);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj4 = fractionFormat0.parseObject("");
            org.junit.Assert.fail("Expected exception of type java.text.ParseException; message: Format.parseObject(String) failed");
        } catch (java.text.ParseException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "0 / 1" + "'", str2, "0 / 1");
    }

    @Test
    public void test0034() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0034");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.lang.StringBuffer stringBuffer4 = null;
        java.text.FieldPosition fieldPosition5 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer6 = fractionFormat2.format((java.lang.Object) (byte) 10, stringBuffer4, fieldPosition5);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test0035() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0035");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = new org.apache.commons.math.fraction.FractionFormat();
        java.text.NumberFormat numberFormat1 = null;
        java.text.NumberFormat numberFormat2 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat3 = new org.apache.commons.math.fraction.FractionFormat(numberFormat1, numberFormat2);
        java.text.NumberFormat numberFormat4 = fractionFormat3.getDenominatorFormat();
        java.text.NumberFormat numberFormat5 = fractionFormat3.getNumeratorFormat();
        java.text.NumberFormat numberFormat6 = fractionFormat3.getNumeratorFormat();
        // The following exception was thrown during execution in test generation
        try {
            java.text.AttributedCharacterIterator attributedCharacterIterator7 = fractionFormat0.formatToCharacterIterator((java.lang.Object) numberFormat6);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot format given object as a fraction");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(numberFormat4);
        org.junit.Assert.assertNull(numberFormat5);
        org.junit.Assert.assertNull(numberFormat6);
    }

    @Test
    public void test0036() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0036");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = new org.apache.commons.math.fraction.FractionFormat();
        java.text.NumberFormat numberFormat1 = null;
        java.text.NumberFormat numberFormat2 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat3 = new org.apache.commons.math.fraction.FractionFormat(numberFormat1, numberFormat2);
        java.text.NumberFormat numberFormat4 = fractionFormat3.getDenominatorFormat();
        java.text.NumberFormat numberFormat5 = fractionFormat3.getNumeratorFormat();
        // The following exception was thrown during execution in test generation
        try {
            java.text.AttributedCharacterIterator attributedCharacterIterator6 = fractionFormat0.formatToCharacterIterator((java.lang.Object) numberFormat5);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot format given object as a fraction");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(numberFormat4);
        org.junit.Assert.assertNull(numberFormat5);
    }

    @Test
    public void test0037() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0037");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.text.NumberFormat numberFormat3 = fractionFormat2.getNumeratorFormat();
        java.lang.Object obj4 = fractionFormat2.clone();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.fraction.Fraction fraction6 = fractionFormat2.parse("0 / 1");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(numberFormat3);
        org.junit.Assert.assertNotNull(obj4);
    }

    @Test
    public void test0038() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0038");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.text.NumberFormat numberFormat3 = fractionFormat2.getNumeratorFormat();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj5 = fractionFormat2.parseObject("hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(numberFormat3);
    }

    @Test
    public void test0039() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0039");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.text.NumberFormat numberFormat3 = fractionFormat2.getNumeratorFormat();
        java.text.NumberFormat numberFormat4 = fractionFormat2.getNumeratorFormat();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass5 = numberFormat4.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(numberFormat3);
        org.junit.Assert.assertNull(numberFormat4);
    }

    @Test
    public void test0040() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0040");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.fraction.Fraction fraction4 = fractionFormat2.parse("0 / 1");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test0041() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0041");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.text.NumberFormat numberFormat3 = fractionFormat2.getDenominatorFormat();
        java.text.NumberFormat numberFormat4 = fractionFormat2.getNumeratorFormat();
        java.text.NumberFormat numberFormat5 = fractionFormat2.getNumeratorFormat();
        java.lang.StringBuffer stringBuffer7 = null;
        java.text.FieldPosition fieldPosition8 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer9 = fractionFormat2.format((java.lang.Object) 'a', stringBuffer7, fieldPosition8);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot format given object as a fraction");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(numberFormat3);
        org.junit.Assert.assertNull(numberFormat4);
        org.junit.Assert.assertNull(numberFormat5);
    }

    @Test
    public void test0042() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0042");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.text.NumberFormat numberFormat3 = fractionFormat2.getNumeratorFormat();
        java.text.NumberFormat numberFormat4 = fractionFormat2.getNumeratorFormat();
        java.text.NumberFormat numberFormat5 = fractionFormat2.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat6 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.Fraction fraction8 = fractionFormat6.parse("0 / 1");
        java.lang.StringBuffer stringBuffer9 = null;
        java.text.FieldPosition fieldPosition10 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer11 = fractionFormat2.format(fraction8, stringBuffer9, fieldPosition10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(numberFormat3);
        org.junit.Assert.assertNull(numberFormat4);
        org.junit.Assert.assertNull(numberFormat5);
        org.junit.Assert.assertNotNull(fractionFormat6);
        org.junit.Assert.assertNotNull(fraction8);
    }

    @Test
    public void test0043() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0043");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.text.NumberFormat numberFormat3 = fractionFormat2.getNumeratorFormat();
        java.text.NumberFormat numberFormat4 = fractionFormat2.getNumeratorFormat();
        java.text.NumberFormat numberFormat5 = fractionFormat2.getNumeratorFormat();
        java.text.ParsePosition parsePosition7 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj8 = fractionFormat2.parseObject("", parsePosition7);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(numberFormat3);
        org.junit.Assert.assertNull(numberFormat4);
        org.junit.Assert.assertNull(numberFormat5);
    }

    @Test
    public void test0044() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0044");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.text.NumberFormat numberFormat3 = fractionFormat2.getDenominatorFormat();
        java.text.NumberFormat numberFormat4 = fractionFormat2.getNumeratorFormat();
        java.text.ParsePosition parsePosition6 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.fraction.Fraction fraction7 = fractionFormat2.parse("", parsePosition6);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(numberFormat3);
        org.junit.Assert.assertNull(numberFormat4);
    }

    @Test
    public void test0045() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0045");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.Fraction fraction2 = fractionFormat0.parse("0 / 1");
        java.text.ParsePosition parsePosition4 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.fraction.Fraction fraction5 = fractionFormat0.parse("0 / 1", parsePosition4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(fraction2);
    }

    @Test
    public void test0046() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0046");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.text.ParsePosition parsePosition4 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj5 = fractionFormat2.parseObject("hi!", parsePosition4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test0047() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0047");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.text.NumberFormat numberFormat3 = fractionFormat2.getNumeratorFormat();
        java.lang.Object obj4 = fractionFormat2.clone();
        java.text.NumberFormat numberFormat5 = null;
        // The following exception was thrown during execution in test generation
        try {
            fractionFormat2.setNumeratorFormat(numberFormat5);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: numerator format can not be null.");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(numberFormat3);
        org.junit.Assert.assertNotNull(obj4);
    }

    @Test
    public void test0048() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0048");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.text.NumberFormat numberFormat3 = fractionFormat2.getDenominatorFormat();
        java.text.NumberFormat numberFormat4 = fractionFormat2.getNumeratorFormat();
        java.text.NumberFormat numberFormat5 = fractionFormat2.getNumeratorFormat();
        java.text.NumberFormat numberFormat6 = fractionFormat2.getDenominatorFormat();
        java.text.ParsePosition parsePosition8 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj9 = fractionFormat2.parseObject("0 / 1", parsePosition8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(numberFormat3);
        org.junit.Assert.assertNull(numberFormat4);
        org.junit.Assert.assertNull(numberFormat5);
        org.junit.Assert.assertNull(numberFormat6);
    }

    @Test
    public void test0049() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0049");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = new org.apache.commons.math.fraction.FractionFormat();
        java.lang.String str2 = fractionFormat0.format((java.lang.Object) 0);
        org.apache.commons.math.fraction.FractionFormat fractionFormat3 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj5 = fractionFormat3.parseObject("0 / 1");
        java.lang.StringBuffer stringBuffer6 = null;
        java.text.FieldPosition fieldPosition7 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer8 = fractionFormat0.format((java.lang.Object) fractionFormat3, stringBuffer6, fieldPosition7);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot format given object as a fraction");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "0 / 1" + "'", str2, "0 / 1");
        org.junit.Assert.assertNotNull(fractionFormat3);
        org.junit.Assert.assertNotNull(obj5);
    }

    @Test
    public void test0050() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0050");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = new org.apache.commons.math.fraction.FractionFormat();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.fraction.Fraction fraction2 = fractionFormat0.parse("");
            org.junit.Assert.fail("Expected exception of type java.text.ParseException; message: Unparseable fraction number: \"\"");
        } catch (java.text.ParseException e) {
        // Expected exception.
        }
    }

    @Test
    public void test0051() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0051");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.text.NumberFormat numberFormat3 = fractionFormat2.getDenominatorFormat();
        java.text.NumberFormat numberFormat4 = fractionFormat2.getNumeratorFormat();
        java.text.NumberFormat numberFormat5 = fractionFormat2.getNumeratorFormat();
        java.text.NumberFormat numberFormat6 = fractionFormat2.getDenominatorFormat();
        // The following exception was thrown during execution in test generation
        try {
            java.text.AttributedCharacterIterator attributedCharacterIterator8 = numberFormat6.formatToCharacterIterator((java.lang.Object) (byte) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(numberFormat3);
        org.junit.Assert.assertNull(numberFormat4);
        org.junit.Assert.assertNull(numberFormat5);
        org.junit.Assert.assertNull(numberFormat6);
    }

    @Test
    public void test0052() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0052");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat5 = null;
        java.text.NumberFormat numberFormat6 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat7 = new org.apache.commons.math.fraction.FractionFormat(numberFormat5, numberFormat6);
        java.text.NumberFormat numberFormat8 = fractionFormat7.getDenominatorFormat();
        java.text.NumberFormat numberFormat9 = fractionFormat7.getNumeratorFormat();
        java.text.NumberFormat numberFormat10 = fractionFormat7.getNumeratorFormat();
        java.text.NumberFormat numberFormat11 = fractionFormat7.getDenominatorFormat();
        java.lang.Object obj12 = fractionFormat7.clone();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str13 = fractionFormat0.format((java.lang.Object) fractionFormat7);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot format given object as a fraction");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNull(numberFormat8);
        org.junit.Assert.assertNull(numberFormat9);
        org.junit.Assert.assertNull(numberFormat10);
        org.junit.Assert.assertNull(numberFormat11);
        org.junit.Assert.assertNotNull(obj12);
    }

    @Test
    public void test0053() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0053");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.text.NumberFormat numberFormat3 = fractionFormat2.getNumeratorFormat();
        java.text.NumberFormat numberFormat4 = fractionFormat2.getNumeratorFormat();
        java.text.NumberFormat numberFormat5 = fractionFormat2.getDenominatorFormat();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass6 = numberFormat5.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(numberFormat3);
        org.junit.Assert.assertNull(numberFormat4);
        org.junit.Assert.assertNull(numberFormat5);
    }

    @Test
    public void test0054() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0054");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.text.NumberFormat numberFormat3 = fractionFormat2.getDenominatorFormat();
        java.text.NumberFormat numberFormat4 = fractionFormat2.getNumeratorFormat();
        java.text.NumberFormat numberFormat5 = fractionFormat2.getNumeratorFormat();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.fraction.Fraction fraction7 = fractionFormat2.parse("hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(numberFormat3);
        org.junit.Assert.assertNull(numberFormat4);
        org.junit.Assert.assertNull(numberFormat5);
    }

    @Test
    public void test0055() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0055");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.text.NumberFormat numberFormat3 = fractionFormat2.getNumeratorFormat();
        java.lang.Object obj4 = fractionFormat2.clone();
        java.lang.StringBuffer stringBuffer6 = null;
        java.text.FieldPosition fieldPosition7 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer8 = fractionFormat2.format((java.lang.Object) ' ', stringBuffer6, fieldPosition7);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot format given object as a fraction");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(numberFormat3);
        org.junit.Assert.assertNotNull(obj4);
    }

    @Test
    public void test0056() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0056");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = new org.apache.commons.math.fraction.FractionFormat();
        java.lang.String str2 = fractionFormat0.format((java.lang.Object) 0);
        org.apache.commons.math.fraction.FractionFormat fractionFormat3 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.Fraction fraction5 = fractionFormat3.parse("0 / 1");
        java.lang.String str6 = org.apache.commons.math.fraction.FractionFormat.formatFraction(fraction5);
        java.lang.String str7 = org.apache.commons.math.fraction.FractionFormat.formatFraction(fraction5);
        java.lang.String str8 = org.apache.commons.math.fraction.FractionFormat.formatFraction(fraction5);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str9 = fractionFormat0.format((java.lang.Object) str8);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot format given object as a fraction");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "0 / 1" + "'", str2, "0 / 1");
        org.junit.Assert.assertNotNull(fractionFormat3);
        org.junit.Assert.assertNotNull(fraction5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "0 / 1" + "'", str6, "0 / 1");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "0 / 1" + "'", str7, "0 / 1");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "0 / 1" + "'", str8, "0 / 1");
    }

    @Test
    public void test0057() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0057");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.text.NumberFormat numberFormat3 = fractionFormat2.getDenominatorFormat();
        java.text.NumberFormat numberFormat4 = fractionFormat2.getNumeratorFormat();
        java.text.NumberFormat numberFormat5 = fractionFormat2.getNumeratorFormat();
        java.text.NumberFormat numberFormat6 = fractionFormat2.getDenominatorFormat();
        java.text.ParsePosition parsePosition8 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.fraction.Fraction fraction9 = fractionFormat2.parse("", parsePosition8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(numberFormat3);
        org.junit.Assert.assertNull(numberFormat4);
        org.junit.Assert.assertNull(numberFormat5);
        org.junit.Assert.assertNull(numberFormat6);
    }

    @Test
    public void test0058() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0058");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator2 = fractionFormat0.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat3 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat4 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator6 = fractionFormat4.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat7 = fractionFormat4.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat8 = new org.apache.commons.math.fraction.FractionFormat(numberFormat3, numberFormat7);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj10 = numberFormat7.parseObject("");
            org.junit.Assert.fail("Expected exception of type java.text.ParseException; message: Format.parseObject(String) failed");
        } catch (java.text.ParseException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(attributedCharacterIterator2);
        org.junit.Assert.assertNotNull(numberFormat3);
        org.junit.Assert.assertNotNull(fractionFormat4);
        org.junit.Assert.assertNotNull(attributedCharacterIterator6);
        org.junit.Assert.assertNotNull(numberFormat7);
    }

    @Test
    public void test0059() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0059");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.text.NumberFormat numberFormat3 = fractionFormat2.getDenominatorFormat();
        java.text.NumberFormat numberFormat4 = fractionFormat2.getNumeratorFormat();
        java.text.ParsePosition parsePosition6 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.fraction.Fraction fraction7 = fractionFormat2.parse("0 / 1", parsePosition6);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(numberFormat3);
        org.junit.Assert.assertNull(numberFormat4);
    }

    @Test
    public void test0060() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0060");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.text.NumberFormat numberFormat3 = fractionFormat2.getNumeratorFormat();
        java.text.NumberFormat numberFormat4 = fractionFormat2.getNumeratorFormat();
        java.text.NumberFormat numberFormat5 = fractionFormat2.getNumeratorFormat();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.fraction.Fraction fraction7 = fractionFormat2.parse("0 / 1");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(numberFormat3);
        org.junit.Assert.assertNull(numberFormat4);
        org.junit.Assert.assertNull(numberFormat5);
    }

    @Test
    public void test0061() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0061");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.text.NumberFormat numberFormat3 = fractionFormat2.getNumeratorFormat();
        java.lang.Object obj4 = fractionFormat2.clone();
        java.lang.StringBuffer stringBuffer6 = null;
        java.text.FieldPosition fieldPosition7 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer8 = fractionFormat2.format((java.lang.Object) 0.0f, stringBuffer6, fieldPosition7);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(numberFormat3);
        org.junit.Assert.assertNotNull(obj4);
    }

    @Test
    public void test0062() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0062");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator2 = fractionFormat0.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat3 = fractionFormat0.getDenominatorFormat();
        java.text.ParsePosition parsePosition5 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.fraction.Fraction fraction6 = fractionFormat0.parse("", parsePosition5);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(attributedCharacterIterator2);
        org.junit.Assert.assertNotNull(numberFormat3);
    }

    @Test
    public void test0063() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0063");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat5 = fractionFormat0.getNumeratorFormat();
        java.text.NumberFormat numberFormat6 = null;
        java.text.NumberFormat numberFormat7 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat8 = new org.apache.commons.math.fraction.FractionFormat(numberFormat6, numberFormat7);
        java.text.NumberFormat numberFormat9 = fractionFormat8.getNumeratorFormat();
        java.lang.Object obj10 = fractionFormat8.clone();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str11 = numberFormat5.format((java.lang.Object) fractionFormat8);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot format given Object as a Number");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNull(numberFormat9);
        org.junit.Assert.assertNotNull(obj10);
    }

    @Test
    public void test0064() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0064");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator2 = fractionFormat0.formatToCharacterIterator((java.lang.Object) (byte) 100);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj4 = fractionFormat0.parseObject("hi!");
            org.junit.Assert.fail("Expected exception of type java.text.ParseException; message: Format.parseObject(String) failed");
        } catch (java.text.ParseException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(attributedCharacterIterator2);
    }

    @Test
    public void test0065() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0065");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.text.NumberFormat numberFormat3 = fractionFormat2.getNumeratorFormat();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str5 = numberFormat3.format((java.lang.Object) true);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(numberFormat3);
    }

    @Test
    public void test0066() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0066");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat5 = fractionFormat0.getNumeratorFormat();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj7 = numberFormat5.parseObject("hi!");
            org.junit.Assert.fail("Expected exception of type java.text.ParseException; message: Format.parseObject(String) failed");
        } catch (java.text.ParseException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(numberFormat5);
    }

    @Test
    public void test0067() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0067");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.text.NumberFormat numberFormat3 = fractionFormat2.getDenominatorFormat();
        java.text.NumberFormat numberFormat4 = fractionFormat2.getNumeratorFormat();
        java.text.NumberFormat numberFormat5 = fractionFormat2.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat6 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator8 = fractionFormat6.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat9 = fractionFormat6.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat10 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator12 = fractionFormat10.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat13 = fractionFormat10.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat14 = new org.apache.commons.math.fraction.FractionFormat(numberFormat9, numberFormat13);
        fractionFormat2.setNumeratorFormat(numberFormat9);
        java.lang.Class<?> wildcardClass16 = fractionFormat2.getClass();
        org.junit.Assert.assertNull(numberFormat3);
        org.junit.Assert.assertNull(numberFormat4);
        org.junit.Assert.assertNull(numberFormat5);
        org.junit.Assert.assertNotNull(fractionFormat6);
        org.junit.Assert.assertNotNull(attributedCharacterIterator8);
        org.junit.Assert.assertNotNull(numberFormat9);
        org.junit.Assert.assertNotNull(fractionFormat10);
        org.junit.Assert.assertNotNull(attributedCharacterIterator12);
        org.junit.Assert.assertNotNull(numberFormat13);
        org.junit.Assert.assertNotNull(wildcardClass16);
    }

    @Test
    public void test0068() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0068");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator2 = fractionFormat0.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat3 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat4 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator6 = fractionFormat4.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat7 = fractionFormat4.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat8 = new org.apache.commons.math.fraction.FractionFormat(numberFormat3, numberFormat7);
        org.apache.commons.math.fraction.FractionFormat fractionFormat9 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.Fraction fraction11 = fractionFormat9.parse("0 / 1");
        java.lang.String str12 = org.apache.commons.math.fraction.FractionFormat.formatFraction(fraction11);
        java.lang.String str13 = org.apache.commons.math.fraction.FractionFormat.formatFraction(fraction11);
        java.lang.String str14 = org.apache.commons.math.fraction.FractionFormat.formatFraction(fraction11);
        java.lang.StringBuffer stringBuffer15 = null;
        java.text.FieldPosition fieldPosition16 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer17 = fractionFormat8.format(fraction11, stringBuffer15, fieldPosition16);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(attributedCharacterIterator2);
        org.junit.Assert.assertNotNull(numberFormat3);
        org.junit.Assert.assertNotNull(fractionFormat4);
        org.junit.Assert.assertNotNull(attributedCharacterIterator6);
        org.junit.Assert.assertNotNull(numberFormat7);
        org.junit.Assert.assertNotNull(fractionFormat9);
        org.junit.Assert.assertNotNull(fraction11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "0 / 1" + "'", str12, "0 / 1");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "0 / 1" + "'", str13, "0 / 1");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "0 / 1" + "'", str14, "0 / 1");
    }

    @Test
    public void test0069() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0069");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator2 = fractionFormat0.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat3 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat4 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator6 = fractionFormat4.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat7 = fractionFormat4.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat8 = new org.apache.commons.math.fraction.FractionFormat(numberFormat3, numberFormat7);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.fraction.Fraction fraction10 = fractionFormat8.parse("");
            org.junit.Assert.fail("Expected exception of type java.text.ParseException; message: Unparseable fraction number: \"\"");
        } catch (java.text.ParseException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(attributedCharacterIterator2);
        org.junit.Assert.assertNotNull(numberFormat3);
        org.junit.Assert.assertNotNull(fractionFormat4);
        org.junit.Assert.assertNotNull(attributedCharacterIterator6);
        org.junit.Assert.assertNotNull(numberFormat7);
    }

    @Test
    public void test0070() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0070");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj6 = fractionFormat0.parseObject("0 / 1");
        java.text.ParsePosition parsePosition8 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.fraction.Fraction fraction9 = fractionFormat0.parse("hi!", parsePosition8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(obj6);
    }

    @Test
    public void test0071() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0071");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator2 = fractionFormat0.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat3 = fractionFormat0.getDenominatorFormat();
        java.text.ParsePosition parsePosition5 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.fraction.Fraction fraction6 = fractionFormat0.parse("0 / 1", parsePosition5);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(attributedCharacterIterator2);
        org.junit.Assert.assertNotNull(numberFormat3);
    }

    @Test
    public void test0072() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0072");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat1 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.Fraction fraction3 = fractionFormat1.parse("0 / 1");
        java.lang.String str4 = org.apache.commons.math.fraction.FractionFormat.formatFraction(fraction3);
        java.lang.StringBuffer stringBuffer5 = null;
        java.text.FieldPosition fieldPosition6 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer7 = fractionFormat0.format(fraction3, stringBuffer5, fieldPosition6);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(fractionFormat1);
        org.junit.Assert.assertNotNull(fraction3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "0 / 1" + "'", str4, "0 / 1");
    }

    @Test
    public void test0073() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0073");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Class<?> wildcardClass3 = obj2.getClass();
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(wildcardClass3);
    }

    @Test
    public void test0074() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0074");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = new org.apache.commons.math.fraction.FractionFormat();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj2 = fractionFormat0.parseObject("");
            org.junit.Assert.fail("Expected exception of type java.text.ParseException; message: Format.parseObject(String) failed");
        } catch (java.text.ParseException e) {
        // Expected exception.
        }
    }

    @Test
    public void test0075() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0075");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.text.NumberFormat numberFormat3 = fractionFormat2.getDenominatorFormat();
        java.text.ParsePosition parsePosition5 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj6 = fractionFormat2.parseObject("", parsePosition5);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(numberFormat3);
    }

    @Test
    public void test0076() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0076");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat5 = fractionFormat0.getNumeratorFormat();
        java.text.NumberFormat numberFormat6 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat7 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj9 = fractionFormat7.parseObject("0 / 1");
        java.lang.Object obj11 = fractionFormat7.parseObject("0 / 1");
        java.text.NumberFormat numberFormat12 = fractionFormat7.getNumeratorFormat();
        java.text.NumberFormat numberFormat13 = fractionFormat7.getNumeratorFormat();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str14 = numberFormat6.format((java.lang.Object) fractionFormat7);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot format given Object as a Number");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertNotNull(fractionFormat7);
        org.junit.Assert.assertNotNull(obj9);
        org.junit.Assert.assertNotNull(obj11);
        org.junit.Assert.assertNotNull(numberFormat12);
        org.junit.Assert.assertNotNull(numberFormat13);
    }

    @Test
    public void test0077() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0077");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.text.NumberFormat numberFormat3 = fractionFormat2.getDenominatorFormat();
        java.text.NumberFormat numberFormat4 = fractionFormat2.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator7 = fractionFormat5.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat8 = fractionFormat5.getDenominatorFormat();
        fractionFormat2.setNumeratorFormat(numberFormat8);
        org.apache.commons.math.fraction.FractionFormat fractionFormat10 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj12 = fractionFormat10.parseObject("0 / 1");
        java.lang.Object obj14 = fractionFormat10.parseObject("0 / 1");
        java.text.NumberFormat numberFormat15 = fractionFormat10.getNumeratorFormat();
        fractionFormat2.setDenominatorFormat(numberFormat15);
        java.text.NumberFormat numberFormat17 = null;
        java.text.NumberFormat numberFormat18 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat19 = new org.apache.commons.math.fraction.FractionFormat(numberFormat17, numberFormat18);
        java.text.NumberFormat numberFormat20 = fractionFormat19.getDenominatorFormat();
        java.text.NumberFormat numberFormat21 = fractionFormat19.getNumeratorFormat();
        java.text.NumberFormat numberFormat22 = fractionFormat19.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat23 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator25 = fractionFormat23.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat26 = fractionFormat23.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat27 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator29 = fractionFormat27.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat30 = fractionFormat27.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat31 = new org.apache.commons.math.fraction.FractionFormat(numberFormat26, numberFormat30);
        fractionFormat19.setNumeratorFormat(numberFormat26);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str33 = numberFormat15.format((java.lang.Object) numberFormat26);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot format given Object as a Number");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(numberFormat3);
        org.junit.Assert.assertNull(numberFormat4);
        org.junit.Assert.assertNotNull(fractionFormat5);
        org.junit.Assert.assertNotNull(attributedCharacterIterator7);
        org.junit.Assert.assertNotNull(numberFormat8);
        org.junit.Assert.assertNotNull(fractionFormat10);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertNotNull(numberFormat15);
        org.junit.Assert.assertNull(numberFormat20);
        org.junit.Assert.assertNull(numberFormat21);
        org.junit.Assert.assertNull(numberFormat22);
        org.junit.Assert.assertNotNull(fractionFormat23);
        org.junit.Assert.assertNotNull(attributedCharacterIterator25);
        org.junit.Assert.assertNotNull(numberFormat26);
        org.junit.Assert.assertNotNull(fractionFormat27);
        org.junit.Assert.assertNotNull(attributedCharacterIterator29);
        org.junit.Assert.assertNotNull(numberFormat30);
    }

    @Test
    public void test0078() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0078");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.text.NumberFormat numberFormat3 = fractionFormat2.getDenominatorFormat();
        java.text.NumberFormat numberFormat4 = fractionFormat2.getNumeratorFormat();
        java.text.NumberFormat numberFormat5 = fractionFormat2.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat6 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator8 = fractionFormat6.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat9 = fractionFormat6.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat10 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator12 = fractionFormat10.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat13 = fractionFormat10.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat14 = new org.apache.commons.math.fraction.FractionFormat(numberFormat9, numberFormat13);
        fractionFormat2.setNumeratorFormat(numberFormat9);
        java.text.ParsePosition parsePosition17 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj18 = fractionFormat2.parseObject("hi!", parsePosition17);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(numberFormat3);
        org.junit.Assert.assertNull(numberFormat4);
        org.junit.Assert.assertNull(numberFormat5);
        org.junit.Assert.assertNotNull(fractionFormat6);
        org.junit.Assert.assertNotNull(attributedCharacterIterator8);
        org.junit.Assert.assertNotNull(numberFormat9);
        org.junit.Assert.assertNotNull(fractionFormat10);
        org.junit.Assert.assertNotNull(attributedCharacterIterator12);
        org.junit.Assert.assertNotNull(numberFormat13);
    }

    @Test
    public void test0079() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0079");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat5 = null;
        java.text.NumberFormat numberFormat6 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat7 = new org.apache.commons.math.fraction.FractionFormat(numberFormat5, numberFormat6);
        java.text.NumberFormat numberFormat8 = fractionFormat7.getDenominatorFormat();
        java.text.NumberFormat numberFormat9 = fractionFormat7.getNumeratorFormat();
        java.text.NumberFormat numberFormat10 = fractionFormat7.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator13 = fractionFormat11.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat14 = fractionFormat11.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat15 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator17 = fractionFormat15.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat18 = fractionFormat15.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat19 = new org.apache.commons.math.fraction.FractionFormat(numberFormat14, numberFormat18);
        fractionFormat7.setNumeratorFormat(numberFormat14);
        java.lang.StringBuffer stringBuffer21 = null;
        java.text.FieldPosition fieldPosition22 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer23 = fractionFormat0.format((java.lang.Object) numberFormat14, stringBuffer21, fieldPosition22);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot format given object as a fraction");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNull(numberFormat8);
        org.junit.Assert.assertNull(numberFormat9);
        org.junit.Assert.assertNull(numberFormat10);
        org.junit.Assert.assertNotNull(fractionFormat11);
        org.junit.Assert.assertNotNull(attributedCharacterIterator13);
        org.junit.Assert.assertNotNull(numberFormat14);
        org.junit.Assert.assertNotNull(fractionFormat15);
        org.junit.Assert.assertNotNull(attributedCharacterIterator17);
        org.junit.Assert.assertNotNull(numberFormat18);
    }

    @Test
    public void test0080() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0080");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.lang.Object obj3 = fractionFormat2.clone();
        java.text.ParsePosition parsePosition5 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj6 = fractionFormat2.parseObject("0 / 1", parsePosition5);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(obj3);
    }

    @Test
    public void test0081() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0081");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat5 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat6 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj8 = fractionFormat6.parseObject("0 / 1");
        java.text.NumberFormat numberFormat9 = fractionFormat6.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat10 = new org.apache.commons.math.fraction.FractionFormat(numberFormat5, numberFormat9);
        java.text.NumberFormat numberFormat11 = fractionFormat10.getNumeratorFormat();
        java.text.ParsePosition parsePosition13 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.fraction.Fraction fraction14 = fractionFormat10.parse("0 / 1", parsePosition13);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(fractionFormat6);
        org.junit.Assert.assertNotNull(obj8);
        org.junit.Assert.assertNotNull(numberFormat9);
        org.junit.Assert.assertNotNull(numberFormat11);
    }

    @Test
    public void test0082() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0082");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.text.NumberFormat numberFormat3 = fractionFormat2.getNumeratorFormat();
        java.lang.Object obj4 = fractionFormat2.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj7 = fractionFormat5.parseObject("0 / 1");
        java.lang.Object obj9 = fractionFormat5.parseObject("0 / 1");
        java.text.NumberFormat numberFormat10 = fractionFormat5.getNumeratorFormat();
        java.text.NumberFormat numberFormat11 = fractionFormat5.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat12 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator14 = fractionFormat12.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat15 = fractionFormat12.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat16 = new org.apache.commons.math.fraction.FractionFormat(numberFormat11, numberFormat15);
        // The following exception was thrown during execution in test generation
        try {
            java.text.AttributedCharacterIterator attributedCharacterIterator17 = fractionFormat2.formatToCharacterIterator((java.lang.Object) numberFormat15);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot format given object as a fraction");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(numberFormat3);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(fractionFormat5);
        org.junit.Assert.assertNotNull(obj7);
        org.junit.Assert.assertNotNull(obj9);
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertNotNull(numberFormat11);
        org.junit.Assert.assertNotNull(fractionFormat12);
        org.junit.Assert.assertNotNull(attributedCharacterIterator14);
        org.junit.Assert.assertNotNull(numberFormat15);
    }

    @Test
    public void test0083() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0083");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.text.NumberFormat numberFormat3 = fractionFormat2.getDenominatorFormat();
        java.text.NumberFormat numberFormat4 = fractionFormat2.getNumeratorFormat();
        java.text.NumberFormat numberFormat5 = fractionFormat2.getNumeratorFormat();
        java.text.NumberFormat numberFormat6 = fractionFormat2.getDenominatorFormat();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj8 = fractionFormat2.parseObject("");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(numberFormat3);
        org.junit.Assert.assertNull(numberFormat4);
        org.junit.Assert.assertNull(numberFormat5);
        org.junit.Assert.assertNull(numberFormat6);
    }

    @Test
    public void test0084() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0084");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.text.NumberFormat numberFormat3 = fractionFormat2.getNumeratorFormat();
        java.lang.Object obj4 = fractionFormat2.clone();
        java.text.ParsePosition parsePosition6 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.fraction.Fraction fraction7 = fractionFormat2.parse("", parsePosition6);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(numberFormat3);
        org.junit.Assert.assertNotNull(obj4);
    }

    @Test
    public void test0085() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0085");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.text.NumberFormat numberFormat3 = fractionFormat2.getDenominatorFormat();
        java.text.NumberFormat numberFormat4 = fractionFormat2.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator7 = fractionFormat5.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat8 = fractionFormat5.getDenominatorFormat();
        fractionFormat2.setNumeratorFormat(numberFormat8);
        java.lang.Object obj10 = numberFormat8.clone();
        java.lang.String str12 = numberFormat8.format((java.lang.Object) (short) 10);
        org.apache.commons.math.fraction.FractionFormat fractionFormat13 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator15 = fractionFormat13.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat16 = fractionFormat13.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat17 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator19 = fractionFormat17.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat20 = fractionFormat17.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat21 = new org.apache.commons.math.fraction.FractionFormat(numberFormat16, numberFormat20);
        org.apache.commons.math.fraction.FractionFormat fractionFormat22 = new org.apache.commons.math.fraction.FractionFormat(numberFormat8, numberFormat16);
        org.apache.commons.math.fraction.FractionFormat fractionFormat23 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj25 = fractionFormat23.parseObject("0 / 1");
        java.lang.Object obj27 = fractionFormat23.parseObject("0 / 1");
        java.text.NumberFormat numberFormat28 = fractionFormat23.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat29 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj31 = fractionFormat29.parseObject("0 / 1");
        java.text.NumberFormat numberFormat32 = fractionFormat29.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat33 = new org.apache.commons.math.fraction.FractionFormat(numberFormat28, numberFormat32);
        java.text.NumberFormat numberFormat34 = fractionFormat33.getNumeratorFormat();
        java.lang.StringBuffer stringBuffer35 = null;
        java.text.FieldPosition fieldPosition36 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer37 = fractionFormat22.format((java.lang.Object) fractionFormat33, stringBuffer35, fieldPosition36);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot format given object as a fraction");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(numberFormat3);
        org.junit.Assert.assertNull(numberFormat4);
        org.junit.Assert.assertNotNull(fractionFormat5);
        org.junit.Assert.assertNotNull(attributedCharacterIterator7);
        org.junit.Assert.assertNotNull(numberFormat8);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "10" + "'", str12, "10");
        org.junit.Assert.assertNotNull(fractionFormat13);
        org.junit.Assert.assertNotNull(attributedCharacterIterator15);
        org.junit.Assert.assertNotNull(numberFormat16);
        org.junit.Assert.assertNotNull(fractionFormat17);
        org.junit.Assert.assertNotNull(attributedCharacterIterator19);
        org.junit.Assert.assertNotNull(numberFormat20);
        org.junit.Assert.assertNotNull(fractionFormat23);
        org.junit.Assert.assertNotNull(obj25);
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertNotNull(numberFormat28);
        org.junit.Assert.assertNotNull(fractionFormat29);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertNotNull(numberFormat32);
        org.junit.Assert.assertNotNull(numberFormat34);
    }

    @Test
    public void test0086() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0086");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = new org.apache.commons.math.fraction.FractionFormat();
        java.text.ParsePosition parsePosition2 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj3 = fractionFormat0.parseObject("0 / 1", parsePosition2);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test0087() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0087");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.text.NumberFormat numberFormat3 = fractionFormat2.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat4 = new org.apache.commons.math.fraction.FractionFormat();
        java.lang.String str6 = fractionFormat4.format((java.lang.Object) 0);
        java.lang.String str8 = fractionFormat4.format((java.lang.Object) (-1));
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str9 = fractionFormat2.format((java.lang.Object) (-1));
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(numberFormat3);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "0 / 1" + "'", str6, "0 / 1");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "-1 / 1" + "'", str8, "-1 / 1");
    }

    @Test
    public void test0088() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0088");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.text.NumberFormat numberFormat3 = fractionFormat2.getDenominatorFormat();
        java.text.NumberFormat numberFormat4 = fractionFormat2.getNumeratorFormat();
        java.text.NumberFormat numberFormat5 = fractionFormat2.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat6 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.Fraction fraction8 = fractionFormat6.parse("0 / 1");
        java.lang.String str9 = org.apache.commons.math.fraction.FractionFormat.formatFraction(fraction8);
        java.lang.StringBuffer stringBuffer10 = null;
        java.text.FieldPosition fieldPosition11 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer12 = fractionFormat2.format(fraction8, stringBuffer10, fieldPosition11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(numberFormat3);
        org.junit.Assert.assertNull(numberFormat4);
        org.junit.Assert.assertNull(numberFormat5);
        org.junit.Assert.assertNotNull(fractionFormat6);
        org.junit.Assert.assertNotNull(fraction8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "0 / 1" + "'", str9, "0 / 1");
    }

    @Test
    public void test0089() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0089");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat5 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat6 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj8 = fractionFormat6.parseObject("0 / 1");
        java.text.NumberFormat numberFormat9 = fractionFormat6.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat10 = new org.apache.commons.math.fraction.FractionFormat(numberFormat5, numberFormat9);
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj13 = fractionFormat11.parseObject("0 / 1");
        java.lang.Object obj15 = fractionFormat11.parseObject("0 / 1");
        java.text.NumberFormat numberFormat16 = fractionFormat11.getNumeratorFormat();
        fractionFormat10.setDenominatorFormat(numberFormat16);
        org.apache.commons.math.fraction.FractionFormat fractionFormat18 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.Fraction fraction20 = fractionFormat18.parse("0 / 1");
        java.lang.String str21 = org.apache.commons.math.fraction.FractionFormat.formatFraction(fraction20);
        java.lang.String str22 = org.apache.commons.math.fraction.FractionFormat.formatFraction(fraction20);
        java.lang.StringBuffer stringBuffer23 = null;
        java.text.FieldPosition fieldPosition24 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer25 = fractionFormat10.format(fraction20, stringBuffer23, fieldPosition24);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(fractionFormat6);
        org.junit.Assert.assertNotNull(obj8);
        org.junit.Assert.assertNotNull(numberFormat9);
        org.junit.Assert.assertNotNull(fractionFormat11);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertNotNull(numberFormat16);
        org.junit.Assert.assertNotNull(fractionFormat18);
        org.junit.Assert.assertNotNull(fraction20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "0 / 1" + "'", str21, "0 / 1");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "0 / 1" + "'", str22, "0 / 1");
    }

    @Test
    public void test0090() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0090");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.text.NumberFormat numberFormat3 = fractionFormat2.getDenominatorFormat();
        java.text.NumberFormat numberFormat4 = fractionFormat2.getNumeratorFormat();
        java.text.NumberFormat numberFormat5 = fractionFormat2.getNumeratorFormat();
        java.text.NumberFormat numberFormat6 = fractionFormat2.getDenominatorFormat();
        java.lang.Object obj7 = fractionFormat2.clone();
        java.text.NumberFormat numberFormat8 = null;
        java.text.NumberFormat numberFormat9 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat10 = new org.apache.commons.math.fraction.FractionFormat(numberFormat8, numberFormat9);
        java.text.NumberFormat numberFormat11 = fractionFormat10.getNumeratorFormat();
        java.text.NumberFormat numberFormat12 = fractionFormat10.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat13 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj15 = fractionFormat13.parseObject("0 / 1");
        java.lang.Object obj17 = fractionFormat13.parseObject("0 / 1");
        java.text.NumberFormat numberFormat18 = fractionFormat13.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat19 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj21 = fractionFormat19.parseObject("0 / 1");
        java.text.NumberFormat numberFormat22 = fractionFormat19.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat23 = new org.apache.commons.math.fraction.FractionFormat(numberFormat18, numberFormat22);
        fractionFormat10.setNumeratorFormat(numberFormat18);
        // The following exception was thrown during execution in test generation
        try {
            java.text.AttributedCharacterIterator attributedCharacterIterator25 = fractionFormat2.formatToCharacterIterator((java.lang.Object) fractionFormat10);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot format given object as a fraction");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(numberFormat3);
        org.junit.Assert.assertNull(numberFormat4);
        org.junit.Assert.assertNull(numberFormat5);
        org.junit.Assert.assertNull(numberFormat6);
        org.junit.Assert.assertNotNull(obj7);
        org.junit.Assert.assertNull(numberFormat11);
        org.junit.Assert.assertNull(numberFormat12);
        org.junit.Assert.assertNotNull(fractionFormat13);
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertNotNull(numberFormat18);
        org.junit.Assert.assertNotNull(fractionFormat19);
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertNotNull(numberFormat22);
    }

    @Test
    public void test0091() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0091");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("0 / 1");
        java.text.ParsePosition parsePosition6 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj7 = fractionFormat0.parseObject("", parsePosition6);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
    }

    @Test
    public void test0092() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0092");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.text.NumberFormat numberFormat3 = fractionFormat2.getDenominatorFormat();
        java.text.NumberFormat numberFormat4 = fractionFormat2.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator7 = fractionFormat5.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat8 = fractionFormat5.getDenominatorFormat();
        fractionFormat2.setNumeratorFormat(numberFormat8);
        org.apache.commons.math.fraction.FractionFormat fractionFormat10 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj12 = fractionFormat10.parseObject("0 / 1");
        java.text.NumberFormat numberFormat13 = fractionFormat10.getNumeratorFormat();
        fractionFormat2.setNumeratorFormat(numberFormat13);
        java.text.ParsePosition parsePosition16 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.fraction.Fraction fraction17 = fractionFormat2.parse("-1 / 1", parsePosition16);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(numberFormat3);
        org.junit.Assert.assertNull(numberFormat4);
        org.junit.Assert.assertNotNull(fractionFormat5);
        org.junit.Assert.assertNotNull(attributedCharacterIterator7);
        org.junit.Assert.assertNotNull(numberFormat8);
        org.junit.Assert.assertNotNull(fractionFormat10);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertNotNull(numberFormat13);
    }

    @Test
    public void test0093() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0093");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.text.NumberFormat numberFormat3 = fractionFormat2.getNumeratorFormat();
        java.lang.Object obj4 = fractionFormat2.clone();
        java.text.ParsePosition parsePosition6 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.fraction.Fraction fraction7 = fractionFormat2.parse("0 / 1", parsePosition6);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(numberFormat3);
        org.junit.Assert.assertNotNull(obj4);
    }

    @Test
    public void test0094() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0094");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat3 = fractionFormat0.getNumeratorFormat();
        java.lang.Object obj4 = fractionFormat0.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.Fraction fraction7 = fractionFormat5.parse("0 / 1");
        java.lang.String str8 = org.apache.commons.math.fraction.FractionFormat.formatFraction(fraction7);
        java.lang.String str9 = org.apache.commons.math.fraction.FractionFormat.formatFraction(fraction7);
        java.lang.String str10 = org.apache.commons.math.fraction.FractionFormat.formatFraction(fraction7);
        java.lang.String str11 = org.apache.commons.math.fraction.FractionFormat.formatFraction(fraction7);
        java.lang.StringBuffer stringBuffer12 = null;
        java.text.FieldPosition fieldPosition13 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer14 = fractionFormat0.format(fraction7, stringBuffer12, fieldPosition13);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(numberFormat3);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(fractionFormat5);
        org.junit.Assert.assertNotNull(fraction7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "0 / 1" + "'", str8, "0 / 1");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "0 / 1" + "'", str9, "0 / 1");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "0 / 1" + "'", str10, "0 / 1");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "0 / 1" + "'", str11, "0 / 1");
    }

    @Test
    public void test0095() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0095");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.text.NumberFormat numberFormat3 = fractionFormat2.getDenominatorFormat();
        java.text.NumberFormat numberFormat4 = fractionFormat2.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator7 = fractionFormat5.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat8 = fractionFormat5.getDenominatorFormat();
        fractionFormat2.setNumeratorFormat(numberFormat8);
        java.lang.Object obj10 = numberFormat8.clone();
        java.lang.String str12 = numberFormat8.format((java.lang.Object) (short) 10);
        org.apache.commons.math.fraction.FractionFormat fractionFormat13 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator15 = fractionFormat13.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat16 = fractionFormat13.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat17 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator19 = fractionFormat17.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat20 = fractionFormat17.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat21 = new org.apache.commons.math.fraction.FractionFormat(numberFormat16, numberFormat20);
        org.apache.commons.math.fraction.FractionFormat fractionFormat22 = new org.apache.commons.math.fraction.FractionFormat(numberFormat8, numberFormat16);
        java.lang.Class<?> wildcardClass23 = numberFormat8.getClass();
        org.junit.Assert.assertNull(numberFormat3);
        org.junit.Assert.assertNull(numberFormat4);
        org.junit.Assert.assertNotNull(fractionFormat5);
        org.junit.Assert.assertNotNull(attributedCharacterIterator7);
        org.junit.Assert.assertNotNull(numberFormat8);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "10" + "'", str12, "10");
        org.junit.Assert.assertNotNull(fractionFormat13);
        org.junit.Assert.assertNotNull(attributedCharacterIterator15);
        org.junit.Assert.assertNotNull(numberFormat16);
        org.junit.Assert.assertNotNull(fractionFormat17);
        org.junit.Assert.assertNotNull(attributedCharacterIterator19);
        org.junit.Assert.assertNotNull(numberFormat20);
        org.junit.Assert.assertNotNull(wildcardClass23);
    }

    @Test
    public void test0096() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0096");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator2 = fractionFormat0.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat3 = fractionFormat0.getDenominatorFormat();
        java.text.ParsePosition parsePosition5 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.fraction.Fraction fraction6 = fractionFormat0.parse("hi!", parsePosition5);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(attributedCharacterIterator2);
        org.junit.Assert.assertNotNull(numberFormat3);
    }

    @Test
    public void test0097() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0097");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.text.NumberFormat numberFormat3 = fractionFormat2.getDenominatorFormat();
        java.text.NumberFormat numberFormat4 = fractionFormat2.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator7 = fractionFormat5.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat8 = fractionFormat5.getDenominatorFormat();
        fractionFormat2.setNumeratorFormat(numberFormat8);
        java.lang.Object obj10 = numberFormat8.clone();
        java.lang.String str12 = numberFormat8.format((java.lang.Object) (short) 10);
        org.apache.commons.math.fraction.FractionFormat fractionFormat13 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator15 = fractionFormat13.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat16 = fractionFormat13.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat17 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator19 = fractionFormat17.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat20 = fractionFormat17.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat21 = new org.apache.commons.math.fraction.FractionFormat(numberFormat16, numberFormat20);
        org.apache.commons.math.fraction.FractionFormat fractionFormat22 = new org.apache.commons.math.fraction.FractionFormat(numberFormat8, numberFormat16);
        java.text.NumberFormat numberFormat23 = null;
        java.text.NumberFormat numberFormat24 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat25 = new org.apache.commons.math.fraction.FractionFormat(numberFormat23, numberFormat24);
        java.text.NumberFormat numberFormat26 = fractionFormat25.getDenominatorFormat();
        java.text.NumberFormat numberFormat27 = fractionFormat25.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat28 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator30 = fractionFormat28.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat31 = fractionFormat28.getDenominatorFormat();
        fractionFormat25.setNumeratorFormat(numberFormat31);
        org.apache.commons.math.fraction.FractionFormat fractionFormat33 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj35 = fractionFormat33.parseObject("0 / 1");
        java.text.NumberFormat numberFormat36 = fractionFormat33.getNumeratorFormat();
        fractionFormat25.setNumeratorFormat(numberFormat36);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str38 = fractionFormat22.format((java.lang.Object) numberFormat36);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot format given object as a fraction");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(numberFormat3);
        org.junit.Assert.assertNull(numberFormat4);
        org.junit.Assert.assertNotNull(fractionFormat5);
        org.junit.Assert.assertNotNull(attributedCharacterIterator7);
        org.junit.Assert.assertNotNull(numberFormat8);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "10" + "'", str12, "10");
        org.junit.Assert.assertNotNull(fractionFormat13);
        org.junit.Assert.assertNotNull(attributedCharacterIterator15);
        org.junit.Assert.assertNotNull(numberFormat16);
        org.junit.Assert.assertNotNull(fractionFormat17);
        org.junit.Assert.assertNotNull(attributedCharacterIterator19);
        org.junit.Assert.assertNotNull(numberFormat20);
        org.junit.Assert.assertNull(numberFormat26);
        org.junit.Assert.assertNull(numberFormat27);
        org.junit.Assert.assertNotNull(fractionFormat28);
        org.junit.Assert.assertNotNull(attributedCharacterIterator30);
        org.junit.Assert.assertNotNull(numberFormat31);
        org.junit.Assert.assertNotNull(fractionFormat33);
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertNotNull(numberFormat36);
    }

    @Test
    public void test0098() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0098");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.text.NumberFormat numberFormat3 = fractionFormat2.getNumeratorFormat();
        java.text.NumberFormat numberFormat4 = fractionFormat2.getNumeratorFormat();
        java.text.NumberFormat numberFormat5 = fractionFormat2.getDenominatorFormat();
        java.text.ParsePosition parsePosition7 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj8 = fractionFormat2.parseObject("0 / 1", parsePosition7);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(numberFormat3);
        org.junit.Assert.assertNull(numberFormat4);
        org.junit.Assert.assertNull(numberFormat5);
    }

    @Test
    public void test0099() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0099");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.text.NumberFormat numberFormat3 = fractionFormat2.getNumeratorFormat();
        java.lang.Object obj4 = fractionFormat2.clone();
        java.text.ParsePosition parsePosition6 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.fraction.Fraction fraction7 = fractionFormat2.parse("-1 / 1", parsePosition6);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(numberFormat3);
        org.junit.Assert.assertNotNull(obj4);
    }

    @Test
    public void test0100() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0100");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.text.NumberFormat numberFormat3 = fractionFormat2.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat4 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator6 = fractionFormat4.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat7 = fractionFormat4.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat8 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator10 = fractionFormat8.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat11 = fractionFormat8.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat12 = new org.apache.commons.math.fraction.FractionFormat(numberFormat7, numberFormat11);
        org.apache.commons.math.fraction.FractionFormat fractionFormat13 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj15 = fractionFormat13.parseObject("0 / 1");
        java.lang.Object obj17 = fractionFormat13.parseObject("0 / 1");
        java.text.NumberFormat numberFormat18 = fractionFormat13.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat19 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj21 = fractionFormat19.parseObject("0 / 1");
        java.text.NumberFormat numberFormat22 = fractionFormat19.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat23 = new org.apache.commons.math.fraction.FractionFormat(numberFormat18, numberFormat22);
        java.text.NumberFormat numberFormat24 = fractionFormat23.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat25 = new org.apache.commons.math.fraction.FractionFormat(numberFormat7, numberFormat24);
        java.lang.StringBuffer stringBuffer26 = null;
        java.text.FieldPosition fieldPosition27 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer28 = fractionFormat2.format((java.lang.Object) numberFormat24, stringBuffer26, fieldPosition27);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot format given object as a fraction");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(numberFormat3);
        org.junit.Assert.assertNotNull(fractionFormat4);
        org.junit.Assert.assertNotNull(attributedCharacterIterator6);
        org.junit.Assert.assertNotNull(numberFormat7);
        org.junit.Assert.assertNotNull(fractionFormat8);
        org.junit.Assert.assertNotNull(attributedCharacterIterator10);
        org.junit.Assert.assertNotNull(numberFormat11);
        org.junit.Assert.assertNotNull(fractionFormat13);
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertNotNull(numberFormat18);
        org.junit.Assert.assertNotNull(fractionFormat19);
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertNotNull(numberFormat22);
        org.junit.Assert.assertNotNull(numberFormat24);
    }

    @Test
    public void test0101() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0101");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.text.NumberFormat numberFormat3 = fractionFormat2.getNumeratorFormat();
        java.lang.Object obj4 = fractionFormat2.clone();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj6 = fractionFormat2.parseObject("10");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(numberFormat3);
        org.junit.Assert.assertNotNull(obj4);
    }

    @Test
    public void test0102() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0102");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.Fraction fraction2 = fractionFormat0.parse("0 / 1");
        java.text.NumberFormat numberFormat3 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat4 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.Fraction fraction6 = fractionFormat4.parse("0 / 1");
        java.lang.String str7 = org.apache.commons.math.fraction.FractionFormat.formatFraction(fraction6);
        java.lang.String str8 = org.apache.commons.math.fraction.FractionFormat.formatFraction(fraction6);
        java.lang.StringBuffer stringBuffer9 = null;
        java.text.FieldPosition fieldPosition10 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer11 = fractionFormat0.format(fraction6, stringBuffer9, fieldPosition10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(fraction2);
        org.junit.Assert.assertNotNull(numberFormat3);
        org.junit.Assert.assertNotNull(fractionFormat4);
        org.junit.Assert.assertNotNull(fraction6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "0 / 1" + "'", str7, "0 / 1");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "0 / 1" + "'", str8, "0 / 1");
    }

    @Test
    public void test0103() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0103");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator2 = fractionFormat0.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.ParsePosition parsePosition4 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj5 = fractionFormat0.parseObject("10", parsePosition4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(attributedCharacterIterator2);
    }

    @Test
    public void test0104() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0104");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat5 = fractionFormat0.getNumeratorFormat();
        java.text.NumberFormat numberFormat6 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat7 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator9 = fractionFormat7.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat10 = fractionFormat7.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = new org.apache.commons.math.fraction.FractionFormat(numberFormat6, numberFormat10);
        java.text.ParsePosition parsePosition13 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj14 = fractionFormat11.parseObject("", parsePosition13);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertNotNull(fractionFormat7);
        org.junit.Assert.assertNotNull(attributedCharacterIterator9);
        org.junit.Assert.assertNotNull(numberFormat10);
    }

    @Test
    public void test0105() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0105");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("0 / 1");
        java.text.AttributedCharacterIterator attributedCharacterIterator6 = fractionFormat0.formatToCharacterIterator((java.lang.Object) (-1));
        java.text.ParsePosition parsePosition8 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.fraction.Fraction fraction9 = fractionFormat0.parse("10", parsePosition8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(attributedCharacterIterator6);
    }

    @Test
    public void test0106() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0106");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator2 = fractionFormat0.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat3 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat4 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator6 = fractionFormat4.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat7 = fractionFormat4.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat8 = new org.apache.commons.math.fraction.FractionFormat(numberFormat3, numberFormat7);
        org.apache.commons.math.fraction.FractionFormat fractionFormat9 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj11 = fractionFormat9.parseObject("0 / 1");
        java.lang.Object obj13 = fractionFormat9.parseObject("0 / 1");
        java.text.NumberFormat numberFormat14 = fractionFormat9.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat15 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj17 = fractionFormat15.parseObject("0 / 1");
        java.text.NumberFormat numberFormat18 = fractionFormat15.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat19 = new org.apache.commons.math.fraction.FractionFormat(numberFormat14, numberFormat18);
        java.text.NumberFormat numberFormat20 = fractionFormat19.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat21 = new org.apache.commons.math.fraction.FractionFormat(numberFormat3, numberFormat20);
        org.apache.commons.math.fraction.FractionFormat fractionFormat22 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.Fraction fraction24 = fractionFormat22.parse("0 / 1");
        java.lang.String str25 = org.apache.commons.math.fraction.FractionFormat.formatFraction(fraction24);
        java.lang.String str26 = org.apache.commons.math.fraction.FractionFormat.formatFraction(fraction24);
        java.lang.String str27 = org.apache.commons.math.fraction.FractionFormat.formatFraction(fraction24);
        java.lang.String str28 = org.apache.commons.math.fraction.FractionFormat.formatFraction(fraction24);
        java.lang.String str29 = org.apache.commons.math.fraction.FractionFormat.formatFraction(fraction24);
        java.lang.String str30 = org.apache.commons.math.fraction.FractionFormat.formatFraction(fraction24);
        java.lang.StringBuffer stringBuffer31 = null;
        java.text.FieldPosition fieldPosition32 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer33 = fractionFormat21.format(fraction24, stringBuffer31, fieldPosition32);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(attributedCharacterIterator2);
        org.junit.Assert.assertNotNull(numberFormat3);
        org.junit.Assert.assertNotNull(fractionFormat4);
        org.junit.Assert.assertNotNull(attributedCharacterIterator6);
        org.junit.Assert.assertNotNull(numberFormat7);
        org.junit.Assert.assertNotNull(fractionFormat9);
        org.junit.Assert.assertNotNull(obj11);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertNotNull(numberFormat14);
        org.junit.Assert.assertNotNull(fractionFormat15);
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertNotNull(numberFormat18);
        org.junit.Assert.assertNotNull(numberFormat20);
        org.junit.Assert.assertNotNull(fractionFormat22);
        org.junit.Assert.assertNotNull(fraction24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "0 / 1" + "'", str25, "0 / 1");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "0 / 1" + "'", str26, "0 / 1");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "0 / 1" + "'", str27, "0 / 1");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "0 / 1" + "'", str28, "0 / 1");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "0 / 1" + "'", str29, "0 / 1");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "0 / 1" + "'", str30, "0 / 1");
    }

    @Test
    public void test0107() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0107");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.lang.Object obj3 = fractionFormat2.clone();
        java.lang.Object obj4 = fractionFormat2.clone();
        java.lang.Class<?> wildcardClass5 = obj4.getClass();
        org.junit.Assert.assertNotNull(obj3);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(wildcardClass5);
    }

    @Test
    public void test0108() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0108");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.text.NumberFormat numberFormat3 = fractionFormat2.getNumeratorFormat();
        java.lang.Object obj4 = fractionFormat2.clone();
        java.lang.StringBuffer stringBuffer6 = null;
        java.text.FieldPosition fieldPosition7 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer8 = fractionFormat2.format((java.lang.Object) false, stringBuffer6, fieldPosition7);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot format given object as a fraction");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(numberFormat3);
        org.junit.Assert.assertNotNull(obj4);
    }

    @Test
    public void test0109() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0109");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.text.NumberFormat numberFormat3 = fractionFormat2.getDenominatorFormat();
        java.text.NumberFormat numberFormat4 = fractionFormat2.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator7 = fractionFormat5.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat8 = fractionFormat5.getDenominatorFormat();
        fractionFormat2.setNumeratorFormat(numberFormat8);
        java.lang.Object obj10 = numberFormat8.clone();
        java.lang.String str12 = numberFormat8.format((java.lang.Object) (short) 10);
        org.apache.commons.math.fraction.FractionFormat fractionFormat13 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator15 = fractionFormat13.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat16 = fractionFormat13.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat17 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator19 = fractionFormat17.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat20 = fractionFormat17.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat21 = new org.apache.commons.math.fraction.FractionFormat(numberFormat16, numberFormat20);
        org.apache.commons.math.fraction.FractionFormat fractionFormat22 = new org.apache.commons.math.fraction.FractionFormat(numberFormat8, numberFormat16);
        org.apache.commons.math.fraction.FractionFormat fractionFormat23 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.Fraction fraction25 = fractionFormat23.parse("0 / 1");
        java.lang.String str26 = org.apache.commons.math.fraction.FractionFormat.formatFraction(fraction25);
        java.lang.String str27 = org.apache.commons.math.fraction.FractionFormat.formatFraction(fraction25);
        java.lang.StringBuffer stringBuffer28 = null;
        java.text.FieldPosition fieldPosition29 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer30 = fractionFormat22.format(fraction25, stringBuffer28, fieldPosition29);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(numberFormat3);
        org.junit.Assert.assertNull(numberFormat4);
        org.junit.Assert.assertNotNull(fractionFormat5);
        org.junit.Assert.assertNotNull(attributedCharacterIterator7);
        org.junit.Assert.assertNotNull(numberFormat8);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "10" + "'", str12, "10");
        org.junit.Assert.assertNotNull(fractionFormat13);
        org.junit.Assert.assertNotNull(attributedCharacterIterator15);
        org.junit.Assert.assertNotNull(numberFormat16);
        org.junit.Assert.assertNotNull(fractionFormat17);
        org.junit.Assert.assertNotNull(attributedCharacterIterator19);
        org.junit.Assert.assertNotNull(numberFormat20);
        org.junit.Assert.assertNotNull(fractionFormat23);
        org.junit.Assert.assertNotNull(fraction25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "0 / 1" + "'", str26, "0 / 1");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "0 / 1" + "'", str27, "0 / 1");
    }

    @Test
    public void test0110() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0110");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj2 = fractionFormat0.parseObject("hi!");
            org.junit.Assert.fail("Expected exception of type java.text.ParseException; message: Format.parseObject(String) failed");
        } catch (java.text.ParseException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
    }

    @Test
    public void test0111() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0111");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator2 = fractionFormat0.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat3 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat4 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator6 = fractionFormat4.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat7 = fractionFormat4.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat8 = new org.apache.commons.math.fraction.FractionFormat(numberFormat3, numberFormat7);
        org.apache.commons.math.fraction.FractionFormat fractionFormat9 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj11 = fractionFormat9.parseObject("0 / 1");
        java.lang.Object obj13 = fractionFormat9.parseObject("0 / 1");
        java.text.NumberFormat numberFormat14 = fractionFormat9.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat15 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj17 = fractionFormat15.parseObject("0 / 1");
        java.text.NumberFormat numberFormat18 = fractionFormat15.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat19 = new org.apache.commons.math.fraction.FractionFormat(numberFormat14, numberFormat18);
        java.text.NumberFormat numberFormat20 = fractionFormat19.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat21 = new org.apache.commons.math.fraction.FractionFormat(numberFormat3, numberFormat20);
        // The following exception was thrown during execution in test generation
        try {
            java.text.AttributedCharacterIterator attributedCharacterIterator23 = fractionFormat21.formatToCharacterIterator((java.lang.Object) "hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot format given object as a fraction");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(attributedCharacterIterator2);
        org.junit.Assert.assertNotNull(numberFormat3);
        org.junit.Assert.assertNotNull(fractionFormat4);
        org.junit.Assert.assertNotNull(attributedCharacterIterator6);
        org.junit.Assert.assertNotNull(numberFormat7);
        org.junit.Assert.assertNotNull(fractionFormat9);
        org.junit.Assert.assertNotNull(obj11);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertNotNull(numberFormat14);
        org.junit.Assert.assertNotNull(fractionFormat15);
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertNotNull(numberFormat18);
        org.junit.Assert.assertNotNull(numberFormat20);
    }

    @Test
    public void test0112() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0112");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator2 = fractionFormat0.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat3 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat4 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator6 = fractionFormat4.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat7 = fractionFormat4.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat8 = new org.apache.commons.math.fraction.FractionFormat(numberFormat3, numberFormat7);
        org.apache.commons.math.fraction.FractionFormat fractionFormat9 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj11 = fractionFormat9.parseObject("0 / 1");
        java.lang.Object obj13 = fractionFormat9.parseObject("0 / 1");
        java.text.NumberFormat numberFormat14 = fractionFormat9.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat15 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj17 = fractionFormat15.parseObject("0 / 1");
        java.text.NumberFormat numberFormat18 = fractionFormat15.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat19 = new org.apache.commons.math.fraction.FractionFormat(numberFormat14, numberFormat18);
        java.text.NumberFormat numberFormat20 = fractionFormat19.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat21 = new org.apache.commons.math.fraction.FractionFormat(numberFormat3, numberFormat20);
        java.text.NumberFormat numberFormat22 = null;
        java.text.NumberFormat numberFormat23 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat24 = new org.apache.commons.math.fraction.FractionFormat(numberFormat22, numberFormat23);
        java.text.NumberFormat numberFormat25 = fractionFormat24.getNumeratorFormat();
        java.lang.Object obj26 = fractionFormat24.clone();
        // The following exception was thrown during execution in test generation
        try {
            java.text.AttributedCharacterIterator attributedCharacterIterator27 = numberFormat20.formatToCharacterIterator((java.lang.Object) fractionFormat24);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot format given Object as a Number");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(attributedCharacterIterator2);
        org.junit.Assert.assertNotNull(numberFormat3);
        org.junit.Assert.assertNotNull(fractionFormat4);
        org.junit.Assert.assertNotNull(attributedCharacterIterator6);
        org.junit.Assert.assertNotNull(numberFormat7);
        org.junit.Assert.assertNotNull(fractionFormat9);
        org.junit.Assert.assertNotNull(obj11);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertNotNull(numberFormat14);
        org.junit.Assert.assertNotNull(fractionFormat15);
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertNotNull(numberFormat18);
        org.junit.Assert.assertNotNull(numberFormat20);
        org.junit.Assert.assertNull(numberFormat25);
        org.junit.Assert.assertNotNull(obj26);
    }

    @Test
    public void test0113() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0113");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("0 / 1");
        java.text.AttributedCharacterIterator attributedCharacterIterator6 = fractionFormat0.formatToCharacterIterator((java.lang.Object) (-1));
        org.apache.commons.math.fraction.FractionFormat fractionFormat7 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.Fraction fraction9 = fractionFormat7.parse("0 / 1");
        java.lang.StringBuffer stringBuffer10 = null;
        java.text.FieldPosition fieldPosition11 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer12 = fractionFormat0.format(fraction9, stringBuffer10, fieldPosition11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(attributedCharacterIterator6);
        org.junit.Assert.assertNotNull(fractionFormat7);
        org.junit.Assert.assertNotNull(fraction9);
    }

    @Test
    public void test0114() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0114");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat3 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat4 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj6 = fractionFormat4.parseObject("0 / 1");
        java.lang.Object obj8 = fractionFormat4.parseObject("0 / 1");
        java.text.NumberFormat numberFormat9 = fractionFormat4.getNumeratorFormat();
        java.text.NumberFormat numberFormat10 = fractionFormat4.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator13 = fractionFormat11.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat14 = fractionFormat11.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat15 = new org.apache.commons.math.fraction.FractionFormat(numberFormat10, numberFormat14);
        fractionFormat0.setNumeratorFormat(numberFormat14);
        org.apache.commons.math.fraction.FractionFormat fractionFormat17 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator19 = fractionFormat17.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat20 = fractionFormat17.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat21 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator23 = fractionFormat21.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat24 = fractionFormat21.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat25 = new org.apache.commons.math.fraction.FractionFormat(numberFormat20, numberFormat24);
        java.lang.Class<?> wildcardClass26 = numberFormat24.getClass();
        java.lang.StringBuffer stringBuffer27 = null;
        java.text.FieldPosition fieldPosition28 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer29 = fractionFormat0.format((java.lang.Object) numberFormat24, stringBuffer27, fieldPosition28);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot format given object as a fraction");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(numberFormat3);
        org.junit.Assert.assertNotNull(fractionFormat4);
        org.junit.Assert.assertNotNull(obj6);
        org.junit.Assert.assertNotNull(obj8);
        org.junit.Assert.assertNotNull(numberFormat9);
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertNotNull(fractionFormat11);
        org.junit.Assert.assertNotNull(attributedCharacterIterator13);
        org.junit.Assert.assertNotNull(numberFormat14);
        org.junit.Assert.assertNotNull(fractionFormat17);
        org.junit.Assert.assertNotNull(attributedCharacterIterator19);
        org.junit.Assert.assertNotNull(numberFormat20);
        org.junit.Assert.assertNotNull(fractionFormat21);
        org.junit.Assert.assertNotNull(attributedCharacterIterator23);
        org.junit.Assert.assertNotNull(numberFormat24);
        org.junit.Assert.assertNotNull(wildcardClass26);
    }

    @Test
    public void test0115() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0115");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.text.NumberFormat numberFormat3 = fractionFormat2.getNumeratorFormat();
        java.text.NumberFormat numberFormat4 = fractionFormat2.getNumeratorFormat();
        java.text.NumberFormat numberFormat5 = fractionFormat2.getNumeratorFormat();
        java.text.ParsePosition parsePosition7 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj8 = fractionFormat2.parseObject("-1 / 1", parsePosition7);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(numberFormat3);
        org.junit.Assert.assertNull(numberFormat4);
        org.junit.Assert.assertNull(numberFormat5);
    }

    @Test
    public void test0116() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0116");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.text.NumberFormat numberFormat3 = fractionFormat2.getNumeratorFormat();
        java.text.NumberFormat numberFormat4 = fractionFormat2.getNumeratorFormat();
        java.text.NumberFormat numberFormat5 = fractionFormat2.getNumeratorFormat();
        java.text.NumberFormat numberFormat6 = fractionFormat2.getNumeratorFormat();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.fraction.Fraction fraction8 = fractionFormat2.parse("hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(numberFormat3);
        org.junit.Assert.assertNull(numberFormat4);
        org.junit.Assert.assertNull(numberFormat5);
        org.junit.Assert.assertNull(numberFormat6);
    }

    @Test
    public void test0117() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0117");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.text.NumberFormat numberFormat3 = fractionFormat2.getDenominatorFormat();
        java.text.NumberFormat numberFormat4 = fractionFormat2.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator7 = fractionFormat5.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat8 = fractionFormat5.getDenominatorFormat();
        fractionFormat2.setNumeratorFormat(numberFormat8);
        java.lang.Object obj10 = numberFormat8.clone();
        java.lang.String str12 = numberFormat8.format((java.lang.Object) (short) 10);
        java.text.NumberFormat numberFormat13 = null;
        java.text.NumberFormat numberFormat14 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat15 = new org.apache.commons.math.fraction.FractionFormat(numberFormat13, numberFormat14);
        java.text.NumberFormat numberFormat16 = fractionFormat15.getDenominatorFormat();
        java.text.NumberFormat numberFormat17 = fractionFormat15.getNumeratorFormat();
        java.text.NumberFormat numberFormat18 = fractionFormat15.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat19 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator21 = fractionFormat19.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat22 = fractionFormat19.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat23 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator25 = fractionFormat23.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat26 = fractionFormat23.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat27 = new org.apache.commons.math.fraction.FractionFormat(numberFormat22, numberFormat26);
        fractionFormat15.setNumeratorFormat(numberFormat22);
        org.apache.commons.math.fraction.FractionFormat fractionFormat29 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj31 = fractionFormat29.parseObject("0 / 1");
        java.text.NumberFormat numberFormat32 = fractionFormat29.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat33 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator35 = fractionFormat33.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat36 = fractionFormat33.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat37 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator39 = fractionFormat37.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat40 = fractionFormat37.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat41 = new org.apache.commons.math.fraction.FractionFormat(numberFormat36, numberFormat40);
        org.apache.commons.math.fraction.FractionFormat fractionFormat42 = new org.apache.commons.math.fraction.FractionFormat(numberFormat32, numberFormat36);
        org.apache.commons.math.fraction.FractionFormat fractionFormat43 = new org.apache.commons.math.fraction.FractionFormat(numberFormat22, numberFormat32);
        org.apache.commons.math.fraction.FractionFormat fractionFormat44 = new org.apache.commons.math.fraction.FractionFormat(numberFormat8, numberFormat32);
        org.apache.commons.math.fraction.FractionFormat fractionFormat45 = new org.apache.commons.math.fraction.FractionFormat(numberFormat8);
        java.text.NumberFormat numberFormat46 = null;
        java.text.NumberFormat numberFormat47 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat48 = new org.apache.commons.math.fraction.FractionFormat(numberFormat46, numberFormat47);
        java.text.NumberFormat numberFormat49 = fractionFormat48.getDenominatorFormat();
        java.text.NumberFormat numberFormat50 = fractionFormat48.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat51 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator53 = fractionFormat51.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat54 = fractionFormat51.getDenominatorFormat();
        fractionFormat48.setNumeratorFormat(numberFormat54);
        org.apache.commons.math.fraction.FractionFormat fractionFormat56 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj58 = fractionFormat56.parseObject("0 / 1");
        java.text.NumberFormat numberFormat59 = fractionFormat56.getNumeratorFormat();
        fractionFormat48.setNumeratorFormat(numberFormat59);
        java.lang.Object obj62 = numberFormat59.parseObject("0 / 1");
        // The following exception was thrown during execution in test generation
        try {
            java.text.AttributedCharacterIterator attributedCharacterIterator63 = numberFormat8.formatToCharacterIterator((java.lang.Object) numberFormat59);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot format given Object as a Number");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(numberFormat3);
        org.junit.Assert.assertNull(numberFormat4);
        org.junit.Assert.assertNotNull(fractionFormat5);
        org.junit.Assert.assertNotNull(attributedCharacterIterator7);
        org.junit.Assert.assertNotNull(numberFormat8);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "10" + "'", str12, "10");
        org.junit.Assert.assertNull(numberFormat16);
        org.junit.Assert.assertNull(numberFormat17);
        org.junit.Assert.assertNull(numberFormat18);
        org.junit.Assert.assertNotNull(fractionFormat19);
        org.junit.Assert.assertNotNull(attributedCharacterIterator21);
        org.junit.Assert.assertNotNull(numberFormat22);
        org.junit.Assert.assertNotNull(fractionFormat23);
        org.junit.Assert.assertNotNull(attributedCharacterIterator25);
        org.junit.Assert.assertNotNull(numberFormat26);
        org.junit.Assert.assertNotNull(fractionFormat29);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertNotNull(numberFormat32);
        org.junit.Assert.assertNotNull(fractionFormat33);
        org.junit.Assert.assertNotNull(attributedCharacterIterator35);
        org.junit.Assert.assertNotNull(numberFormat36);
        org.junit.Assert.assertNotNull(fractionFormat37);
        org.junit.Assert.assertNotNull(attributedCharacterIterator39);
        org.junit.Assert.assertNotNull(numberFormat40);
        org.junit.Assert.assertNull(numberFormat49);
        org.junit.Assert.assertNull(numberFormat50);
        org.junit.Assert.assertNotNull(fractionFormat51);
        org.junit.Assert.assertNotNull(attributedCharacterIterator53);
        org.junit.Assert.assertNotNull(numberFormat54);
        org.junit.Assert.assertNotNull(fractionFormat56);
        org.junit.Assert.assertNotNull(obj58);
        org.junit.Assert.assertNotNull(numberFormat59);
        org.junit.Assert.assertEquals("'" + obj62 + "' != '" + 0L + "'", obj62, 0L);
    }

    @Test
    public void test0118() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0118");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat5 = fractionFormat0.getNumeratorFormat();
        java.text.NumberFormat numberFormat6 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat7 = new org.apache.commons.math.fraction.FractionFormat(numberFormat6);
        org.apache.commons.math.fraction.FractionFormat fractionFormat8 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator10 = fractionFormat8.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat11 = fractionFormat8.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat12 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator14 = fractionFormat12.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat15 = fractionFormat12.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat16 = new org.apache.commons.math.fraction.FractionFormat(numberFormat11, numberFormat15);
        // The following exception was thrown during execution in test generation
        try {
            java.text.AttributedCharacterIterator attributedCharacterIterator17 = fractionFormat7.formatToCharacterIterator((java.lang.Object) numberFormat11);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot format given object as a fraction");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertNotNull(fractionFormat8);
        org.junit.Assert.assertNotNull(attributedCharacterIterator10);
        org.junit.Assert.assertNotNull(numberFormat11);
        org.junit.Assert.assertNotNull(fractionFormat12);
        org.junit.Assert.assertNotNull(attributedCharacterIterator14);
        org.junit.Assert.assertNotNull(numberFormat15);
    }

    @Test
    public void test0119() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0119");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.text.NumberFormat numberFormat3 = fractionFormat2.getDenominatorFormat();
        java.text.NumberFormat numberFormat4 = fractionFormat2.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator7 = fractionFormat5.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat8 = fractionFormat5.getDenominatorFormat();
        fractionFormat2.setNumeratorFormat(numberFormat8);
        java.lang.Object obj10 = numberFormat8.clone();
        java.lang.Class<?> wildcardClass11 = numberFormat8.getClass();
        org.junit.Assert.assertNull(numberFormat3);
        org.junit.Assert.assertNull(numberFormat4);
        org.junit.Assert.assertNotNull(fractionFormat5);
        org.junit.Assert.assertNotNull(attributedCharacterIterator7);
        org.junit.Assert.assertNotNull(numberFormat8);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertNotNull(wildcardClass11);
    }

    @Test
    public void test0120() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0120");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.text.NumberFormat numberFormat3 = fractionFormat2.getDenominatorFormat();
        java.text.NumberFormat numberFormat4 = fractionFormat2.getNumeratorFormat();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass5 = numberFormat4.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(numberFormat3);
        org.junit.Assert.assertNull(numberFormat4);
    }

    @Test
    public void test0121() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0121");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat3 = fractionFormat0.getNumeratorFormat();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.fraction.Fraction fraction5 = fractionFormat0.parse("hi!");
            org.junit.Assert.fail("Expected exception of type java.text.ParseException; message: Unparseable fraction number: \"hi!\"");
        } catch (java.text.ParseException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(numberFormat3);
    }

    @Test
    public void test0122() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0122");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat5 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat6 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj8 = fractionFormat6.parseObject("0 / 1");
        java.text.NumberFormat numberFormat9 = fractionFormat6.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat10 = new org.apache.commons.math.fraction.FractionFormat(numberFormat5, numberFormat9);
        java.text.NumberFormat numberFormat11 = fractionFormat10.getNumeratorFormat();
        java.text.ParsePosition parsePosition13 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj14 = fractionFormat10.parseObject("", parsePosition13);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(fractionFormat6);
        org.junit.Assert.assertNotNull(obj8);
        org.junit.Assert.assertNotNull(numberFormat9);
        org.junit.Assert.assertNotNull(numberFormat11);
    }

    @Test
    public void test0123() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0123");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.text.NumberFormat numberFormat3 = fractionFormat2.getNumeratorFormat();
        java.text.NumberFormat numberFormat4 = fractionFormat2.getNumeratorFormat();
        java.text.NumberFormat numberFormat5 = fractionFormat2.getNumeratorFormat();
        java.lang.Class<?> wildcardClass6 = fractionFormat2.getClass();
        org.junit.Assert.assertNull(numberFormat3);
        org.junit.Assert.assertNull(numberFormat4);
        org.junit.Assert.assertNull(numberFormat5);
        org.junit.Assert.assertNotNull(wildcardClass6);
    }

    @Test
    public void test0124() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0124");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat5 = fractionFormat0.getNumeratorFormat();
        java.text.NumberFormat numberFormat6 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat7 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.Fraction fraction9 = fractionFormat7.parse("0 / 1");
        java.lang.String str10 = org.apache.commons.math.fraction.FractionFormat.formatFraction(fraction9);
        java.lang.String str11 = org.apache.commons.math.fraction.FractionFormat.formatFraction(fraction9);
        java.lang.StringBuffer stringBuffer12 = null;
        java.text.FieldPosition fieldPosition13 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer14 = fractionFormat0.format((java.lang.Object) str11, stringBuffer12, fieldPosition13);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot format given object as a fraction");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertNotNull(fractionFormat7);
        org.junit.Assert.assertNotNull(fraction9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "0 / 1" + "'", str10, "0 / 1");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "0 / 1" + "'", str11, "0 / 1");
    }

    @Test
    public void test0125() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0125");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat5 = fractionFormat0.getNumeratorFormat();
        java.lang.Object obj6 = numberFormat5.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat7 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj9 = fractionFormat7.parseObject("0 / 1");
        java.lang.Object obj11 = fractionFormat7.parseObject("0 / 1");
        java.text.NumberFormat numberFormat12 = fractionFormat7.getNumeratorFormat();
        java.text.NumberFormat numberFormat13 = fractionFormat7.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat14 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator16 = fractionFormat14.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat17 = fractionFormat14.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat18 = new org.apache.commons.math.fraction.FractionFormat(numberFormat13, numberFormat17);
        org.apache.commons.math.fraction.FractionFormat fractionFormat19 = new org.apache.commons.math.fraction.FractionFormat(numberFormat5, numberFormat17);
        org.apache.commons.math.fraction.FractionFormat fractionFormat20 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj22 = fractionFormat20.parseObject("0 / 1");
        java.lang.Object obj24 = fractionFormat20.parseObject("0 / 1");
        java.text.NumberFormat numberFormat25 = fractionFormat20.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat26 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj28 = fractionFormat26.parseObject("0 / 1");
        java.text.NumberFormat numberFormat29 = fractionFormat26.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat30 = new org.apache.commons.math.fraction.FractionFormat(numberFormat25, numberFormat29);
        // The following exception was thrown during execution in test generation
        try {
            java.text.AttributedCharacterIterator attributedCharacterIterator31 = numberFormat5.formatToCharacterIterator((java.lang.Object) fractionFormat30);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot format given Object as a Number");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(obj6);
        org.junit.Assert.assertNotNull(fractionFormat7);
        org.junit.Assert.assertNotNull(obj9);
        org.junit.Assert.assertNotNull(obj11);
        org.junit.Assert.assertNotNull(numberFormat12);
        org.junit.Assert.assertNotNull(numberFormat13);
        org.junit.Assert.assertNotNull(fractionFormat14);
        org.junit.Assert.assertNotNull(attributedCharacterIterator16);
        org.junit.Assert.assertNotNull(numberFormat17);
        org.junit.Assert.assertNotNull(fractionFormat20);
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertNotNull(numberFormat25);
        org.junit.Assert.assertNotNull(fractionFormat26);
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertNotNull(numberFormat29);
    }

    @Test
    public void test0126() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0126");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.text.NumberFormat numberFormat3 = fractionFormat2.getDenominatorFormat();
        java.text.NumberFormat numberFormat4 = fractionFormat2.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator7 = fractionFormat5.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat8 = fractionFormat5.getDenominatorFormat();
        fractionFormat2.setNumeratorFormat(numberFormat8);
        java.lang.Object obj10 = numberFormat8.clone();
        java.lang.String str12 = numberFormat8.format((java.lang.Object) (short) 10);
        java.text.NumberFormat numberFormat13 = null;
        java.text.NumberFormat numberFormat14 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat15 = new org.apache.commons.math.fraction.FractionFormat(numberFormat13, numberFormat14);
        java.text.NumberFormat numberFormat16 = fractionFormat15.getDenominatorFormat();
        java.text.NumberFormat numberFormat17 = fractionFormat15.getNumeratorFormat();
        java.text.NumberFormat numberFormat18 = fractionFormat15.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat19 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator21 = fractionFormat19.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat22 = fractionFormat19.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat23 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator25 = fractionFormat23.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat26 = fractionFormat23.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat27 = new org.apache.commons.math.fraction.FractionFormat(numberFormat22, numberFormat26);
        fractionFormat15.setNumeratorFormat(numberFormat22);
        org.apache.commons.math.fraction.FractionFormat fractionFormat29 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj31 = fractionFormat29.parseObject("0 / 1");
        java.text.NumberFormat numberFormat32 = fractionFormat29.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat33 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator35 = fractionFormat33.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat36 = fractionFormat33.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat37 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator39 = fractionFormat37.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat40 = fractionFormat37.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat41 = new org.apache.commons.math.fraction.FractionFormat(numberFormat36, numberFormat40);
        org.apache.commons.math.fraction.FractionFormat fractionFormat42 = new org.apache.commons.math.fraction.FractionFormat(numberFormat32, numberFormat36);
        org.apache.commons.math.fraction.FractionFormat fractionFormat43 = new org.apache.commons.math.fraction.FractionFormat(numberFormat22, numberFormat32);
        org.apache.commons.math.fraction.FractionFormat fractionFormat44 = new org.apache.commons.math.fraction.FractionFormat(numberFormat8, numberFormat32);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.fraction.Fraction fraction46 = fractionFormat44.parse("");
            org.junit.Assert.fail("Expected exception of type java.text.ParseException; message: Unparseable fraction number: \"\"");
        } catch (java.text.ParseException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(numberFormat3);
        org.junit.Assert.assertNull(numberFormat4);
        org.junit.Assert.assertNotNull(fractionFormat5);
        org.junit.Assert.assertNotNull(attributedCharacterIterator7);
        org.junit.Assert.assertNotNull(numberFormat8);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "10" + "'", str12, "10");
        org.junit.Assert.assertNull(numberFormat16);
        org.junit.Assert.assertNull(numberFormat17);
        org.junit.Assert.assertNull(numberFormat18);
        org.junit.Assert.assertNotNull(fractionFormat19);
        org.junit.Assert.assertNotNull(attributedCharacterIterator21);
        org.junit.Assert.assertNotNull(numberFormat22);
        org.junit.Assert.assertNotNull(fractionFormat23);
        org.junit.Assert.assertNotNull(attributedCharacterIterator25);
        org.junit.Assert.assertNotNull(numberFormat26);
        org.junit.Assert.assertNotNull(fractionFormat29);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertNotNull(numberFormat32);
        org.junit.Assert.assertNotNull(fractionFormat33);
        org.junit.Assert.assertNotNull(attributedCharacterIterator35);
        org.junit.Assert.assertNotNull(numberFormat36);
        org.junit.Assert.assertNotNull(fractionFormat37);
        org.junit.Assert.assertNotNull(attributedCharacterIterator39);
        org.junit.Assert.assertNotNull(numberFormat40);
    }

    @Test
    public void test0127() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0127");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.text.NumberFormat numberFormat3 = fractionFormat2.getDenominatorFormat();
        java.text.NumberFormat numberFormat4 = fractionFormat2.getNumeratorFormat();
        java.text.NumberFormat numberFormat5 = fractionFormat2.getNumeratorFormat();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.fraction.Fraction fraction7 = fractionFormat2.parse("");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(numberFormat3);
        org.junit.Assert.assertNull(numberFormat4);
        org.junit.Assert.assertNull(numberFormat5);
    }

    @Test
    public void test0128() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0128");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat5 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat6 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.Fraction fraction8 = fractionFormat6.parse("0 / 1");
        java.lang.StringBuffer stringBuffer9 = null;
        java.text.FieldPosition fieldPosition10 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer11 = fractionFormat0.format(fraction8, stringBuffer9, fieldPosition10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(fractionFormat6);
        org.junit.Assert.assertNotNull(fraction8);
    }

    @Test
    public void test0129() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0129");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat1 = null;
        java.text.NumberFormat numberFormat2 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat3 = new org.apache.commons.math.fraction.FractionFormat(numberFormat1, numberFormat2);
        java.text.NumberFormat numberFormat4 = fractionFormat3.getDenominatorFormat();
        java.text.NumberFormat numberFormat5 = fractionFormat3.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat6 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator8 = fractionFormat6.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat9 = fractionFormat6.getDenominatorFormat();
        fractionFormat3.setNumeratorFormat(numberFormat9);
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = new org.apache.commons.math.fraction.FractionFormat(numberFormat9);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str12 = fractionFormat0.format((java.lang.Object) numberFormat9);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot format given object as a fraction");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNull(numberFormat4);
        org.junit.Assert.assertNull(numberFormat5);
        org.junit.Assert.assertNotNull(fractionFormat6);
        org.junit.Assert.assertNotNull(attributedCharacterIterator8);
        org.junit.Assert.assertNotNull(numberFormat9);
    }

    @Test
    public void test0130() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0130");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.lang.Object obj3 = fractionFormat2.clone();
        java.text.NumberFormat numberFormat4 = null;
        java.text.NumberFormat numberFormat5 = null;
        java.text.NumberFormat numberFormat6 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat7 = new org.apache.commons.math.fraction.FractionFormat(numberFormat5, numberFormat6);
        java.text.NumberFormat numberFormat8 = fractionFormat7.getDenominatorFormat();
        java.text.NumberFormat numberFormat9 = fractionFormat7.getNumeratorFormat();
        java.text.NumberFormat numberFormat10 = fractionFormat7.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator13 = fractionFormat11.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat14 = fractionFormat11.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat15 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator17 = fractionFormat15.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat18 = fractionFormat15.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat19 = new org.apache.commons.math.fraction.FractionFormat(numberFormat14, numberFormat18);
        fractionFormat7.setNumeratorFormat(numberFormat14);
        org.apache.commons.math.fraction.FractionFormat fractionFormat21 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj23 = fractionFormat21.parseObject("0 / 1");
        java.text.NumberFormat numberFormat24 = fractionFormat21.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat25 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator27 = fractionFormat25.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat28 = fractionFormat25.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat29 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator31 = fractionFormat29.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat32 = fractionFormat29.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat33 = new org.apache.commons.math.fraction.FractionFormat(numberFormat28, numberFormat32);
        org.apache.commons.math.fraction.FractionFormat fractionFormat34 = new org.apache.commons.math.fraction.FractionFormat(numberFormat24, numberFormat28);
        org.apache.commons.math.fraction.FractionFormat fractionFormat35 = new org.apache.commons.math.fraction.FractionFormat(numberFormat14, numberFormat24);
        org.apache.commons.math.fraction.FractionFormat fractionFormat36 = new org.apache.commons.math.fraction.FractionFormat(numberFormat4, numberFormat14);
        // The following exception was thrown during execution in test generation
        try {
            fractionFormat2.setNumeratorFormat(numberFormat4);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: numerator format can not be null.");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(obj3);
        org.junit.Assert.assertNull(numberFormat8);
        org.junit.Assert.assertNull(numberFormat9);
        org.junit.Assert.assertNull(numberFormat10);
        org.junit.Assert.assertNotNull(fractionFormat11);
        org.junit.Assert.assertNotNull(attributedCharacterIterator13);
        org.junit.Assert.assertNotNull(numberFormat14);
        org.junit.Assert.assertNotNull(fractionFormat15);
        org.junit.Assert.assertNotNull(attributedCharacterIterator17);
        org.junit.Assert.assertNotNull(numberFormat18);
        org.junit.Assert.assertNotNull(fractionFormat21);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertNotNull(numberFormat24);
        org.junit.Assert.assertNotNull(fractionFormat25);
        org.junit.Assert.assertNotNull(attributedCharacterIterator27);
        org.junit.Assert.assertNotNull(numberFormat28);
        org.junit.Assert.assertNotNull(fractionFormat29);
        org.junit.Assert.assertNotNull(attributedCharacterIterator31);
        org.junit.Assert.assertNotNull(numberFormat32);
    }

    @Test
    public void test0131() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0131");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.text.NumberFormat numberFormat3 = fractionFormat2.getNumeratorFormat();
        java.lang.Object obj4 = fractionFormat2.clone();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.fraction.Fraction fraction6 = fractionFormat2.parse("10");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(numberFormat3);
        org.junit.Assert.assertNotNull(obj4);
    }

    @Test
    public void test0132() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0132");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.text.NumberFormat numberFormat3 = fractionFormat2.getDenominatorFormat();
        java.text.NumberFormat numberFormat4 = fractionFormat2.getNumeratorFormat();
        java.text.NumberFormat numberFormat5 = fractionFormat2.getNumeratorFormat();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj7 = fractionFormat2.parseObject("10");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(numberFormat3);
        org.junit.Assert.assertNull(numberFormat4);
        org.junit.Assert.assertNull(numberFormat5);
    }

    @Test
    public void test0133() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0133");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat5 = fractionFormat0.getNumeratorFormat();
        java.text.NumberFormat numberFormat6 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat7 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator9 = fractionFormat7.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat10 = fractionFormat7.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = new org.apache.commons.math.fraction.FractionFormat(numberFormat6, numberFormat10);
        java.lang.Object obj12 = fractionFormat11.clone();
        java.text.ParsePosition parsePosition14 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj15 = fractionFormat11.parseObject("-1 / 1", parsePosition14);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertNotNull(fractionFormat7);
        org.junit.Assert.assertNotNull(attributedCharacterIterator9);
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertNotNull(obj12);
    }

    @Test
    public void test0134() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0134");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat3 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat4 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj6 = fractionFormat4.parseObject("0 / 1");
        java.lang.Object obj8 = fractionFormat4.parseObject("0 / 1");
        java.text.NumberFormat numberFormat9 = fractionFormat4.getNumeratorFormat();
        java.text.NumberFormat numberFormat10 = fractionFormat4.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator13 = fractionFormat11.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat14 = fractionFormat11.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat15 = new org.apache.commons.math.fraction.FractionFormat(numberFormat10, numberFormat14);
        fractionFormat0.setNumeratorFormat(numberFormat14);
        java.text.NumberFormat numberFormat17 = null;
        // The following exception was thrown during execution in test generation
        try {
            fractionFormat0.setDenominatorFormat(numberFormat17);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: denominator format can not be null.");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(numberFormat3);
        org.junit.Assert.assertNotNull(fractionFormat4);
        org.junit.Assert.assertNotNull(obj6);
        org.junit.Assert.assertNotNull(obj8);
        org.junit.Assert.assertNotNull(numberFormat9);
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertNotNull(fractionFormat11);
        org.junit.Assert.assertNotNull(attributedCharacterIterator13);
        org.junit.Assert.assertNotNull(numberFormat14);
    }

    @Test
    public void test0135() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0135");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat5 = fractionFormat0.getNumeratorFormat();
        java.lang.Object obj6 = numberFormat5.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat7 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj9 = fractionFormat7.parseObject("0 / 1");
        java.lang.Object obj11 = fractionFormat7.parseObject("0 / 1");
        java.text.NumberFormat numberFormat12 = fractionFormat7.getNumeratorFormat();
        java.text.NumberFormat numberFormat13 = fractionFormat7.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat14 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator16 = fractionFormat14.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat17 = fractionFormat14.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat18 = new org.apache.commons.math.fraction.FractionFormat(numberFormat13, numberFormat17);
        org.apache.commons.math.fraction.FractionFormat fractionFormat19 = new org.apache.commons.math.fraction.FractionFormat(numberFormat5, numberFormat17);
        java.lang.Class<?> wildcardClass20 = numberFormat17.getClass();
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(obj6);
        org.junit.Assert.assertNotNull(fractionFormat7);
        org.junit.Assert.assertNotNull(obj9);
        org.junit.Assert.assertNotNull(obj11);
        org.junit.Assert.assertNotNull(numberFormat12);
        org.junit.Assert.assertNotNull(numberFormat13);
        org.junit.Assert.assertNotNull(fractionFormat14);
        org.junit.Assert.assertNotNull(attributedCharacterIterator16);
        org.junit.Assert.assertNotNull(numberFormat17);
        org.junit.Assert.assertNotNull(wildcardClass20);
    }

    @Test
    public void test0136() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0136");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat5 = fractionFormat0.getNumeratorFormat();
        java.text.NumberFormat numberFormat6 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat7 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator9 = fractionFormat7.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat10 = fractionFormat7.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = new org.apache.commons.math.fraction.FractionFormat(numberFormat6, numberFormat10);
        java.lang.Object obj12 = fractionFormat11.clone();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.fraction.Fraction fraction14 = fractionFormat11.parse("hi!");
            org.junit.Assert.fail("Expected exception of type java.text.ParseException; message: Unparseable fraction number: \"hi!\"");
        } catch (java.text.ParseException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertNotNull(fractionFormat7);
        org.junit.Assert.assertNotNull(attributedCharacterIterator9);
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertNotNull(obj12);
    }

    @Test
    public void test0137() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0137");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.Fraction fraction2 = fractionFormat0.parse("0 / 1");
        java.text.NumberFormat numberFormat3 = fractionFormat0.getNumeratorFormat();
        java.text.ParsePosition parsePosition5 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.fraction.Fraction fraction6 = fractionFormat0.parse("", parsePosition5);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(fraction2);
        org.junit.Assert.assertNotNull(numberFormat3);
    }

    @Test
    public void test0138() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0138");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat3 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat4 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj6 = fractionFormat4.parseObject("0 / 1");
        java.lang.Object obj8 = fractionFormat4.parseObject("0 / 1");
        java.text.NumberFormat numberFormat9 = fractionFormat4.getNumeratorFormat();
        java.text.NumberFormat numberFormat10 = fractionFormat4.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator13 = fractionFormat11.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat14 = fractionFormat11.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat15 = new org.apache.commons.math.fraction.FractionFormat(numberFormat10, numberFormat14);
        fractionFormat0.setNumeratorFormat(numberFormat14);
        java.lang.Class<?> wildcardClass17 = numberFormat14.getClass();
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(numberFormat3);
        org.junit.Assert.assertNotNull(fractionFormat4);
        org.junit.Assert.assertNotNull(obj6);
        org.junit.Assert.assertNotNull(obj8);
        org.junit.Assert.assertNotNull(numberFormat9);
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertNotNull(fractionFormat11);
        org.junit.Assert.assertNotNull(attributedCharacterIterator13);
        org.junit.Assert.assertNotNull(numberFormat14);
        org.junit.Assert.assertNotNull(wildcardClass17);
    }

    @Test
    public void test0139() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0139");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat5 = fractionFormat0.getNumeratorFormat();
        java.lang.Object obj6 = numberFormat5.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat7 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj9 = fractionFormat7.parseObject("0 / 1");
        java.lang.Object obj11 = fractionFormat7.parseObject("0 / 1");
        java.text.NumberFormat numberFormat12 = fractionFormat7.getNumeratorFormat();
        java.text.NumberFormat numberFormat13 = fractionFormat7.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat14 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator16 = fractionFormat14.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat17 = fractionFormat14.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat18 = new org.apache.commons.math.fraction.FractionFormat(numberFormat13, numberFormat17);
        org.apache.commons.math.fraction.FractionFormat fractionFormat19 = new org.apache.commons.math.fraction.FractionFormat(numberFormat5, numberFormat17);
        java.text.NumberFormat numberFormat20 = null;
        java.text.NumberFormat numberFormat21 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat22 = new org.apache.commons.math.fraction.FractionFormat(numberFormat20, numberFormat21);
        java.text.NumberFormat numberFormat23 = fractionFormat22.getDenominatorFormat();
        java.text.NumberFormat numberFormat24 = fractionFormat22.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat25 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator27 = fractionFormat25.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat28 = fractionFormat25.getDenominatorFormat();
        fractionFormat22.setNumeratorFormat(numberFormat28);
        java.lang.Object obj30 = numberFormat28.clone();
        java.lang.String str32 = numberFormat28.format((java.lang.Object) (short) 10);
        java.text.NumberFormat numberFormat33 = null;
        java.text.NumberFormat numberFormat34 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat35 = new org.apache.commons.math.fraction.FractionFormat(numberFormat33, numberFormat34);
        java.text.NumberFormat numberFormat36 = fractionFormat35.getDenominatorFormat();
        java.text.NumberFormat numberFormat37 = fractionFormat35.getNumeratorFormat();
        java.text.NumberFormat numberFormat38 = fractionFormat35.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat39 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator41 = fractionFormat39.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat42 = fractionFormat39.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat43 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator45 = fractionFormat43.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat46 = fractionFormat43.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat47 = new org.apache.commons.math.fraction.FractionFormat(numberFormat42, numberFormat46);
        fractionFormat35.setNumeratorFormat(numberFormat42);
        org.apache.commons.math.fraction.FractionFormat fractionFormat49 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj51 = fractionFormat49.parseObject("0 / 1");
        java.text.NumberFormat numberFormat52 = fractionFormat49.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat53 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator55 = fractionFormat53.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat56 = fractionFormat53.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat57 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator59 = fractionFormat57.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat60 = fractionFormat57.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat61 = new org.apache.commons.math.fraction.FractionFormat(numberFormat56, numberFormat60);
        org.apache.commons.math.fraction.FractionFormat fractionFormat62 = new org.apache.commons.math.fraction.FractionFormat(numberFormat52, numberFormat56);
        org.apache.commons.math.fraction.FractionFormat fractionFormat63 = new org.apache.commons.math.fraction.FractionFormat(numberFormat42, numberFormat52);
        org.apache.commons.math.fraction.FractionFormat fractionFormat64 = new org.apache.commons.math.fraction.FractionFormat(numberFormat28, numberFormat52);
        org.apache.commons.math.fraction.FractionFormat fractionFormat65 = new org.apache.commons.math.fraction.FractionFormat(numberFormat28);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str66 = numberFormat17.format((java.lang.Object) numberFormat28);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot format given Object as a Number");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(obj6);
        org.junit.Assert.assertNotNull(fractionFormat7);
        org.junit.Assert.assertNotNull(obj9);
        org.junit.Assert.assertNotNull(obj11);
        org.junit.Assert.assertNotNull(numberFormat12);
        org.junit.Assert.assertNotNull(numberFormat13);
        org.junit.Assert.assertNotNull(fractionFormat14);
        org.junit.Assert.assertNotNull(attributedCharacterIterator16);
        org.junit.Assert.assertNotNull(numberFormat17);
        org.junit.Assert.assertNull(numberFormat23);
        org.junit.Assert.assertNull(numberFormat24);
        org.junit.Assert.assertNotNull(fractionFormat25);
        org.junit.Assert.assertNotNull(attributedCharacterIterator27);
        org.junit.Assert.assertNotNull(numberFormat28);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "10" + "'", str32, "10");
        org.junit.Assert.assertNull(numberFormat36);
        org.junit.Assert.assertNull(numberFormat37);
        org.junit.Assert.assertNull(numberFormat38);
        org.junit.Assert.assertNotNull(fractionFormat39);
        org.junit.Assert.assertNotNull(attributedCharacterIterator41);
        org.junit.Assert.assertNotNull(numberFormat42);
        org.junit.Assert.assertNotNull(fractionFormat43);
        org.junit.Assert.assertNotNull(attributedCharacterIterator45);
        org.junit.Assert.assertNotNull(numberFormat46);
        org.junit.Assert.assertNotNull(fractionFormat49);
        org.junit.Assert.assertNotNull(obj51);
        org.junit.Assert.assertNotNull(numberFormat52);
        org.junit.Assert.assertNotNull(fractionFormat53);
        org.junit.Assert.assertNotNull(attributedCharacterIterator55);
        org.junit.Assert.assertNotNull(numberFormat56);
        org.junit.Assert.assertNotNull(fractionFormat57);
        org.junit.Assert.assertNotNull(attributedCharacterIterator59);
        org.junit.Assert.assertNotNull(numberFormat60);
    }

    @Test
    public void test0140() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0140");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.text.NumberFormat numberFormat3 = fractionFormat2.getNumeratorFormat();
        java.text.NumberFormat numberFormat4 = fractionFormat2.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj7 = fractionFormat5.parseObject("0 / 1");
        java.lang.Object obj9 = fractionFormat5.parseObject("0 / 1");
        java.text.NumberFormat numberFormat10 = fractionFormat5.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj13 = fractionFormat11.parseObject("0 / 1");
        java.text.NumberFormat numberFormat14 = fractionFormat11.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat15 = new org.apache.commons.math.fraction.FractionFormat(numberFormat10, numberFormat14);
        fractionFormat2.setNumeratorFormat(numberFormat10);
        java.text.NumberFormat numberFormat17 = fractionFormat2.getDenominatorFormat();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj19 = numberFormat17.parseObject("0 / 1");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(numberFormat3);
        org.junit.Assert.assertNull(numberFormat4);
        org.junit.Assert.assertNotNull(fractionFormat5);
        org.junit.Assert.assertNotNull(obj7);
        org.junit.Assert.assertNotNull(obj9);
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertNotNull(fractionFormat11);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertNotNull(numberFormat14);
        org.junit.Assert.assertNull(numberFormat17);
    }

    @Test
    public void test0141() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0141");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj6 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat7 = null;
        java.text.NumberFormat numberFormat8 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat9 = new org.apache.commons.math.fraction.FractionFormat(numberFormat7, numberFormat8);
        java.text.NumberFormat numberFormat10 = fractionFormat9.getDenominatorFormat();
        java.text.NumberFormat numberFormat11 = fractionFormat9.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat12 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator14 = fractionFormat12.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat15 = fractionFormat12.getDenominatorFormat();
        fractionFormat9.setNumeratorFormat(numberFormat15);
        org.apache.commons.math.fraction.FractionFormat fractionFormat17 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj19 = fractionFormat17.parseObject("0 / 1");
        java.text.NumberFormat numberFormat20 = fractionFormat17.getNumeratorFormat();
        fractionFormat9.setNumeratorFormat(numberFormat20);
        java.lang.Object obj23 = numberFormat20.parseObject("0 / 1");
        fractionFormat0.setNumeratorFormat(numberFormat20);
        org.apache.commons.math.fraction.FractionFormat fractionFormat25 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.Fraction fraction27 = fractionFormat25.parse("0 / 1");
        java.lang.String str28 = org.apache.commons.math.fraction.FractionFormat.formatFraction(fraction27);
        java.lang.String str29 = org.apache.commons.math.fraction.FractionFormat.formatFraction(fraction27);
        java.lang.String str30 = org.apache.commons.math.fraction.FractionFormat.formatFraction(fraction27);
        java.lang.String str31 = org.apache.commons.math.fraction.FractionFormat.formatFraction(fraction27);
        java.lang.String str32 = org.apache.commons.math.fraction.FractionFormat.formatFraction(fraction27);
        java.lang.String str33 = org.apache.commons.math.fraction.FractionFormat.formatFraction(fraction27);
        java.lang.String str34 = org.apache.commons.math.fraction.FractionFormat.formatFraction(fraction27);
        java.lang.StringBuffer stringBuffer35 = null;
        java.text.FieldPosition fieldPosition36 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer37 = fractionFormat0.format(fraction27, stringBuffer35, fieldPosition36);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(obj6);
        org.junit.Assert.assertNull(numberFormat10);
        org.junit.Assert.assertNull(numberFormat11);
        org.junit.Assert.assertNotNull(fractionFormat12);
        org.junit.Assert.assertNotNull(attributedCharacterIterator14);
        org.junit.Assert.assertNotNull(numberFormat15);
        org.junit.Assert.assertNotNull(fractionFormat17);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(numberFormat20);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + 0L + "'", obj23, 0L);
        org.junit.Assert.assertNotNull(fractionFormat25);
        org.junit.Assert.assertNotNull(fraction27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "0 / 1" + "'", str28, "0 / 1");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "0 / 1" + "'", str29, "0 / 1");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "0 / 1" + "'", str30, "0 / 1");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "0 / 1" + "'", str31, "0 / 1");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "0 / 1" + "'", str32, "0 / 1");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "0 / 1" + "'", str33, "0 / 1");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "0 / 1" + "'", str34, "0 / 1");
    }

    @Test
    public void test0142() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0142");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.text.NumberFormat numberFormat3 = fractionFormat2.getNumeratorFormat();
        java.text.NumberFormat numberFormat4 = fractionFormat2.getNumeratorFormat();
        java.text.NumberFormat numberFormat5 = fractionFormat2.getNumeratorFormat();
        java.text.NumberFormat numberFormat6 = fractionFormat2.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat7 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj9 = fractionFormat7.parseObject("0 / 1");
        java.lang.Object obj11 = fractionFormat7.parseObject("0 / 1");
        java.lang.StringBuffer stringBuffer12 = null;
        java.text.FieldPosition fieldPosition13 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer14 = fractionFormat2.format(obj11, stringBuffer12, fieldPosition13);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(numberFormat3);
        org.junit.Assert.assertNull(numberFormat4);
        org.junit.Assert.assertNull(numberFormat5);
        org.junit.Assert.assertNull(numberFormat6);
        org.junit.Assert.assertNotNull(fractionFormat7);
        org.junit.Assert.assertNotNull(obj9);
        org.junit.Assert.assertNotNull(obj11);
    }

    @Test
    public void test0143() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0143");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.text.NumberFormat numberFormat3 = fractionFormat2.getDenominatorFormat();
        java.text.NumberFormat numberFormat4 = fractionFormat2.getNumeratorFormat();
        java.text.NumberFormat numberFormat5 = fractionFormat2.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat6 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj8 = fractionFormat6.parseObject("0 / 1");
        java.lang.Object obj10 = fractionFormat6.parseObject("0 / 1");
        java.text.NumberFormat numberFormat11 = fractionFormat6.getNumeratorFormat();
        java.lang.Object obj12 = numberFormat11.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat13 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj15 = fractionFormat13.parseObject("0 / 1");
        java.lang.Object obj17 = fractionFormat13.parseObject("0 / 1");
        java.text.NumberFormat numberFormat18 = fractionFormat13.getNumeratorFormat();
        java.text.NumberFormat numberFormat19 = fractionFormat13.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat20 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator22 = fractionFormat20.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat23 = fractionFormat20.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat24 = new org.apache.commons.math.fraction.FractionFormat(numberFormat19, numberFormat23);
        org.apache.commons.math.fraction.FractionFormat fractionFormat25 = new org.apache.commons.math.fraction.FractionFormat(numberFormat11, numberFormat23);
        fractionFormat2.setNumeratorFormat(numberFormat11);
        org.apache.commons.math.fraction.FractionFormat fractionFormat27 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj29 = fractionFormat27.parseObject("0 / 1");
        java.text.NumberFormat numberFormat30 = fractionFormat27.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat31 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator33 = fractionFormat31.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat34 = fractionFormat31.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat35 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator37 = fractionFormat35.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat38 = fractionFormat35.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat39 = new org.apache.commons.math.fraction.FractionFormat(numberFormat34, numberFormat38);
        org.apache.commons.math.fraction.FractionFormat fractionFormat40 = new org.apache.commons.math.fraction.FractionFormat(numberFormat30, numberFormat34);
        java.lang.StringBuffer stringBuffer41 = null;
        java.text.FieldPosition fieldPosition42 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer43 = fractionFormat2.format((java.lang.Object) fractionFormat40, stringBuffer41, fieldPosition42);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot format given object as a fraction");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(numberFormat3);
        org.junit.Assert.assertNull(numberFormat4);
        org.junit.Assert.assertNull(numberFormat5);
        org.junit.Assert.assertNotNull(fractionFormat6);
        org.junit.Assert.assertNotNull(obj8);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertNotNull(numberFormat11);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertNotNull(fractionFormat13);
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertNotNull(numberFormat18);
        org.junit.Assert.assertNotNull(numberFormat19);
        org.junit.Assert.assertNotNull(fractionFormat20);
        org.junit.Assert.assertNotNull(attributedCharacterIterator22);
        org.junit.Assert.assertNotNull(numberFormat23);
        org.junit.Assert.assertNotNull(fractionFormat27);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertNotNull(numberFormat30);
        org.junit.Assert.assertNotNull(fractionFormat31);
        org.junit.Assert.assertNotNull(attributedCharacterIterator33);
        org.junit.Assert.assertNotNull(numberFormat34);
        org.junit.Assert.assertNotNull(fractionFormat35);
        org.junit.Assert.assertNotNull(attributedCharacterIterator37);
        org.junit.Assert.assertNotNull(numberFormat38);
    }

    @Test
    public void test0144() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0144");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj6 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj8 = fractionFormat0.parseObject("-1 / 1");
        java.lang.Class<?> wildcardClass9 = fractionFormat0.getClass();
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(obj6);
        org.junit.Assert.assertNotNull(obj8);
        org.junit.Assert.assertNotNull(wildcardClass9);
    }

    @Test
    public void test0145() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0145");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.text.ParsePosition parsePosition4 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.fraction.Fraction fraction5 = fractionFormat0.parse("hi!", parsePosition4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
    }

    @Test
    public void test0146() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0146");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat5 = fractionFormat0.getNumeratorFormat();
        java.text.NumberFormat numberFormat6 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat7 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator9 = fractionFormat7.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat10 = fractionFormat7.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = new org.apache.commons.math.fraction.FractionFormat(numberFormat6, numberFormat10);
        java.lang.Object obj12 = fractionFormat11.clone();
        java.text.ParsePosition parsePosition14 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj15 = fractionFormat11.parseObject("0 / 1", parsePosition14);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertNotNull(fractionFormat7);
        org.junit.Assert.assertNotNull(attributedCharacterIterator9);
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertNotNull(obj12);
    }

    @Test
    public void test0147() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0147");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat5 = fractionFormat0.getNumeratorFormat();
        java.text.NumberFormat numberFormat6 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat7 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator9 = fractionFormat7.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat10 = fractionFormat7.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = new org.apache.commons.math.fraction.FractionFormat(numberFormat6, numberFormat10);
        org.apache.commons.math.fraction.FractionFormat fractionFormat12 = new org.apache.commons.math.fraction.FractionFormat(numberFormat6);
        java.lang.Class<?> wildcardClass13 = fractionFormat12.getClass();
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertNotNull(fractionFormat7);
        org.junit.Assert.assertNotNull(attributedCharacterIterator9);
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertNotNull(wildcardClass13);
    }

    @Test
    public void test0148() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0148");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj6 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj7 = fractionFormat0.clone();
        java.text.ParsePosition parsePosition9 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj10 = fractionFormat0.parseObject("10", parsePosition9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(obj6);
        org.junit.Assert.assertNotNull(obj7);
    }

    @Test
    public void test0149() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0149");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat3 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat4 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.Fraction fraction6 = fractionFormat4.parse("0 / 1");
        java.lang.String str7 = org.apache.commons.math.fraction.FractionFormat.formatFraction(fraction6);
        java.lang.String str8 = org.apache.commons.math.fraction.FractionFormat.formatFraction(fraction6);
        java.lang.String str9 = org.apache.commons.math.fraction.FractionFormat.formatFraction(fraction6);
        java.lang.String str10 = org.apache.commons.math.fraction.FractionFormat.formatFraction(fraction6);
        java.lang.StringBuffer stringBuffer11 = null;
        java.text.FieldPosition fieldPosition12 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer13 = fractionFormat0.format(fraction6, stringBuffer11, fieldPosition12);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(numberFormat3);
        org.junit.Assert.assertNotNull(fractionFormat4);
        org.junit.Assert.assertNotNull(fraction6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "0 / 1" + "'", str7, "0 / 1");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "0 / 1" + "'", str8, "0 / 1");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "0 / 1" + "'", str9, "0 / 1");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "0 / 1" + "'", str10, "0 / 1");
    }

    @Test
    public void test0150() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0150");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat5 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat6 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.Fraction fraction8 = fractionFormat6.parse("0 / 1");
        // The following exception was thrown during execution in test generation
        try {
            java.text.AttributedCharacterIterator attributedCharacterIterator9 = fractionFormat0.formatToCharacterIterator((java.lang.Object) "0 / 1");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot format given object as a fraction");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(fractionFormat6);
        org.junit.Assert.assertNotNull(fraction8);
    }

    @Test
    public void test0151() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0151");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        org.apache.commons.math.fraction.FractionFormat fractionFormat3 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.Fraction fraction5 = fractionFormat3.parse("0 / 1");
        java.lang.String str6 = org.apache.commons.math.fraction.FractionFormat.formatFraction(fraction5);
        java.lang.StringBuffer stringBuffer7 = null;
        java.text.FieldPosition fieldPosition8 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer9 = fractionFormat0.format(fraction5, stringBuffer7, fieldPosition8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(fractionFormat3);
        org.junit.Assert.assertNotNull(fraction5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "0 / 1" + "'", str6, "0 / 1");
    }

    @Test
    public void test0152() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0152");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.Fraction fraction2 = fractionFormat0.parse("0 / 1");
        org.apache.commons.math.fraction.FractionFormat fractionFormat3 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator5 = fractionFormat3.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat6 = fractionFormat3.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat7 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator9 = fractionFormat7.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat10 = fractionFormat7.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = new org.apache.commons.math.fraction.FractionFormat(numberFormat6, numberFormat10);
        java.text.NumberFormat numberFormat12 = fractionFormat11.getDenominatorFormat();
        fractionFormat0.setDenominatorFormat(numberFormat12);
        java.text.NumberFormat numberFormat14 = fractionFormat0.getNumeratorFormat();
        java.text.NumberFormat numberFormat15 = null;
        java.text.NumberFormat numberFormat16 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat17 = new org.apache.commons.math.fraction.FractionFormat(numberFormat15, numberFormat16);
        java.text.NumberFormat numberFormat18 = fractionFormat17.getDenominatorFormat();
        java.text.NumberFormat numberFormat19 = fractionFormat17.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat20 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator22 = fractionFormat20.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat23 = fractionFormat20.getDenominatorFormat();
        fractionFormat17.setNumeratorFormat(numberFormat23);
        org.apache.commons.math.fraction.FractionFormat fractionFormat25 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj27 = fractionFormat25.parseObject("0 / 1");
        java.lang.Object obj29 = fractionFormat25.parseObject("0 / 1");
        java.text.NumberFormat numberFormat30 = fractionFormat25.getNumeratorFormat();
        fractionFormat17.setDenominatorFormat(numberFormat30);
        // The following exception was thrown during execution in test generation
        try {
            java.text.AttributedCharacterIterator attributedCharacterIterator32 = numberFormat14.formatToCharacterIterator((java.lang.Object) fractionFormat17);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot format given Object as a Number");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(fraction2);
        org.junit.Assert.assertNotNull(fractionFormat3);
        org.junit.Assert.assertNotNull(attributedCharacterIterator5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertNotNull(fractionFormat7);
        org.junit.Assert.assertNotNull(attributedCharacterIterator9);
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertNotNull(numberFormat12);
        org.junit.Assert.assertNotNull(numberFormat14);
        org.junit.Assert.assertNull(numberFormat18);
        org.junit.Assert.assertNull(numberFormat19);
        org.junit.Assert.assertNotNull(fractionFormat20);
        org.junit.Assert.assertNotNull(attributedCharacterIterator22);
        org.junit.Assert.assertNotNull(numberFormat23);
        org.junit.Assert.assertNotNull(fractionFormat25);
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertNotNull(numberFormat30);
    }

    @Test
    public void test0153() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0153");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat5 = fractionFormat0.getNumeratorFormat();
        java.text.NumberFormat numberFormat6 = null;
        java.text.NumberFormat numberFormat7 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat8 = new org.apache.commons.math.fraction.FractionFormat(numberFormat6, numberFormat7);
        java.text.NumberFormat numberFormat9 = fractionFormat8.getDenominatorFormat();
        java.text.NumberFormat numberFormat10 = fractionFormat8.getNumeratorFormat();
        java.text.NumberFormat numberFormat11 = fractionFormat8.getNumeratorFormat();
        java.lang.StringBuffer stringBuffer12 = null;
        java.text.FieldPosition fieldPosition13 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer14 = fractionFormat0.format((java.lang.Object) fractionFormat8, stringBuffer12, fieldPosition13);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot format given object as a fraction");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNull(numberFormat9);
        org.junit.Assert.assertNull(numberFormat10);
        org.junit.Assert.assertNull(numberFormat11);
    }

    @Test
    public void test0154() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0154");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat5 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat6 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj8 = fractionFormat6.parseObject("0 / 1");
        java.text.NumberFormat numberFormat9 = fractionFormat6.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat10 = new org.apache.commons.math.fraction.FractionFormat(numberFormat5, numberFormat9);
        java.text.NumberFormat numberFormat11 = null;
        java.text.NumberFormat numberFormat12 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat13 = new org.apache.commons.math.fraction.FractionFormat(numberFormat11, numberFormat12);
        java.text.NumberFormat numberFormat14 = fractionFormat13.getDenominatorFormat();
        java.text.NumberFormat numberFormat15 = fractionFormat13.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat16 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator18 = fractionFormat16.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat19 = fractionFormat16.getDenominatorFormat();
        fractionFormat13.setNumeratorFormat(numberFormat19);
        java.lang.Object obj21 = numberFormat19.clone();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str22 = numberFormat9.format((java.lang.Object) numberFormat19);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot format given Object as a Number");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(fractionFormat6);
        org.junit.Assert.assertNotNull(obj8);
        org.junit.Assert.assertNotNull(numberFormat9);
        org.junit.Assert.assertNull(numberFormat14);
        org.junit.Assert.assertNull(numberFormat15);
        org.junit.Assert.assertNotNull(fractionFormat16);
        org.junit.Assert.assertNotNull(attributedCharacterIterator18);
        org.junit.Assert.assertNotNull(numberFormat19);
        org.junit.Assert.assertNotNull(obj21);
    }

    @Test
    public void test0155() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0155");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.text.NumberFormat numberFormat3 = fractionFormat2.getNumeratorFormat();
        java.text.NumberFormat numberFormat4 = fractionFormat2.getNumeratorFormat();
        java.text.NumberFormat numberFormat5 = fractionFormat2.getNumeratorFormat();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.fraction.Fraction fraction7 = fractionFormat2.parse("hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(numberFormat3);
        org.junit.Assert.assertNull(numberFormat4);
        org.junit.Assert.assertNull(numberFormat5);
    }

    @Test
    public void test0156() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0156");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator2 = fractionFormat0.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.ParsePosition parsePosition4 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj5 = fractionFormat0.parseObject("hi!", parsePosition4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(attributedCharacterIterator2);
    }

    @Test
    public void test0157() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0157");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat5 = fractionFormat0.getNumeratorFormat();
        java.lang.Object obj6 = numberFormat5.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat7 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj9 = fractionFormat7.parseObject("0 / 1");
        java.lang.Object obj11 = fractionFormat7.parseObject("0 / 1");
        java.text.NumberFormat numberFormat12 = fractionFormat7.getNumeratorFormat();
        java.text.NumberFormat numberFormat13 = fractionFormat7.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat14 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator16 = fractionFormat14.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat17 = fractionFormat14.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat18 = new org.apache.commons.math.fraction.FractionFormat(numberFormat13, numberFormat17);
        org.apache.commons.math.fraction.FractionFormat fractionFormat19 = new org.apache.commons.math.fraction.FractionFormat(numberFormat5, numberFormat17);
        java.text.NumberFormat numberFormat20 = fractionFormat19.getNumeratorFormat();
        java.lang.Object obj21 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str22 = numberFormat20.format(obj21);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot format given Object as a Number");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(obj6);
        org.junit.Assert.assertNotNull(fractionFormat7);
        org.junit.Assert.assertNotNull(obj9);
        org.junit.Assert.assertNotNull(obj11);
        org.junit.Assert.assertNotNull(numberFormat12);
        org.junit.Assert.assertNotNull(numberFormat13);
        org.junit.Assert.assertNotNull(fractionFormat14);
        org.junit.Assert.assertNotNull(attributedCharacterIterator16);
        org.junit.Assert.assertNotNull(numberFormat17);
        org.junit.Assert.assertNotNull(numberFormat20);
    }

    @Test
    public void test0158() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0158");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("-1 / 1");
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat6 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj8 = fractionFormat6.parseObject("0 / 1");
        java.lang.Object obj10 = fractionFormat6.parseObject("0 / 1");
        java.text.NumberFormat numberFormat11 = fractionFormat6.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat12 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj14 = fractionFormat12.parseObject("0 / 1");
        java.text.NumberFormat numberFormat15 = fractionFormat12.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat16 = new org.apache.commons.math.fraction.FractionFormat(numberFormat11, numberFormat15);
        org.apache.commons.math.fraction.FractionFormat fractionFormat17 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj19 = fractionFormat17.parseObject("0 / 1");
        java.lang.Object obj21 = fractionFormat17.parseObject("0 / 1");
        java.text.NumberFormat numberFormat22 = fractionFormat17.getNumeratorFormat();
        fractionFormat16.setDenominatorFormat(numberFormat22);
        java.lang.Object obj24 = numberFormat22.clone();
        fractionFormat5.setNumeratorFormat(numberFormat22);
        java.lang.Object obj26 = numberFormat22.clone();
        java.lang.Object obj27 = numberFormat22.clone();
        fractionFormat0.setDenominatorFormat(numberFormat22);
        org.apache.commons.math.fraction.FractionFormat fractionFormat29 = new org.apache.commons.math.fraction.FractionFormat(numberFormat22);
        java.text.ParsePosition parsePosition31 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.fraction.Fraction fraction32 = fractionFormat29.parse("hi!", parsePosition31);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(fractionFormat5);
        org.junit.Assert.assertNotNull(fractionFormat6);
        org.junit.Assert.assertNotNull(obj8);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertNotNull(numberFormat11);
        org.junit.Assert.assertNotNull(fractionFormat12);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertNotNull(numberFormat15);
        org.junit.Assert.assertNotNull(fractionFormat17);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertNotNull(numberFormat22);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertNotNull(obj27);
    }

    @Test
    public void test0159() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0159");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj6 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat7 = null;
        java.text.NumberFormat numberFormat8 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat9 = new org.apache.commons.math.fraction.FractionFormat(numberFormat7, numberFormat8);
        java.text.NumberFormat numberFormat10 = fractionFormat9.getDenominatorFormat();
        java.text.NumberFormat numberFormat11 = fractionFormat9.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat12 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator14 = fractionFormat12.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat15 = fractionFormat12.getDenominatorFormat();
        fractionFormat9.setNumeratorFormat(numberFormat15);
        org.apache.commons.math.fraction.FractionFormat fractionFormat17 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj19 = fractionFormat17.parseObject("0 / 1");
        java.text.NumberFormat numberFormat20 = fractionFormat17.getNumeratorFormat();
        fractionFormat9.setNumeratorFormat(numberFormat20);
        java.lang.Object obj23 = numberFormat20.parseObject("0 / 1");
        fractionFormat0.setNumeratorFormat(numberFormat20);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.fraction.Fraction fraction26 = fractionFormat0.parse("hi!");
            org.junit.Assert.fail("Expected exception of type java.text.ParseException; message: Unparseable fraction number: \"hi!\"");
        } catch (java.text.ParseException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(obj6);
        org.junit.Assert.assertNull(numberFormat10);
        org.junit.Assert.assertNull(numberFormat11);
        org.junit.Assert.assertNotNull(fractionFormat12);
        org.junit.Assert.assertNotNull(attributedCharacterIterator14);
        org.junit.Assert.assertNotNull(numberFormat15);
        org.junit.Assert.assertNotNull(fractionFormat17);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(numberFormat20);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + 0L + "'", obj23, 0L);
    }

    @Test
    public void test0160() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0160");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj6 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj8 = fractionFormat0.parseObject("-1 / 1");
        java.lang.Class<?> wildcardClass9 = obj8.getClass();
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(obj6);
        org.junit.Assert.assertNotNull(obj8);
        org.junit.Assert.assertNotNull(wildcardClass9);
    }

    @Test
    public void test0161() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0161");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj6 = fractionFormat0.parseObject("0 / 1");
        java.text.ParsePosition parsePosition8 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.fraction.Fraction fraction9 = fractionFormat0.parse("", parsePosition8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(obj6);
    }

    @Test
    public void test0162() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0162");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = new org.apache.commons.math.fraction.FractionFormat();
        java.lang.String str2 = fractionFormat0.format((java.lang.Object) 0);
        java.lang.String str4 = fractionFormat0.format((java.lang.Object) (-1));
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj7 = fractionFormat5.parseObject("0 / 1");
        java.lang.Object obj9 = fractionFormat5.parseObject("0 / 1");
        java.lang.Object obj11 = fractionFormat5.parseObject("0 / 1");
        java.text.NumberFormat numberFormat12 = fractionFormat5.getNumeratorFormat();
        java.lang.Object obj14 = fractionFormat5.parseObject("-1 / 1");
        java.lang.StringBuffer stringBuffer15 = null;
        java.text.FieldPosition fieldPosition16 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer17 = fractionFormat0.format((java.lang.Object) "-1 / 1", stringBuffer15, fieldPosition16);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot format given object as a fraction");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "0 / 1" + "'", str2, "0 / 1");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-1 / 1" + "'", str4, "-1 / 1");
        org.junit.Assert.assertNotNull(fractionFormat5);
        org.junit.Assert.assertNotNull(obj7);
        org.junit.Assert.assertNotNull(obj9);
        org.junit.Assert.assertNotNull(obj11);
        org.junit.Assert.assertNotNull(numberFormat12);
        org.junit.Assert.assertNotNull(obj14);
    }

    @Test
    public void test0163() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0163");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator2 = fractionFormat0.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat3 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat4 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator6 = fractionFormat4.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat7 = fractionFormat4.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat8 = new org.apache.commons.math.fraction.FractionFormat(numberFormat3, numberFormat7);
        java.text.ParsePosition parsePosition10 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.fraction.Fraction fraction11 = fractionFormat8.parse("hi!", parsePosition10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(attributedCharacterIterator2);
        org.junit.Assert.assertNotNull(numberFormat3);
        org.junit.Assert.assertNotNull(fractionFormat4);
        org.junit.Assert.assertNotNull(attributedCharacterIterator6);
        org.junit.Assert.assertNotNull(numberFormat7);
    }

    @Test
    public void test0164() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0164");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.text.NumberFormat numberFormat3 = fractionFormat2.getDenominatorFormat();
        java.text.NumberFormat numberFormat4 = fractionFormat2.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator7 = fractionFormat5.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat8 = fractionFormat5.getDenominatorFormat();
        fractionFormat2.setNumeratorFormat(numberFormat8);
        org.apache.commons.math.fraction.FractionFormat fractionFormat10 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj12 = fractionFormat10.parseObject("0 / 1");
        java.text.NumberFormat numberFormat13 = fractionFormat10.getNumeratorFormat();
        fractionFormat2.setNumeratorFormat(numberFormat13);
        org.apache.commons.math.fraction.FractionFormat fractionFormat15 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.Fraction fraction17 = fractionFormat15.parse("0 / 1");
        java.lang.String str18 = org.apache.commons.math.fraction.FractionFormat.formatFraction(fraction17);
        java.lang.StringBuffer stringBuffer19 = null;
        java.text.FieldPosition fieldPosition20 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer21 = fractionFormat2.format(fraction17, stringBuffer19, fieldPosition20);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(numberFormat3);
        org.junit.Assert.assertNull(numberFormat4);
        org.junit.Assert.assertNotNull(fractionFormat5);
        org.junit.Assert.assertNotNull(attributedCharacterIterator7);
        org.junit.Assert.assertNotNull(numberFormat8);
        org.junit.Assert.assertNotNull(fractionFormat10);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertNotNull(numberFormat13);
        org.junit.Assert.assertNotNull(fractionFormat15);
        org.junit.Assert.assertNotNull(fraction17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "0 / 1" + "'", str18, "0 / 1");
    }

    @Test
    public void test0165() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0165");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        java.text.NumberFormat numberFormat2 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat3 = new org.apache.commons.math.fraction.FractionFormat(numberFormat1, numberFormat2);
        java.text.NumberFormat numberFormat4 = fractionFormat3.getDenominatorFormat();
        java.text.NumberFormat numberFormat5 = fractionFormat3.getNumeratorFormat();
        java.text.NumberFormat numberFormat6 = fractionFormat3.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat7 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator9 = fractionFormat7.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat10 = fractionFormat7.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator13 = fractionFormat11.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat14 = fractionFormat11.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat15 = new org.apache.commons.math.fraction.FractionFormat(numberFormat10, numberFormat14);
        fractionFormat3.setNumeratorFormat(numberFormat10);
        org.apache.commons.math.fraction.FractionFormat fractionFormat17 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj19 = fractionFormat17.parseObject("0 / 1");
        java.text.NumberFormat numberFormat20 = fractionFormat17.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat21 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator23 = fractionFormat21.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat24 = fractionFormat21.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat25 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator27 = fractionFormat25.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat28 = fractionFormat25.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat29 = new org.apache.commons.math.fraction.FractionFormat(numberFormat24, numberFormat28);
        org.apache.commons.math.fraction.FractionFormat fractionFormat30 = new org.apache.commons.math.fraction.FractionFormat(numberFormat20, numberFormat24);
        org.apache.commons.math.fraction.FractionFormat fractionFormat31 = new org.apache.commons.math.fraction.FractionFormat(numberFormat10, numberFormat20);
        org.apache.commons.math.fraction.FractionFormat fractionFormat32 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat10);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.fraction.Fraction fraction34 = fractionFormat32.parse("0 / 1");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(numberFormat4);
        org.junit.Assert.assertNull(numberFormat5);
        org.junit.Assert.assertNull(numberFormat6);
        org.junit.Assert.assertNotNull(fractionFormat7);
        org.junit.Assert.assertNotNull(attributedCharacterIterator9);
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertNotNull(fractionFormat11);
        org.junit.Assert.assertNotNull(attributedCharacterIterator13);
        org.junit.Assert.assertNotNull(numberFormat14);
        org.junit.Assert.assertNotNull(fractionFormat17);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(numberFormat20);
        org.junit.Assert.assertNotNull(fractionFormat21);
        org.junit.Assert.assertNotNull(attributedCharacterIterator23);
        org.junit.Assert.assertNotNull(numberFormat24);
        org.junit.Assert.assertNotNull(fractionFormat25);
        org.junit.Assert.assertNotNull(attributedCharacterIterator27);
        org.junit.Assert.assertNotNull(numberFormat28);
    }

    @Test
    public void test0166() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0166");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat5 = fractionFormat0.getNumeratorFormat();
        java.text.NumberFormat numberFormat6 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat7 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator9 = fractionFormat7.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat10 = fractionFormat7.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = new org.apache.commons.math.fraction.FractionFormat(numberFormat6, numberFormat10);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj13 = numberFormat6.parseObject("hi!");
            org.junit.Assert.fail("Expected exception of type java.text.ParseException; message: Format.parseObject(String) failed");
        } catch (java.text.ParseException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertNotNull(fractionFormat7);
        org.junit.Assert.assertNotNull(attributedCharacterIterator9);
        org.junit.Assert.assertNotNull(numberFormat10);
    }

    @Test
    public void test0167() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0167");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat5 = fractionFormat0.getNumeratorFormat();
        java.text.NumberFormat numberFormat6 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat7 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator9 = fractionFormat7.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat10 = fractionFormat7.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = new org.apache.commons.math.fraction.FractionFormat(numberFormat6, numberFormat10);
        org.apache.commons.math.fraction.FractionFormat fractionFormat12 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator14 = fractionFormat12.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat15 = fractionFormat12.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat16 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator18 = fractionFormat16.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat19 = fractionFormat16.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat20 = new org.apache.commons.math.fraction.FractionFormat(numberFormat15, numberFormat19);
        fractionFormat11.setNumeratorFormat(numberFormat15);
        java.text.NumberFormat numberFormat22 = null;
        java.text.NumberFormat numberFormat23 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat24 = new org.apache.commons.math.fraction.FractionFormat(numberFormat22, numberFormat23);
        java.text.NumberFormat numberFormat25 = fractionFormat24.getDenominatorFormat();
        java.text.NumberFormat numberFormat26 = fractionFormat24.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat27 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator29 = fractionFormat27.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat30 = fractionFormat27.getDenominatorFormat();
        fractionFormat24.setNumeratorFormat(numberFormat30);
        org.apache.commons.math.fraction.FractionFormat fractionFormat32 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj34 = fractionFormat32.parseObject("0 / 1");
        java.lang.Object obj36 = fractionFormat32.parseObject("0 / 1");
        java.text.NumberFormat numberFormat37 = fractionFormat32.getNumeratorFormat();
        fractionFormat24.setDenominatorFormat(numberFormat37);
        org.apache.commons.math.fraction.FractionFormat fractionFormat39 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat40 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj42 = fractionFormat40.parseObject("0 / 1");
        java.lang.Object obj44 = fractionFormat40.parseObject("0 / 1");
        java.text.NumberFormat numberFormat45 = fractionFormat40.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat46 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj48 = fractionFormat46.parseObject("0 / 1");
        java.text.NumberFormat numberFormat49 = fractionFormat46.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat50 = new org.apache.commons.math.fraction.FractionFormat(numberFormat45, numberFormat49);
        org.apache.commons.math.fraction.FractionFormat fractionFormat51 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj53 = fractionFormat51.parseObject("0 / 1");
        java.lang.Object obj55 = fractionFormat51.parseObject("0 / 1");
        java.text.NumberFormat numberFormat56 = fractionFormat51.getNumeratorFormat();
        fractionFormat50.setDenominatorFormat(numberFormat56);
        java.lang.Object obj58 = numberFormat56.clone();
        fractionFormat39.setNumeratorFormat(numberFormat56);
        fractionFormat24.setDenominatorFormat(numberFormat56);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str61 = fractionFormat11.format((java.lang.Object) numberFormat56);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot format given object as a fraction");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertNotNull(fractionFormat7);
        org.junit.Assert.assertNotNull(attributedCharacterIterator9);
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertNotNull(fractionFormat12);
        org.junit.Assert.assertNotNull(attributedCharacterIterator14);
        org.junit.Assert.assertNotNull(numberFormat15);
        org.junit.Assert.assertNotNull(fractionFormat16);
        org.junit.Assert.assertNotNull(attributedCharacterIterator18);
        org.junit.Assert.assertNotNull(numberFormat19);
        org.junit.Assert.assertNull(numberFormat25);
        org.junit.Assert.assertNull(numberFormat26);
        org.junit.Assert.assertNotNull(fractionFormat27);
        org.junit.Assert.assertNotNull(attributedCharacterIterator29);
        org.junit.Assert.assertNotNull(numberFormat30);
        org.junit.Assert.assertNotNull(fractionFormat32);
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertNotNull(numberFormat37);
        org.junit.Assert.assertNotNull(fractionFormat39);
        org.junit.Assert.assertNotNull(fractionFormat40);
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertNotNull(obj44);
        org.junit.Assert.assertNotNull(numberFormat45);
        org.junit.Assert.assertNotNull(fractionFormat46);
        org.junit.Assert.assertNotNull(obj48);
        org.junit.Assert.assertNotNull(numberFormat49);
        org.junit.Assert.assertNotNull(fractionFormat51);
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertNotNull(obj55);
        org.junit.Assert.assertNotNull(numberFormat56);
        org.junit.Assert.assertNotNull(obj58);
    }

    @Test
    public void test0168() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0168");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.text.NumberFormat numberFormat3 = fractionFormat2.getDenominatorFormat();
        java.text.NumberFormat numberFormat4 = fractionFormat2.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator7 = fractionFormat5.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat8 = fractionFormat5.getDenominatorFormat();
        fractionFormat2.setNumeratorFormat(numberFormat8);
        java.lang.Object obj10 = numberFormat8.clone();
        java.lang.String str12 = numberFormat8.format((java.lang.Object) (short) 10);
        org.apache.commons.math.fraction.FractionFormat fractionFormat13 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator15 = fractionFormat13.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat16 = fractionFormat13.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat17 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator19 = fractionFormat17.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat20 = fractionFormat17.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat21 = new org.apache.commons.math.fraction.FractionFormat(numberFormat16, numberFormat20);
        org.apache.commons.math.fraction.FractionFormat fractionFormat22 = new org.apache.commons.math.fraction.FractionFormat(numberFormat8, numberFormat16);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj24 = numberFormat16.parseObject("");
            org.junit.Assert.fail("Expected exception of type java.text.ParseException; message: Format.parseObject(String) failed");
        } catch (java.text.ParseException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(numberFormat3);
        org.junit.Assert.assertNull(numberFormat4);
        org.junit.Assert.assertNotNull(fractionFormat5);
        org.junit.Assert.assertNotNull(attributedCharacterIterator7);
        org.junit.Assert.assertNotNull(numberFormat8);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "10" + "'", str12, "10");
        org.junit.Assert.assertNotNull(fractionFormat13);
        org.junit.Assert.assertNotNull(attributedCharacterIterator15);
        org.junit.Assert.assertNotNull(numberFormat16);
        org.junit.Assert.assertNotNull(fractionFormat17);
        org.junit.Assert.assertNotNull(attributedCharacterIterator19);
        org.junit.Assert.assertNotNull(numberFormat20);
    }

    @Test
    public void test0169() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0169");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.text.NumberFormat numberFormat3 = fractionFormat2.getDenominatorFormat();
        java.text.NumberFormat numberFormat4 = fractionFormat2.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj7 = fractionFormat5.parseObject("0 / 1");
        java.lang.Object obj9 = fractionFormat5.parseObject("0 / 1");
        java.text.NumberFormat numberFormat10 = fractionFormat5.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj13 = fractionFormat11.parseObject("0 / 1");
        java.text.NumberFormat numberFormat14 = fractionFormat11.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat15 = new org.apache.commons.math.fraction.FractionFormat(numberFormat10, numberFormat14);
        java.text.AttributedCharacterIterator attributedCharacterIterator17 = numberFormat10.formatToCharacterIterator((java.lang.Object) (-1));
        fractionFormat2.setDenominatorFormat(numberFormat10);
        java.text.NumberFormat numberFormat19 = null;
        java.text.NumberFormat numberFormat20 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat21 = new org.apache.commons.math.fraction.FractionFormat(numberFormat19, numberFormat20);
        java.text.NumberFormat numberFormat22 = fractionFormat21.getDenominatorFormat();
        java.text.NumberFormat numberFormat23 = fractionFormat21.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat24 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator26 = fractionFormat24.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat27 = fractionFormat24.getDenominatorFormat();
        fractionFormat21.setNumeratorFormat(numberFormat27);
        java.lang.Object obj29 = numberFormat27.clone();
        // The following exception was thrown during execution in test generation
        try {
            java.text.AttributedCharacterIterator attributedCharacterIterator30 = numberFormat10.formatToCharacterIterator((java.lang.Object) numberFormat27);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot format given Object as a Number");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(numberFormat3);
        org.junit.Assert.assertNull(numberFormat4);
        org.junit.Assert.assertNotNull(fractionFormat5);
        org.junit.Assert.assertNotNull(obj7);
        org.junit.Assert.assertNotNull(obj9);
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertNotNull(fractionFormat11);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertNotNull(numberFormat14);
        org.junit.Assert.assertNotNull(attributedCharacterIterator17);
        org.junit.Assert.assertNull(numberFormat22);
        org.junit.Assert.assertNull(numberFormat23);
        org.junit.Assert.assertNotNull(fractionFormat24);
        org.junit.Assert.assertNotNull(attributedCharacterIterator26);
        org.junit.Assert.assertNotNull(numberFormat27);
        org.junit.Assert.assertNotNull(obj29);
    }

    @Test
    public void test0170() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0170");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("0 / 1");
        java.text.AttributedCharacterIterator attributedCharacterIterator6 = fractionFormat0.formatToCharacterIterator((java.lang.Object) (-1));
        java.text.ParsePosition parsePosition8 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.fraction.Fraction fraction9 = fractionFormat0.parse("hi!", parsePosition8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(attributedCharacterIterator6);
    }

    @Test
    public void test0171() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0171");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat5 = fractionFormat0.getNumeratorFormat();
        java.text.NumberFormat numberFormat6 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat7 = new org.apache.commons.math.fraction.FractionFormat(numberFormat6);
        org.apache.commons.math.fraction.FractionFormat fractionFormat8 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj10 = fractionFormat8.parseObject("0 / 1");
        java.lang.Object obj12 = fractionFormat8.parseObject("0 / 1");
        java.text.NumberFormat numberFormat13 = fractionFormat8.getNumeratorFormat();
        java.lang.Object obj14 = numberFormat13.clone();
        java.lang.StringBuffer stringBuffer15 = null;
        java.text.FieldPosition fieldPosition16 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer17 = fractionFormat7.format(obj14, stringBuffer15, fieldPosition16);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot format given object as a fraction");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertNotNull(fractionFormat8);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertNotNull(numberFormat13);
        org.junit.Assert.assertNotNull(obj14);
    }

    @Test
    public void test0172() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0172");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        org.apache.commons.math.fraction.FractionFormat fractionFormat3 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj5 = fractionFormat3.parseObject("0 / 1");
        java.lang.Object obj7 = fractionFormat3.parseObject("0 / 1");
        java.lang.StringBuffer stringBuffer8 = null;
        java.text.FieldPosition fieldPosition9 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer10 = fractionFormat2.format((java.lang.Object) "0 / 1", stringBuffer8, fieldPosition9);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot format given object as a fraction");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat3);
        org.junit.Assert.assertNotNull(obj5);
        org.junit.Assert.assertNotNull(obj7);
    }

    @Test
    public void test0173() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0173");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.text.NumberFormat numberFormat3 = fractionFormat2.getNumeratorFormat();
        java.text.NumberFormat numberFormat4 = fractionFormat2.getNumeratorFormat();
        java.text.NumberFormat numberFormat5 = fractionFormat2.getNumeratorFormat();
        java.text.NumberFormat numberFormat6 = fractionFormat2.getNumeratorFormat();
        java.text.NumberFormat numberFormat7 = fractionFormat2.getNumeratorFormat();
        java.text.ParsePosition parsePosition9 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.fraction.Fraction fraction10 = fractionFormat2.parse("0 / 1", parsePosition9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(numberFormat3);
        org.junit.Assert.assertNull(numberFormat4);
        org.junit.Assert.assertNull(numberFormat5);
        org.junit.Assert.assertNull(numberFormat6);
        org.junit.Assert.assertNull(numberFormat7);
    }

    @Test
    public void test0174() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0174");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.text.NumberFormat numberFormat3 = fractionFormat2.getDenominatorFormat();
        java.text.NumberFormat numberFormat4 = fractionFormat2.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator7 = fractionFormat5.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat8 = fractionFormat5.getDenominatorFormat();
        fractionFormat2.setNumeratorFormat(numberFormat8);
        org.apache.commons.math.fraction.FractionFormat fractionFormat10 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj12 = fractionFormat10.parseObject("0 / 1");
        java.text.NumberFormat numberFormat13 = fractionFormat10.getNumeratorFormat();
        fractionFormat2.setNumeratorFormat(numberFormat13);
        java.lang.Class<?> wildcardClass15 = fractionFormat2.getClass();
        org.junit.Assert.assertNull(numberFormat3);
        org.junit.Assert.assertNull(numberFormat4);
        org.junit.Assert.assertNotNull(fractionFormat5);
        org.junit.Assert.assertNotNull(attributedCharacterIterator7);
        org.junit.Assert.assertNotNull(numberFormat8);
        org.junit.Assert.assertNotNull(fractionFormat10);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertNotNull(numberFormat13);
        org.junit.Assert.assertNotNull(wildcardClass15);
    }

    @Test
    public void test0175() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0175");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat5 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat6 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj8 = fractionFormat6.parseObject("0 / 1");
        java.text.NumberFormat numberFormat9 = fractionFormat6.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat10 = new org.apache.commons.math.fraction.FractionFormat(numberFormat5, numberFormat9);
        java.text.NumberFormat numberFormat11 = fractionFormat10.getNumeratorFormat();
        java.text.NumberFormat numberFormat12 = fractionFormat10.getNumeratorFormat();
        java.text.NumberFormat numberFormat13 = null;
        java.text.NumberFormat numberFormat14 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat15 = new org.apache.commons.math.fraction.FractionFormat(numberFormat13, numberFormat14);
        java.text.NumberFormat numberFormat16 = fractionFormat15.getDenominatorFormat();
        java.text.NumberFormat numberFormat17 = fractionFormat15.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat18 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator20 = fractionFormat18.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat21 = fractionFormat18.getDenominatorFormat();
        fractionFormat15.setNumeratorFormat(numberFormat21);
        java.lang.Object obj23 = numberFormat21.clone();
        java.lang.String str25 = numberFormat21.format((java.lang.Object) (short) 10);
        org.apache.commons.math.fraction.FractionFormat fractionFormat26 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator28 = fractionFormat26.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat29 = fractionFormat26.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat30 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator32 = fractionFormat30.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat33 = fractionFormat30.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat34 = new org.apache.commons.math.fraction.FractionFormat(numberFormat29, numberFormat33);
        org.apache.commons.math.fraction.FractionFormat fractionFormat35 = new org.apache.commons.math.fraction.FractionFormat(numberFormat21, numberFormat29);
        // The following exception was thrown during execution in test generation
        try {
            java.text.AttributedCharacterIterator attributedCharacterIterator36 = fractionFormat10.formatToCharacterIterator((java.lang.Object) numberFormat21);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot format given object as a fraction");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(fractionFormat6);
        org.junit.Assert.assertNotNull(obj8);
        org.junit.Assert.assertNotNull(numberFormat9);
        org.junit.Assert.assertNotNull(numberFormat11);
        org.junit.Assert.assertNotNull(numberFormat12);
        org.junit.Assert.assertNull(numberFormat16);
        org.junit.Assert.assertNull(numberFormat17);
        org.junit.Assert.assertNotNull(fractionFormat18);
        org.junit.Assert.assertNotNull(attributedCharacterIterator20);
        org.junit.Assert.assertNotNull(numberFormat21);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "10" + "'", str25, "10");
        org.junit.Assert.assertNotNull(fractionFormat26);
        org.junit.Assert.assertNotNull(attributedCharacterIterator28);
        org.junit.Assert.assertNotNull(numberFormat29);
        org.junit.Assert.assertNotNull(fractionFormat30);
        org.junit.Assert.assertNotNull(attributedCharacterIterator32);
        org.junit.Assert.assertNotNull(numberFormat33);
    }

    @Test
    public void test0176() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0176");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat5 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat6 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator8 = fractionFormat6.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.AttributedCharacterIterator attributedCharacterIterator9 = numberFormat5.formatToCharacterIterator((java.lang.Object) (byte) 100);
        org.apache.commons.math.fraction.FractionFormat fractionFormat10 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj12 = fractionFormat10.parseObject("0 / 1");
        java.lang.Object obj14 = fractionFormat10.parseObject("0 / 1");
        java.text.NumberFormat numberFormat15 = fractionFormat10.getNumeratorFormat();
        java.text.NumberFormat numberFormat16 = fractionFormat10.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat17 = new org.apache.commons.math.fraction.FractionFormat(numberFormat16);
        org.apache.commons.math.fraction.FractionFormat fractionFormat18 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj20 = fractionFormat18.parseObject("0 / 1");
        java.lang.Object obj22 = fractionFormat18.parseObject("0 / 1");
        java.text.NumberFormat numberFormat23 = fractionFormat18.getNumeratorFormat();
        java.text.NumberFormat numberFormat24 = fractionFormat18.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat25 = new org.apache.commons.math.fraction.FractionFormat(numberFormat24);
        org.apache.commons.math.fraction.FractionFormat fractionFormat26 = new org.apache.commons.math.fraction.FractionFormat(numberFormat24);
        fractionFormat17.setNumeratorFormat(numberFormat24);
        // The following exception was thrown during execution in test generation
        try {
            java.text.AttributedCharacterIterator attributedCharacterIterator28 = numberFormat5.formatToCharacterIterator((java.lang.Object) numberFormat24);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot format given Object as a Number");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(fractionFormat6);
        org.junit.Assert.assertNotNull(attributedCharacterIterator8);
        org.junit.Assert.assertNotNull(attributedCharacterIterator9);
        org.junit.Assert.assertNotNull(fractionFormat10);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertNotNull(numberFormat15);
        org.junit.Assert.assertNotNull(numberFormat16);
        org.junit.Assert.assertNotNull(fractionFormat18);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertNotNull(numberFormat23);
        org.junit.Assert.assertNotNull(numberFormat24);
    }

    @Test
    public void test0177() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0177");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat1 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj3 = fractionFormat1.parseObject("0 / 1");
        java.lang.Object obj5 = fractionFormat1.parseObject("0 / 1");
        java.text.NumberFormat numberFormat6 = fractionFormat1.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat7 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj9 = fractionFormat7.parseObject("0 / 1");
        java.text.NumberFormat numberFormat10 = fractionFormat7.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = new org.apache.commons.math.fraction.FractionFormat(numberFormat6, numberFormat10);
        org.apache.commons.math.fraction.FractionFormat fractionFormat12 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj14 = fractionFormat12.parseObject("0 / 1");
        java.lang.Object obj16 = fractionFormat12.parseObject("0 / 1");
        java.text.NumberFormat numberFormat17 = fractionFormat12.getNumeratorFormat();
        fractionFormat11.setDenominatorFormat(numberFormat17);
        java.lang.Object obj19 = numberFormat17.clone();
        fractionFormat0.setNumeratorFormat(numberFormat17);
        java.lang.Object obj21 = numberFormat17.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat22 = new org.apache.commons.math.fraction.FractionFormat(numberFormat17);
        org.apache.commons.math.fraction.FractionFormat fractionFormat23 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.Fraction fraction25 = fractionFormat23.parse("0 / 1");
        java.lang.String str26 = org.apache.commons.math.fraction.FractionFormat.formatFraction(fraction25);
        java.lang.Class<?> wildcardClass27 = fraction25.getClass();
        // The following exception was thrown during execution in test generation
        try {
            java.text.AttributedCharacterIterator attributedCharacterIterator28 = fractionFormat22.formatToCharacterIterator((java.lang.Object) wildcardClass27);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot format given object as a fraction");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(fractionFormat1);
        org.junit.Assert.assertNotNull(obj3);
        org.junit.Assert.assertNotNull(obj5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertNotNull(fractionFormat7);
        org.junit.Assert.assertNotNull(obj9);
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertNotNull(fractionFormat12);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertNotNull(obj16);
        org.junit.Assert.assertNotNull(numberFormat17);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertNotNull(fractionFormat23);
        org.junit.Assert.assertNotNull(fraction25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "0 / 1" + "'", str26, "0 / 1");
        org.junit.Assert.assertNotNull(wildcardClass27);
    }

    @Test
    public void test0178() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0178");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj6 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat7 = fractionFormat0.getNumeratorFormat();
        java.lang.Object obj9 = fractionFormat0.parseObject("-1 / 1");
        org.apache.commons.math.fraction.FractionFormat fractionFormat10 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator12 = fractionFormat10.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat13 = fractionFormat10.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat14 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator16 = fractionFormat14.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat17 = fractionFormat14.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat18 = new org.apache.commons.math.fraction.FractionFormat(numberFormat13, numberFormat17);
        java.text.NumberFormat numberFormat19 = fractionFormat18.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat20 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat21 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj23 = fractionFormat21.parseObject("0 / 1");
        java.lang.Object obj25 = fractionFormat21.parseObject("0 / 1");
        java.text.NumberFormat numberFormat26 = fractionFormat21.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat27 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj29 = fractionFormat27.parseObject("0 / 1");
        java.text.NumberFormat numberFormat30 = fractionFormat27.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat31 = new org.apache.commons.math.fraction.FractionFormat(numberFormat26, numberFormat30);
        org.apache.commons.math.fraction.FractionFormat fractionFormat32 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj34 = fractionFormat32.parseObject("0 / 1");
        java.lang.Object obj36 = fractionFormat32.parseObject("0 / 1");
        java.text.NumberFormat numberFormat37 = fractionFormat32.getNumeratorFormat();
        fractionFormat31.setDenominatorFormat(numberFormat37);
        java.lang.Object obj39 = numberFormat37.clone();
        fractionFormat20.setNumeratorFormat(numberFormat37);
        java.lang.Object obj41 = numberFormat37.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat42 = new org.apache.commons.math.fraction.FractionFormat(numberFormat19, numberFormat37);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str43 = fractionFormat0.format((java.lang.Object) fractionFormat42);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot format given object as a fraction");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(obj6);
        org.junit.Assert.assertNotNull(numberFormat7);
        org.junit.Assert.assertNotNull(obj9);
        org.junit.Assert.assertNotNull(fractionFormat10);
        org.junit.Assert.assertNotNull(attributedCharacterIterator12);
        org.junit.Assert.assertNotNull(numberFormat13);
        org.junit.Assert.assertNotNull(fractionFormat14);
        org.junit.Assert.assertNotNull(attributedCharacterIterator16);
        org.junit.Assert.assertNotNull(numberFormat17);
        org.junit.Assert.assertNotNull(numberFormat19);
        org.junit.Assert.assertNotNull(fractionFormat20);
        org.junit.Assert.assertNotNull(fractionFormat21);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertNotNull(obj25);
        org.junit.Assert.assertNotNull(numberFormat26);
        org.junit.Assert.assertNotNull(fractionFormat27);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertNotNull(numberFormat30);
        org.junit.Assert.assertNotNull(fractionFormat32);
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertNotNull(numberFormat37);
        org.junit.Assert.assertNotNull(obj39);
        org.junit.Assert.assertNotNull(obj41);
    }

    @Test
    public void test0179() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0179");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat3 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat4 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator6 = fractionFormat4.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat7 = fractionFormat4.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat8 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator10 = fractionFormat8.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat11 = fractionFormat8.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat12 = new org.apache.commons.math.fraction.FractionFormat(numberFormat7, numberFormat11);
        org.apache.commons.math.fraction.FractionFormat fractionFormat13 = new org.apache.commons.math.fraction.FractionFormat(numberFormat3, numberFormat7);
        org.apache.commons.math.fraction.FractionFormat fractionFormat14 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj16 = fractionFormat14.parseObject("0 / 1");
        java.lang.Object obj18 = fractionFormat14.parseObject("0 / 1");
        java.text.NumberFormat numberFormat19 = fractionFormat14.getNumeratorFormat();
        java.text.NumberFormat numberFormat20 = fractionFormat14.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat21 = new org.apache.commons.math.fraction.FractionFormat(numberFormat20);
        org.apache.commons.math.fraction.FractionFormat fractionFormat22 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj24 = fractionFormat22.parseObject("0 / 1");
        java.lang.Object obj26 = fractionFormat22.parseObject("0 / 1");
        java.text.NumberFormat numberFormat27 = fractionFormat22.getNumeratorFormat();
        java.text.NumberFormat numberFormat28 = fractionFormat22.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat29 = new org.apache.commons.math.fraction.FractionFormat(numberFormat28);
        org.apache.commons.math.fraction.FractionFormat fractionFormat30 = new org.apache.commons.math.fraction.FractionFormat(numberFormat28);
        fractionFormat21.setNumeratorFormat(numberFormat28);
        // The following exception was thrown during execution in test generation
        try {
            java.text.AttributedCharacterIterator attributedCharacterIterator32 = numberFormat7.formatToCharacterIterator((java.lang.Object) numberFormat28);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot format given Object as a Number");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(numberFormat3);
        org.junit.Assert.assertNotNull(fractionFormat4);
        org.junit.Assert.assertNotNull(attributedCharacterIterator6);
        org.junit.Assert.assertNotNull(numberFormat7);
        org.junit.Assert.assertNotNull(fractionFormat8);
        org.junit.Assert.assertNotNull(attributedCharacterIterator10);
        org.junit.Assert.assertNotNull(numberFormat11);
        org.junit.Assert.assertNotNull(fractionFormat14);
        org.junit.Assert.assertNotNull(obj16);
        org.junit.Assert.assertNotNull(obj18);
        org.junit.Assert.assertNotNull(numberFormat19);
        org.junit.Assert.assertNotNull(numberFormat20);
        org.junit.Assert.assertNotNull(fractionFormat22);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertNotNull(numberFormat27);
        org.junit.Assert.assertNotNull(numberFormat28);
    }

    @Test
    public void test0180() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0180");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.Fraction fraction2 = fractionFormat0.parse("0 / 1");
        org.apache.commons.math.fraction.FractionFormat fractionFormat3 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator5 = fractionFormat3.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat6 = fractionFormat3.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat7 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator9 = fractionFormat7.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat10 = fractionFormat7.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = new org.apache.commons.math.fraction.FractionFormat(numberFormat6, numberFormat10);
        java.text.NumberFormat numberFormat12 = fractionFormat11.getDenominatorFormat();
        fractionFormat0.setDenominatorFormat(numberFormat12);
        java.text.ParsePosition parsePosition15 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj16 = fractionFormat0.parseObject("", parsePosition15);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(fraction2);
        org.junit.Assert.assertNotNull(fractionFormat3);
        org.junit.Assert.assertNotNull(attributedCharacterIterator5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertNotNull(fractionFormat7);
        org.junit.Assert.assertNotNull(attributedCharacterIterator9);
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertNotNull(numberFormat12);
    }

    @Test
    public void test0181() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0181");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.text.NumberFormat numberFormat3 = fractionFormat2.getDenominatorFormat();
        java.text.NumberFormat numberFormat4 = fractionFormat2.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj7 = fractionFormat5.parseObject("0 / 1");
        java.lang.Object obj9 = fractionFormat5.parseObject("0 / 1");
        java.text.NumberFormat numberFormat10 = fractionFormat5.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj13 = fractionFormat11.parseObject("0 / 1");
        java.text.NumberFormat numberFormat14 = fractionFormat11.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat15 = new org.apache.commons.math.fraction.FractionFormat(numberFormat10, numberFormat14);
        java.text.AttributedCharacterIterator attributedCharacterIterator17 = numberFormat10.formatToCharacterIterator((java.lang.Object) (-1));
        fractionFormat2.setDenominatorFormat(numberFormat10);
        org.apache.commons.math.fraction.FractionFormat fractionFormat19 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj21 = fractionFormat19.parseObject("0 / 1");
        java.lang.Object obj23 = fractionFormat19.parseObject("-1 / 1");
        org.apache.commons.math.fraction.FractionFormat fractionFormat24 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat25 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj27 = fractionFormat25.parseObject("0 / 1");
        java.lang.Object obj29 = fractionFormat25.parseObject("0 / 1");
        java.text.NumberFormat numberFormat30 = fractionFormat25.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat31 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj33 = fractionFormat31.parseObject("0 / 1");
        java.text.NumberFormat numberFormat34 = fractionFormat31.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat35 = new org.apache.commons.math.fraction.FractionFormat(numberFormat30, numberFormat34);
        org.apache.commons.math.fraction.FractionFormat fractionFormat36 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj38 = fractionFormat36.parseObject("0 / 1");
        java.lang.Object obj40 = fractionFormat36.parseObject("0 / 1");
        java.text.NumberFormat numberFormat41 = fractionFormat36.getNumeratorFormat();
        fractionFormat35.setDenominatorFormat(numberFormat41);
        java.lang.Object obj43 = numberFormat41.clone();
        fractionFormat24.setNumeratorFormat(numberFormat41);
        java.lang.Object obj45 = numberFormat41.clone();
        java.lang.Object obj46 = numberFormat41.clone();
        fractionFormat19.setDenominatorFormat(numberFormat41);
        org.apache.commons.math.fraction.FractionFormat fractionFormat48 = new org.apache.commons.math.fraction.FractionFormat(numberFormat41);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str49 = fractionFormat2.format((java.lang.Object) fractionFormat48);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot format given object as a fraction");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(numberFormat3);
        org.junit.Assert.assertNull(numberFormat4);
        org.junit.Assert.assertNotNull(fractionFormat5);
        org.junit.Assert.assertNotNull(obj7);
        org.junit.Assert.assertNotNull(obj9);
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertNotNull(fractionFormat11);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertNotNull(numberFormat14);
        org.junit.Assert.assertNotNull(attributedCharacterIterator17);
        org.junit.Assert.assertNotNull(fractionFormat19);
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertNotNull(fractionFormat24);
        org.junit.Assert.assertNotNull(fractionFormat25);
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertNotNull(numberFormat30);
        org.junit.Assert.assertNotNull(fractionFormat31);
        org.junit.Assert.assertNotNull(obj33);
        org.junit.Assert.assertNotNull(numberFormat34);
        org.junit.Assert.assertNotNull(fractionFormat36);
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertNotNull(numberFormat41);
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertNotNull(obj46);
    }

    @Test
    public void test0182() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0182");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat5 = fractionFormat0.getNumeratorFormat();
        java.lang.Class<?> wildcardClass6 = numberFormat5.getClass();
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(wildcardClass6);
    }

    @Test
    public void test0183() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0183");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.text.NumberFormat numberFormat3 = fractionFormat2.getDenominatorFormat();
        java.text.NumberFormat numberFormat4 = fractionFormat2.getNumeratorFormat();
        java.text.NumberFormat numberFormat5 = fractionFormat2.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat6 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj8 = fractionFormat6.parseObject("0 / 1");
        java.lang.Object obj10 = fractionFormat6.parseObject("0 / 1");
        java.text.NumberFormat numberFormat11 = fractionFormat6.getNumeratorFormat();
        java.lang.Object obj12 = numberFormat11.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat13 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj15 = fractionFormat13.parseObject("0 / 1");
        java.lang.Object obj17 = fractionFormat13.parseObject("0 / 1");
        java.text.NumberFormat numberFormat18 = fractionFormat13.getNumeratorFormat();
        java.text.NumberFormat numberFormat19 = fractionFormat13.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat20 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator22 = fractionFormat20.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat23 = fractionFormat20.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat24 = new org.apache.commons.math.fraction.FractionFormat(numberFormat19, numberFormat23);
        org.apache.commons.math.fraction.FractionFormat fractionFormat25 = new org.apache.commons.math.fraction.FractionFormat(numberFormat11, numberFormat23);
        fractionFormat2.setNumeratorFormat(numberFormat11);
        java.lang.Object obj27 = numberFormat11.clone();
        org.junit.Assert.assertNull(numberFormat3);
        org.junit.Assert.assertNull(numberFormat4);
        org.junit.Assert.assertNull(numberFormat5);
        org.junit.Assert.assertNotNull(fractionFormat6);
        org.junit.Assert.assertNotNull(obj8);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertNotNull(numberFormat11);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertNotNull(fractionFormat13);
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertNotNull(numberFormat18);
        org.junit.Assert.assertNotNull(numberFormat19);
        org.junit.Assert.assertNotNull(fractionFormat20);
        org.junit.Assert.assertNotNull(attributedCharacterIterator22);
        org.junit.Assert.assertNotNull(numberFormat23);
        org.junit.Assert.assertNotNull(obj27);
    }

    @Test
    public void test0184() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0184");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat1 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj3 = fractionFormat1.parseObject("0 / 1");
        java.lang.Object obj5 = fractionFormat1.parseObject("-1 / 1");
        org.apache.commons.math.fraction.FractionFormat fractionFormat6 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat7 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj9 = fractionFormat7.parseObject("0 / 1");
        java.lang.Object obj11 = fractionFormat7.parseObject("0 / 1");
        java.text.NumberFormat numberFormat12 = fractionFormat7.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat13 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj15 = fractionFormat13.parseObject("0 / 1");
        java.text.NumberFormat numberFormat16 = fractionFormat13.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat17 = new org.apache.commons.math.fraction.FractionFormat(numberFormat12, numberFormat16);
        org.apache.commons.math.fraction.FractionFormat fractionFormat18 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj20 = fractionFormat18.parseObject("0 / 1");
        java.lang.Object obj22 = fractionFormat18.parseObject("0 / 1");
        java.text.NumberFormat numberFormat23 = fractionFormat18.getNumeratorFormat();
        fractionFormat17.setDenominatorFormat(numberFormat23);
        java.lang.Object obj25 = numberFormat23.clone();
        fractionFormat6.setNumeratorFormat(numberFormat23);
        java.lang.Object obj27 = numberFormat23.clone();
        java.lang.Object obj28 = numberFormat23.clone();
        fractionFormat1.setDenominatorFormat(numberFormat23);
        org.apache.commons.math.fraction.FractionFormat fractionFormat30 = new org.apache.commons.math.fraction.FractionFormat(numberFormat23);
        fractionFormat0.setNumeratorFormat(numberFormat23);
        java.text.NumberFormat numberFormat32 = null;
        java.text.NumberFormat numberFormat33 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat34 = new org.apache.commons.math.fraction.FractionFormat(numberFormat32, numberFormat33);
        java.text.NumberFormat numberFormat35 = fractionFormat34.getDenominatorFormat();
        java.text.NumberFormat numberFormat36 = fractionFormat34.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat37 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj39 = fractionFormat37.parseObject("0 / 1");
        java.lang.Object obj41 = fractionFormat37.parseObject("0 / 1");
        java.text.NumberFormat numberFormat42 = fractionFormat37.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat43 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj45 = fractionFormat43.parseObject("0 / 1");
        java.text.NumberFormat numberFormat46 = fractionFormat43.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat47 = new org.apache.commons.math.fraction.FractionFormat(numberFormat42, numberFormat46);
        java.text.AttributedCharacterIterator attributedCharacterIterator49 = numberFormat42.formatToCharacterIterator((java.lang.Object) (-1));
        fractionFormat34.setDenominatorFormat(numberFormat42);
        java.lang.Object obj51 = numberFormat42.clone();
        // The following exception was thrown during execution in test generation
        try {
            java.text.AttributedCharacterIterator attributedCharacterIterator52 = numberFormat23.formatToCharacterIterator((java.lang.Object) numberFormat42);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot format given Object as a Number");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(fractionFormat1);
        org.junit.Assert.assertNotNull(obj3);
        org.junit.Assert.assertNotNull(obj5);
        org.junit.Assert.assertNotNull(fractionFormat6);
        org.junit.Assert.assertNotNull(fractionFormat7);
        org.junit.Assert.assertNotNull(obj9);
        org.junit.Assert.assertNotNull(obj11);
        org.junit.Assert.assertNotNull(numberFormat12);
        org.junit.Assert.assertNotNull(fractionFormat13);
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertNotNull(numberFormat16);
        org.junit.Assert.assertNotNull(fractionFormat18);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertNotNull(numberFormat23);
        org.junit.Assert.assertNotNull(obj25);
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertNull(numberFormat35);
        org.junit.Assert.assertNull(numberFormat36);
        org.junit.Assert.assertNotNull(fractionFormat37);
        org.junit.Assert.assertNotNull(obj39);
        org.junit.Assert.assertNotNull(obj41);
        org.junit.Assert.assertNotNull(numberFormat42);
        org.junit.Assert.assertNotNull(fractionFormat43);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertNotNull(numberFormat46);
        org.junit.Assert.assertNotNull(attributedCharacterIterator49);
        org.junit.Assert.assertNotNull(obj51);
    }

    @Test
    public void test0185() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0185");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator2 = fractionFormat0.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat3 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat4 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator6 = fractionFormat4.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat7 = fractionFormat4.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat8 = new org.apache.commons.math.fraction.FractionFormat(numberFormat3, numberFormat7);
        java.text.NumberFormat numberFormat9 = fractionFormat8.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat10 = new org.apache.commons.math.fraction.FractionFormat(numberFormat9);
        java.lang.Class<?> wildcardClass11 = fractionFormat10.getClass();
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(attributedCharacterIterator2);
        org.junit.Assert.assertNotNull(numberFormat3);
        org.junit.Assert.assertNotNull(fractionFormat4);
        org.junit.Assert.assertNotNull(attributedCharacterIterator6);
        org.junit.Assert.assertNotNull(numberFormat7);
        org.junit.Assert.assertNotNull(numberFormat9);
        org.junit.Assert.assertNotNull(wildcardClass11);
    }

    @Test
    public void test0186() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0186");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.ParsePosition parsePosition2 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj3 = fractionFormat0.parseObject("-1 / 1", parsePosition2);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
    }

    @Test
    public void test0187() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0187");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.text.NumberFormat numberFormat3 = fractionFormat2.getDenominatorFormat();
        java.text.NumberFormat numberFormat4 = fractionFormat2.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator7 = fractionFormat5.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat8 = fractionFormat5.getDenominatorFormat();
        fractionFormat2.setNumeratorFormat(numberFormat8);
        java.text.NumberFormat numberFormat10 = null;
        java.text.NumberFormat numberFormat11 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat12 = new org.apache.commons.math.fraction.FractionFormat(numberFormat10, numberFormat11);
        java.text.NumberFormat numberFormat13 = fractionFormat12.getNumeratorFormat();
        java.text.NumberFormat numberFormat14 = fractionFormat12.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat15 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj17 = fractionFormat15.parseObject("0 / 1");
        java.lang.Object obj19 = fractionFormat15.parseObject("0 / 1");
        java.text.NumberFormat numberFormat20 = fractionFormat15.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat21 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj23 = fractionFormat21.parseObject("0 / 1");
        java.text.NumberFormat numberFormat24 = fractionFormat21.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat25 = new org.apache.commons.math.fraction.FractionFormat(numberFormat20, numberFormat24);
        fractionFormat12.setNumeratorFormat(numberFormat20);
        fractionFormat2.setDenominatorFormat(numberFormat20);
        java.text.ParsePosition parsePosition29 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj30 = fractionFormat2.parseObject("0 / 1", parsePosition29);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(numberFormat3);
        org.junit.Assert.assertNull(numberFormat4);
        org.junit.Assert.assertNotNull(fractionFormat5);
        org.junit.Assert.assertNotNull(attributedCharacterIterator7);
        org.junit.Assert.assertNotNull(numberFormat8);
        org.junit.Assert.assertNull(numberFormat13);
        org.junit.Assert.assertNull(numberFormat14);
        org.junit.Assert.assertNotNull(fractionFormat15);
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(numberFormat20);
        org.junit.Assert.assertNotNull(fractionFormat21);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertNotNull(numberFormat24);
    }

    @Test
    public void test0188() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0188");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator2 = fractionFormat0.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat3 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat4 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator6 = fractionFormat4.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat7 = fractionFormat4.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat8 = new org.apache.commons.math.fraction.FractionFormat(numberFormat3, numberFormat7);
        org.apache.commons.math.fraction.FractionFormat fractionFormat9 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj11 = fractionFormat9.parseObject("0 / 1");
        java.lang.Object obj13 = fractionFormat9.parseObject("0 / 1");
        java.text.NumberFormat numberFormat14 = fractionFormat9.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat15 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj17 = fractionFormat15.parseObject("0 / 1");
        java.text.NumberFormat numberFormat18 = fractionFormat15.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat19 = new org.apache.commons.math.fraction.FractionFormat(numberFormat14, numberFormat18);
        java.text.NumberFormat numberFormat20 = fractionFormat19.getNumeratorFormat();
        java.lang.StringBuffer stringBuffer21 = null;
        java.text.FieldPosition fieldPosition22 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer23 = fractionFormat8.format((java.lang.Object) numberFormat20, stringBuffer21, fieldPosition22);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot format given object as a fraction");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(attributedCharacterIterator2);
        org.junit.Assert.assertNotNull(numberFormat3);
        org.junit.Assert.assertNotNull(fractionFormat4);
        org.junit.Assert.assertNotNull(attributedCharacterIterator6);
        org.junit.Assert.assertNotNull(numberFormat7);
        org.junit.Assert.assertNotNull(fractionFormat9);
        org.junit.Assert.assertNotNull(obj11);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertNotNull(numberFormat14);
        org.junit.Assert.assertNotNull(fractionFormat15);
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertNotNull(numberFormat18);
        org.junit.Assert.assertNotNull(numberFormat20);
    }

    @Test
    public void test0189() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0189");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.text.NumberFormat numberFormat3 = fractionFormat2.getDenominatorFormat();
        java.text.NumberFormat numberFormat4 = fractionFormat2.getNumeratorFormat();
        java.text.NumberFormat numberFormat5 = fractionFormat2.getNumeratorFormat();
        java.text.NumberFormat numberFormat6 = fractionFormat2.getDenominatorFormat();
        java.text.NumberFormat numberFormat7 = null;
        java.text.NumberFormat numberFormat8 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat9 = new org.apache.commons.math.fraction.FractionFormat(numberFormat7, numberFormat8);
        java.text.NumberFormat numberFormat10 = fractionFormat9.getDenominatorFormat();
        java.text.NumberFormat numberFormat11 = fractionFormat9.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat12 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator14 = fractionFormat12.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat15 = fractionFormat12.getDenominatorFormat();
        fractionFormat9.setNumeratorFormat(numberFormat15);
        java.text.NumberFormat numberFormat17 = fractionFormat9.getDenominatorFormat();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str18 = fractionFormat2.format((java.lang.Object) numberFormat17);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot format given object as a fraction");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(numberFormat3);
        org.junit.Assert.assertNull(numberFormat4);
        org.junit.Assert.assertNull(numberFormat5);
        org.junit.Assert.assertNull(numberFormat6);
        org.junit.Assert.assertNull(numberFormat10);
        org.junit.Assert.assertNull(numberFormat11);
        org.junit.Assert.assertNotNull(fractionFormat12);
        org.junit.Assert.assertNotNull(attributedCharacterIterator14);
        org.junit.Assert.assertNotNull(numberFormat15);
        org.junit.Assert.assertNull(numberFormat17);
    }

    @Test
    public void test0190() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0190");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.text.NumberFormat numberFormat3 = fractionFormat2.getNumeratorFormat();
        java.text.NumberFormat numberFormat4 = fractionFormat2.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj7 = fractionFormat5.parseObject("0 / 1");
        java.lang.Object obj9 = fractionFormat5.parseObject("0 / 1");
        java.text.NumberFormat numberFormat10 = fractionFormat5.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj13 = fractionFormat11.parseObject("0 / 1");
        java.text.NumberFormat numberFormat14 = fractionFormat11.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat15 = new org.apache.commons.math.fraction.FractionFormat(numberFormat10, numberFormat14);
        fractionFormat2.setNumeratorFormat(numberFormat10);
        java.lang.StringBuffer stringBuffer18 = null;
        java.text.FieldPosition fieldPosition19 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer20 = fractionFormat2.format((java.lang.Object) (-1.0d), stringBuffer18, fieldPosition19);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(numberFormat3);
        org.junit.Assert.assertNull(numberFormat4);
        org.junit.Assert.assertNotNull(fractionFormat5);
        org.junit.Assert.assertNotNull(obj7);
        org.junit.Assert.assertNotNull(obj9);
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertNotNull(fractionFormat11);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertNotNull(numberFormat14);
    }

    @Test
    public void test0191() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0191");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.text.NumberFormat numberFormat3 = fractionFormat2.getDenominatorFormat();
        java.text.NumberFormat numberFormat4 = fractionFormat2.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj7 = fractionFormat5.parseObject("0 / 1");
        java.lang.Object obj9 = fractionFormat5.parseObject("0 / 1");
        java.text.NumberFormat numberFormat10 = fractionFormat5.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj13 = fractionFormat11.parseObject("0 / 1");
        java.text.NumberFormat numberFormat14 = fractionFormat11.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat15 = new org.apache.commons.math.fraction.FractionFormat(numberFormat10, numberFormat14);
        java.text.AttributedCharacterIterator attributedCharacterIterator17 = numberFormat10.formatToCharacterIterator((java.lang.Object) (-1));
        fractionFormat2.setDenominatorFormat(numberFormat10);
        java.lang.Object obj19 = numberFormat10.clone();
        java.text.NumberFormat numberFormat20 = null;
        java.text.NumberFormat numberFormat21 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat22 = new org.apache.commons.math.fraction.FractionFormat(numberFormat20, numberFormat21);
        java.text.NumberFormat numberFormat23 = fractionFormat22.getDenominatorFormat();
        java.text.NumberFormat numberFormat24 = fractionFormat22.getNumeratorFormat();
        java.text.NumberFormat numberFormat25 = fractionFormat22.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat26 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj28 = fractionFormat26.parseObject("0 / 1");
        java.lang.Object obj30 = fractionFormat26.parseObject("0 / 1");
        java.text.NumberFormat numberFormat31 = fractionFormat26.getNumeratorFormat();
        java.lang.Object obj32 = numberFormat31.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat33 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj35 = fractionFormat33.parseObject("0 / 1");
        java.lang.Object obj37 = fractionFormat33.parseObject("0 / 1");
        java.text.NumberFormat numberFormat38 = fractionFormat33.getNumeratorFormat();
        java.text.NumberFormat numberFormat39 = fractionFormat33.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat40 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator42 = fractionFormat40.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat43 = fractionFormat40.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat44 = new org.apache.commons.math.fraction.FractionFormat(numberFormat39, numberFormat43);
        org.apache.commons.math.fraction.FractionFormat fractionFormat45 = new org.apache.commons.math.fraction.FractionFormat(numberFormat31, numberFormat43);
        fractionFormat22.setNumeratorFormat(numberFormat31);
        org.apache.commons.math.fraction.FractionFormat fractionFormat47 = new org.apache.commons.math.fraction.FractionFormat(numberFormat10, numberFormat31);
        java.text.NumberFormat numberFormat48 = null;
        java.text.NumberFormat numberFormat49 = null;
        java.text.NumberFormat numberFormat50 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat51 = new org.apache.commons.math.fraction.FractionFormat(numberFormat49, numberFormat50);
        java.text.NumberFormat numberFormat52 = fractionFormat51.getDenominatorFormat();
        java.text.NumberFormat numberFormat53 = fractionFormat51.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat54 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator56 = fractionFormat54.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat57 = fractionFormat54.getDenominatorFormat();
        fractionFormat51.setNumeratorFormat(numberFormat57);
        org.apache.commons.math.fraction.FractionFormat fractionFormat59 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj61 = fractionFormat59.parseObject("0 / 1");
        java.text.NumberFormat numberFormat62 = fractionFormat59.getNumeratorFormat();
        fractionFormat51.setNumeratorFormat(numberFormat62);
        org.apache.commons.math.fraction.FractionFormat fractionFormat64 = new org.apache.commons.math.fraction.FractionFormat(numberFormat48, numberFormat62);
        java.lang.StringBuffer stringBuffer65 = null;
        java.text.FieldPosition fieldPosition66 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer67 = fractionFormat47.format((java.lang.Object) fractionFormat64, stringBuffer65, fieldPosition66);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot format given object as a fraction");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(numberFormat3);
        org.junit.Assert.assertNull(numberFormat4);
        org.junit.Assert.assertNotNull(fractionFormat5);
        org.junit.Assert.assertNotNull(obj7);
        org.junit.Assert.assertNotNull(obj9);
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertNotNull(fractionFormat11);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertNotNull(numberFormat14);
        org.junit.Assert.assertNotNull(attributedCharacterIterator17);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNull(numberFormat23);
        org.junit.Assert.assertNull(numberFormat24);
        org.junit.Assert.assertNull(numberFormat25);
        org.junit.Assert.assertNotNull(fractionFormat26);
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertNotNull(numberFormat31);
        org.junit.Assert.assertNotNull(obj32);
        org.junit.Assert.assertNotNull(fractionFormat33);
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertNotNull(numberFormat38);
        org.junit.Assert.assertNotNull(numberFormat39);
        org.junit.Assert.assertNotNull(fractionFormat40);
        org.junit.Assert.assertNotNull(attributedCharacterIterator42);
        org.junit.Assert.assertNotNull(numberFormat43);
        org.junit.Assert.assertNull(numberFormat52);
        org.junit.Assert.assertNull(numberFormat53);
        org.junit.Assert.assertNotNull(fractionFormat54);
        org.junit.Assert.assertNotNull(attributedCharacterIterator56);
        org.junit.Assert.assertNotNull(numberFormat57);
        org.junit.Assert.assertNotNull(fractionFormat59);
        org.junit.Assert.assertNotNull(obj61);
        org.junit.Assert.assertNotNull(numberFormat62);
    }

    @Test
    public void test0192() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0192");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.text.NumberFormat numberFormat3 = fractionFormat2.getDenominatorFormat();
        java.text.NumberFormat numberFormat4 = fractionFormat2.getNumeratorFormat();
        java.text.NumberFormat numberFormat5 = fractionFormat2.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat6 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj8 = fractionFormat6.parseObject("0 / 1");
        java.lang.Object obj10 = fractionFormat6.parseObject("0 / 1");
        java.lang.Object obj12 = fractionFormat6.parseObject("0 / 1");
        java.lang.Object obj13 = fractionFormat6.clone();
        org.apache.commons.math.fraction.Fraction fraction15 = fractionFormat6.parse("0 / 1");
        java.lang.StringBuffer stringBuffer16 = null;
        java.text.FieldPosition fieldPosition17 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer18 = fractionFormat2.format(fraction15, stringBuffer16, fieldPosition17);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(numberFormat3);
        org.junit.Assert.assertNull(numberFormat4);
        org.junit.Assert.assertNull(numberFormat5);
        org.junit.Assert.assertNotNull(fractionFormat6);
        org.junit.Assert.assertNotNull(obj8);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertNotNull(fraction15);
    }

    @Test
    public void test0193() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0193");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.text.NumberFormat numberFormat3 = fractionFormat2.getDenominatorFormat();
        java.text.NumberFormat numberFormat4 = fractionFormat2.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator7 = fractionFormat5.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat8 = fractionFormat5.getDenominatorFormat();
        fractionFormat2.setNumeratorFormat(numberFormat8);
        java.lang.Object obj10 = numberFormat8.clone();
        java.lang.String str12 = numberFormat8.format((java.lang.Object) (short) 10);
        java.text.NumberFormat numberFormat13 = null;
        java.text.NumberFormat numberFormat14 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat15 = new org.apache.commons.math.fraction.FractionFormat(numberFormat13, numberFormat14);
        java.text.NumberFormat numberFormat16 = fractionFormat15.getDenominatorFormat();
        java.text.NumberFormat numberFormat17 = fractionFormat15.getNumeratorFormat();
        java.text.NumberFormat numberFormat18 = fractionFormat15.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat19 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator21 = fractionFormat19.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat22 = fractionFormat19.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat23 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator25 = fractionFormat23.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat26 = fractionFormat23.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat27 = new org.apache.commons.math.fraction.FractionFormat(numberFormat22, numberFormat26);
        fractionFormat15.setNumeratorFormat(numberFormat22);
        org.apache.commons.math.fraction.FractionFormat fractionFormat29 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj31 = fractionFormat29.parseObject("0 / 1");
        java.text.NumberFormat numberFormat32 = fractionFormat29.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat33 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator35 = fractionFormat33.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat36 = fractionFormat33.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat37 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator39 = fractionFormat37.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat40 = fractionFormat37.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat41 = new org.apache.commons.math.fraction.FractionFormat(numberFormat36, numberFormat40);
        org.apache.commons.math.fraction.FractionFormat fractionFormat42 = new org.apache.commons.math.fraction.FractionFormat(numberFormat32, numberFormat36);
        org.apache.commons.math.fraction.FractionFormat fractionFormat43 = new org.apache.commons.math.fraction.FractionFormat(numberFormat22, numberFormat32);
        org.apache.commons.math.fraction.FractionFormat fractionFormat44 = new org.apache.commons.math.fraction.FractionFormat(numberFormat8, numberFormat32);
        java.lang.Object obj45 = fractionFormat44.clone();
        java.lang.Class<?> wildcardClass46 = fractionFormat44.getClass();
        org.junit.Assert.assertNull(numberFormat3);
        org.junit.Assert.assertNull(numberFormat4);
        org.junit.Assert.assertNotNull(fractionFormat5);
        org.junit.Assert.assertNotNull(attributedCharacterIterator7);
        org.junit.Assert.assertNotNull(numberFormat8);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "10" + "'", str12, "10");
        org.junit.Assert.assertNull(numberFormat16);
        org.junit.Assert.assertNull(numberFormat17);
        org.junit.Assert.assertNull(numberFormat18);
        org.junit.Assert.assertNotNull(fractionFormat19);
        org.junit.Assert.assertNotNull(attributedCharacterIterator21);
        org.junit.Assert.assertNotNull(numberFormat22);
        org.junit.Assert.assertNotNull(fractionFormat23);
        org.junit.Assert.assertNotNull(attributedCharacterIterator25);
        org.junit.Assert.assertNotNull(numberFormat26);
        org.junit.Assert.assertNotNull(fractionFormat29);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertNotNull(numberFormat32);
        org.junit.Assert.assertNotNull(fractionFormat33);
        org.junit.Assert.assertNotNull(attributedCharacterIterator35);
        org.junit.Assert.assertNotNull(numberFormat36);
        org.junit.Assert.assertNotNull(fractionFormat37);
        org.junit.Assert.assertNotNull(attributedCharacterIterator39);
        org.junit.Assert.assertNotNull(numberFormat40);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertNotNull(wildcardClass46);
    }

    @Test
    public void test0194() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0194");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat5 = fractionFormat0.getNumeratorFormat();
        java.text.NumberFormat numberFormat6 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat7 = new org.apache.commons.math.fraction.FractionFormat(numberFormat6);
        org.apache.commons.math.fraction.FractionFormat fractionFormat8 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj10 = fractionFormat8.parseObject("0 / 1");
        java.lang.Object obj12 = fractionFormat8.parseObject("0 / 1");
        java.text.NumberFormat numberFormat13 = fractionFormat8.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat14 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj16 = fractionFormat14.parseObject("0 / 1");
        java.text.NumberFormat numberFormat17 = fractionFormat14.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat18 = new org.apache.commons.math.fraction.FractionFormat(numberFormat13, numberFormat17);
        org.apache.commons.math.fraction.FractionFormat fractionFormat19 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj21 = fractionFormat19.parseObject("0 / 1");
        java.lang.Object obj23 = fractionFormat19.parseObject("0 / 1");
        java.text.NumberFormat numberFormat24 = fractionFormat19.getNumeratorFormat();
        fractionFormat18.setDenominatorFormat(numberFormat24);
        org.apache.commons.math.fraction.FractionFormat fractionFormat26 = new org.apache.commons.math.fraction.FractionFormat(numberFormat6, numberFormat24);
        java.text.ParsePosition parsePosition28 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj29 = fractionFormat26.parseObject("0 / 1", parsePosition28);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertNotNull(fractionFormat8);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertNotNull(numberFormat13);
        org.junit.Assert.assertNotNull(fractionFormat14);
        org.junit.Assert.assertNotNull(obj16);
        org.junit.Assert.assertNotNull(numberFormat17);
        org.junit.Assert.assertNotNull(fractionFormat19);
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertNotNull(numberFormat24);
    }

    @Test
    public void test0195() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0195");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.text.NumberFormat numberFormat3 = fractionFormat2.getNumeratorFormat();
        java.text.NumberFormat numberFormat4 = null;
        java.text.NumberFormat numberFormat5 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat6 = new org.apache.commons.math.fraction.FractionFormat(numberFormat4, numberFormat5);
        java.text.NumberFormat numberFormat7 = fractionFormat6.getDenominatorFormat();
        java.text.NumberFormat numberFormat8 = fractionFormat6.getNumeratorFormat();
        java.text.NumberFormat numberFormat9 = fractionFormat6.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat10 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator12 = fractionFormat10.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat13 = fractionFormat10.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat14 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator16 = fractionFormat14.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat17 = fractionFormat14.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat18 = new org.apache.commons.math.fraction.FractionFormat(numberFormat13, numberFormat17);
        fractionFormat6.setNumeratorFormat(numberFormat13);
        org.apache.commons.math.fraction.FractionFormat fractionFormat20 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj22 = fractionFormat20.parseObject("0 / 1");
        java.text.NumberFormat numberFormat23 = fractionFormat20.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat24 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator26 = fractionFormat24.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat27 = fractionFormat24.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat28 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator30 = fractionFormat28.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat31 = fractionFormat28.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat32 = new org.apache.commons.math.fraction.FractionFormat(numberFormat27, numberFormat31);
        org.apache.commons.math.fraction.FractionFormat fractionFormat33 = new org.apache.commons.math.fraction.FractionFormat(numberFormat23, numberFormat27);
        org.apache.commons.math.fraction.FractionFormat fractionFormat34 = new org.apache.commons.math.fraction.FractionFormat(numberFormat13, numberFormat23);
        org.apache.commons.math.fraction.FractionFormat fractionFormat35 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj37 = fractionFormat35.parseObject("0 / 1");
        java.lang.Object obj39 = fractionFormat35.parseObject("0 / 1");
        java.text.NumberFormat numberFormat40 = fractionFormat35.getNumeratorFormat();
        java.lang.Object obj41 = numberFormat40.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat42 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj44 = fractionFormat42.parseObject("0 / 1");
        java.lang.Object obj46 = fractionFormat42.parseObject("0 / 1");
        java.text.NumberFormat numberFormat47 = fractionFormat42.getNumeratorFormat();
        java.text.NumberFormat numberFormat48 = fractionFormat42.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat49 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator51 = fractionFormat49.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat52 = fractionFormat49.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat53 = new org.apache.commons.math.fraction.FractionFormat(numberFormat48, numberFormat52);
        org.apache.commons.math.fraction.FractionFormat fractionFormat54 = new org.apache.commons.math.fraction.FractionFormat(numberFormat40, numberFormat52);
        java.text.NumberFormat numberFormat55 = fractionFormat54.getNumeratorFormat();
        fractionFormat34.setDenominatorFormat(numberFormat55);
        java.lang.StringBuffer stringBuffer57 = null;
        java.text.FieldPosition fieldPosition58 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer59 = fractionFormat2.format((java.lang.Object) numberFormat55, stringBuffer57, fieldPosition58);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot format given object as a fraction");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(numberFormat3);
        org.junit.Assert.assertNull(numberFormat7);
        org.junit.Assert.assertNull(numberFormat8);
        org.junit.Assert.assertNull(numberFormat9);
        org.junit.Assert.assertNotNull(fractionFormat10);
        org.junit.Assert.assertNotNull(attributedCharacterIterator12);
        org.junit.Assert.assertNotNull(numberFormat13);
        org.junit.Assert.assertNotNull(fractionFormat14);
        org.junit.Assert.assertNotNull(attributedCharacterIterator16);
        org.junit.Assert.assertNotNull(numberFormat17);
        org.junit.Assert.assertNotNull(fractionFormat20);
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertNotNull(numberFormat23);
        org.junit.Assert.assertNotNull(fractionFormat24);
        org.junit.Assert.assertNotNull(attributedCharacterIterator26);
        org.junit.Assert.assertNotNull(numberFormat27);
        org.junit.Assert.assertNotNull(fractionFormat28);
        org.junit.Assert.assertNotNull(attributedCharacterIterator30);
        org.junit.Assert.assertNotNull(numberFormat31);
        org.junit.Assert.assertNotNull(fractionFormat35);
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertNotNull(obj39);
        org.junit.Assert.assertNotNull(numberFormat40);
        org.junit.Assert.assertNotNull(obj41);
        org.junit.Assert.assertNotNull(fractionFormat42);
        org.junit.Assert.assertNotNull(obj44);
        org.junit.Assert.assertNotNull(obj46);
        org.junit.Assert.assertNotNull(numberFormat47);
        org.junit.Assert.assertNotNull(numberFormat48);
        org.junit.Assert.assertNotNull(fractionFormat49);
        org.junit.Assert.assertNotNull(attributedCharacterIterator51);
        org.junit.Assert.assertNotNull(numberFormat52);
        org.junit.Assert.assertNotNull(numberFormat55);
    }

    @Test
    public void test0196() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0196");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator2 = fractionFormat0.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat3 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat4 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator6 = fractionFormat4.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat7 = fractionFormat4.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat8 = new org.apache.commons.math.fraction.FractionFormat(numberFormat3, numberFormat7);
        java.text.NumberFormat numberFormat9 = fractionFormat8.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat10 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj13 = fractionFormat11.parseObject("0 / 1");
        java.lang.Object obj15 = fractionFormat11.parseObject("0 / 1");
        java.text.NumberFormat numberFormat16 = fractionFormat11.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat17 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj19 = fractionFormat17.parseObject("0 / 1");
        java.text.NumberFormat numberFormat20 = fractionFormat17.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat21 = new org.apache.commons.math.fraction.FractionFormat(numberFormat16, numberFormat20);
        org.apache.commons.math.fraction.FractionFormat fractionFormat22 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj24 = fractionFormat22.parseObject("0 / 1");
        java.lang.Object obj26 = fractionFormat22.parseObject("0 / 1");
        java.text.NumberFormat numberFormat27 = fractionFormat22.getNumeratorFormat();
        fractionFormat21.setDenominatorFormat(numberFormat27);
        java.lang.Object obj29 = numberFormat27.clone();
        fractionFormat10.setNumeratorFormat(numberFormat27);
        java.lang.Object obj31 = numberFormat27.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat32 = new org.apache.commons.math.fraction.FractionFormat(numberFormat9, numberFormat27);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj34 = fractionFormat32.parseObject("");
            org.junit.Assert.fail("Expected exception of type java.text.ParseException; message: Format.parseObject(String) failed");
        } catch (java.text.ParseException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(attributedCharacterIterator2);
        org.junit.Assert.assertNotNull(numberFormat3);
        org.junit.Assert.assertNotNull(fractionFormat4);
        org.junit.Assert.assertNotNull(attributedCharacterIterator6);
        org.junit.Assert.assertNotNull(numberFormat7);
        org.junit.Assert.assertNotNull(numberFormat9);
        org.junit.Assert.assertNotNull(fractionFormat10);
        org.junit.Assert.assertNotNull(fractionFormat11);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertNotNull(numberFormat16);
        org.junit.Assert.assertNotNull(fractionFormat17);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(numberFormat20);
        org.junit.Assert.assertNotNull(fractionFormat22);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertNotNull(numberFormat27);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertNotNull(obj31);
    }

    @Test
    public void test0197() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0197");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.text.NumberFormat numberFormat3 = fractionFormat2.getDenominatorFormat();
        java.text.NumberFormat numberFormat4 = fractionFormat2.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator7 = fractionFormat5.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat8 = fractionFormat5.getDenominatorFormat();
        fractionFormat2.setNumeratorFormat(numberFormat8);
        org.apache.commons.math.fraction.FractionFormat fractionFormat10 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj12 = fractionFormat10.parseObject("0 / 1");
        java.lang.Object obj14 = fractionFormat10.parseObject("0 / 1");
        java.text.NumberFormat numberFormat15 = fractionFormat10.getNumeratorFormat();
        fractionFormat2.setDenominatorFormat(numberFormat15);
        org.apache.commons.math.fraction.FractionFormat fractionFormat17 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat18 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj20 = fractionFormat18.parseObject("0 / 1");
        java.lang.Object obj22 = fractionFormat18.parseObject("0 / 1");
        java.text.NumberFormat numberFormat23 = fractionFormat18.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat24 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj26 = fractionFormat24.parseObject("0 / 1");
        java.text.NumberFormat numberFormat27 = fractionFormat24.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat28 = new org.apache.commons.math.fraction.FractionFormat(numberFormat23, numberFormat27);
        org.apache.commons.math.fraction.FractionFormat fractionFormat29 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj31 = fractionFormat29.parseObject("0 / 1");
        java.lang.Object obj33 = fractionFormat29.parseObject("0 / 1");
        java.text.NumberFormat numberFormat34 = fractionFormat29.getNumeratorFormat();
        fractionFormat28.setDenominatorFormat(numberFormat34);
        java.lang.Object obj36 = numberFormat34.clone();
        fractionFormat17.setNumeratorFormat(numberFormat34);
        fractionFormat2.setDenominatorFormat(numberFormat34);
        org.apache.commons.math.fraction.FractionFormat fractionFormat39 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.Fraction fraction41 = fractionFormat39.parse("0 / 1");
        java.lang.String str42 = org.apache.commons.math.fraction.FractionFormat.formatFraction(fraction41);
        java.lang.StringBuffer stringBuffer43 = null;
        java.text.FieldPosition fieldPosition44 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer45 = fractionFormat2.format(fraction41, stringBuffer43, fieldPosition44);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(numberFormat3);
        org.junit.Assert.assertNull(numberFormat4);
        org.junit.Assert.assertNotNull(fractionFormat5);
        org.junit.Assert.assertNotNull(attributedCharacterIterator7);
        org.junit.Assert.assertNotNull(numberFormat8);
        org.junit.Assert.assertNotNull(fractionFormat10);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertNotNull(numberFormat15);
        org.junit.Assert.assertNotNull(fractionFormat17);
        org.junit.Assert.assertNotNull(fractionFormat18);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertNotNull(numberFormat23);
        org.junit.Assert.assertNotNull(fractionFormat24);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertNotNull(numberFormat27);
        org.junit.Assert.assertNotNull(fractionFormat29);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertNotNull(obj33);
        org.junit.Assert.assertNotNull(numberFormat34);
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertNotNull(fractionFormat39);
        org.junit.Assert.assertNotNull(fraction41);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "0 / 1" + "'", str42, "0 / 1");
    }

    @Test
    public void test0198() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0198");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.text.NumberFormat numberFormat3 = fractionFormat2.getDenominatorFormat();
        java.text.NumberFormat numberFormat4 = fractionFormat2.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator7 = fractionFormat5.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat8 = fractionFormat5.getDenominatorFormat();
        fractionFormat2.setNumeratorFormat(numberFormat8);
        java.lang.Object obj10 = numberFormat8.clone();
        java.lang.String str12 = numberFormat8.format((java.lang.Object) (short) 10);
        java.text.NumberFormat numberFormat13 = null;
        java.text.NumberFormat numberFormat14 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat15 = new org.apache.commons.math.fraction.FractionFormat(numberFormat13, numberFormat14);
        java.text.NumberFormat numberFormat16 = fractionFormat15.getDenominatorFormat();
        java.text.NumberFormat numberFormat17 = fractionFormat15.getNumeratorFormat();
        java.text.NumberFormat numberFormat18 = fractionFormat15.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat19 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator21 = fractionFormat19.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat22 = fractionFormat19.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat23 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator25 = fractionFormat23.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat26 = fractionFormat23.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat27 = new org.apache.commons.math.fraction.FractionFormat(numberFormat22, numberFormat26);
        fractionFormat15.setNumeratorFormat(numberFormat22);
        org.apache.commons.math.fraction.FractionFormat fractionFormat29 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj31 = fractionFormat29.parseObject("0 / 1");
        java.text.NumberFormat numberFormat32 = fractionFormat29.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat33 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator35 = fractionFormat33.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat36 = fractionFormat33.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat37 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator39 = fractionFormat37.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat40 = fractionFormat37.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat41 = new org.apache.commons.math.fraction.FractionFormat(numberFormat36, numberFormat40);
        org.apache.commons.math.fraction.FractionFormat fractionFormat42 = new org.apache.commons.math.fraction.FractionFormat(numberFormat32, numberFormat36);
        org.apache.commons.math.fraction.FractionFormat fractionFormat43 = new org.apache.commons.math.fraction.FractionFormat(numberFormat22, numberFormat32);
        org.apache.commons.math.fraction.FractionFormat fractionFormat44 = new org.apache.commons.math.fraction.FractionFormat(numberFormat8, numberFormat32);
        java.lang.Object obj45 = fractionFormat44.clone();
        java.lang.Object obj46 = fractionFormat44.clone();
        java.text.ParsePosition parsePosition48 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.fraction.Fraction fraction49 = fractionFormat44.parse("hi!", parsePosition48);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(numberFormat3);
        org.junit.Assert.assertNull(numberFormat4);
        org.junit.Assert.assertNotNull(fractionFormat5);
        org.junit.Assert.assertNotNull(attributedCharacterIterator7);
        org.junit.Assert.assertNotNull(numberFormat8);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "10" + "'", str12, "10");
        org.junit.Assert.assertNull(numberFormat16);
        org.junit.Assert.assertNull(numberFormat17);
        org.junit.Assert.assertNull(numberFormat18);
        org.junit.Assert.assertNotNull(fractionFormat19);
        org.junit.Assert.assertNotNull(attributedCharacterIterator21);
        org.junit.Assert.assertNotNull(numberFormat22);
        org.junit.Assert.assertNotNull(fractionFormat23);
        org.junit.Assert.assertNotNull(attributedCharacterIterator25);
        org.junit.Assert.assertNotNull(numberFormat26);
        org.junit.Assert.assertNotNull(fractionFormat29);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertNotNull(numberFormat32);
        org.junit.Assert.assertNotNull(fractionFormat33);
        org.junit.Assert.assertNotNull(attributedCharacterIterator35);
        org.junit.Assert.assertNotNull(numberFormat36);
        org.junit.Assert.assertNotNull(fractionFormat37);
        org.junit.Assert.assertNotNull(attributedCharacterIterator39);
        org.junit.Assert.assertNotNull(numberFormat40);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertNotNull(obj46);
    }

    @Test
    public void test0199() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0199");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat1 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj3 = fractionFormat1.parseObject("0 / 1");
        java.lang.Object obj5 = fractionFormat1.parseObject("0 / 1");
        java.text.NumberFormat numberFormat6 = fractionFormat1.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat7 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj9 = fractionFormat7.parseObject("0 / 1");
        java.text.NumberFormat numberFormat10 = fractionFormat7.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = new org.apache.commons.math.fraction.FractionFormat(numberFormat6, numberFormat10);
        org.apache.commons.math.fraction.FractionFormat fractionFormat12 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj14 = fractionFormat12.parseObject("0 / 1");
        java.lang.Object obj16 = fractionFormat12.parseObject("0 / 1");
        java.text.NumberFormat numberFormat17 = fractionFormat12.getNumeratorFormat();
        fractionFormat11.setDenominatorFormat(numberFormat17);
        java.lang.Object obj19 = numberFormat17.clone();
        fractionFormat0.setNumeratorFormat(numberFormat17);
        java.text.NumberFormat numberFormat21 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat22 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj24 = fractionFormat22.parseObject("0 / 1");
        java.lang.Object obj26 = fractionFormat22.parseObject("0 / 1");
        java.text.NumberFormat numberFormat27 = fractionFormat22.getNumeratorFormat();
        java.text.NumberFormat numberFormat28 = fractionFormat22.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat29 = new org.apache.commons.math.fraction.FractionFormat(numberFormat28);
        fractionFormat0.setNumeratorFormat(numberFormat28);
        java.text.ParsePosition parsePosition32 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj33 = fractionFormat0.parseObject("0 / 1", parsePosition32);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(fractionFormat1);
        org.junit.Assert.assertNotNull(obj3);
        org.junit.Assert.assertNotNull(obj5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertNotNull(fractionFormat7);
        org.junit.Assert.assertNotNull(obj9);
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertNotNull(fractionFormat12);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertNotNull(obj16);
        org.junit.Assert.assertNotNull(numberFormat17);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(numberFormat21);
        org.junit.Assert.assertNotNull(fractionFormat22);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertNotNull(numberFormat27);
        org.junit.Assert.assertNotNull(numberFormat28);
    }

    @Test
    public void test0200() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0200");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.text.NumberFormat numberFormat3 = fractionFormat2.getNumeratorFormat();
        java.text.NumberFormat numberFormat4 = fractionFormat2.getNumeratorFormat();
        java.text.NumberFormat numberFormat5 = fractionFormat2.getNumeratorFormat();
        java.text.NumberFormat numberFormat6 = fractionFormat2.getNumeratorFormat();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj7 = numberFormat6.clone();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(numberFormat3);
        org.junit.Assert.assertNull(numberFormat4);
        org.junit.Assert.assertNull(numberFormat5);
        org.junit.Assert.assertNull(numberFormat6);
    }

    @Test
    public void test0201() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0201");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.lang.Object obj3 = fractionFormat2.clone();
        java.text.NumberFormat numberFormat4 = null;
        java.text.NumberFormat numberFormat5 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat6 = new org.apache.commons.math.fraction.FractionFormat(numberFormat4, numberFormat5);
        java.text.NumberFormat numberFormat7 = fractionFormat6.getDenominatorFormat();
        java.text.NumberFormat numberFormat8 = fractionFormat6.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat9 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator11 = fractionFormat9.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat12 = fractionFormat9.getDenominatorFormat();
        fractionFormat6.setNumeratorFormat(numberFormat12);
        java.lang.Object obj14 = numberFormat12.clone();
        java.lang.String str16 = numberFormat12.format((java.lang.Object) (short) 10);
        org.apache.commons.math.fraction.FractionFormat fractionFormat17 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator19 = fractionFormat17.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat20 = fractionFormat17.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat21 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator23 = fractionFormat21.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat24 = fractionFormat21.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat25 = new org.apache.commons.math.fraction.FractionFormat(numberFormat20, numberFormat24);
        org.apache.commons.math.fraction.FractionFormat fractionFormat26 = new org.apache.commons.math.fraction.FractionFormat(numberFormat12, numberFormat20);
        fractionFormat2.setDenominatorFormat(numberFormat12);
        org.apache.commons.math.fraction.FractionFormat fractionFormat28 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj30 = fractionFormat28.parseObject("0 / 1");
        java.lang.Object obj32 = fractionFormat28.parseObject("0 / 1");
        java.lang.Object obj34 = fractionFormat28.parseObject("0 / 1");
        java.text.NumberFormat numberFormat35 = fractionFormat28.getNumeratorFormat();
        java.lang.Object obj37 = numberFormat35.parseObject("10");
        org.apache.commons.math.fraction.FractionFormat fractionFormat38 = new org.apache.commons.math.fraction.FractionFormat(numberFormat35);
        java.lang.StringBuffer stringBuffer39 = null;
        java.text.FieldPosition fieldPosition40 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer41 = fractionFormat2.format((java.lang.Object) fractionFormat38, stringBuffer39, fieldPosition40);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot format given object as a fraction");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(obj3);
        org.junit.Assert.assertNull(numberFormat7);
        org.junit.Assert.assertNull(numberFormat8);
        org.junit.Assert.assertNotNull(fractionFormat9);
        org.junit.Assert.assertNotNull(attributedCharacterIterator11);
        org.junit.Assert.assertNotNull(numberFormat12);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "10" + "'", str16, "10");
        org.junit.Assert.assertNotNull(fractionFormat17);
        org.junit.Assert.assertNotNull(attributedCharacterIterator19);
        org.junit.Assert.assertNotNull(numberFormat20);
        org.junit.Assert.assertNotNull(fractionFormat21);
        org.junit.Assert.assertNotNull(attributedCharacterIterator23);
        org.junit.Assert.assertNotNull(numberFormat24);
        org.junit.Assert.assertNotNull(fractionFormat28);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertNotNull(obj32);
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertNotNull(numberFormat35);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + 10L + "'", obj37, 10L);
    }

    @Test
    public void test0202() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0202");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.text.NumberFormat numberFormat3 = fractionFormat2.getDenominatorFormat();
        java.text.NumberFormat numberFormat4 = fractionFormat2.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator7 = fractionFormat5.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat8 = fractionFormat5.getDenominatorFormat();
        fractionFormat2.setNumeratorFormat(numberFormat8);
        org.apache.commons.math.fraction.FractionFormat fractionFormat10 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj12 = fractionFormat10.parseObject("0 / 1");
        java.lang.Object obj14 = fractionFormat10.parseObject("0 / 1");
        java.text.NumberFormat numberFormat15 = fractionFormat10.getNumeratorFormat();
        fractionFormat2.setDenominatorFormat(numberFormat15);
        org.apache.commons.math.fraction.FractionFormat fractionFormat17 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat18 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj20 = fractionFormat18.parseObject("0 / 1");
        java.lang.Object obj22 = fractionFormat18.parseObject("0 / 1");
        java.text.NumberFormat numberFormat23 = fractionFormat18.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat24 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj26 = fractionFormat24.parseObject("0 / 1");
        java.text.NumberFormat numberFormat27 = fractionFormat24.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat28 = new org.apache.commons.math.fraction.FractionFormat(numberFormat23, numberFormat27);
        org.apache.commons.math.fraction.FractionFormat fractionFormat29 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj31 = fractionFormat29.parseObject("0 / 1");
        java.lang.Object obj33 = fractionFormat29.parseObject("0 / 1");
        java.text.NumberFormat numberFormat34 = fractionFormat29.getNumeratorFormat();
        fractionFormat28.setDenominatorFormat(numberFormat34);
        java.lang.Object obj36 = numberFormat34.clone();
        fractionFormat17.setNumeratorFormat(numberFormat34);
        fractionFormat2.setDenominatorFormat(numberFormat34);
        java.text.ParsePosition parsePosition40 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj41 = fractionFormat2.parseObject("", parsePosition40);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(numberFormat3);
        org.junit.Assert.assertNull(numberFormat4);
        org.junit.Assert.assertNotNull(fractionFormat5);
        org.junit.Assert.assertNotNull(attributedCharacterIterator7);
        org.junit.Assert.assertNotNull(numberFormat8);
        org.junit.Assert.assertNotNull(fractionFormat10);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertNotNull(numberFormat15);
        org.junit.Assert.assertNotNull(fractionFormat17);
        org.junit.Assert.assertNotNull(fractionFormat18);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertNotNull(numberFormat23);
        org.junit.Assert.assertNotNull(fractionFormat24);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertNotNull(numberFormat27);
        org.junit.Assert.assertNotNull(fractionFormat29);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertNotNull(obj33);
        org.junit.Assert.assertNotNull(numberFormat34);
        org.junit.Assert.assertNotNull(obj36);
    }

    @Test
    public void test0203() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0203");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat5 = fractionFormat0.getNumeratorFormat();
        java.text.NumberFormat numberFormat6 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat7 = new org.apache.commons.math.fraction.FractionFormat(numberFormat6);
        org.apache.commons.math.fraction.FractionFormat fractionFormat8 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj10 = fractionFormat8.parseObject("0 / 1");
        java.lang.Object obj12 = fractionFormat8.parseObject("0 / 1");
        java.text.NumberFormat numberFormat13 = fractionFormat8.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat14 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj16 = fractionFormat14.parseObject("0 / 1");
        java.text.NumberFormat numberFormat17 = fractionFormat14.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat18 = new org.apache.commons.math.fraction.FractionFormat(numberFormat13, numberFormat17);
        org.apache.commons.math.fraction.FractionFormat fractionFormat19 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj21 = fractionFormat19.parseObject("0 / 1");
        java.lang.Object obj23 = fractionFormat19.parseObject("0 / 1");
        java.text.NumberFormat numberFormat24 = fractionFormat19.getNumeratorFormat();
        fractionFormat18.setDenominatorFormat(numberFormat24);
        org.apache.commons.math.fraction.FractionFormat fractionFormat26 = new org.apache.commons.math.fraction.FractionFormat(numberFormat6, numberFormat24);
        org.apache.commons.math.fraction.FractionFormat fractionFormat27 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj29 = fractionFormat27.parseObject("0 / 1");
        java.lang.Object obj31 = fractionFormat27.parseObject("0 / 1");
        java.text.NumberFormat numberFormat32 = fractionFormat27.getNumeratorFormat();
        java.text.NumberFormat numberFormat33 = fractionFormat27.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat34 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator36 = fractionFormat34.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat37 = fractionFormat34.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat38 = new org.apache.commons.math.fraction.FractionFormat(numberFormat33, numberFormat37);
        org.apache.commons.math.fraction.FractionFormat fractionFormat39 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator41 = fractionFormat39.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat42 = fractionFormat39.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat43 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator45 = fractionFormat43.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat46 = fractionFormat43.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat47 = new org.apache.commons.math.fraction.FractionFormat(numberFormat42, numberFormat46);
        org.apache.commons.math.fraction.FractionFormat fractionFormat48 = new org.apache.commons.math.fraction.FractionFormat(numberFormat33, numberFormat46);
        java.text.NumberFormat numberFormat49 = fractionFormat48.getDenominatorFormat();
        java.lang.Object obj51 = numberFormat49.parseObject("-1 / 1");
        org.apache.commons.math.fraction.FractionFormat fractionFormat52 = new org.apache.commons.math.fraction.FractionFormat(numberFormat49);
        org.apache.commons.math.fraction.FractionFormat fractionFormat53 = new org.apache.commons.math.fraction.FractionFormat(numberFormat24, numberFormat49);
        java.text.ParsePosition parsePosition55 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.fraction.Fraction fraction56 = fractionFormat53.parse("hi!", parsePosition55);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertNotNull(fractionFormat8);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertNotNull(numberFormat13);
        org.junit.Assert.assertNotNull(fractionFormat14);
        org.junit.Assert.assertNotNull(obj16);
        org.junit.Assert.assertNotNull(numberFormat17);
        org.junit.Assert.assertNotNull(fractionFormat19);
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertNotNull(numberFormat24);
        org.junit.Assert.assertNotNull(fractionFormat27);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertNotNull(numberFormat32);
        org.junit.Assert.assertNotNull(numberFormat33);
        org.junit.Assert.assertNotNull(fractionFormat34);
        org.junit.Assert.assertNotNull(attributedCharacterIterator36);
        org.junit.Assert.assertNotNull(numberFormat37);
        org.junit.Assert.assertNotNull(fractionFormat39);
        org.junit.Assert.assertNotNull(attributedCharacterIterator41);
        org.junit.Assert.assertNotNull(numberFormat42);
        org.junit.Assert.assertNotNull(fractionFormat43);
        org.junit.Assert.assertNotNull(attributedCharacterIterator45);
        org.junit.Assert.assertNotNull(numberFormat46);
        org.junit.Assert.assertNotNull(numberFormat49);
        org.junit.Assert.assertEquals("'" + obj51 + "' != '" + (-1L) + "'", obj51, (-1L));
    }

    @Test
    public void test0204() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0204");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat5 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat6 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj8 = fractionFormat6.parseObject("0 / 1");
        java.text.NumberFormat numberFormat9 = fractionFormat6.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat10 = new org.apache.commons.math.fraction.FractionFormat(numberFormat5, numberFormat9);
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj13 = fractionFormat11.parseObject("0 / 1");
        java.lang.Object obj15 = fractionFormat11.parseObject("0 / 1");
        java.text.NumberFormat numberFormat16 = fractionFormat11.getNumeratorFormat();
        java.text.NumberFormat numberFormat17 = fractionFormat11.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat18 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator20 = fractionFormat18.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat21 = fractionFormat18.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat22 = new org.apache.commons.math.fraction.FractionFormat(numberFormat17, numberFormat21);
        org.apache.commons.math.fraction.FractionFormat fractionFormat23 = new org.apache.commons.math.fraction.FractionFormat(numberFormat5, numberFormat21);
        java.text.ParsePosition parsePosition25 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj26 = fractionFormat23.parseObject("", parsePosition25);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(fractionFormat6);
        org.junit.Assert.assertNotNull(obj8);
        org.junit.Assert.assertNotNull(numberFormat9);
        org.junit.Assert.assertNotNull(fractionFormat11);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertNotNull(numberFormat16);
        org.junit.Assert.assertNotNull(numberFormat17);
        org.junit.Assert.assertNotNull(fractionFormat18);
        org.junit.Assert.assertNotNull(attributedCharacterIterator20);
        org.junit.Assert.assertNotNull(numberFormat21);
    }

    @Test
    public void test0205() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0205");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.text.NumberFormat numberFormat3 = fractionFormat2.getDenominatorFormat();
        java.text.NumberFormat numberFormat4 = fractionFormat2.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator7 = fractionFormat5.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat8 = fractionFormat5.getDenominatorFormat();
        fractionFormat2.setNumeratorFormat(numberFormat8);
        org.apache.commons.math.fraction.FractionFormat fractionFormat10 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator12 = fractionFormat10.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat13 = fractionFormat10.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat14 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator16 = fractionFormat14.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat17 = fractionFormat14.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat18 = new org.apache.commons.math.fraction.FractionFormat(numberFormat13, numberFormat17);
        java.text.NumberFormat numberFormat19 = fractionFormat18.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat20 = new org.apache.commons.math.fraction.FractionFormat(numberFormat19);
        fractionFormat2.setNumeratorFormat(numberFormat19);
        java.text.ParsePosition parsePosition23 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj24 = fractionFormat2.parseObject("10", parsePosition23);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(numberFormat3);
        org.junit.Assert.assertNull(numberFormat4);
        org.junit.Assert.assertNotNull(fractionFormat5);
        org.junit.Assert.assertNotNull(attributedCharacterIterator7);
        org.junit.Assert.assertNotNull(numberFormat8);
        org.junit.Assert.assertNotNull(fractionFormat10);
        org.junit.Assert.assertNotNull(attributedCharacterIterator12);
        org.junit.Assert.assertNotNull(numberFormat13);
        org.junit.Assert.assertNotNull(fractionFormat14);
        org.junit.Assert.assertNotNull(attributedCharacterIterator16);
        org.junit.Assert.assertNotNull(numberFormat17);
        org.junit.Assert.assertNotNull(numberFormat19);
    }

    @Test
    public void test0206() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0206");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.text.NumberFormat numberFormat3 = fractionFormat2.getDenominatorFormat();
        java.text.NumberFormat numberFormat4 = fractionFormat2.getNumeratorFormat();
        java.text.NumberFormat numberFormat5 = fractionFormat2.getNumeratorFormat();
        java.text.NumberFormat numberFormat6 = fractionFormat2.getDenominatorFormat();
        java.lang.Object obj7 = fractionFormat2.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat8 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj10 = fractionFormat8.parseObject("0 / 1");
        java.lang.Object obj12 = fractionFormat8.parseObject("0 / 1");
        java.text.NumberFormat numberFormat13 = fractionFormat8.getNumeratorFormat();
        java.text.NumberFormat numberFormat14 = fractionFormat8.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat15 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator17 = fractionFormat15.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat18 = fractionFormat15.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat19 = new org.apache.commons.math.fraction.FractionFormat(numberFormat14, numberFormat18);
        org.apache.commons.math.fraction.FractionFormat fractionFormat20 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator22 = fractionFormat20.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat23 = fractionFormat20.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat24 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator26 = fractionFormat24.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat27 = fractionFormat24.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat28 = new org.apache.commons.math.fraction.FractionFormat(numberFormat23, numberFormat27);
        org.apache.commons.math.fraction.FractionFormat fractionFormat29 = new org.apache.commons.math.fraction.FractionFormat(numberFormat14, numberFormat27);
        java.text.NumberFormat numberFormat30 = fractionFormat29.getDenominatorFormat();
        fractionFormat2.setDenominatorFormat(numberFormat30);
        org.apache.commons.math.fraction.FractionFormat fractionFormat32 = new org.apache.commons.math.fraction.FractionFormat(numberFormat30);
        org.apache.commons.math.fraction.FractionFormat fractionFormat33 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.Fraction fraction35 = fractionFormat33.parse("0 / 1");
        java.lang.String str36 = org.apache.commons.math.fraction.FractionFormat.formatFraction(fraction35);
        java.lang.String str37 = org.apache.commons.math.fraction.FractionFormat.formatFraction(fraction35);
        java.lang.String str38 = org.apache.commons.math.fraction.FractionFormat.formatFraction(fraction35);
        java.lang.String str39 = org.apache.commons.math.fraction.FractionFormat.formatFraction(fraction35);
        java.lang.String str40 = org.apache.commons.math.fraction.FractionFormat.formatFraction(fraction35);
        java.lang.String str41 = org.apache.commons.math.fraction.FractionFormat.formatFraction(fraction35);
        java.lang.String str42 = org.apache.commons.math.fraction.FractionFormat.formatFraction(fraction35);
        java.lang.StringBuffer stringBuffer43 = null;
        java.text.FieldPosition fieldPosition44 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer45 = fractionFormat32.format(fraction35, stringBuffer43, fieldPosition44);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(numberFormat3);
        org.junit.Assert.assertNull(numberFormat4);
        org.junit.Assert.assertNull(numberFormat5);
        org.junit.Assert.assertNull(numberFormat6);
        org.junit.Assert.assertNotNull(obj7);
        org.junit.Assert.assertNotNull(fractionFormat8);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertNotNull(numberFormat13);
        org.junit.Assert.assertNotNull(numberFormat14);
        org.junit.Assert.assertNotNull(fractionFormat15);
        org.junit.Assert.assertNotNull(attributedCharacterIterator17);
        org.junit.Assert.assertNotNull(numberFormat18);
        org.junit.Assert.assertNotNull(fractionFormat20);
        org.junit.Assert.assertNotNull(attributedCharacterIterator22);
        org.junit.Assert.assertNotNull(numberFormat23);
        org.junit.Assert.assertNotNull(fractionFormat24);
        org.junit.Assert.assertNotNull(attributedCharacterIterator26);
        org.junit.Assert.assertNotNull(numberFormat27);
        org.junit.Assert.assertNotNull(numberFormat30);
        org.junit.Assert.assertNotNull(fractionFormat33);
        org.junit.Assert.assertNotNull(fraction35);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "0 / 1" + "'", str36, "0 / 1");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "0 / 1" + "'", str37, "0 / 1");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "0 / 1" + "'", str38, "0 / 1");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "0 / 1" + "'", str39, "0 / 1");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "0 / 1" + "'", str40, "0 / 1");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "0 / 1" + "'", str41, "0 / 1");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "0 / 1" + "'", str42, "0 / 1");
    }

    @Test
    public void test0207() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0207");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator2 = fractionFormat0.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat3 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat4 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator6 = fractionFormat4.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat7 = fractionFormat4.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat8 = new org.apache.commons.math.fraction.FractionFormat(numberFormat3, numberFormat7);
        org.apache.commons.math.fraction.FractionFormat fractionFormat9 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj11 = fractionFormat9.parseObject("0 / 1");
        java.lang.Object obj13 = fractionFormat9.parseObject("0 / 1");
        java.text.NumberFormat numberFormat14 = fractionFormat9.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat15 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj17 = fractionFormat15.parseObject("0 / 1");
        java.text.NumberFormat numberFormat18 = fractionFormat15.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat19 = new org.apache.commons.math.fraction.FractionFormat(numberFormat14, numberFormat18);
        java.text.NumberFormat numberFormat20 = fractionFormat19.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat21 = new org.apache.commons.math.fraction.FractionFormat(numberFormat3, numberFormat20);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.fraction.Fraction fraction23 = fractionFormat21.parse("hi!");
            org.junit.Assert.fail("Expected exception of type java.text.ParseException; message: Unparseable fraction number: \"hi!\"");
        } catch (java.text.ParseException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(attributedCharacterIterator2);
        org.junit.Assert.assertNotNull(numberFormat3);
        org.junit.Assert.assertNotNull(fractionFormat4);
        org.junit.Assert.assertNotNull(attributedCharacterIterator6);
        org.junit.Assert.assertNotNull(numberFormat7);
        org.junit.Assert.assertNotNull(fractionFormat9);
        org.junit.Assert.assertNotNull(obj11);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertNotNull(numberFormat14);
        org.junit.Assert.assertNotNull(fractionFormat15);
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertNotNull(numberFormat18);
        org.junit.Assert.assertNotNull(numberFormat20);
    }

    @Test
    public void test0208() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0208");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.text.NumberFormat numberFormat3 = fractionFormat2.getDenominatorFormat();
        java.text.NumberFormat numberFormat4 = fractionFormat2.getNumeratorFormat();
        java.text.NumberFormat numberFormat5 = fractionFormat2.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat6 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj8 = fractionFormat6.parseObject("0 / 1");
        java.lang.Object obj10 = fractionFormat6.parseObject("0 / 1");
        java.text.NumberFormat numberFormat11 = fractionFormat6.getNumeratorFormat();
        java.lang.Object obj12 = numberFormat11.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat13 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj15 = fractionFormat13.parseObject("0 / 1");
        java.lang.Object obj17 = fractionFormat13.parseObject("0 / 1");
        java.text.NumberFormat numberFormat18 = fractionFormat13.getNumeratorFormat();
        java.text.NumberFormat numberFormat19 = fractionFormat13.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat20 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator22 = fractionFormat20.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat23 = fractionFormat20.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat24 = new org.apache.commons.math.fraction.FractionFormat(numberFormat19, numberFormat23);
        org.apache.commons.math.fraction.FractionFormat fractionFormat25 = new org.apache.commons.math.fraction.FractionFormat(numberFormat11, numberFormat23);
        fractionFormat2.setNumeratorFormat(numberFormat11);
        org.apache.commons.math.fraction.Fraction fraction28 = fractionFormat2.parse("10");
        org.apache.commons.math.fraction.Fraction fraction29 = null;
        java.lang.StringBuffer stringBuffer30 = null;
        java.text.FieldPosition fieldPosition31 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer32 = fractionFormat2.format(fraction29, stringBuffer30, fieldPosition31);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(numberFormat3);
        org.junit.Assert.assertNull(numberFormat4);
        org.junit.Assert.assertNull(numberFormat5);
        org.junit.Assert.assertNotNull(fractionFormat6);
        org.junit.Assert.assertNotNull(obj8);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertNotNull(numberFormat11);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertNotNull(fractionFormat13);
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertNotNull(numberFormat18);
        org.junit.Assert.assertNotNull(numberFormat19);
        org.junit.Assert.assertNotNull(fractionFormat20);
        org.junit.Assert.assertNotNull(attributedCharacterIterator22);
        org.junit.Assert.assertNotNull(numberFormat23);
        org.junit.Assert.assertNotNull(fraction28);
    }

    @Test
    public void test0209() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0209");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = new org.apache.commons.math.fraction.FractionFormat();
        java.text.NumberFormat numberFormat1 = fractionFormat0.getDenominatorFormat();
        java.text.NumberFormat numberFormat2 = fractionFormat0.getNumeratorFormat();
        java.text.ParsePosition parsePosition4 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.fraction.Fraction fraction5 = fractionFormat0.parse("", parsePosition4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(numberFormat1);
        org.junit.Assert.assertNotNull(numberFormat2);
    }

    @Test
    public void test0210() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0210");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.text.NumberFormat numberFormat3 = fractionFormat2.getDenominatorFormat();
        java.text.NumberFormat numberFormat4 = fractionFormat2.getNumeratorFormat();
        java.text.NumberFormat numberFormat5 = fractionFormat2.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat6 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj8 = fractionFormat6.parseObject("0 / 1");
        java.lang.Object obj10 = fractionFormat6.parseObject("0 / 1");
        java.text.NumberFormat numberFormat11 = fractionFormat6.getNumeratorFormat();
        java.lang.Object obj12 = numberFormat11.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat13 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj15 = fractionFormat13.parseObject("0 / 1");
        java.lang.Object obj17 = fractionFormat13.parseObject("0 / 1");
        java.text.NumberFormat numberFormat18 = fractionFormat13.getNumeratorFormat();
        java.text.NumberFormat numberFormat19 = fractionFormat13.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat20 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator22 = fractionFormat20.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat23 = fractionFormat20.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat24 = new org.apache.commons.math.fraction.FractionFormat(numberFormat19, numberFormat23);
        org.apache.commons.math.fraction.FractionFormat fractionFormat25 = new org.apache.commons.math.fraction.FractionFormat(numberFormat11, numberFormat23);
        fractionFormat2.setNumeratorFormat(numberFormat11);
        org.apache.commons.math.fraction.FractionFormat fractionFormat27 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj29 = fractionFormat27.parseObject("0 / 1");
        java.lang.Object obj31 = fractionFormat27.parseObject("0 / 1");
        java.text.NumberFormat numberFormat32 = fractionFormat27.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat33 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj35 = fractionFormat33.parseObject("0 / 1");
        java.text.NumberFormat numberFormat36 = fractionFormat33.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat37 = new org.apache.commons.math.fraction.FractionFormat(numberFormat32, numberFormat36);
        org.apache.commons.math.fraction.FractionFormat fractionFormat38 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj40 = fractionFormat38.parseObject("0 / 1");
        java.lang.Object obj42 = fractionFormat38.parseObject("0 / 1");
        java.text.NumberFormat numberFormat43 = fractionFormat38.getNumeratorFormat();
        fractionFormat37.setDenominatorFormat(numberFormat43);
        java.lang.Object obj45 = numberFormat43.clone();
        fractionFormat2.setDenominatorFormat(numberFormat43);
        org.apache.commons.math.fraction.FractionFormat fractionFormat47 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj49 = fractionFormat47.parseObject("0 / 1");
        java.lang.Object obj51 = fractionFormat47.parseObject("0 / 1");
        java.text.NumberFormat numberFormat52 = fractionFormat47.getNumeratorFormat();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str53 = numberFormat43.format((java.lang.Object) fractionFormat47);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot format given Object as a Number");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(numberFormat3);
        org.junit.Assert.assertNull(numberFormat4);
        org.junit.Assert.assertNull(numberFormat5);
        org.junit.Assert.assertNotNull(fractionFormat6);
        org.junit.Assert.assertNotNull(obj8);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertNotNull(numberFormat11);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertNotNull(fractionFormat13);
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertNotNull(numberFormat18);
        org.junit.Assert.assertNotNull(numberFormat19);
        org.junit.Assert.assertNotNull(fractionFormat20);
        org.junit.Assert.assertNotNull(attributedCharacterIterator22);
        org.junit.Assert.assertNotNull(numberFormat23);
        org.junit.Assert.assertNotNull(fractionFormat27);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertNotNull(numberFormat32);
        org.junit.Assert.assertNotNull(fractionFormat33);
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertNotNull(numberFormat36);
        org.junit.Assert.assertNotNull(fractionFormat38);
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertNotNull(numberFormat43);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertNotNull(fractionFormat47);
        org.junit.Assert.assertNotNull(obj49);
        org.junit.Assert.assertNotNull(obj51);
        org.junit.Assert.assertNotNull(numberFormat52);
    }

    @Test
    public void test0211() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0211");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.text.NumberFormat numberFormat3 = fractionFormat2.getNumeratorFormat();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass4 = numberFormat3.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(numberFormat3);
    }

    @Test
    public void test0212() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0212");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.text.NumberFormat numberFormat3 = fractionFormat2.getDenominatorFormat();
        java.text.NumberFormat numberFormat4 = fractionFormat2.getNumeratorFormat();
        java.text.NumberFormat numberFormat5 = fractionFormat2.getNumeratorFormat();
        java.text.NumberFormat numberFormat6 = fractionFormat2.getDenominatorFormat();
        java.lang.Object obj7 = fractionFormat2.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat8 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj10 = fractionFormat8.parseObject("0 / 1");
        java.lang.Object obj12 = fractionFormat8.parseObject("0 / 1");
        java.text.NumberFormat numberFormat13 = fractionFormat8.getNumeratorFormat();
        java.text.NumberFormat numberFormat14 = fractionFormat8.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat15 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator17 = fractionFormat15.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat18 = fractionFormat15.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat19 = new org.apache.commons.math.fraction.FractionFormat(numberFormat14, numberFormat18);
        org.apache.commons.math.fraction.FractionFormat fractionFormat20 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator22 = fractionFormat20.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat23 = fractionFormat20.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat24 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator26 = fractionFormat24.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat27 = fractionFormat24.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat28 = new org.apache.commons.math.fraction.FractionFormat(numberFormat23, numberFormat27);
        org.apache.commons.math.fraction.FractionFormat fractionFormat29 = new org.apache.commons.math.fraction.FractionFormat(numberFormat14, numberFormat27);
        java.text.NumberFormat numberFormat30 = fractionFormat29.getDenominatorFormat();
        fractionFormat2.setDenominatorFormat(numberFormat30);
        org.apache.commons.math.fraction.FractionFormat fractionFormat32 = new org.apache.commons.math.fraction.FractionFormat(numberFormat30);
        org.apache.commons.math.fraction.FractionFormat fractionFormat33 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat34 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj36 = fractionFormat34.parseObject("0 / 1");
        java.lang.Object obj38 = fractionFormat34.parseObject("0 / 1");
        java.text.NumberFormat numberFormat39 = fractionFormat34.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat40 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj42 = fractionFormat40.parseObject("0 / 1");
        java.text.NumberFormat numberFormat43 = fractionFormat40.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat44 = new org.apache.commons.math.fraction.FractionFormat(numberFormat39, numberFormat43);
        org.apache.commons.math.fraction.FractionFormat fractionFormat45 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj47 = fractionFormat45.parseObject("0 / 1");
        java.lang.Object obj49 = fractionFormat45.parseObject("0 / 1");
        java.text.NumberFormat numberFormat50 = fractionFormat45.getNumeratorFormat();
        fractionFormat44.setDenominatorFormat(numberFormat50);
        java.lang.Object obj52 = numberFormat50.clone();
        fractionFormat33.setNumeratorFormat(numberFormat50);
        java.lang.Object obj54 = numberFormat50.clone();
        java.lang.Object obj55 = numberFormat50.clone();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str56 = numberFormat30.format((java.lang.Object) numberFormat50);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot format given Object as a Number");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(numberFormat3);
        org.junit.Assert.assertNull(numberFormat4);
        org.junit.Assert.assertNull(numberFormat5);
        org.junit.Assert.assertNull(numberFormat6);
        org.junit.Assert.assertNotNull(obj7);
        org.junit.Assert.assertNotNull(fractionFormat8);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertNotNull(numberFormat13);
        org.junit.Assert.assertNotNull(numberFormat14);
        org.junit.Assert.assertNotNull(fractionFormat15);
        org.junit.Assert.assertNotNull(attributedCharacterIterator17);
        org.junit.Assert.assertNotNull(numberFormat18);
        org.junit.Assert.assertNotNull(fractionFormat20);
        org.junit.Assert.assertNotNull(attributedCharacterIterator22);
        org.junit.Assert.assertNotNull(numberFormat23);
        org.junit.Assert.assertNotNull(fractionFormat24);
        org.junit.Assert.assertNotNull(attributedCharacterIterator26);
        org.junit.Assert.assertNotNull(numberFormat27);
        org.junit.Assert.assertNotNull(numberFormat30);
        org.junit.Assert.assertNotNull(fractionFormat33);
        org.junit.Assert.assertNotNull(fractionFormat34);
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertNotNull(numberFormat39);
        org.junit.Assert.assertNotNull(fractionFormat40);
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertNotNull(numberFormat43);
        org.junit.Assert.assertNotNull(fractionFormat45);
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertNotNull(obj49);
        org.junit.Assert.assertNotNull(numberFormat50);
        org.junit.Assert.assertNotNull(obj52);
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertNotNull(obj55);
    }

    @Test
    public void test0213() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0213");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.text.NumberFormat numberFormat3 = fractionFormat2.getDenominatorFormat();
        java.text.NumberFormat numberFormat4 = fractionFormat2.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator7 = fractionFormat5.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat8 = fractionFormat5.getDenominatorFormat();
        fractionFormat2.setNumeratorFormat(numberFormat8);
        java.lang.Object obj10 = numberFormat8.clone();
        java.lang.String str12 = numberFormat8.format((java.lang.Object) (short) 10);
        java.text.NumberFormat numberFormat13 = null;
        java.text.NumberFormat numberFormat14 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat15 = new org.apache.commons.math.fraction.FractionFormat(numberFormat13, numberFormat14);
        java.text.NumberFormat numberFormat16 = fractionFormat15.getDenominatorFormat();
        java.text.NumberFormat numberFormat17 = fractionFormat15.getNumeratorFormat();
        java.text.NumberFormat numberFormat18 = fractionFormat15.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat19 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator21 = fractionFormat19.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat22 = fractionFormat19.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat23 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator25 = fractionFormat23.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat26 = fractionFormat23.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat27 = new org.apache.commons.math.fraction.FractionFormat(numberFormat22, numberFormat26);
        fractionFormat15.setNumeratorFormat(numberFormat22);
        org.apache.commons.math.fraction.FractionFormat fractionFormat29 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj31 = fractionFormat29.parseObject("0 / 1");
        java.text.NumberFormat numberFormat32 = fractionFormat29.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat33 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator35 = fractionFormat33.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat36 = fractionFormat33.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat37 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator39 = fractionFormat37.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat40 = fractionFormat37.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat41 = new org.apache.commons.math.fraction.FractionFormat(numberFormat36, numberFormat40);
        org.apache.commons.math.fraction.FractionFormat fractionFormat42 = new org.apache.commons.math.fraction.FractionFormat(numberFormat32, numberFormat36);
        org.apache.commons.math.fraction.FractionFormat fractionFormat43 = new org.apache.commons.math.fraction.FractionFormat(numberFormat22, numberFormat32);
        org.apache.commons.math.fraction.FractionFormat fractionFormat44 = new org.apache.commons.math.fraction.FractionFormat(numberFormat8, numberFormat32);
        org.apache.commons.math.fraction.FractionFormat fractionFormat45 = new org.apache.commons.math.fraction.FractionFormat(numberFormat8);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.fraction.Fraction fraction47 = fractionFormat45.parse("");
            org.junit.Assert.fail("Expected exception of type java.text.ParseException; message: Unparseable fraction number: \"\"");
        } catch (java.text.ParseException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(numberFormat3);
        org.junit.Assert.assertNull(numberFormat4);
        org.junit.Assert.assertNotNull(fractionFormat5);
        org.junit.Assert.assertNotNull(attributedCharacterIterator7);
        org.junit.Assert.assertNotNull(numberFormat8);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "10" + "'", str12, "10");
        org.junit.Assert.assertNull(numberFormat16);
        org.junit.Assert.assertNull(numberFormat17);
        org.junit.Assert.assertNull(numberFormat18);
        org.junit.Assert.assertNotNull(fractionFormat19);
        org.junit.Assert.assertNotNull(attributedCharacterIterator21);
        org.junit.Assert.assertNotNull(numberFormat22);
        org.junit.Assert.assertNotNull(fractionFormat23);
        org.junit.Assert.assertNotNull(attributedCharacterIterator25);
        org.junit.Assert.assertNotNull(numberFormat26);
        org.junit.Assert.assertNotNull(fractionFormat29);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertNotNull(numberFormat32);
        org.junit.Assert.assertNotNull(fractionFormat33);
        org.junit.Assert.assertNotNull(attributedCharacterIterator35);
        org.junit.Assert.assertNotNull(numberFormat36);
        org.junit.Assert.assertNotNull(fractionFormat37);
        org.junit.Assert.assertNotNull(attributedCharacterIterator39);
        org.junit.Assert.assertNotNull(numberFormat40);
    }

    @Test
    public void test0214() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0214");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj6 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj8 = fractionFormat0.parseObject("-1 / 1");
        org.apache.commons.math.fraction.FractionFormat fractionFormat9 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator11 = fractionFormat9.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat12 = fractionFormat9.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat13 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator15 = fractionFormat13.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat16 = fractionFormat13.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat17 = new org.apache.commons.math.fraction.FractionFormat(numberFormat12, numberFormat16);
        java.text.NumberFormat numberFormat18 = fractionFormat17.getDenominatorFormat();
        fractionFormat0.setDenominatorFormat(numberFormat18);
        java.text.NumberFormat numberFormat20 = null;
        java.text.NumberFormat numberFormat21 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat22 = new org.apache.commons.math.fraction.FractionFormat(numberFormat20, numberFormat21);
        java.lang.Object obj23 = fractionFormat22.clone();
        java.lang.Object obj24 = fractionFormat22.clone();
        java.lang.Object obj25 = fractionFormat22.clone();
        java.text.NumberFormat numberFormat26 = fractionFormat22.getNumeratorFormat();
        // The following exception was thrown during execution in test generation
        try {
            java.text.AttributedCharacterIterator attributedCharacterIterator27 = fractionFormat0.formatToCharacterIterator((java.lang.Object) numberFormat26);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot format given object as a fraction");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(obj6);
        org.junit.Assert.assertNotNull(obj8);
        org.junit.Assert.assertNotNull(fractionFormat9);
        org.junit.Assert.assertNotNull(attributedCharacterIterator11);
        org.junit.Assert.assertNotNull(numberFormat12);
        org.junit.Assert.assertNotNull(fractionFormat13);
        org.junit.Assert.assertNotNull(attributedCharacterIterator15);
        org.junit.Assert.assertNotNull(numberFormat16);
        org.junit.Assert.assertNotNull(numberFormat18);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertNotNull(obj25);
        org.junit.Assert.assertNull(numberFormat26);
    }

    @Test
    public void test0215() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0215");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.text.NumberFormat numberFormat3 = fractionFormat2.getNumeratorFormat();
        java.text.NumberFormat numberFormat4 = fractionFormat2.getNumeratorFormat();
        java.text.NumberFormat numberFormat5 = fractionFormat2.getNumeratorFormat();
        java.text.NumberFormat numberFormat6 = fractionFormat2.getNumeratorFormat();
        java.lang.Object obj7 = fractionFormat2.clone();
        java.text.ParsePosition parsePosition9 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.fraction.Fraction fraction10 = fractionFormat2.parse("-1 / 1", parsePosition9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(numberFormat3);
        org.junit.Assert.assertNull(numberFormat4);
        org.junit.Assert.assertNull(numberFormat5);
        org.junit.Assert.assertNull(numberFormat6);
        org.junit.Assert.assertNotNull(obj7);
    }

    @Test
    public void test0216() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0216");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        java.text.NumberFormat numberFormat2 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat3 = new org.apache.commons.math.fraction.FractionFormat(numberFormat1, numberFormat2);
        java.text.NumberFormat numberFormat4 = fractionFormat3.getDenominatorFormat();
        java.text.NumberFormat numberFormat5 = fractionFormat3.getNumeratorFormat();
        java.text.NumberFormat numberFormat6 = fractionFormat3.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat7 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator9 = fractionFormat7.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat10 = fractionFormat7.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator13 = fractionFormat11.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat14 = fractionFormat11.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat15 = new org.apache.commons.math.fraction.FractionFormat(numberFormat10, numberFormat14);
        fractionFormat3.setNumeratorFormat(numberFormat10);
        org.apache.commons.math.fraction.FractionFormat fractionFormat17 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj19 = fractionFormat17.parseObject("0 / 1");
        java.text.NumberFormat numberFormat20 = fractionFormat17.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat21 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator23 = fractionFormat21.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat24 = fractionFormat21.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat25 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator27 = fractionFormat25.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat28 = fractionFormat25.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat29 = new org.apache.commons.math.fraction.FractionFormat(numberFormat24, numberFormat28);
        org.apache.commons.math.fraction.FractionFormat fractionFormat30 = new org.apache.commons.math.fraction.FractionFormat(numberFormat20, numberFormat24);
        org.apache.commons.math.fraction.FractionFormat fractionFormat31 = new org.apache.commons.math.fraction.FractionFormat(numberFormat10, numberFormat20);
        org.apache.commons.math.fraction.FractionFormat fractionFormat32 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat10);
        java.lang.Class<?> wildcardClass33 = fractionFormat32.getClass();
        org.junit.Assert.assertNull(numberFormat4);
        org.junit.Assert.assertNull(numberFormat5);
        org.junit.Assert.assertNull(numberFormat6);
        org.junit.Assert.assertNotNull(fractionFormat7);
        org.junit.Assert.assertNotNull(attributedCharacterIterator9);
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertNotNull(fractionFormat11);
        org.junit.Assert.assertNotNull(attributedCharacterIterator13);
        org.junit.Assert.assertNotNull(numberFormat14);
        org.junit.Assert.assertNotNull(fractionFormat17);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(numberFormat20);
        org.junit.Assert.assertNotNull(fractionFormat21);
        org.junit.Assert.assertNotNull(attributedCharacterIterator23);
        org.junit.Assert.assertNotNull(numberFormat24);
        org.junit.Assert.assertNotNull(fractionFormat25);
        org.junit.Assert.assertNotNull(attributedCharacterIterator27);
        org.junit.Assert.assertNotNull(numberFormat28);
        org.junit.Assert.assertNotNull(wildcardClass33);
    }

    @Test
    public void test0217() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0217");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.text.NumberFormat numberFormat3 = fractionFormat2.getNumeratorFormat();
        java.text.NumberFormat numberFormat4 = fractionFormat2.getNumeratorFormat();
        java.text.NumberFormat numberFormat5 = fractionFormat2.getDenominatorFormat();
        java.text.NumberFormat numberFormat6 = null;
        java.text.NumberFormat numberFormat7 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat8 = new org.apache.commons.math.fraction.FractionFormat(numberFormat6, numberFormat7);
        java.text.NumberFormat numberFormat9 = fractionFormat8.getDenominatorFormat();
        java.text.NumberFormat numberFormat10 = fractionFormat8.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator13 = fractionFormat11.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat14 = fractionFormat11.getDenominatorFormat();
        fractionFormat8.setNumeratorFormat(numberFormat14);
        java.lang.Object obj16 = numberFormat14.clone();
        java.lang.String str18 = numberFormat14.format((java.lang.Object) (short) 10);
        org.apache.commons.math.fraction.FractionFormat fractionFormat19 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator21 = fractionFormat19.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat22 = fractionFormat19.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat23 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator25 = fractionFormat23.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat26 = fractionFormat23.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat27 = new org.apache.commons.math.fraction.FractionFormat(numberFormat22, numberFormat26);
        org.apache.commons.math.fraction.FractionFormat fractionFormat28 = new org.apache.commons.math.fraction.FractionFormat(numberFormat14, numberFormat22);
        java.lang.StringBuffer stringBuffer29 = null;
        java.text.FieldPosition fieldPosition30 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer31 = fractionFormat2.format((java.lang.Object) numberFormat14, stringBuffer29, fieldPosition30);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot format given object as a fraction");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(numberFormat3);
        org.junit.Assert.assertNull(numberFormat4);
        org.junit.Assert.assertNull(numberFormat5);
        org.junit.Assert.assertNull(numberFormat9);
        org.junit.Assert.assertNull(numberFormat10);
        org.junit.Assert.assertNotNull(fractionFormat11);
        org.junit.Assert.assertNotNull(attributedCharacterIterator13);
        org.junit.Assert.assertNotNull(numberFormat14);
        org.junit.Assert.assertNotNull(obj16);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "10" + "'", str18, "10");
        org.junit.Assert.assertNotNull(fractionFormat19);
        org.junit.Assert.assertNotNull(attributedCharacterIterator21);
        org.junit.Assert.assertNotNull(numberFormat22);
        org.junit.Assert.assertNotNull(fractionFormat23);
        org.junit.Assert.assertNotNull(attributedCharacterIterator25);
        org.junit.Assert.assertNotNull(numberFormat26);
    }

    @Test
    public void test0218() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0218");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat5 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat6 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj8 = fractionFormat6.parseObject("0 / 1");
        java.text.NumberFormat numberFormat9 = fractionFormat6.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat10 = new org.apache.commons.math.fraction.FractionFormat(numberFormat5, numberFormat9);
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj13 = fractionFormat11.parseObject("0 / 1");
        java.lang.Object obj15 = fractionFormat11.parseObject("0 / 1");
        java.text.NumberFormat numberFormat16 = fractionFormat11.getNumeratorFormat();
        java.text.NumberFormat numberFormat17 = fractionFormat11.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat18 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator20 = fractionFormat18.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat21 = fractionFormat18.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat22 = new org.apache.commons.math.fraction.FractionFormat(numberFormat17, numberFormat21);
        org.apache.commons.math.fraction.FractionFormat fractionFormat23 = new org.apache.commons.math.fraction.FractionFormat(numberFormat5, numberFormat21);
        java.lang.Object obj24 = fractionFormat23.clone();
        java.text.NumberFormat numberFormat25 = null;
        java.text.NumberFormat numberFormat26 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat27 = new org.apache.commons.math.fraction.FractionFormat(numberFormat25, numberFormat26);
        java.text.NumberFormat numberFormat28 = fractionFormat27.getDenominatorFormat();
        java.text.NumberFormat numberFormat29 = fractionFormat27.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat30 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator32 = fractionFormat30.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat33 = fractionFormat30.getDenominatorFormat();
        fractionFormat27.setNumeratorFormat(numberFormat33);
        java.lang.Object obj35 = numberFormat33.clone();
        java.lang.String str37 = numberFormat33.format((java.lang.Object) (short) 10);
        java.text.NumberFormat numberFormat38 = null;
        java.text.NumberFormat numberFormat39 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat40 = new org.apache.commons.math.fraction.FractionFormat(numberFormat38, numberFormat39);
        java.text.NumberFormat numberFormat41 = fractionFormat40.getDenominatorFormat();
        java.text.NumberFormat numberFormat42 = fractionFormat40.getNumeratorFormat();
        java.text.NumberFormat numberFormat43 = fractionFormat40.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat44 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator46 = fractionFormat44.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat47 = fractionFormat44.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat48 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator50 = fractionFormat48.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat51 = fractionFormat48.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat52 = new org.apache.commons.math.fraction.FractionFormat(numberFormat47, numberFormat51);
        fractionFormat40.setNumeratorFormat(numberFormat47);
        org.apache.commons.math.fraction.FractionFormat fractionFormat54 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj56 = fractionFormat54.parseObject("0 / 1");
        java.text.NumberFormat numberFormat57 = fractionFormat54.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat58 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator60 = fractionFormat58.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat61 = fractionFormat58.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat62 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator64 = fractionFormat62.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat65 = fractionFormat62.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat66 = new org.apache.commons.math.fraction.FractionFormat(numberFormat61, numberFormat65);
        org.apache.commons.math.fraction.FractionFormat fractionFormat67 = new org.apache.commons.math.fraction.FractionFormat(numberFormat57, numberFormat61);
        org.apache.commons.math.fraction.FractionFormat fractionFormat68 = new org.apache.commons.math.fraction.FractionFormat(numberFormat47, numberFormat57);
        org.apache.commons.math.fraction.FractionFormat fractionFormat69 = new org.apache.commons.math.fraction.FractionFormat(numberFormat33, numberFormat57);
        // The following exception was thrown during execution in test generation
        try {
            java.text.AttributedCharacterIterator attributedCharacterIterator70 = fractionFormat23.formatToCharacterIterator((java.lang.Object) numberFormat33);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot format given object as a fraction");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(fractionFormat6);
        org.junit.Assert.assertNotNull(obj8);
        org.junit.Assert.assertNotNull(numberFormat9);
        org.junit.Assert.assertNotNull(fractionFormat11);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertNotNull(numberFormat16);
        org.junit.Assert.assertNotNull(numberFormat17);
        org.junit.Assert.assertNotNull(fractionFormat18);
        org.junit.Assert.assertNotNull(attributedCharacterIterator20);
        org.junit.Assert.assertNotNull(numberFormat21);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertNull(numberFormat28);
        org.junit.Assert.assertNull(numberFormat29);
        org.junit.Assert.assertNotNull(fractionFormat30);
        org.junit.Assert.assertNotNull(attributedCharacterIterator32);
        org.junit.Assert.assertNotNull(numberFormat33);
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "10" + "'", str37, "10");
        org.junit.Assert.assertNull(numberFormat41);
        org.junit.Assert.assertNull(numberFormat42);
        org.junit.Assert.assertNull(numberFormat43);
        org.junit.Assert.assertNotNull(fractionFormat44);
        org.junit.Assert.assertNotNull(attributedCharacterIterator46);
        org.junit.Assert.assertNotNull(numberFormat47);
        org.junit.Assert.assertNotNull(fractionFormat48);
        org.junit.Assert.assertNotNull(attributedCharacterIterator50);
        org.junit.Assert.assertNotNull(numberFormat51);
        org.junit.Assert.assertNotNull(fractionFormat54);
        org.junit.Assert.assertNotNull(obj56);
        org.junit.Assert.assertNotNull(numberFormat57);
        org.junit.Assert.assertNotNull(fractionFormat58);
        org.junit.Assert.assertNotNull(attributedCharacterIterator60);
        org.junit.Assert.assertNotNull(numberFormat61);
        org.junit.Assert.assertNotNull(fractionFormat62);
        org.junit.Assert.assertNotNull(attributedCharacterIterator64);
        org.junit.Assert.assertNotNull(numberFormat65);
    }

    @Test
    public void test0219() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0219");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.text.NumberFormat numberFormat3 = fractionFormat2.getDenominatorFormat();
        java.text.NumberFormat numberFormat4 = fractionFormat2.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator7 = fractionFormat5.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat8 = fractionFormat5.getDenominatorFormat();
        fractionFormat2.setNumeratorFormat(numberFormat8);
        java.lang.Object obj10 = numberFormat8.clone();
        java.lang.String str12 = numberFormat8.format((java.lang.Object) (short) 10);
        java.text.NumberFormat numberFormat13 = null;
        java.text.NumberFormat numberFormat14 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat15 = new org.apache.commons.math.fraction.FractionFormat(numberFormat13, numberFormat14);
        java.text.NumberFormat numberFormat16 = fractionFormat15.getDenominatorFormat();
        java.text.NumberFormat numberFormat17 = fractionFormat15.getNumeratorFormat();
        java.text.NumberFormat numberFormat18 = fractionFormat15.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat19 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator21 = fractionFormat19.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat22 = fractionFormat19.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat23 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator25 = fractionFormat23.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat26 = fractionFormat23.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat27 = new org.apache.commons.math.fraction.FractionFormat(numberFormat22, numberFormat26);
        fractionFormat15.setNumeratorFormat(numberFormat22);
        org.apache.commons.math.fraction.FractionFormat fractionFormat29 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj31 = fractionFormat29.parseObject("0 / 1");
        java.text.NumberFormat numberFormat32 = fractionFormat29.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat33 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator35 = fractionFormat33.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat36 = fractionFormat33.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat37 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator39 = fractionFormat37.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat40 = fractionFormat37.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat41 = new org.apache.commons.math.fraction.FractionFormat(numberFormat36, numberFormat40);
        org.apache.commons.math.fraction.FractionFormat fractionFormat42 = new org.apache.commons.math.fraction.FractionFormat(numberFormat32, numberFormat36);
        org.apache.commons.math.fraction.FractionFormat fractionFormat43 = new org.apache.commons.math.fraction.FractionFormat(numberFormat22, numberFormat32);
        org.apache.commons.math.fraction.FractionFormat fractionFormat44 = new org.apache.commons.math.fraction.FractionFormat(numberFormat8, numberFormat32);
        java.text.NumberFormat numberFormat45 = fractionFormat44.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat46 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj48 = fractionFormat46.parseObject("0 / 1");
        java.lang.Object obj50 = fractionFormat46.parseObject("0 / 1");
        java.text.NumberFormat numberFormat51 = fractionFormat46.getNumeratorFormat();
        java.lang.Object obj52 = numberFormat51.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat53 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj55 = fractionFormat53.parseObject("0 / 1");
        java.lang.Object obj57 = fractionFormat53.parseObject("0 / 1");
        java.text.NumberFormat numberFormat58 = fractionFormat53.getNumeratorFormat();
        java.text.NumberFormat numberFormat59 = fractionFormat53.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat60 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator62 = fractionFormat60.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat63 = fractionFormat60.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat64 = new org.apache.commons.math.fraction.FractionFormat(numberFormat59, numberFormat63);
        org.apache.commons.math.fraction.FractionFormat fractionFormat65 = new org.apache.commons.math.fraction.FractionFormat(numberFormat51, numberFormat63);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str66 = fractionFormat44.format((java.lang.Object) fractionFormat65);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot format given object as a fraction");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(numberFormat3);
        org.junit.Assert.assertNull(numberFormat4);
        org.junit.Assert.assertNotNull(fractionFormat5);
        org.junit.Assert.assertNotNull(attributedCharacterIterator7);
        org.junit.Assert.assertNotNull(numberFormat8);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "10" + "'", str12, "10");
        org.junit.Assert.assertNull(numberFormat16);
        org.junit.Assert.assertNull(numberFormat17);
        org.junit.Assert.assertNull(numberFormat18);
        org.junit.Assert.assertNotNull(fractionFormat19);
        org.junit.Assert.assertNotNull(attributedCharacterIterator21);
        org.junit.Assert.assertNotNull(numberFormat22);
        org.junit.Assert.assertNotNull(fractionFormat23);
        org.junit.Assert.assertNotNull(attributedCharacterIterator25);
        org.junit.Assert.assertNotNull(numberFormat26);
        org.junit.Assert.assertNotNull(fractionFormat29);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertNotNull(numberFormat32);
        org.junit.Assert.assertNotNull(fractionFormat33);
        org.junit.Assert.assertNotNull(attributedCharacterIterator35);
        org.junit.Assert.assertNotNull(numberFormat36);
        org.junit.Assert.assertNotNull(fractionFormat37);
        org.junit.Assert.assertNotNull(attributedCharacterIterator39);
        org.junit.Assert.assertNotNull(numberFormat40);
        org.junit.Assert.assertNotNull(numberFormat45);
        org.junit.Assert.assertNotNull(fractionFormat46);
        org.junit.Assert.assertNotNull(obj48);
        org.junit.Assert.assertNotNull(obj50);
        org.junit.Assert.assertNotNull(numberFormat51);
        org.junit.Assert.assertNotNull(obj52);
        org.junit.Assert.assertNotNull(fractionFormat53);
        org.junit.Assert.assertNotNull(obj55);
        org.junit.Assert.assertNotNull(obj57);
        org.junit.Assert.assertNotNull(numberFormat58);
        org.junit.Assert.assertNotNull(numberFormat59);
        org.junit.Assert.assertNotNull(fractionFormat60);
        org.junit.Assert.assertNotNull(attributedCharacterIterator62);
        org.junit.Assert.assertNotNull(numberFormat63);
    }

    @Test
    public void test0220() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0220");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.text.NumberFormat numberFormat3 = fractionFormat2.getDenominatorFormat();
        java.text.NumberFormat numberFormat4 = fractionFormat2.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator7 = fractionFormat5.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat8 = fractionFormat5.getDenominatorFormat();
        fractionFormat2.setNumeratorFormat(numberFormat8);
        org.apache.commons.math.fraction.FractionFormat fractionFormat10 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj12 = fractionFormat10.parseObject("0 / 1");
        java.lang.Object obj14 = fractionFormat10.parseObject("0 / 1");
        java.text.NumberFormat numberFormat15 = fractionFormat10.getNumeratorFormat();
        fractionFormat2.setDenominatorFormat(numberFormat15);
        java.text.NumberFormat numberFormat17 = null;
        java.text.NumberFormat numberFormat18 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat19 = new org.apache.commons.math.fraction.FractionFormat(numberFormat17, numberFormat18);
        java.text.NumberFormat numberFormat20 = fractionFormat19.getDenominatorFormat();
        java.text.NumberFormat numberFormat21 = fractionFormat19.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat22 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator24 = fractionFormat22.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat25 = fractionFormat22.getDenominatorFormat();
        fractionFormat19.setNumeratorFormat(numberFormat25);
        org.apache.commons.math.fraction.FractionFormat fractionFormat27 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj29 = fractionFormat27.parseObject("0 / 1");
        java.lang.Object obj31 = fractionFormat27.parseObject("0 / 1");
        java.text.NumberFormat numberFormat32 = fractionFormat27.getNumeratorFormat();
        fractionFormat19.setDenominatorFormat(numberFormat32);
        org.apache.commons.math.fraction.FractionFormat fractionFormat34 = new org.apache.commons.math.fraction.FractionFormat(numberFormat15, numberFormat32);
        java.text.NumberFormat numberFormat35 = fractionFormat34.getNumeratorFormat();
        java.text.NumberFormat numberFormat36 = null;
        java.text.NumberFormat numberFormat37 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat38 = new org.apache.commons.math.fraction.FractionFormat(numberFormat36, numberFormat37);
        java.text.NumberFormat numberFormat39 = fractionFormat38.getDenominatorFormat();
        java.text.NumberFormat numberFormat40 = fractionFormat38.getNumeratorFormat();
        java.text.NumberFormat numberFormat41 = fractionFormat38.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat42 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj44 = fractionFormat42.parseObject("0 / 1");
        java.lang.Object obj46 = fractionFormat42.parseObject("0 / 1");
        java.text.NumberFormat numberFormat47 = fractionFormat42.getNumeratorFormat();
        java.lang.Object obj48 = numberFormat47.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat49 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj51 = fractionFormat49.parseObject("0 / 1");
        java.lang.Object obj53 = fractionFormat49.parseObject("0 / 1");
        java.text.NumberFormat numberFormat54 = fractionFormat49.getNumeratorFormat();
        java.text.NumberFormat numberFormat55 = fractionFormat49.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat56 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator58 = fractionFormat56.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat59 = fractionFormat56.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat60 = new org.apache.commons.math.fraction.FractionFormat(numberFormat55, numberFormat59);
        org.apache.commons.math.fraction.FractionFormat fractionFormat61 = new org.apache.commons.math.fraction.FractionFormat(numberFormat47, numberFormat59);
        fractionFormat38.setNumeratorFormat(numberFormat47);
        org.apache.commons.math.fraction.FractionFormat fractionFormat63 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj65 = fractionFormat63.parseObject("0 / 1");
        java.lang.Object obj67 = fractionFormat63.parseObject("0 / 1");
        java.text.NumberFormat numberFormat68 = fractionFormat63.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat69 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj71 = fractionFormat69.parseObject("0 / 1");
        java.text.NumberFormat numberFormat72 = fractionFormat69.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat73 = new org.apache.commons.math.fraction.FractionFormat(numberFormat68, numberFormat72);
        org.apache.commons.math.fraction.FractionFormat fractionFormat74 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj76 = fractionFormat74.parseObject("0 / 1");
        java.lang.Object obj78 = fractionFormat74.parseObject("0 / 1");
        java.text.NumberFormat numberFormat79 = fractionFormat74.getNumeratorFormat();
        fractionFormat73.setDenominatorFormat(numberFormat79);
        java.lang.Object obj81 = numberFormat79.clone();
        fractionFormat38.setDenominatorFormat(numberFormat79);
        java.lang.StringBuffer stringBuffer83 = null;
        java.text.FieldPosition fieldPosition84 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer85 = fractionFormat34.format((java.lang.Object) numberFormat79, stringBuffer83, fieldPosition84);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot format given object as a fraction");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(numberFormat3);
        org.junit.Assert.assertNull(numberFormat4);
        org.junit.Assert.assertNotNull(fractionFormat5);
        org.junit.Assert.assertNotNull(attributedCharacterIterator7);
        org.junit.Assert.assertNotNull(numberFormat8);
        org.junit.Assert.assertNotNull(fractionFormat10);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertNotNull(numberFormat15);
        org.junit.Assert.assertNull(numberFormat20);
        org.junit.Assert.assertNull(numberFormat21);
        org.junit.Assert.assertNotNull(fractionFormat22);
        org.junit.Assert.assertNotNull(attributedCharacterIterator24);
        org.junit.Assert.assertNotNull(numberFormat25);
        org.junit.Assert.assertNotNull(fractionFormat27);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertNotNull(numberFormat32);
        org.junit.Assert.assertNotNull(numberFormat35);
        org.junit.Assert.assertNull(numberFormat39);
        org.junit.Assert.assertNull(numberFormat40);
        org.junit.Assert.assertNull(numberFormat41);
        org.junit.Assert.assertNotNull(fractionFormat42);
        org.junit.Assert.assertNotNull(obj44);
        org.junit.Assert.assertNotNull(obj46);
        org.junit.Assert.assertNotNull(numberFormat47);
        org.junit.Assert.assertNotNull(obj48);
        org.junit.Assert.assertNotNull(fractionFormat49);
        org.junit.Assert.assertNotNull(obj51);
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertNotNull(numberFormat54);
        org.junit.Assert.assertNotNull(numberFormat55);
        org.junit.Assert.assertNotNull(fractionFormat56);
        org.junit.Assert.assertNotNull(attributedCharacterIterator58);
        org.junit.Assert.assertNotNull(numberFormat59);
        org.junit.Assert.assertNotNull(fractionFormat63);
        org.junit.Assert.assertNotNull(obj65);
        org.junit.Assert.assertNotNull(obj67);
        org.junit.Assert.assertNotNull(numberFormat68);
        org.junit.Assert.assertNotNull(fractionFormat69);
        org.junit.Assert.assertNotNull(obj71);
        org.junit.Assert.assertNotNull(numberFormat72);
        org.junit.Assert.assertNotNull(fractionFormat74);
        org.junit.Assert.assertNotNull(obj76);
        org.junit.Assert.assertNotNull(obj78);
        org.junit.Assert.assertNotNull(numberFormat79);
        org.junit.Assert.assertNotNull(obj81);
    }

    @Test
    public void test0221() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0221");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.lang.Object obj3 = fractionFormat2.clone();
        java.lang.Object obj4 = fractionFormat2.clone();
        java.lang.Object obj5 = fractionFormat2.clone();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj7 = fractionFormat2.parseObject("");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(obj3);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(obj5);
    }

    @Test
    public void test0222() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0222");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("-1 / 1");
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat6 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj8 = fractionFormat6.parseObject("0 / 1");
        java.lang.Object obj10 = fractionFormat6.parseObject("0 / 1");
        java.text.NumberFormat numberFormat11 = fractionFormat6.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat12 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj14 = fractionFormat12.parseObject("0 / 1");
        java.text.NumberFormat numberFormat15 = fractionFormat12.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat16 = new org.apache.commons.math.fraction.FractionFormat(numberFormat11, numberFormat15);
        org.apache.commons.math.fraction.FractionFormat fractionFormat17 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj19 = fractionFormat17.parseObject("0 / 1");
        java.lang.Object obj21 = fractionFormat17.parseObject("0 / 1");
        java.text.NumberFormat numberFormat22 = fractionFormat17.getNumeratorFormat();
        fractionFormat16.setDenominatorFormat(numberFormat22);
        java.lang.Object obj24 = numberFormat22.clone();
        fractionFormat5.setNumeratorFormat(numberFormat22);
        java.lang.Object obj26 = numberFormat22.clone();
        java.lang.Object obj27 = numberFormat22.clone();
        fractionFormat0.setDenominatorFormat(numberFormat22);
        java.text.ParsePosition parsePosition30 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj31 = fractionFormat0.parseObject("hi!", parsePosition30);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(fractionFormat5);
        org.junit.Assert.assertNotNull(fractionFormat6);
        org.junit.Assert.assertNotNull(obj8);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertNotNull(numberFormat11);
        org.junit.Assert.assertNotNull(fractionFormat12);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertNotNull(numberFormat15);
        org.junit.Assert.assertNotNull(fractionFormat17);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertNotNull(numberFormat22);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertNotNull(obj27);
    }

    @Test
    public void test0223() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0223");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat5 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat6 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj8 = fractionFormat6.parseObject("0 / 1");
        java.text.NumberFormat numberFormat9 = fractionFormat6.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat10 = new org.apache.commons.math.fraction.FractionFormat(numberFormat5, numberFormat9);
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj13 = fractionFormat11.parseObject("0 / 1");
        java.lang.Object obj15 = fractionFormat11.parseObject("0 / 1");
        java.text.NumberFormat numberFormat16 = fractionFormat11.getNumeratorFormat();
        java.text.NumberFormat numberFormat17 = fractionFormat11.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat18 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator20 = fractionFormat18.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat21 = fractionFormat18.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat22 = new org.apache.commons.math.fraction.FractionFormat(numberFormat17, numberFormat21);
        org.apache.commons.math.fraction.FractionFormat fractionFormat23 = new org.apache.commons.math.fraction.FractionFormat(numberFormat5, numberFormat21);
        java.text.ParsePosition parsePosition25 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj26 = fractionFormat23.parseObject("100", parsePosition25);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(fractionFormat6);
        org.junit.Assert.assertNotNull(obj8);
        org.junit.Assert.assertNotNull(numberFormat9);
        org.junit.Assert.assertNotNull(fractionFormat11);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertNotNull(numberFormat16);
        org.junit.Assert.assertNotNull(numberFormat17);
        org.junit.Assert.assertNotNull(fractionFormat18);
        org.junit.Assert.assertNotNull(attributedCharacterIterator20);
        org.junit.Assert.assertNotNull(numberFormat21);
    }

    @Test
    public void test0224() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0224");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.text.NumberFormat numberFormat3 = fractionFormat2.getDenominatorFormat();
        java.text.NumberFormat numberFormat4 = fractionFormat2.getNumeratorFormat();
        java.text.NumberFormat numberFormat5 = fractionFormat2.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat6 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator8 = fractionFormat6.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat9 = fractionFormat6.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat10 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator12 = fractionFormat10.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat13 = fractionFormat10.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat14 = new org.apache.commons.math.fraction.FractionFormat(numberFormat9, numberFormat13);
        fractionFormat2.setNumeratorFormat(numberFormat9);
        org.apache.commons.math.fraction.FractionFormat fractionFormat16 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj18 = fractionFormat16.parseObject("0 / 1");
        java.text.NumberFormat numberFormat19 = fractionFormat16.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat20 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator22 = fractionFormat20.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat23 = fractionFormat20.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat24 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator26 = fractionFormat24.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat27 = fractionFormat24.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat28 = new org.apache.commons.math.fraction.FractionFormat(numberFormat23, numberFormat27);
        org.apache.commons.math.fraction.FractionFormat fractionFormat29 = new org.apache.commons.math.fraction.FractionFormat(numberFormat19, numberFormat23);
        org.apache.commons.math.fraction.FractionFormat fractionFormat30 = new org.apache.commons.math.fraction.FractionFormat(numberFormat9, numberFormat19);
        java.text.ParsePosition parsePosition32 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj33 = fractionFormat30.parseObject("", parsePosition32);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(numberFormat3);
        org.junit.Assert.assertNull(numberFormat4);
        org.junit.Assert.assertNull(numberFormat5);
        org.junit.Assert.assertNotNull(fractionFormat6);
        org.junit.Assert.assertNotNull(attributedCharacterIterator8);
        org.junit.Assert.assertNotNull(numberFormat9);
        org.junit.Assert.assertNotNull(fractionFormat10);
        org.junit.Assert.assertNotNull(attributedCharacterIterator12);
        org.junit.Assert.assertNotNull(numberFormat13);
        org.junit.Assert.assertNotNull(fractionFormat16);
        org.junit.Assert.assertNotNull(obj18);
        org.junit.Assert.assertNotNull(numberFormat19);
        org.junit.Assert.assertNotNull(fractionFormat20);
        org.junit.Assert.assertNotNull(attributedCharacterIterator22);
        org.junit.Assert.assertNotNull(numberFormat23);
        org.junit.Assert.assertNotNull(fractionFormat24);
        org.junit.Assert.assertNotNull(attributedCharacterIterator26);
        org.junit.Assert.assertNotNull(numberFormat27);
    }

    @Test
    public void test0225() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0225");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat3 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat4 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator6 = fractionFormat4.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat7 = fractionFormat4.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat8 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator10 = fractionFormat8.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat11 = fractionFormat8.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat12 = new org.apache.commons.math.fraction.FractionFormat(numberFormat7, numberFormat11);
        org.apache.commons.math.fraction.FractionFormat fractionFormat13 = new org.apache.commons.math.fraction.FractionFormat(numberFormat3, numberFormat7);
        java.text.NumberFormat numberFormat14 = null;
        java.text.NumberFormat numberFormat15 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat16 = new org.apache.commons.math.fraction.FractionFormat(numberFormat14, numberFormat15);
        java.text.NumberFormat numberFormat17 = fractionFormat16.getDenominatorFormat();
        java.text.NumberFormat numberFormat18 = fractionFormat16.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat19 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator21 = fractionFormat19.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat22 = fractionFormat19.getDenominatorFormat();
        fractionFormat16.setNumeratorFormat(numberFormat22);
        java.lang.Object obj24 = numberFormat22.clone();
        java.lang.String str26 = numberFormat22.format((java.lang.Object) (short) 10);
        java.text.NumberFormat numberFormat27 = null;
        java.text.NumberFormat numberFormat28 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat29 = new org.apache.commons.math.fraction.FractionFormat(numberFormat27, numberFormat28);
        java.text.NumberFormat numberFormat30 = fractionFormat29.getDenominatorFormat();
        java.text.NumberFormat numberFormat31 = fractionFormat29.getNumeratorFormat();
        java.text.NumberFormat numberFormat32 = fractionFormat29.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat33 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator35 = fractionFormat33.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat36 = fractionFormat33.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat37 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator39 = fractionFormat37.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat40 = fractionFormat37.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat41 = new org.apache.commons.math.fraction.FractionFormat(numberFormat36, numberFormat40);
        fractionFormat29.setNumeratorFormat(numberFormat36);
        org.apache.commons.math.fraction.FractionFormat fractionFormat43 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj45 = fractionFormat43.parseObject("0 / 1");
        java.text.NumberFormat numberFormat46 = fractionFormat43.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat47 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator49 = fractionFormat47.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat50 = fractionFormat47.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat51 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator53 = fractionFormat51.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat54 = fractionFormat51.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat55 = new org.apache.commons.math.fraction.FractionFormat(numberFormat50, numberFormat54);
        org.apache.commons.math.fraction.FractionFormat fractionFormat56 = new org.apache.commons.math.fraction.FractionFormat(numberFormat46, numberFormat50);
        org.apache.commons.math.fraction.FractionFormat fractionFormat57 = new org.apache.commons.math.fraction.FractionFormat(numberFormat36, numberFormat46);
        org.apache.commons.math.fraction.FractionFormat fractionFormat58 = new org.apache.commons.math.fraction.FractionFormat(numberFormat22, numberFormat46);
        java.lang.Object obj59 = fractionFormat58.clone();
        java.lang.Object obj60 = fractionFormat58.clone();
        java.lang.StringBuffer stringBuffer61 = null;
        java.text.FieldPosition fieldPosition62 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer63 = fractionFormat13.format((java.lang.Object) fractionFormat58, stringBuffer61, fieldPosition62);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot format given object as a fraction");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(numberFormat3);
        org.junit.Assert.assertNotNull(fractionFormat4);
        org.junit.Assert.assertNotNull(attributedCharacterIterator6);
        org.junit.Assert.assertNotNull(numberFormat7);
        org.junit.Assert.assertNotNull(fractionFormat8);
        org.junit.Assert.assertNotNull(attributedCharacterIterator10);
        org.junit.Assert.assertNotNull(numberFormat11);
        org.junit.Assert.assertNull(numberFormat17);
        org.junit.Assert.assertNull(numberFormat18);
        org.junit.Assert.assertNotNull(fractionFormat19);
        org.junit.Assert.assertNotNull(attributedCharacterIterator21);
        org.junit.Assert.assertNotNull(numberFormat22);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "10" + "'", str26, "10");
        org.junit.Assert.assertNull(numberFormat30);
        org.junit.Assert.assertNull(numberFormat31);
        org.junit.Assert.assertNull(numberFormat32);
        org.junit.Assert.assertNotNull(fractionFormat33);
        org.junit.Assert.assertNotNull(attributedCharacterIterator35);
        org.junit.Assert.assertNotNull(numberFormat36);
        org.junit.Assert.assertNotNull(fractionFormat37);
        org.junit.Assert.assertNotNull(attributedCharacterIterator39);
        org.junit.Assert.assertNotNull(numberFormat40);
        org.junit.Assert.assertNotNull(fractionFormat43);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertNotNull(numberFormat46);
        org.junit.Assert.assertNotNull(fractionFormat47);
        org.junit.Assert.assertNotNull(attributedCharacterIterator49);
        org.junit.Assert.assertNotNull(numberFormat50);
        org.junit.Assert.assertNotNull(fractionFormat51);
        org.junit.Assert.assertNotNull(attributedCharacterIterator53);
        org.junit.Assert.assertNotNull(numberFormat54);
        org.junit.Assert.assertNotNull(obj59);
        org.junit.Assert.assertNotNull(obj60);
    }

    @Test
    public void test0226() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0226");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.text.NumberFormat numberFormat3 = fractionFormat2.getDenominatorFormat();
        java.text.NumberFormat numberFormat4 = fractionFormat2.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator7 = fractionFormat5.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat8 = fractionFormat5.getDenominatorFormat();
        fractionFormat2.setNumeratorFormat(numberFormat8);
        org.apache.commons.math.fraction.FractionFormat fractionFormat10 = new org.apache.commons.math.fraction.FractionFormat(numberFormat8);
        java.text.ParsePosition parsePosition12 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj13 = fractionFormat10.parseObject("0 / 1", parsePosition12);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(numberFormat3);
        org.junit.Assert.assertNull(numberFormat4);
        org.junit.Assert.assertNotNull(fractionFormat5);
        org.junit.Assert.assertNotNull(attributedCharacterIterator7);
        org.junit.Assert.assertNotNull(numberFormat8);
    }

    @Test
    public void test0227() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0227");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat5 = fractionFormat0.getNumeratorFormat();
        java.text.NumberFormat numberFormat6 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat7 = new org.apache.commons.math.fraction.FractionFormat(numberFormat6);
        java.text.NumberFormat numberFormat8 = null;
        java.text.NumberFormat numberFormat9 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat10 = new org.apache.commons.math.fraction.FractionFormat(numberFormat8, numberFormat9);
        java.text.NumberFormat numberFormat11 = fractionFormat10.getDenominatorFormat();
        java.text.NumberFormat numberFormat12 = fractionFormat10.getNumeratorFormat();
        java.lang.StringBuffer stringBuffer13 = null;
        java.text.FieldPosition fieldPosition14 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer15 = fractionFormat7.format((java.lang.Object) numberFormat12, stringBuffer13, fieldPosition14);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot format given object as a fraction");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertNull(numberFormat11);
        org.junit.Assert.assertNull(numberFormat12);
    }

    @Test
    public void test0228() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0228");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat1 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj3 = fractionFormat1.parseObject("0 / 1");
        java.lang.Object obj5 = fractionFormat1.parseObject("-1 / 1");
        org.apache.commons.math.fraction.FractionFormat fractionFormat6 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat7 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj9 = fractionFormat7.parseObject("0 / 1");
        java.lang.Object obj11 = fractionFormat7.parseObject("0 / 1");
        java.text.NumberFormat numberFormat12 = fractionFormat7.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat13 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj15 = fractionFormat13.parseObject("0 / 1");
        java.text.NumberFormat numberFormat16 = fractionFormat13.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat17 = new org.apache.commons.math.fraction.FractionFormat(numberFormat12, numberFormat16);
        org.apache.commons.math.fraction.FractionFormat fractionFormat18 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj20 = fractionFormat18.parseObject("0 / 1");
        java.lang.Object obj22 = fractionFormat18.parseObject("0 / 1");
        java.text.NumberFormat numberFormat23 = fractionFormat18.getNumeratorFormat();
        fractionFormat17.setDenominatorFormat(numberFormat23);
        java.lang.Object obj25 = numberFormat23.clone();
        fractionFormat6.setNumeratorFormat(numberFormat23);
        java.lang.Object obj27 = numberFormat23.clone();
        java.lang.Object obj28 = numberFormat23.clone();
        fractionFormat1.setDenominatorFormat(numberFormat23);
        org.apache.commons.math.fraction.FractionFormat fractionFormat30 = new org.apache.commons.math.fraction.FractionFormat(numberFormat23);
        fractionFormat0.setNumeratorFormat(numberFormat23);
        java.text.ParsePosition parsePosition33 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.fraction.Fraction fraction34 = fractionFormat0.parse("hi!", parsePosition33);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(fractionFormat1);
        org.junit.Assert.assertNotNull(obj3);
        org.junit.Assert.assertNotNull(obj5);
        org.junit.Assert.assertNotNull(fractionFormat6);
        org.junit.Assert.assertNotNull(fractionFormat7);
        org.junit.Assert.assertNotNull(obj9);
        org.junit.Assert.assertNotNull(obj11);
        org.junit.Assert.assertNotNull(numberFormat12);
        org.junit.Assert.assertNotNull(fractionFormat13);
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertNotNull(numberFormat16);
        org.junit.Assert.assertNotNull(fractionFormat18);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertNotNull(numberFormat23);
        org.junit.Assert.assertNotNull(obj25);
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertNotNull(obj28);
    }

    @Test
    public void test0229() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0229");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat5 = fractionFormat0.getNumeratorFormat();
        java.text.NumberFormat numberFormat6 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat7 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator9 = fractionFormat7.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat10 = fractionFormat7.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = new org.apache.commons.math.fraction.FractionFormat(numberFormat6, numberFormat10);
        org.apache.commons.math.fraction.FractionFormat fractionFormat12 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator14 = fractionFormat12.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat15 = fractionFormat12.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat16 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator18 = fractionFormat16.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat19 = fractionFormat16.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat20 = new org.apache.commons.math.fraction.FractionFormat(numberFormat15, numberFormat19);
        fractionFormat11.setNumeratorFormat(numberFormat15);
        org.apache.commons.math.fraction.FractionFormat fractionFormat22 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.Fraction fraction24 = fractionFormat22.parse("0 / 1");
        java.lang.StringBuffer stringBuffer25 = null;
        java.text.FieldPosition fieldPosition26 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer27 = fractionFormat11.format(fraction24, stringBuffer25, fieldPosition26);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertNotNull(fractionFormat7);
        org.junit.Assert.assertNotNull(attributedCharacterIterator9);
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertNotNull(fractionFormat12);
        org.junit.Assert.assertNotNull(attributedCharacterIterator14);
        org.junit.Assert.assertNotNull(numberFormat15);
        org.junit.Assert.assertNotNull(fractionFormat16);
        org.junit.Assert.assertNotNull(attributedCharacterIterator18);
        org.junit.Assert.assertNotNull(numberFormat19);
        org.junit.Assert.assertNotNull(fractionFormat22);
        org.junit.Assert.assertNotNull(fraction24);
    }

    @Test
    public void test0230() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0230");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat5 = fractionFormat0.getNumeratorFormat();
        java.text.NumberFormat numberFormat6 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat7 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator9 = fractionFormat7.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat10 = fractionFormat7.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = new org.apache.commons.math.fraction.FractionFormat(numberFormat6, numberFormat10);
        org.apache.commons.math.fraction.FractionFormat fractionFormat12 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator14 = fractionFormat12.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat15 = fractionFormat12.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat16 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator18 = fractionFormat16.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat19 = fractionFormat16.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat20 = new org.apache.commons.math.fraction.FractionFormat(numberFormat15, numberFormat19);
        fractionFormat11.setNumeratorFormat(numberFormat15);
        org.apache.commons.math.fraction.Fraction fraction23 = fractionFormat11.parse("0 / 1");
        java.text.NumberFormat numberFormat24 = null;
        java.text.NumberFormat numberFormat25 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat26 = new org.apache.commons.math.fraction.FractionFormat(numberFormat24, numberFormat25);
        java.text.NumberFormat numberFormat27 = fractionFormat26.getDenominatorFormat();
        java.text.NumberFormat numberFormat28 = fractionFormat26.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat29 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator31 = fractionFormat29.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat32 = fractionFormat29.getDenominatorFormat();
        fractionFormat26.setNumeratorFormat(numberFormat32);
        org.apache.commons.math.fraction.FractionFormat fractionFormat34 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj36 = fractionFormat34.parseObject("0 / 1");
        java.lang.Object obj38 = fractionFormat34.parseObject("0 / 1");
        java.text.NumberFormat numberFormat39 = fractionFormat34.getNumeratorFormat();
        fractionFormat26.setDenominatorFormat(numberFormat39);
        org.apache.commons.math.fraction.FractionFormat fractionFormat41 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat42 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj44 = fractionFormat42.parseObject("0 / 1");
        java.lang.Object obj46 = fractionFormat42.parseObject("0 / 1");
        java.text.NumberFormat numberFormat47 = fractionFormat42.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat48 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj50 = fractionFormat48.parseObject("0 / 1");
        java.text.NumberFormat numberFormat51 = fractionFormat48.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat52 = new org.apache.commons.math.fraction.FractionFormat(numberFormat47, numberFormat51);
        org.apache.commons.math.fraction.FractionFormat fractionFormat53 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj55 = fractionFormat53.parseObject("0 / 1");
        java.lang.Object obj57 = fractionFormat53.parseObject("0 / 1");
        java.text.NumberFormat numberFormat58 = fractionFormat53.getNumeratorFormat();
        fractionFormat52.setDenominatorFormat(numberFormat58);
        java.lang.Object obj60 = numberFormat58.clone();
        fractionFormat41.setNumeratorFormat(numberFormat58);
        fractionFormat26.setDenominatorFormat(numberFormat58);
        org.apache.commons.math.fraction.Fraction fraction64 = fractionFormat26.parse("-1 / 1");
        java.lang.StringBuffer stringBuffer65 = null;
        java.text.FieldPosition fieldPosition66 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer67 = fractionFormat11.format(fraction64, stringBuffer65, fieldPosition66);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertNotNull(fractionFormat7);
        org.junit.Assert.assertNotNull(attributedCharacterIterator9);
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertNotNull(fractionFormat12);
        org.junit.Assert.assertNotNull(attributedCharacterIterator14);
        org.junit.Assert.assertNotNull(numberFormat15);
        org.junit.Assert.assertNotNull(fractionFormat16);
        org.junit.Assert.assertNotNull(attributedCharacterIterator18);
        org.junit.Assert.assertNotNull(numberFormat19);
        org.junit.Assert.assertNotNull(fraction23);
        org.junit.Assert.assertNull(numberFormat27);
        org.junit.Assert.assertNull(numberFormat28);
        org.junit.Assert.assertNotNull(fractionFormat29);
        org.junit.Assert.assertNotNull(attributedCharacterIterator31);
        org.junit.Assert.assertNotNull(numberFormat32);
        org.junit.Assert.assertNotNull(fractionFormat34);
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertNotNull(numberFormat39);
        org.junit.Assert.assertNotNull(fractionFormat41);
        org.junit.Assert.assertNotNull(fractionFormat42);
        org.junit.Assert.assertNotNull(obj44);
        org.junit.Assert.assertNotNull(obj46);
        org.junit.Assert.assertNotNull(numberFormat47);
        org.junit.Assert.assertNotNull(fractionFormat48);
        org.junit.Assert.assertNotNull(obj50);
        org.junit.Assert.assertNotNull(numberFormat51);
        org.junit.Assert.assertNotNull(fractionFormat53);
        org.junit.Assert.assertNotNull(obj55);
        org.junit.Assert.assertNotNull(obj57);
        org.junit.Assert.assertNotNull(numberFormat58);
        org.junit.Assert.assertNotNull(obj60);
        org.junit.Assert.assertNotNull(fraction64);
    }

    @Test
    public void test0231() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0231");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.text.NumberFormat numberFormat3 = fractionFormat2.getDenominatorFormat();
        java.text.NumberFormat numberFormat4 = fractionFormat2.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator7 = fractionFormat5.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat8 = fractionFormat5.getDenominatorFormat();
        fractionFormat2.setNumeratorFormat(numberFormat8);
        java.lang.Object obj10 = numberFormat8.clone();
        java.lang.String str12 = numberFormat8.format((java.lang.Object) (short) 10);
        java.text.NumberFormat numberFormat13 = null;
        java.text.NumberFormat numberFormat14 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat15 = new org.apache.commons.math.fraction.FractionFormat(numberFormat13, numberFormat14);
        java.text.NumberFormat numberFormat16 = fractionFormat15.getDenominatorFormat();
        java.text.NumberFormat numberFormat17 = fractionFormat15.getNumeratorFormat();
        java.text.NumberFormat numberFormat18 = fractionFormat15.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat19 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator21 = fractionFormat19.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat22 = fractionFormat19.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat23 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator25 = fractionFormat23.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat26 = fractionFormat23.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat27 = new org.apache.commons.math.fraction.FractionFormat(numberFormat22, numberFormat26);
        fractionFormat15.setNumeratorFormat(numberFormat22);
        org.apache.commons.math.fraction.FractionFormat fractionFormat29 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj31 = fractionFormat29.parseObject("0 / 1");
        java.text.NumberFormat numberFormat32 = fractionFormat29.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat33 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator35 = fractionFormat33.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat36 = fractionFormat33.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat37 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator39 = fractionFormat37.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat40 = fractionFormat37.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat41 = new org.apache.commons.math.fraction.FractionFormat(numberFormat36, numberFormat40);
        org.apache.commons.math.fraction.FractionFormat fractionFormat42 = new org.apache.commons.math.fraction.FractionFormat(numberFormat32, numberFormat36);
        org.apache.commons.math.fraction.FractionFormat fractionFormat43 = new org.apache.commons.math.fraction.FractionFormat(numberFormat22, numberFormat32);
        org.apache.commons.math.fraction.FractionFormat fractionFormat44 = new org.apache.commons.math.fraction.FractionFormat(numberFormat8, numberFormat32);
        java.lang.Object obj45 = fractionFormat44.clone();
        java.lang.Object obj46 = fractionFormat44.clone();
        java.text.ParsePosition parsePosition48 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj49 = fractionFormat44.parseObject("10", parsePosition48);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(numberFormat3);
        org.junit.Assert.assertNull(numberFormat4);
        org.junit.Assert.assertNotNull(fractionFormat5);
        org.junit.Assert.assertNotNull(attributedCharacterIterator7);
        org.junit.Assert.assertNotNull(numberFormat8);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "10" + "'", str12, "10");
        org.junit.Assert.assertNull(numberFormat16);
        org.junit.Assert.assertNull(numberFormat17);
        org.junit.Assert.assertNull(numberFormat18);
        org.junit.Assert.assertNotNull(fractionFormat19);
        org.junit.Assert.assertNotNull(attributedCharacterIterator21);
        org.junit.Assert.assertNotNull(numberFormat22);
        org.junit.Assert.assertNotNull(fractionFormat23);
        org.junit.Assert.assertNotNull(attributedCharacterIterator25);
        org.junit.Assert.assertNotNull(numberFormat26);
        org.junit.Assert.assertNotNull(fractionFormat29);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertNotNull(numberFormat32);
        org.junit.Assert.assertNotNull(fractionFormat33);
        org.junit.Assert.assertNotNull(attributedCharacterIterator35);
        org.junit.Assert.assertNotNull(numberFormat36);
        org.junit.Assert.assertNotNull(fractionFormat37);
        org.junit.Assert.assertNotNull(attributedCharacterIterator39);
        org.junit.Assert.assertNotNull(numberFormat40);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertNotNull(obj46);
    }

    @Test
    public void test0232() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0232");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.text.NumberFormat numberFormat3 = fractionFormat2.getDenominatorFormat();
        java.text.NumberFormat numberFormat4 = fractionFormat2.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator7 = fractionFormat5.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat8 = fractionFormat5.getDenominatorFormat();
        fractionFormat2.setNumeratorFormat(numberFormat8);
        org.apache.commons.math.fraction.FractionFormat fractionFormat10 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj12 = fractionFormat10.parseObject("0 / 1");
        java.lang.Object obj14 = fractionFormat10.parseObject("0 / 1");
        java.text.NumberFormat numberFormat15 = fractionFormat10.getNumeratorFormat();
        fractionFormat2.setDenominatorFormat(numberFormat15);
        org.apache.commons.math.fraction.FractionFormat fractionFormat17 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat18 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj20 = fractionFormat18.parseObject("0 / 1");
        java.lang.Object obj22 = fractionFormat18.parseObject("0 / 1");
        java.text.NumberFormat numberFormat23 = fractionFormat18.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat24 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj26 = fractionFormat24.parseObject("0 / 1");
        java.text.NumberFormat numberFormat27 = fractionFormat24.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat28 = new org.apache.commons.math.fraction.FractionFormat(numberFormat23, numberFormat27);
        org.apache.commons.math.fraction.FractionFormat fractionFormat29 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj31 = fractionFormat29.parseObject("0 / 1");
        java.lang.Object obj33 = fractionFormat29.parseObject("0 / 1");
        java.text.NumberFormat numberFormat34 = fractionFormat29.getNumeratorFormat();
        fractionFormat28.setDenominatorFormat(numberFormat34);
        java.lang.Object obj36 = numberFormat34.clone();
        fractionFormat17.setNumeratorFormat(numberFormat34);
        fractionFormat2.setDenominatorFormat(numberFormat34);
        org.apache.commons.math.fraction.Fraction fraction40 = fractionFormat2.parse("-1 / 1");
        java.lang.Class<?> wildcardClass41 = fraction40.getClass();
        org.junit.Assert.assertNull(numberFormat3);
        org.junit.Assert.assertNull(numberFormat4);
        org.junit.Assert.assertNotNull(fractionFormat5);
        org.junit.Assert.assertNotNull(attributedCharacterIterator7);
        org.junit.Assert.assertNotNull(numberFormat8);
        org.junit.Assert.assertNotNull(fractionFormat10);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertNotNull(numberFormat15);
        org.junit.Assert.assertNotNull(fractionFormat17);
        org.junit.Assert.assertNotNull(fractionFormat18);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertNotNull(numberFormat23);
        org.junit.Assert.assertNotNull(fractionFormat24);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertNotNull(numberFormat27);
        org.junit.Assert.assertNotNull(fractionFormat29);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertNotNull(obj33);
        org.junit.Assert.assertNotNull(numberFormat34);
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertNotNull(fraction40);
        org.junit.Assert.assertNotNull(wildcardClass41);
    }

    @Test
    public void test0233() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0233");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.text.NumberFormat numberFormat3 = fractionFormat2.getDenominatorFormat();
        java.text.NumberFormat numberFormat4 = fractionFormat2.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator7 = fractionFormat5.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat8 = fractionFormat5.getDenominatorFormat();
        fractionFormat2.setNumeratorFormat(numberFormat8);
        java.lang.Object obj10 = numberFormat8.clone();
        java.lang.String str12 = numberFormat8.format((java.lang.Object) (short) 10);
        java.text.NumberFormat numberFormat13 = null;
        java.text.NumberFormat numberFormat14 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat15 = new org.apache.commons.math.fraction.FractionFormat(numberFormat13, numberFormat14);
        java.text.NumberFormat numberFormat16 = fractionFormat15.getDenominatorFormat();
        java.text.NumberFormat numberFormat17 = fractionFormat15.getNumeratorFormat();
        java.text.NumberFormat numberFormat18 = fractionFormat15.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat19 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator21 = fractionFormat19.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat22 = fractionFormat19.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat23 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator25 = fractionFormat23.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat26 = fractionFormat23.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat27 = new org.apache.commons.math.fraction.FractionFormat(numberFormat22, numberFormat26);
        fractionFormat15.setNumeratorFormat(numberFormat22);
        org.apache.commons.math.fraction.FractionFormat fractionFormat29 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj31 = fractionFormat29.parseObject("0 / 1");
        java.text.NumberFormat numberFormat32 = fractionFormat29.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat33 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator35 = fractionFormat33.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat36 = fractionFormat33.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat37 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator39 = fractionFormat37.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat40 = fractionFormat37.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat41 = new org.apache.commons.math.fraction.FractionFormat(numberFormat36, numberFormat40);
        org.apache.commons.math.fraction.FractionFormat fractionFormat42 = new org.apache.commons.math.fraction.FractionFormat(numberFormat32, numberFormat36);
        org.apache.commons.math.fraction.FractionFormat fractionFormat43 = new org.apache.commons.math.fraction.FractionFormat(numberFormat22, numberFormat32);
        org.apache.commons.math.fraction.FractionFormat fractionFormat44 = new org.apache.commons.math.fraction.FractionFormat(numberFormat8, numberFormat32);
        org.apache.commons.math.fraction.FractionFormat fractionFormat45 = new org.apache.commons.math.fraction.FractionFormat(numberFormat8);
        org.apache.commons.math.fraction.FractionFormat fractionFormat46 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj48 = fractionFormat46.parseObject("0 / 1");
        java.lang.Object obj50 = fractionFormat46.parseObject("-1 / 1");
        org.apache.commons.math.fraction.FractionFormat fractionFormat51 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat52 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj54 = fractionFormat52.parseObject("0 / 1");
        java.lang.Object obj56 = fractionFormat52.parseObject("0 / 1");
        java.text.NumberFormat numberFormat57 = fractionFormat52.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat58 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj60 = fractionFormat58.parseObject("0 / 1");
        java.text.NumberFormat numberFormat61 = fractionFormat58.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat62 = new org.apache.commons.math.fraction.FractionFormat(numberFormat57, numberFormat61);
        org.apache.commons.math.fraction.FractionFormat fractionFormat63 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj65 = fractionFormat63.parseObject("0 / 1");
        java.lang.Object obj67 = fractionFormat63.parseObject("0 / 1");
        java.text.NumberFormat numberFormat68 = fractionFormat63.getNumeratorFormat();
        fractionFormat62.setDenominatorFormat(numberFormat68);
        java.lang.Object obj70 = numberFormat68.clone();
        fractionFormat51.setNumeratorFormat(numberFormat68);
        java.lang.Object obj72 = numberFormat68.clone();
        java.lang.Object obj73 = numberFormat68.clone();
        fractionFormat46.setDenominatorFormat(numberFormat68);
        java.lang.Object obj75 = numberFormat68.clone();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str76 = fractionFormat45.format(obj75);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot format given object as a fraction");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(numberFormat3);
        org.junit.Assert.assertNull(numberFormat4);
        org.junit.Assert.assertNotNull(fractionFormat5);
        org.junit.Assert.assertNotNull(attributedCharacterIterator7);
        org.junit.Assert.assertNotNull(numberFormat8);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "10" + "'", str12, "10");
        org.junit.Assert.assertNull(numberFormat16);
        org.junit.Assert.assertNull(numberFormat17);
        org.junit.Assert.assertNull(numberFormat18);
        org.junit.Assert.assertNotNull(fractionFormat19);
        org.junit.Assert.assertNotNull(attributedCharacterIterator21);
        org.junit.Assert.assertNotNull(numberFormat22);
        org.junit.Assert.assertNotNull(fractionFormat23);
        org.junit.Assert.assertNotNull(attributedCharacterIterator25);
        org.junit.Assert.assertNotNull(numberFormat26);
        org.junit.Assert.assertNotNull(fractionFormat29);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertNotNull(numberFormat32);
        org.junit.Assert.assertNotNull(fractionFormat33);
        org.junit.Assert.assertNotNull(attributedCharacterIterator35);
        org.junit.Assert.assertNotNull(numberFormat36);
        org.junit.Assert.assertNotNull(fractionFormat37);
        org.junit.Assert.assertNotNull(attributedCharacterIterator39);
        org.junit.Assert.assertNotNull(numberFormat40);
        org.junit.Assert.assertNotNull(fractionFormat46);
        org.junit.Assert.assertNotNull(obj48);
        org.junit.Assert.assertNotNull(obj50);
        org.junit.Assert.assertNotNull(fractionFormat51);
        org.junit.Assert.assertNotNull(fractionFormat52);
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertNotNull(obj56);
        org.junit.Assert.assertNotNull(numberFormat57);
        org.junit.Assert.assertNotNull(fractionFormat58);
        org.junit.Assert.assertNotNull(obj60);
        org.junit.Assert.assertNotNull(numberFormat61);
        org.junit.Assert.assertNotNull(fractionFormat63);
        org.junit.Assert.assertNotNull(obj65);
        org.junit.Assert.assertNotNull(obj67);
        org.junit.Assert.assertNotNull(numberFormat68);
        org.junit.Assert.assertNotNull(obj70);
        org.junit.Assert.assertNotNull(obj72);
        org.junit.Assert.assertNotNull(obj73);
        org.junit.Assert.assertNotNull(obj75);
    }

    @Test
    public void test0234() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0234");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat1 = fractionFormat0.getNumeratorFormat();
        java.text.ParsePosition parsePosition3 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.fraction.Fraction fraction4 = fractionFormat0.parse("100", parsePosition3);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(numberFormat1);
    }

    @Test
    public void test0235() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0235");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.Fraction fraction2 = fractionFormat0.parse("0 / 1");
        java.text.NumberFormat numberFormat3 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat4 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj6 = fractionFormat4.parseObject("0 / 1");
        java.lang.Object obj8 = fractionFormat4.parseObject("0 / 1");
        java.text.NumberFormat numberFormat9 = fractionFormat4.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat10 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj12 = fractionFormat10.parseObject("0 / 1");
        java.text.NumberFormat numberFormat13 = fractionFormat10.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat14 = new org.apache.commons.math.fraction.FractionFormat(numberFormat9, numberFormat13);
        java.text.NumberFormat numberFormat15 = fractionFormat14.getNumeratorFormat();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str16 = numberFormat3.format((java.lang.Object) numberFormat15);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot format given Object as a Number");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(fraction2);
        org.junit.Assert.assertNotNull(numberFormat3);
        org.junit.Assert.assertNotNull(fractionFormat4);
        org.junit.Assert.assertNotNull(obj6);
        org.junit.Assert.assertNotNull(obj8);
        org.junit.Assert.assertNotNull(numberFormat9);
        org.junit.Assert.assertNotNull(fractionFormat10);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertNotNull(numberFormat13);
        org.junit.Assert.assertNotNull(numberFormat15);
    }

    @Test
    public void test0236() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0236");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat5 = fractionFormat0.getNumeratorFormat();
        java.text.NumberFormat numberFormat6 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat7 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator9 = fractionFormat7.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat10 = fractionFormat7.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = new org.apache.commons.math.fraction.FractionFormat(numberFormat6, numberFormat10);
        org.apache.commons.math.fraction.FractionFormat fractionFormat12 = new org.apache.commons.math.fraction.FractionFormat(numberFormat6);
        java.lang.Object obj14 = fractionFormat12.parseObject("10");
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertNotNull(fractionFormat7);
        org.junit.Assert.assertNotNull(attributedCharacterIterator9);
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertNotNull(obj14);
    }

    @Test
    public void test0237() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0237");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.text.NumberFormat numberFormat3 = fractionFormat2.getDenominatorFormat();
        java.text.NumberFormat numberFormat4 = fractionFormat2.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator7 = fractionFormat5.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat8 = fractionFormat5.getDenominatorFormat();
        fractionFormat2.setNumeratorFormat(numberFormat8);
        java.lang.Object obj10 = numberFormat8.clone();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj12 = numberFormat8.parseObject("");
            org.junit.Assert.fail("Expected exception of type java.text.ParseException; message: Format.parseObject(String) failed");
        } catch (java.text.ParseException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(numberFormat3);
        org.junit.Assert.assertNull(numberFormat4);
        org.junit.Assert.assertNotNull(fractionFormat5);
        org.junit.Assert.assertNotNull(attributedCharacterIterator7);
        org.junit.Assert.assertNotNull(numberFormat8);
        org.junit.Assert.assertNotNull(obj10);
    }

    @Test
    public void test0238() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0238");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.lang.Object obj3 = fractionFormat2.clone();
        java.lang.Object obj4 = fractionFormat2.clone();
        java.lang.Object obj5 = fractionFormat2.clone();
        java.text.NumberFormat numberFormat6 = fractionFormat2.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat7 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj9 = fractionFormat7.parseObject("0 / 1");
        java.lang.Object obj11 = fractionFormat7.parseObject("0 / 1");
        java.text.NumberFormat numberFormat12 = fractionFormat7.getNumeratorFormat();
        java.text.NumberFormat numberFormat13 = fractionFormat7.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat14 = new org.apache.commons.math.fraction.FractionFormat(numberFormat13);
        org.apache.commons.math.fraction.FractionFormat fractionFormat15 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj17 = fractionFormat15.parseObject("0 / 1");
        java.lang.Object obj19 = fractionFormat15.parseObject("0 / 1");
        java.text.NumberFormat numberFormat20 = fractionFormat15.getNumeratorFormat();
        java.text.NumberFormat numberFormat21 = fractionFormat15.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat22 = new org.apache.commons.math.fraction.FractionFormat(numberFormat21);
        org.apache.commons.math.fraction.FractionFormat fractionFormat23 = new org.apache.commons.math.fraction.FractionFormat(numberFormat21);
        fractionFormat14.setNumeratorFormat(numberFormat21);
        java.text.NumberFormat numberFormat25 = null;
        java.text.NumberFormat numberFormat26 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat27 = new org.apache.commons.math.fraction.FractionFormat(numberFormat25, numberFormat26);
        java.text.NumberFormat numberFormat28 = fractionFormat27.getDenominatorFormat();
        java.text.NumberFormat numberFormat29 = fractionFormat27.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat30 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj32 = fractionFormat30.parseObject("0 / 1");
        java.lang.Object obj34 = fractionFormat30.parseObject("0 / 1");
        java.text.NumberFormat numberFormat35 = fractionFormat30.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat36 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj38 = fractionFormat36.parseObject("0 / 1");
        java.text.NumberFormat numberFormat39 = fractionFormat36.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat40 = new org.apache.commons.math.fraction.FractionFormat(numberFormat35, numberFormat39);
        java.text.AttributedCharacterIterator attributedCharacterIterator42 = numberFormat35.formatToCharacterIterator((java.lang.Object) (-1));
        fractionFormat27.setDenominatorFormat(numberFormat35);
        java.lang.Object obj44 = numberFormat35.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat45 = new org.apache.commons.math.fraction.FractionFormat(numberFormat21, numberFormat35);
        // The following exception was thrown during execution in test generation
        try {
            java.text.AttributedCharacterIterator attributedCharacterIterator46 = fractionFormat2.formatToCharacterIterator((java.lang.Object) numberFormat35);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot format given object as a fraction");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(obj3);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(obj5);
        org.junit.Assert.assertNull(numberFormat6);
        org.junit.Assert.assertNotNull(fractionFormat7);
        org.junit.Assert.assertNotNull(obj9);
        org.junit.Assert.assertNotNull(obj11);
        org.junit.Assert.assertNotNull(numberFormat12);
        org.junit.Assert.assertNotNull(numberFormat13);
        org.junit.Assert.assertNotNull(fractionFormat15);
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(numberFormat20);
        org.junit.Assert.assertNotNull(numberFormat21);
        org.junit.Assert.assertNull(numberFormat28);
        org.junit.Assert.assertNull(numberFormat29);
        org.junit.Assert.assertNotNull(fractionFormat30);
        org.junit.Assert.assertNotNull(obj32);
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertNotNull(numberFormat35);
        org.junit.Assert.assertNotNull(fractionFormat36);
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertNotNull(numberFormat39);
        org.junit.Assert.assertNotNull(attributedCharacterIterator42);
        org.junit.Assert.assertNotNull(obj44);
    }

    @Test
    public void test0239() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0239");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        java.text.NumberFormat numberFormat2 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat3 = new org.apache.commons.math.fraction.FractionFormat(numberFormat1, numberFormat2);
        java.text.NumberFormat numberFormat4 = fractionFormat3.getDenominatorFormat();
        java.text.NumberFormat numberFormat5 = fractionFormat3.getNumeratorFormat();
        java.text.NumberFormat numberFormat6 = fractionFormat3.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat7 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator9 = fractionFormat7.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat10 = fractionFormat7.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator13 = fractionFormat11.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat14 = fractionFormat11.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat15 = new org.apache.commons.math.fraction.FractionFormat(numberFormat10, numberFormat14);
        fractionFormat3.setNumeratorFormat(numberFormat10);
        org.apache.commons.math.fraction.FractionFormat fractionFormat17 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj19 = fractionFormat17.parseObject("0 / 1");
        java.text.NumberFormat numberFormat20 = fractionFormat17.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat21 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator23 = fractionFormat21.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat24 = fractionFormat21.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat25 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator27 = fractionFormat25.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat28 = fractionFormat25.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat29 = new org.apache.commons.math.fraction.FractionFormat(numberFormat24, numberFormat28);
        org.apache.commons.math.fraction.FractionFormat fractionFormat30 = new org.apache.commons.math.fraction.FractionFormat(numberFormat20, numberFormat24);
        org.apache.commons.math.fraction.FractionFormat fractionFormat31 = new org.apache.commons.math.fraction.FractionFormat(numberFormat10, numberFormat20);
        org.apache.commons.math.fraction.FractionFormat fractionFormat32 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat10);
        java.lang.Class<?> wildcardClass33 = numberFormat10.getClass();
        org.junit.Assert.assertNull(numberFormat4);
        org.junit.Assert.assertNull(numberFormat5);
        org.junit.Assert.assertNull(numberFormat6);
        org.junit.Assert.assertNotNull(fractionFormat7);
        org.junit.Assert.assertNotNull(attributedCharacterIterator9);
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertNotNull(fractionFormat11);
        org.junit.Assert.assertNotNull(attributedCharacterIterator13);
        org.junit.Assert.assertNotNull(numberFormat14);
        org.junit.Assert.assertNotNull(fractionFormat17);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(numberFormat20);
        org.junit.Assert.assertNotNull(fractionFormat21);
        org.junit.Assert.assertNotNull(attributedCharacterIterator23);
        org.junit.Assert.assertNotNull(numberFormat24);
        org.junit.Assert.assertNotNull(fractionFormat25);
        org.junit.Assert.assertNotNull(attributedCharacterIterator27);
        org.junit.Assert.assertNotNull(numberFormat28);
        org.junit.Assert.assertNotNull(wildcardClass33);
    }

    @Test
    public void test0240() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0240");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.text.NumberFormat numberFormat3 = fractionFormat2.getNumeratorFormat();
        java.text.NumberFormat numberFormat4 = fractionFormat2.getNumeratorFormat();
        java.text.NumberFormat numberFormat5 = fractionFormat2.getNumeratorFormat();
        java.text.NumberFormat numberFormat6 = fractionFormat2.getNumeratorFormat();
        java.lang.Object obj7 = fractionFormat2.clone();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.fraction.Fraction fraction9 = fractionFormat2.parse("10");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(numberFormat3);
        org.junit.Assert.assertNull(numberFormat4);
        org.junit.Assert.assertNull(numberFormat5);
        org.junit.Assert.assertNull(numberFormat6);
        org.junit.Assert.assertNotNull(obj7);
    }

    @Test
    public void test0241() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0241");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.fraction.Fraction fraction2 = fractionFormat0.parse("hi!");
            org.junit.Assert.fail("Expected exception of type java.text.ParseException; message: Unparseable fraction number: \"hi!\"");
        } catch (java.text.ParseException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
    }

    @Test
    public void test0242() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0242");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.text.NumberFormat numberFormat3 = fractionFormat2.getDenominatorFormat();
        java.text.NumberFormat numberFormat4 = fractionFormat2.getNumeratorFormat();
        java.text.NumberFormat numberFormat5 = fractionFormat2.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat6 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator8 = fractionFormat6.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat9 = fractionFormat6.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat10 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator12 = fractionFormat10.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat13 = fractionFormat10.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat14 = new org.apache.commons.math.fraction.FractionFormat(numberFormat9, numberFormat13);
        fractionFormat2.setNumeratorFormat(numberFormat9);
        org.apache.commons.math.fraction.FractionFormat fractionFormat16 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj18 = fractionFormat16.parseObject("0 / 1");
        java.text.NumberFormat numberFormat19 = fractionFormat16.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat20 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator22 = fractionFormat20.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat23 = fractionFormat20.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat24 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator26 = fractionFormat24.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat27 = fractionFormat24.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat28 = new org.apache.commons.math.fraction.FractionFormat(numberFormat23, numberFormat27);
        org.apache.commons.math.fraction.FractionFormat fractionFormat29 = new org.apache.commons.math.fraction.FractionFormat(numberFormat19, numberFormat23);
        org.apache.commons.math.fraction.FractionFormat fractionFormat30 = new org.apache.commons.math.fraction.FractionFormat(numberFormat9, numberFormat19);
        org.apache.commons.math.fraction.FractionFormat fractionFormat31 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj33 = fractionFormat31.parseObject("0 / 1");
        java.text.NumberFormat numberFormat34 = fractionFormat31.getNumeratorFormat();
        java.lang.Object obj35 = fractionFormat31.clone();
        java.lang.Class<?> wildcardClass36 = fractionFormat31.getClass();
        // The following exception was thrown during execution in test generation
        try {
            java.text.AttributedCharacterIterator attributedCharacterIterator37 = fractionFormat30.formatToCharacterIterator((java.lang.Object) fractionFormat31);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot format given object as a fraction");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(numberFormat3);
        org.junit.Assert.assertNull(numberFormat4);
        org.junit.Assert.assertNull(numberFormat5);
        org.junit.Assert.assertNotNull(fractionFormat6);
        org.junit.Assert.assertNotNull(attributedCharacterIterator8);
        org.junit.Assert.assertNotNull(numberFormat9);
        org.junit.Assert.assertNotNull(fractionFormat10);
        org.junit.Assert.assertNotNull(attributedCharacterIterator12);
        org.junit.Assert.assertNotNull(numberFormat13);
        org.junit.Assert.assertNotNull(fractionFormat16);
        org.junit.Assert.assertNotNull(obj18);
        org.junit.Assert.assertNotNull(numberFormat19);
        org.junit.Assert.assertNotNull(fractionFormat20);
        org.junit.Assert.assertNotNull(attributedCharacterIterator22);
        org.junit.Assert.assertNotNull(numberFormat23);
        org.junit.Assert.assertNotNull(fractionFormat24);
        org.junit.Assert.assertNotNull(attributedCharacterIterator26);
        org.junit.Assert.assertNotNull(numberFormat27);
        org.junit.Assert.assertNotNull(fractionFormat31);
        org.junit.Assert.assertNotNull(obj33);
        org.junit.Assert.assertNotNull(numberFormat34);
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertNotNull(wildcardClass36);
    }

    @Test
    public void test0243() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0243");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat5 = fractionFormat0.getNumeratorFormat();
        java.text.NumberFormat numberFormat6 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat7 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator9 = fractionFormat7.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat10 = fractionFormat7.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = new org.apache.commons.math.fraction.FractionFormat(numberFormat6, numberFormat10);
        java.text.NumberFormat numberFormat12 = null;
        java.text.NumberFormat numberFormat13 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat14 = new org.apache.commons.math.fraction.FractionFormat(numberFormat12, numberFormat13);
        java.text.NumberFormat numberFormat15 = fractionFormat14.getDenominatorFormat();
        java.text.NumberFormat numberFormat16 = fractionFormat14.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat17 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator19 = fractionFormat17.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat20 = fractionFormat17.getDenominatorFormat();
        fractionFormat14.setNumeratorFormat(numberFormat20);
        java.lang.Object obj22 = numberFormat20.clone();
        java.lang.String str24 = numberFormat20.format((java.lang.Object) (short) 10);
        org.apache.commons.math.fraction.FractionFormat fractionFormat25 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator27 = fractionFormat25.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat28 = fractionFormat25.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat29 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator31 = fractionFormat29.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat32 = fractionFormat29.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat33 = new org.apache.commons.math.fraction.FractionFormat(numberFormat28, numberFormat32);
        org.apache.commons.math.fraction.FractionFormat fractionFormat34 = new org.apache.commons.math.fraction.FractionFormat(numberFormat20, numberFormat28);
        // The following exception was thrown during execution in test generation
        try {
            java.text.AttributedCharacterIterator attributedCharacterIterator35 = numberFormat10.formatToCharacterIterator((java.lang.Object) numberFormat28);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot format given Object as a Number");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertNotNull(fractionFormat7);
        org.junit.Assert.assertNotNull(attributedCharacterIterator9);
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertNull(numberFormat15);
        org.junit.Assert.assertNull(numberFormat16);
        org.junit.Assert.assertNotNull(fractionFormat17);
        org.junit.Assert.assertNotNull(attributedCharacterIterator19);
        org.junit.Assert.assertNotNull(numberFormat20);
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "10" + "'", str24, "10");
        org.junit.Assert.assertNotNull(fractionFormat25);
        org.junit.Assert.assertNotNull(attributedCharacterIterator27);
        org.junit.Assert.assertNotNull(numberFormat28);
        org.junit.Assert.assertNotNull(fractionFormat29);
        org.junit.Assert.assertNotNull(attributedCharacterIterator31);
        org.junit.Assert.assertNotNull(numberFormat32);
    }

    @Test
    public void test0244() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0244");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.text.NumberFormat numberFormat3 = null;
        java.text.NumberFormat numberFormat4 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = new org.apache.commons.math.fraction.FractionFormat(numberFormat3, numberFormat4);
        java.text.NumberFormat numberFormat6 = fractionFormat5.getDenominatorFormat();
        java.text.NumberFormat numberFormat7 = fractionFormat5.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat8 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator10 = fractionFormat8.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat11 = fractionFormat8.getDenominatorFormat();
        fractionFormat5.setNumeratorFormat(numberFormat11);
        java.lang.Object obj13 = numberFormat11.clone();
        java.lang.String str15 = numberFormat11.format((java.lang.Object) (short) 10);
        java.text.NumberFormat numberFormat16 = null;
        java.text.NumberFormat numberFormat17 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat18 = new org.apache.commons.math.fraction.FractionFormat(numberFormat16, numberFormat17);
        java.text.NumberFormat numberFormat19 = fractionFormat18.getDenominatorFormat();
        java.text.NumberFormat numberFormat20 = fractionFormat18.getNumeratorFormat();
        java.text.NumberFormat numberFormat21 = fractionFormat18.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat22 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator24 = fractionFormat22.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat25 = fractionFormat22.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat26 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator28 = fractionFormat26.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat29 = fractionFormat26.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat30 = new org.apache.commons.math.fraction.FractionFormat(numberFormat25, numberFormat29);
        fractionFormat18.setNumeratorFormat(numberFormat25);
        org.apache.commons.math.fraction.FractionFormat fractionFormat32 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj34 = fractionFormat32.parseObject("0 / 1");
        java.text.NumberFormat numberFormat35 = fractionFormat32.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat36 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator38 = fractionFormat36.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat39 = fractionFormat36.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat40 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator42 = fractionFormat40.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat43 = fractionFormat40.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat44 = new org.apache.commons.math.fraction.FractionFormat(numberFormat39, numberFormat43);
        org.apache.commons.math.fraction.FractionFormat fractionFormat45 = new org.apache.commons.math.fraction.FractionFormat(numberFormat35, numberFormat39);
        org.apache.commons.math.fraction.FractionFormat fractionFormat46 = new org.apache.commons.math.fraction.FractionFormat(numberFormat25, numberFormat35);
        org.apache.commons.math.fraction.FractionFormat fractionFormat47 = new org.apache.commons.math.fraction.FractionFormat(numberFormat11, numberFormat35);
        java.lang.Object obj48 = fractionFormat47.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat49 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj51 = fractionFormat49.parseObject("0 / 1");
        java.lang.Object obj53 = fractionFormat49.parseObject("0 / 1");
        java.text.NumberFormat numberFormat54 = fractionFormat49.getNumeratorFormat();
        java.text.NumberFormat numberFormat55 = fractionFormat49.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat56 = new org.apache.commons.math.fraction.FractionFormat(numberFormat55);
        org.apache.commons.math.fraction.FractionFormat fractionFormat57 = new org.apache.commons.math.fraction.FractionFormat(numberFormat55);
        fractionFormat47.setDenominatorFormat(numberFormat55);
        fractionFormat2.setNumeratorFormat(numberFormat55);
        org.apache.commons.math.fraction.FractionFormat fractionFormat60 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.Fraction fraction62 = fractionFormat60.parse("0 / 1");
        java.lang.String str63 = org.apache.commons.math.fraction.FractionFormat.formatFraction(fraction62);
        java.lang.String str64 = org.apache.commons.math.fraction.FractionFormat.formatFraction(fraction62);
        java.lang.String str65 = org.apache.commons.math.fraction.FractionFormat.formatFraction(fraction62);
        java.lang.String str66 = org.apache.commons.math.fraction.FractionFormat.formatFraction(fraction62);
        java.lang.String str67 = org.apache.commons.math.fraction.FractionFormat.formatFraction(fraction62);
        java.lang.String str68 = org.apache.commons.math.fraction.FractionFormat.formatFraction(fraction62);
        java.lang.String str69 = org.apache.commons.math.fraction.FractionFormat.formatFraction(fraction62);
        // The following exception was thrown during execution in test generation
        try {
            java.text.AttributedCharacterIterator attributedCharacterIterator70 = numberFormat55.formatToCharacterIterator((java.lang.Object) str69);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot format given Object as a Number");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(numberFormat6);
        org.junit.Assert.assertNull(numberFormat7);
        org.junit.Assert.assertNotNull(fractionFormat8);
        org.junit.Assert.assertNotNull(attributedCharacterIterator10);
        org.junit.Assert.assertNotNull(numberFormat11);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "10" + "'", str15, "10");
        org.junit.Assert.assertNull(numberFormat19);
        org.junit.Assert.assertNull(numberFormat20);
        org.junit.Assert.assertNull(numberFormat21);
        org.junit.Assert.assertNotNull(fractionFormat22);
        org.junit.Assert.assertNotNull(attributedCharacterIterator24);
        org.junit.Assert.assertNotNull(numberFormat25);
        org.junit.Assert.assertNotNull(fractionFormat26);
        org.junit.Assert.assertNotNull(attributedCharacterIterator28);
        org.junit.Assert.assertNotNull(numberFormat29);
        org.junit.Assert.assertNotNull(fractionFormat32);
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertNotNull(numberFormat35);
        org.junit.Assert.assertNotNull(fractionFormat36);
        org.junit.Assert.assertNotNull(attributedCharacterIterator38);
        org.junit.Assert.assertNotNull(numberFormat39);
        org.junit.Assert.assertNotNull(fractionFormat40);
        org.junit.Assert.assertNotNull(attributedCharacterIterator42);
        org.junit.Assert.assertNotNull(numberFormat43);
        org.junit.Assert.assertNotNull(obj48);
        org.junit.Assert.assertNotNull(fractionFormat49);
        org.junit.Assert.assertNotNull(obj51);
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertNotNull(numberFormat54);
        org.junit.Assert.assertNotNull(numberFormat55);
        org.junit.Assert.assertNotNull(fractionFormat60);
        org.junit.Assert.assertNotNull(fraction62);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "0 / 1" + "'", str63, "0 / 1");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "0 / 1" + "'", str64, "0 / 1");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "0 / 1" + "'", str65, "0 / 1");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "0 / 1" + "'", str66, "0 / 1");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "0 / 1" + "'", str67, "0 / 1");
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "0 / 1" + "'", str68, "0 / 1");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "0 / 1" + "'", str69, "0 / 1");
    }

    @Test
    public void test0245() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0245");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat5 = fractionFormat0.getNumeratorFormat();
        java.lang.Object obj6 = numberFormat5.clone();
        java.text.NumberFormat numberFormat7 = null;
        java.text.NumberFormat numberFormat8 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat9 = new org.apache.commons.math.fraction.FractionFormat(numberFormat7, numberFormat8);
        java.text.NumberFormat numberFormat10 = fractionFormat9.getNumeratorFormat();
        java.text.NumberFormat numberFormat11 = fractionFormat9.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat12 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj14 = fractionFormat12.parseObject("0 / 1");
        java.lang.Object obj16 = fractionFormat12.parseObject("0 / 1");
        java.text.NumberFormat numberFormat17 = fractionFormat12.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat18 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj20 = fractionFormat18.parseObject("0 / 1");
        java.text.NumberFormat numberFormat21 = fractionFormat18.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat22 = new org.apache.commons.math.fraction.FractionFormat(numberFormat17, numberFormat21);
        fractionFormat9.setNumeratorFormat(numberFormat17);
        // The following exception was thrown during execution in test generation
        try {
            java.text.AttributedCharacterIterator attributedCharacterIterator24 = numberFormat5.formatToCharacterIterator((java.lang.Object) fractionFormat9);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot format given Object as a Number");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(obj6);
        org.junit.Assert.assertNull(numberFormat10);
        org.junit.Assert.assertNull(numberFormat11);
        org.junit.Assert.assertNotNull(fractionFormat12);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertNotNull(obj16);
        org.junit.Assert.assertNotNull(numberFormat17);
        org.junit.Assert.assertNotNull(fractionFormat18);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertNotNull(numberFormat21);
    }

    @Test
    public void test0246() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0246");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat3 = fractionFormat0.getNumeratorFormat();
        java.lang.Object obj4 = fractionFormat0.clone();
        java.text.ParsePosition parsePosition6 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.fraction.Fraction fraction7 = fractionFormat0.parse("", parsePosition6);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(numberFormat3);
        org.junit.Assert.assertNotNull(obj4);
    }

    @Test
    public void test0247() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0247");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.text.NumberFormat numberFormat3 = fractionFormat2.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat4 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator6 = fractionFormat4.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat7 = fractionFormat4.getDenominatorFormat();
        // The following exception was thrown during execution in test generation
        try {
            java.text.AttributedCharacterIterator attributedCharacterIterator8 = fractionFormat2.formatToCharacterIterator((java.lang.Object) fractionFormat4);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot format given object as a fraction");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(numberFormat3);
        org.junit.Assert.assertNotNull(fractionFormat4);
        org.junit.Assert.assertNotNull(attributedCharacterIterator6);
        org.junit.Assert.assertNotNull(numberFormat7);
    }

    @Test
    public void test0248() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0248");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.text.NumberFormat numberFormat3 = fractionFormat2.getDenominatorFormat();
        java.text.NumberFormat numberFormat4 = fractionFormat2.getNumeratorFormat();
        java.text.NumberFormat numberFormat5 = fractionFormat2.getNumeratorFormat();
        java.text.NumberFormat numberFormat6 = fractionFormat2.getDenominatorFormat();
        java.text.NumberFormat numberFormat7 = fractionFormat2.getNumeratorFormat();
        java.text.NumberFormat numberFormat8 = null;
        java.text.NumberFormat numberFormat9 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat10 = new org.apache.commons.math.fraction.FractionFormat(numberFormat8, numberFormat9);
        java.text.NumberFormat numberFormat11 = fractionFormat10.getDenominatorFormat();
        java.text.NumberFormat numberFormat12 = fractionFormat10.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat13 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator15 = fractionFormat13.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat16 = fractionFormat13.getDenominatorFormat();
        fractionFormat10.setNumeratorFormat(numberFormat16);
        java.lang.Object obj18 = numberFormat16.clone();
        java.lang.String str20 = numberFormat16.format((java.lang.Object) (short) 10);
        org.apache.commons.math.fraction.FractionFormat fractionFormat21 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator23 = fractionFormat21.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat24 = fractionFormat21.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat25 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator27 = fractionFormat25.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat28 = fractionFormat25.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat29 = new org.apache.commons.math.fraction.FractionFormat(numberFormat24, numberFormat28);
        org.apache.commons.math.fraction.FractionFormat fractionFormat30 = new org.apache.commons.math.fraction.FractionFormat(numberFormat16, numberFormat24);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str31 = numberFormat7.format((java.lang.Object) numberFormat16);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(numberFormat3);
        org.junit.Assert.assertNull(numberFormat4);
        org.junit.Assert.assertNull(numberFormat5);
        org.junit.Assert.assertNull(numberFormat6);
        org.junit.Assert.assertNull(numberFormat7);
        org.junit.Assert.assertNull(numberFormat11);
        org.junit.Assert.assertNull(numberFormat12);
        org.junit.Assert.assertNotNull(fractionFormat13);
        org.junit.Assert.assertNotNull(attributedCharacterIterator15);
        org.junit.Assert.assertNotNull(numberFormat16);
        org.junit.Assert.assertNotNull(obj18);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "10" + "'", str20, "10");
        org.junit.Assert.assertNotNull(fractionFormat21);
        org.junit.Assert.assertNotNull(attributedCharacterIterator23);
        org.junit.Assert.assertNotNull(numberFormat24);
        org.junit.Assert.assertNotNull(fractionFormat25);
        org.junit.Assert.assertNotNull(attributedCharacterIterator27);
        org.junit.Assert.assertNotNull(numberFormat28);
    }

    @Test
    public void test0249() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0249");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.text.NumberFormat numberFormat3 = fractionFormat2.getNumeratorFormat();
        java.text.NumberFormat numberFormat4 = fractionFormat2.getNumeratorFormat();
        java.text.NumberFormat numberFormat5 = fractionFormat2.getDenominatorFormat();
        java.text.ParsePosition parsePosition7 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.fraction.Fraction fraction8 = fractionFormat2.parse("-1 / 1", parsePosition7);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(numberFormat3);
        org.junit.Assert.assertNull(numberFormat4);
        org.junit.Assert.assertNull(numberFormat5);
    }

    @Test
    public void test0250() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0250");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.lang.Object obj3 = fractionFormat2.clone();
        java.text.NumberFormat numberFormat4 = null;
        java.text.NumberFormat numberFormat5 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat6 = new org.apache.commons.math.fraction.FractionFormat(numberFormat4, numberFormat5);
        java.text.NumberFormat numberFormat7 = fractionFormat6.getDenominatorFormat();
        java.text.NumberFormat numberFormat8 = fractionFormat6.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat9 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator11 = fractionFormat9.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat12 = fractionFormat9.getDenominatorFormat();
        fractionFormat6.setNumeratorFormat(numberFormat12);
        java.lang.Object obj14 = numberFormat12.clone();
        java.lang.String str16 = numberFormat12.format((java.lang.Object) (short) 10);
        org.apache.commons.math.fraction.FractionFormat fractionFormat17 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator19 = fractionFormat17.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat20 = fractionFormat17.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat21 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator23 = fractionFormat21.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat24 = fractionFormat21.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat25 = new org.apache.commons.math.fraction.FractionFormat(numberFormat20, numberFormat24);
        org.apache.commons.math.fraction.FractionFormat fractionFormat26 = new org.apache.commons.math.fraction.FractionFormat(numberFormat12, numberFormat20);
        fractionFormat2.setDenominatorFormat(numberFormat12);
        java.text.NumberFormat numberFormat28 = fractionFormat2.getDenominatorFormat();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.fraction.Fraction fraction30 = fractionFormat2.parse("-1 / 1");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(obj3);
        org.junit.Assert.assertNull(numberFormat7);
        org.junit.Assert.assertNull(numberFormat8);
        org.junit.Assert.assertNotNull(fractionFormat9);
        org.junit.Assert.assertNotNull(attributedCharacterIterator11);
        org.junit.Assert.assertNotNull(numberFormat12);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "10" + "'", str16, "10");
        org.junit.Assert.assertNotNull(fractionFormat17);
        org.junit.Assert.assertNotNull(attributedCharacterIterator19);
        org.junit.Assert.assertNotNull(numberFormat20);
        org.junit.Assert.assertNotNull(fractionFormat21);
        org.junit.Assert.assertNotNull(attributedCharacterIterator23);
        org.junit.Assert.assertNotNull(numberFormat24);
        org.junit.Assert.assertNotNull(numberFormat28);
    }

    @Test
    public void test0251() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0251");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.text.NumberFormat numberFormat3 = fractionFormat2.getDenominatorFormat();
        java.text.NumberFormat numberFormat4 = fractionFormat2.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator7 = fractionFormat5.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat8 = fractionFormat5.getDenominatorFormat();
        fractionFormat2.setNumeratorFormat(numberFormat8);
        java.lang.Object obj10 = numberFormat8.clone();
        java.lang.String str12 = numberFormat8.format((java.lang.Object) (short) 10);
        java.text.NumberFormat numberFormat13 = null;
        java.text.NumberFormat numberFormat14 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat15 = new org.apache.commons.math.fraction.FractionFormat(numberFormat13, numberFormat14);
        java.text.NumberFormat numberFormat16 = fractionFormat15.getDenominatorFormat();
        java.text.NumberFormat numberFormat17 = fractionFormat15.getNumeratorFormat();
        java.text.NumberFormat numberFormat18 = fractionFormat15.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat19 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator21 = fractionFormat19.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat22 = fractionFormat19.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat23 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator25 = fractionFormat23.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat26 = fractionFormat23.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat27 = new org.apache.commons.math.fraction.FractionFormat(numberFormat22, numberFormat26);
        fractionFormat15.setNumeratorFormat(numberFormat22);
        org.apache.commons.math.fraction.FractionFormat fractionFormat29 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj31 = fractionFormat29.parseObject("0 / 1");
        java.text.NumberFormat numberFormat32 = fractionFormat29.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat33 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator35 = fractionFormat33.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat36 = fractionFormat33.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat37 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator39 = fractionFormat37.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat40 = fractionFormat37.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat41 = new org.apache.commons.math.fraction.FractionFormat(numberFormat36, numberFormat40);
        org.apache.commons.math.fraction.FractionFormat fractionFormat42 = new org.apache.commons.math.fraction.FractionFormat(numberFormat32, numberFormat36);
        org.apache.commons.math.fraction.FractionFormat fractionFormat43 = new org.apache.commons.math.fraction.FractionFormat(numberFormat22, numberFormat32);
        org.apache.commons.math.fraction.FractionFormat fractionFormat44 = new org.apache.commons.math.fraction.FractionFormat(numberFormat8, numberFormat32);
        java.text.NumberFormat numberFormat45 = null;
        java.text.NumberFormat numberFormat46 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat47 = new org.apache.commons.math.fraction.FractionFormat(numberFormat45, numberFormat46);
        java.text.NumberFormat numberFormat48 = fractionFormat47.getNumeratorFormat();
        java.text.NumberFormat numberFormat49 = fractionFormat47.getNumeratorFormat();
        java.text.NumberFormat numberFormat50 = fractionFormat47.getNumeratorFormat();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str51 = numberFormat8.format((java.lang.Object) fractionFormat47);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot format given Object as a Number");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(numberFormat3);
        org.junit.Assert.assertNull(numberFormat4);
        org.junit.Assert.assertNotNull(fractionFormat5);
        org.junit.Assert.assertNotNull(attributedCharacterIterator7);
        org.junit.Assert.assertNotNull(numberFormat8);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "10" + "'", str12, "10");
        org.junit.Assert.assertNull(numberFormat16);
        org.junit.Assert.assertNull(numberFormat17);
        org.junit.Assert.assertNull(numberFormat18);
        org.junit.Assert.assertNotNull(fractionFormat19);
        org.junit.Assert.assertNotNull(attributedCharacterIterator21);
        org.junit.Assert.assertNotNull(numberFormat22);
        org.junit.Assert.assertNotNull(fractionFormat23);
        org.junit.Assert.assertNotNull(attributedCharacterIterator25);
        org.junit.Assert.assertNotNull(numberFormat26);
        org.junit.Assert.assertNotNull(fractionFormat29);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertNotNull(numberFormat32);
        org.junit.Assert.assertNotNull(fractionFormat33);
        org.junit.Assert.assertNotNull(attributedCharacterIterator35);
        org.junit.Assert.assertNotNull(numberFormat36);
        org.junit.Assert.assertNotNull(fractionFormat37);
        org.junit.Assert.assertNotNull(attributedCharacterIterator39);
        org.junit.Assert.assertNotNull(numberFormat40);
        org.junit.Assert.assertNull(numberFormat48);
        org.junit.Assert.assertNull(numberFormat49);
        org.junit.Assert.assertNull(numberFormat50);
    }

    @Test
    public void test0252() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0252");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.text.NumberFormat numberFormat3 = fractionFormat2.getDenominatorFormat();
        java.text.NumberFormat numberFormat4 = fractionFormat2.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator7 = fractionFormat5.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat8 = fractionFormat5.getDenominatorFormat();
        fractionFormat2.setNumeratorFormat(numberFormat8);
        org.apache.commons.math.fraction.FractionFormat fractionFormat10 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj12 = fractionFormat10.parseObject("0 / 1");
        java.text.NumberFormat numberFormat13 = fractionFormat10.getNumeratorFormat();
        fractionFormat2.setNumeratorFormat(numberFormat13);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.fraction.Fraction fraction16 = fractionFormat2.parse("hi!");
            org.junit.Assert.fail("Expected exception of type java.text.ParseException; message: Unparseable fraction number: \"hi!\"");
        } catch (java.text.ParseException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(numberFormat3);
        org.junit.Assert.assertNull(numberFormat4);
        org.junit.Assert.assertNotNull(fractionFormat5);
        org.junit.Assert.assertNotNull(attributedCharacterIterator7);
        org.junit.Assert.assertNotNull(numberFormat8);
        org.junit.Assert.assertNotNull(fractionFormat10);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertNotNull(numberFormat13);
    }

    @Test
    public void test0253() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0253");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.text.NumberFormat numberFormat3 = fractionFormat2.getDenominatorFormat();
        java.text.NumberFormat numberFormat4 = fractionFormat2.getNumeratorFormat();
        java.text.NumberFormat numberFormat5 = fractionFormat2.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat6 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator8 = fractionFormat6.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat9 = fractionFormat6.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat10 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator12 = fractionFormat10.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat13 = fractionFormat10.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat14 = new org.apache.commons.math.fraction.FractionFormat(numberFormat9, numberFormat13);
        fractionFormat2.setNumeratorFormat(numberFormat9);
        org.apache.commons.math.fraction.FractionFormat fractionFormat16 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj18 = fractionFormat16.parseObject("0 / 1");
        java.text.NumberFormat numberFormat19 = fractionFormat16.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat20 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator22 = fractionFormat20.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat23 = fractionFormat20.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat24 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator26 = fractionFormat24.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat27 = fractionFormat24.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat28 = new org.apache.commons.math.fraction.FractionFormat(numberFormat23, numberFormat27);
        org.apache.commons.math.fraction.FractionFormat fractionFormat29 = new org.apache.commons.math.fraction.FractionFormat(numberFormat19, numberFormat23);
        org.apache.commons.math.fraction.FractionFormat fractionFormat30 = new org.apache.commons.math.fraction.FractionFormat(numberFormat9, numberFormat19);
        org.apache.commons.math.fraction.FractionFormat fractionFormat31 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj33 = fractionFormat31.parseObject("0 / 1");
        java.lang.Object obj35 = fractionFormat31.parseObject("0 / 1");
        java.text.NumberFormat numberFormat36 = fractionFormat31.getNumeratorFormat();
        java.text.NumberFormat numberFormat37 = fractionFormat31.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat38 = new org.apache.commons.math.fraction.FractionFormat(numberFormat37);
        org.apache.commons.math.fraction.FractionFormat fractionFormat39 = new org.apache.commons.math.fraction.FractionFormat(numberFormat37);
        fractionFormat30.setNumeratorFormat(numberFormat37);
        java.text.ParsePosition parsePosition42 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj43 = fractionFormat30.parseObject("10", parsePosition42);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(numberFormat3);
        org.junit.Assert.assertNull(numberFormat4);
        org.junit.Assert.assertNull(numberFormat5);
        org.junit.Assert.assertNotNull(fractionFormat6);
        org.junit.Assert.assertNotNull(attributedCharacterIterator8);
        org.junit.Assert.assertNotNull(numberFormat9);
        org.junit.Assert.assertNotNull(fractionFormat10);
        org.junit.Assert.assertNotNull(attributedCharacterIterator12);
        org.junit.Assert.assertNotNull(numberFormat13);
        org.junit.Assert.assertNotNull(fractionFormat16);
        org.junit.Assert.assertNotNull(obj18);
        org.junit.Assert.assertNotNull(numberFormat19);
        org.junit.Assert.assertNotNull(fractionFormat20);
        org.junit.Assert.assertNotNull(attributedCharacterIterator22);
        org.junit.Assert.assertNotNull(numberFormat23);
        org.junit.Assert.assertNotNull(fractionFormat24);
        org.junit.Assert.assertNotNull(attributedCharacterIterator26);
        org.junit.Assert.assertNotNull(numberFormat27);
        org.junit.Assert.assertNotNull(fractionFormat31);
        org.junit.Assert.assertNotNull(obj33);
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertNotNull(numberFormat36);
        org.junit.Assert.assertNotNull(numberFormat37);
    }

    @Test
    public void test0254() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0254");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat5 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat6 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj8 = fractionFormat6.parseObject("0 / 1");
        java.lang.Object obj10 = fractionFormat6.parseObject("0 / 1");
        java.text.NumberFormat numberFormat11 = fractionFormat6.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat12 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj14 = fractionFormat12.parseObject("0 / 1");
        java.text.NumberFormat numberFormat15 = fractionFormat12.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat16 = new org.apache.commons.math.fraction.FractionFormat(numberFormat11, numberFormat15);
        org.apache.commons.math.fraction.FractionFormat fractionFormat17 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj19 = fractionFormat17.parseObject("0 / 1");
        java.lang.Object obj21 = fractionFormat17.parseObject("0 / 1");
        java.text.NumberFormat numberFormat22 = fractionFormat17.getNumeratorFormat();
        fractionFormat16.setDenominatorFormat(numberFormat22);
        org.apache.commons.math.fraction.FractionFormat fractionFormat24 = new org.apache.commons.math.fraction.FractionFormat(numberFormat5, numberFormat22);
        java.text.NumberFormat numberFormat25 = fractionFormat24.getNumeratorFormat();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj27 = fractionFormat24.parseObject("");
            org.junit.Assert.fail("Expected exception of type java.text.ParseException; message: Format.parseObject(String) failed");
        } catch (java.text.ParseException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(fractionFormat6);
        org.junit.Assert.assertNotNull(obj8);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertNotNull(numberFormat11);
        org.junit.Assert.assertNotNull(fractionFormat12);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertNotNull(numberFormat15);
        org.junit.Assert.assertNotNull(fractionFormat17);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertNotNull(numberFormat22);
        org.junit.Assert.assertNotNull(numberFormat25);
    }

    @Test
    public void test0255() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0255");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat5 = fractionFormat0.getNumeratorFormat();
        java.text.NumberFormat numberFormat6 = fractionFormat0.getNumeratorFormat();
        java.lang.Class<?> wildcardClass7 = fractionFormat0.getClass();
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertNotNull(wildcardClass7);
    }

    @Test
    public void test0256() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0256");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat5 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat6 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj8 = fractionFormat6.parseObject("0 / 1");
        java.text.NumberFormat numberFormat9 = fractionFormat6.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat10 = new org.apache.commons.math.fraction.FractionFormat(numberFormat5, numberFormat9);
        java.text.NumberFormat numberFormat11 = fractionFormat10.getNumeratorFormat();
        java.text.ParsePosition parsePosition13 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj14 = fractionFormat10.parseObject("100", parsePosition13);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(fractionFormat6);
        org.junit.Assert.assertNotNull(obj8);
        org.junit.Assert.assertNotNull(numberFormat9);
        org.junit.Assert.assertNotNull(numberFormat11);
    }

    @Test
    public void test0257() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0257");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.text.NumberFormat numberFormat3 = fractionFormat2.getDenominatorFormat();
        java.text.NumberFormat numberFormat4 = fractionFormat2.getNumeratorFormat();
        java.text.NumberFormat numberFormat5 = fractionFormat2.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat6 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator8 = fractionFormat6.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat9 = fractionFormat6.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat10 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator12 = fractionFormat10.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat13 = fractionFormat10.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat14 = new org.apache.commons.math.fraction.FractionFormat(numberFormat9, numberFormat13);
        fractionFormat2.setNumeratorFormat(numberFormat9);
        org.apache.commons.math.fraction.FractionFormat fractionFormat16 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj18 = fractionFormat16.parseObject("0 / 1");
        java.text.NumberFormat numberFormat19 = fractionFormat16.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat20 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator22 = fractionFormat20.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat23 = fractionFormat20.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat24 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator26 = fractionFormat24.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat27 = fractionFormat24.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat28 = new org.apache.commons.math.fraction.FractionFormat(numberFormat23, numberFormat27);
        org.apache.commons.math.fraction.FractionFormat fractionFormat29 = new org.apache.commons.math.fraction.FractionFormat(numberFormat19, numberFormat23);
        org.apache.commons.math.fraction.FractionFormat fractionFormat30 = new org.apache.commons.math.fraction.FractionFormat(numberFormat9, numberFormat19);
        org.apache.commons.math.fraction.FractionFormat fractionFormat31 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj33 = fractionFormat31.parseObject("0 / 1");
        java.lang.Object obj35 = fractionFormat31.parseObject("0 / 1");
        java.text.NumberFormat numberFormat36 = fractionFormat31.getNumeratorFormat();
        java.text.NumberFormat numberFormat37 = fractionFormat31.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat38 = new org.apache.commons.math.fraction.FractionFormat(numberFormat37);
        org.apache.commons.math.fraction.FractionFormat fractionFormat39 = new org.apache.commons.math.fraction.FractionFormat(numberFormat37);
        fractionFormat30.setNumeratorFormat(numberFormat37);
        java.text.ParsePosition parsePosition42 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.fraction.Fraction fraction43 = fractionFormat30.parse("hi!", parsePosition42);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(numberFormat3);
        org.junit.Assert.assertNull(numberFormat4);
        org.junit.Assert.assertNull(numberFormat5);
        org.junit.Assert.assertNotNull(fractionFormat6);
        org.junit.Assert.assertNotNull(attributedCharacterIterator8);
        org.junit.Assert.assertNotNull(numberFormat9);
        org.junit.Assert.assertNotNull(fractionFormat10);
        org.junit.Assert.assertNotNull(attributedCharacterIterator12);
        org.junit.Assert.assertNotNull(numberFormat13);
        org.junit.Assert.assertNotNull(fractionFormat16);
        org.junit.Assert.assertNotNull(obj18);
        org.junit.Assert.assertNotNull(numberFormat19);
        org.junit.Assert.assertNotNull(fractionFormat20);
        org.junit.Assert.assertNotNull(attributedCharacterIterator22);
        org.junit.Assert.assertNotNull(numberFormat23);
        org.junit.Assert.assertNotNull(fractionFormat24);
        org.junit.Assert.assertNotNull(attributedCharacterIterator26);
        org.junit.Assert.assertNotNull(numberFormat27);
        org.junit.Assert.assertNotNull(fractionFormat31);
        org.junit.Assert.assertNotNull(obj33);
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertNotNull(numberFormat36);
        org.junit.Assert.assertNotNull(numberFormat37);
    }

    @Test
    public void test0258() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0258");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat5 = fractionFormat0.getNumeratorFormat();
        java.text.NumberFormat numberFormat6 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat7 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator9 = fractionFormat7.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat10 = fractionFormat7.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = new org.apache.commons.math.fraction.FractionFormat(numberFormat6, numberFormat10);
        org.apache.commons.math.fraction.FractionFormat fractionFormat12 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator14 = fractionFormat12.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat15 = fractionFormat12.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat16 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator18 = fractionFormat16.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat19 = fractionFormat16.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat20 = new org.apache.commons.math.fraction.FractionFormat(numberFormat15, numberFormat19);
        fractionFormat11.setNumeratorFormat(numberFormat15);
        java.text.NumberFormat numberFormat22 = fractionFormat11.getNumeratorFormat();
        java.text.NumberFormat numberFormat23 = null;
        java.text.NumberFormat numberFormat24 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat25 = new org.apache.commons.math.fraction.FractionFormat(numberFormat23, numberFormat24);
        java.text.NumberFormat numberFormat26 = fractionFormat25.getDenominatorFormat();
        java.text.NumberFormat numberFormat27 = fractionFormat25.getNumeratorFormat();
        java.text.NumberFormat numberFormat28 = fractionFormat25.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat29 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator31 = fractionFormat29.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat32 = fractionFormat29.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat33 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator35 = fractionFormat33.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat36 = fractionFormat33.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat37 = new org.apache.commons.math.fraction.FractionFormat(numberFormat32, numberFormat36);
        fractionFormat25.setNumeratorFormat(numberFormat32);
        java.lang.StringBuffer stringBuffer39 = null;
        java.text.FieldPosition fieldPosition40 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer41 = fractionFormat11.format((java.lang.Object) fractionFormat25, stringBuffer39, fieldPosition40);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot format given object as a fraction");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertNotNull(fractionFormat7);
        org.junit.Assert.assertNotNull(attributedCharacterIterator9);
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertNotNull(fractionFormat12);
        org.junit.Assert.assertNotNull(attributedCharacterIterator14);
        org.junit.Assert.assertNotNull(numberFormat15);
        org.junit.Assert.assertNotNull(fractionFormat16);
        org.junit.Assert.assertNotNull(attributedCharacterIterator18);
        org.junit.Assert.assertNotNull(numberFormat19);
        org.junit.Assert.assertNotNull(numberFormat22);
        org.junit.Assert.assertNull(numberFormat26);
        org.junit.Assert.assertNull(numberFormat27);
        org.junit.Assert.assertNull(numberFormat28);
        org.junit.Assert.assertNotNull(fractionFormat29);
        org.junit.Assert.assertNotNull(attributedCharacterIterator31);
        org.junit.Assert.assertNotNull(numberFormat32);
        org.junit.Assert.assertNotNull(fractionFormat33);
        org.junit.Assert.assertNotNull(attributedCharacterIterator35);
        org.junit.Assert.assertNotNull(numberFormat36);
    }

    @Test
    public void test0259() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0259");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat5 = fractionFormat0.getNumeratorFormat();
        java.lang.Object obj6 = numberFormat5.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat7 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj9 = fractionFormat7.parseObject("0 / 1");
        java.lang.Object obj11 = fractionFormat7.parseObject("0 / 1");
        java.text.NumberFormat numberFormat12 = fractionFormat7.getNumeratorFormat();
        java.text.NumberFormat numberFormat13 = fractionFormat7.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat14 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator16 = fractionFormat14.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat17 = fractionFormat14.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat18 = new org.apache.commons.math.fraction.FractionFormat(numberFormat13, numberFormat17);
        org.apache.commons.math.fraction.FractionFormat fractionFormat19 = new org.apache.commons.math.fraction.FractionFormat(numberFormat5, numberFormat17);
        java.text.NumberFormat numberFormat20 = null;
        java.text.NumberFormat numberFormat21 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat22 = new org.apache.commons.math.fraction.FractionFormat(numberFormat20, numberFormat21);
        java.text.NumberFormat numberFormat23 = fractionFormat22.getDenominatorFormat();
        java.text.NumberFormat numberFormat24 = fractionFormat22.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat25 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator27 = fractionFormat25.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat28 = fractionFormat25.getDenominatorFormat();
        fractionFormat22.setNumeratorFormat(numberFormat28);
        org.apache.commons.math.fraction.FractionFormat fractionFormat30 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj32 = fractionFormat30.parseObject("0 / 1");
        java.lang.Object obj34 = fractionFormat30.parseObject("0 / 1");
        java.text.NumberFormat numberFormat35 = fractionFormat30.getNumeratorFormat();
        fractionFormat22.setDenominatorFormat(numberFormat35);
        org.apache.commons.math.fraction.FractionFormat fractionFormat37 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat38 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj40 = fractionFormat38.parseObject("0 / 1");
        java.lang.Object obj42 = fractionFormat38.parseObject("0 / 1");
        java.text.NumberFormat numberFormat43 = fractionFormat38.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat44 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj46 = fractionFormat44.parseObject("0 / 1");
        java.text.NumberFormat numberFormat47 = fractionFormat44.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat48 = new org.apache.commons.math.fraction.FractionFormat(numberFormat43, numberFormat47);
        org.apache.commons.math.fraction.FractionFormat fractionFormat49 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj51 = fractionFormat49.parseObject("0 / 1");
        java.lang.Object obj53 = fractionFormat49.parseObject("0 / 1");
        java.text.NumberFormat numberFormat54 = fractionFormat49.getNumeratorFormat();
        fractionFormat48.setDenominatorFormat(numberFormat54);
        java.lang.Object obj56 = numberFormat54.clone();
        fractionFormat37.setNumeratorFormat(numberFormat54);
        fractionFormat22.setDenominatorFormat(numberFormat54);
        org.apache.commons.math.fraction.Fraction fraction60 = fractionFormat22.parse("10");
        java.lang.StringBuffer stringBuffer61 = null;
        java.text.FieldPosition fieldPosition62 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer63 = fractionFormat19.format(fraction60, stringBuffer61, fieldPosition62);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(obj6);
        org.junit.Assert.assertNotNull(fractionFormat7);
        org.junit.Assert.assertNotNull(obj9);
        org.junit.Assert.assertNotNull(obj11);
        org.junit.Assert.assertNotNull(numberFormat12);
        org.junit.Assert.assertNotNull(numberFormat13);
        org.junit.Assert.assertNotNull(fractionFormat14);
        org.junit.Assert.assertNotNull(attributedCharacterIterator16);
        org.junit.Assert.assertNotNull(numberFormat17);
        org.junit.Assert.assertNull(numberFormat23);
        org.junit.Assert.assertNull(numberFormat24);
        org.junit.Assert.assertNotNull(fractionFormat25);
        org.junit.Assert.assertNotNull(attributedCharacterIterator27);
        org.junit.Assert.assertNotNull(numberFormat28);
        org.junit.Assert.assertNotNull(fractionFormat30);
        org.junit.Assert.assertNotNull(obj32);
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertNotNull(numberFormat35);
        org.junit.Assert.assertNotNull(fractionFormat37);
        org.junit.Assert.assertNotNull(fractionFormat38);
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertNotNull(numberFormat43);
        org.junit.Assert.assertNotNull(fractionFormat44);
        org.junit.Assert.assertNotNull(obj46);
        org.junit.Assert.assertNotNull(numberFormat47);
        org.junit.Assert.assertNotNull(fractionFormat49);
        org.junit.Assert.assertNotNull(obj51);
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertNotNull(numberFormat54);
        org.junit.Assert.assertNotNull(obj56);
        org.junit.Assert.assertNotNull(fraction60);
    }

    @Test
    public void test0260() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0260");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat5 = fractionFormat0.getNumeratorFormat();
        java.text.NumberFormat numberFormat6 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat7 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator9 = fractionFormat7.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat10 = fractionFormat7.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = new org.apache.commons.math.fraction.FractionFormat(numberFormat6, numberFormat10);
        org.apache.commons.math.fraction.FractionFormat fractionFormat12 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator14 = fractionFormat12.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat15 = fractionFormat12.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat16 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator18 = fractionFormat16.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat19 = fractionFormat16.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat20 = new org.apache.commons.math.fraction.FractionFormat(numberFormat15, numberFormat19);
        fractionFormat11.setNumeratorFormat(numberFormat15);
        org.apache.commons.math.fraction.Fraction fraction23 = fractionFormat11.parse("0 / 1");
        java.text.NumberFormat numberFormat24 = null;
        java.text.NumberFormat numberFormat25 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat26 = new org.apache.commons.math.fraction.FractionFormat(numberFormat24, numberFormat25);
        java.text.NumberFormat numberFormat27 = fractionFormat26.getDenominatorFormat();
        java.text.NumberFormat numberFormat28 = fractionFormat26.getNumeratorFormat();
        java.text.NumberFormat numberFormat29 = fractionFormat26.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat30 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj32 = fractionFormat30.parseObject("0 / 1");
        java.lang.Object obj34 = fractionFormat30.parseObject("0 / 1");
        java.text.NumberFormat numberFormat35 = fractionFormat30.getNumeratorFormat();
        java.lang.Object obj36 = numberFormat35.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat37 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj39 = fractionFormat37.parseObject("0 / 1");
        java.lang.Object obj41 = fractionFormat37.parseObject("0 / 1");
        java.text.NumberFormat numberFormat42 = fractionFormat37.getNumeratorFormat();
        java.text.NumberFormat numberFormat43 = fractionFormat37.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat44 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator46 = fractionFormat44.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat47 = fractionFormat44.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat48 = new org.apache.commons.math.fraction.FractionFormat(numberFormat43, numberFormat47);
        org.apache.commons.math.fraction.FractionFormat fractionFormat49 = new org.apache.commons.math.fraction.FractionFormat(numberFormat35, numberFormat47);
        fractionFormat26.setNumeratorFormat(numberFormat35);
        org.apache.commons.math.fraction.Fraction fraction52 = fractionFormat26.parse("10");
        java.lang.StringBuffer stringBuffer53 = null;
        java.text.FieldPosition fieldPosition54 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer55 = fractionFormat11.format(fraction52, stringBuffer53, fieldPosition54);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertNotNull(fractionFormat7);
        org.junit.Assert.assertNotNull(attributedCharacterIterator9);
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertNotNull(fractionFormat12);
        org.junit.Assert.assertNotNull(attributedCharacterIterator14);
        org.junit.Assert.assertNotNull(numberFormat15);
        org.junit.Assert.assertNotNull(fractionFormat16);
        org.junit.Assert.assertNotNull(attributedCharacterIterator18);
        org.junit.Assert.assertNotNull(numberFormat19);
        org.junit.Assert.assertNotNull(fraction23);
        org.junit.Assert.assertNull(numberFormat27);
        org.junit.Assert.assertNull(numberFormat28);
        org.junit.Assert.assertNull(numberFormat29);
        org.junit.Assert.assertNotNull(fractionFormat30);
        org.junit.Assert.assertNotNull(obj32);
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertNotNull(numberFormat35);
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertNotNull(fractionFormat37);
        org.junit.Assert.assertNotNull(obj39);
        org.junit.Assert.assertNotNull(obj41);
        org.junit.Assert.assertNotNull(numberFormat42);
        org.junit.Assert.assertNotNull(numberFormat43);
        org.junit.Assert.assertNotNull(fractionFormat44);
        org.junit.Assert.assertNotNull(attributedCharacterIterator46);
        org.junit.Assert.assertNotNull(numberFormat47);
        org.junit.Assert.assertNotNull(fraction52);
    }

    @Test
    public void test0261() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0261");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.text.NumberFormat numberFormat3 = fractionFormat2.getDenominatorFormat();
        java.text.NumberFormat numberFormat4 = fractionFormat2.getNumeratorFormat();
        java.text.NumberFormat numberFormat5 = fractionFormat2.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat6 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator8 = fractionFormat6.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat9 = fractionFormat6.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat10 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator12 = fractionFormat10.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat13 = fractionFormat10.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat14 = new org.apache.commons.math.fraction.FractionFormat(numberFormat9, numberFormat13);
        fractionFormat2.setNumeratorFormat(numberFormat9);
        org.apache.commons.math.fraction.FractionFormat fractionFormat16 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj18 = fractionFormat16.parseObject("0 / 1");
        java.text.NumberFormat numberFormat19 = fractionFormat16.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat20 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator22 = fractionFormat20.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat23 = fractionFormat20.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat24 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator26 = fractionFormat24.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat27 = fractionFormat24.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat28 = new org.apache.commons.math.fraction.FractionFormat(numberFormat23, numberFormat27);
        org.apache.commons.math.fraction.FractionFormat fractionFormat29 = new org.apache.commons.math.fraction.FractionFormat(numberFormat19, numberFormat23);
        org.apache.commons.math.fraction.FractionFormat fractionFormat30 = new org.apache.commons.math.fraction.FractionFormat(numberFormat9, numberFormat19);
        org.apache.commons.math.fraction.FractionFormat fractionFormat31 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj33 = fractionFormat31.parseObject("0 / 1");
        java.lang.Object obj35 = fractionFormat31.parseObject("0 / 1");
        java.text.NumberFormat numberFormat36 = fractionFormat31.getNumeratorFormat();
        java.lang.Object obj37 = numberFormat36.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat38 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj40 = fractionFormat38.parseObject("0 / 1");
        java.lang.Object obj42 = fractionFormat38.parseObject("0 / 1");
        java.text.NumberFormat numberFormat43 = fractionFormat38.getNumeratorFormat();
        java.text.NumberFormat numberFormat44 = fractionFormat38.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat45 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator47 = fractionFormat45.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat48 = fractionFormat45.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat49 = new org.apache.commons.math.fraction.FractionFormat(numberFormat44, numberFormat48);
        org.apache.commons.math.fraction.FractionFormat fractionFormat50 = new org.apache.commons.math.fraction.FractionFormat(numberFormat36, numberFormat48);
        java.text.NumberFormat numberFormat51 = fractionFormat50.getNumeratorFormat();
        fractionFormat30.setDenominatorFormat(numberFormat51);
        java.lang.Class<?> wildcardClass53 = fractionFormat30.getClass();
        org.junit.Assert.assertNull(numberFormat3);
        org.junit.Assert.assertNull(numberFormat4);
        org.junit.Assert.assertNull(numberFormat5);
        org.junit.Assert.assertNotNull(fractionFormat6);
        org.junit.Assert.assertNotNull(attributedCharacterIterator8);
        org.junit.Assert.assertNotNull(numberFormat9);
        org.junit.Assert.assertNotNull(fractionFormat10);
        org.junit.Assert.assertNotNull(attributedCharacterIterator12);
        org.junit.Assert.assertNotNull(numberFormat13);
        org.junit.Assert.assertNotNull(fractionFormat16);
        org.junit.Assert.assertNotNull(obj18);
        org.junit.Assert.assertNotNull(numberFormat19);
        org.junit.Assert.assertNotNull(fractionFormat20);
        org.junit.Assert.assertNotNull(attributedCharacterIterator22);
        org.junit.Assert.assertNotNull(numberFormat23);
        org.junit.Assert.assertNotNull(fractionFormat24);
        org.junit.Assert.assertNotNull(attributedCharacterIterator26);
        org.junit.Assert.assertNotNull(numberFormat27);
        org.junit.Assert.assertNotNull(fractionFormat31);
        org.junit.Assert.assertNotNull(obj33);
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertNotNull(numberFormat36);
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertNotNull(fractionFormat38);
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertNotNull(numberFormat43);
        org.junit.Assert.assertNotNull(numberFormat44);
        org.junit.Assert.assertNotNull(fractionFormat45);
        org.junit.Assert.assertNotNull(attributedCharacterIterator47);
        org.junit.Assert.assertNotNull(numberFormat48);
        org.junit.Assert.assertNotNull(numberFormat51);
        org.junit.Assert.assertNotNull(wildcardClass53);
    }

    @Test
    public void test0262() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0262");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj6 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat7 = fractionFormat0.getNumeratorFormat();
        java.lang.Object obj9 = fractionFormat0.parseObject("-1 / 1");
        java.text.ParsePosition parsePosition11 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj12 = fractionFormat0.parseObject("10", parsePosition11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(obj6);
        org.junit.Assert.assertNotNull(numberFormat7);
        org.junit.Assert.assertNotNull(obj9);
    }

    @Test
    public void test0263() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0263");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        org.apache.commons.math.fraction.FractionFormat fractionFormat3 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.Fraction fraction5 = fractionFormat3.parse("0 / 1");
        java.lang.String str6 = org.apache.commons.math.fraction.FractionFormat.formatFraction(fraction5);
        java.lang.String str7 = org.apache.commons.math.fraction.FractionFormat.formatFraction(fraction5);
        java.lang.String str8 = org.apache.commons.math.fraction.FractionFormat.formatFraction(fraction5);
        java.lang.String str9 = org.apache.commons.math.fraction.FractionFormat.formatFraction(fraction5);
        java.lang.String str10 = org.apache.commons.math.fraction.FractionFormat.formatFraction(fraction5);
        java.lang.String str11 = org.apache.commons.math.fraction.FractionFormat.formatFraction(fraction5);
        java.lang.StringBuffer stringBuffer12 = null;
        java.text.FieldPosition fieldPosition13 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer14 = fractionFormat0.format(fraction5, stringBuffer12, fieldPosition13);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(fractionFormat3);
        org.junit.Assert.assertNotNull(fraction5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "0 / 1" + "'", str6, "0 / 1");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "0 / 1" + "'", str7, "0 / 1");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "0 / 1" + "'", str8, "0 / 1");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "0 / 1" + "'", str9, "0 / 1");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "0 / 1" + "'", str10, "0 / 1");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "0 / 1" + "'", str11, "0 / 1");
    }

    @Test
    public void test0264() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0264");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        java.text.NumberFormat numberFormat2 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat3 = new org.apache.commons.math.fraction.FractionFormat(numberFormat1, numberFormat2);
        java.text.NumberFormat numberFormat4 = fractionFormat3.getDenominatorFormat();
        java.text.NumberFormat numberFormat5 = fractionFormat3.getNumeratorFormat();
        java.text.NumberFormat numberFormat6 = fractionFormat3.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat7 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator9 = fractionFormat7.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat10 = fractionFormat7.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator13 = fractionFormat11.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat14 = fractionFormat11.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat15 = new org.apache.commons.math.fraction.FractionFormat(numberFormat10, numberFormat14);
        fractionFormat3.setNumeratorFormat(numberFormat10);
        org.apache.commons.math.fraction.FractionFormat fractionFormat17 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj19 = fractionFormat17.parseObject("0 / 1");
        java.text.NumberFormat numberFormat20 = fractionFormat17.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat21 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator23 = fractionFormat21.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat24 = fractionFormat21.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat25 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator27 = fractionFormat25.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat28 = fractionFormat25.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat29 = new org.apache.commons.math.fraction.FractionFormat(numberFormat24, numberFormat28);
        org.apache.commons.math.fraction.FractionFormat fractionFormat30 = new org.apache.commons.math.fraction.FractionFormat(numberFormat20, numberFormat24);
        org.apache.commons.math.fraction.FractionFormat fractionFormat31 = new org.apache.commons.math.fraction.FractionFormat(numberFormat10, numberFormat20);
        org.apache.commons.math.fraction.FractionFormat fractionFormat32 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat10);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj34 = numberFormat10.parseObject("hi!");
            org.junit.Assert.fail("Expected exception of type java.text.ParseException; message: Format.parseObject(String) failed");
        } catch (java.text.ParseException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(numberFormat4);
        org.junit.Assert.assertNull(numberFormat5);
        org.junit.Assert.assertNull(numberFormat6);
        org.junit.Assert.assertNotNull(fractionFormat7);
        org.junit.Assert.assertNotNull(attributedCharacterIterator9);
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertNotNull(fractionFormat11);
        org.junit.Assert.assertNotNull(attributedCharacterIterator13);
        org.junit.Assert.assertNotNull(numberFormat14);
        org.junit.Assert.assertNotNull(fractionFormat17);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(numberFormat20);
        org.junit.Assert.assertNotNull(fractionFormat21);
        org.junit.Assert.assertNotNull(attributedCharacterIterator23);
        org.junit.Assert.assertNotNull(numberFormat24);
        org.junit.Assert.assertNotNull(fractionFormat25);
        org.junit.Assert.assertNotNull(attributedCharacterIterator27);
        org.junit.Assert.assertNotNull(numberFormat28);
    }

    @Test
    public void test0265() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0265");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.text.NumberFormat numberFormat3 = fractionFormat2.getDenominatorFormat();
        java.text.NumberFormat numberFormat4 = fractionFormat2.getNumeratorFormat();
        java.text.NumberFormat numberFormat5 = fractionFormat2.getNumeratorFormat();
        java.text.NumberFormat numberFormat6 = fractionFormat2.getDenominatorFormat();
        java.lang.Object obj7 = fractionFormat2.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat8 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj10 = fractionFormat8.parseObject("0 / 1");
        java.lang.Object obj12 = fractionFormat8.parseObject("0 / 1");
        java.text.NumberFormat numberFormat13 = fractionFormat8.getNumeratorFormat();
        java.text.NumberFormat numberFormat14 = fractionFormat8.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat15 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator17 = fractionFormat15.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat18 = fractionFormat15.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat19 = new org.apache.commons.math.fraction.FractionFormat(numberFormat14, numberFormat18);
        org.apache.commons.math.fraction.FractionFormat fractionFormat20 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator22 = fractionFormat20.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat23 = fractionFormat20.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat24 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator26 = fractionFormat24.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat27 = fractionFormat24.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat28 = new org.apache.commons.math.fraction.FractionFormat(numberFormat23, numberFormat27);
        org.apache.commons.math.fraction.FractionFormat fractionFormat29 = new org.apache.commons.math.fraction.FractionFormat(numberFormat14, numberFormat27);
        java.text.NumberFormat numberFormat30 = fractionFormat29.getDenominatorFormat();
        fractionFormat2.setDenominatorFormat(numberFormat30);
        java.text.ParsePosition parsePosition33 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj34 = fractionFormat2.parseObject("hi!", parsePosition33);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(numberFormat3);
        org.junit.Assert.assertNull(numberFormat4);
        org.junit.Assert.assertNull(numberFormat5);
        org.junit.Assert.assertNull(numberFormat6);
        org.junit.Assert.assertNotNull(obj7);
        org.junit.Assert.assertNotNull(fractionFormat8);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertNotNull(numberFormat13);
        org.junit.Assert.assertNotNull(numberFormat14);
        org.junit.Assert.assertNotNull(fractionFormat15);
        org.junit.Assert.assertNotNull(attributedCharacterIterator17);
        org.junit.Assert.assertNotNull(numberFormat18);
        org.junit.Assert.assertNotNull(fractionFormat20);
        org.junit.Assert.assertNotNull(attributedCharacterIterator22);
        org.junit.Assert.assertNotNull(numberFormat23);
        org.junit.Assert.assertNotNull(fractionFormat24);
        org.junit.Assert.assertNotNull(attributedCharacterIterator26);
        org.junit.Assert.assertNotNull(numberFormat27);
        org.junit.Assert.assertNotNull(numberFormat30);
    }

    @Test
    public void test0266() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0266");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.lang.Object obj3 = fractionFormat2.clone();
        java.lang.Object obj4 = fractionFormat2.clone();
        java.text.NumberFormat numberFormat5 = fractionFormat2.getNumeratorFormat();
        java.text.ParsePosition parsePosition7 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj8 = fractionFormat2.parseObject("100", parsePosition7);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(obj3);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNull(numberFormat5);
    }

    @Test
    public void test0267() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0267");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.text.NumberFormat numberFormat3 = fractionFormat2.getDenominatorFormat();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj5 = numberFormat3.parseObject("hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(numberFormat3);
    }

    @Test
    public void test0268() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0268");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.text.NumberFormat numberFormat3 = fractionFormat2.getDenominatorFormat();
        java.text.NumberFormat numberFormat4 = fractionFormat2.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj7 = fractionFormat5.parseObject("0 / 1");
        java.lang.Object obj9 = fractionFormat5.parseObject("0 / 1");
        java.text.NumberFormat numberFormat10 = fractionFormat5.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj13 = fractionFormat11.parseObject("0 / 1");
        java.text.NumberFormat numberFormat14 = fractionFormat11.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat15 = new org.apache.commons.math.fraction.FractionFormat(numberFormat10, numberFormat14);
        java.text.AttributedCharacterIterator attributedCharacterIterator17 = numberFormat10.formatToCharacterIterator((java.lang.Object) (-1));
        fractionFormat2.setDenominatorFormat(numberFormat10);
        java.lang.Object obj19 = numberFormat10.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat20 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj22 = fractionFormat20.parseObject("0 / 1");
        java.lang.Object obj24 = fractionFormat20.parseObject("0 / 1");
        java.text.NumberFormat numberFormat25 = fractionFormat20.getNumeratorFormat();
        java.lang.Object obj26 = numberFormat25.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat27 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj29 = fractionFormat27.parseObject("0 / 1");
        java.lang.Object obj31 = fractionFormat27.parseObject("0 / 1");
        java.text.NumberFormat numberFormat32 = fractionFormat27.getNumeratorFormat();
        java.text.NumberFormat numberFormat33 = fractionFormat27.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat34 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator36 = fractionFormat34.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat37 = fractionFormat34.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat38 = new org.apache.commons.math.fraction.FractionFormat(numberFormat33, numberFormat37);
        org.apache.commons.math.fraction.FractionFormat fractionFormat39 = new org.apache.commons.math.fraction.FractionFormat(numberFormat25, numberFormat37);
        org.apache.commons.math.fraction.FractionFormat fractionFormat40 = new org.apache.commons.math.fraction.FractionFormat(numberFormat10, numberFormat25);
        java.lang.Object obj42 = fractionFormat40.parseObject("-1 / 1");
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.fraction.Fraction fraction44 = fractionFormat40.parse("hi!");
            org.junit.Assert.fail("Expected exception of type java.text.ParseException; message: Unparseable fraction number: \"hi!\"");
        } catch (java.text.ParseException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(numberFormat3);
        org.junit.Assert.assertNull(numberFormat4);
        org.junit.Assert.assertNotNull(fractionFormat5);
        org.junit.Assert.assertNotNull(obj7);
        org.junit.Assert.assertNotNull(obj9);
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertNotNull(fractionFormat11);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertNotNull(numberFormat14);
        org.junit.Assert.assertNotNull(attributedCharacterIterator17);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(fractionFormat20);
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertNotNull(numberFormat25);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertNotNull(fractionFormat27);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertNotNull(numberFormat32);
        org.junit.Assert.assertNotNull(numberFormat33);
        org.junit.Assert.assertNotNull(fractionFormat34);
        org.junit.Assert.assertNotNull(attributedCharacterIterator36);
        org.junit.Assert.assertNotNull(numberFormat37);
        org.junit.Assert.assertNotNull(obj42);
    }

    @Test
    public void test0269() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0269");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat5 = fractionFormat0.getNumeratorFormat();
        java.text.NumberFormat numberFormat6 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat7 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator9 = fractionFormat7.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat10 = fractionFormat7.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = new org.apache.commons.math.fraction.FractionFormat(numberFormat6, numberFormat10);
        org.apache.commons.math.fraction.FractionFormat fractionFormat12 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator14 = fractionFormat12.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat15 = fractionFormat12.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat16 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator18 = fractionFormat16.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat19 = fractionFormat16.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat20 = new org.apache.commons.math.fraction.FractionFormat(numberFormat15, numberFormat19);
        org.apache.commons.math.fraction.FractionFormat fractionFormat21 = new org.apache.commons.math.fraction.FractionFormat(numberFormat6, numberFormat19);
        java.text.NumberFormat numberFormat22 = fractionFormat21.getNumeratorFormat();
        java.text.NumberFormat numberFormat23 = null;
        java.text.NumberFormat numberFormat24 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat25 = new org.apache.commons.math.fraction.FractionFormat(numberFormat23, numberFormat24);
        java.text.NumberFormat numberFormat26 = fractionFormat25.getDenominatorFormat();
        java.text.NumberFormat numberFormat27 = fractionFormat25.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat28 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator30 = fractionFormat28.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat31 = fractionFormat28.getDenominatorFormat();
        fractionFormat25.setNumeratorFormat(numberFormat31);
        java.lang.Object obj33 = numberFormat31.clone();
        java.lang.String str35 = numberFormat31.format((java.lang.Object) (short) 10);
        java.text.NumberFormat numberFormat36 = null;
        java.text.NumberFormat numberFormat37 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat38 = new org.apache.commons.math.fraction.FractionFormat(numberFormat36, numberFormat37);
        java.text.NumberFormat numberFormat39 = fractionFormat38.getDenominatorFormat();
        java.text.NumberFormat numberFormat40 = fractionFormat38.getNumeratorFormat();
        java.text.NumberFormat numberFormat41 = fractionFormat38.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat42 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator44 = fractionFormat42.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat45 = fractionFormat42.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat46 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator48 = fractionFormat46.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat49 = fractionFormat46.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat50 = new org.apache.commons.math.fraction.FractionFormat(numberFormat45, numberFormat49);
        fractionFormat38.setNumeratorFormat(numberFormat45);
        org.apache.commons.math.fraction.FractionFormat fractionFormat52 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj54 = fractionFormat52.parseObject("0 / 1");
        java.text.NumberFormat numberFormat55 = fractionFormat52.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat56 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator58 = fractionFormat56.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat59 = fractionFormat56.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat60 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator62 = fractionFormat60.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat63 = fractionFormat60.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat64 = new org.apache.commons.math.fraction.FractionFormat(numberFormat59, numberFormat63);
        org.apache.commons.math.fraction.FractionFormat fractionFormat65 = new org.apache.commons.math.fraction.FractionFormat(numberFormat55, numberFormat59);
        org.apache.commons.math.fraction.FractionFormat fractionFormat66 = new org.apache.commons.math.fraction.FractionFormat(numberFormat45, numberFormat55);
        org.apache.commons.math.fraction.FractionFormat fractionFormat67 = new org.apache.commons.math.fraction.FractionFormat(numberFormat31, numberFormat55);
        java.lang.Object obj68 = fractionFormat67.clone();
        java.lang.Object obj69 = fractionFormat67.clone();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str70 = numberFormat22.format(obj69);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot format given Object as a Number");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertNotNull(fractionFormat7);
        org.junit.Assert.assertNotNull(attributedCharacterIterator9);
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertNotNull(fractionFormat12);
        org.junit.Assert.assertNotNull(attributedCharacterIterator14);
        org.junit.Assert.assertNotNull(numberFormat15);
        org.junit.Assert.assertNotNull(fractionFormat16);
        org.junit.Assert.assertNotNull(attributedCharacterIterator18);
        org.junit.Assert.assertNotNull(numberFormat19);
        org.junit.Assert.assertNotNull(numberFormat22);
        org.junit.Assert.assertNull(numberFormat26);
        org.junit.Assert.assertNull(numberFormat27);
        org.junit.Assert.assertNotNull(fractionFormat28);
        org.junit.Assert.assertNotNull(attributedCharacterIterator30);
        org.junit.Assert.assertNotNull(numberFormat31);
        org.junit.Assert.assertNotNull(obj33);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "10" + "'", str35, "10");
        org.junit.Assert.assertNull(numberFormat39);
        org.junit.Assert.assertNull(numberFormat40);
        org.junit.Assert.assertNull(numberFormat41);
        org.junit.Assert.assertNotNull(fractionFormat42);
        org.junit.Assert.assertNotNull(attributedCharacterIterator44);
        org.junit.Assert.assertNotNull(numberFormat45);
        org.junit.Assert.assertNotNull(fractionFormat46);
        org.junit.Assert.assertNotNull(attributedCharacterIterator48);
        org.junit.Assert.assertNotNull(numberFormat49);
        org.junit.Assert.assertNotNull(fractionFormat52);
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertNotNull(numberFormat55);
        org.junit.Assert.assertNotNull(fractionFormat56);
        org.junit.Assert.assertNotNull(attributedCharacterIterator58);
        org.junit.Assert.assertNotNull(numberFormat59);
        org.junit.Assert.assertNotNull(fractionFormat60);
        org.junit.Assert.assertNotNull(attributedCharacterIterator62);
        org.junit.Assert.assertNotNull(numberFormat63);
        org.junit.Assert.assertNotNull(obj68);
        org.junit.Assert.assertNotNull(obj69);
    }

    @Test
    public void test0270() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0270");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat1 = null;
        java.text.NumberFormat numberFormat2 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat3 = new org.apache.commons.math.fraction.FractionFormat(numberFormat1, numberFormat2);
        java.text.NumberFormat numberFormat4 = fractionFormat3.getDenominatorFormat();
        java.text.NumberFormat numberFormat5 = fractionFormat3.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat6 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator8 = fractionFormat6.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat9 = fractionFormat6.getDenominatorFormat();
        fractionFormat3.setNumeratorFormat(numberFormat9);
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj13 = fractionFormat11.parseObject("0 / 1");
        java.text.NumberFormat numberFormat14 = fractionFormat11.getNumeratorFormat();
        fractionFormat3.setNumeratorFormat(numberFormat14);
        java.lang.Object obj17 = numberFormat14.parseObject("0 / 1");
        java.lang.StringBuffer stringBuffer18 = null;
        java.text.FieldPosition fieldPosition19 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer20 = fractionFormat0.format(obj17, stringBuffer18, fieldPosition19);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNull(numberFormat4);
        org.junit.Assert.assertNull(numberFormat5);
        org.junit.Assert.assertNotNull(fractionFormat6);
        org.junit.Assert.assertNotNull(attributedCharacterIterator8);
        org.junit.Assert.assertNotNull(numberFormat9);
        org.junit.Assert.assertNotNull(fractionFormat11);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertNotNull(numberFormat14);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 0L + "'", obj17, 0L);
    }

    @Test
    public void test0271() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0271");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        java.text.NumberFormat numberFormat2 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat3 = new org.apache.commons.math.fraction.FractionFormat(numberFormat1, numberFormat2);
        java.text.NumberFormat numberFormat4 = fractionFormat3.getDenominatorFormat();
        java.text.NumberFormat numberFormat5 = fractionFormat3.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat6 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator8 = fractionFormat6.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat9 = fractionFormat6.getDenominatorFormat();
        fractionFormat3.setNumeratorFormat(numberFormat9);
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj13 = fractionFormat11.parseObject("0 / 1");
        java.text.NumberFormat numberFormat14 = fractionFormat11.getNumeratorFormat();
        fractionFormat3.setNumeratorFormat(numberFormat14);
        org.apache.commons.math.fraction.FractionFormat fractionFormat16 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat14);
        org.apache.commons.math.fraction.FractionFormat fractionFormat17 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj19 = fractionFormat17.parseObject("0 / 1");
        java.lang.Object obj21 = fractionFormat17.parseObject("0 / 1");
        java.text.NumberFormat numberFormat22 = fractionFormat17.getNumeratorFormat();
        java.text.NumberFormat numberFormat23 = fractionFormat17.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat24 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator26 = fractionFormat24.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat27 = fractionFormat24.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat28 = new org.apache.commons.math.fraction.FractionFormat(numberFormat23, numberFormat27);
        org.apache.commons.math.fraction.FractionFormat fractionFormat29 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator31 = fractionFormat29.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat32 = fractionFormat29.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat33 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator35 = fractionFormat33.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat36 = fractionFormat33.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat37 = new org.apache.commons.math.fraction.FractionFormat(numberFormat32, numberFormat36);
        fractionFormat28.setNumeratorFormat(numberFormat32);
        java.text.NumberFormat numberFormat39 = fractionFormat28.getDenominatorFormat();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str40 = numberFormat14.format((java.lang.Object) fractionFormat28);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot format given Object as a Number");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(numberFormat4);
        org.junit.Assert.assertNull(numberFormat5);
        org.junit.Assert.assertNotNull(fractionFormat6);
        org.junit.Assert.assertNotNull(attributedCharacterIterator8);
        org.junit.Assert.assertNotNull(numberFormat9);
        org.junit.Assert.assertNotNull(fractionFormat11);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertNotNull(numberFormat14);
        org.junit.Assert.assertNotNull(fractionFormat17);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertNotNull(numberFormat22);
        org.junit.Assert.assertNotNull(numberFormat23);
        org.junit.Assert.assertNotNull(fractionFormat24);
        org.junit.Assert.assertNotNull(attributedCharacterIterator26);
        org.junit.Assert.assertNotNull(numberFormat27);
        org.junit.Assert.assertNotNull(fractionFormat29);
        org.junit.Assert.assertNotNull(attributedCharacterIterator31);
        org.junit.Assert.assertNotNull(numberFormat32);
        org.junit.Assert.assertNotNull(fractionFormat33);
        org.junit.Assert.assertNotNull(attributedCharacterIterator35);
        org.junit.Assert.assertNotNull(numberFormat36);
        org.junit.Assert.assertNotNull(numberFormat39);
    }

    @Test
    public void test0272() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0272");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat1 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat3 = fractionFormat2.getNumeratorFormat();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str4 = numberFormat1.format((java.lang.Object) fractionFormat2);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot format given Object as a Number");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(numberFormat1);
        org.junit.Assert.assertNotNull(fractionFormat2);
        org.junit.Assert.assertNotNull(numberFormat3);
    }

    @Test
    public void test0273() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0273");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator2 = fractionFormat0.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat3 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat4 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator6 = fractionFormat4.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat7 = fractionFormat4.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat8 = new org.apache.commons.math.fraction.FractionFormat(numberFormat3, numberFormat7);
        java.text.NumberFormat numberFormat9 = fractionFormat8.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat10 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj12 = fractionFormat10.parseObject("0 / 1");
        java.lang.Object obj14 = fractionFormat10.parseObject("0 / 1");
        java.text.NumberFormat numberFormat15 = fractionFormat10.getNumeratorFormat();
        java.text.NumberFormat numberFormat16 = fractionFormat10.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat17 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator19 = fractionFormat17.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat20 = fractionFormat17.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat21 = new org.apache.commons.math.fraction.FractionFormat(numberFormat16, numberFormat20);
        org.apache.commons.math.fraction.FractionFormat fractionFormat22 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator24 = fractionFormat22.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat25 = fractionFormat22.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat26 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator28 = fractionFormat26.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat29 = fractionFormat26.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat30 = new org.apache.commons.math.fraction.FractionFormat(numberFormat25, numberFormat29);
        org.apache.commons.math.fraction.FractionFormat fractionFormat31 = new org.apache.commons.math.fraction.FractionFormat(numberFormat16, numberFormat29);
        org.apache.commons.math.fraction.FractionFormat fractionFormat32 = new org.apache.commons.math.fraction.FractionFormat(numberFormat9, numberFormat29);
        org.apache.commons.math.fraction.FractionFormat fractionFormat33 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator35 = fractionFormat33.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat36 = fractionFormat33.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat37 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator39 = fractionFormat37.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat40 = fractionFormat37.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat41 = new org.apache.commons.math.fraction.FractionFormat(numberFormat36, numberFormat40);
        java.lang.Class<?> wildcardClass42 = numberFormat40.getClass();
        // The following exception was thrown during execution in test generation
        try {
            java.text.AttributedCharacterIterator attributedCharacterIterator43 = numberFormat29.formatToCharacterIterator((java.lang.Object) numberFormat40);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot format given Object as a Number");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(attributedCharacterIterator2);
        org.junit.Assert.assertNotNull(numberFormat3);
        org.junit.Assert.assertNotNull(fractionFormat4);
        org.junit.Assert.assertNotNull(attributedCharacterIterator6);
        org.junit.Assert.assertNotNull(numberFormat7);
        org.junit.Assert.assertNotNull(numberFormat9);
        org.junit.Assert.assertNotNull(fractionFormat10);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertNotNull(numberFormat15);
        org.junit.Assert.assertNotNull(numberFormat16);
        org.junit.Assert.assertNotNull(fractionFormat17);
        org.junit.Assert.assertNotNull(attributedCharacterIterator19);
        org.junit.Assert.assertNotNull(numberFormat20);
        org.junit.Assert.assertNotNull(fractionFormat22);
        org.junit.Assert.assertNotNull(attributedCharacterIterator24);
        org.junit.Assert.assertNotNull(numberFormat25);
        org.junit.Assert.assertNotNull(fractionFormat26);
        org.junit.Assert.assertNotNull(attributedCharacterIterator28);
        org.junit.Assert.assertNotNull(numberFormat29);
        org.junit.Assert.assertNotNull(fractionFormat33);
        org.junit.Assert.assertNotNull(attributedCharacterIterator35);
        org.junit.Assert.assertNotNull(numberFormat36);
        org.junit.Assert.assertNotNull(fractionFormat37);
        org.junit.Assert.assertNotNull(attributedCharacterIterator39);
        org.junit.Assert.assertNotNull(numberFormat40);
        org.junit.Assert.assertNotNull(wildcardClass42);
    }

    @Test
    public void test0274() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0274");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.text.NumberFormat numberFormat3 = fractionFormat2.getDenominatorFormat();
        java.text.NumberFormat numberFormat4 = fractionFormat2.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj7 = fractionFormat5.parseObject("0 / 1");
        java.lang.Object obj9 = fractionFormat5.parseObject("0 / 1");
        java.text.NumberFormat numberFormat10 = fractionFormat5.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj13 = fractionFormat11.parseObject("0 / 1");
        java.text.NumberFormat numberFormat14 = fractionFormat11.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat15 = new org.apache.commons.math.fraction.FractionFormat(numberFormat10, numberFormat14);
        java.text.AttributedCharacterIterator attributedCharacterIterator17 = numberFormat10.formatToCharacterIterator((java.lang.Object) (-1));
        fractionFormat2.setDenominatorFormat(numberFormat10);
        org.apache.commons.math.fraction.FractionFormat fractionFormat19 = new org.apache.commons.math.fraction.FractionFormat(numberFormat10);
        java.text.ParsePosition parsePosition21 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.fraction.Fraction fraction22 = fractionFormat19.parse("10 / 1", parsePosition21);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(numberFormat3);
        org.junit.Assert.assertNull(numberFormat4);
        org.junit.Assert.assertNotNull(fractionFormat5);
        org.junit.Assert.assertNotNull(obj7);
        org.junit.Assert.assertNotNull(obj9);
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertNotNull(fractionFormat11);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertNotNull(numberFormat14);
        org.junit.Assert.assertNotNull(attributedCharacterIterator17);
    }

    @Test
    public void test0275() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0275");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat5 = fractionFormat0.getNumeratorFormat();
        java.text.NumberFormat numberFormat6 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat7 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat8 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj10 = fractionFormat8.parseObject("0 / 1");
        java.lang.Object obj12 = fractionFormat8.parseObject("0 / 1");
        java.text.NumberFormat numberFormat13 = fractionFormat8.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat14 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj16 = fractionFormat14.parseObject("0 / 1");
        java.text.NumberFormat numberFormat17 = fractionFormat14.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat18 = new org.apache.commons.math.fraction.FractionFormat(numberFormat13, numberFormat17);
        org.apache.commons.math.fraction.FractionFormat fractionFormat19 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj21 = fractionFormat19.parseObject("0 / 1");
        java.lang.Object obj23 = fractionFormat19.parseObject("0 / 1");
        java.text.NumberFormat numberFormat24 = fractionFormat19.getNumeratorFormat();
        fractionFormat18.setDenominatorFormat(numberFormat24);
        java.lang.Object obj26 = numberFormat24.clone();
        fractionFormat7.setNumeratorFormat(numberFormat24);
        java.lang.Object obj28 = numberFormat24.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat29 = new org.apache.commons.math.fraction.FractionFormat(numberFormat24);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str30 = numberFormat6.format((java.lang.Object) fractionFormat29);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot format given Object as a Number");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertNotNull(fractionFormat7);
        org.junit.Assert.assertNotNull(fractionFormat8);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertNotNull(numberFormat13);
        org.junit.Assert.assertNotNull(fractionFormat14);
        org.junit.Assert.assertNotNull(obj16);
        org.junit.Assert.assertNotNull(numberFormat17);
        org.junit.Assert.assertNotNull(fractionFormat19);
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertNotNull(numberFormat24);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertNotNull(obj28);
    }

    @Test
    public void test0276() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0276");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator2 = fractionFormat0.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat3 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat4 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator6 = fractionFormat4.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat7 = fractionFormat4.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat8 = new org.apache.commons.math.fraction.FractionFormat(numberFormat3, numberFormat7);
        java.text.NumberFormat numberFormat9 = fractionFormat8.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat10 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj13 = fractionFormat11.parseObject("0 / 1");
        java.lang.Object obj15 = fractionFormat11.parseObject("0 / 1");
        java.text.NumberFormat numberFormat16 = fractionFormat11.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat17 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj19 = fractionFormat17.parseObject("0 / 1");
        java.text.NumberFormat numberFormat20 = fractionFormat17.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat21 = new org.apache.commons.math.fraction.FractionFormat(numberFormat16, numberFormat20);
        org.apache.commons.math.fraction.FractionFormat fractionFormat22 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj24 = fractionFormat22.parseObject("0 / 1");
        java.lang.Object obj26 = fractionFormat22.parseObject("0 / 1");
        java.text.NumberFormat numberFormat27 = fractionFormat22.getNumeratorFormat();
        fractionFormat21.setDenominatorFormat(numberFormat27);
        java.lang.Object obj29 = numberFormat27.clone();
        fractionFormat10.setNumeratorFormat(numberFormat27);
        java.lang.Object obj31 = numberFormat27.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat32 = new org.apache.commons.math.fraction.FractionFormat(numberFormat9, numberFormat27);
        java.text.NumberFormat numberFormat33 = fractionFormat32.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat34 = new org.apache.commons.math.fraction.FractionFormat();
        java.lang.String str36 = fractionFormat34.format((java.lang.Object) 0);
        java.lang.String str38 = fractionFormat34.format((java.lang.Object) (-1));
        java.lang.Class<?> wildcardClass39 = fractionFormat34.getClass();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str40 = numberFormat33.format((java.lang.Object) wildcardClass39);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot format given Object as a Number");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(attributedCharacterIterator2);
        org.junit.Assert.assertNotNull(numberFormat3);
        org.junit.Assert.assertNotNull(fractionFormat4);
        org.junit.Assert.assertNotNull(attributedCharacterIterator6);
        org.junit.Assert.assertNotNull(numberFormat7);
        org.junit.Assert.assertNotNull(numberFormat9);
        org.junit.Assert.assertNotNull(fractionFormat10);
        org.junit.Assert.assertNotNull(fractionFormat11);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertNotNull(numberFormat16);
        org.junit.Assert.assertNotNull(fractionFormat17);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(numberFormat20);
        org.junit.Assert.assertNotNull(fractionFormat22);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertNotNull(numberFormat27);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertNotNull(numberFormat33);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "0 / 1" + "'", str36, "0 / 1");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "-1 / 1" + "'", str38, "-1 / 1");
        org.junit.Assert.assertNotNull(wildcardClass39);
    }

    @Test
    public void test0277() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0277");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.text.NumberFormat numberFormat3 = fractionFormat2.getDenominatorFormat();
        java.text.NumberFormat numberFormat4 = fractionFormat2.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator7 = fractionFormat5.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat8 = fractionFormat5.getDenominatorFormat();
        fractionFormat2.setNumeratorFormat(numberFormat8);
        java.lang.Object obj10 = numberFormat8.clone();
        java.lang.String str12 = numberFormat8.format((java.lang.Object) (short) 10);
        java.text.NumberFormat numberFormat13 = null;
        java.text.NumberFormat numberFormat14 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat15 = new org.apache.commons.math.fraction.FractionFormat(numberFormat13, numberFormat14);
        java.text.NumberFormat numberFormat16 = fractionFormat15.getDenominatorFormat();
        java.text.NumberFormat numberFormat17 = fractionFormat15.getNumeratorFormat();
        java.text.NumberFormat numberFormat18 = fractionFormat15.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat19 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator21 = fractionFormat19.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat22 = fractionFormat19.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat23 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator25 = fractionFormat23.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat26 = fractionFormat23.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat27 = new org.apache.commons.math.fraction.FractionFormat(numberFormat22, numberFormat26);
        fractionFormat15.setNumeratorFormat(numberFormat22);
        org.apache.commons.math.fraction.FractionFormat fractionFormat29 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj31 = fractionFormat29.parseObject("0 / 1");
        java.text.NumberFormat numberFormat32 = fractionFormat29.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat33 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator35 = fractionFormat33.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat36 = fractionFormat33.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat37 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator39 = fractionFormat37.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat40 = fractionFormat37.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat41 = new org.apache.commons.math.fraction.FractionFormat(numberFormat36, numberFormat40);
        org.apache.commons.math.fraction.FractionFormat fractionFormat42 = new org.apache.commons.math.fraction.FractionFormat(numberFormat32, numberFormat36);
        org.apache.commons.math.fraction.FractionFormat fractionFormat43 = new org.apache.commons.math.fraction.FractionFormat(numberFormat22, numberFormat32);
        org.apache.commons.math.fraction.FractionFormat fractionFormat44 = new org.apache.commons.math.fraction.FractionFormat(numberFormat8, numberFormat32);
        java.lang.Object obj45 = fractionFormat44.clone();
        java.lang.Object obj46 = fractionFormat44.clone();
        java.lang.String str48 = fractionFormat44.format((java.lang.Object) (byte) 0);
        java.text.ParsePosition parsePosition50 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.fraction.Fraction fraction51 = fractionFormat44.parse("10", parsePosition50);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(numberFormat3);
        org.junit.Assert.assertNull(numberFormat4);
        org.junit.Assert.assertNotNull(fractionFormat5);
        org.junit.Assert.assertNotNull(attributedCharacterIterator7);
        org.junit.Assert.assertNotNull(numberFormat8);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "10" + "'", str12, "10");
        org.junit.Assert.assertNull(numberFormat16);
        org.junit.Assert.assertNull(numberFormat17);
        org.junit.Assert.assertNull(numberFormat18);
        org.junit.Assert.assertNotNull(fractionFormat19);
        org.junit.Assert.assertNotNull(attributedCharacterIterator21);
        org.junit.Assert.assertNotNull(numberFormat22);
        org.junit.Assert.assertNotNull(fractionFormat23);
        org.junit.Assert.assertNotNull(attributedCharacterIterator25);
        org.junit.Assert.assertNotNull(numberFormat26);
        org.junit.Assert.assertNotNull(fractionFormat29);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertNotNull(numberFormat32);
        org.junit.Assert.assertNotNull(fractionFormat33);
        org.junit.Assert.assertNotNull(attributedCharacterIterator35);
        org.junit.Assert.assertNotNull(numberFormat36);
        org.junit.Assert.assertNotNull(fractionFormat37);
        org.junit.Assert.assertNotNull(attributedCharacterIterator39);
        org.junit.Assert.assertNotNull(numberFormat40);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertNotNull(obj46);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "0 / 1" + "'", str48, "0 / 1");
    }

    @Test
    public void test0278() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0278");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.text.NumberFormat numberFormat3 = fractionFormat2.getDenominatorFormat();
        java.text.NumberFormat numberFormat4 = fractionFormat2.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator7 = fractionFormat5.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat8 = fractionFormat5.getDenominatorFormat();
        fractionFormat2.setNumeratorFormat(numberFormat8);
        java.lang.Object obj10 = numberFormat8.clone();
        java.lang.String str12 = numberFormat8.format((java.lang.Object) (short) 10);
        org.apache.commons.math.fraction.FractionFormat fractionFormat13 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator15 = fractionFormat13.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat16 = fractionFormat13.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat17 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator19 = fractionFormat17.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat20 = fractionFormat17.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat21 = new org.apache.commons.math.fraction.FractionFormat(numberFormat16, numberFormat20);
        org.apache.commons.math.fraction.FractionFormat fractionFormat22 = new org.apache.commons.math.fraction.FractionFormat(numberFormat8, numberFormat16);
        java.text.NumberFormat numberFormat23 = fractionFormat22.getDenominatorFormat();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj25 = numberFormat23.parseObject("hi!");
            org.junit.Assert.fail("Expected exception of type java.text.ParseException; message: Format.parseObject(String) failed");
        } catch (java.text.ParseException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(numberFormat3);
        org.junit.Assert.assertNull(numberFormat4);
        org.junit.Assert.assertNotNull(fractionFormat5);
        org.junit.Assert.assertNotNull(attributedCharacterIterator7);
        org.junit.Assert.assertNotNull(numberFormat8);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "10" + "'", str12, "10");
        org.junit.Assert.assertNotNull(fractionFormat13);
        org.junit.Assert.assertNotNull(attributedCharacterIterator15);
        org.junit.Assert.assertNotNull(numberFormat16);
        org.junit.Assert.assertNotNull(fractionFormat17);
        org.junit.Assert.assertNotNull(attributedCharacterIterator19);
        org.junit.Assert.assertNotNull(numberFormat20);
        org.junit.Assert.assertNotNull(numberFormat23);
    }

    @Test
    public void test0279() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0279");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator2 = fractionFormat0.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat3 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat4 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator6 = fractionFormat4.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat7 = fractionFormat4.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat8 = new org.apache.commons.math.fraction.FractionFormat(numberFormat3, numberFormat7);
        org.apache.commons.math.fraction.FractionFormat fractionFormat9 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj11 = fractionFormat9.parseObject("0 / 1");
        java.lang.Object obj13 = fractionFormat9.parseObject("0 / 1");
        java.text.NumberFormat numberFormat14 = fractionFormat9.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat15 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj17 = fractionFormat15.parseObject("0 / 1");
        java.text.NumberFormat numberFormat18 = fractionFormat15.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat19 = new org.apache.commons.math.fraction.FractionFormat(numberFormat14, numberFormat18);
        java.text.NumberFormat numberFormat20 = fractionFormat19.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat21 = new org.apache.commons.math.fraction.FractionFormat(numberFormat3, numberFormat20);
        org.apache.commons.math.fraction.FractionFormat fractionFormat22 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj24 = fractionFormat22.parseObject("0 / 1");
        java.lang.Object obj26 = fractionFormat22.parseObject("0 / 1");
        java.text.NumberFormat numberFormat27 = fractionFormat22.getNumeratorFormat();
        java.text.NumberFormat numberFormat28 = fractionFormat22.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat29 = new org.apache.commons.math.fraction.FractionFormat(numberFormat28);
        org.apache.commons.math.fraction.FractionFormat fractionFormat30 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj32 = fractionFormat30.parseObject("0 / 1");
        java.lang.Object obj34 = fractionFormat30.parseObject("0 / 1");
        java.text.NumberFormat numberFormat35 = fractionFormat30.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat36 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj38 = fractionFormat36.parseObject("0 / 1");
        java.text.NumberFormat numberFormat39 = fractionFormat36.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat40 = new org.apache.commons.math.fraction.FractionFormat(numberFormat35, numberFormat39);
        org.apache.commons.math.fraction.FractionFormat fractionFormat41 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj43 = fractionFormat41.parseObject("0 / 1");
        java.lang.Object obj45 = fractionFormat41.parseObject("0 / 1");
        java.text.NumberFormat numberFormat46 = fractionFormat41.getNumeratorFormat();
        fractionFormat40.setDenominatorFormat(numberFormat46);
        org.apache.commons.math.fraction.FractionFormat fractionFormat48 = new org.apache.commons.math.fraction.FractionFormat(numberFormat28, numberFormat46);
        fractionFormat21.setNumeratorFormat(numberFormat28);
        org.apache.commons.math.fraction.FractionFormat fractionFormat50 = new org.apache.commons.math.fraction.FractionFormat(numberFormat28);
        java.lang.Class<?> wildcardClass51 = numberFormat28.getClass();
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(attributedCharacterIterator2);
        org.junit.Assert.assertNotNull(numberFormat3);
        org.junit.Assert.assertNotNull(fractionFormat4);
        org.junit.Assert.assertNotNull(attributedCharacterIterator6);
        org.junit.Assert.assertNotNull(numberFormat7);
        org.junit.Assert.assertNotNull(fractionFormat9);
        org.junit.Assert.assertNotNull(obj11);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertNotNull(numberFormat14);
        org.junit.Assert.assertNotNull(fractionFormat15);
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertNotNull(numberFormat18);
        org.junit.Assert.assertNotNull(numberFormat20);
        org.junit.Assert.assertNotNull(fractionFormat22);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertNotNull(numberFormat27);
        org.junit.Assert.assertNotNull(numberFormat28);
        org.junit.Assert.assertNotNull(fractionFormat30);
        org.junit.Assert.assertNotNull(obj32);
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertNotNull(numberFormat35);
        org.junit.Assert.assertNotNull(fractionFormat36);
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertNotNull(numberFormat39);
        org.junit.Assert.assertNotNull(fractionFormat41);
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertNotNull(numberFormat46);
        org.junit.Assert.assertNotNull(wildcardClass51);
    }

    @Test
    public void test0280() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0280");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat5 = fractionFormat0.getNumeratorFormat();
        java.text.NumberFormat numberFormat6 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat7 = new org.apache.commons.math.fraction.FractionFormat(numberFormat6);
        org.apache.commons.math.fraction.FractionFormat fractionFormat8 = new org.apache.commons.math.fraction.FractionFormat(numberFormat6);
        java.text.NumberFormat numberFormat9 = null;
        java.text.NumberFormat numberFormat10 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = new org.apache.commons.math.fraction.FractionFormat(numberFormat9, numberFormat10);
        java.lang.Object obj12 = fractionFormat11.clone();
        java.text.NumberFormat numberFormat13 = null;
        java.text.NumberFormat numberFormat14 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat15 = new org.apache.commons.math.fraction.FractionFormat(numberFormat13, numberFormat14);
        java.text.NumberFormat numberFormat16 = fractionFormat15.getDenominatorFormat();
        java.text.NumberFormat numberFormat17 = fractionFormat15.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat18 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator20 = fractionFormat18.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat21 = fractionFormat18.getDenominatorFormat();
        fractionFormat15.setNumeratorFormat(numberFormat21);
        java.lang.Object obj23 = numberFormat21.clone();
        java.lang.String str25 = numberFormat21.format((java.lang.Object) (short) 10);
        org.apache.commons.math.fraction.FractionFormat fractionFormat26 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator28 = fractionFormat26.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat29 = fractionFormat26.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat30 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator32 = fractionFormat30.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat33 = fractionFormat30.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat34 = new org.apache.commons.math.fraction.FractionFormat(numberFormat29, numberFormat33);
        org.apache.commons.math.fraction.FractionFormat fractionFormat35 = new org.apache.commons.math.fraction.FractionFormat(numberFormat21, numberFormat29);
        fractionFormat11.setDenominatorFormat(numberFormat21);
        fractionFormat8.setDenominatorFormat(numberFormat21);
        java.text.NumberFormat numberFormat38 = null;
        java.text.NumberFormat numberFormat39 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat40 = new org.apache.commons.math.fraction.FractionFormat(numberFormat38, numberFormat39);
        java.text.NumberFormat numberFormat41 = fractionFormat40.getDenominatorFormat();
        java.text.NumberFormat numberFormat42 = fractionFormat40.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat43 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj45 = fractionFormat43.parseObject("0 / 1");
        java.lang.Object obj47 = fractionFormat43.parseObject("0 / 1");
        java.text.NumberFormat numberFormat48 = fractionFormat43.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat49 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj51 = fractionFormat49.parseObject("0 / 1");
        java.text.NumberFormat numberFormat52 = fractionFormat49.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat53 = new org.apache.commons.math.fraction.FractionFormat(numberFormat48, numberFormat52);
        java.text.AttributedCharacterIterator attributedCharacterIterator55 = numberFormat48.formatToCharacterIterator((java.lang.Object) (-1));
        fractionFormat40.setDenominatorFormat(numberFormat48);
        java.lang.Object obj57 = numberFormat48.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat58 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj60 = fractionFormat58.parseObject("0 / 1");
        java.lang.Object obj62 = fractionFormat58.parseObject("0 / 1");
        java.text.NumberFormat numberFormat63 = fractionFormat58.getNumeratorFormat();
        java.lang.Object obj64 = numberFormat63.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat65 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj67 = fractionFormat65.parseObject("0 / 1");
        java.lang.Object obj69 = fractionFormat65.parseObject("0 / 1");
        java.text.NumberFormat numberFormat70 = fractionFormat65.getNumeratorFormat();
        java.text.NumberFormat numberFormat71 = fractionFormat65.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat72 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator74 = fractionFormat72.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat75 = fractionFormat72.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat76 = new org.apache.commons.math.fraction.FractionFormat(numberFormat71, numberFormat75);
        org.apache.commons.math.fraction.FractionFormat fractionFormat77 = new org.apache.commons.math.fraction.FractionFormat(numberFormat63, numberFormat75);
        org.apache.commons.math.fraction.FractionFormat fractionFormat78 = new org.apache.commons.math.fraction.FractionFormat(numberFormat48, numberFormat63);
        // The following exception was thrown during execution in test generation
        try {
            java.text.AttributedCharacterIterator attributedCharacterIterator79 = numberFormat21.formatToCharacterIterator((java.lang.Object) numberFormat48);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot format given Object as a Number");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertNull(numberFormat16);
        org.junit.Assert.assertNull(numberFormat17);
        org.junit.Assert.assertNotNull(fractionFormat18);
        org.junit.Assert.assertNotNull(attributedCharacterIterator20);
        org.junit.Assert.assertNotNull(numberFormat21);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "10" + "'", str25, "10");
        org.junit.Assert.assertNotNull(fractionFormat26);
        org.junit.Assert.assertNotNull(attributedCharacterIterator28);
        org.junit.Assert.assertNotNull(numberFormat29);
        org.junit.Assert.assertNotNull(fractionFormat30);
        org.junit.Assert.assertNotNull(attributedCharacterIterator32);
        org.junit.Assert.assertNotNull(numberFormat33);
        org.junit.Assert.assertNull(numberFormat41);
        org.junit.Assert.assertNull(numberFormat42);
        org.junit.Assert.assertNotNull(fractionFormat43);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertNotNull(numberFormat48);
        org.junit.Assert.assertNotNull(fractionFormat49);
        org.junit.Assert.assertNotNull(obj51);
        org.junit.Assert.assertNotNull(numberFormat52);
        org.junit.Assert.assertNotNull(attributedCharacterIterator55);
        org.junit.Assert.assertNotNull(obj57);
        org.junit.Assert.assertNotNull(fractionFormat58);
        org.junit.Assert.assertNotNull(obj60);
        org.junit.Assert.assertNotNull(obj62);
        org.junit.Assert.assertNotNull(numberFormat63);
        org.junit.Assert.assertNotNull(obj64);
        org.junit.Assert.assertNotNull(fractionFormat65);
        org.junit.Assert.assertNotNull(obj67);
        org.junit.Assert.assertNotNull(obj69);
        org.junit.Assert.assertNotNull(numberFormat70);
        org.junit.Assert.assertNotNull(numberFormat71);
        org.junit.Assert.assertNotNull(fractionFormat72);
        org.junit.Assert.assertNotNull(attributedCharacterIterator74);
        org.junit.Assert.assertNotNull(numberFormat75);
    }

    @Test
    public void test0281() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0281");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat5 = fractionFormat0.getNumeratorFormat();
        java.text.NumberFormat numberFormat6 = fractionFormat0.getNumeratorFormat();
        java.text.NumberFormat numberFormat7 = null;
        java.text.NumberFormat numberFormat8 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat9 = new org.apache.commons.math.fraction.FractionFormat(numberFormat7, numberFormat8);
        java.lang.Object obj10 = fractionFormat9.clone();
        java.text.NumberFormat numberFormat11 = null;
        java.text.NumberFormat numberFormat12 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat13 = new org.apache.commons.math.fraction.FractionFormat(numberFormat11, numberFormat12);
        java.text.NumberFormat numberFormat14 = fractionFormat13.getDenominatorFormat();
        java.text.NumberFormat numberFormat15 = fractionFormat13.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat16 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator18 = fractionFormat16.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat19 = fractionFormat16.getDenominatorFormat();
        fractionFormat13.setNumeratorFormat(numberFormat19);
        java.lang.Object obj21 = numberFormat19.clone();
        java.lang.String str23 = numberFormat19.format((java.lang.Object) (short) 10);
        org.apache.commons.math.fraction.FractionFormat fractionFormat24 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator26 = fractionFormat24.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat27 = fractionFormat24.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat28 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator30 = fractionFormat28.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat31 = fractionFormat28.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat32 = new org.apache.commons.math.fraction.FractionFormat(numberFormat27, numberFormat31);
        org.apache.commons.math.fraction.FractionFormat fractionFormat33 = new org.apache.commons.math.fraction.FractionFormat(numberFormat19, numberFormat27);
        fractionFormat9.setDenominatorFormat(numberFormat19);
        java.lang.StringBuffer stringBuffer35 = null;
        java.text.FieldPosition fieldPosition36 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer37 = fractionFormat0.format((java.lang.Object) fractionFormat9, stringBuffer35, fieldPosition36);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot format given object as a fraction");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertNull(numberFormat14);
        org.junit.Assert.assertNull(numberFormat15);
        org.junit.Assert.assertNotNull(fractionFormat16);
        org.junit.Assert.assertNotNull(attributedCharacterIterator18);
        org.junit.Assert.assertNotNull(numberFormat19);
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "10" + "'", str23, "10");
        org.junit.Assert.assertNotNull(fractionFormat24);
        org.junit.Assert.assertNotNull(attributedCharacterIterator26);
        org.junit.Assert.assertNotNull(numberFormat27);
        org.junit.Assert.assertNotNull(fractionFormat28);
        org.junit.Assert.assertNotNull(attributedCharacterIterator30);
        org.junit.Assert.assertNotNull(numberFormat31);
    }

    @Test
    public void test0282() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0282");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj6 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj7 = fractionFormat0.clone();
        java.text.ParsePosition parsePosition9 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.fraction.Fraction fraction10 = fractionFormat0.parse("", parsePosition9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(obj6);
        org.junit.Assert.assertNotNull(obj7);
    }

    @Test
    public void test0283() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0283");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.text.NumberFormat numberFormat3 = fractionFormat2.getDenominatorFormat();
        java.text.NumberFormat numberFormat4 = fractionFormat2.getNumeratorFormat();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj5 = numberFormat4.clone();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(numberFormat3);
        org.junit.Assert.assertNull(numberFormat4);
    }

    @Test
    public void test0284() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0284");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.text.NumberFormat numberFormat3 = fractionFormat2.getNumeratorFormat();
        java.text.NumberFormat numberFormat4 = fractionFormat2.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj7 = fractionFormat5.parseObject("0 / 1");
        java.lang.Object obj9 = fractionFormat5.parseObject("0 / 1");
        java.text.NumberFormat numberFormat10 = fractionFormat5.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj13 = fractionFormat11.parseObject("0 / 1");
        java.text.NumberFormat numberFormat14 = fractionFormat11.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat15 = new org.apache.commons.math.fraction.FractionFormat(numberFormat10, numberFormat14);
        fractionFormat2.setNumeratorFormat(numberFormat10);
        java.lang.Class<?> wildcardClass17 = numberFormat10.getClass();
        org.junit.Assert.assertNull(numberFormat3);
        org.junit.Assert.assertNull(numberFormat4);
        org.junit.Assert.assertNotNull(fractionFormat5);
        org.junit.Assert.assertNotNull(obj7);
        org.junit.Assert.assertNotNull(obj9);
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertNotNull(fractionFormat11);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertNotNull(numberFormat14);
        org.junit.Assert.assertNotNull(wildcardClass17);
    }

    @Test
    public void test0285() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0285");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat3 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat4 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj6 = fractionFormat4.parseObject("0 / 1");
        java.lang.Object obj8 = fractionFormat4.parseObject("0 / 1");
        java.text.NumberFormat numberFormat9 = fractionFormat4.getNumeratorFormat();
        java.text.NumberFormat numberFormat10 = fractionFormat4.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator13 = fractionFormat11.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat14 = fractionFormat11.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat15 = new org.apache.commons.math.fraction.FractionFormat(numberFormat10, numberFormat14);
        fractionFormat0.setNumeratorFormat(numberFormat14);
        java.lang.Object obj17 = fractionFormat0.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat18 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.Fraction fraction20 = fractionFormat18.parse("0 / 1");
        java.lang.String str21 = org.apache.commons.math.fraction.FractionFormat.formatFraction(fraction20);
        java.lang.StringBuffer stringBuffer22 = null;
        java.text.FieldPosition fieldPosition23 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer24 = fractionFormat0.format(fraction20, stringBuffer22, fieldPosition23);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(numberFormat3);
        org.junit.Assert.assertNotNull(fractionFormat4);
        org.junit.Assert.assertNotNull(obj6);
        org.junit.Assert.assertNotNull(obj8);
        org.junit.Assert.assertNotNull(numberFormat9);
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertNotNull(fractionFormat11);
        org.junit.Assert.assertNotNull(attributedCharacterIterator13);
        org.junit.Assert.assertNotNull(numberFormat14);
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertNotNull(fractionFormat18);
        org.junit.Assert.assertNotNull(fraction20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "0 / 1" + "'", str21, "0 / 1");
    }

    @Test
    public void test0286() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0286");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.lang.Object obj3 = fractionFormat2.clone();
        java.text.NumberFormat numberFormat4 = null;
        java.text.NumberFormat numberFormat5 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat6 = new org.apache.commons.math.fraction.FractionFormat(numberFormat4, numberFormat5);
        java.text.NumberFormat numberFormat7 = fractionFormat6.getDenominatorFormat();
        java.text.NumberFormat numberFormat8 = fractionFormat6.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat9 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator11 = fractionFormat9.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat12 = fractionFormat9.getDenominatorFormat();
        fractionFormat6.setNumeratorFormat(numberFormat12);
        java.lang.Object obj14 = numberFormat12.clone();
        java.lang.String str16 = numberFormat12.format((java.lang.Object) (short) 10);
        org.apache.commons.math.fraction.FractionFormat fractionFormat17 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator19 = fractionFormat17.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat20 = fractionFormat17.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat21 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator23 = fractionFormat21.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat24 = fractionFormat21.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat25 = new org.apache.commons.math.fraction.FractionFormat(numberFormat20, numberFormat24);
        org.apache.commons.math.fraction.FractionFormat fractionFormat26 = new org.apache.commons.math.fraction.FractionFormat(numberFormat12, numberFormat20);
        fractionFormat2.setDenominatorFormat(numberFormat12);
        org.apache.commons.math.fraction.FractionFormat fractionFormat28 = new org.apache.commons.math.fraction.FractionFormat(numberFormat12);
        java.text.NumberFormat numberFormat29 = null;
        java.text.NumberFormat numberFormat30 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat31 = new org.apache.commons.math.fraction.FractionFormat(numberFormat29, numberFormat30);
        java.text.NumberFormat numberFormat32 = fractionFormat31.getDenominatorFormat();
        java.text.NumberFormat numberFormat33 = fractionFormat31.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat34 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator36 = fractionFormat34.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat37 = fractionFormat34.getDenominatorFormat();
        fractionFormat31.setNumeratorFormat(numberFormat37);
        org.apache.commons.math.fraction.FractionFormat fractionFormat39 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator41 = fractionFormat39.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat42 = fractionFormat39.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat43 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator45 = fractionFormat43.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat46 = fractionFormat43.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat47 = new org.apache.commons.math.fraction.FractionFormat(numberFormat42, numberFormat46);
        java.text.NumberFormat numberFormat48 = fractionFormat47.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat49 = new org.apache.commons.math.fraction.FractionFormat(numberFormat48);
        fractionFormat31.setNumeratorFormat(numberFormat48);
        fractionFormat28.setNumeratorFormat(numberFormat48);
        org.apache.commons.math.fraction.FractionFormat fractionFormat52 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj54 = fractionFormat52.parseObject("0 / 1");
        java.lang.Object obj56 = fractionFormat52.parseObject("0 / 1");
        java.text.NumberFormat numberFormat57 = fractionFormat52.getNumeratorFormat();
        java.text.NumberFormat numberFormat58 = fractionFormat52.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat59 = new org.apache.commons.math.fraction.FractionFormat(numberFormat58);
        org.apache.commons.math.fraction.FractionFormat fractionFormat60 = new org.apache.commons.math.fraction.FractionFormat(numberFormat58);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str61 = numberFormat48.format((java.lang.Object) numberFormat58);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot format given Object as a Number");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(obj3);
        org.junit.Assert.assertNull(numberFormat7);
        org.junit.Assert.assertNull(numberFormat8);
        org.junit.Assert.assertNotNull(fractionFormat9);
        org.junit.Assert.assertNotNull(attributedCharacterIterator11);
        org.junit.Assert.assertNotNull(numberFormat12);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "10" + "'", str16, "10");
        org.junit.Assert.assertNotNull(fractionFormat17);
        org.junit.Assert.assertNotNull(attributedCharacterIterator19);
        org.junit.Assert.assertNotNull(numberFormat20);
        org.junit.Assert.assertNotNull(fractionFormat21);
        org.junit.Assert.assertNotNull(attributedCharacterIterator23);
        org.junit.Assert.assertNotNull(numberFormat24);
        org.junit.Assert.assertNull(numberFormat32);
        org.junit.Assert.assertNull(numberFormat33);
        org.junit.Assert.assertNotNull(fractionFormat34);
        org.junit.Assert.assertNotNull(attributedCharacterIterator36);
        org.junit.Assert.assertNotNull(numberFormat37);
        org.junit.Assert.assertNotNull(fractionFormat39);
        org.junit.Assert.assertNotNull(attributedCharacterIterator41);
        org.junit.Assert.assertNotNull(numberFormat42);
        org.junit.Assert.assertNotNull(fractionFormat43);
        org.junit.Assert.assertNotNull(attributedCharacterIterator45);
        org.junit.Assert.assertNotNull(numberFormat46);
        org.junit.Assert.assertNotNull(numberFormat48);
        org.junit.Assert.assertNotNull(fractionFormat52);
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertNotNull(obj56);
        org.junit.Assert.assertNotNull(numberFormat57);
        org.junit.Assert.assertNotNull(numberFormat58);
    }

    @Test
    public void test0287() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0287");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator2 = fractionFormat0.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat3 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat4 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator6 = fractionFormat4.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat7 = fractionFormat4.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat8 = new org.apache.commons.math.fraction.FractionFormat(numberFormat3, numberFormat7);
        java.text.NumberFormat numberFormat9 = fractionFormat8.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat10 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj13 = fractionFormat11.parseObject("0 / 1");
        java.lang.Object obj15 = fractionFormat11.parseObject("0 / 1");
        java.text.NumberFormat numberFormat16 = fractionFormat11.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat17 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj19 = fractionFormat17.parseObject("0 / 1");
        java.text.NumberFormat numberFormat20 = fractionFormat17.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat21 = new org.apache.commons.math.fraction.FractionFormat(numberFormat16, numberFormat20);
        org.apache.commons.math.fraction.FractionFormat fractionFormat22 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj24 = fractionFormat22.parseObject("0 / 1");
        java.lang.Object obj26 = fractionFormat22.parseObject("0 / 1");
        java.text.NumberFormat numberFormat27 = fractionFormat22.getNumeratorFormat();
        fractionFormat21.setDenominatorFormat(numberFormat27);
        java.lang.Object obj29 = numberFormat27.clone();
        fractionFormat10.setNumeratorFormat(numberFormat27);
        java.lang.Object obj31 = numberFormat27.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat32 = new org.apache.commons.math.fraction.FractionFormat(numberFormat9, numberFormat27);
        java.text.NumberFormat numberFormat33 = fractionFormat32.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat34 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj36 = fractionFormat34.parseObject("0 / 1");
        java.lang.Object obj38 = fractionFormat34.parseObject("0 / 1");
        java.text.NumberFormat numberFormat39 = fractionFormat34.getNumeratorFormat();
        java.text.NumberFormat numberFormat40 = fractionFormat34.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat41 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator43 = fractionFormat41.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat44 = fractionFormat41.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat45 = new org.apache.commons.math.fraction.FractionFormat(numberFormat40, numberFormat44);
        org.apache.commons.math.fraction.FractionFormat fractionFormat46 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator48 = fractionFormat46.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat49 = fractionFormat46.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat50 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator52 = fractionFormat50.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat53 = fractionFormat50.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat54 = new org.apache.commons.math.fraction.FractionFormat(numberFormat49, numberFormat53);
        fractionFormat45.setNumeratorFormat(numberFormat49);
        org.apache.commons.math.fraction.FractionFormat fractionFormat56 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj58 = fractionFormat56.parseObject("0 / 1");
        java.lang.Object obj60 = fractionFormat56.parseObject("0 / 1");
        java.text.NumberFormat numberFormat61 = fractionFormat56.getNumeratorFormat();
        java.text.NumberFormat numberFormat62 = fractionFormat56.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat63 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator65 = fractionFormat63.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat66 = fractionFormat63.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat67 = new org.apache.commons.math.fraction.FractionFormat(numberFormat62, numberFormat66);
        org.apache.commons.math.fraction.FractionFormat fractionFormat68 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator70 = fractionFormat68.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat71 = fractionFormat68.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat72 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator74 = fractionFormat72.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat75 = fractionFormat72.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat76 = new org.apache.commons.math.fraction.FractionFormat(numberFormat71, numberFormat75);
        fractionFormat67.setNumeratorFormat(numberFormat71);
        fractionFormat45.setNumeratorFormat(numberFormat71);
        fractionFormat32.setNumeratorFormat(numberFormat71);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj81 = numberFormat71.parseObject("hi!");
            org.junit.Assert.fail("Expected exception of type java.text.ParseException; message: Format.parseObject(String) failed");
        } catch (java.text.ParseException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(attributedCharacterIterator2);
        org.junit.Assert.assertNotNull(numberFormat3);
        org.junit.Assert.assertNotNull(fractionFormat4);
        org.junit.Assert.assertNotNull(attributedCharacterIterator6);
        org.junit.Assert.assertNotNull(numberFormat7);
        org.junit.Assert.assertNotNull(numberFormat9);
        org.junit.Assert.assertNotNull(fractionFormat10);
        org.junit.Assert.assertNotNull(fractionFormat11);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertNotNull(numberFormat16);
        org.junit.Assert.assertNotNull(fractionFormat17);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(numberFormat20);
        org.junit.Assert.assertNotNull(fractionFormat22);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertNotNull(numberFormat27);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertNotNull(numberFormat33);
        org.junit.Assert.assertNotNull(fractionFormat34);
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertNotNull(numberFormat39);
        org.junit.Assert.assertNotNull(numberFormat40);
        org.junit.Assert.assertNotNull(fractionFormat41);
        org.junit.Assert.assertNotNull(attributedCharacterIterator43);
        org.junit.Assert.assertNotNull(numberFormat44);
        org.junit.Assert.assertNotNull(fractionFormat46);
        org.junit.Assert.assertNotNull(attributedCharacterIterator48);
        org.junit.Assert.assertNotNull(numberFormat49);
        org.junit.Assert.assertNotNull(fractionFormat50);
        org.junit.Assert.assertNotNull(attributedCharacterIterator52);
        org.junit.Assert.assertNotNull(numberFormat53);
        org.junit.Assert.assertNotNull(fractionFormat56);
        org.junit.Assert.assertNotNull(obj58);
        org.junit.Assert.assertNotNull(obj60);
        org.junit.Assert.assertNotNull(numberFormat61);
        org.junit.Assert.assertNotNull(numberFormat62);
        org.junit.Assert.assertNotNull(fractionFormat63);
        org.junit.Assert.assertNotNull(attributedCharacterIterator65);
        org.junit.Assert.assertNotNull(numberFormat66);
        org.junit.Assert.assertNotNull(fractionFormat68);
        org.junit.Assert.assertNotNull(attributedCharacterIterator70);
        org.junit.Assert.assertNotNull(numberFormat71);
        org.junit.Assert.assertNotNull(fractionFormat72);
        org.junit.Assert.assertNotNull(attributedCharacterIterator74);
        org.junit.Assert.assertNotNull(numberFormat75);
    }

    @Test
    public void test0288() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0288");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.text.NumberFormat numberFormat3 = fractionFormat2.getDenominatorFormat();
        java.text.NumberFormat numberFormat4 = fractionFormat2.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator7 = fractionFormat5.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat8 = fractionFormat5.getDenominatorFormat();
        fractionFormat2.setNumeratorFormat(numberFormat8);
        java.text.NumberFormat numberFormat10 = fractionFormat2.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat12 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj14 = fractionFormat12.parseObject("0 / 1");
        java.lang.Object obj16 = fractionFormat12.parseObject("0 / 1");
        java.text.NumberFormat numberFormat17 = fractionFormat12.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat18 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj20 = fractionFormat18.parseObject("0 / 1");
        java.text.NumberFormat numberFormat21 = fractionFormat18.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat22 = new org.apache.commons.math.fraction.FractionFormat(numberFormat17, numberFormat21);
        org.apache.commons.math.fraction.FractionFormat fractionFormat23 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj25 = fractionFormat23.parseObject("0 / 1");
        java.lang.Object obj27 = fractionFormat23.parseObject("0 / 1");
        java.text.NumberFormat numberFormat28 = fractionFormat23.getNumeratorFormat();
        fractionFormat22.setDenominatorFormat(numberFormat28);
        java.lang.Object obj30 = numberFormat28.clone();
        fractionFormat11.setNumeratorFormat(numberFormat28);
        java.lang.Object obj32 = numberFormat28.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat33 = new org.apache.commons.math.fraction.FractionFormat(numberFormat28);
        fractionFormat2.setNumeratorFormat(numberFormat28);
        java.text.ParsePosition parsePosition36 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.fraction.Fraction fraction37 = fractionFormat2.parse("-1 / 1", parsePosition36);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(numberFormat3);
        org.junit.Assert.assertNull(numberFormat4);
        org.junit.Assert.assertNotNull(fractionFormat5);
        org.junit.Assert.assertNotNull(attributedCharacterIterator7);
        org.junit.Assert.assertNotNull(numberFormat8);
        org.junit.Assert.assertNull(numberFormat10);
        org.junit.Assert.assertNotNull(fractionFormat11);
        org.junit.Assert.assertNotNull(fractionFormat12);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertNotNull(obj16);
        org.junit.Assert.assertNotNull(numberFormat17);
        org.junit.Assert.assertNotNull(fractionFormat18);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertNotNull(numberFormat21);
        org.junit.Assert.assertNotNull(fractionFormat23);
        org.junit.Assert.assertNotNull(obj25);
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertNotNull(numberFormat28);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertNotNull(obj32);
    }

    @Test
    public void test0289() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0289");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat3 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat4 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj6 = fractionFormat4.parseObject("0 / 1");
        java.lang.Object obj8 = fractionFormat4.parseObject("0 / 1");
        java.text.NumberFormat numberFormat9 = fractionFormat4.getNumeratorFormat();
        java.text.NumberFormat numberFormat10 = fractionFormat4.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator13 = fractionFormat11.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat14 = fractionFormat11.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat15 = new org.apache.commons.math.fraction.FractionFormat(numberFormat10, numberFormat14);
        fractionFormat0.setNumeratorFormat(numberFormat14);
        java.text.ParsePosition parsePosition18 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj19 = fractionFormat0.parseObject("", parsePosition18);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(numberFormat3);
        org.junit.Assert.assertNotNull(fractionFormat4);
        org.junit.Assert.assertNotNull(obj6);
        org.junit.Assert.assertNotNull(obj8);
        org.junit.Assert.assertNotNull(numberFormat9);
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertNotNull(fractionFormat11);
        org.junit.Assert.assertNotNull(attributedCharacterIterator13);
        org.junit.Assert.assertNotNull(numberFormat14);
    }

    @Test
    public void test0290() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0290");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        java.text.NumberFormat numberFormat2 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat3 = new org.apache.commons.math.fraction.FractionFormat(numberFormat1, numberFormat2);
        java.text.NumberFormat numberFormat4 = fractionFormat3.getDenominatorFormat();
        java.text.NumberFormat numberFormat5 = fractionFormat3.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat6 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator8 = fractionFormat6.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat9 = fractionFormat6.getDenominatorFormat();
        fractionFormat3.setNumeratorFormat(numberFormat9);
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj13 = fractionFormat11.parseObject("0 / 1");
        java.text.NumberFormat numberFormat14 = fractionFormat11.getNumeratorFormat();
        fractionFormat3.setNumeratorFormat(numberFormat14);
        org.apache.commons.math.fraction.FractionFormat fractionFormat16 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat14);
        java.text.NumberFormat numberFormat17 = null;
        java.text.NumberFormat numberFormat18 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat19 = new org.apache.commons.math.fraction.FractionFormat(numberFormat17, numberFormat18);
        java.text.NumberFormat numberFormat20 = fractionFormat19.getDenominatorFormat();
        java.text.NumberFormat numberFormat21 = fractionFormat19.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat22 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator24 = fractionFormat22.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat25 = fractionFormat22.getDenominatorFormat();
        fractionFormat19.setNumeratorFormat(numberFormat25);
        org.apache.commons.math.fraction.FractionFormat fractionFormat27 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat25);
        org.apache.commons.math.fraction.FractionFormat fractionFormat28 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj30 = fractionFormat28.parseObject("0 / 1");
        java.lang.Object obj32 = fractionFormat28.parseObject("0 / 1");
        java.text.NumberFormat numberFormat33 = fractionFormat28.getNumeratorFormat();
        java.text.NumberFormat numberFormat34 = fractionFormat28.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat35 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator37 = fractionFormat35.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat38 = fractionFormat35.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat39 = new org.apache.commons.math.fraction.FractionFormat(numberFormat34, numberFormat38);
        org.apache.commons.math.fraction.FractionFormat fractionFormat40 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator42 = fractionFormat40.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat43 = fractionFormat40.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat44 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator46 = fractionFormat44.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat47 = fractionFormat44.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat48 = new org.apache.commons.math.fraction.FractionFormat(numberFormat43, numberFormat47);
        fractionFormat39.setNumeratorFormat(numberFormat43);
        org.apache.commons.math.fraction.Fraction fraction51 = fractionFormat39.parse("0 / 1");
        java.lang.StringBuffer stringBuffer52 = null;
        java.text.FieldPosition fieldPosition53 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer54 = fractionFormat27.format(fraction51, stringBuffer52, fieldPosition53);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(numberFormat4);
        org.junit.Assert.assertNull(numberFormat5);
        org.junit.Assert.assertNotNull(fractionFormat6);
        org.junit.Assert.assertNotNull(attributedCharacterIterator8);
        org.junit.Assert.assertNotNull(numberFormat9);
        org.junit.Assert.assertNotNull(fractionFormat11);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertNotNull(numberFormat14);
        org.junit.Assert.assertNull(numberFormat20);
        org.junit.Assert.assertNull(numberFormat21);
        org.junit.Assert.assertNotNull(fractionFormat22);
        org.junit.Assert.assertNotNull(attributedCharacterIterator24);
        org.junit.Assert.assertNotNull(numberFormat25);
        org.junit.Assert.assertNotNull(fractionFormat28);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertNotNull(obj32);
        org.junit.Assert.assertNotNull(numberFormat33);
        org.junit.Assert.assertNotNull(numberFormat34);
        org.junit.Assert.assertNotNull(fractionFormat35);
        org.junit.Assert.assertNotNull(attributedCharacterIterator37);
        org.junit.Assert.assertNotNull(numberFormat38);
        org.junit.Assert.assertNotNull(fractionFormat40);
        org.junit.Assert.assertNotNull(attributedCharacterIterator42);
        org.junit.Assert.assertNotNull(numberFormat43);
        org.junit.Assert.assertNotNull(fractionFormat44);
        org.junit.Assert.assertNotNull(attributedCharacterIterator46);
        org.junit.Assert.assertNotNull(numberFormat47);
        org.junit.Assert.assertNotNull(fraction51);
    }

    @Test
    public void test0291() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0291");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat5 = fractionFormat0.getNumeratorFormat();
        java.text.NumberFormat numberFormat6 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat7 = new org.apache.commons.math.fraction.FractionFormat(numberFormat6);
        org.apache.commons.math.fraction.FractionFormat fractionFormat8 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj10 = fractionFormat8.parseObject("0 / 1");
        java.lang.Object obj12 = fractionFormat8.parseObject("0 / 1");
        java.text.NumberFormat numberFormat13 = fractionFormat8.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat14 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj16 = fractionFormat14.parseObject("0 / 1");
        java.text.NumberFormat numberFormat17 = fractionFormat14.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat18 = new org.apache.commons.math.fraction.FractionFormat(numberFormat13, numberFormat17);
        org.apache.commons.math.fraction.FractionFormat fractionFormat19 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj21 = fractionFormat19.parseObject("0 / 1");
        java.lang.Object obj23 = fractionFormat19.parseObject("0 / 1");
        java.text.NumberFormat numberFormat24 = fractionFormat19.getNumeratorFormat();
        fractionFormat18.setDenominatorFormat(numberFormat24);
        org.apache.commons.math.fraction.FractionFormat fractionFormat26 = new org.apache.commons.math.fraction.FractionFormat(numberFormat6, numberFormat24);
        java.text.ParsePosition parsePosition28 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj29 = fractionFormat26.parseObject("10 / 1", parsePosition28);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertNotNull(fractionFormat8);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertNotNull(numberFormat13);
        org.junit.Assert.assertNotNull(fractionFormat14);
        org.junit.Assert.assertNotNull(obj16);
        org.junit.Assert.assertNotNull(numberFormat17);
        org.junit.Assert.assertNotNull(fractionFormat19);
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertNotNull(numberFormat24);
    }

    @Test
    public void test0292() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0292");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.text.NumberFormat numberFormat3 = fractionFormat2.getDenominatorFormat();
        java.text.NumberFormat numberFormat4 = fractionFormat2.getNumeratorFormat();
        java.text.NumberFormat numberFormat5 = fractionFormat2.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat6 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator8 = fractionFormat6.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat9 = fractionFormat6.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat10 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator12 = fractionFormat10.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat13 = fractionFormat10.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat14 = new org.apache.commons.math.fraction.FractionFormat(numberFormat9, numberFormat13);
        fractionFormat2.setNumeratorFormat(numberFormat9);
        org.apache.commons.math.fraction.FractionFormat fractionFormat16 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj18 = fractionFormat16.parseObject("0 / 1");
        java.text.NumberFormat numberFormat19 = fractionFormat16.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat20 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator22 = fractionFormat20.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat23 = fractionFormat20.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat24 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator26 = fractionFormat24.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat27 = fractionFormat24.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat28 = new org.apache.commons.math.fraction.FractionFormat(numberFormat23, numberFormat27);
        org.apache.commons.math.fraction.FractionFormat fractionFormat29 = new org.apache.commons.math.fraction.FractionFormat(numberFormat19, numberFormat23);
        org.apache.commons.math.fraction.FractionFormat fractionFormat30 = new org.apache.commons.math.fraction.FractionFormat(numberFormat9, numberFormat19);
        java.text.ParsePosition parsePosition32 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj33 = fractionFormat30.parseObject("10 / 1", parsePosition32);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(numberFormat3);
        org.junit.Assert.assertNull(numberFormat4);
        org.junit.Assert.assertNull(numberFormat5);
        org.junit.Assert.assertNotNull(fractionFormat6);
        org.junit.Assert.assertNotNull(attributedCharacterIterator8);
        org.junit.Assert.assertNotNull(numberFormat9);
        org.junit.Assert.assertNotNull(fractionFormat10);
        org.junit.Assert.assertNotNull(attributedCharacterIterator12);
        org.junit.Assert.assertNotNull(numberFormat13);
        org.junit.Assert.assertNotNull(fractionFormat16);
        org.junit.Assert.assertNotNull(obj18);
        org.junit.Assert.assertNotNull(numberFormat19);
        org.junit.Assert.assertNotNull(fractionFormat20);
        org.junit.Assert.assertNotNull(attributedCharacterIterator22);
        org.junit.Assert.assertNotNull(numberFormat23);
        org.junit.Assert.assertNotNull(fractionFormat24);
        org.junit.Assert.assertNotNull(attributedCharacterIterator26);
        org.junit.Assert.assertNotNull(numberFormat27);
    }

    @Test
    public void test0293() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0293");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.text.NumberFormat numberFormat3 = fractionFormat2.getDenominatorFormat();
        java.text.NumberFormat numberFormat4 = fractionFormat2.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator7 = fractionFormat5.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat8 = fractionFormat5.getDenominatorFormat();
        fractionFormat2.setNumeratorFormat(numberFormat8);
        java.lang.Object obj10 = numberFormat8.clone();
        java.lang.String str12 = numberFormat8.format((java.lang.Object) (short) 10);
        java.text.NumberFormat numberFormat13 = null;
        java.text.NumberFormat numberFormat14 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat15 = new org.apache.commons.math.fraction.FractionFormat(numberFormat13, numberFormat14);
        java.text.NumberFormat numberFormat16 = fractionFormat15.getDenominatorFormat();
        java.text.NumberFormat numberFormat17 = fractionFormat15.getNumeratorFormat();
        java.text.NumberFormat numberFormat18 = fractionFormat15.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat19 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator21 = fractionFormat19.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat22 = fractionFormat19.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat23 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator25 = fractionFormat23.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat26 = fractionFormat23.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat27 = new org.apache.commons.math.fraction.FractionFormat(numberFormat22, numberFormat26);
        fractionFormat15.setNumeratorFormat(numberFormat22);
        org.apache.commons.math.fraction.FractionFormat fractionFormat29 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj31 = fractionFormat29.parseObject("0 / 1");
        java.text.NumberFormat numberFormat32 = fractionFormat29.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat33 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator35 = fractionFormat33.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat36 = fractionFormat33.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat37 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator39 = fractionFormat37.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat40 = fractionFormat37.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat41 = new org.apache.commons.math.fraction.FractionFormat(numberFormat36, numberFormat40);
        org.apache.commons.math.fraction.FractionFormat fractionFormat42 = new org.apache.commons.math.fraction.FractionFormat(numberFormat32, numberFormat36);
        org.apache.commons.math.fraction.FractionFormat fractionFormat43 = new org.apache.commons.math.fraction.FractionFormat(numberFormat22, numberFormat32);
        org.apache.commons.math.fraction.FractionFormat fractionFormat44 = new org.apache.commons.math.fraction.FractionFormat(numberFormat8, numberFormat32);
        java.text.NumberFormat numberFormat45 = fractionFormat44.getDenominatorFormat();
        java.lang.Object obj46 = numberFormat45.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat47 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj49 = fractionFormat47.parseObject("0 / 1");
        java.lang.Object obj51 = fractionFormat47.parseObject("0 / 1");
        java.text.NumberFormat numberFormat52 = fractionFormat47.getNumeratorFormat();
        java.lang.Object obj53 = numberFormat52.clone();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str54 = numberFormat45.format(obj53);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot format given Object as a Number");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(numberFormat3);
        org.junit.Assert.assertNull(numberFormat4);
        org.junit.Assert.assertNotNull(fractionFormat5);
        org.junit.Assert.assertNotNull(attributedCharacterIterator7);
        org.junit.Assert.assertNotNull(numberFormat8);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "10" + "'", str12, "10");
        org.junit.Assert.assertNull(numberFormat16);
        org.junit.Assert.assertNull(numberFormat17);
        org.junit.Assert.assertNull(numberFormat18);
        org.junit.Assert.assertNotNull(fractionFormat19);
        org.junit.Assert.assertNotNull(attributedCharacterIterator21);
        org.junit.Assert.assertNotNull(numberFormat22);
        org.junit.Assert.assertNotNull(fractionFormat23);
        org.junit.Assert.assertNotNull(attributedCharacterIterator25);
        org.junit.Assert.assertNotNull(numberFormat26);
        org.junit.Assert.assertNotNull(fractionFormat29);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertNotNull(numberFormat32);
        org.junit.Assert.assertNotNull(fractionFormat33);
        org.junit.Assert.assertNotNull(attributedCharacterIterator35);
        org.junit.Assert.assertNotNull(numberFormat36);
        org.junit.Assert.assertNotNull(fractionFormat37);
        org.junit.Assert.assertNotNull(attributedCharacterIterator39);
        org.junit.Assert.assertNotNull(numberFormat40);
        org.junit.Assert.assertNotNull(numberFormat45);
        org.junit.Assert.assertNotNull(obj46);
        org.junit.Assert.assertNotNull(fractionFormat47);
        org.junit.Assert.assertNotNull(obj49);
        org.junit.Assert.assertNotNull(obj51);
        org.junit.Assert.assertNotNull(numberFormat52);
        org.junit.Assert.assertNotNull(obj53);
    }

    @Test
    public void test0294() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0294");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat5 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat6 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj8 = fractionFormat6.parseObject("0 / 1");
        java.text.NumberFormat numberFormat9 = fractionFormat6.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat10 = new org.apache.commons.math.fraction.FractionFormat(numberFormat5, numberFormat9);
        java.text.ParsePosition parsePosition12 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.fraction.Fraction fraction13 = fractionFormat10.parse("100", parsePosition12);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(fractionFormat6);
        org.junit.Assert.assertNotNull(obj8);
        org.junit.Assert.assertNotNull(numberFormat9);
    }

    @Test
    public void test0295() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0295");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        java.text.NumberFormat numberFormat2 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat3 = new org.apache.commons.math.fraction.FractionFormat(numberFormat1, numberFormat2);
        java.text.NumberFormat numberFormat4 = fractionFormat3.getDenominatorFormat();
        java.text.NumberFormat numberFormat5 = fractionFormat3.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat6 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator8 = fractionFormat6.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat9 = fractionFormat6.getDenominatorFormat();
        fractionFormat3.setNumeratorFormat(numberFormat9);
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj13 = fractionFormat11.parseObject("0 / 1");
        java.text.NumberFormat numberFormat14 = fractionFormat11.getNumeratorFormat();
        fractionFormat3.setNumeratorFormat(numberFormat14);
        org.apache.commons.math.fraction.FractionFormat fractionFormat16 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat14);
        java.text.NumberFormat numberFormat17 = null;
        java.text.NumberFormat numberFormat18 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat19 = new org.apache.commons.math.fraction.FractionFormat(numberFormat17, numberFormat18);
        java.text.NumberFormat numberFormat20 = fractionFormat19.getDenominatorFormat();
        java.text.NumberFormat numberFormat21 = fractionFormat19.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat22 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator24 = fractionFormat22.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat25 = fractionFormat22.getDenominatorFormat();
        fractionFormat19.setNumeratorFormat(numberFormat25);
        org.apache.commons.math.fraction.FractionFormat fractionFormat27 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat25);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.fraction.Fraction fraction29 = fractionFormat27.parse("10");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(numberFormat4);
        org.junit.Assert.assertNull(numberFormat5);
        org.junit.Assert.assertNotNull(fractionFormat6);
        org.junit.Assert.assertNotNull(attributedCharacterIterator8);
        org.junit.Assert.assertNotNull(numberFormat9);
        org.junit.Assert.assertNotNull(fractionFormat11);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertNotNull(numberFormat14);
        org.junit.Assert.assertNull(numberFormat20);
        org.junit.Assert.assertNull(numberFormat21);
        org.junit.Assert.assertNotNull(fractionFormat22);
        org.junit.Assert.assertNotNull(attributedCharacterIterator24);
        org.junit.Assert.assertNotNull(numberFormat25);
    }

    @Test
    public void test0296() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0296");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat5 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat6 = new org.apache.commons.math.fraction.FractionFormat(numberFormat5);
        java.text.NumberFormat numberFormat7 = fractionFormat6.getNumeratorFormat();
        java.text.ParsePosition parsePosition9 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.fraction.Fraction fraction10 = fractionFormat6.parse("-1 / 1", parsePosition9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(numberFormat7);
    }

    @Test
    public void test0297() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0297");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.text.NumberFormat numberFormat3 = fractionFormat2.getNumeratorFormat();
        java.lang.Object obj4 = fractionFormat2.clone();
        java.text.ParsePosition parsePosition6 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj7 = fractionFormat2.parseObject("0 / 1", parsePosition6);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(numberFormat3);
        org.junit.Assert.assertNotNull(obj4);
    }

    @Test
    public void test0298() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0298");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.text.NumberFormat numberFormat3 = fractionFormat2.getNumeratorFormat();
        java.text.NumberFormat numberFormat4 = fractionFormat2.getNumeratorFormat();
        java.text.NumberFormat numberFormat5 = fractionFormat2.getNumeratorFormat();
        java.text.ParsePosition parsePosition7 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj8 = fractionFormat2.parseObject("100", parsePosition7);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(numberFormat3);
        org.junit.Assert.assertNull(numberFormat4);
        org.junit.Assert.assertNull(numberFormat5);
    }

    @Test
    public void test0299() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0299");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.text.NumberFormat numberFormat3 = fractionFormat2.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat4 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj6 = fractionFormat4.parseObject("0 / 1");
        java.lang.Object obj8 = fractionFormat4.parseObject("0 / 1");
        java.text.NumberFormat numberFormat9 = fractionFormat4.getNumeratorFormat();
        java.text.NumberFormat numberFormat10 = fractionFormat4.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator13 = fractionFormat11.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat14 = fractionFormat11.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat15 = new org.apache.commons.math.fraction.FractionFormat(numberFormat10, numberFormat14);
        org.apache.commons.math.fraction.FractionFormat fractionFormat16 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator18 = fractionFormat16.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat19 = fractionFormat16.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat20 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator22 = fractionFormat20.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat23 = fractionFormat20.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat24 = new org.apache.commons.math.fraction.FractionFormat(numberFormat19, numberFormat23);
        fractionFormat15.setNumeratorFormat(numberFormat19);
        org.apache.commons.math.fraction.Fraction fraction27 = fractionFormat15.parse("0 / 1");
        java.lang.StringBuffer stringBuffer28 = null;
        java.text.FieldPosition fieldPosition29 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer30 = fractionFormat2.format(fraction27, stringBuffer28, fieldPosition29);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(numberFormat3);
        org.junit.Assert.assertNotNull(fractionFormat4);
        org.junit.Assert.assertNotNull(obj6);
        org.junit.Assert.assertNotNull(obj8);
        org.junit.Assert.assertNotNull(numberFormat9);
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertNotNull(fractionFormat11);
        org.junit.Assert.assertNotNull(attributedCharacterIterator13);
        org.junit.Assert.assertNotNull(numberFormat14);
        org.junit.Assert.assertNotNull(fractionFormat16);
        org.junit.Assert.assertNotNull(attributedCharacterIterator18);
        org.junit.Assert.assertNotNull(numberFormat19);
        org.junit.Assert.assertNotNull(fractionFormat20);
        org.junit.Assert.assertNotNull(attributedCharacterIterator22);
        org.junit.Assert.assertNotNull(numberFormat23);
        org.junit.Assert.assertNotNull(fraction27);
    }

    @Test
    public void test0300() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0300");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = new org.apache.commons.math.fraction.FractionFormat();
        java.text.NumberFormat numberFormat1 = fractionFormat0.getDenominatorFormat();
        java.text.NumberFormat numberFormat2 = null;
        java.text.NumberFormat numberFormat3 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat4 = new org.apache.commons.math.fraction.FractionFormat(numberFormat2, numberFormat3);
        java.text.NumberFormat numberFormat5 = fractionFormat4.getDenominatorFormat();
        java.text.NumberFormat numberFormat6 = fractionFormat4.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat7 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator9 = fractionFormat7.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat10 = fractionFormat7.getDenominatorFormat();
        fractionFormat4.setNumeratorFormat(numberFormat10);
        java.lang.Object obj12 = numberFormat10.clone();
        java.lang.String str14 = numberFormat10.format((java.lang.Object) (short) 10);
        java.text.NumberFormat numberFormat15 = null;
        java.text.NumberFormat numberFormat16 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat17 = new org.apache.commons.math.fraction.FractionFormat(numberFormat15, numberFormat16);
        java.text.NumberFormat numberFormat18 = fractionFormat17.getDenominatorFormat();
        java.text.NumberFormat numberFormat19 = fractionFormat17.getNumeratorFormat();
        java.text.NumberFormat numberFormat20 = fractionFormat17.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat21 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator23 = fractionFormat21.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat24 = fractionFormat21.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat25 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator27 = fractionFormat25.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat28 = fractionFormat25.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat29 = new org.apache.commons.math.fraction.FractionFormat(numberFormat24, numberFormat28);
        fractionFormat17.setNumeratorFormat(numberFormat24);
        org.apache.commons.math.fraction.FractionFormat fractionFormat31 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj33 = fractionFormat31.parseObject("0 / 1");
        java.text.NumberFormat numberFormat34 = fractionFormat31.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat35 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator37 = fractionFormat35.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat38 = fractionFormat35.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat39 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator41 = fractionFormat39.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat42 = fractionFormat39.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat43 = new org.apache.commons.math.fraction.FractionFormat(numberFormat38, numberFormat42);
        org.apache.commons.math.fraction.FractionFormat fractionFormat44 = new org.apache.commons.math.fraction.FractionFormat(numberFormat34, numberFormat38);
        org.apache.commons.math.fraction.FractionFormat fractionFormat45 = new org.apache.commons.math.fraction.FractionFormat(numberFormat24, numberFormat34);
        org.apache.commons.math.fraction.FractionFormat fractionFormat46 = new org.apache.commons.math.fraction.FractionFormat(numberFormat10, numberFormat34);
        java.text.NumberFormat numberFormat47 = fractionFormat46.getDenominatorFormat();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str48 = numberFormat1.format((java.lang.Object) fractionFormat46);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot format given Object as a Number");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(numberFormat1);
        org.junit.Assert.assertNull(numberFormat5);
        org.junit.Assert.assertNull(numberFormat6);
        org.junit.Assert.assertNotNull(fractionFormat7);
        org.junit.Assert.assertNotNull(attributedCharacterIterator9);
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "10" + "'", str14, "10");
        org.junit.Assert.assertNull(numberFormat18);
        org.junit.Assert.assertNull(numberFormat19);
        org.junit.Assert.assertNull(numberFormat20);
        org.junit.Assert.assertNotNull(fractionFormat21);
        org.junit.Assert.assertNotNull(attributedCharacterIterator23);
        org.junit.Assert.assertNotNull(numberFormat24);
        org.junit.Assert.assertNotNull(fractionFormat25);
        org.junit.Assert.assertNotNull(attributedCharacterIterator27);
        org.junit.Assert.assertNotNull(numberFormat28);
        org.junit.Assert.assertNotNull(fractionFormat31);
        org.junit.Assert.assertNotNull(obj33);
        org.junit.Assert.assertNotNull(numberFormat34);
        org.junit.Assert.assertNotNull(fractionFormat35);
        org.junit.Assert.assertNotNull(attributedCharacterIterator37);
        org.junit.Assert.assertNotNull(numberFormat38);
        org.junit.Assert.assertNotNull(fractionFormat39);
        org.junit.Assert.assertNotNull(attributedCharacterIterator41);
        org.junit.Assert.assertNotNull(numberFormat42);
        org.junit.Assert.assertNotNull(numberFormat47);
    }

    @Test
    public void test0301() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0301");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat5 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat6 = new org.apache.commons.math.fraction.FractionFormat(numberFormat5);
        org.apache.commons.math.fraction.FractionFormat fractionFormat7 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj9 = fractionFormat7.parseObject("0 / 1");
        java.text.NumberFormat numberFormat10 = fractionFormat7.getNumeratorFormat();
        java.lang.Object obj11 = fractionFormat7.clone();
        java.lang.StringBuffer stringBuffer12 = null;
        java.text.FieldPosition fieldPosition13 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer14 = fractionFormat6.format((java.lang.Object) fractionFormat7, stringBuffer12, fieldPosition13);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot format given object as a fraction");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(fractionFormat7);
        org.junit.Assert.assertNotNull(obj9);
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertNotNull(obj11);
    }

    @Test
    public void test0302() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0302");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.text.NumberFormat numberFormat3 = fractionFormat2.getNumeratorFormat();
        java.text.NumberFormat numberFormat4 = fractionFormat2.getNumeratorFormat();
        java.text.NumberFormat numberFormat5 = fractionFormat2.getNumeratorFormat();
        java.text.ParsePosition parsePosition7 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj8 = fractionFormat2.parseObject("10 / 1", parsePosition7);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(numberFormat3);
        org.junit.Assert.assertNull(numberFormat4);
        org.junit.Assert.assertNull(numberFormat5);
    }

    @Test
    public void test0303() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0303");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator2 = fractionFormat0.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat3 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat4 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator6 = fractionFormat4.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat7 = fractionFormat4.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat8 = new org.apache.commons.math.fraction.FractionFormat(numberFormat3, numberFormat7);
        java.text.NumberFormat numberFormat9 = fractionFormat8.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat10 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj13 = fractionFormat11.parseObject("0 / 1");
        java.lang.Object obj15 = fractionFormat11.parseObject("0 / 1");
        java.text.NumberFormat numberFormat16 = fractionFormat11.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat17 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj19 = fractionFormat17.parseObject("0 / 1");
        java.text.NumberFormat numberFormat20 = fractionFormat17.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat21 = new org.apache.commons.math.fraction.FractionFormat(numberFormat16, numberFormat20);
        org.apache.commons.math.fraction.FractionFormat fractionFormat22 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj24 = fractionFormat22.parseObject("0 / 1");
        java.lang.Object obj26 = fractionFormat22.parseObject("0 / 1");
        java.text.NumberFormat numberFormat27 = fractionFormat22.getNumeratorFormat();
        fractionFormat21.setDenominatorFormat(numberFormat27);
        java.lang.Object obj29 = numberFormat27.clone();
        fractionFormat10.setNumeratorFormat(numberFormat27);
        java.lang.Object obj31 = numberFormat27.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat32 = new org.apache.commons.math.fraction.FractionFormat(numberFormat9, numberFormat27);
        java.text.NumberFormat numberFormat33 = fractionFormat32.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat34 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj36 = fractionFormat34.parseObject("0 / 1");
        java.lang.Object obj38 = fractionFormat34.parseObject("0 / 1");
        java.text.NumberFormat numberFormat39 = fractionFormat34.getNumeratorFormat();
        java.text.NumberFormat numberFormat40 = fractionFormat34.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat41 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator43 = fractionFormat41.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat44 = fractionFormat41.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat45 = new org.apache.commons.math.fraction.FractionFormat(numberFormat40, numberFormat44);
        org.apache.commons.math.fraction.FractionFormat fractionFormat46 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator48 = fractionFormat46.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat49 = fractionFormat46.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat50 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator52 = fractionFormat50.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat53 = fractionFormat50.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat54 = new org.apache.commons.math.fraction.FractionFormat(numberFormat49, numberFormat53);
        fractionFormat45.setNumeratorFormat(numberFormat49);
        org.apache.commons.math.fraction.FractionFormat fractionFormat56 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj58 = fractionFormat56.parseObject("0 / 1");
        java.lang.Object obj60 = fractionFormat56.parseObject("0 / 1");
        java.text.NumberFormat numberFormat61 = fractionFormat56.getNumeratorFormat();
        java.text.NumberFormat numberFormat62 = fractionFormat56.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat63 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator65 = fractionFormat63.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat66 = fractionFormat63.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat67 = new org.apache.commons.math.fraction.FractionFormat(numberFormat62, numberFormat66);
        org.apache.commons.math.fraction.FractionFormat fractionFormat68 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator70 = fractionFormat68.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat71 = fractionFormat68.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat72 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator74 = fractionFormat72.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat75 = fractionFormat72.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat76 = new org.apache.commons.math.fraction.FractionFormat(numberFormat71, numberFormat75);
        fractionFormat67.setNumeratorFormat(numberFormat71);
        fractionFormat45.setNumeratorFormat(numberFormat71);
        fractionFormat32.setNumeratorFormat(numberFormat71);
        // The following exception was thrown during execution in test generation
        try {
            java.text.AttributedCharacterIterator attributedCharacterIterator81 = numberFormat71.formatToCharacterIterator((java.lang.Object) "-1 / 1");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot format given Object as a Number");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(attributedCharacterIterator2);
        org.junit.Assert.assertNotNull(numberFormat3);
        org.junit.Assert.assertNotNull(fractionFormat4);
        org.junit.Assert.assertNotNull(attributedCharacterIterator6);
        org.junit.Assert.assertNotNull(numberFormat7);
        org.junit.Assert.assertNotNull(numberFormat9);
        org.junit.Assert.assertNotNull(fractionFormat10);
        org.junit.Assert.assertNotNull(fractionFormat11);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertNotNull(numberFormat16);
        org.junit.Assert.assertNotNull(fractionFormat17);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(numberFormat20);
        org.junit.Assert.assertNotNull(fractionFormat22);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertNotNull(numberFormat27);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertNotNull(numberFormat33);
        org.junit.Assert.assertNotNull(fractionFormat34);
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertNotNull(numberFormat39);
        org.junit.Assert.assertNotNull(numberFormat40);
        org.junit.Assert.assertNotNull(fractionFormat41);
        org.junit.Assert.assertNotNull(attributedCharacterIterator43);
        org.junit.Assert.assertNotNull(numberFormat44);
        org.junit.Assert.assertNotNull(fractionFormat46);
        org.junit.Assert.assertNotNull(attributedCharacterIterator48);
        org.junit.Assert.assertNotNull(numberFormat49);
        org.junit.Assert.assertNotNull(fractionFormat50);
        org.junit.Assert.assertNotNull(attributedCharacterIterator52);
        org.junit.Assert.assertNotNull(numberFormat53);
        org.junit.Assert.assertNotNull(fractionFormat56);
        org.junit.Assert.assertNotNull(obj58);
        org.junit.Assert.assertNotNull(obj60);
        org.junit.Assert.assertNotNull(numberFormat61);
        org.junit.Assert.assertNotNull(numberFormat62);
        org.junit.Assert.assertNotNull(fractionFormat63);
        org.junit.Assert.assertNotNull(attributedCharacterIterator65);
        org.junit.Assert.assertNotNull(numberFormat66);
        org.junit.Assert.assertNotNull(fractionFormat68);
        org.junit.Assert.assertNotNull(attributedCharacterIterator70);
        org.junit.Assert.assertNotNull(numberFormat71);
        org.junit.Assert.assertNotNull(fractionFormat72);
        org.junit.Assert.assertNotNull(attributedCharacterIterator74);
        org.junit.Assert.assertNotNull(numberFormat75);
    }

    @Test
    public void test0304() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0304");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat5 = fractionFormat0.getNumeratorFormat();
        java.text.NumberFormat numberFormat6 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat7 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator9 = fractionFormat7.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat10 = fractionFormat7.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = new org.apache.commons.math.fraction.FractionFormat(numberFormat6, numberFormat10);
        org.apache.commons.math.fraction.FractionFormat fractionFormat12 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator14 = fractionFormat12.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat15 = fractionFormat12.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat16 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator18 = fractionFormat16.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat19 = fractionFormat16.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat20 = new org.apache.commons.math.fraction.FractionFormat(numberFormat15, numberFormat19);
        org.apache.commons.math.fraction.FractionFormat fractionFormat21 = new org.apache.commons.math.fraction.FractionFormat(numberFormat6, numberFormat19);
        java.text.NumberFormat numberFormat22 = null;
        java.text.NumberFormat numberFormat23 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat24 = new org.apache.commons.math.fraction.FractionFormat(numberFormat22, numberFormat23);
        java.text.NumberFormat numberFormat25 = fractionFormat24.getDenominatorFormat();
        java.text.NumberFormat numberFormat26 = fractionFormat24.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat27 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator29 = fractionFormat27.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat30 = fractionFormat27.getDenominatorFormat();
        fractionFormat24.setNumeratorFormat(numberFormat30);
        org.apache.commons.math.fraction.FractionFormat fractionFormat32 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj34 = fractionFormat32.parseObject("0 / 1");
        java.lang.Object obj36 = fractionFormat32.parseObject("0 / 1");
        java.text.NumberFormat numberFormat37 = fractionFormat32.getNumeratorFormat();
        fractionFormat24.setDenominatorFormat(numberFormat37);
        java.text.NumberFormat numberFormat39 = fractionFormat24.getDenominatorFormat();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str40 = numberFormat19.format((java.lang.Object) numberFormat39);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot format given Object as a Number");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertNotNull(fractionFormat7);
        org.junit.Assert.assertNotNull(attributedCharacterIterator9);
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertNotNull(fractionFormat12);
        org.junit.Assert.assertNotNull(attributedCharacterIterator14);
        org.junit.Assert.assertNotNull(numberFormat15);
        org.junit.Assert.assertNotNull(fractionFormat16);
        org.junit.Assert.assertNotNull(attributedCharacterIterator18);
        org.junit.Assert.assertNotNull(numberFormat19);
        org.junit.Assert.assertNull(numberFormat25);
        org.junit.Assert.assertNull(numberFormat26);
        org.junit.Assert.assertNotNull(fractionFormat27);
        org.junit.Assert.assertNotNull(attributedCharacterIterator29);
        org.junit.Assert.assertNotNull(numberFormat30);
        org.junit.Assert.assertNotNull(fractionFormat32);
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertNotNull(numberFormat37);
        org.junit.Assert.assertNotNull(numberFormat39);
    }

    @Test
    public void test0305() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0305");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator2 = fractionFormat0.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat3 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat4 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator6 = fractionFormat4.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat7 = fractionFormat4.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat8 = new org.apache.commons.math.fraction.FractionFormat(numberFormat3, numberFormat7);
        org.apache.commons.math.fraction.FractionFormat fractionFormat9 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj11 = fractionFormat9.parseObject("0 / 1");
        java.lang.Object obj13 = fractionFormat9.parseObject("0 / 1");
        java.text.NumberFormat numberFormat14 = fractionFormat9.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat15 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj17 = fractionFormat15.parseObject("0 / 1");
        java.text.NumberFormat numberFormat18 = fractionFormat15.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat19 = new org.apache.commons.math.fraction.FractionFormat(numberFormat14, numberFormat18);
        java.text.NumberFormat numberFormat20 = fractionFormat19.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat21 = new org.apache.commons.math.fraction.FractionFormat(numberFormat3, numberFormat20);
        java.text.ParsePosition parsePosition23 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.fraction.Fraction fraction24 = fractionFormat21.parse("10", parsePosition23);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(attributedCharacterIterator2);
        org.junit.Assert.assertNotNull(numberFormat3);
        org.junit.Assert.assertNotNull(fractionFormat4);
        org.junit.Assert.assertNotNull(attributedCharacterIterator6);
        org.junit.Assert.assertNotNull(numberFormat7);
        org.junit.Assert.assertNotNull(fractionFormat9);
        org.junit.Assert.assertNotNull(obj11);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertNotNull(numberFormat14);
        org.junit.Assert.assertNotNull(fractionFormat15);
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertNotNull(numberFormat18);
        org.junit.Assert.assertNotNull(numberFormat20);
    }

    @Test
    public void test0306() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0306");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.text.NumberFormat numberFormat3 = fractionFormat2.getDenominatorFormat();
        java.text.NumberFormat numberFormat4 = fractionFormat2.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator7 = fractionFormat5.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat8 = fractionFormat5.getDenominatorFormat();
        fractionFormat2.setNumeratorFormat(numberFormat8);
        java.lang.Object obj10 = numberFormat8.clone();
        java.lang.String str12 = numberFormat8.format((java.lang.Object) (short) 10);
        java.text.NumberFormat numberFormat13 = null;
        java.text.NumberFormat numberFormat14 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat15 = new org.apache.commons.math.fraction.FractionFormat(numberFormat13, numberFormat14);
        java.text.NumberFormat numberFormat16 = fractionFormat15.getDenominatorFormat();
        java.text.NumberFormat numberFormat17 = fractionFormat15.getNumeratorFormat();
        java.text.NumberFormat numberFormat18 = fractionFormat15.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat19 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator21 = fractionFormat19.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat22 = fractionFormat19.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat23 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator25 = fractionFormat23.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat26 = fractionFormat23.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat27 = new org.apache.commons.math.fraction.FractionFormat(numberFormat22, numberFormat26);
        fractionFormat15.setNumeratorFormat(numberFormat22);
        org.apache.commons.math.fraction.FractionFormat fractionFormat29 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj31 = fractionFormat29.parseObject("0 / 1");
        java.text.NumberFormat numberFormat32 = fractionFormat29.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat33 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator35 = fractionFormat33.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat36 = fractionFormat33.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat37 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator39 = fractionFormat37.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat40 = fractionFormat37.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat41 = new org.apache.commons.math.fraction.FractionFormat(numberFormat36, numberFormat40);
        org.apache.commons.math.fraction.FractionFormat fractionFormat42 = new org.apache.commons.math.fraction.FractionFormat(numberFormat32, numberFormat36);
        org.apache.commons.math.fraction.FractionFormat fractionFormat43 = new org.apache.commons.math.fraction.FractionFormat(numberFormat22, numberFormat32);
        org.apache.commons.math.fraction.FractionFormat fractionFormat44 = new org.apache.commons.math.fraction.FractionFormat(numberFormat8, numberFormat32);
        java.lang.Object obj45 = fractionFormat44.clone();
        java.lang.Class<?> wildcardClass46 = obj45.getClass();
        org.junit.Assert.assertNull(numberFormat3);
        org.junit.Assert.assertNull(numberFormat4);
        org.junit.Assert.assertNotNull(fractionFormat5);
        org.junit.Assert.assertNotNull(attributedCharacterIterator7);
        org.junit.Assert.assertNotNull(numberFormat8);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "10" + "'", str12, "10");
        org.junit.Assert.assertNull(numberFormat16);
        org.junit.Assert.assertNull(numberFormat17);
        org.junit.Assert.assertNull(numberFormat18);
        org.junit.Assert.assertNotNull(fractionFormat19);
        org.junit.Assert.assertNotNull(attributedCharacterIterator21);
        org.junit.Assert.assertNotNull(numberFormat22);
        org.junit.Assert.assertNotNull(fractionFormat23);
        org.junit.Assert.assertNotNull(attributedCharacterIterator25);
        org.junit.Assert.assertNotNull(numberFormat26);
        org.junit.Assert.assertNotNull(fractionFormat29);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertNotNull(numberFormat32);
        org.junit.Assert.assertNotNull(fractionFormat33);
        org.junit.Assert.assertNotNull(attributedCharacterIterator35);
        org.junit.Assert.assertNotNull(numberFormat36);
        org.junit.Assert.assertNotNull(fractionFormat37);
        org.junit.Assert.assertNotNull(attributedCharacterIterator39);
        org.junit.Assert.assertNotNull(numberFormat40);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertNotNull(wildcardClass46);
    }

    @Test
    public void test0307() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0307");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat5 = fractionFormat0.getNumeratorFormat();
        java.text.NumberFormat numberFormat6 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat7 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator9 = fractionFormat7.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat10 = fractionFormat7.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = new org.apache.commons.math.fraction.FractionFormat(numberFormat6, numberFormat10);
        org.apache.commons.math.fraction.FractionFormat fractionFormat12 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator14 = fractionFormat12.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat15 = fractionFormat12.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat16 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator18 = fractionFormat16.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat19 = fractionFormat16.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat20 = new org.apache.commons.math.fraction.FractionFormat(numberFormat15, numberFormat19);
        fractionFormat11.setNumeratorFormat(numberFormat15);
        org.apache.commons.math.fraction.FractionFormat fractionFormat22 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj24 = fractionFormat22.parseObject("0 / 1");
        java.lang.Object obj26 = fractionFormat22.parseObject("0 / 1");
        java.text.NumberFormat numberFormat27 = fractionFormat22.getNumeratorFormat();
        java.text.NumberFormat numberFormat28 = fractionFormat22.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat29 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator31 = fractionFormat29.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat32 = fractionFormat29.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat33 = new org.apache.commons.math.fraction.FractionFormat(numberFormat28, numberFormat32);
        org.apache.commons.math.fraction.FractionFormat fractionFormat34 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator36 = fractionFormat34.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat37 = fractionFormat34.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat38 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator40 = fractionFormat38.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat41 = fractionFormat38.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat42 = new org.apache.commons.math.fraction.FractionFormat(numberFormat37, numberFormat41);
        fractionFormat33.setNumeratorFormat(numberFormat37);
        fractionFormat11.setNumeratorFormat(numberFormat37);
        org.apache.commons.math.fraction.FractionFormat fractionFormat45 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.Fraction fraction47 = fractionFormat45.parse("0 / 1");
        java.lang.String str48 = org.apache.commons.math.fraction.FractionFormat.formatFraction(fraction47);
        java.lang.String str49 = org.apache.commons.math.fraction.FractionFormat.formatFraction(fraction47);
        java.lang.String str50 = org.apache.commons.math.fraction.FractionFormat.formatFraction(fraction47);
        java.lang.String str51 = org.apache.commons.math.fraction.FractionFormat.formatFraction(fraction47);
        java.lang.String str52 = org.apache.commons.math.fraction.FractionFormat.formatFraction(fraction47);
        java.lang.StringBuffer stringBuffer53 = null;
        java.text.FieldPosition fieldPosition54 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer55 = fractionFormat11.format(fraction47, stringBuffer53, fieldPosition54);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertNotNull(fractionFormat7);
        org.junit.Assert.assertNotNull(attributedCharacterIterator9);
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertNotNull(fractionFormat12);
        org.junit.Assert.assertNotNull(attributedCharacterIterator14);
        org.junit.Assert.assertNotNull(numberFormat15);
        org.junit.Assert.assertNotNull(fractionFormat16);
        org.junit.Assert.assertNotNull(attributedCharacterIterator18);
        org.junit.Assert.assertNotNull(numberFormat19);
        org.junit.Assert.assertNotNull(fractionFormat22);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertNotNull(numberFormat27);
        org.junit.Assert.assertNotNull(numberFormat28);
        org.junit.Assert.assertNotNull(fractionFormat29);
        org.junit.Assert.assertNotNull(attributedCharacterIterator31);
        org.junit.Assert.assertNotNull(numberFormat32);
        org.junit.Assert.assertNotNull(fractionFormat34);
        org.junit.Assert.assertNotNull(attributedCharacterIterator36);
        org.junit.Assert.assertNotNull(numberFormat37);
        org.junit.Assert.assertNotNull(fractionFormat38);
        org.junit.Assert.assertNotNull(attributedCharacterIterator40);
        org.junit.Assert.assertNotNull(numberFormat41);
        org.junit.Assert.assertNotNull(fractionFormat45);
        org.junit.Assert.assertNotNull(fraction47);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "0 / 1" + "'", str48, "0 / 1");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "0 / 1" + "'", str49, "0 / 1");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "0 / 1" + "'", str50, "0 / 1");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "0 / 1" + "'", str51, "0 / 1");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "0 / 1" + "'", str52, "0 / 1");
    }

    @Test
    public void test0308() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0308");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.text.NumberFormat numberFormat3 = fractionFormat2.getNumeratorFormat();
        java.text.NumberFormat numberFormat4 = fractionFormat2.getNumeratorFormat();
        java.text.NumberFormat numberFormat5 = fractionFormat2.getNumeratorFormat();
        java.text.NumberFormat numberFormat6 = fractionFormat2.getNumeratorFormat();
        org.apache.commons.math.fraction.Fraction fraction7 = null;
        java.lang.StringBuffer stringBuffer8 = null;
        java.text.FieldPosition fieldPosition9 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer10 = fractionFormat2.format(fraction7, stringBuffer8, fieldPosition9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(numberFormat3);
        org.junit.Assert.assertNull(numberFormat4);
        org.junit.Assert.assertNull(numberFormat5);
        org.junit.Assert.assertNull(numberFormat6);
    }

    @Test
    public void test0309() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0309");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.text.NumberFormat numberFormat3 = fractionFormat2.getDenominatorFormat();
        java.text.NumberFormat numberFormat4 = fractionFormat2.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj7 = fractionFormat5.parseObject("0 / 1");
        java.lang.Object obj9 = fractionFormat5.parseObject("0 / 1");
        java.text.NumberFormat numberFormat10 = fractionFormat5.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj13 = fractionFormat11.parseObject("0 / 1");
        java.text.NumberFormat numberFormat14 = fractionFormat11.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat15 = new org.apache.commons.math.fraction.FractionFormat(numberFormat10, numberFormat14);
        java.text.AttributedCharacterIterator attributedCharacterIterator17 = numberFormat10.formatToCharacterIterator((java.lang.Object) (-1));
        fractionFormat2.setDenominatorFormat(numberFormat10);
        java.lang.Object obj19 = numberFormat10.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat20 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj22 = fractionFormat20.parseObject("0 / 1");
        java.lang.Object obj24 = fractionFormat20.parseObject("0 / 1");
        java.text.NumberFormat numberFormat25 = fractionFormat20.getNumeratorFormat();
        java.lang.Object obj26 = numberFormat25.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat27 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj29 = fractionFormat27.parseObject("0 / 1");
        java.lang.Object obj31 = fractionFormat27.parseObject("0 / 1");
        java.text.NumberFormat numberFormat32 = fractionFormat27.getNumeratorFormat();
        java.text.NumberFormat numberFormat33 = fractionFormat27.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat34 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator36 = fractionFormat34.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat37 = fractionFormat34.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat38 = new org.apache.commons.math.fraction.FractionFormat(numberFormat33, numberFormat37);
        org.apache.commons.math.fraction.FractionFormat fractionFormat39 = new org.apache.commons.math.fraction.FractionFormat(numberFormat25, numberFormat37);
        org.apache.commons.math.fraction.FractionFormat fractionFormat40 = new org.apache.commons.math.fraction.FractionFormat(numberFormat10, numberFormat25);
        java.text.NumberFormat numberFormat41 = null;
        java.text.NumberFormat numberFormat42 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat43 = new org.apache.commons.math.fraction.FractionFormat(numberFormat41, numberFormat42);
        java.text.NumberFormat numberFormat44 = fractionFormat43.getDenominatorFormat();
        java.text.NumberFormat numberFormat45 = fractionFormat43.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat46 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator48 = fractionFormat46.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat49 = fractionFormat46.getDenominatorFormat();
        fractionFormat43.setNumeratorFormat(numberFormat49);
        org.apache.commons.math.fraction.FractionFormat fractionFormat51 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator53 = fractionFormat51.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat54 = fractionFormat51.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat55 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator57 = fractionFormat55.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat58 = fractionFormat55.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat59 = new org.apache.commons.math.fraction.FractionFormat(numberFormat54, numberFormat58);
        java.text.NumberFormat numberFormat60 = fractionFormat59.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat61 = new org.apache.commons.math.fraction.FractionFormat(numberFormat60);
        fractionFormat43.setNumeratorFormat(numberFormat60);
        org.apache.commons.math.fraction.FractionFormat fractionFormat63 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator65 = fractionFormat63.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.lang.String str66 = numberFormat60.format((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat67 = null;
        java.text.NumberFormat numberFormat68 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat69 = new org.apache.commons.math.fraction.FractionFormat(numberFormat67, numberFormat68);
        java.text.NumberFormat numberFormat70 = fractionFormat69.getDenominatorFormat();
        java.text.NumberFormat numberFormat71 = fractionFormat69.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat72 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator74 = fractionFormat72.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat75 = fractionFormat72.getDenominatorFormat();
        fractionFormat69.setNumeratorFormat(numberFormat75);
        java.text.NumberFormat numberFormat77 = null;
        java.text.NumberFormat numberFormat78 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat79 = new org.apache.commons.math.fraction.FractionFormat(numberFormat77, numberFormat78);
        java.text.NumberFormat numberFormat80 = fractionFormat79.getNumeratorFormat();
        java.text.NumberFormat numberFormat81 = fractionFormat79.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat82 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj84 = fractionFormat82.parseObject("0 / 1");
        java.lang.Object obj86 = fractionFormat82.parseObject("0 / 1");
        java.text.NumberFormat numberFormat87 = fractionFormat82.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat88 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj90 = fractionFormat88.parseObject("0 / 1");
        java.text.NumberFormat numberFormat91 = fractionFormat88.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat92 = new org.apache.commons.math.fraction.FractionFormat(numberFormat87, numberFormat91);
        fractionFormat79.setNumeratorFormat(numberFormat87);
        fractionFormat69.setDenominatorFormat(numberFormat87);
        java.text.NumberFormat numberFormat95 = fractionFormat69.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat96 = new org.apache.commons.math.fraction.FractionFormat(numberFormat60, numberFormat95);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str97 = numberFormat10.format((java.lang.Object) numberFormat95);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot format given Object as a Number");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(numberFormat3);
        org.junit.Assert.assertNull(numberFormat4);
        org.junit.Assert.assertNotNull(fractionFormat5);
        org.junit.Assert.assertNotNull(obj7);
        org.junit.Assert.assertNotNull(obj9);
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertNotNull(fractionFormat11);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertNotNull(numberFormat14);
        org.junit.Assert.assertNotNull(attributedCharacterIterator17);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(fractionFormat20);
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertNotNull(numberFormat25);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertNotNull(fractionFormat27);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertNotNull(numberFormat32);
        org.junit.Assert.assertNotNull(numberFormat33);
        org.junit.Assert.assertNotNull(fractionFormat34);
        org.junit.Assert.assertNotNull(attributedCharacterIterator36);
        org.junit.Assert.assertNotNull(numberFormat37);
        org.junit.Assert.assertNull(numberFormat44);
        org.junit.Assert.assertNull(numberFormat45);
        org.junit.Assert.assertNotNull(fractionFormat46);
        org.junit.Assert.assertNotNull(attributedCharacterIterator48);
        org.junit.Assert.assertNotNull(numberFormat49);
        org.junit.Assert.assertNotNull(fractionFormat51);
        org.junit.Assert.assertNotNull(attributedCharacterIterator53);
        org.junit.Assert.assertNotNull(numberFormat54);
        org.junit.Assert.assertNotNull(fractionFormat55);
        org.junit.Assert.assertNotNull(attributedCharacterIterator57);
        org.junit.Assert.assertNotNull(numberFormat58);
        org.junit.Assert.assertNotNull(numberFormat60);
        org.junit.Assert.assertNotNull(fractionFormat63);
        org.junit.Assert.assertNotNull(attributedCharacterIterator65);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "100" + "'", str66, "100");
        org.junit.Assert.assertNull(numberFormat70);
        org.junit.Assert.assertNull(numberFormat71);
        org.junit.Assert.assertNotNull(fractionFormat72);
        org.junit.Assert.assertNotNull(attributedCharacterIterator74);
        org.junit.Assert.assertNotNull(numberFormat75);
        org.junit.Assert.assertNull(numberFormat80);
        org.junit.Assert.assertNull(numberFormat81);
        org.junit.Assert.assertNotNull(fractionFormat82);
        org.junit.Assert.assertNotNull(obj84);
        org.junit.Assert.assertNotNull(obj86);
        org.junit.Assert.assertNotNull(numberFormat87);
        org.junit.Assert.assertNotNull(fractionFormat88);
        org.junit.Assert.assertNotNull(obj90);
        org.junit.Assert.assertNotNull(numberFormat91);
        org.junit.Assert.assertNotNull(numberFormat95);
    }

    @Test
    public void test0310() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0310");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.text.NumberFormat numberFormat3 = fractionFormat2.getDenominatorFormat();
        java.text.NumberFormat numberFormat4 = fractionFormat2.getNumeratorFormat();
        java.text.NumberFormat numberFormat5 = fractionFormat2.getNumeratorFormat();
        java.text.NumberFormat numberFormat6 = fractionFormat2.getDenominatorFormat();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj7 = numberFormat6.clone();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(numberFormat3);
        org.junit.Assert.assertNull(numberFormat4);
        org.junit.Assert.assertNull(numberFormat5);
        org.junit.Assert.assertNull(numberFormat6);
    }

    @Test
    public void test0311() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0311");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.Fraction fraction2 = fractionFormat0.parse("0 / 1");
        java.lang.String str3 = org.apache.commons.math.fraction.FractionFormat.formatFraction(fraction2);
        java.lang.String str4 = org.apache.commons.math.fraction.FractionFormat.formatFraction(fraction2);
        java.lang.String str5 = org.apache.commons.math.fraction.FractionFormat.formatFraction(fraction2);
        java.lang.String str6 = org.apache.commons.math.fraction.FractionFormat.formatFraction(fraction2);
        java.lang.String str7 = org.apache.commons.math.fraction.FractionFormat.formatFraction(fraction2);
        java.lang.String str8 = org.apache.commons.math.fraction.FractionFormat.formatFraction(fraction2);
        java.lang.String str9 = org.apache.commons.math.fraction.FractionFormat.formatFraction(fraction2);
        java.lang.String str10 = org.apache.commons.math.fraction.FractionFormat.formatFraction(fraction2);
        java.lang.Class<?> wildcardClass11 = fraction2.getClass();
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(fraction2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "0 / 1" + "'", str3, "0 / 1");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "0 / 1" + "'", str4, "0 / 1");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "0 / 1" + "'", str5, "0 / 1");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "0 / 1" + "'", str6, "0 / 1");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "0 / 1" + "'", str7, "0 / 1");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "0 / 1" + "'", str8, "0 / 1");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "0 / 1" + "'", str9, "0 / 1");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "0 / 1" + "'", str10, "0 / 1");
        org.junit.Assert.assertNotNull(wildcardClass11);
    }

    @Test
    public void test0312() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0312");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.text.NumberFormat numberFormat3 = fractionFormat2.getNumeratorFormat();
        java.text.NumberFormat numberFormat4 = fractionFormat2.getNumeratorFormat();
        java.text.NumberFormat numberFormat5 = fractionFormat2.getDenominatorFormat();
        java.text.NumberFormat numberFormat6 = null;
        java.text.NumberFormat numberFormat7 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat8 = new org.apache.commons.math.fraction.FractionFormat(numberFormat6, numberFormat7);
        java.text.NumberFormat numberFormat9 = fractionFormat8.getDenominatorFormat();
        java.text.NumberFormat numberFormat10 = fractionFormat8.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator13 = fractionFormat11.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat14 = fractionFormat11.getDenominatorFormat();
        fractionFormat8.setNumeratorFormat(numberFormat14);
        java.lang.Object obj16 = numberFormat14.clone();
        java.lang.String str18 = numberFormat14.format((java.lang.Object) (short) 10);
        java.text.NumberFormat numberFormat19 = null;
        java.text.NumberFormat numberFormat20 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat21 = new org.apache.commons.math.fraction.FractionFormat(numberFormat19, numberFormat20);
        java.text.NumberFormat numberFormat22 = fractionFormat21.getDenominatorFormat();
        java.text.NumberFormat numberFormat23 = fractionFormat21.getNumeratorFormat();
        java.text.NumberFormat numberFormat24 = fractionFormat21.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat25 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator27 = fractionFormat25.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat28 = fractionFormat25.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat29 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator31 = fractionFormat29.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat32 = fractionFormat29.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat33 = new org.apache.commons.math.fraction.FractionFormat(numberFormat28, numberFormat32);
        fractionFormat21.setNumeratorFormat(numberFormat28);
        org.apache.commons.math.fraction.FractionFormat fractionFormat35 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj37 = fractionFormat35.parseObject("0 / 1");
        java.text.NumberFormat numberFormat38 = fractionFormat35.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat39 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator41 = fractionFormat39.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat42 = fractionFormat39.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat43 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator45 = fractionFormat43.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat46 = fractionFormat43.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat47 = new org.apache.commons.math.fraction.FractionFormat(numberFormat42, numberFormat46);
        org.apache.commons.math.fraction.FractionFormat fractionFormat48 = new org.apache.commons.math.fraction.FractionFormat(numberFormat38, numberFormat42);
        org.apache.commons.math.fraction.FractionFormat fractionFormat49 = new org.apache.commons.math.fraction.FractionFormat(numberFormat28, numberFormat38);
        org.apache.commons.math.fraction.FractionFormat fractionFormat50 = new org.apache.commons.math.fraction.FractionFormat(numberFormat14, numberFormat38);
        org.apache.commons.math.fraction.FractionFormat fractionFormat51 = new org.apache.commons.math.fraction.FractionFormat(numberFormat14);
        org.apache.commons.math.fraction.Fraction fraction53 = fractionFormat51.parse("100");
        java.lang.StringBuffer stringBuffer54 = null;
        java.text.FieldPosition fieldPosition55 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer56 = fractionFormat2.format(fraction53, stringBuffer54, fieldPosition55);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(numberFormat3);
        org.junit.Assert.assertNull(numberFormat4);
        org.junit.Assert.assertNull(numberFormat5);
        org.junit.Assert.assertNull(numberFormat9);
        org.junit.Assert.assertNull(numberFormat10);
        org.junit.Assert.assertNotNull(fractionFormat11);
        org.junit.Assert.assertNotNull(attributedCharacterIterator13);
        org.junit.Assert.assertNotNull(numberFormat14);
        org.junit.Assert.assertNotNull(obj16);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "10" + "'", str18, "10");
        org.junit.Assert.assertNull(numberFormat22);
        org.junit.Assert.assertNull(numberFormat23);
        org.junit.Assert.assertNull(numberFormat24);
        org.junit.Assert.assertNotNull(fractionFormat25);
        org.junit.Assert.assertNotNull(attributedCharacterIterator27);
        org.junit.Assert.assertNotNull(numberFormat28);
        org.junit.Assert.assertNotNull(fractionFormat29);
        org.junit.Assert.assertNotNull(attributedCharacterIterator31);
        org.junit.Assert.assertNotNull(numberFormat32);
        org.junit.Assert.assertNotNull(fractionFormat35);
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertNotNull(numberFormat38);
        org.junit.Assert.assertNotNull(fractionFormat39);
        org.junit.Assert.assertNotNull(attributedCharacterIterator41);
        org.junit.Assert.assertNotNull(numberFormat42);
        org.junit.Assert.assertNotNull(fractionFormat43);
        org.junit.Assert.assertNotNull(attributedCharacterIterator45);
        org.junit.Assert.assertNotNull(numberFormat46);
        org.junit.Assert.assertNotNull(fraction53);
    }

    @Test
    public void test0313() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0313");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat5 = fractionFormat0.getNumeratorFormat();
        java.text.NumberFormat numberFormat6 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat7 = new org.apache.commons.math.fraction.FractionFormat(numberFormat6);
        org.apache.commons.math.fraction.FractionFormat fractionFormat8 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj10 = fractionFormat8.parseObject("0 / 1");
        java.lang.Object obj12 = fractionFormat8.parseObject("0 / 1");
        java.text.NumberFormat numberFormat13 = fractionFormat8.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat14 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj16 = fractionFormat14.parseObject("0 / 1");
        java.text.NumberFormat numberFormat17 = fractionFormat14.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat18 = new org.apache.commons.math.fraction.FractionFormat(numberFormat13, numberFormat17);
        org.apache.commons.math.fraction.FractionFormat fractionFormat19 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj21 = fractionFormat19.parseObject("0 / 1");
        java.lang.Object obj23 = fractionFormat19.parseObject("0 / 1");
        java.text.NumberFormat numberFormat24 = fractionFormat19.getNumeratorFormat();
        fractionFormat18.setDenominatorFormat(numberFormat24);
        org.apache.commons.math.fraction.FractionFormat fractionFormat26 = new org.apache.commons.math.fraction.FractionFormat(numberFormat6, numberFormat24);
        org.apache.commons.math.fraction.FractionFormat fractionFormat27 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj29 = fractionFormat27.parseObject("0 / 1");
        java.lang.Object obj31 = fractionFormat27.parseObject("0 / 1");
        java.text.NumberFormat numberFormat32 = fractionFormat27.getNumeratorFormat();
        java.text.NumberFormat numberFormat33 = fractionFormat27.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat34 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator36 = fractionFormat34.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat37 = fractionFormat34.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat38 = new org.apache.commons.math.fraction.FractionFormat(numberFormat33, numberFormat37);
        org.apache.commons.math.fraction.FractionFormat fractionFormat39 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator41 = fractionFormat39.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat42 = fractionFormat39.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat43 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator45 = fractionFormat43.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat46 = fractionFormat43.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat47 = new org.apache.commons.math.fraction.FractionFormat(numberFormat42, numberFormat46);
        org.apache.commons.math.fraction.FractionFormat fractionFormat48 = new org.apache.commons.math.fraction.FractionFormat(numberFormat33, numberFormat46);
        java.text.NumberFormat numberFormat49 = fractionFormat48.getDenominatorFormat();
        java.lang.Object obj51 = numberFormat49.parseObject("-1 / 1");
        org.apache.commons.math.fraction.FractionFormat fractionFormat52 = new org.apache.commons.math.fraction.FractionFormat(numberFormat49);
        org.apache.commons.math.fraction.FractionFormat fractionFormat53 = new org.apache.commons.math.fraction.FractionFormat(numberFormat24, numberFormat49);
        org.apache.commons.math.fraction.FractionFormat fractionFormat54 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj56 = fractionFormat54.parseObject("0 / 1");
        java.lang.Object obj58 = fractionFormat54.parseObject("0 / 1");
        java.text.NumberFormat numberFormat59 = fractionFormat54.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat60 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj62 = fractionFormat60.parseObject("0 / 1");
        java.text.NumberFormat numberFormat63 = fractionFormat60.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat64 = new org.apache.commons.math.fraction.FractionFormat(numberFormat59, numberFormat63);
        java.text.NumberFormat numberFormat65 = fractionFormat64.getNumeratorFormat();
        java.text.NumberFormat numberFormat66 = fractionFormat64.getNumeratorFormat();
        java.lang.StringBuffer stringBuffer67 = null;
        java.text.FieldPosition fieldPosition68 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer69 = fractionFormat53.format((java.lang.Object) fractionFormat64, stringBuffer67, fieldPosition68);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot format given object as a fraction");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertNotNull(fractionFormat8);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertNotNull(numberFormat13);
        org.junit.Assert.assertNotNull(fractionFormat14);
        org.junit.Assert.assertNotNull(obj16);
        org.junit.Assert.assertNotNull(numberFormat17);
        org.junit.Assert.assertNotNull(fractionFormat19);
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertNotNull(numberFormat24);
        org.junit.Assert.assertNotNull(fractionFormat27);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertNotNull(numberFormat32);
        org.junit.Assert.assertNotNull(numberFormat33);
        org.junit.Assert.assertNotNull(fractionFormat34);
        org.junit.Assert.assertNotNull(attributedCharacterIterator36);
        org.junit.Assert.assertNotNull(numberFormat37);
        org.junit.Assert.assertNotNull(fractionFormat39);
        org.junit.Assert.assertNotNull(attributedCharacterIterator41);
        org.junit.Assert.assertNotNull(numberFormat42);
        org.junit.Assert.assertNotNull(fractionFormat43);
        org.junit.Assert.assertNotNull(attributedCharacterIterator45);
        org.junit.Assert.assertNotNull(numberFormat46);
        org.junit.Assert.assertNotNull(numberFormat49);
        org.junit.Assert.assertEquals("'" + obj51 + "' != '" + (-1L) + "'", obj51, (-1L));
        org.junit.Assert.assertNotNull(fractionFormat54);
        org.junit.Assert.assertNotNull(obj56);
        org.junit.Assert.assertNotNull(obj58);
        org.junit.Assert.assertNotNull(numberFormat59);
        org.junit.Assert.assertNotNull(fractionFormat60);
        org.junit.Assert.assertNotNull(obj62);
        org.junit.Assert.assertNotNull(numberFormat63);
        org.junit.Assert.assertNotNull(numberFormat65);
        org.junit.Assert.assertNotNull(numberFormat66);
    }

    @Test
    public void test0314() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0314");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.text.NumberFormat numberFormat3 = fractionFormat2.getDenominatorFormat();
        java.text.NumberFormat numberFormat4 = fractionFormat2.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator7 = fractionFormat5.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat8 = fractionFormat5.getDenominatorFormat();
        fractionFormat2.setNumeratorFormat(numberFormat8);
        java.lang.Object obj10 = numberFormat8.clone();
        java.lang.String str12 = numberFormat8.format((java.lang.Object) (short) 10);
        java.text.NumberFormat numberFormat13 = null;
        java.text.NumberFormat numberFormat14 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat15 = new org.apache.commons.math.fraction.FractionFormat(numberFormat13, numberFormat14);
        java.text.NumberFormat numberFormat16 = fractionFormat15.getDenominatorFormat();
        java.text.NumberFormat numberFormat17 = fractionFormat15.getNumeratorFormat();
        java.text.NumberFormat numberFormat18 = fractionFormat15.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat19 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator21 = fractionFormat19.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat22 = fractionFormat19.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat23 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator25 = fractionFormat23.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat26 = fractionFormat23.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat27 = new org.apache.commons.math.fraction.FractionFormat(numberFormat22, numberFormat26);
        fractionFormat15.setNumeratorFormat(numberFormat22);
        org.apache.commons.math.fraction.FractionFormat fractionFormat29 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj31 = fractionFormat29.parseObject("0 / 1");
        java.text.NumberFormat numberFormat32 = fractionFormat29.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat33 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator35 = fractionFormat33.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat36 = fractionFormat33.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat37 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator39 = fractionFormat37.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat40 = fractionFormat37.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat41 = new org.apache.commons.math.fraction.FractionFormat(numberFormat36, numberFormat40);
        org.apache.commons.math.fraction.FractionFormat fractionFormat42 = new org.apache.commons.math.fraction.FractionFormat(numberFormat32, numberFormat36);
        org.apache.commons.math.fraction.FractionFormat fractionFormat43 = new org.apache.commons.math.fraction.FractionFormat(numberFormat22, numberFormat32);
        org.apache.commons.math.fraction.FractionFormat fractionFormat44 = new org.apache.commons.math.fraction.FractionFormat(numberFormat8, numberFormat32);
        org.apache.commons.math.fraction.FractionFormat fractionFormat45 = new org.apache.commons.math.fraction.FractionFormat(numberFormat8);
        org.apache.commons.math.fraction.Fraction fraction47 = fractionFormat45.parse("100");
        java.text.NumberFormat numberFormat48 = fractionFormat45.getNumeratorFormat();
        java.lang.StringBuffer stringBuffer50 = null;
        java.text.FieldPosition fieldPosition51 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer52 = fractionFormat45.format((java.lang.Object) false, stringBuffer50, fieldPosition51);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot format given object as a fraction");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(numberFormat3);
        org.junit.Assert.assertNull(numberFormat4);
        org.junit.Assert.assertNotNull(fractionFormat5);
        org.junit.Assert.assertNotNull(attributedCharacterIterator7);
        org.junit.Assert.assertNotNull(numberFormat8);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "10" + "'", str12, "10");
        org.junit.Assert.assertNull(numberFormat16);
        org.junit.Assert.assertNull(numberFormat17);
        org.junit.Assert.assertNull(numberFormat18);
        org.junit.Assert.assertNotNull(fractionFormat19);
        org.junit.Assert.assertNotNull(attributedCharacterIterator21);
        org.junit.Assert.assertNotNull(numberFormat22);
        org.junit.Assert.assertNotNull(fractionFormat23);
        org.junit.Assert.assertNotNull(attributedCharacterIterator25);
        org.junit.Assert.assertNotNull(numberFormat26);
        org.junit.Assert.assertNotNull(fractionFormat29);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertNotNull(numberFormat32);
        org.junit.Assert.assertNotNull(fractionFormat33);
        org.junit.Assert.assertNotNull(attributedCharacterIterator35);
        org.junit.Assert.assertNotNull(numberFormat36);
        org.junit.Assert.assertNotNull(fractionFormat37);
        org.junit.Assert.assertNotNull(attributedCharacterIterator39);
        org.junit.Assert.assertNotNull(numberFormat40);
        org.junit.Assert.assertNotNull(fraction47);
        org.junit.Assert.assertNotNull(numberFormat48);
    }

    @Test
    public void test0315() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0315");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat5 = fractionFormat0.getNumeratorFormat();
        java.text.NumberFormat numberFormat6 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat7 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator9 = fractionFormat7.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat10 = fractionFormat7.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = new org.apache.commons.math.fraction.FractionFormat(numberFormat6, numberFormat10);
        org.apache.commons.math.fraction.FractionFormat fractionFormat12 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator14 = fractionFormat12.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat15 = fractionFormat12.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat16 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator18 = fractionFormat16.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat19 = fractionFormat16.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat20 = new org.apache.commons.math.fraction.FractionFormat(numberFormat15, numberFormat19);
        java.text.NumberFormat numberFormat21 = fractionFormat20.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat22 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat23 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj25 = fractionFormat23.parseObject("0 / 1");
        java.lang.Object obj27 = fractionFormat23.parseObject("0 / 1");
        java.text.NumberFormat numberFormat28 = fractionFormat23.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat29 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj31 = fractionFormat29.parseObject("0 / 1");
        java.text.NumberFormat numberFormat32 = fractionFormat29.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat33 = new org.apache.commons.math.fraction.FractionFormat(numberFormat28, numberFormat32);
        org.apache.commons.math.fraction.FractionFormat fractionFormat34 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj36 = fractionFormat34.parseObject("0 / 1");
        java.lang.Object obj38 = fractionFormat34.parseObject("0 / 1");
        java.text.NumberFormat numberFormat39 = fractionFormat34.getNumeratorFormat();
        fractionFormat33.setDenominatorFormat(numberFormat39);
        java.lang.Object obj41 = numberFormat39.clone();
        fractionFormat22.setNumeratorFormat(numberFormat39);
        java.lang.Object obj43 = numberFormat39.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat44 = new org.apache.commons.math.fraction.FractionFormat(numberFormat21, numberFormat39);
        org.apache.commons.math.fraction.FractionFormat fractionFormat45 = new org.apache.commons.math.fraction.FractionFormat(numberFormat6, numberFormat39);
        // The following exception was thrown during execution in test generation
        try {
            java.text.AttributedCharacterIterator attributedCharacterIterator47 = numberFormat39.formatToCharacterIterator((java.lang.Object) "10");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot format given Object as a Number");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertNotNull(fractionFormat7);
        org.junit.Assert.assertNotNull(attributedCharacterIterator9);
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertNotNull(fractionFormat12);
        org.junit.Assert.assertNotNull(attributedCharacterIterator14);
        org.junit.Assert.assertNotNull(numberFormat15);
        org.junit.Assert.assertNotNull(fractionFormat16);
        org.junit.Assert.assertNotNull(attributedCharacterIterator18);
        org.junit.Assert.assertNotNull(numberFormat19);
        org.junit.Assert.assertNotNull(numberFormat21);
        org.junit.Assert.assertNotNull(fractionFormat22);
        org.junit.Assert.assertNotNull(fractionFormat23);
        org.junit.Assert.assertNotNull(obj25);
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertNotNull(numberFormat28);
        org.junit.Assert.assertNotNull(fractionFormat29);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertNotNull(numberFormat32);
        org.junit.Assert.assertNotNull(fractionFormat34);
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertNotNull(numberFormat39);
        org.junit.Assert.assertNotNull(obj41);
        org.junit.Assert.assertNotNull(obj43);
    }

    @Test
    public void test0316() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0316");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat5 = fractionFormat0.getNumeratorFormat();
        java.lang.Object obj6 = numberFormat5.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat7 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj9 = fractionFormat7.parseObject("0 / 1");
        java.lang.Object obj11 = fractionFormat7.parseObject("0 / 1");
        java.text.NumberFormat numberFormat12 = fractionFormat7.getNumeratorFormat();
        java.text.NumberFormat numberFormat13 = fractionFormat7.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat14 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator16 = fractionFormat14.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat17 = fractionFormat14.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat18 = new org.apache.commons.math.fraction.FractionFormat(numberFormat13, numberFormat17);
        org.apache.commons.math.fraction.FractionFormat fractionFormat19 = new org.apache.commons.math.fraction.FractionFormat(numberFormat5, numberFormat17);
        java.text.NumberFormat numberFormat20 = fractionFormat19.getNumeratorFormat();
        java.text.NumberFormat numberFormat21 = null;
        java.text.NumberFormat numberFormat22 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat23 = new org.apache.commons.math.fraction.FractionFormat(numberFormat21, numberFormat22);
        java.text.NumberFormat numberFormat24 = fractionFormat23.getDenominatorFormat();
        java.text.NumberFormat numberFormat25 = fractionFormat23.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat26 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj28 = fractionFormat26.parseObject("0 / 1");
        java.lang.Object obj30 = fractionFormat26.parseObject("0 / 1");
        java.text.NumberFormat numberFormat31 = fractionFormat26.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat32 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj34 = fractionFormat32.parseObject("0 / 1");
        java.text.NumberFormat numberFormat35 = fractionFormat32.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat36 = new org.apache.commons.math.fraction.FractionFormat(numberFormat31, numberFormat35);
        java.text.AttributedCharacterIterator attributedCharacterIterator38 = numberFormat31.formatToCharacterIterator((java.lang.Object) (-1));
        fractionFormat23.setDenominatorFormat(numberFormat31);
        java.lang.Object obj40 = numberFormat31.clone();
        java.text.NumberFormat numberFormat41 = null;
        java.text.NumberFormat numberFormat42 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat43 = new org.apache.commons.math.fraction.FractionFormat(numberFormat41, numberFormat42);
        java.text.NumberFormat numberFormat44 = fractionFormat43.getDenominatorFormat();
        java.text.NumberFormat numberFormat45 = fractionFormat43.getNumeratorFormat();
        java.text.NumberFormat numberFormat46 = fractionFormat43.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat47 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj49 = fractionFormat47.parseObject("0 / 1");
        java.lang.Object obj51 = fractionFormat47.parseObject("0 / 1");
        java.text.NumberFormat numberFormat52 = fractionFormat47.getNumeratorFormat();
        java.lang.Object obj53 = numberFormat52.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat54 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj56 = fractionFormat54.parseObject("0 / 1");
        java.lang.Object obj58 = fractionFormat54.parseObject("0 / 1");
        java.text.NumberFormat numberFormat59 = fractionFormat54.getNumeratorFormat();
        java.text.NumberFormat numberFormat60 = fractionFormat54.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat61 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator63 = fractionFormat61.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat64 = fractionFormat61.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat65 = new org.apache.commons.math.fraction.FractionFormat(numberFormat60, numberFormat64);
        org.apache.commons.math.fraction.FractionFormat fractionFormat66 = new org.apache.commons.math.fraction.FractionFormat(numberFormat52, numberFormat64);
        fractionFormat43.setNumeratorFormat(numberFormat52);
        org.apache.commons.math.fraction.FractionFormat fractionFormat68 = new org.apache.commons.math.fraction.FractionFormat(numberFormat31, numberFormat52);
        org.apache.commons.math.fraction.FractionFormat fractionFormat69 = new org.apache.commons.math.fraction.FractionFormat(numberFormat20, numberFormat52);
        org.apache.commons.math.fraction.FractionFormat fractionFormat70 = new org.apache.commons.math.fraction.FractionFormat(numberFormat52);
        java.lang.Class<?> wildcardClass71 = fractionFormat70.getClass();
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(obj6);
        org.junit.Assert.assertNotNull(fractionFormat7);
        org.junit.Assert.assertNotNull(obj9);
        org.junit.Assert.assertNotNull(obj11);
        org.junit.Assert.assertNotNull(numberFormat12);
        org.junit.Assert.assertNotNull(numberFormat13);
        org.junit.Assert.assertNotNull(fractionFormat14);
        org.junit.Assert.assertNotNull(attributedCharacterIterator16);
        org.junit.Assert.assertNotNull(numberFormat17);
        org.junit.Assert.assertNotNull(numberFormat20);
        org.junit.Assert.assertNull(numberFormat24);
        org.junit.Assert.assertNull(numberFormat25);
        org.junit.Assert.assertNotNull(fractionFormat26);
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertNotNull(numberFormat31);
        org.junit.Assert.assertNotNull(fractionFormat32);
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertNotNull(numberFormat35);
        org.junit.Assert.assertNotNull(attributedCharacterIterator38);
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertNull(numberFormat44);
        org.junit.Assert.assertNull(numberFormat45);
        org.junit.Assert.assertNull(numberFormat46);
        org.junit.Assert.assertNotNull(fractionFormat47);
        org.junit.Assert.assertNotNull(obj49);
        org.junit.Assert.assertNotNull(obj51);
        org.junit.Assert.assertNotNull(numberFormat52);
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertNotNull(fractionFormat54);
        org.junit.Assert.assertNotNull(obj56);
        org.junit.Assert.assertNotNull(obj58);
        org.junit.Assert.assertNotNull(numberFormat59);
        org.junit.Assert.assertNotNull(numberFormat60);
        org.junit.Assert.assertNotNull(fractionFormat61);
        org.junit.Assert.assertNotNull(attributedCharacterIterator63);
        org.junit.Assert.assertNotNull(numberFormat64);
        org.junit.Assert.assertNotNull(wildcardClass71);
    }

    @Test
    public void test0317() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0317");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.lang.Object obj3 = fractionFormat2.clone();
        java.text.NumberFormat numberFormat4 = null;
        java.text.NumberFormat numberFormat5 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat6 = new org.apache.commons.math.fraction.FractionFormat(numberFormat4, numberFormat5);
        java.text.NumberFormat numberFormat7 = fractionFormat6.getDenominatorFormat();
        java.text.NumberFormat numberFormat8 = fractionFormat6.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat9 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator11 = fractionFormat9.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat12 = fractionFormat9.getDenominatorFormat();
        fractionFormat6.setNumeratorFormat(numberFormat12);
        java.lang.Object obj14 = numberFormat12.clone();
        java.lang.String str16 = numberFormat12.format((java.lang.Object) (short) 10);
        org.apache.commons.math.fraction.FractionFormat fractionFormat17 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator19 = fractionFormat17.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat20 = fractionFormat17.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat21 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator23 = fractionFormat21.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat24 = fractionFormat21.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat25 = new org.apache.commons.math.fraction.FractionFormat(numberFormat20, numberFormat24);
        org.apache.commons.math.fraction.FractionFormat fractionFormat26 = new org.apache.commons.math.fraction.FractionFormat(numberFormat12, numberFormat20);
        fractionFormat2.setDenominatorFormat(numberFormat12);
        java.lang.Class<?> wildcardClass28 = numberFormat12.getClass();
        org.junit.Assert.assertNotNull(obj3);
        org.junit.Assert.assertNull(numberFormat7);
        org.junit.Assert.assertNull(numberFormat8);
        org.junit.Assert.assertNotNull(fractionFormat9);
        org.junit.Assert.assertNotNull(attributedCharacterIterator11);
        org.junit.Assert.assertNotNull(numberFormat12);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "10" + "'", str16, "10");
        org.junit.Assert.assertNotNull(fractionFormat17);
        org.junit.Assert.assertNotNull(attributedCharacterIterator19);
        org.junit.Assert.assertNotNull(numberFormat20);
        org.junit.Assert.assertNotNull(fractionFormat21);
        org.junit.Assert.assertNotNull(attributedCharacterIterator23);
        org.junit.Assert.assertNotNull(numberFormat24);
        org.junit.Assert.assertNotNull(wildcardClass28);
    }

    @Test
    public void test0318() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0318");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat5 = fractionFormat0.getNumeratorFormat();
        java.text.NumberFormat numberFormat6 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat7 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator9 = fractionFormat7.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat10 = fractionFormat7.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = new org.apache.commons.math.fraction.FractionFormat(numberFormat6, numberFormat10);
        org.apache.commons.math.fraction.FractionFormat fractionFormat12 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator14 = fractionFormat12.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat15 = fractionFormat12.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat16 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator18 = fractionFormat16.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat19 = fractionFormat16.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat20 = new org.apache.commons.math.fraction.FractionFormat(numberFormat15, numberFormat19);
        fractionFormat11.setNumeratorFormat(numberFormat15);
        org.apache.commons.math.fraction.FractionFormat fractionFormat22 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj24 = fractionFormat22.parseObject("0 / 1");
        java.lang.Object obj26 = fractionFormat22.parseObject("0 / 1");
        java.text.NumberFormat numberFormat27 = fractionFormat22.getNumeratorFormat();
        java.text.NumberFormat numberFormat28 = fractionFormat22.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat29 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator31 = fractionFormat29.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat32 = fractionFormat29.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat33 = new org.apache.commons.math.fraction.FractionFormat(numberFormat28, numberFormat32);
        org.apache.commons.math.fraction.FractionFormat fractionFormat34 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator36 = fractionFormat34.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat37 = fractionFormat34.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat38 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator40 = fractionFormat38.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat41 = fractionFormat38.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat42 = new org.apache.commons.math.fraction.FractionFormat(numberFormat37, numberFormat41);
        fractionFormat33.setNumeratorFormat(numberFormat37);
        fractionFormat11.setNumeratorFormat(numberFormat37);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj46 = fractionFormat11.parseObject("");
            org.junit.Assert.fail("Expected exception of type java.text.ParseException; message: Format.parseObject(String) failed");
        } catch (java.text.ParseException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertNotNull(fractionFormat7);
        org.junit.Assert.assertNotNull(attributedCharacterIterator9);
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertNotNull(fractionFormat12);
        org.junit.Assert.assertNotNull(attributedCharacterIterator14);
        org.junit.Assert.assertNotNull(numberFormat15);
        org.junit.Assert.assertNotNull(fractionFormat16);
        org.junit.Assert.assertNotNull(attributedCharacterIterator18);
        org.junit.Assert.assertNotNull(numberFormat19);
        org.junit.Assert.assertNotNull(fractionFormat22);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertNotNull(numberFormat27);
        org.junit.Assert.assertNotNull(numberFormat28);
        org.junit.Assert.assertNotNull(fractionFormat29);
        org.junit.Assert.assertNotNull(attributedCharacterIterator31);
        org.junit.Assert.assertNotNull(numberFormat32);
        org.junit.Assert.assertNotNull(fractionFormat34);
        org.junit.Assert.assertNotNull(attributedCharacterIterator36);
        org.junit.Assert.assertNotNull(numberFormat37);
        org.junit.Assert.assertNotNull(fractionFormat38);
        org.junit.Assert.assertNotNull(attributedCharacterIterator40);
        org.junit.Assert.assertNotNull(numberFormat41);
    }

    @Test
    public void test0319() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0319");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        java.text.NumberFormat numberFormat2 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat3 = new org.apache.commons.math.fraction.FractionFormat(numberFormat1, numberFormat2);
        java.text.NumberFormat numberFormat4 = fractionFormat3.getDenominatorFormat();
        java.text.NumberFormat numberFormat5 = fractionFormat3.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat6 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator8 = fractionFormat6.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat9 = fractionFormat6.getDenominatorFormat();
        fractionFormat3.setNumeratorFormat(numberFormat9);
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj13 = fractionFormat11.parseObject("0 / 1");
        java.text.NumberFormat numberFormat14 = fractionFormat11.getNumeratorFormat();
        fractionFormat3.setNumeratorFormat(numberFormat14);
        org.apache.commons.math.fraction.FractionFormat fractionFormat16 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat14);
        java.text.NumberFormat numberFormat17 = null;
        java.text.NumberFormat numberFormat18 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat19 = new org.apache.commons.math.fraction.FractionFormat(numberFormat17, numberFormat18);
        java.text.NumberFormat numberFormat20 = fractionFormat19.getDenominatorFormat();
        java.text.NumberFormat numberFormat21 = fractionFormat19.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat22 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator24 = fractionFormat22.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat25 = fractionFormat22.getDenominatorFormat();
        fractionFormat19.setNumeratorFormat(numberFormat25);
        org.apache.commons.math.fraction.FractionFormat fractionFormat27 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat25);
        org.apache.commons.math.fraction.FractionFormat fractionFormat28 = new org.apache.commons.math.fraction.FractionFormat(numberFormat25);
        org.apache.commons.math.fraction.FractionFormat fractionFormat29 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj31 = fractionFormat29.parseObject("0 / 1");
        java.lang.Object obj33 = fractionFormat29.parseObject("0 / 1");
        java.text.NumberFormat numberFormat34 = fractionFormat29.getNumeratorFormat();
        java.text.NumberFormat numberFormat35 = fractionFormat29.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat36 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator38 = fractionFormat36.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat39 = fractionFormat36.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat40 = new org.apache.commons.math.fraction.FractionFormat(numberFormat35, numberFormat39);
        org.apache.commons.math.fraction.FractionFormat fractionFormat41 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator43 = fractionFormat41.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat44 = fractionFormat41.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat45 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator47 = fractionFormat45.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat48 = fractionFormat45.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat49 = new org.apache.commons.math.fraction.FractionFormat(numberFormat44, numberFormat48);
        org.apache.commons.math.fraction.FractionFormat fractionFormat50 = new org.apache.commons.math.fraction.FractionFormat(numberFormat35, numberFormat48);
        java.text.NumberFormat numberFormat51 = fractionFormat50.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat52 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat53 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj55 = fractionFormat53.parseObject("0 / 1");
        java.lang.Object obj57 = fractionFormat53.parseObject("0 / 1");
        java.text.NumberFormat numberFormat58 = fractionFormat53.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat59 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj61 = fractionFormat59.parseObject("0 / 1");
        java.text.NumberFormat numberFormat62 = fractionFormat59.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat63 = new org.apache.commons.math.fraction.FractionFormat(numberFormat58, numberFormat62);
        org.apache.commons.math.fraction.FractionFormat fractionFormat64 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj66 = fractionFormat64.parseObject("0 / 1");
        java.lang.Object obj68 = fractionFormat64.parseObject("0 / 1");
        java.text.NumberFormat numberFormat69 = fractionFormat64.getNumeratorFormat();
        fractionFormat63.setDenominatorFormat(numberFormat69);
        java.lang.Object obj71 = numberFormat69.clone();
        fractionFormat52.setNumeratorFormat(numberFormat69);
        java.lang.Object obj73 = numberFormat69.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat74 = new org.apache.commons.math.fraction.FractionFormat(numberFormat51, numberFormat69);
        java.lang.StringBuffer stringBuffer75 = null;
        java.text.FieldPosition fieldPosition76 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer77 = fractionFormat28.format((java.lang.Object) numberFormat69, stringBuffer75, fieldPosition76);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot format given object as a fraction");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(numberFormat4);
        org.junit.Assert.assertNull(numberFormat5);
        org.junit.Assert.assertNotNull(fractionFormat6);
        org.junit.Assert.assertNotNull(attributedCharacterIterator8);
        org.junit.Assert.assertNotNull(numberFormat9);
        org.junit.Assert.assertNotNull(fractionFormat11);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertNotNull(numberFormat14);
        org.junit.Assert.assertNull(numberFormat20);
        org.junit.Assert.assertNull(numberFormat21);
        org.junit.Assert.assertNotNull(fractionFormat22);
        org.junit.Assert.assertNotNull(attributedCharacterIterator24);
        org.junit.Assert.assertNotNull(numberFormat25);
        org.junit.Assert.assertNotNull(fractionFormat29);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertNotNull(obj33);
        org.junit.Assert.assertNotNull(numberFormat34);
        org.junit.Assert.assertNotNull(numberFormat35);
        org.junit.Assert.assertNotNull(fractionFormat36);
        org.junit.Assert.assertNotNull(attributedCharacterIterator38);
        org.junit.Assert.assertNotNull(numberFormat39);
        org.junit.Assert.assertNotNull(fractionFormat41);
        org.junit.Assert.assertNotNull(attributedCharacterIterator43);
        org.junit.Assert.assertNotNull(numberFormat44);
        org.junit.Assert.assertNotNull(fractionFormat45);
        org.junit.Assert.assertNotNull(attributedCharacterIterator47);
        org.junit.Assert.assertNotNull(numberFormat48);
        org.junit.Assert.assertNotNull(numberFormat51);
        org.junit.Assert.assertNotNull(fractionFormat52);
        org.junit.Assert.assertNotNull(fractionFormat53);
        org.junit.Assert.assertNotNull(obj55);
        org.junit.Assert.assertNotNull(obj57);
        org.junit.Assert.assertNotNull(numberFormat58);
        org.junit.Assert.assertNotNull(fractionFormat59);
        org.junit.Assert.assertNotNull(obj61);
        org.junit.Assert.assertNotNull(numberFormat62);
        org.junit.Assert.assertNotNull(fractionFormat64);
        org.junit.Assert.assertNotNull(obj66);
        org.junit.Assert.assertNotNull(obj68);
        org.junit.Assert.assertNotNull(numberFormat69);
        org.junit.Assert.assertNotNull(obj71);
        org.junit.Assert.assertNotNull(obj73);
    }

    @Test
    public void test0320() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0320");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.text.NumberFormat numberFormat3 = fractionFormat2.getDenominatorFormat();
        java.text.NumberFormat numberFormat4 = fractionFormat2.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator7 = fractionFormat5.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat8 = fractionFormat5.getDenominatorFormat();
        fractionFormat2.setNumeratorFormat(numberFormat8);
        java.text.NumberFormat numberFormat10 = fractionFormat2.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat12 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj14 = fractionFormat12.parseObject("0 / 1");
        java.lang.Object obj16 = fractionFormat12.parseObject("0 / 1");
        java.text.NumberFormat numberFormat17 = fractionFormat12.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat18 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj20 = fractionFormat18.parseObject("0 / 1");
        java.text.NumberFormat numberFormat21 = fractionFormat18.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat22 = new org.apache.commons.math.fraction.FractionFormat(numberFormat17, numberFormat21);
        org.apache.commons.math.fraction.FractionFormat fractionFormat23 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj25 = fractionFormat23.parseObject("0 / 1");
        java.lang.Object obj27 = fractionFormat23.parseObject("0 / 1");
        java.text.NumberFormat numberFormat28 = fractionFormat23.getNumeratorFormat();
        fractionFormat22.setDenominatorFormat(numberFormat28);
        java.lang.Object obj30 = numberFormat28.clone();
        fractionFormat11.setNumeratorFormat(numberFormat28);
        java.lang.Object obj32 = numberFormat28.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat33 = new org.apache.commons.math.fraction.FractionFormat(numberFormat28);
        fractionFormat2.setNumeratorFormat(numberFormat28);
        org.apache.commons.math.fraction.FractionFormat fractionFormat35 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat36 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj38 = fractionFormat36.parseObject("0 / 1");
        java.lang.Object obj40 = fractionFormat36.parseObject("0 / 1");
        java.text.NumberFormat numberFormat41 = fractionFormat36.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat42 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj44 = fractionFormat42.parseObject("0 / 1");
        java.text.NumberFormat numberFormat45 = fractionFormat42.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat46 = new org.apache.commons.math.fraction.FractionFormat(numberFormat41, numberFormat45);
        org.apache.commons.math.fraction.FractionFormat fractionFormat47 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj49 = fractionFormat47.parseObject("0 / 1");
        java.lang.Object obj51 = fractionFormat47.parseObject("0 / 1");
        java.text.NumberFormat numberFormat52 = fractionFormat47.getNumeratorFormat();
        fractionFormat46.setDenominatorFormat(numberFormat52);
        java.lang.Object obj54 = numberFormat52.clone();
        fractionFormat35.setNumeratorFormat(numberFormat52);
        java.text.NumberFormat numberFormat56 = fractionFormat35.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat57 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj59 = fractionFormat57.parseObject("0 / 1");
        java.lang.Object obj61 = fractionFormat57.parseObject("0 / 1");
        java.text.NumberFormat numberFormat62 = fractionFormat57.getNumeratorFormat();
        java.text.NumberFormat numberFormat63 = fractionFormat57.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat64 = new org.apache.commons.math.fraction.FractionFormat(numberFormat63);
        fractionFormat35.setNumeratorFormat(numberFormat63);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str66 = fractionFormat2.format((java.lang.Object) numberFormat63);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot format given object as a fraction");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(numberFormat3);
        org.junit.Assert.assertNull(numberFormat4);
        org.junit.Assert.assertNotNull(fractionFormat5);
        org.junit.Assert.assertNotNull(attributedCharacterIterator7);
        org.junit.Assert.assertNotNull(numberFormat8);
        org.junit.Assert.assertNull(numberFormat10);
        org.junit.Assert.assertNotNull(fractionFormat11);
        org.junit.Assert.assertNotNull(fractionFormat12);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertNotNull(obj16);
        org.junit.Assert.assertNotNull(numberFormat17);
        org.junit.Assert.assertNotNull(fractionFormat18);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertNotNull(numberFormat21);
        org.junit.Assert.assertNotNull(fractionFormat23);
        org.junit.Assert.assertNotNull(obj25);
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertNotNull(numberFormat28);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertNotNull(obj32);
        org.junit.Assert.assertNotNull(fractionFormat35);
        org.junit.Assert.assertNotNull(fractionFormat36);
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertNotNull(numberFormat41);
        org.junit.Assert.assertNotNull(fractionFormat42);
        org.junit.Assert.assertNotNull(obj44);
        org.junit.Assert.assertNotNull(numberFormat45);
        org.junit.Assert.assertNotNull(fractionFormat47);
        org.junit.Assert.assertNotNull(obj49);
        org.junit.Assert.assertNotNull(obj51);
        org.junit.Assert.assertNotNull(numberFormat52);
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertNotNull(numberFormat56);
        org.junit.Assert.assertNotNull(fractionFormat57);
        org.junit.Assert.assertNotNull(obj59);
        org.junit.Assert.assertNotNull(obj61);
        org.junit.Assert.assertNotNull(numberFormat62);
        org.junit.Assert.assertNotNull(numberFormat63);
    }

    @Test
    public void test0321() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0321");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("-1 / 1");
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat6 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj8 = fractionFormat6.parseObject("0 / 1");
        java.lang.Object obj10 = fractionFormat6.parseObject("0 / 1");
        java.text.NumberFormat numberFormat11 = fractionFormat6.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat12 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj14 = fractionFormat12.parseObject("0 / 1");
        java.text.NumberFormat numberFormat15 = fractionFormat12.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat16 = new org.apache.commons.math.fraction.FractionFormat(numberFormat11, numberFormat15);
        org.apache.commons.math.fraction.FractionFormat fractionFormat17 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj19 = fractionFormat17.parseObject("0 / 1");
        java.lang.Object obj21 = fractionFormat17.parseObject("0 / 1");
        java.text.NumberFormat numberFormat22 = fractionFormat17.getNumeratorFormat();
        fractionFormat16.setDenominatorFormat(numberFormat22);
        java.lang.Object obj24 = numberFormat22.clone();
        fractionFormat5.setNumeratorFormat(numberFormat22);
        java.lang.Object obj26 = numberFormat22.clone();
        java.lang.Object obj27 = numberFormat22.clone();
        fractionFormat0.setDenominatorFormat(numberFormat22);
        java.text.NumberFormat numberFormat29 = null;
        java.text.NumberFormat numberFormat30 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat31 = new org.apache.commons.math.fraction.FractionFormat(numberFormat29, numberFormat30);
        java.text.NumberFormat numberFormat32 = fractionFormat31.getDenominatorFormat();
        java.text.NumberFormat numberFormat33 = fractionFormat31.getNumeratorFormat();
        java.text.NumberFormat numberFormat34 = fractionFormat31.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat35 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator37 = fractionFormat35.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat38 = fractionFormat35.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat39 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator41 = fractionFormat39.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat42 = fractionFormat39.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat43 = new org.apache.commons.math.fraction.FractionFormat(numberFormat38, numberFormat42);
        fractionFormat31.setNumeratorFormat(numberFormat38);
        org.apache.commons.math.fraction.FractionFormat fractionFormat45 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj47 = fractionFormat45.parseObject("0 / 1");
        java.text.NumberFormat numberFormat48 = fractionFormat45.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat49 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator51 = fractionFormat49.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat52 = fractionFormat49.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat53 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator55 = fractionFormat53.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat56 = fractionFormat53.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat57 = new org.apache.commons.math.fraction.FractionFormat(numberFormat52, numberFormat56);
        org.apache.commons.math.fraction.FractionFormat fractionFormat58 = new org.apache.commons.math.fraction.FractionFormat(numberFormat48, numberFormat52);
        org.apache.commons.math.fraction.FractionFormat fractionFormat59 = new org.apache.commons.math.fraction.FractionFormat(numberFormat38, numberFormat48);
        org.apache.commons.math.fraction.FractionFormat fractionFormat60 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj62 = fractionFormat60.parseObject("0 / 1");
        java.lang.Object obj64 = fractionFormat60.parseObject("0 / 1");
        java.text.NumberFormat numberFormat65 = fractionFormat60.getNumeratorFormat();
        java.lang.Object obj66 = numberFormat65.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat67 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj69 = fractionFormat67.parseObject("0 / 1");
        java.lang.Object obj71 = fractionFormat67.parseObject("0 / 1");
        java.text.NumberFormat numberFormat72 = fractionFormat67.getNumeratorFormat();
        java.text.NumberFormat numberFormat73 = fractionFormat67.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat74 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator76 = fractionFormat74.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat77 = fractionFormat74.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat78 = new org.apache.commons.math.fraction.FractionFormat(numberFormat73, numberFormat77);
        org.apache.commons.math.fraction.FractionFormat fractionFormat79 = new org.apache.commons.math.fraction.FractionFormat(numberFormat65, numberFormat77);
        java.text.NumberFormat numberFormat80 = fractionFormat79.getNumeratorFormat();
        fractionFormat59.setDenominatorFormat(numberFormat80);
        fractionFormat0.setNumeratorFormat(numberFormat80);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.fraction.Fraction fraction84 = fractionFormat0.parse("");
            org.junit.Assert.fail("Expected exception of type java.text.ParseException; message: Unparseable fraction number: \"\"");
        } catch (java.text.ParseException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(fractionFormat5);
        org.junit.Assert.assertNotNull(fractionFormat6);
        org.junit.Assert.assertNotNull(obj8);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertNotNull(numberFormat11);
        org.junit.Assert.assertNotNull(fractionFormat12);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertNotNull(numberFormat15);
        org.junit.Assert.assertNotNull(fractionFormat17);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertNotNull(numberFormat22);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertNull(numberFormat32);
        org.junit.Assert.assertNull(numberFormat33);
        org.junit.Assert.assertNull(numberFormat34);
        org.junit.Assert.assertNotNull(fractionFormat35);
        org.junit.Assert.assertNotNull(attributedCharacterIterator37);
        org.junit.Assert.assertNotNull(numberFormat38);
        org.junit.Assert.assertNotNull(fractionFormat39);
        org.junit.Assert.assertNotNull(attributedCharacterIterator41);
        org.junit.Assert.assertNotNull(numberFormat42);
        org.junit.Assert.assertNotNull(fractionFormat45);
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertNotNull(numberFormat48);
        org.junit.Assert.assertNotNull(fractionFormat49);
        org.junit.Assert.assertNotNull(attributedCharacterIterator51);
        org.junit.Assert.assertNotNull(numberFormat52);
        org.junit.Assert.assertNotNull(fractionFormat53);
        org.junit.Assert.assertNotNull(attributedCharacterIterator55);
        org.junit.Assert.assertNotNull(numberFormat56);
        org.junit.Assert.assertNotNull(fractionFormat60);
        org.junit.Assert.assertNotNull(obj62);
        org.junit.Assert.assertNotNull(obj64);
        org.junit.Assert.assertNotNull(numberFormat65);
        org.junit.Assert.assertNotNull(obj66);
        org.junit.Assert.assertNotNull(fractionFormat67);
        org.junit.Assert.assertNotNull(obj69);
        org.junit.Assert.assertNotNull(obj71);
        org.junit.Assert.assertNotNull(numberFormat72);
        org.junit.Assert.assertNotNull(numberFormat73);
        org.junit.Assert.assertNotNull(fractionFormat74);
        org.junit.Assert.assertNotNull(attributedCharacterIterator76);
        org.junit.Assert.assertNotNull(numberFormat77);
        org.junit.Assert.assertNotNull(numberFormat80);
    }

    @Test
    public void test0322() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0322");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat5 = fractionFormat0.getNumeratorFormat();
        java.text.NumberFormat numberFormat6 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat7 = new org.apache.commons.math.fraction.FractionFormat(numberFormat6);
        org.apache.commons.math.fraction.FractionFormat fractionFormat8 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj10 = fractionFormat8.parseObject("0 / 1");
        java.lang.Object obj12 = fractionFormat8.parseObject("0 / 1");
        java.text.NumberFormat numberFormat13 = fractionFormat8.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat14 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj16 = fractionFormat14.parseObject("0 / 1");
        java.text.NumberFormat numberFormat17 = fractionFormat14.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat18 = new org.apache.commons.math.fraction.FractionFormat(numberFormat13, numberFormat17);
        org.apache.commons.math.fraction.FractionFormat fractionFormat19 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj21 = fractionFormat19.parseObject("0 / 1");
        java.lang.Object obj23 = fractionFormat19.parseObject("0 / 1");
        java.text.NumberFormat numberFormat24 = fractionFormat19.getNumeratorFormat();
        fractionFormat18.setDenominatorFormat(numberFormat24);
        org.apache.commons.math.fraction.FractionFormat fractionFormat26 = new org.apache.commons.math.fraction.FractionFormat(numberFormat6, numberFormat24);
        org.apache.commons.math.fraction.FractionFormat fractionFormat27 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj29 = fractionFormat27.parseObject("0 / 1");
        java.lang.Class<?> wildcardClass30 = fractionFormat27.getClass();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str31 = numberFormat6.format((java.lang.Object) wildcardClass30);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot format given Object as a Number");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertNotNull(fractionFormat8);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertNotNull(numberFormat13);
        org.junit.Assert.assertNotNull(fractionFormat14);
        org.junit.Assert.assertNotNull(obj16);
        org.junit.Assert.assertNotNull(numberFormat17);
        org.junit.Assert.assertNotNull(fractionFormat19);
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertNotNull(numberFormat24);
        org.junit.Assert.assertNotNull(fractionFormat27);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertNotNull(wildcardClass30);
    }

    @Test
    public void test0323() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0323");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = new org.apache.commons.math.fraction.FractionFormat();
        java.text.NumberFormat numberFormat1 = fractionFormat0.getDenominatorFormat();
        java.text.NumberFormat numberFormat2 = fractionFormat0.getDenominatorFormat();
        java.lang.Class<?> wildcardClass3 = numberFormat2.getClass();
        org.junit.Assert.assertNotNull(numberFormat1);
        org.junit.Assert.assertNotNull(numberFormat2);
        org.junit.Assert.assertNotNull(wildcardClass3);
    }

    @Test
    public void test0324() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0324");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = new org.apache.commons.math.fraction.FractionFormat();
        java.text.NumberFormat numberFormat1 = fractionFormat0.getDenominatorFormat();
        java.text.ParsePosition parsePosition3 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj4 = fractionFormat0.parseObject("hi!", parsePosition3);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(numberFormat1);
    }

    @Test
    public void test0325() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0325");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.text.NumberFormat numberFormat3 = fractionFormat2.getDenominatorFormat();
        java.text.NumberFormat numberFormat4 = fractionFormat2.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator7 = fractionFormat5.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat8 = fractionFormat5.getDenominatorFormat();
        fractionFormat2.setNumeratorFormat(numberFormat8);
        java.lang.Object obj10 = numberFormat8.clone();
        java.lang.String str12 = numberFormat8.format((java.lang.Object) (short) 10);
        java.text.NumberFormat numberFormat13 = null;
        java.text.NumberFormat numberFormat14 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat15 = new org.apache.commons.math.fraction.FractionFormat(numberFormat13, numberFormat14);
        java.text.NumberFormat numberFormat16 = fractionFormat15.getDenominatorFormat();
        java.text.NumberFormat numberFormat17 = fractionFormat15.getNumeratorFormat();
        java.text.NumberFormat numberFormat18 = fractionFormat15.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat19 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator21 = fractionFormat19.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat22 = fractionFormat19.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat23 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator25 = fractionFormat23.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat26 = fractionFormat23.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat27 = new org.apache.commons.math.fraction.FractionFormat(numberFormat22, numberFormat26);
        fractionFormat15.setNumeratorFormat(numberFormat22);
        org.apache.commons.math.fraction.FractionFormat fractionFormat29 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj31 = fractionFormat29.parseObject("0 / 1");
        java.text.NumberFormat numberFormat32 = fractionFormat29.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat33 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator35 = fractionFormat33.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat36 = fractionFormat33.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat37 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator39 = fractionFormat37.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat40 = fractionFormat37.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat41 = new org.apache.commons.math.fraction.FractionFormat(numberFormat36, numberFormat40);
        org.apache.commons.math.fraction.FractionFormat fractionFormat42 = new org.apache.commons.math.fraction.FractionFormat(numberFormat32, numberFormat36);
        org.apache.commons.math.fraction.FractionFormat fractionFormat43 = new org.apache.commons.math.fraction.FractionFormat(numberFormat22, numberFormat32);
        org.apache.commons.math.fraction.FractionFormat fractionFormat44 = new org.apache.commons.math.fraction.FractionFormat(numberFormat8, numberFormat32);
        java.text.NumberFormat numberFormat45 = fractionFormat44.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat46 = new org.apache.commons.math.fraction.FractionFormat(numberFormat45);
        java.text.ParsePosition parsePosition48 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.fraction.Fraction fraction49 = fractionFormat46.parse("10 / 1", parsePosition48);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(numberFormat3);
        org.junit.Assert.assertNull(numberFormat4);
        org.junit.Assert.assertNotNull(fractionFormat5);
        org.junit.Assert.assertNotNull(attributedCharacterIterator7);
        org.junit.Assert.assertNotNull(numberFormat8);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "10" + "'", str12, "10");
        org.junit.Assert.assertNull(numberFormat16);
        org.junit.Assert.assertNull(numberFormat17);
        org.junit.Assert.assertNull(numberFormat18);
        org.junit.Assert.assertNotNull(fractionFormat19);
        org.junit.Assert.assertNotNull(attributedCharacterIterator21);
        org.junit.Assert.assertNotNull(numberFormat22);
        org.junit.Assert.assertNotNull(fractionFormat23);
        org.junit.Assert.assertNotNull(attributedCharacterIterator25);
        org.junit.Assert.assertNotNull(numberFormat26);
        org.junit.Assert.assertNotNull(fractionFormat29);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertNotNull(numberFormat32);
        org.junit.Assert.assertNotNull(fractionFormat33);
        org.junit.Assert.assertNotNull(attributedCharacterIterator35);
        org.junit.Assert.assertNotNull(numberFormat36);
        org.junit.Assert.assertNotNull(fractionFormat37);
        org.junit.Assert.assertNotNull(attributedCharacterIterator39);
        org.junit.Assert.assertNotNull(numberFormat40);
        org.junit.Assert.assertNotNull(numberFormat45);
    }

    @Test
    public void test0326() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0326");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat5 = fractionFormat0.getNumeratorFormat();
        java.text.NumberFormat numberFormat6 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat7 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator9 = fractionFormat7.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat10 = fractionFormat7.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = new org.apache.commons.math.fraction.FractionFormat(numberFormat6, numberFormat10);
        org.apache.commons.math.fraction.FractionFormat fractionFormat12 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator14 = fractionFormat12.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat15 = fractionFormat12.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat16 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator18 = fractionFormat16.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat19 = fractionFormat16.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat20 = new org.apache.commons.math.fraction.FractionFormat(numberFormat15, numberFormat19);
        org.apache.commons.math.fraction.FractionFormat fractionFormat21 = new org.apache.commons.math.fraction.FractionFormat(numberFormat6, numberFormat19);
        java.text.ParsePosition parsePosition23 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj24 = fractionFormat21.parseObject("hi!", parsePosition23);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertNotNull(fractionFormat7);
        org.junit.Assert.assertNotNull(attributedCharacterIterator9);
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertNotNull(fractionFormat12);
        org.junit.Assert.assertNotNull(attributedCharacterIterator14);
        org.junit.Assert.assertNotNull(numberFormat15);
        org.junit.Assert.assertNotNull(fractionFormat16);
        org.junit.Assert.assertNotNull(attributedCharacterIterator18);
        org.junit.Assert.assertNotNull(numberFormat19);
    }

    @Test
    public void test0327() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0327");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.text.NumberFormat numberFormat3 = fractionFormat2.getDenominatorFormat();
        java.text.NumberFormat numberFormat4 = fractionFormat2.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator7 = fractionFormat5.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat8 = fractionFormat5.getDenominatorFormat();
        fractionFormat2.setNumeratorFormat(numberFormat8);
        java.text.NumberFormat numberFormat10 = null;
        java.text.NumberFormat numberFormat11 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat12 = new org.apache.commons.math.fraction.FractionFormat(numberFormat10, numberFormat11);
        java.text.NumberFormat numberFormat13 = fractionFormat12.getNumeratorFormat();
        java.text.NumberFormat numberFormat14 = fractionFormat12.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat15 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj17 = fractionFormat15.parseObject("0 / 1");
        java.lang.Object obj19 = fractionFormat15.parseObject("0 / 1");
        java.text.NumberFormat numberFormat20 = fractionFormat15.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat21 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj23 = fractionFormat21.parseObject("0 / 1");
        java.text.NumberFormat numberFormat24 = fractionFormat21.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat25 = new org.apache.commons.math.fraction.FractionFormat(numberFormat20, numberFormat24);
        fractionFormat12.setNumeratorFormat(numberFormat20);
        fractionFormat2.setDenominatorFormat(numberFormat20);
        java.text.ParsePosition parsePosition29 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.fraction.Fraction fraction30 = fractionFormat2.parse("0 / 1", parsePosition29);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(numberFormat3);
        org.junit.Assert.assertNull(numberFormat4);
        org.junit.Assert.assertNotNull(fractionFormat5);
        org.junit.Assert.assertNotNull(attributedCharacterIterator7);
        org.junit.Assert.assertNotNull(numberFormat8);
        org.junit.Assert.assertNull(numberFormat13);
        org.junit.Assert.assertNull(numberFormat14);
        org.junit.Assert.assertNotNull(fractionFormat15);
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(numberFormat20);
        org.junit.Assert.assertNotNull(fractionFormat21);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertNotNull(numberFormat24);
    }

    @Test
    public void test0328() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0328");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = new org.apache.commons.math.fraction.FractionFormat();
        java.lang.String str2 = fractionFormat0.format((java.lang.Object) 0);
        java.lang.Class<?> wildcardClass3 = fractionFormat0.getClass();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "0 / 1" + "'", str2, "0 / 1");
        org.junit.Assert.assertNotNull(wildcardClass3);
    }

    @Test
    public void test0329() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0329");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat5 = fractionFormat0.getNumeratorFormat();
        java.text.NumberFormat numberFormat6 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat7 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator9 = fractionFormat7.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat10 = fractionFormat7.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = new org.apache.commons.math.fraction.FractionFormat(numberFormat6, numberFormat10);
        org.apache.commons.math.fraction.FractionFormat fractionFormat12 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj14 = fractionFormat12.parseObject("0 / 1");
        java.text.NumberFormat numberFormat15 = fractionFormat12.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat16 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj18 = fractionFormat16.parseObject("0 / 1");
        java.lang.Object obj20 = fractionFormat16.parseObject("0 / 1");
        java.text.NumberFormat numberFormat21 = fractionFormat16.getNumeratorFormat();
        java.text.NumberFormat numberFormat22 = fractionFormat16.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat23 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator25 = fractionFormat23.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat26 = fractionFormat23.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat27 = new org.apache.commons.math.fraction.FractionFormat(numberFormat22, numberFormat26);
        fractionFormat12.setNumeratorFormat(numberFormat26);
        org.apache.commons.math.fraction.FractionFormat fractionFormat29 = new org.apache.commons.math.fraction.FractionFormat(numberFormat6, numberFormat26);
        java.lang.Class<?> wildcardClass30 = fractionFormat29.getClass();
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertNotNull(fractionFormat7);
        org.junit.Assert.assertNotNull(attributedCharacterIterator9);
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertNotNull(fractionFormat12);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertNotNull(numberFormat15);
        org.junit.Assert.assertNotNull(fractionFormat16);
        org.junit.Assert.assertNotNull(obj18);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertNotNull(numberFormat21);
        org.junit.Assert.assertNotNull(numberFormat22);
        org.junit.Assert.assertNotNull(fractionFormat23);
        org.junit.Assert.assertNotNull(attributedCharacterIterator25);
        org.junit.Assert.assertNotNull(numberFormat26);
        org.junit.Assert.assertNotNull(wildcardClass30);
    }

    @Test
    public void test0330() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0330");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = new org.apache.commons.math.fraction.FractionFormat();
        java.text.NumberFormat numberFormat1 = fractionFormat0.getDenominatorFormat();
        java.text.NumberFormat numberFormat2 = null;
        java.text.NumberFormat numberFormat3 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat4 = new org.apache.commons.math.fraction.FractionFormat(numberFormat2, numberFormat3);
        java.text.NumberFormat numberFormat5 = fractionFormat4.getDenominatorFormat();
        java.text.NumberFormat numberFormat6 = fractionFormat4.getNumeratorFormat();
        java.text.NumberFormat numberFormat7 = fractionFormat4.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat8 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj10 = fractionFormat8.parseObject("0 / 1");
        java.lang.Object obj12 = fractionFormat8.parseObject("0 / 1");
        java.text.NumberFormat numberFormat13 = fractionFormat8.getNumeratorFormat();
        java.lang.Object obj14 = numberFormat13.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat15 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj17 = fractionFormat15.parseObject("0 / 1");
        java.lang.Object obj19 = fractionFormat15.parseObject("0 / 1");
        java.text.NumberFormat numberFormat20 = fractionFormat15.getNumeratorFormat();
        java.text.NumberFormat numberFormat21 = fractionFormat15.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat22 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator24 = fractionFormat22.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat25 = fractionFormat22.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat26 = new org.apache.commons.math.fraction.FractionFormat(numberFormat21, numberFormat25);
        org.apache.commons.math.fraction.FractionFormat fractionFormat27 = new org.apache.commons.math.fraction.FractionFormat(numberFormat13, numberFormat25);
        fractionFormat4.setNumeratorFormat(numberFormat13);
        org.apache.commons.math.fraction.Fraction fraction30 = fractionFormat4.parse("10");
        // The following exception was thrown during execution in test generation
        try {
            java.text.AttributedCharacterIterator attributedCharacterIterator31 = numberFormat1.formatToCharacterIterator((java.lang.Object) fractionFormat4);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot format given Object as a Number");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(numberFormat1);
        org.junit.Assert.assertNull(numberFormat5);
        org.junit.Assert.assertNull(numberFormat6);
        org.junit.Assert.assertNull(numberFormat7);
        org.junit.Assert.assertNotNull(fractionFormat8);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertNotNull(numberFormat13);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertNotNull(fractionFormat15);
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(numberFormat20);
        org.junit.Assert.assertNotNull(numberFormat21);
        org.junit.Assert.assertNotNull(fractionFormat22);
        org.junit.Assert.assertNotNull(attributedCharacterIterator24);
        org.junit.Assert.assertNotNull(numberFormat25);
        org.junit.Assert.assertNotNull(fraction30);
    }

    @Test
    public void test0331() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0331");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = new org.apache.commons.math.fraction.FractionFormat();
        java.lang.String str2 = fractionFormat0.format((java.lang.Object) 0);
        java.text.NumberFormat numberFormat3 = fractionFormat0.getDenominatorFormat();
        java.text.NumberFormat numberFormat4 = null;
        java.text.NumberFormat numberFormat5 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat6 = new org.apache.commons.math.fraction.FractionFormat(numberFormat4, numberFormat5);
        java.text.NumberFormat numberFormat7 = fractionFormat6.getDenominatorFormat();
        java.text.NumberFormat numberFormat8 = fractionFormat6.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat9 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator11 = fractionFormat9.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat12 = fractionFormat9.getDenominatorFormat();
        fractionFormat6.setNumeratorFormat(numberFormat12);
        java.lang.Object obj14 = numberFormat12.clone();
        java.lang.String str16 = numberFormat12.format((java.lang.Object) (short) 10);
        java.text.NumberFormat numberFormat17 = null;
        java.text.NumberFormat numberFormat18 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat19 = new org.apache.commons.math.fraction.FractionFormat(numberFormat17, numberFormat18);
        java.text.NumberFormat numberFormat20 = fractionFormat19.getDenominatorFormat();
        java.text.NumberFormat numberFormat21 = fractionFormat19.getNumeratorFormat();
        java.text.NumberFormat numberFormat22 = fractionFormat19.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat23 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator25 = fractionFormat23.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat26 = fractionFormat23.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat27 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator29 = fractionFormat27.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat30 = fractionFormat27.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat31 = new org.apache.commons.math.fraction.FractionFormat(numberFormat26, numberFormat30);
        fractionFormat19.setNumeratorFormat(numberFormat26);
        org.apache.commons.math.fraction.FractionFormat fractionFormat33 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj35 = fractionFormat33.parseObject("0 / 1");
        java.text.NumberFormat numberFormat36 = fractionFormat33.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat37 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator39 = fractionFormat37.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat40 = fractionFormat37.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat41 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator43 = fractionFormat41.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat44 = fractionFormat41.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat45 = new org.apache.commons.math.fraction.FractionFormat(numberFormat40, numberFormat44);
        org.apache.commons.math.fraction.FractionFormat fractionFormat46 = new org.apache.commons.math.fraction.FractionFormat(numberFormat36, numberFormat40);
        org.apache.commons.math.fraction.FractionFormat fractionFormat47 = new org.apache.commons.math.fraction.FractionFormat(numberFormat26, numberFormat36);
        org.apache.commons.math.fraction.FractionFormat fractionFormat48 = new org.apache.commons.math.fraction.FractionFormat(numberFormat12, numberFormat36);
        java.lang.Object obj49 = fractionFormat48.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat50 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj52 = fractionFormat50.parseObject("0 / 1");
        java.lang.Object obj54 = fractionFormat50.parseObject("0 / 1");
        java.text.NumberFormat numberFormat55 = fractionFormat50.getNumeratorFormat();
        java.text.NumberFormat numberFormat56 = fractionFormat50.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat57 = new org.apache.commons.math.fraction.FractionFormat(numberFormat56);
        org.apache.commons.math.fraction.FractionFormat fractionFormat58 = new org.apache.commons.math.fraction.FractionFormat(numberFormat56);
        fractionFormat48.setDenominatorFormat(numberFormat56);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str60 = numberFormat3.format((java.lang.Object) numberFormat56);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot format given Object as a Number");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "0 / 1" + "'", str2, "0 / 1");
        org.junit.Assert.assertNotNull(numberFormat3);
        org.junit.Assert.assertNull(numberFormat7);
        org.junit.Assert.assertNull(numberFormat8);
        org.junit.Assert.assertNotNull(fractionFormat9);
        org.junit.Assert.assertNotNull(attributedCharacterIterator11);
        org.junit.Assert.assertNotNull(numberFormat12);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "10" + "'", str16, "10");
        org.junit.Assert.assertNull(numberFormat20);
        org.junit.Assert.assertNull(numberFormat21);
        org.junit.Assert.assertNull(numberFormat22);
        org.junit.Assert.assertNotNull(fractionFormat23);
        org.junit.Assert.assertNotNull(attributedCharacterIterator25);
        org.junit.Assert.assertNotNull(numberFormat26);
        org.junit.Assert.assertNotNull(fractionFormat27);
        org.junit.Assert.assertNotNull(attributedCharacterIterator29);
        org.junit.Assert.assertNotNull(numberFormat30);
        org.junit.Assert.assertNotNull(fractionFormat33);
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertNotNull(numberFormat36);
        org.junit.Assert.assertNotNull(fractionFormat37);
        org.junit.Assert.assertNotNull(attributedCharacterIterator39);
        org.junit.Assert.assertNotNull(numberFormat40);
        org.junit.Assert.assertNotNull(fractionFormat41);
        org.junit.Assert.assertNotNull(attributedCharacterIterator43);
        org.junit.Assert.assertNotNull(numberFormat44);
        org.junit.Assert.assertNotNull(obj49);
        org.junit.Assert.assertNotNull(fractionFormat50);
        org.junit.Assert.assertNotNull(obj52);
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertNotNull(numberFormat55);
        org.junit.Assert.assertNotNull(numberFormat56);
    }

    @Test
    public void test0332() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0332");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.text.NumberFormat numberFormat3 = fractionFormat2.getDenominatorFormat();
        java.text.NumberFormat numberFormat4 = fractionFormat2.getNumeratorFormat();
        java.text.NumberFormat numberFormat5 = fractionFormat2.getNumeratorFormat();
        java.text.NumberFormat numberFormat6 = null;
        java.text.NumberFormat numberFormat7 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat8 = new org.apache.commons.math.fraction.FractionFormat(numberFormat6, numberFormat7);
        java.text.NumberFormat numberFormat9 = fractionFormat8.getDenominatorFormat();
        java.text.NumberFormat numberFormat10 = fractionFormat8.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator13 = fractionFormat11.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat14 = fractionFormat11.getDenominatorFormat();
        fractionFormat8.setNumeratorFormat(numberFormat14);
        java.lang.Object obj16 = numberFormat14.clone();
        java.lang.String str18 = numberFormat14.format((java.lang.Object) (short) 10);
        java.text.NumberFormat numberFormat19 = null;
        java.text.NumberFormat numberFormat20 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat21 = new org.apache.commons.math.fraction.FractionFormat(numberFormat19, numberFormat20);
        java.text.NumberFormat numberFormat22 = fractionFormat21.getDenominatorFormat();
        java.text.NumberFormat numberFormat23 = fractionFormat21.getNumeratorFormat();
        java.text.NumberFormat numberFormat24 = fractionFormat21.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat25 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator27 = fractionFormat25.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat28 = fractionFormat25.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat29 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator31 = fractionFormat29.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat32 = fractionFormat29.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat33 = new org.apache.commons.math.fraction.FractionFormat(numberFormat28, numberFormat32);
        fractionFormat21.setNumeratorFormat(numberFormat28);
        org.apache.commons.math.fraction.FractionFormat fractionFormat35 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj37 = fractionFormat35.parseObject("0 / 1");
        java.text.NumberFormat numberFormat38 = fractionFormat35.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat39 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator41 = fractionFormat39.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat42 = fractionFormat39.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat43 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator45 = fractionFormat43.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat46 = fractionFormat43.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat47 = new org.apache.commons.math.fraction.FractionFormat(numberFormat42, numberFormat46);
        org.apache.commons.math.fraction.FractionFormat fractionFormat48 = new org.apache.commons.math.fraction.FractionFormat(numberFormat38, numberFormat42);
        org.apache.commons.math.fraction.FractionFormat fractionFormat49 = new org.apache.commons.math.fraction.FractionFormat(numberFormat28, numberFormat38);
        org.apache.commons.math.fraction.FractionFormat fractionFormat50 = new org.apache.commons.math.fraction.FractionFormat(numberFormat14, numberFormat38);
        org.apache.commons.math.fraction.FractionFormat fractionFormat51 = new org.apache.commons.math.fraction.FractionFormat(numberFormat14);
        org.apache.commons.math.fraction.Fraction fraction53 = fractionFormat51.parse("100");
        java.lang.StringBuffer stringBuffer54 = null;
        java.text.FieldPosition fieldPosition55 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer56 = fractionFormat2.format(fraction53, stringBuffer54, fieldPosition55);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(numberFormat3);
        org.junit.Assert.assertNull(numberFormat4);
        org.junit.Assert.assertNull(numberFormat5);
        org.junit.Assert.assertNull(numberFormat9);
        org.junit.Assert.assertNull(numberFormat10);
        org.junit.Assert.assertNotNull(fractionFormat11);
        org.junit.Assert.assertNotNull(attributedCharacterIterator13);
        org.junit.Assert.assertNotNull(numberFormat14);
        org.junit.Assert.assertNotNull(obj16);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "10" + "'", str18, "10");
        org.junit.Assert.assertNull(numberFormat22);
        org.junit.Assert.assertNull(numberFormat23);
        org.junit.Assert.assertNull(numberFormat24);
        org.junit.Assert.assertNotNull(fractionFormat25);
        org.junit.Assert.assertNotNull(attributedCharacterIterator27);
        org.junit.Assert.assertNotNull(numberFormat28);
        org.junit.Assert.assertNotNull(fractionFormat29);
        org.junit.Assert.assertNotNull(attributedCharacterIterator31);
        org.junit.Assert.assertNotNull(numberFormat32);
        org.junit.Assert.assertNotNull(fractionFormat35);
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertNotNull(numberFormat38);
        org.junit.Assert.assertNotNull(fractionFormat39);
        org.junit.Assert.assertNotNull(attributedCharacterIterator41);
        org.junit.Assert.assertNotNull(numberFormat42);
        org.junit.Assert.assertNotNull(fractionFormat43);
        org.junit.Assert.assertNotNull(attributedCharacterIterator45);
        org.junit.Assert.assertNotNull(numberFormat46);
        org.junit.Assert.assertNotNull(fraction53);
    }

    @Test
    public void test0333() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0333");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        java.text.NumberFormat numberFormat2 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat3 = new org.apache.commons.math.fraction.FractionFormat(numberFormat1, numberFormat2);
        java.text.NumberFormat numberFormat4 = fractionFormat3.getDenominatorFormat();
        java.text.NumberFormat numberFormat5 = fractionFormat3.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat6 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator8 = fractionFormat6.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat9 = fractionFormat6.getDenominatorFormat();
        fractionFormat3.setNumeratorFormat(numberFormat9);
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj13 = fractionFormat11.parseObject("0 / 1");
        java.text.NumberFormat numberFormat14 = fractionFormat11.getNumeratorFormat();
        fractionFormat3.setNumeratorFormat(numberFormat14);
        org.apache.commons.math.fraction.FractionFormat fractionFormat16 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat14);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.fraction.Fraction fraction18 = fractionFormat16.parse("10 / 1");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(numberFormat4);
        org.junit.Assert.assertNull(numberFormat5);
        org.junit.Assert.assertNotNull(fractionFormat6);
        org.junit.Assert.assertNotNull(attributedCharacterIterator8);
        org.junit.Assert.assertNotNull(numberFormat9);
        org.junit.Assert.assertNotNull(fractionFormat11);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertNotNull(numberFormat14);
    }

    @Test
    public void test0334() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0334");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat5 = fractionFormat0.getNumeratorFormat();
        java.text.NumberFormat numberFormat6 = fractionFormat0.getNumeratorFormat();
        java.text.ParsePosition parsePosition8 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.fraction.Fraction fraction9 = fractionFormat0.parse("10 / 1", parsePosition8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
    }

    @Test
    public void test0335() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0335");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat5 = fractionFormat0.getNumeratorFormat();
        java.text.NumberFormat numberFormat6 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat7 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator9 = fractionFormat7.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat10 = fractionFormat7.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = new org.apache.commons.math.fraction.FractionFormat(numberFormat6, numberFormat10);
        org.apache.commons.math.fraction.FractionFormat fractionFormat12 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator14 = fractionFormat12.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat15 = fractionFormat12.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat16 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator18 = fractionFormat16.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat19 = fractionFormat16.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat20 = new org.apache.commons.math.fraction.FractionFormat(numberFormat15, numberFormat19);
        org.apache.commons.math.fraction.FractionFormat fractionFormat21 = new org.apache.commons.math.fraction.FractionFormat(numberFormat6, numberFormat19);
        java.text.NumberFormat numberFormat22 = fractionFormat21.getDenominatorFormat();
        java.lang.Object obj24 = numberFormat22.parseObject("-1 / 1");
        org.apache.commons.math.fraction.FractionFormat fractionFormat25 = new org.apache.commons.math.fraction.FractionFormat(numberFormat22);
        java.text.ParsePosition parsePosition27 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj28 = fractionFormat25.parseObject("-1 / 1", parsePosition27);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertNotNull(fractionFormat7);
        org.junit.Assert.assertNotNull(attributedCharacterIterator9);
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertNotNull(fractionFormat12);
        org.junit.Assert.assertNotNull(attributedCharacterIterator14);
        org.junit.Assert.assertNotNull(numberFormat15);
        org.junit.Assert.assertNotNull(fractionFormat16);
        org.junit.Assert.assertNotNull(attributedCharacterIterator18);
        org.junit.Assert.assertNotNull(numberFormat19);
        org.junit.Assert.assertNotNull(numberFormat22);
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + (-1L) + "'", obj24, (-1L));
    }

    @Test
    public void test0336() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0336");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.text.NumberFormat numberFormat3 = fractionFormat2.getDenominatorFormat();
        java.text.NumberFormat numberFormat4 = fractionFormat2.getNumeratorFormat();
        java.text.NumberFormat numberFormat5 = fractionFormat2.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat6 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator8 = fractionFormat6.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat9 = fractionFormat6.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat10 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator12 = fractionFormat10.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat13 = fractionFormat10.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat14 = new org.apache.commons.math.fraction.FractionFormat(numberFormat9, numberFormat13);
        fractionFormat2.setNumeratorFormat(numberFormat9);
        org.apache.commons.math.fraction.FractionFormat fractionFormat16 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj18 = fractionFormat16.parseObject("0 / 1");
        java.text.NumberFormat numberFormat19 = fractionFormat16.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat20 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator22 = fractionFormat20.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat23 = fractionFormat20.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat24 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator26 = fractionFormat24.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat27 = fractionFormat24.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat28 = new org.apache.commons.math.fraction.FractionFormat(numberFormat23, numberFormat27);
        org.apache.commons.math.fraction.FractionFormat fractionFormat29 = new org.apache.commons.math.fraction.FractionFormat(numberFormat19, numberFormat23);
        org.apache.commons.math.fraction.FractionFormat fractionFormat30 = new org.apache.commons.math.fraction.FractionFormat(numberFormat9, numberFormat19);
        org.apache.commons.math.fraction.FractionFormat fractionFormat31 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj33 = fractionFormat31.parseObject("0 / 1");
        java.lang.Object obj35 = fractionFormat31.parseObject("0 / 1");
        java.text.NumberFormat numberFormat36 = fractionFormat31.getNumeratorFormat();
        java.lang.Object obj37 = numberFormat36.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat38 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj40 = fractionFormat38.parseObject("0 / 1");
        java.lang.Object obj42 = fractionFormat38.parseObject("0 / 1");
        java.text.NumberFormat numberFormat43 = fractionFormat38.getNumeratorFormat();
        java.text.NumberFormat numberFormat44 = fractionFormat38.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat45 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator47 = fractionFormat45.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat48 = fractionFormat45.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat49 = new org.apache.commons.math.fraction.FractionFormat(numberFormat44, numberFormat48);
        org.apache.commons.math.fraction.FractionFormat fractionFormat50 = new org.apache.commons.math.fraction.FractionFormat(numberFormat36, numberFormat48);
        java.text.NumberFormat numberFormat51 = fractionFormat50.getNumeratorFormat();
        fractionFormat30.setDenominatorFormat(numberFormat51);
        org.apache.commons.math.fraction.FractionFormat fractionFormat53 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj55 = fractionFormat53.parseObject("0 / 1");
        java.lang.Object obj57 = fractionFormat53.parseObject("0 / 1");
        java.text.NumberFormat numberFormat58 = fractionFormat53.getNumeratorFormat();
        java.text.NumberFormat numberFormat59 = fractionFormat53.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat60 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator62 = fractionFormat60.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat63 = fractionFormat60.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat64 = new org.apache.commons.math.fraction.FractionFormat(numberFormat59, numberFormat63);
        org.apache.commons.math.fraction.FractionFormat fractionFormat65 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator67 = fractionFormat65.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat68 = fractionFormat65.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat69 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator71 = fractionFormat69.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat72 = fractionFormat69.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat73 = new org.apache.commons.math.fraction.FractionFormat(numberFormat68, numberFormat72);
        org.apache.commons.math.fraction.FractionFormat fractionFormat74 = new org.apache.commons.math.fraction.FractionFormat(numberFormat59, numberFormat72);
        java.text.NumberFormat numberFormat75 = fractionFormat74.getDenominatorFormat();
        java.lang.Object obj77 = numberFormat75.parseObject("-1 / 1");
        org.apache.commons.math.fraction.FractionFormat fractionFormat78 = new org.apache.commons.math.fraction.FractionFormat(numberFormat75);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str79 = numberFormat51.format((java.lang.Object) numberFormat75);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot format given Object as a Number");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(numberFormat3);
        org.junit.Assert.assertNull(numberFormat4);
        org.junit.Assert.assertNull(numberFormat5);
        org.junit.Assert.assertNotNull(fractionFormat6);
        org.junit.Assert.assertNotNull(attributedCharacterIterator8);
        org.junit.Assert.assertNotNull(numberFormat9);
        org.junit.Assert.assertNotNull(fractionFormat10);
        org.junit.Assert.assertNotNull(attributedCharacterIterator12);
        org.junit.Assert.assertNotNull(numberFormat13);
        org.junit.Assert.assertNotNull(fractionFormat16);
        org.junit.Assert.assertNotNull(obj18);
        org.junit.Assert.assertNotNull(numberFormat19);
        org.junit.Assert.assertNotNull(fractionFormat20);
        org.junit.Assert.assertNotNull(attributedCharacterIterator22);
        org.junit.Assert.assertNotNull(numberFormat23);
        org.junit.Assert.assertNotNull(fractionFormat24);
        org.junit.Assert.assertNotNull(attributedCharacterIterator26);
        org.junit.Assert.assertNotNull(numberFormat27);
        org.junit.Assert.assertNotNull(fractionFormat31);
        org.junit.Assert.assertNotNull(obj33);
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertNotNull(numberFormat36);
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertNotNull(fractionFormat38);
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertNotNull(numberFormat43);
        org.junit.Assert.assertNotNull(numberFormat44);
        org.junit.Assert.assertNotNull(fractionFormat45);
        org.junit.Assert.assertNotNull(attributedCharacterIterator47);
        org.junit.Assert.assertNotNull(numberFormat48);
        org.junit.Assert.assertNotNull(numberFormat51);
        org.junit.Assert.assertNotNull(fractionFormat53);
        org.junit.Assert.assertNotNull(obj55);
        org.junit.Assert.assertNotNull(obj57);
        org.junit.Assert.assertNotNull(numberFormat58);
        org.junit.Assert.assertNotNull(numberFormat59);
        org.junit.Assert.assertNotNull(fractionFormat60);
        org.junit.Assert.assertNotNull(attributedCharacterIterator62);
        org.junit.Assert.assertNotNull(numberFormat63);
        org.junit.Assert.assertNotNull(fractionFormat65);
        org.junit.Assert.assertNotNull(attributedCharacterIterator67);
        org.junit.Assert.assertNotNull(numberFormat68);
        org.junit.Assert.assertNotNull(fractionFormat69);
        org.junit.Assert.assertNotNull(attributedCharacterIterator71);
        org.junit.Assert.assertNotNull(numberFormat72);
        org.junit.Assert.assertNotNull(numberFormat75);
        org.junit.Assert.assertEquals("'" + obj77 + "' != '" + (-1L) + "'", obj77, (-1L));
    }

    @Test
    public void test0337() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0337");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = new org.apache.commons.math.fraction.FractionFormat();
        java.lang.String str2 = fractionFormat0.format((java.lang.Object) 0);
        java.text.ParsePosition parsePosition4 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj5 = fractionFormat0.parseObject("hi!", parsePosition4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "0 / 1" + "'", str2, "0 / 1");
    }

    @Test
    public void test0338() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0338");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat5 = fractionFormat0.getNumeratorFormat();
        java.text.NumberFormat numberFormat6 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat7 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator9 = fractionFormat7.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat10 = fractionFormat7.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = new org.apache.commons.math.fraction.FractionFormat(numberFormat6, numberFormat10);
        org.apache.commons.math.fraction.FractionFormat fractionFormat12 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator14 = fractionFormat12.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat15 = fractionFormat12.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat16 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator18 = fractionFormat16.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat19 = fractionFormat16.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat20 = new org.apache.commons.math.fraction.FractionFormat(numberFormat15, numberFormat19);
        fractionFormat11.setNumeratorFormat(numberFormat15);
        org.apache.commons.math.fraction.Fraction fraction23 = fractionFormat11.parse("0 / 1");
        java.text.NumberFormat numberFormat24 = null;
        java.text.NumberFormat numberFormat25 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat26 = new org.apache.commons.math.fraction.FractionFormat(numberFormat24, numberFormat25);
        java.text.NumberFormat numberFormat27 = fractionFormat26.getDenominatorFormat();
        java.text.NumberFormat numberFormat28 = fractionFormat26.getNumeratorFormat();
        java.text.NumberFormat numberFormat29 = fractionFormat26.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat30 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj32 = fractionFormat30.parseObject("0 / 1");
        java.lang.Object obj34 = fractionFormat30.parseObject("0 / 1");
        java.text.NumberFormat numberFormat35 = fractionFormat30.getNumeratorFormat();
        java.lang.Object obj36 = numberFormat35.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat37 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj39 = fractionFormat37.parseObject("0 / 1");
        java.lang.Object obj41 = fractionFormat37.parseObject("0 / 1");
        java.text.NumberFormat numberFormat42 = fractionFormat37.getNumeratorFormat();
        java.text.NumberFormat numberFormat43 = fractionFormat37.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat44 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator46 = fractionFormat44.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat47 = fractionFormat44.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat48 = new org.apache.commons.math.fraction.FractionFormat(numberFormat43, numberFormat47);
        org.apache.commons.math.fraction.FractionFormat fractionFormat49 = new org.apache.commons.math.fraction.FractionFormat(numberFormat35, numberFormat47);
        fractionFormat26.setNumeratorFormat(numberFormat35);
        org.apache.commons.math.fraction.FractionFormat fractionFormat51 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj53 = fractionFormat51.parseObject("0 / 1");
        java.lang.Object obj55 = fractionFormat51.parseObject("0 / 1");
        java.text.NumberFormat numberFormat56 = fractionFormat51.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat57 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj59 = fractionFormat57.parseObject("0 / 1");
        java.text.NumberFormat numberFormat60 = fractionFormat57.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat61 = new org.apache.commons.math.fraction.FractionFormat(numberFormat56, numberFormat60);
        org.apache.commons.math.fraction.FractionFormat fractionFormat62 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj64 = fractionFormat62.parseObject("0 / 1");
        java.lang.Object obj66 = fractionFormat62.parseObject("0 / 1");
        java.text.NumberFormat numberFormat67 = fractionFormat62.getNumeratorFormat();
        fractionFormat61.setDenominatorFormat(numberFormat67);
        java.lang.Object obj69 = numberFormat67.clone();
        fractionFormat26.setDenominatorFormat(numberFormat67);
        java.lang.Object obj71 = fractionFormat26.clone();
        java.lang.StringBuffer stringBuffer72 = null;
        java.text.FieldPosition fieldPosition73 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer74 = fractionFormat11.format((java.lang.Object) fractionFormat26, stringBuffer72, fieldPosition73);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot format given object as a fraction");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertNotNull(fractionFormat7);
        org.junit.Assert.assertNotNull(attributedCharacterIterator9);
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertNotNull(fractionFormat12);
        org.junit.Assert.assertNotNull(attributedCharacterIterator14);
        org.junit.Assert.assertNotNull(numberFormat15);
        org.junit.Assert.assertNotNull(fractionFormat16);
        org.junit.Assert.assertNotNull(attributedCharacterIterator18);
        org.junit.Assert.assertNotNull(numberFormat19);
        org.junit.Assert.assertNotNull(fraction23);
        org.junit.Assert.assertNull(numberFormat27);
        org.junit.Assert.assertNull(numberFormat28);
        org.junit.Assert.assertNull(numberFormat29);
        org.junit.Assert.assertNotNull(fractionFormat30);
        org.junit.Assert.assertNotNull(obj32);
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertNotNull(numberFormat35);
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertNotNull(fractionFormat37);
        org.junit.Assert.assertNotNull(obj39);
        org.junit.Assert.assertNotNull(obj41);
        org.junit.Assert.assertNotNull(numberFormat42);
        org.junit.Assert.assertNotNull(numberFormat43);
        org.junit.Assert.assertNotNull(fractionFormat44);
        org.junit.Assert.assertNotNull(attributedCharacterIterator46);
        org.junit.Assert.assertNotNull(numberFormat47);
        org.junit.Assert.assertNotNull(fractionFormat51);
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertNotNull(obj55);
        org.junit.Assert.assertNotNull(numberFormat56);
        org.junit.Assert.assertNotNull(fractionFormat57);
        org.junit.Assert.assertNotNull(obj59);
        org.junit.Assert.assertNotNull(numberFormat60);
        org.junit.Assert.assertNotNull(fractionFormat62);
        org.junit.Assert.assertNotNull(obj64);
        org.junit.Assert.assertNotNull(obj66);
        org.junit.Assert.assertNotNull(numberFormat67);
        org.junit.Assert.assertNotNull(obj69);
        org.junit.Assert.assertNotNull(obj71);
    }

    @Test
    public void test0339() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0339");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator2 = fractionFormat0.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat3 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat4 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator6 = fractionFormat4.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat7 = fractionFormat4.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat8 = new org.apache.commons.math.fraction.FractionFormat(numberFormat3, numberFormat7);
        java.text.NumberFormat numberFormat9 = fractionFormat8.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat10 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj13 = fractionFormat11.parseObject("0 / 1");
        java.lang.Object obj15 = fractionFormat11.parseObject("0 / 1");
        java.text.NumberFormat numberFormat16 = fractionFormat11.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat17 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj19 = fractionFormat17.parseObject("0 / 1");
        java.text.NumberFormat numberFormat20 = fractionFormat17.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat21 = new org.apache.commons.math.fraction.FractionFormat(numberFormat16, numberFormat20);
        org.apache.commons.math.fraction.FractionFormat fractionFormat22 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj24 = fractionFormat22.parseObject("0 / 1");
        java.lang.Object obj26 = fractionFormat22.parseObject("0 / 1");
        java.text.NumberFormat numberFormat27 = fractionFormat22.getNumeratorFormat();
        fractionFormat21.setDenominatorFormat(numberFormat27);
        java.lang.Object obj29 = numberFormat27.clone();
        fractionFormat10.setNumeratorFormat(numberFormat27);
        java.lang.Object obj31 = numberFormat27.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat32 = new org.apache.commons.math.fraction.FractionFormat(numberFormat9, numberFormat27);
        java.text.NumberFormat numberFormat33 = fractionFormat32.getNumeratorFormat();
        java.lang.Class<?> wildcardClass34 = numberFormat33.getClass();
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(attributedCharacterIterator2);
        org.junit.Assert.assertNotNull(numberFormat3);
        org.junit.Assert.assertNotNull(fractionFormat4);
        org.junit.Assert.assertNotNull(attributedCharacterIterator6);
        org.junit.Assert.assertNotNull(numberFormat7);
        org.junit.Assert.assertNotNull(numberFormat9);
        org.junit.Assert.assertNotNull(fractionFormat10);
        org.junit.Assert.assertNotNull(fractionFormat11);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertNotNull(numberFormat16);
        org.junit.Assert.assertNotNull(fractionFormat17);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(numberFormat20);
        org.junit.Assert.assertNotNull(fractionFormat22);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertNotNull(numberFormat27);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertNotNull(numberFormat33);
        org.junit.Assert.assertNotNull(wildcardClass34);
    }

    @Test
    public void test0340() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0340");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.text.NumberFormat numberFormat3 = fractionFormat2.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat4 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj6 = fractionFormat4.parseObject("0 / 1");
        java.lang.Object obj8 = fractionFormat4.parseObject("0 / 1");
        java.text.NumberFormat numberFormat9 = fractionFormat4.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat10 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj12 = fractionFormat10.parseObject("0 / 1");
        java.text.NumberFormat numberFormat13 = fractionFormat10.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat14 = new org.apache.commons.math.fraction.FractionFormat(numberFormat9, numberFormat13);
        org.apache.commons.math.fraction.FractionFormat fractionFormat15 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj17 = fractionFormat15.parseObject("0 / 1");
        java.lang.Object obj19 = fractionFormat15.parseObject("0 / 1");
        java.text.NumberFormat numberFormat20 = fractionFormat15.getNumeratorFormat();
        fractionFormat14.setDenominatorFormat(numberFormat20);
        java.lang.Object obj22 = numberFormat20.clone();
        fractionFormat2.setDenominatorFormat(numberFormat20);
        java.text.NumberFormat numberFormat24 = null;
        java.text.NumberFormat numberFormat25 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat26 = new org.apache.commons.math.fraction.FractionFormat(numberFormat24, numberFormat25);
        java.text.NumberFormat numberFormat27 = fractionFormat26.getDenominatorFormat();
        java.text.NumberFormat numberFormat28 = fractionFormat26.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat29 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator31 = fractionFormat29.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat32 = fractionFormat29.getDenominatorFormat();
        fractionFormat26.setNumeratorFormat(numberFormat32);
        org.apache.commons.math.fraction.FractionFormat fractionFormat34 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator36 = fractionFormat34.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat37 = fractionFormat34.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat38 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator40 = fractionFormat38.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat41 = fractionFormat38.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat42 = new org.apache.commons.math.fraction.FractionFormat(numberFormat37, numberFormat41);
        java.text.NumberFormat numberFormat43 = fractionFormat42.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat44 = new org.apache.commons.math.fraction.FractionFormat(numberFormat43);
        fractionFormat26.setNumeratorFormat(numberFormat43);
        java.lang.StringBuffer stringBuffer46 = null;
        java.text.FieldPosition fieldPosition47 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer48 = fractionFormat2.format((java.lang.Object) numberFormat43, stringBuffer46, fieldPosition47);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot format given object as a fraction");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(numberFormat3);
        org.junit.Assert.assertNotNull(fractionFormat4);
        org.junit.Assert.assertNotNull(obj6);
        org.junit.Assert.assertNotNull(obj8);
        org.junit.Assert.assertNotNull(numberFormat9);
        org.junit.Assert.assertNotNull(fractionFormat10);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertNotNull(numberFormat13);
        org.junit.Assert.assertNotNull(fractionFormat15);
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(numberFormat20);
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertNull(numberFormat27);
        org.junit.Assert.assertNull(numberFormat28);
        org.junit.Assert.assertNotNull(fractionFormat29);
        org.junit.Assert.assertNotNull(attributedCharacterIterator31);
        org.junit.Assert.assertNotNull(numberFormat32);
        org.junit.Assert.assertNotNull(fractionFormat34);
        org.junit.Assert.assertNotNull(attributedCharacterIterator36);
        org.junit.Assert.assertNotNull(numberFormat37);
        org.junit.Assert.assertNotNull(fractionFormat38);
        org.junit.Assert.assertNotNull(attributedCharacterIterator40);
        org.junit.Assert.assertNotNull(numberFormat41);
        org.junit.Assert.assertNotNull(numberFormat43);
    }

    @Test
    public void test0341() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0341");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator2 = fractionFormat0.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat3 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat4 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator6 = fractionFormat4.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat7 = fractionFormat4.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat8 = new org.apache.commons.math.fraction.FractionFormat(numberFormat3, numberFormat7);
        org.apache.commons.math.fraction.FractionFormat fractionFormat9 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj11 = fractionFormat9.parseObject("0 / 1");
        java.lang.Object obj13 = fractionFormat9.parseObject("0 / 1");
        java.text.NumberFormat numberFormat14 = fractionFormat9.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat15 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj17 = fractionFormat15.parseObject("0 / 1");
        java.text.NumberFormat numberFormat18 = fractionFormat15.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat19 = new org.apache.commons.math.fraction.FractionFormat(numberFormat14, numberFormat18);
        java.text.NumberFormat numberFormat20 = fractionFormat19.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat21 = new org.apache.commons.math.fraction.FractionFormat(numberFormat3, numberFormat20);
        org.apache.commons.math.fraction.FractionFormat fractionFormat22 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj24 = fractionFormat22.parseObject("0 / 1");
        java.lang.Object obj26 = fractionFormat22.parseObject("0 / 1");
        java.text.NumberFormat numberFormat27 = fractionFormat22.getNumeratorFormat();
        java.text.NumberFormat numberFormat28 = fractionFormat22.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat29 = new org.apache.commons.math.fraction.FractionFormat(numberFormat28);
        org.apache.commons.math.fraction.FractionFormat fractionFormat30 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj32 = fractionFormat30.parseObject("0 / 1");
        java.lang.Object obj34 = fractionFormat30.parseObject("0 / 1");
        java.text.NumberFormat numberFormat35 = fractionFormat30.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat36 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj38 = fractionFormat36.parseObject("0 / 1");
        java.text.NumberFormat numberFormat39 = fractionFormat36.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat40 = new org.apache.commons.math.fraction.FractionFormat(numberFormat35, numberFormat39);
        org.apache.commons.math.fraction.FractionFormat fractionFormat41 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj43 = fractionFormat41.parseObject("0 / 1");
        java.lang.Object obj45 = fractionFormat41.parseObject("0 / 1");
        java.text.NumberFormat numberFormat46 = fractionFormat41.getNumeratorFormat();
        fractionFormat40.setDenominatorFormat(numberFormat46);
        org.apache.commons.math.fraction.FractionFormat fractionFormat48 = new org.apache.commons.math.fraction.FractionFormat(numberFormat28, numberFormat46);
        fractionFormat21.setNumeratorFormat(numberFormat28);
        org.apache.commons.math.fraction.FractionFormat fractionFormat50 = new org.apache.commons.math.fraction.FractionFormat(numberFormat28);
        java.text.NumberFormat numberFormat51 = null;
        java.text.NumberFormat numberFormat52 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat53 = new org.apache.commons.math.fraction.FractionFormat(numberFormat51, numberFormat52);
        java.text.NumberFormat numberFormat54 = fractionFormat53.getDenominatorFormat();
        java.text.NumberFormat numberFormat55 = fractionFormat53.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat56 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator58 = fractionFormat56.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat59 = fractionFormat56.getDenominatorFormat();
        fractionFormat53.setNumeratorFormat(numberFormat59);
        java.text.NumberFormat numberFormat61 = null;
        java.text.NumberFormat numberFormat62 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat63 = new org.apache.commons.math.fraction.FractionFormat(numberFormat61, numberFormat62);
        java.text.NumberFormat numberFormat64 = fractionFormat63.getNumeratorFormat();
        java.text.NumberFormat numberFormat65 = fractionFormat63.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat66 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj68 = fractionFormat66.parseObject("0 / 1");
        java.lang.Object obj70 = fractionFormat66.parseObject("0 / 1");
        java.text.NumberFormat numberFormat71 = fractionFormat66.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat72 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj74 = fractionFormat72.parseObject("0 / 1");
        java.text.NumberFormat numberFormat75 = fractionFormat72.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat76 = new org.apache.commons.math.fraction.FractionFormat(numberFormat71, numberFormat75);
        fractionFormat63.setNumeratorFormat(numberFormat71);
        fractionFormat53.setDenominatorFormat(numberFormat71);
        java.lang.StringBuffer stringBuffer79 = null;
        java.text.FieldPosition fieldPosition80 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer81 = fractionFormat50.format((java.lang.Object) fractionFormat53, stringBuffer79, fieldPosition80);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot format given object as a fraction");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(attributedCharacterIterator2);
        org.junit.Assert.assertNotNull(numberFormat3);
        org.junit.Assert.assertNotNull(fractionFormat4);
        org.junit.Assert.assertNotNull(attributedCharacterIterator6);
        org.junit.Assert.assertNotNull(numberFormat7);
        org.junit.Assert.assertNotNull(fractionFormat9);
        org.junit.Assert.assertNotNull(obj11);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertNotNull(numberFormat14);
        org.junit.Assert.assertNotNull(fractionFormat15);
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertNotNull(numberFormat18);
        org.junit.Assert.assertNotNull(numberFormat20);
        org.junit.Assert.assertNotNull(fractionFormat22);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertNotNull(numberFormat27);
        org.junit.Assert.assertNotNull(numberFormat28);
        org.junit.Assert.assertNotNull(fractionFormat30);
        org.junit.Assert.assertNotNull(obj32);
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertNotNull(numberFormat35);
        org.junit.Assert.assertNotNull(fractionFormat36);
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertNotNull(numberFormat39);
        org.junit.Assert.assertNotNull(fractionFormat41);
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertNotNull(numberFormat46);
        org.junit.Assert.assertNull(numberFormat54);
        org.junit.Assert.assertNull(numberFormat55);
        org.junit.Assert.assertNotNull(fractionFormat56);
        org.junit.Assert.assertNotNull(attributedCharacterIterator58);
        org.junit.Assert.assertNotNull(numberFormat59);
        org.junit.Assert.assertNull(numberFormat64);
        org.junit.Assert.assertNull(numberFormat65);
        org.junit.Assert.assertNotNull(fractionFormat66);
        org.junit.Assert.assertNotNull(obj68);
        org.junit.Assert.assertNotNull(obj70);
        org.junit.Assert.assertNotNull(numberFormat71);
        org.junit.Assert.assertNotNull(fractionFormat72);
        org.junit.Assert.assertNotNull(obj74);
        org.junit.Assert.assertNotNull(numberFormat75);
    }

    @Test
    public void test0342() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0342");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.lang.Object obj3 = fractionFormat2.clone();
        java.text.NumberFormat numberFormat4 = null;
        java.text.NumberFormat numberFormat5 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat6 = new org.apache.commons.math.fraction.FractionFormat(numberFormat4, numberFormat5);
        java.text.NumberFormat numberFormat7 = fractionFormat6.getDenominatorFormat();
        java.text.NumberFormat numberFormat8 = fractionFormat6.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat9 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator11 = fractionFormat9.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat12 = fractionFormat9.getDenominatorFormat();
        fractionFormat6.setNumeratorFormat(numberFormat12);
        java.lang.Object obj14 = numberFormat12.clone();
        java.lang.String str16 = numberFormat12.format((java.lang.Object) (short) 10);
        org.apache.commons.math.fraction.FractionFormat fractionFormat17 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator19 = fractionFormat17.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat20 = fractionFormat17.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat21 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator23 = fractionFormat21.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat24 = fractionFormat21.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat25 = new org.apache.commons.math.fraction.FractionFormat(numberFormat20, numberFormat24);
        org.apache.commons.math.fraction.FractionFormat fractionFormat26 = new org.apache.commons.math.fraction.FractionFormat(numberFormat12, numberFormat20);
        fractionFormat2.setDenominatorFormat(numberFormat12);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj29 = numberFormat12.parseObject("");
            org.junit.Assert.fail("Expected exception of type java.text.ParseException; message: Format.parseObject(String) failed");
        } catch (java.text.ParseException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(obj3);
        org.junit.Assert.assertNull(numberFormat7);
        org.junit.Assert.assertNull(numberFormat8);
        org.junit.Assert.assertNotNull(fractionFormat9);
        org.junit.Assert.assertNotNull(attributedCharacterIterator11);
        org.junit.Assert.assertNotNull(numberFormat12);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "10" + "'", str16, "10");
        org.junit.Assert.assertNotNull(fractionFormat17);
        org.junit.Assert.assertNotNull(attributedCharacterIterator19);
        org.junit.Assert.assertNotNull(numberFormat20);
        org.junit.Assert.assertNotNull(fractionFormat21);
        org.junit.Assert.assertNotNull(attributedCharacterIterator23);
        org.junit.Assert.assertNotNull(numberFormat24);
    }

    @Test
    public void test0343() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0343");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.text.NumberFormat numberFormat3 = fractionFormat2.getDenominatorFormat();
        java.text.NumberFormat numberFormat4 = fractionFormat2.getNumeratorFormat();
        java.text.NumberFormat numberFormat5 = fractionFormat2.getNumeratorFormat();
        java.text.NumberFormat numberFormat6 = fractionFormat2.getDenominatorFormat();
        java.lang.Object obj7 = fractionFormat2.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat8 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj10 = fractionFormat8.parseObject("0 / 1");
        java.lang.Object obj12 = fractionFormat8.parseObject("0 / 1");
        java.text.NumberFormat numberFormat13 = fractionFormat8.getNumeratorFormat();
        java.text.NumberFormat numberFormat14 = fractionFormat8.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat15 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator17 = fractionFormat15.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat18 = fractionFormat15.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat19 = new org.apache.commons.math.fraction.FractionFormat(numberFormat14, numberFormat18);
        org.apache.commons.math.fraction.FractionFormat fractionFormat20 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator22 = fractionFormat20.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat23 = fractionFormat20.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat24 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator26 = fractionFormat24.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat27 = fractionFormat24.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat28 = new org.apache.commons.math.fraction.FractionFormat(numberFormat23, numberFormat27);
        org.apache.commons.math.fraction.FractionFormat fractionFormat29 = new org.apache.commons.math.fraction.FractionFormat(numberFormat14, numberFormat27);
        java.text.NumberFormat numberFormat30 = fractionFormat29.getDenominatorFormat();
        fractionFormat2.setDenominatorFormat(numberFormat30);
        org.apache.commons.math.fraction.FractionFormat fractionFormat32 = new org.apache.commons.math.fraction.FractionFormat(numberFormat30);
        org.apache.commons.math.fraction.FractionFormat fractionFormat33 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator35 = fractionFormat33.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat36 = fractionFormat33.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat37 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator39 = fractionFormat37.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat40 = fractionFormat37.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat41 = new org.apache.commons.math.fraction.FractionFormat(numberFormat36, numberFormat40);
        java.text.NumberFormat numberFormat42 = fractionFormat41.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat43 = new org.apache.commons.math.fraction.FractionFormat(numberFormat42);
        java.text.NumberFormat numberFormat44 = fractionFormat43.getDenominatorFormat();
        java.lang.StringBuffer stringBuffer45 = null;
        java.text.FieldPosition fieldPosition46 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer47 = fractionFormat32.format((java.lang.Object) numberFormat44, stringBuffer45, fieldPosition46);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot format given object as a fraction");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(numberFormat3);
        org.junit.Assert.assertNull(numberFormat4);
        org.junit.Assert.assertNull(numberFormat5);
        org.junit.Assert.assertNull(numberFormat6);
        org.junit.Assert.assertNotNull(obj7);
        org.junit.Assert.assertNotNull(fractionFormat8);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertNotNull(numberFormat13);
        org.junit.Assert.assertNotNull(numberFormat14);
        org.junit.Assert.assertNotNull(fractionFormat15);
        org.junit.Assert.assertNotNull(attributedCharacterIterator17);
        org.junit.Assert.assertNotNull(numberFormat18);
        org.junit.Assert.assertNotNull(fractionFormat20);
        org.junit.Assert.assertNotNull(attributedCharacterIterator22);
        org.junit.Assert.assertNotNull(numberFormat23);
        org.junit.Assert.assertNotNull(fractionFormat24);
        org.junit.Assert.assertNotNull(attributedCharacterIterator26);
        org.junit.Assert.assertNotNull(numberFormat27);
        org.junit.Assert.assertNotNull(numberFormat30);
        org.junit.Assert.assertNotNull(fractionFormat33);
        org.junit.Assert.assertNotNull(attributedCharacterIterator35);
        org.junit.Assert.assertNotNull(numberFormat36);
        org.junit.Assert.assertNotNull(fractionFormat37);
        org.junit.Assert.assertNotNull(attributedCharacterIterator39);
        org.junit.Assert.assertNotNull(numberFormat40);
        org.junit.Assert.assertNotNull(numberFormat42);
        org.junit.Assert.assertNotNull(numberFormat44);
    }

    @Test
    public void test0344() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0344");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat1 = fractionFormat0.getNumeratorFormat();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj3 = numberFormat1.parseObject("hi!");
            org.junit.Assert.fail("Expected exception of type java.text.ParseException; message: Format.parseObject(String) failed");
        } catch (java.text.ParseException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(numberFormat1);
    }

    @Test
    public void test0345() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0345");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat5 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat6 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj8 = fractionFormat6.parseObject("0 / 1");
        java.text.NumberFormat numberFormat9 = fractionFormat6.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat10 = new org.apache.commons.math.fraction.FractionFormat(numberFormat5, numberFormat9);
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj13 = fractionFormat11.parseObject("0 / 1");
        java.lang.Object obj15 = fractionFormat11.parseObject("0 / 1");
        java.text.NumberFormat numberFormat16 = fractionFormat11.getNumeratorFormat();
        fractionFormat10.setDenominatorFormat(numberFormat16);
        org.apache.commons.math.fraction.FractionFormat fractionFormat18 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator20 = fractionFormat18.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat21 = fractionFormat18.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat22 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator24 = fractionFormat22.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat25 = fractionFormat22.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat26 = new org.apache.commons.math.fraction.FractionFormat(numberFormat21, numberFormat25);
        java.text.NumberFormat numberFormat27 = fractionFormat26.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat28 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat29 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj31 = fractionFormat29.parseObject("0 / 1");
        java.lang.Object obj33 = fractionFormat29.parseObject("0 / 1");
        java.text.NumberFormat numberFormat34 = fractionFormat29.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat35 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj37 = fractionFormat35.parseObject("0 / 1");
        java.text.NumberFormat numberFormat38 = fractionFormat35.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat39 = new org.apache.commons.math.fraction.FractionFormat(numberFormat34, numberFormat38);
        org.apache.commons.math.fraction.FractionFormat fractionFormat40 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj42 = fractionFormat40.parseObject("0 / 1");
        java.lang.Object obj44 = fractionFormat40.parseObject("0 / 1");
        java.text.NumberFormat numberFormat45 = fractionFormat40.getNumeratorFormat();
        fractionFormat39.setDenominatorFormat(numberFormat45);
        java.lang.Object obj47 = numberFormat45.clone();
        fractionFormat28.setNumeratorFormat(numberFormat45);
        java.lang.Object obj49 = numberFormat45.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat50 = new org.apache.commons.math.fraction.FractionFormat(numberFormat27, numberFormat45);
        fractionFormat10.setDenominatorFormat(numberFormat45);
        java.text.NumberFormat numberFormat52 = null;
        java.text.NumberFormat numberFormat53 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat54 = new org.apache.commons.math.fraction.FractionFormat(numberFormat52, numberFormat53);
        java.lang.Object obj55 = fractionFormat54.clone();
        java.text.NumberFormat numberFormat56 = null;
        java.text.NumberFormat numberFormat57 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat58 = new org.apache.commons.math.fraction.FractionFormat(numberFormat56, numberFormat57);
        java.text.NumberFormat numberFormat59 = fractionFormat58.getDenominatorFormat();
        java.text.NumberFormat numberFormat60 = fractionFormat58.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat61 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator63 = fractionFormat61.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat64 = fractionFormat61.getDenominatorFormat();
        fractionFormat58.setNumeratorFormat(numberFormat64);
        java.lang.Object obj66 = numberFormat64.clone();
        java.lang.String str68 = numberFormat64.format((java.lang.Object) (short) 10);
        org.apache.commons.math.fraction.FractionFormat fractionFormat69 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator71 = fractionFormat69.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat72 = fractionFormat69.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat73 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator75 = fractionFormat73.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat76 = fractionFormat73.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat77 = new org.apache.commons.math.fraction.FractionFormat(numberFormat72, numberFormat76);
        org.apache.commons.math.fraction.FractionFormat fractionFormat78 = new org.apache.commons.math.fraction.FractionFormat(numberFormat64, numberFormat72);
        fractionFormat54.setDenominatorFormat(numberFormat64);
        org.apache.commons.math.fraction.FractionFormat fractionFormat80 = new org.apache.commons.math.fraction.FractionFormat(numberFormat64);
        java.lang.StringBuffer stringBuffer81 = null;
        java.text.FieldPosition fieldPosition82 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer83 = fractionFormat10.format((java.lang.Object) fractionFormat80, stringBuffer81, fieldPosition82);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot format given object as a fraction");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(fractionFormat6);
        org.junit.Assert.assertNotNull(obj8);
        org.junit.Assert.assertNotNull(numberFormat9);
        org.junit.Assert.assertNotNull(fractionFormat11);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertNotNull(numberFormat16);
        org.junit.Assert.assertNotNull(fractionFormat18);
        org.junit.Assert.assertNotNull(attributedCharacterIterator20);
        org.junit.Assert.assertNotNull(numberFormat21);
        org.junit.Assert.assertNotNull(fractionFormat22);
        org.junit.Assert.assertNotNull(attributedCharacterIterator24);
        org.junit.Assert.assertNotNull(numberFormat25);
        org.junit.Assert.assertNotNull(numberFormat27);
        org.junit.Assert.assertNotNull(fractionFormat28);
        org.junit.Assert.assertNotNull(fractionFormat29);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertNotNull(obj33);
        org.junit.Assert.assertNotNull(numberFormat34);
        org.junit.Assert.assertNotNull(fractionFormat35);
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertNotNull(numberFormat38);
        org.junit.Assert.assertNotNull(fractionFormat40);
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertNotNull(obj44);
        org.junit.Assert.assertNotNull(numberFormat45);
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertNotNull(obj49);
        org.junit.Assert.assertNotNull(obj55);
        org.junit.Assert.assertNull(numberFormat59);
        org.junit.Assert.assertNull(numberFormat60);
        org.junit.Assert.assertNotNull(fractionFormat61);
        org.junit.Assert.assertNotNull(attributedCharacterIterator63);
        org.junit.Assert.assertNotNull(numberFormat64);
        org.junit.Assert.assertNotNull(obj66);
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "10" + "'", str68, "10");
        org.junit.Assert.assertNotNull(fractionFormat69);
        org.junit.Assert.assertNotNull(attributedCharacterIterator71);
        org.junit.Assert.assertNotNull(numberFormat72);
        org.junit.Assert.assertNotNull(fractionFormat73);
        org.junit.Assert.assertNotNull(attributedCharacterIterator75);
        org.junit.Assert.assertNotNull(numberFormat76);
    }

    @Test
    public void test0346() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0346");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat1 = fractionFormat0.getNumeratorFormat();
        java.text.ParsePosition parsePosition3 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.fraction.Fraction fraction4 = fractionFormat0.parse("0 / 1", parsePosition3);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(numberFormat1);
    }

    @Test
    public void test0347() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0347");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        java.text.NumberFormat numberFormat2 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat3 = new org.apache.commons.math.fraction.FractionFormat(numberFormat1, numberFormat2);
        java.text.NumberFormat numberFormat4 = fractionFormat3.getDenominatorFormat();
        java.text.NumberFormat numberFormat5 = fractionFormat3.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat6 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator8 = fractionFormat6.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat9 = fractionFormat6.getDenominatorFormat();
        fractionFormat3.setNumeratorFormat(numberFormat9);
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj13 = fractionFormat11.parseObject("0 / 1");
        java.text.NumberFormat numberFormat14 = fractionFormat11.getNumeratorFormat();
        fractionFormat3.setNumeratorFormat(numberFormat14);
        org.apache.commons.math.fraction.FractionFormat fractionFormat16 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat14);
        java.text.NumberFormat numberFormat17 = null;
        java.text.NumberFormat numberFormat18 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat19 = new org.apache.commons.math.fraction.FractionFormat(numberFormat17, numberFormat18);
        java.text.NumberFormat numberFormat20 = fractionFormat19.getDenominatorFormat();
        java.text.NumberFormat numberFormat21 = fractionFormat19.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat22 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator24 = fractionFormat22.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat25 = fractionFormat22.getDenominatorFormat();
        fractionFormat19.setNumeratorFormat(numberFormat25);
        org.apache.commons.math.fraction.FractionFormat fractionFormat27 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat25);
        java.text.NumberFormat numberFormat28 = null;
        java.text.NumberFormat numberFormat29 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat30 = new org.apache.commons.math.fraction.FractionFormat(numberFormat28, numberFormat29);
        java.text.NumberFormat numberFormat31 = fractionFormat30.getDenominatorFormat();
        java.text.NumberFormat numberFormat32 = fractionFormat30.getNumeratorFormat();
        java.text.NumberFormat numberFormat33 = fractionFormat30.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat34 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj36 = fractionFormat34.parseObject("0 / 1");
        java.lang.Object obj38 = fractionFormat34.parseObject("0 / 1");
        java.text.NumberFormat numberFormat39 = fractionFormat34.getNumeratorFormat();
        java.lang.Object obj40 = numberFormat39.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat41 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj43 = fractionFormat41.parseObject("0 / 1");
        java.lang.Object obj45 = fractionFormat41.parseObject("0 / 1");
        java.text.NumberFormat numberFormat46 = fractionFormat41.getNumeratorFormat();
        java.text.NumberFormat numberFormat47 = fractionFormat41.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat48 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator50 = fractionFormat48.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat51 = fractionFormat48.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat52 = new org.apache.commons.math.fraction.FractionFormat(numberFormat47, numberFormat51);
        org.apache.commons.math.fraction.FractionFormat fractionFormat53 = new org.apache.commons.math.fraction.FractionFormat(numberFormat39, numberFormat51);
        fractionFormat30.setNumeratorFormat(numberFormat39);
        org.apache.commons.math.fraction.Fraction fraction56 = fractionFormat30.parse("10");
        java.lang.String str57 = org.apache.commons.math.fraction.FractionFormat.formatFraction(fraction56);
        java.lang.String str58 = org.apache.commons.math.fraction.FractionFormat.formatFraction(fraction56);
        java.lang.StringBuffer stringBuffer59 = null;
        java.text.FieldPosition fieldPosition60 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer61 = fractionFormat27.format(fraction56, stringBuffer59, fieldPosition60);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(numberFormat4);
        org.junit.Assert.assertNull(numberFormat5);
        org.junit.Assert.assertNotNull(fractionFormat6);
        org.junit.Assert.assertNotNull(attributedCharacterIterator8);
        org.junit.Assert.assertNotNull(numberFormat9);
        org.junit.Assert.assertNotNull(fractionFormat11);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertNotNull(numberFormat14);
        org.junit.Assert.assertNull(numberFormat20);
        org.junit.Assert.assertNull(numberFormat21);
        org.junit.Assert.assertNotNull(fractionFormat22);
        org.junit.Assert.assertNotNull(attributedCharacterIterator24);
        org.junit.Assert.assertNotNull(numberFormat25);
        org.junit.Assert.assertNull(numberFormat31);
        org.junit.Assert.assertNull(numberFormat32);
        org.junit.Assert.assertNull(numberFormat33);
        org.junit.Assert.assertNotNull(fractionFormat34);
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertNotNull(numberFormat39);
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertNotNull(fractionFormat41);
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertNotNull(numberFormat46);
        org.junit.Assert.assertNotNull(numberFormat47);
        org.junit.Assert.assertNotNull(fractionFormat48);
        org.junit.Assert.assertNotNull(attributedCharacterIterator50);
        org.junit.Assert.assertNotNull(numberFormat51);
        org.junit.Assert.assertNotNull(fraction56);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "10 / 1" + "'", str57, "10 / 1");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "10 / 1" + "'", str58, "10 / 1");
    }

    @Test
    public void test0348() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0348");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat5 = fractionFormat0.getNumeratorFormat();
        java.text.NumberFormat numberFormat6 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat7 = new org.apache.commons.math.fraction.FractionFormat(numberFormat6);
        org.apache.commons.math.fraction.FractionFormat fractionFormat8 = new org.apache.commons.math.fraction.FractionFormat(numberFormat6);
        java.text.NumberFormat numberFormat9 = fractionFormat8.getDenominatorFormat();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj11 = numberFormat9.parseObject("");
            org.junit.Assert.fail("Expected exception of type java.text.ParseException; message: Format.parseObject(String) failed");
        } catch (java.text.ParseException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertNotNull(numberFormat9);
    }

    @Test
    public void test0349() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0349");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = new org.apache.commons.math.fraction.FractionFormat();
        java.lang.String str2 = fractionFormat0.format((java.lang.Object) 0);
        java.lang.String str4 = fractionFormat0.format((java.lang.Object) (-1));
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj7 = fractionFormat5.parseObject("0 / 1");
        java.lang.Object obj9 = fractionFormat5.parseObject("-1 / 1");
        org.apache.commons.math.fraction.FractionFormat fractionFormat10 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj13 = fractionFormat11.parseObject("0 / 1");
        java.lang.Object obj15 = fractionFormat11.parseObject("0 / 1");
        java.text.NumberFormat numberFormat16 = fractionFormat11.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat17 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj19 = fractionFormat17.parseObject("0 / 1");
        java.text.NumberFormat numberFormat20 = fractionFormat17.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat21 = new org.apache.commons.math.fraction.FractionFormat(numberFormat16, numberFormat20);
        org.apache.commons.math.fraction.FractionFormat fractionFormat22 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj24 = fractionFormat22.parseObject("0 / 1");
        java.lang.Object obj26 = fractionFormat22.parseObject("0 / 1");
        java.text.NumberFormat numberFormat27 = fractionFormat22.getNumeratorFormat();
        fractionFormat21.setDenominatorFormat(numberFormat27);
        java.lang.Object obj29 = numberFormat27.clone();
        fractionFormat10.setNumeratorFormat(numberFormat27);
        java.lang.Object obj31 = numberFormat27.clone();
        java.lang.Object obj32 = numberFormat27.clone();
        fractionFormat5.setDenominatorFormat(numberFormat27);
        fractionFormat0.setNumeratorFormat(numberFormat27);
        java.lang.Class<?> wildcardClass35 = numberFormat27.getClass();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "0 / 1" + "'", str2, "0 / 1");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-1 / 1" + "'", str4, "-1 / 1");
        org.junit.Assert.assertNotNull(fractionFormat5);
        org.junit.Assert.assertNotNull(obj7);
        org.junit.Assert.assertNotNull(obj9);
        org.junit.Assert.assertNotNull(fractionFormat10);
        org.junit.Assert.assertNotNull(fractionFormat11);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertNotNull(numberFormat16);
        org.junit.Assert.assertNotNull(fractionFormat17);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(numberFormat20);
        org.junit.Assert.assertNotNull(fractionFormat22);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertNotNull(numberFormat27);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertNotNull(obj32);
        org.junit.Assert.assertNotNull(wildcardClass35);
    }

    @Test
    public void test0350() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0350");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.text.NumberFormat numberFormat3 = fractionFormat2.getDenominatorFormat();
        java.text.NumberFormat numberFormat4 = fractionFormat2.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator7 = fractionFormat5.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat8 = fractionFormat5.getDenominatorFormat();
        fractionFormat2.setNumeratorFormat(numberFormat8);
        org.apache.commons.math.fraction.FractionFormat fractionFormat10 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj12 = fractionFormat10.parseObject("0 / 1");
        java.text.NumberFormat numberFormat13 = fractionFormat10.getNumeratorFormat();
        fractionFormat2.setNumeratorFormat(numberFormat13);
        java.lang.Object obj16 = numberFormat13.parseObject("0 / 1");
        java.text.NumberFormat numberFormat17 = null;
        java.text.NumberFormat numberFormat18 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat19 = new org.apache.commons.math.fraction.FractionFormat(numberFormat17, numberFormat18);
        java.text.NumberFormat numberFormat20 = fractionFormat19.getDenominatorFormat();
        java.text.NumberFormat numberFormat21 = fractionFormat19.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat22 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj24 = fractionFormat22.parseObject("0 / 1");
        java.lang.Object obj26 = fractionFormat22.parseObject("0 / 1");
        java.text.NumberFormat numberFormat27 = fractionFormat22.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat28 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj30 = fractionFormat28.parseObject("0 / 1");
        java.text.NumberFormat numberFormat31 = fractionFormat28.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat32 = new org.apache.commons.math.fraction.FractionFormat(numberFormat27, numberFormat31);
        java.text.AttributedCharacterIterator attributedCharacterIterator34 = numberFormat27.formatToCharacterIterator((java.lang.Object) (-1));
        fractionFormat19.setDenominatorFormat(numberFormat27);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str36 = numberFormat13.format((java.lang.Object) numberFormat27);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot format given Object as a Number");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(numberFormat3);
        org.junit.Assert.assertNull(numberFormat4);
        org.junit.Assert.assertNotNull(fractionFormat5);
        org.junit.Assert.assertNotNull(attributedCharacterIterator7);
        org.junit.Assert.assertNotNull(numberFormat8);
        org.junit.Assert.assertNotNull(fractionFormat10);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertNotNull(numberFormat13);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 0L + "'", obj16, 0L);
        org.junit.Assert.assertNull(numberFormat20);
        org.junit.Assert.assertNull(numberFormat21);
        org.junit.Assert.assertNotNull(fractionFormat22);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertNotNull(numberFormat27);
        org.junit.Assert.assertNotNull(fractionFormat28);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertNotNull(numberFormat31);
        org.junit.Assert.assertNotNull(attributedCharacterIterator34);
    }

    @Test
    public void test0351() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0351");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat5 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat6 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj8 = fractionFormat6.parseObject("0 / 1");
        java.lang.Object obj10 = fractionFormat6.parseObject("0 / 1");
        java.text.NumberFormat numberFormat11 = fractionFormat6.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat12 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj14 = fractionFormat12.parseObject("0 / 1");
        java.text.NumberFormat numberFormat15 = fractionFormat12.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat16 = new org.apache.commons.math.fraction.FractionFormat(numberFormat11, numberFormat15);
        org.apache.commons.math.fraction.FractionFormat fractionFormat17 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj19 = fractionFormat17.parseObject("0 / 1");
        java.lang.Object obj21 = fractionFormat17.parseObject("0 / 1");
        java.text.NumberFormat numberFormat22 = fractionFormat17.getNumeratorFormat();
        fractionFormat16.setDenominatorFormat(numberFormat22);
        org.apache.commons.math.fraction.FractionFormat fractionFormat24 = new org.apache.commons.math.fraction.FractionFormat(numberFormat5, numberFormat22);
        java.text.NumberFormat numberFormat25 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat26 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat27 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj29 = fractionFormat27.parseObject("0 / 1");
        java.lang.Object obj31 = fractionFormat27.parseObject("-1 / 1");
        org.apache.commons.math.fraction.FractionFormat fractionFormat32 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat33 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj35 = fractionFormat33.parseObject("0 / 1");
        java.lang.Object obj37 = fractionFormat33.parseObject("0 / 1");
        java.text.NumberFormat numberFormat38 = fractionFormat33.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat39 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj41 = fractionFormat39.parseObject("0 / 1");
        java.text.NumberFormat numberFormat42 = fractionFormat39.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat43 = new org.apache.commons.math.fraction.FractionFormat(numberFormat38, numberFormat42);
        org.apache.commons.math.fraction.FractionFormat fractionFormat44 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj46 = fractionFormat44.parseObject("0 / 1");
        java.lang.Object obj48 = fractionFormat44.parseObject("0 / 1");
        java.text.NumberFormat numberFormat49 = fractionFormat44.getNumeratorFormat();
        fractionFormat43.setDenominatorFormat(numberFormat49);
        java.lang.Object obj51 = numberFormat49.clone();
        fractionFormat32.setNumeratorFormat(numberFormat49);
        java.lang.Object obj53 = numberFormat49.clone();
        java.lang.Object obj54 = numberFormat49.clone();
        fractionFormat27.setDenominatorFormat(numberFormat49);
        org.apache.commons.math.fraction.FractionFormat fractionFormat56 = new org.apache.commons.math.fraction.FractionFormat(numberFormat49);
        fractionFormat26.setNumeratorFormat(numberFormat49);
        org.apache.commons.math.fraction.FractionFormat fractionFormat58 = new org.apache.commons.math.fraction.FractionFormat(numberFormat25, numberFormat49);
        java.lang.StringBuffer stringBuffer59 = null;
        java.text.FieldPosition fieldPosition60 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer61 = fractionFormat24.format((java.lang.Object) numberFormat49, stringBuffer59, fieldPosition60);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot format given object as a fraction");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(fractionFormat6);
        org.junit.Assert.assertNotNull(obj8);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertNotNull(numberFormat11);
        org.junit.Assert.assertNotNull(fractionFormat12);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertNotNull(numberFormat15);
        org.junit.Assert.assertNotNull(fractionFormat17);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertNotNull(numberFormat22);
        org.junit.Assert.assertNotNull(fractionFormat26);
        org.junit.Assert.assertNotNull(fractionFormat27);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertNotNull(fractionFormat32);
        org.junit.Assert.assertNotNull(fractionFormat33);
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertNotNull(numberFormat38);
        org.junit.Assert.assertNotNull(fractionFormat39);
        org.junit.Assert.assertNotNull(obj41);
        org.junit.Assert.assertNotNull(numberFormat42);
        org.junit.Assert.assertNotNull(fractionFormat44);
        org.junit.Assert.assertNotNull(obj46);
        org.junit.Assert.assertNotNull(obj48);
        org.junit.Assert.assertNotNull(numberFormat49);
        org.junit.Assert.assertNotNull(obj51);
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertNotNull(obj54);
    }

    @Test
    public void test0352() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0352");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat3 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat4 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj6 = fractionFormat4.parseObject("0 / 1");
        java.lang.Object obj8 = fractionFormat4.parseObject("0 / 1");
        java.text.NumberFormat numberFormat9 = fractionFormat4.getNumeratorFormat();
        java.text.NumberFormat numberFormat10 = fractionFormat4.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator13 = fractionFormat11.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat14 = fractionFormat11.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat15 = new org.apache.commons.math.fraction.FractionFormat(numberFormat10, numberFormat14);
        fractionFormat0.setNumeratorFormat(numberFormat14);
        java.lang.Object obj17 = fractionFormat0.clone();
        java.lang.Object obj19 = fractionFormat0.parseObject("0 / 1");
        org.apache.commons.math.fraction.FractionFormat fractionFormat20 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj22 = fractionFormat20.parseObject("0 / 1");
        java.lang.Object obj24 = fractionFormat20.parseObject("0 / 1");
        java.text.NumberFormat numberFormat25 = fractionFormat20.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat26 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj28 = fractionFormat26.parseObject("0 / 1");
        java.text.NumberFormat numberFormat29 = fractionFormat26.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat30 = new org.apache.commons.math.fraction.FractionFormat(numberFormat25, numberFormat29);
        org.apache.commons.math.fraction.FractionFormat fractionFormat31 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj33 = fractionFormat31.parseObject("0 / 1");
        java.lang.Object obj35 = fractionFormat31.parseObject("0 / 1");
        java.text.NumberFormat numberFormat36 = fractionFormat31.getNumeratorFormat();
        fractionFormat30.setDenominatorFormat(numberFormat36);
        fractionFormat0.setDenominatorFormat(numberFormat36);
        java.text.ParsePosition parsePosition40 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj41 = fractionFormat0.parseObject("10 / 1", parsePosition40);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(numberFormat3);
        org.junit.Assert.assertNotNull(fractionFormat4);
        org.junit.Assert.assertNotNull(obj6);
        org.junit.Assert.assertNotNull(obj8);
        org.junit.Assert.assertNotNull(numberFormat9);
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertNotNull(fractionFormat11);
        org.junit.Assert.assertNotNull(attributedCharacterIterator13);
        org.junit.Assert.assertNotNull(numberFormat14);
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(fractionFormat20);
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertNotNull(numberFormat25);
        org.junit.Assert.assertNotNull(fractionFormat26);
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertNotNull(numberFormat29);
        org.junit.Assert.assertNotNull(fractionFormat31);
        org.junit.Assert.assertNotNull(obj33);
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertNotNull(numberFormat36);
    }

    @Test
    public void test0353() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0353");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.text.NumberFormat numberFormat3 = fractionFormat2.getDenominatorFormat();
        java.text.NumberFormat numberFormat4 = fractionFormat2.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator7 = fractionFormat5.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat8 = fractionFormat5.getDenominatorFormat();
        fractionFormat2.setNumeratorFormat(numberFormat8);
        org.apache.commons.math.fraction.FractionFormat fractionFormat10 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj12 = fractionFormat10.parseObject("0 / 1");
        java.lang.Object obj14 = fractionFormat10.parseObject("0 / 1");
        java.text.NumberFormat numberFormat15 = fractionFormat10.getNumeratorFormat();
        fractionFormat2.setDenominatorFormat(numberFormat15);
        org.apache.commons.math.fraction.FractionFormat fractionFormat17 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat18 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj20 = fractionFormat18.parseObject("0 / 1");
        java.lang.Object obj22 = fractionFormat18.parseObject("0 / 1");
        java.text.NumberFormat numberFormat23 = fractionFormat18.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat24 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj26 = fractionFormat24.parseObject("0 / 1");
        java.text.NumberFormat numberFormat27 = fractionFormat24.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat28 = new org.apache.commons.math.fraction.FractionFormat(numberFormat23, numberFormat27);
        org.apache.commons.math.fraction.FractionFormat fractionFormat29 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj31 = fractionFormat29.parseObject("0 / 1");
        java.lang.Object obj33 = fractionFormat29.parseObject("0 / 1");
        java.text.NumberFormat numberFormat34 = fractionFormat29.getNumeratorFormat();
        fractionFormat28.setDenominatorFormat(numberFormat34);
        java.lang.Object obj36 = numberFormat34.clone();
        fractionFormat17.setNumeratorFormat(numberFormat34);
        fractionFormat2.setDenominatorFormat(numberFormat34);
        org.apache.commons.math.fraction.Fraction fraction40 = fractionFormat2.parse("10");
        java.text.ParsePosition parsePosition42 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.fraction.Fraction fraction43 = fractionFormat2.parse("hi!", parsePosition42);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(numberFormat3);
        org.junit.Assert.assertNull(numberFormat4);
        org.junit.Assert.assertNotNull(fractionFormat5);
        org.junit.Assert.assertNotNull(attributedCharacterIterator7);
        org.junit.Assert.assertNotNull(numberFormat8);
        org.junit.Assert.assertNotNull(fractionFormat10);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertNotNull(numberFormat15);
        org.junit.Assert.assertNotNull(fractionFormat17);
        org.junit.Assert.assertNotNull(fractionFormat18);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertNotNull(numberFormat23);
        org.junit.Assert.assertNotNull(fractionFormat24);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertNotNull(numberFormat27);
        org.junit.Assert.assertNotNull(fractionFormat29);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertNotNull(obj33);
        org.junit.Assert.assertNotNull(numberFormat34);
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertNotNull(fraction40);
    }

    @Test
    public void test0354() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0354");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.text.NumberFormat numberFormat3 = fractionFormat2.getDenominatorFormat();
        java.text.NumberFormat numberFormat4 = fractionFormat2.getNumeratorFormat();
        java.text.NumberFormat numberFormat5 = fractionFormat2.getNumeratorFormat();
        java.text.NumberFormat numberFormat6 = fractionFormat2.getDenominatorFormat();
        java.lang.Object obj7 = fractionFormat2.clone();
        java.text.ParsePosition parsePosition9 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj10 = fractionFormat2.parseObject("0 / 1", parsePosition9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(numberFormat3);
        org.junit.Assert.assertNull(numberFormat4);
        org.junit.Assert.assertNull(numberFormat5);
        org.junit.Assert.assertNull(numberFormat6);
        org.junit.Assert.assertNotNull(obj7);
    }

    @Test
    public void test0355() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0355");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.lang.Object obj3 = fractionFormat2.clone();
        java.text.NumberFormat numberFormat4 = null;
        java.text.NumberFormat numberFormat5 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat6 = new org.apache.commons.math.fraction.FractionFormat(numberFormat4, numberFormat5);
        java.text.NumberFormat numberFormat7 = fractionFormat6.getDenominatorFormat();
        java.text.NumberFormat numberFormat8 = fractionFormat6.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat9 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator11 = fractionFormat9.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat12 = fractionFormat9.getDenominatorFormat();
        fractionFormat6.setNumeratorFormat(numberFormat12);
        java.lang.Object obj14 = numberFormat12.clone();
        java.lang.String str16 = numberFormat12.format((java.lang.Object) (short) 10);
        org.apache.commons.math.fraction.FractionFormat fractionFormat17 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator19 = fractionFormat17.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat20 = fractionFormat17.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat21 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator23 = fractionFormat21.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat24 = fractionFormat21.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat25 = new org.apache.commons.math.fraction.FractionFormat(numberFormat20, numberFormat24);
        org.apache.commons.math.fraction.FractionFormat fractionFormat26 = new org.apache.commons.math.fraction.FractionFormat(numberFormat12, numberFormat20);
        fractionFormat2.setDenominatorFormat(numberFormat12);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.fraction.Fraction fraction29 = fractionFormat2.parse("100");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(obj3);
        org.junit.Assert.assertNull(numberFormat7);
        org.junit.Assert.assertNull(numberFormat8);
        org.junit.Assert.assertNotNull(fractionFormat9);
        org.junit.Assert.assertNotNull(attributedCharacterIterator11);
        org.junit.Assert.assertNotNull(numberFormat12);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "10" + "'", str16, "10");
        org.junit.Assert.assertNotNull(fractionFormat17);
        org.junit.Assert.assertNotNull(attributedCharacterIterator19);
        org.junit.Assert.assertNotNull(numberFormat20);
        org.junit.Assert.assertNotNull(fractionFormat21);
        org.junit.Assert.assertNotNull(attributedCharacterIterator23);
        org.junit.Assert.assertNotNull(numberFormat24);
    }

    @Test
    public void test0356() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0356");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.text.NumberFormat numberFormat3 = fractionFormat2.getDenominatorFormat();
        java.text.NumberFormat numberFormat4 = fractionFormat2.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj7 = fractionFormat5.parseObject("0 / 1");
        java.lang.Object obj9 = fractionFormat5.parseObject("0 / 1");
        java.text.NumberFormat numberFormat10 = fractionFormat5.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj13 = fractionFormat11.parseObject("0 / 1");
        java.text.NumberFormat numberFormat14 = fractionFormat11.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat15 = new org.apache.commons.math.fraction.FractionFormat(numberFormat10, numberFormat14);
        java.text.AttributedCharacterIterator attributedCharacterIterator17 = numberFormat10.formatToCharacterIterator((java.lang.Object) (-1));
        fractionFormat2.setDenominatorFormat(numberFormat10);
        java.lang.Object obj19 = numberFormat10.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat20 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj22 = fractionFormat20.parseObject("0 / 1");
        java.lang.Object obj24 = fractionFormat20.parseObject("0 / 1");
        java.text.NumberFormat numberFormat25 = fractionFormat20.getNumeratorFormat();
        java.lang.Object obj26 = numberFormat25.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat27 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj29 = fractionFormat27.parseObject("0 / 1");
        java.lang.Object obj31 = fractionFormat27.parseObject("0 / 1");
        java.text.NumberFormat numberFormat32 = fractionFormat27.getNumeratorFormat();
        java.text.NumberFormat numberFormat33 = fractionFormat27.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat34 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator36 = fractionFormat34.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat37 = fractionFormat34.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat38 = new org.apache.commons.math.fraction.FractionFormat(numberFormat33, numberFormat37);
        org.apache.commons.math.fraction.FractionFormat fractionFormat39 = new org.apache.commons.math.fraction.FractionFormat(numberFormat25, numberFormat37);
        org.apache.commons.math.fraction.FractionFormat fractionFormat40 = new org.apache.commons.math.fraction.FractionFormat(numberFormat10, numberFormat25);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj42 = numberFormat10.parseObject("");
            org.junit.Assert.fail("Expected exception of type java.text.ParseException; message: Format.parseObject(String) failed");
        } catch (java.text.ParseException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(numberFormat3);
        org.junit.Assert.assertNull(numberFormat4);
        org.junit.Assert.assertNotNull(fractionFormat5);
        org.junit.Assert.assertNotNull(obj7);
        org.junit.Assert.assertNotNull(obj9);
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertNotNull(fractionFormat11);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertNotNull(numberFormat14);
        org.junit.Assert.assertNotNull(attributedCharacterIterator17);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(fractionFormat20);
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertNotNull(numberFormat25);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertNotNull(fractionFormat27);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertNotNull(numberFormat32);
        org.junit.Assert.assertNotNull(numberFormat33);
        org.junit.Assert.assertNotNull(fractionFormat34);
        org.junit.Assert.assertNotNull(attributedCharacterIterator36);
        org.junit.Assert.assertNotNull(numberFormat37);
    }

    @Test
    public void test0357() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0357");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.text.NumberFormat numberFormat3 = fractionFormat2.getDenominatorFormat();
        java.text.NumberFormat numberFormat4 = fractionFormat2.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator7 = fractionFormat5.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat8 = fractionFormat5.getDenominatorFormat();
        fractionFormat2.setNumeratorFormat(numberFormat8);
        java.lang.Object obj10 = numberFormat8.clone();
        java.lang.String str12 = numberFormat8.format((java.lang.Object) (short) 10);
        java.text.NumberFormat numberFormat13 = null;
        java.text.NumberFormat numberFormat14 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat15 = new org.apache.commons.math.fraction.FractionFormat(numberFormat13, numberFormat14);
        java.text.NumberFormat numberFormat16 = fractionFormat15.getDenominatorFormat();
        java.text.NumberFormat numberFormat17 = fractionFormat15.getNumeratorFormat();
        java.text.NumberFormat numberFormat18 = fractionFormat15.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat19 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator21 = fractionFormat19.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat22 = fractionFormat19.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat23 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator25 = fractionFormat23.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat26 = fractionFormat23.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat27 = new org.apache.commons.math.fraction.FractionFormat(numberFormat22, numberFormat26);
        fractionFormat15.setNumeratorFormat(numberFormat22);
        org.apache.commons.math.fraction.FractionFormat fractionFormat29 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj31 = fractionFormat29.parseObject("0 / 1");
        java.text.NumberFormat numberFormat32 = fractionFormat29.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat33 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator35 = fractionFormat33.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat36 = fractionFormat33.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat37 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator39 = fractionFormat37.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat40 = fractionFormat37.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat41 = new org.apache.commons.math.fraction.FractionFormat(numberFormat36, numberFormat40);
        org.apache.commons.math.fraction.FractionFormat fractionFormat42 = new org.apache.commons.math.fraction.FractionFormat(numberFormat32, numberFormat36);
        org.apache.commons.math.fraction.FractionFormat fractionFormat43 = new org.apache.commons.math.fraction.FractionFormat(numberFormat22, numberFormat32);
        org.apache.commons.math.fraction.FractionFormat fractionFormat44 = new org.apache.commons.math.fraction.FractionFormat(numberFormat8, numberFormat32);
        org.apache.commons.math.fraction.FractionFormat fractionFormat45 = new org.apache.commons.math.fraction.FractionFormat(numberFormat8);
        org.apache.commons.math.fraction.Fraction fraction47 = fractionFormat45.parse("100");
        org.apache.commons.math.fraction.FractionFormat fractionFormat48 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj50 = fractionFormat48.parseObject("0 / 1");
        java.text.NumberFormat numberFormat51 = fractionFormat48.getNumeratorFormat();
        java.text.NumberFormat numberFormat52 = fractionFormat48.getNumeratorFormat();
        fractionFormat45.setDenominatorFormat(numberFormat52);
        org.apache.commons.math.fraction.FractionFormat fractionFormat54 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj56 = fractionFormat54.parseObject("0 / 1");
        java.lang.Object obj58 = fractionFormat54.parseObject("0 / 1");
        java.lang.StringBuffer stringBuffer59 = null;
        java.text.FieldPosition fieldPosition60 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer61 = fractionFormat45.format(obj58, stringBuffer59, fieldPosition60);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(numberFormat3);
        org.junit.Assert.assertNull(numberFormat4);
        org.junit.Assert.assertNotNull(fractionFormat5);
        org.junit.Assert.assertNotNull(attributedCharacterIterator7);
        org.junit.Assert.assertNotNull(numberFormat8);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "10" + "'", str12, "10");
        org.junit.Assert.assertNull(numberFormat16);
        org.junit.Assert.assertNull(numberFormat17);
        org.junit.Assert.assertNull(numberFormat18);
        org.junit.Assert.assertNotNull(fractionFormat19);
        org.junit.Assert.assertNotNull(attributedCharacterIterator21);
        org.junit.Assert.assertNotNull(numberFormat22);
        org.junit.Assert.assertNotNull(fractionFormat23);
        org.junit.Assert.assertNotNull(attributedCharacterIterator25);
        org.junit.Assert.assertNotNull(numberFormat26);
        org.junit.Assert.assertNotNull(fractionFormat29);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertNotNull(numberFormat32);
        org.junit.Assert.assertNotNull(fractionFormat33);
        org.junit.Assert.assertNotNull(attributedCharacterIterator35);
        org.junit.Assert.assertNotNull(numberFormat36);
        org.junit.Assert.assertNotNull(fractionFormat37);
        org.junit.Assert.assertNotNull(attributedCharacterIterator39);
        org.junit.Assert.assertNotNull(numberFormat40);
        org.junit.Assert.assertNotNull(fraction47);
        org.junit.Assert.assertNotNull(fractionFormat48);
        org.junit.Assert.assertNotNull(obj50);
        org.junit.Assert.assertNotNull(numberFormat51);
        org.junit.Assert.assertNotNull(numberFormat52);
        org.junit.Assert.assertNotNull(fractionFormat54);
        org.junit.Assert.assertNotNull(obj56);
        org.junit.Assert.assertNotNull(obj58);
    }

    @Test
    public void test0358() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0358");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.text.NumberFormat numberFormat3 = fractionFormat2.getDenominatorFormat();
        java.text.NumberFormat numberFormat4 = fractionFormat2.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator7 = fractionFormat5.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat8 = fractionFormat5.getDenominatorFormat();
        fractionFormat2.setNumeratorFormat(numberFormat8);
        java.text.NumberFormat numberFormat10 = null;
        java.text.NumberFormat numberFormat11 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat12 = new org.apache.commons.math.fraction.FractionFormat(numberFormat10, numberFormat11);
        java.text.NumberFormat numberFormat13 = fractionFormat12.getNumeratorFormat();
        java.text.NumberFormat numberFormat14 = fractionFormat12.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat15 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj17 = fractionFormat15.parseObject("0 / 1");
        java.lang.Object obj19 = fractionFormat15.parseObject("0 / 1");
        java.text.NumberFormat numberFormat20 = fractionFormat15.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat21 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj23 = fractionFormat21.parseObject("0 / 1");
        java.text.NumberFormat numberFormat24 = fractionFormat21.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat25 = new org.apache.commons.math.fraction.FractionFormat(numberFormat20, numberFormat24);
        fractionFormat12.setNumeratorFormat(numberFormat20);
        fractionFormat2.setDenominatorFormat(numberFormat20);
        java.text.NumberFormat numberFormat28 = fractionFormat2.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat29 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat30 = fractionFormat29.getNumeratorFormat();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str31 = numberFormat28.format((java.lang.Object) fractionFormat29);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot format given Object as a Number");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(numberFormat3);
        org.junit.Assert.assertNull(numberFormat4);
        org.junit.Assert.assertNotNull(fractionFormat5);
        org.junit.Assert.assertNotNull(attributedCharacterIterator7);
        org.junit.Assert.assertNotNull(numberFormat8);
        org.junit.Assert.assertNull(numberFormat13);
        org.junit.Assert.assertNull(numberFormat14);
        org.junit.Assert.assertNotNull(fractionFormat15);
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(numberFormat20);
        org.junit.Assert.assertNotNull(fractionFormat21);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertNotNull(numberFormat24);
        org.junit.Assert.assertNotNull(numberFormat28);
        org.junit.Assert.assertNotNull(fractionFormat29);
        org.junit.Assert.assertNotNull(numberFormat30);
    }

    @Test
    public void test0359() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0359");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.text.NumberFormat numberFormat3 = fractionFormat2.getDenominatorFormat();
        java.text.NumberFormat numberFormat4 = fractionFormat2.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator7 = fractionFormat5.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat8 = fractionFormat5.getDenominatorFormat();
        fractionFormat2.setNumeratorFormat(numberFormat8);
        org.apache.commons.math.fraction.FractionFormat fractionFormat10 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj12 = fractionFormat10.parseObject("0 / 1");
        java.text.NumberFormat numberFormat13 = fractionFormat10.getNumeratorFormat();
        fractionFormat2.setNumeratorFormat(numberFormat13);
        java.text.NumberFormat numberFormat15 = fractionFormat2.getNumeratorFormat();
        java.text.NumberFormat numberFormat16 = null;
        java.text.NumberFormat numberFormat17 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat18 = new org.apache.commons.math.fraction.FractionFormat(numberFormat16, numberFormat17);
        java.text.NumberFormat numberFormat19 = fractionFormat18.getDenominatorFormat();
        java.text.NumberFormat numberFormat20 = fractionFormat18.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat21 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator23 = fractionFormat21.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat24 = fractionFormat21.getDenominatorFormat();
        fractionFormat18.setNumeratorFormat(numberFormat24);
        java.lang.Object obj26 = numberFormat24.clone();
        java.lang.String str28 = numberFormat24.format((java.lang.Object) (short) 10);
        java.text.NumberFormat numberFormat29 = null;
        java.text.NumberFormat numberFormat30 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat31 = new org.apache.commons.math.fraction.FractionFormat(numberFormat29, numberFormat30);
        java.text.NumberFormat numberFormat32 = fractionFormat31.getDenominatorFormat();
        java.text.NumberFormat numberFormat33 = fractionFormat31.getNumeratorFormat();
        java.text.NumberFormat numberFormat34 = fractionFormat31.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat35 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator37 = fractionFormat35.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat38 = fractionFormat35.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat39 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator41 = fractionFormat39.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat42 = fractionFormat39.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat43 = new org.apache.commons.math.fraction.FractionFormat(numberFormat38, numberFormat42);
        fractionFormat31.setNumeratorFormat(numberFormat38);
        org.apache.commons.math.fraction.FractionFormat fractionFormat45 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj47 = fractionFormat45.parseObject("0 / 1");
        java.text.NumberFormat numberFormat48 = fractionFormat45.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat49 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator51 = fractionFormat49.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat52 = fractionFormat49.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat53 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator55 = fractionFormat53.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat56 = fractionFormat53.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat57 = new org.apache.commons.math.fraction.FractionFormat(numberFormat52, numberFormat56);
        org.apache.commons.math.fraction.FractionFormat fractionFormat58 = new org.apache.commons.math.fraction.FractionFormat(numberFormat48, numberFormat52);
        org.apache.commons.math.fraction.FractionFormat fractionFormat59 = new org.apache.commons.math.fraction.FractionFormat(numberFormat38, numberFormat48);
        org.apache.commons.math.fraction.FractionFormat fractionFormat60 = new org.apache.commons.math.fraction.FractionFormat(numberFormat24, numberFormat48);
        org.apache.commons.math.fraction.FractionFormat fractionFormat61 = new org.apache.commons.math.fraction.FractionFormat(numberFormat24);
        org.apache.commons.math.fraction.Fraction fraction63 = fractionFormat61.parse("100");
        java.lang.StringBuffer stringBuffer64 = null;
        java.text.FieldPosition fieldPosition65 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer66 = fractionFormat2.format((java.lang.Object) fraction63, stringBuffer64, fieldPosition65);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(numberFormat3);
        org.junit.Assert.assertNull(numberFormat4);
        org.junit.Assert.assertNotNull(fractionFormat5);
        org.junit.Assert.assertNotNull(attributedCharacterIterator7);
        org.junit.Assert.assertNotNull(numberFormat8);
        org.junit.Assert.assertNotNull(fractionFormat10);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertNotNull(numberFormat13);
        org.junit.Assert.assertNotNull(numberFormat15);
        org.junit.Assert.assertNull(numberFormat19);
        org.junit.Assert.assertNull(numberFormat20);
        org.junit.Assert.assertNotNull(fractionFormat21);
        org.junit.Assert.assertNotNull(attributedCharacterIterator23);
        org.junit.Assert.assertNotNull(numberFormat24);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "10" + "'", str28, "10");
        org.junit.Assert.assertNull(numberFormat32);
        org.junit.Assert.assertNull(numberFormat33);
        org.junit.Assert.assertNull(numberFormat34);
        org.junit.Assert.assertNotNull(fractionFormat35);
        org.junit.Assert.assertNotNull(attributedCharacterIterator37);
        org.junit.Assert.assertNotNull(numberFormat38);
        org.junit.Assert.assertNotNull(fractionFormat39);
        org.junit.Assert.assertNotNull(attributedCharacterIterator41);
        org.junit.Assert.assertNotNull(numberFormat42);
        org.junit.Assert.assertNotNull(fractionFormat45);
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertNotNull(numberFormat48);
        org.junit.Assert.assertNotNull(fractionFormat49);
        org.junit.Assert.assertNotNull(attributedCharacterIterator51);
        org.junit.Assert.assertNotNull(numberFormat52);
        org.junit.Assert.assertNotNull(fractionFormat53);
        org.junit.Assert.assertNotNull(attributedCharacterIterator55);
        org.junit.Assert.assertNotNull(numberFormat56);
        org.junit.Assert.assertNotNull(fraction63);
    }

    @Test
    public void test0360() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0360");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj6 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat7 = null;
        java.text.NumberFormat numberFormat8 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat9 = new org.apache.commons.math.fraction.FractionFormat(numberFormat7, numberFormat8);
        java.text.NumberFormat numberFormat10 = fractionFormat9.getDenominatorFormat();
        java.text.NumberFormat numberFormat11 = fractionFormat9.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat12 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator14 = fractionFormat12.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat15 = fractionFormat12.getDenominatorFormat();
        fractionFormat9.setNumeratorFormat(numberFormat15);
        org.apache.commons.math.fraction.FractionFormat fractionFormat17 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj19 = fractionFormat17.parseObject("0 / 1");
        java.text.NumberFormat numberFormat20 = fractionFormat17.getNumeratorFormat();
        fractionFormat9.setNumeratorFormat(numberFormat20);
        java.lang.Object obj23 = numberFormat20.parseObject("0 / 1");
        fractionFormat0.setNumeratorFormat(numberFormat20);
        java.text.NumberFormat numberFormat25 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat26 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator28 = fractionFormat26.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat29 = fractionFormat26.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat30 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator32 = fractionFormat30.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat33 = fractionFormat30.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat34 = new org.apache.commons.math.fraction.FractionFormat(numberFormat29, numberFormat33);
        org.apache.commons.math.fraction.FractionFormat fractionFormat35 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj37 = fractionFormat35.parseObject("0 / 1");
        java.lang.Object obj39 = fractionFormat35.parseObject("0 / 1");
        java.text.NumberFormat numberFormat40 = fractionFormat35.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat41 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj43 = fractionFormat41.parseObject("0 / 1");
        java.text.NumberFormat numberFormat44 = fractionFormat41.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat45 = new org.apache.commons.math.fraction.FractionFormat(numberFormat40, numberFormat44);
        java.text.NumberFormat numberFormat46 = fractionFormat45.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat47 = new org.apache.commons.math.fraction.FractionFormat(numberFormat29, numberFormat46);
        org.apache.commons.math.fraction.FractionFormat fractionFormat48 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj50 = fractionFormat48.parseObject("0 / 1");
        java.lang.Object obj52 = fractionFormat48.parseObject("0 / 1");
        java.text.NumberFormat numberFormat53 = fractionFormat48.getNumeratorFormat();
        java.text.NumberFormat numberFormat54 = fractionFormat48.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat55 = new org.apache.commons.math.fraction.FractionFormat(numberFormat54);
        org.apache.commons.math.fraction.FractionFormat fractionFormat56 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj58 = fractionFormat56.parseObject("0 / 1");
        java.lang.Object obj60 = fractionFormat56.parseObject("0 / 1");
        java.text.NumberFormat numberFormat61 = fractionFormat56.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat62 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj64 = fractionFormat62.parseObject("0 / 1");
        java.text.NumberFormat numberFormat65 = fractionFormat62.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat66 = new org.apache.commons.math.fraction.FractionFormat(numberFormat61, numberFormat65);
        org.apache.commons.math.fraction.FractionFormat fractionFormat67 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj69 = fractionFormat67.parseObject("0 / 1");
        java.lang.Object obj71 = fractionFormat67.parseObject("0 / 1");
        java.text.NumberFormat numberFormat72 = fractionFormat67.getNumeratorFormat();
        fractionFormat66.setDenominatorFormat(numberFormat72);
        org.apache.commons.math.fraction.FractionFormat fractionFormat74 = new org.apache.commons.math.fraction.FractionFormat(numberFormat54, numberFormat72);
        fractionFormat47.setNumeratorFormat(numberFormat54);
        // The following exception was thrown during execution in test generation
        try {
            java.text.AttributedCharacterIterator attributedCharacterIterator76 = numberFormat25.formatToCharacterIterator((java.lang.Object) numberFormat54);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot format given Object as a Number");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(obj6);
        org.junit.Assert.assertNull(numberFormat10);
        org.junit.Assert.assertNull(numberFormat11);
        org.junit.Assert.assertNotNull(fractionFormat12);
        org.junit.Assert.assertNotNull(attributedCharacterIterator14);
        org.junit.Assert.assertNotNull(numberFormat15);
        org.junit.Assert.assertNotNull(fractionFormat17);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(numberFormat20);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + 0L + "'", obj23, 0L);
        org.junit.Assert.assertNotNull(numberFormat25);
        org.junit.Assert.assertNotNull(fractionFormat26);
        org.junit.Assert.assertNotNull(attributedCharacterIterator28);
        org.junit.Assert.assertNotNull(numberFormat29);
        org.junit.Assert.assertNotNull(fractionFormat30);
        org.junit.Assert.assertNotNull(attributedCharacterIterator32);
        org.junit.Assert.assertNotNull(numberFormat33);
        org.junit.Assert.assertNotNull(fractionFormat35);
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertNotNull(obj39);
        org.junit.Assert.assertNotNull(numberFormat40);
        org.junit.Assert.assertNotNull(fractionFormat41);
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertNotNull(numberFormat44);
        org.junit.Assert.assertNotNull(numberFormat46);
        org.junit.Assert.assertNotNull(fractionFormat48);
        org.junit.Assert.assertNotNull(obj50);
        org.junit.Assert.assertNotNull(obj52);
        org.junit.Assert.assertNotNull(numberFormat53);
        org.junit.Assert.assertNotNull(numberFormat54);
        org.junit.Assert.assertNotNull(fractionFormat56);
        org.junit.Assert.assertNotNull(obj58);
        org.junit.Assert.assertNotNull(obj60);
        org.junit.Assert.assertNotNull(numberFormat61);
        org.junit.Assert.assertNotNull(fractionFormat62);
        org.junit.Assert.assertNotNull(obj64);
        org.junit.Assert.assertNotNull(numberFormat65);
        org.junit.Assert.assertNotNull(fractionFormat67);
        org.junit.Assert.assertNotNull(obj69);
        org.junit.Assert.assertNotNull(obj71);
        org.junit.Assert.assertNotNull(numberFormat72);
    }

    @Test
    public void test0361() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0361");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.text.NumberFormat numberFormat3 = fractionFormat2.getDenominatorFormat();
        java.text.NumberFormat numberFormat4 = fractionFormat2.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator7 = fractionFormat5.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat8 = fractionFormat5.getDenominatorFormat();
        fractionFormat2.setNumeratorFormat(numberFormat8);
        java.lang.Object obj10 = numberFormat8.clone();
        java.lang.String str12 = numberFormat8.format((java.lang.Object) (short) 10);
        java.text.NumberFormat numberFormat13 = null;
        java.text.NumberFormat numberFormat14 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat15 = new org.apache.commons.math.fraction.FractionFormat(numberFormat13, numberFormat14);
        java.text.NumberFormat numberFormat16 = fractionFormat15.getDenominatorFormat();
        java.text.NumberFormat numberFormat17 = fractionFormat15.getNumeratorFormat();
        java.text.NumberFormat numberFormat18 = fractionFormat15.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat19 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator21 = fractionFormat19.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat22 = fractionFormat19.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat23 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator25 = fractionFormat23.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat26 = fractionFormat23.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat27 = new org.apache.commons.math.fraction.FractionFormat(numberFormat22, numberFormat26);
        fractionFormat15.setNumeratorFormat(numberFormat22);
        org.apache.commons.math.fraction.FractionFormat fractionFormat29 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj31 = fractionFormat29.parseObject("0 / 1");
        java.text.NumberFormat numberFormat32 = fractionFormat29.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat33 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator35 = fractionFormat33.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat36 = fractionFormat33.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat37 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator39 = fractionFormat37.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat40 = fractionFormat37.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat41 = new org.apache.commons.math.fraction.FractionFormat(numberFormat36, numberFormat40);
        org.apache.commons.math.fraction.FractionFormat fractionFormat42 = new org.apache.commons.math.fraction.FractionFormat(numberFormat32, numberFormat36);
        org.apache.commons.math.fraction.FractionFormat fractionFormat43 = new org.apache.commons.math.fraction.FractionFormat(numberFormat22, numberFormat32);
        org.apache.commons.math.fraction.FractionFormat fractionFormat44 = new org.apache.commons.math.fraction.FractionFormat(numberFormat8, numberFormat32);
        java.lang.Object obj45 = fractionFormat44.clone();
        java.text.NumberFormat numberFormat46 = fractionFormat44.getDenominatorFormat();
        java.text.ParsePosition parsePosition48 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj49 = fractionFormat44.parseObject("", parsePosition48);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(numberFormat3);
        org.junit.Assert.assertNull(numberFormat4);
        org.junit.Assert.assertNotNull(fractionFormat5);
        org.junit.Assert.assertNotNull(attributedCharacterIterator7);
        org.junit.Assert.assertNotNull(numberFormat8);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "10" + "'", str12, "10");
        org.junit.Assert.assertNull(numberFormat16);
        org.junit.Assert.assertNull(numberFormat17);
        org.junit.Assert.assertNull(numberFormat18);
        org.junit.Assert.assertNotNull(fractionFormat19);
        org.junit.Assert.assertNotNull(attributedCharacterIterator21);
        org.junit.Assert.assertNotNull(numberFormat22);
        org.junit.Assert.assertNotNull(fractionFormat23);
        org.junit.Assert.assertNotNull(attributedCharacterIterator25);
        org.junit.Assert.assertNotNull(numberFormat26);
        org.junit.Assert.assertNotNull(fractionFormat29);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertNotNull(numberFormat32);
        org.junit.Assert.assertNotNull(fractionFormat33);
        org.junit.Assert.assertNotNull(attributedCharacterIterator35);
        org.junit.Assert.assertNotNull(numberFormat36);
        org.junit.Assert.assertNotNull(fractionFormat37);
        org.junit.Assert.assertNotNull(attributedCharacterIterator39);
        org.junit.Assert.assertNotNull(numberFormat40);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertNotNull(numberFormat46);
    }

    @Test
    public void test0362() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0362");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.text.NumberFormat numberFormat3 = fractionFormat2.getDenominatorFormat();
        java.text.NumberFormat numberFormat4 = fractionFormat2.getNumeratorFormat();
        java.text.NumberFormat numberFormat5 = fractionFormat2.getNumeratorFormat();
        java.text.NumberFormat numberFormat6 = fractionFormat2.getDenominatorFormat();
        java.lang.Object obj7 = fractionFormat2.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat8 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj10 = fractionFormat8.parseObject("0 / 1");
        java.lang.Object obj12 = fractionFormat8.parseObject("0 / 1");
        java.text.NumberFormat numberFormat13 = fractionFormat8.getNumeratorFormat();
        java.text.NumberFormat numberFormat14 = fractionFormat8.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat15 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator17 = fractionFormat15.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat18 = fractionFormat15.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat19 = new org.apache.commons.math.fraction.FractionFormat(numberFormat14, numberFormat18);
        org.apache.commons.math.fraction.FractionFormat fractionFormat20 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator22 = fractionFormat20.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat23 = fractionFormat20.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat24 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator26 = fractionFormat24.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat27 = fractionFormat24.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat28 = new org.apache.commons.math.fraction.FractionFormat(numberFormat23, numberFormat27);
        org.apache.commons.math.fraction.FractionFormat fractionFormat29 = new org.apache.commons.math.fraction.FractionFormat(numberFormat14, numberFormat27);
        java.text.NumberFormat numberFormat30 = fractionFormat29.getDenominatorFormat();
        fractionFormat2.setDenominatorFormat(numberFormat30);
        org.apache.commons.math.fraction.FractionFormat fractionFormat32 = new org.apache.commons.math.fraction.FractionFormat(numberFormat30);
        java.lang.Class<?> wildcardClass33 = fractionFormat32.getClass();
        org.junit.Assert.assertNull(numberFormat3);
        org.junit.Assert.assertNull(numberFormat4);
        org.junit.Assert.assertNull(numberFormat5);
        org.junit.Assert.assertNull(numberFormat6);
        org.junit.Assert.assertNotNull(obj7);
        org.junit.Assert.assertNotNull(fractionFormat8);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertNotNull(numberFormat13);
        org.junit.Assert.assertNotNull(numberFormat14);
        org.junit.Assert.assertNotNull(fractionFormat15);
        org.junit.Assert.assertNotNull(attributedCharacterIterator17);
        org.junit.Assert.assertNotNull(numberFormat18);
        org.junit.Assert.assertNotNull(fractionFormat20);
        org.junit.Assert.assertNotNull(attributedCharacterIterator22);
        org.junit.Assert.assertNotNull(numberFormat23);
        org.junit.Assert.assertNotNull(fractionFormat24);
        org.junit.Assert.assertNotNull(attributedCharacterIterator26);
        org.junit.Assert.assertNotNull(numberFormat27);
        org.junit.Assert.assertNotNull(numberFormat30);
        org.junit.Assert.assertNotNull(wildcardClass33);
    }

    @Test
    public void test0363() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0363");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = new org.apache.commons.math.fraction.FractionFormat();
        java.text.NumberFormat numberFormat1 = fractionFormat0.getDenominatorFormat();
        java.text.ParsePosition parsePosition3 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.fraction.Fraction fraction4 = fractionFormat0.parse("100", parsePosition3);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(numberFormat1);
    }

    @Test
    public void test0364() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0364");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat5 = fractionFormat0.getNumeratorFormat();
        java.lang.Object obj6 = numberFormat5.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat7 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj9 = fractionFormat7.parseObject("0 / 1");
        java.lang.Object obj11 = fractionFormat7.parseObject("0 / 1");
        java.text.NumberFormat numberFormat12 = fractionFormat7.getNumeratorFormat();
        java.text.NumberFormat numberFormat13 = fractionFormat7.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat14 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator16 = fractionFormat14.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat17 = fractionFormat14.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat18 = new org.apache.commons.math.fraction.FractionFormat(numberFormat13, numberFormat17);
        org.apache.commons.math.fraction.FractionFormat fractionFormat19 = new org.apache.commons.math.fraction.FractionFormat(numberFormat5, numberFormat17);
        java.text.NumberFormat numberFormat20 = fractionFormat19.getNumeratorFormat();
        java.lang.Object obj21 = fractionFormat19.clone();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj23 = fractionFormat19.parseObject("hi!");
            org.junit.Assert.fail("Expected exception of type java.text.ParseException; message: Format.parseObject(String) failed");
        } catch (java.text.ParseException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(obj6);
        org.junit.Assert.assertNotNull(fractionFormat7);
        org.junit.Assert.assertNotNull(obj9);
        org.junit.Assert.assertNotNull(obj11);
        org.junit.Assert.assertNotNull(numberFormat12);
        org.junit.Assert.assertNotNull(numberFormat13);
        org.junit.Assert.assertNotNull(fractionFormat14);
        org.junit.Assert.assertNotNull(attributedCharacterIterator16);
        org.junit.Assert.assertNotNull(numberFormat17);
        org.junit.Assert.assertNotNull(numberFormat20);
        org.junit.Assert.assertNotNull(obj21);
    }

    @Test
    public void test0365() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0365");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat1 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj3 = fractionFormat1.parseObject("0 / 1");
        java.lang.Object obj5 = fractionFormat1.parseObject("0 / 1");
        java.text.NumberFormat numberFormat6 = fractionFormat1.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat7 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj9 = fractionFormat7.parseObject("0 / 1");
        java.text.NumberFormat numberFormat10 = fractionFormat7.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = new org.apache.commons.math.fraction.FractionFormat(numberFormat6, numberFormat10);
        org.apache.commons.math.fraction.FractionFormat fractionFormat12 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj14 = fractionFormat12.parseObject("0 / 1");
        java.lang.Object obj16 = fractionFormat12.parseObject("0 / 1");
        java.text.NumberFormat numberFormat17 = fractionFormat12.getNumeratorFormat();
        fractionFormat11.setDenominatorFormat(numberFormat17);
        java.lang.Object obj19 = numberFormat17.clone();
        fractionFormat0.setNumeratorFormat(numberFormat17);
        java.lang.Object obj21 = numberFormat17.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat22 = new org.apache.commons.math.fraction.FractionFormat(numberFormat17);
        java.text.NumberFormat numberFormat23 = null;
        java.text.NumberFormat numberFormat24 = null;
        java.text.NumberFormat numberFormat25 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat26 = new org.apache.commons.math.fraction.FractionFormat(numberFormat24, numberFormat25);
        java.text.NumberFormat numberFormat27 = fractionFormat26.getDenominatorFormat();
        java.text.NumberFormat numberFormat28 = fractionFormat26.getNumeratorFormat();
        java.text.NumberFormat numberFormat29 = fractionFormat26.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat30 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator32 = fractionFormat30.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat33 = fractionFormat30.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat34 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator36 = fractionFormat34.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat37 = fractionFormat34.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat38 = new org.apache.commons.math.fraction.FractionFormat(numberFormat33, numberFormat37);
        fractionFormat26.setNumeratorFormat(numberFormat33);
        org.apache.commons.math.fraction.FractionFormat fractionFormat40 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj42 = fractionFormat40.parseObject("0 / 1");
        java.text.NumberFormat numberFormat43 = fractionFormat40.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat44 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator46 = fractionFormat44.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat47 = fractionFormat44.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat48 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator50 = fractionFormat48.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat51 = fractionFormat48.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat52 = new org.apache.commons.math.fraction.FractionFormat(numberFormat47, numberFormat51);
        org.apache.commons.math.fraction.FractionFormat fractionFormat53 = new org.apache.commons.math.fraction.FractionFormat(numberFormat43, numberFormat47);
        org.apache.commons.math.fraction.FractionFormat fractionFormat54 = new org.apache.commons.math.fraction.FractionFormat(numberFormat33, numberFormat43);
        org.apache.commons.math.fraction.FractionFormat fractionFormat55 = new org.apache.commons.math.fraction.FractionFormat(numberFormat23, numberFormat33);
        // The following exception was thrown during execution in test generation
        try {
            fractionFormat22.setDenominatorFormat(numberFormat23);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: denominator format can not be null.");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(fractionFormat1);
        org.junit.Assert.assertNotNull(obj3);
        org.junit.Assert.assertNotNull(obj5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertNotNull(fractionFormat7);
        org.junit.Assert.assertNotNull(obj9);
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertNotNull(fractionFormat12);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertNotNull(obj16);
        org.junit.Assert.assertNotNull(numberFormat17);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertNull(numberFormat27);
        org.junit.Assert.assertNull(numberFormat28);
        org.junit.Assert.assertNull(numberFormat29);
        org.junit.Assert.assertNotNull(fractionFormat30);
        org.junit.Assert.assertNotNull(attributedCharacterIterator32);
        org.junit.Assert.assertNotNull(numberFormat33);
        org.junit.Assert.assertNotNull(fractionFormat34);
        org.junit.Assert.assertNotNull(attributedCharacterIterator36);
        org.junit.Assert.assertNotNull(numberFormat37);
        org.junit.Assert.assertNotNull(fractionFormat40);
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertNotNull(numberFormat43);
        org.junit.Assert.assertNotNull(fractionFormat44);
        org.junit.Assert.assertNotNull(attributedCharacterIterator46);
        org.junit.Assert.assertNotNull(numberFormat47);
        org.junit.Assert.assertNotNull(fractionFormat48);
        org.junit.Assert.assertNotNull(attributedCharacterIterator50);
        org.junit.Assert.assertNotNull(numberFormat51);
    }

    @Test
    public void test0366() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0366");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat5 = fractionFormat0.getNumeratorFormat();
        java.lang.Object obj6 = numberFormat5.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat7 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj9 = fractionFormat7.parseObject("0 / 1");
        java.lang.Object obj11 = fractionFormat7.parseObject("0 / 1");
        java.text.NumberFormat numberFormat12 = fractionFormat7.getNumeratorFormat();
        java.text.NumberFormat numberFormat13 = fractionFormat7.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat14 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator16 = fractionFormat14.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat17 = fractionFormat14.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat18 = new org.apache.commons.math.fraction.FractionFormat(numberFormat13, numberFormat17);
        org.apache.commons.math.fraction.FractionFormat fractionFormat19 = new org.apache.commons.math.fraction.FractionFormat(numberFormat5, numberFormat17);
        java.text.NumberFormat numberFormat20 = fractionFormat19.getNumeratorFormat();
        java.text.NumberFormat numberFormat21 = null;
        java.text.NumberFormat numberFormat22 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat23 = new org.apache.commons.math.fraction.FractionFormat(numberFormat21, numberFormat22);
        java.text.NumberFormat numberFormat24 = fractionFormat23.getDenominatorFormat();
        java.text.NumberFormat numberFormat25 = fractionFormat23.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat26 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj28 = fractionFormat26.parseObject("0 / 1");
        java.lang.Object obj30 = fractionFormat26.parseObject("0 / 1");
        java.text.NumberFormat numberFormat31 = fractionFormat26.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat32 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj34 = fractionFormat32.parseObject("0 / 1");
        java.text.NumberFormat numberFormat35 = fractionFormat32.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat36 = new org.apache.commons.math.fraction.FractionFormat(numberFormat31, numberFormat35);
        java.text.AttributedCharacterIterator attributedCharacterIterator38 = numberFormat31.formatToCharacterIterator((java.lang.Object) (-1));
        fractionFormat23.setDenominatorFormat(numberFormat31);
        java.lang.Object obj40 = numberFormat31.clone();
        java.text.NumberFormat numberFormat41 = null;
        java.text.NumberFormat numberFormat42 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat43 = new org.apache.commons.math.fraction.FractionFormat(numberFormat41, numberFormat42);
        java.text.NumberFormat numberFormat44 = fractionFormat43.getDenominatorFormat();
        java.text.NumberFormat numberFormat45 = fractionFormat43.getNumeratorFormat();
        java.text.NumberFormat numberFormat46 = fractionFormat43.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat47 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj49 = fractionFormat47.parseObject("0 / 1");
        java.lang.Object obj51 = fractionFormat47.parseObject("0 / 1");
        java.text.NumberFormat numberFormat52 = fractionFormat47.getNumeratorFormat();
        java.lang.Object obj53 = numberFormat52.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat54 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj56 = fractionFormat54.parseObject("0 / 1");
        java.lang.Object obj58 = fractionFormat54.parseObject("0 / 1");
        java.text.NumberFormat numberFormat59 = fractionFormat54.getNumeratorFormat();
        java.text.NumberFormat numberFormat60 = fractionFormat54.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat61 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator63 = fractionFormat61.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat64 = fractionFormat61.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat65 = new org.apache.commons.math.fraction.FractionFormat(numberFormat60, numberFormat64);
        org.apache.commons.math.fraction.FractionFormat fractionFormat66 = new org.apache.commons.math.fraction.FractionFormat(numberFormat52, numberFormat64);
        fractionFormat43.setNumeratorFormat(numberFormat52);
        org.apache.commons.math.fraction.FractionFormat fractionFormat68 = new org.apache.commons.math.fraction.FractionFormat(numberFormat31, numberFormat52);
        org.apache.commons.math.fraction.FractionFormat fractionFormat69 = new org.apache.commons.math.fraction.FractionFormat(numberFormat20, numberFormat52);
        java.lang.Object obj70 = numberFormat20.clone();
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(obj6);
        org.junit.Assert.assertNotNull(fractionFormat7);
        org.junit.Assert.assertNotNull(obj9);
        org.junit.Assert.assertNotNull(obj11);
        org.junit.Assert.assertNotNull(numberFormat12);
        org.junit.Assert.assertNotNull(numberFormat13);
        org.junit.Assert.assertNotNull(fractionFormat14);
        org.junit.Assert.assertNotNull(attributedCharacterIterator16);
        org.junit.Assert.assertNotNull(numberFormat17);
        org.junit.Assert.assertNotNull(numberFormat20);
        org.junit.Assert.assertNull(numberFormat24);
        org.junit.Assert.assertNull(numberFormat25);
        org.junit.Assert.assertNotNull(fractionFormat26);
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertNotNull(numberFormat31);
        org.junit.Assert.assertNotNull(fractionFormat32);
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertNotNull(numberFormat35);
        org.junit.Assert.assertNotNull(attributedCharacterIterator38);
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertNull(numberFormat44);
        org.junit.Assert.assertNull(numberFormat45);
        org.junit.Assert.assertNull(numberFormat46);
        org.junit.Assert.assertNotNull(fractionFormat47);
        org.junit.Assert.assertNotNull(obj49);
        org.junit.Assert.assertNotNull(obj51);
        org.junit.Assert.assertNotNull(numberFormat52);
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertNotNull(fractionFormat54);
        org.junit.Assert.assertNotNull(obj56);
        org.junit.Assert.assertNotNull(obj58);
        org.junit.Assert.assertNotNull(numberFormat59);
        org.junit.Assert.assertNotNull(numberFormat60);
        org.junit.Assert.assertNotNull(fractionFormat61);
        org.junit.Assert.assertNotNull(attributedCharacterIterator63);
        org.junit.Assert.assertNotNull(numberFormat64);
        org.junit.Assert.assertNotNull(obj70);
    }

    @Test
    public void test0367() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0367");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat1 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.Fraction fraction3 = fractionFormat1.parse("0 / 1");
        java.lang.StringBuffer stringBuffer4 = null;
        java.text.FieldPosition fieldPosition5 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer6 = fractionFormat0.format(fraction3, stringBuffer4, fieldPosition5);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(fractionFormat1);
        org.junit.Assert.assertNotNull(fraction3);
    }

    @Test
    public void test0368() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0368");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = new org.apache.commons.math.fraction.FractionFormat();
        java.lang.String str2 = fractionFormat0.format((java.lang.Object) 0);
        java.lang.String str4 = fractionFormat0.format((java.lang.Object) (-1));
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj7 = fractionFormat5.parseObject("0 / 1");
        java.lang.Object obj9 = fractionFormat5.parseObject("-1 / 1");
        org.apache.commons.math.fraction.FractionFormat fractionFormat10 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj13 = fractionFormat11.parseObject("0 / 1");
        java.lang.Object obj15 = fractionFormat11.parseObject("0 / 1");
        java.text.NumberFormat numberFormat16 = fractionFormat11.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat17 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj19 = fractionFormat17.parseObject("0 / 1");
        java.text.NumberFormat numberFormat20 = fractionFormat17.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat21 = new org.apache.commons.math.fraction.FractionFormat(numberFormat16, numberFormat20);
        org.apache.commons.math.fraction.FractionFormat fractionFormat22 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj24 = fractionFormat22.parseObject("0 / 1");
        java.lang.Object obj26 = fractionFormat22.parseObject("0 / 1");
        java.text.NumberFormat numberFormat27 = fractionFormat22.getNumeratorFormat();
        fractionFormat21.setDenominatorFormat(numberFormat27);
        java.lang.Object obj29 = numberFormat27.clone();
        fractionFormat10.setNumeratorFormat(numberFormat27);
        java.lang.Object obj31 = numberFormat27.clone();
        java.lang.Object obj32 = numberFormat27.clone();
        fractionFormat5.setDenominatorFormat(numberFormat27);
        fractionFormat0.setNumeratorFormat(numberFormat27);
        org.apache.commons.math.fraction.FractionFormat fractionFormat35 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator37 = fractionFormat35.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat38 = fractionFormat35.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat39 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator41 = fractionFormat39.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat42 = fractionFormat39.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat43 = new org.apache.commons.math.fraction.FractionFormat(numberFormat38, numberFormat42);
        org.apache.commons.math.fraction.FractionFormat fractionFormat44 = new org.apache.commons.math.fraction.FractionFormat(numberFormat38);
        java.text.NumberFormat numberFormat45 = fractionFormat44.getNumeratorFormat();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str46 = numberFormat27.format((java.lang.Object) fractionFormat44);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot format given Object as a Number");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "0 / 1" + "'", str2, "0 / 1");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-1 / 1" + "'", str4, "-1 / 1");
        org.junit.Assert.assertNotNull(fractionFormat5);
        org.junit.Assert.assertNotNull(obj7);
        org.junit.Assert.assertNotNull(obj9);
        org.junit.Assert.assertNotNull(fractionFormat10);
        org.junit.Assert.assertNotNull(fractionFormat11);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertNotNull(numberFormat16);
        org.junit.Assert.assertNotNull(fractionFormat17);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(numberFormat20);
        org.junit.Assert.assertNotNull(fractionFormat22);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertNotNull(numberFormat27);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertNotNull(obj32);
        org.junit.Assert.assertNotNull(fractionFormat35);
        org.junit.Assert.assertNotNull(attributedCharacterIterator37);
        org.junit.Assert.assertNotNull(numberFormat38);
        org.junit.Assert.assertNotNull(fractionFormat39);
        org.junit.Assert.assertNotNull(attributedCharacterIterator41);
        org.junit.Assert.assertNotNull(numberFormat42);
        org.junit.Assert.assertNotNull(numberFormat45);
    }

    @Test
    public void test0369() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0369");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.text.NumberFormat numberFormat3 = fractionFormat2.getDenominatorFormat();
        java.text.NumberFormat numberFormat4 = fractionFormat2.getNumeratorFormat();
        java.text.NumberFormat numberFormat5 = fractionFormat2.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat6 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator8 = fractionFormat6.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat9 = fractionFormat6.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat10 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator12 = fractionFormat10.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat13 = fractionFormat10.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat14 = new org.apache.commons.math.fraction.FractionFormat(numberFormat9, numberFormat13);
        fractionFormat2.setNumeratorFormat(numberFormat9);
        org.apache.commons.math.fraction.FractionFormat fractionFormat16 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj18 = fractionFormat16.parseObject("0 / 1");
        java.text.NumberFormat numberFormat19 = fractionFormat16.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat20 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator22 = fractionFormat20.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat23 = fractionFormat20.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat24 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator26 = fractionFormat24.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat27 = fractionFormat24.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat28 = new org.apache.commons.math.fraction.FractionFormat(numberFormat23, numberFormat27);
        org.apache.commons.math.fraction.FractionFormat fractionFormat29 = new org.apache.commons.math.fraction.FractionFormat(numberFormat19, numberFormat23);
        org.apache.commons.math.fraction.FractionFormat fractionFormat30 = new org.apache.commons.math.fraction.FractionFormat(numberFormat9, numberFormat19);
        java.text.ParsePosition parsePosition32 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj33 = fractionFormat30.parseObject("100", parsePosition32);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(numberFormat3);
        org.junit.Assert.assertNull(numberFormat4);
        org.junit.Assert.assertNull(numberFormat5);
        org.junit.Assert.assertNotNull(fractionFormat6);
        org.junit.Assert.assertNotNull(attributedCharacterIterator8);
        org.junit.Assert.assertNotNull(numberFormat9);
        org.junit.Assert.assertNotNull(fractionFormat10);
        org.junit.Assert.assertNotNull(attributedCharacterIterator12);
        org.junit.Assert.assertNotNull(numberFormat13);
        org.junit.Assert.assertNotNull(fractionFormat16);
        org.junit.Assert.assertNotNull(obj18);
        org.junit.Assert.assertNotNull(numberFormat19);
        org.junit.Assert.assertNotNull(fractionFormat20);
        org.junit.Assert.assertNotNull(attributedCharacterIterator22);
        org.junit.Assert.assertNotNull(numberFormat23);
        org.junit.Assert.assertNotNull(fractionFormat24);
        org.junit.Assert.assertNotNull(attributedCharacterIterator26);
        org.junit.Assert.assertNotNull(numberFormat27);
    }

    @Test
    public void test0370() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0370");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat3 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat4 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj6 = fractionFormat4.parseObject("0 / 1");
        java.lang.Object obj8 = fractionFormat4.parseObject("0 / 1");
        java.text.NumberFormat numberFormat9 = fractionFormat4.getNumeratorFormat();
        java.text.NumberFormat numberFormat10 = fractionFormat4.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator13 = fractionFormat11.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat14 = fractionFormat11.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat15 = new org.apache.commons.math.fraction.FractionFormat(numberFormat10, numberFormat14);
        fractionFormat0.setNumeratorFormat(numberFormat14);
        java.lang.Object obj17 = fractionFormat0.clone();
        java.lang.Object obj19 = fractionFormat0.parseObject("0 / 1");
        org.apache.commons.math.fraction.FractionFormat fractionFormat20 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj22 = fractionFormat20.parseObject("0 / 1");
        java.lang.Object obj24 = fractionFormat20.parseObject("0 / 1");
        java.text.NumberFormat numberFormat25 = fractionFormat20.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat26 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj28 = fractionFormat26.parseObject("0 / 1");
        java.text.NumberFormat numberFormat29 = fractionFormat26.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat30 = new org.apache.commons.math.fraction.FractionFormat(numberFormat25, numberFormat29);
        org.apache.commons.math.fraction.FractionFormat fractionFormat31 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj33 = fractionFormat31.parseObject("0 / 1");
        java.lang.Object obj35 = fractionFormat31.parseObject("0 / 1");
        java.text.NumberFormat numberFormat36 = fractionFormat31.getNumeratorFormat();
        fractionFormat30.setDenominatorFormat(numberFormat36);
        fractionFormat0.setDenominatorFormat(numberFormat36);
        org.apache.commons.math.fraction.FractionFormat fractionFormat39 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj41 = fractionFormat39.parseObject("0 / 1");
        java.lang.Object obj43 = fractionFormat39.parseObject("0 / 1");
        java.text.NumberFormat numberFormat44 = fractionFormat39.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat45 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj47 = fractionFormat45.parseObject("0 / 1");
        java.text.NumberFormat numberFormat48 = fractionFormat45.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat49 = new org.apache.commons.math.fraction.FractionFormat(numberFormat44, numberFormat48);
        java.lang.Class<?> wildcardClass50 = numberFormat44.getClass();
        java.lang.StringBuffer stringBuffer51 = null;
        java.text.FieldPosition fieldPosition52 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer53 = fractionFormat0.format((java.lang.Object) numberFormat44, stringBuffer51, fieldPosition52);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot format given object as a fraction");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(numberFormat3);
        org.junit.Assert.assertNotNull(fractionFormat4);
        org.junit.Assert.assertNotNull(obj6);
        org.junit.Assert.assertNotNull(obj8);
        org.junit.Assert.assertNotNull(numberFormat9);
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertNotNull(fractionFormat11);
        org.junit.Assert.assertNotNull(attributedCharacterIterator13);
        org.junit.Assert.assertNotNull(numberFormat14);
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(fractionFormat20);
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertNotNull(numberFormat25);
        org.junit.Assert.assertNotNull(fractionFormat26);
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertNotNull(numberFormat29);
        org.junit.Assert.assertNotNull(fractionFormat31);
        org.junit.Assert.assertNotNull(obj33);
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertNotNull(numberFormat36);
        org.junit.Assert.assertNotNull(fractionFormat39);
        org.junit.Assert.assertNotNull(obj41);
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertNotNull(numberFormat44);
        org.junit.Assert.assertNotNull(fractionFormat45);
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertNotNull(numberFormat48);
        org.junit.Assert.assertNotNull(wildcardClass50);
    }

    @Test
    public void test0371() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0371");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.text.NumberFormat numberFormat3 = fractionFormat2.getDenominatorFormat();
        java.text.NumberFormat numberFormat4 = fractionFormat2.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator7 = fractionFormat5.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat8 = fractionFormat5.getDenominatorFormat();
        fractionFormat2.setNumeratorFormat(numberFormat8);
        org.apache.commons.math.fraction.FractionFormat fractionFormat10 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj12 = fractionFormat10.parseObject("0 / 1");
        java.lang.Object obj14 = fractionFormat10.parseObject("0 / 1");
        java.text.NumberFormat numberFormat15 = fractionFormat10.getNumeratorFormat();
        fractionFormat2.setDenominatorFormat(numberFormat15);
        org.apache.commons.math.fraction.FractionFormat fractionFormat17 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat18 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj20 = fractionFormat18.parseObject("0 / 1");
        java.lang.Object obj22 = fractionFormat18.parseObject("0 / 1");
        java.text.NumberFormat numberFormat23 = fractionFormat18.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat24 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj26 = fractionFormat24.parseObject("0 / 1");
        java.text.NumberFormat numberFormat27 = fractionFormat24.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat28 = new org.apache.commons.math.fraction.FractionFormat(numberFormat23, numberFormat27);
        org.apache.commons.math.fraction.FractionFormat fractionFormat29 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj31 = fractionFormat29.parseObject("0 / 1");
        java.lang.Object obj33 = fractionFormat29.parseObject("0 / 1");
        java.text.NumberFormat numberFormat34 = fractionFormat29.getNumeratorFormat();
        fractionFormat28.setDenominatorFormat(numberFormat34);
        java.lang.Object obj36 = numberFormat34.clone();
        fractionFormat17.setNumeratorFormat(numberFormat34);
        fractionFormat2.setDenominatorFormat(numberFormat34);
        org.apache.commons.math.fraction.Fraction fraction40 = fractionFormat2.parse("-1 / 1");
        java.text.ParsePosition parsePosition42 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.fraction.Fraction fraction43 = fractionFormat2.parse("100", parsePosition42);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(numberFormat3);
        org.junit.Assert.assertNull(numberFormat4);
        org.junit.Assert.assertNotNull(fractionFormat5);
        org.junit.Assert.assertNotNull(attributedCharacterIterator7);
        org.junit.Assert.assertNotNull(numberFormat8);
        org.junit.Assert.assertNotNull(fractionFormat10);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertNotNull(numberFormat15);
        org.junit.Assert.assertNotNull(fractionFormat17);
        org.junit.Assert.assertNotNull(fractionFormat18);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertNotNull(numberFormat23);
        org.junit.Assert.assertNotNull(fractionFormat24);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertNotNull(numberFormat27);
        org.junit.Assert.assertNotNull(fractionFormat29);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertNotNull(obj33);
        org.junit.Assert.assertNotNull(numberFormat34);
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertNotNull(fraction40);
    }

    @Test
    public void test0372() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0372");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat5 = fractionFormat0.getNumeratorFormat();
        java.lang.Object obj6 = numberFormat5.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat7 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj9 = fractionFormat7.parseObject("0 / 1");
        java.lang.Object obj11 = fractionFormat7.parseObject("0 / 1");
        java.text.NumberFormat numberFormat12 = fractionFormat7.getNumeratorFormat();
        java.text.NumberFormat numberFormat13 = fractionFormat7.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat14 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator16 = fractionFormat14.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat17 = fractionFormat14.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat18 = new org.apache.commons.math.fraction.FractionFormat(numberFormat13, numberFormat17);
        org.apache.commons.math.fraction.FractionFormat fractionFormat19 = new org.apache.commons.math.fraction.FractionFormat(numberFormat5, numberFormat17);
        java.text.NumberFormat numberFormat20 = fractionFormat19.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat21 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.Fraction fraction23 = fractionFormat21.parse("0 / 1");
        org.apache.commons.math.fraction.FractionFormat fractionFormat24 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator26 = fractionFormat24.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat27 = fractionFormat24.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat28 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator30 = fractionFormat28.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat31 = fractionFormat28.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat32 = new org.apache.commons.math.fraction.FractionFormat(numberFormat27, numberFormat31);
        java.text.NumberFormat numberFormat33 = fractionFormat32.getDenominatorFormat();
        fractionFormat21.setDenominatorFormat(numberFormat33);
        java.lang.StringBuffer stringBuffer35 = null;
        java.text.FieldPosition fieldPosition36 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer37 = fractionFormat19.format((java.lang.Object) fractionFormat21, stringBuffer35, fieldPosition36);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot format given object as a fraction");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(obj6);
        org.junit.Assert.assertNotNull(fractionFormat7);
        org.junit.Assert.assertNotNull(obj9);
        org.junit.Assert.assertNotNull(obj11);
        org.junit.Assert.assertNotNull(numberFormat12);
        org.junit.Assert.assertNotNull(numberFormat13);
        org.junit.Assert.assertNotNull(fractionFormat14);
        org.junit.Assert.assertNotNull(attributedCharacterIterator16);
        org.junit.Assert.assertNotNull(numberFormat17);
        org.junit.Assert.assertNotNull(numberFormat20);
        org.junit.Assert.assertNotNull(fractionFormat21);
        org.junit.Assert.assertNotNull(fraction23);
        org.junit.Assert.assertNotNull(fractionFormat24);
        org.junit.Assert.assertNotNull(attributedCharacterIterator26);
        org.junit.Assert.assertNotNull(numberFormat27);
        org.junit.Assert.assertNotNull(fractionFormat28);
        org.junit.Assert.assertNotNull(attributedCharacterIterator30);
        org.junit.Assert.assertNotNull(numberFormat31);
        org.junit.Assert.assertNotNull(numberFormat33);
    }

    @Test
    public void test0373() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0373");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.text.NumberFormat numberFormat3 = fractionFormat2.getDenominatorFormat();
        java.text.NumberFormat numberFormat4 = fractionFormat2.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator7 = fractionFormat5.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat8 = fractionFormat5.getDenominatorFormat();
        fractionFormat2.setNumeratorFormat(numberFormat8);
        java.lang.Object obj10 = numberFormat8.clone();
        java.lang.String str12 = numberFormat8.format((java.lang.Object) (short) 10);
        java.text.NumberFormat numberFormat13 = null;
        java.text.NumberFormat numberFormat14 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat15 = new org.apache.commons.math.fraction.FractionFormat(numberFormat13, numberFormat14);
        java.text.NumberFormat numberFormat16 = fractionFormat15.getDenominatorFormat();
        java.text.NumberFormat numberFormat17 = fractionFormat15.getNumeratorFormat();
        java.text.NumberFormat numberFormat18 = fractionFormat15.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat19 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator21 = fractionFormat19.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat22 = fractionFormat19.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat23 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator25 = fractionFormat23.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat26 = fractionFormat23.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat27 = new org.apache.commons.math.fraction.FractionFormat(numberFormat22, numberFormat26);
        fractionFormat15.setNumeratorFormat(numberFormat22);
        org.apache.commons.math.fraction.FractionFormat fractionFormat29 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj31 = fractionFormat29.parseObject("0 / 1");
        java.text.NumberFormat numberFormat32 = fractionFormat29.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat33 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator35 = fractionFormat33.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat36 = fractionFormat33.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat37 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator39 = fractionFormat37.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat40 = fractionFormat37.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat41 = new org.apache.commons.math.fraction.FractionFormat(numberFormat36, numberFormat40);
        org.apache.commons.math.fraction.FractionFormat fractionFormat42 = new org.apache.commons.math.fraction.FractionFormat(numberFormat32, numberFormat36);
        org.apache.commons.math.fraction.FractionFormat fractionFormat43 = new org.apache.commons.math.fraction.FractionFormat(numberFormat22, numberFormat32);
        org.apache.commons.math.fraction.FractionFormat fractionFormat44 = new org.apache.commons.math.fraction.FractionFormat(numberFormat8, numberFormat32);
        org.apache.commons.math.fraction.FractionFormat fractionFormat45 = new org.apache.commons.math.fraction.FractionFormat(numberFormat8);
        org.apache.commons.math.fraction.Fraction fraction47 = fractionFormat45.parse("100");
        java.text.NumberFormat numberFormat48 = fractionFormat45.getNumeratorFormat();
        java.text.NumberFormat numberFormat49 = null;
        // The following exception was thrown during execution in test generation
        try {
            fractionFormat45.setNumeratorFormat(numberFormat49);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: numerator format can not be null.");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(numberFormat3);
        org.junit.Assert.assertNull(numberFormat4);
        org.junit.Assert.assertNotNull(fractionFormat5);
        org.junit.Assert.assertNotNull(attributedCharacterIterator7);
        org.junit.Assert.assertNotNull(numberFormat8);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "10" + "'", str12, "10");
        org.junit.Assert.assertNull(numberFormat16);
        org.junit.Assert.assertNull(numberFormat17);
        org.junit.Assert.assertNull(numberFormat18);
        org.junit.Assert.assertNotNull(fractionFormat19);
        org.junit.Assert.assertNotNull(attributedCharacterIterator21);
        org.junit.Assert.assertNotNull(numberFormat22);
        org.junit.Assert.assertNotNull(fractionFormat23);
        org.junit.Assert.assertNotNull(attributedCharacterIterator25);
        org.junit.Assert.assertNotNull(numberFormat26);
        org.junit.Assert.assertNotNull(fractionFormat29);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertNotNull(numberFormat32);
        org.junit.Assert.assertNotNull(fractionFormat33);
        org.junit.Assert.assertNotNull(attributedCharacterIterator35);
        org.junit.Assert.assertNotNull(numberFormat36);
        org.junit.Assert.assertNotNull(fractionFormat37);
        org.junit.Assert.assertNotNull(attributedCharacterIterator39);
        org.junit.Assert.assertNotNull(numberFormat40);
        org.junit.Assert.assertNotNull(fraction47);
        org.junit.Assert.assertNotNull(numberFormat48);
    }

    @Test
    public void test0374() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0374");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat5 = fractionFormat0.getNumeratorFormat();
        java.lang.Object obj6 = numberFormat5.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat7 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj9 = fractionFormat7.parseObject("0 / 1");
        java.lang.Object obj11 = fractionFormat7.parseObject("0 / 1");
        java.text.NumberFormat numberFormat12 = fractionFormat7.getNumeratorFormat();
        java.text.NumberFormat numberFormat13 = fractionFormat7.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat14 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator16 = fractionFormat14.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat17 = fractionFormat14.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat18 = new org.apache.commons.math.fraction.FractionFormat(numberFormat13, numberFormat17);
        org.apache.commons.math.fraction.FractionFormat fractionFormat19 = new org.apache.commons.math.fraction.FractionFormat(numberFormat5, numberFormat17);
        java.text.NumberFormat numberFormat20 = fractionFormat19.getNumeratorFormat();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj22 = numberFormat20.parseObject("hi!");
            org.junit.Assert.fail("Expected exception of type java.text.ParseException; message: Format.parseObject(String) failed");
        } catch (java.text.ParseException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(obj6);
        org.junit.Assert.assertNotNull(fractionFormat7);
        org.junit.Assert.assertNotNull(obj9);
        org.junit.Assert.assertNotNull(obj11);
        org.junit.Assert.assertNotNull(numberFormat12);
        org.junit.Assert.assertNotNull(numberFormat13);
        org.junit.Assert.assertNotNull(fractionFormat14);
        org.junit.Assert.assertNotNull(attributedCharacterIterator16);
        org.junit.Assert.assertNotNull(numberFormat17);
        org.junit.Assert.assertNotNull(numberFormat20);
    }

    @Test
    public void test0375() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0375");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.text.NumberFormat numberFormat3 = fractionFormat2.getDenominatorFormat();
        java.text.NumberFormat numberFormat4 = fractionFormat2.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj7 = fractionFormat5.parseObject("0 / 1");
        java.lang.Object obj9 = fractionFormat5.parseObject("0 / 1");
        java.text.NumberFormat numberFormat10 = fractionFormat5.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj13 = fractionFormat11.parseObject("0 / 1");
        java.text.NumberFormat numberFormat14 = fractionFormat11.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat15 = new org.apache.commons.math.fraction.FractionFormat(numberFormat10, numberFormat14);
        java.text.AttributedCharacterIterator attributedCharacterIterator17 = numberFormat10.formatToCharacterIterator((java.lang.Object) (-1));
        fractionFormat2.setDenominatorFormat(numberFormat10);
        java.lang.Object obj19 = numberFormat10.clone();
        java.text.NumberFormat numberFormat20 = null;
        java.text.NumberFormat numberFormat21 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat22 = new org.apache.commons.math.fraction.FractionFormat(numberFormat20, numberFormat21);
        java.text.NumberFormat numberFormat23 = fractionFormat22.getDenominatorFormat();
        java.text.NumberFormat numberFormat24 = fractionFormat22.getNumeratorFormat();
        java.text.NumberFormat numberFormat25 = fractionFormat22.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat26 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj28 = fractionFormat26.parseObject("0 / 1");
        java.lang.Object obj30 = fractionFormat26.parseObject("0 / 1");
        java.text.NumberFormat numberFormat31 = fractionFormat26.getNumeratorFormat();
        java.lang.Object obj32 = numberFormat31.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat33 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj35 = fractionFormat33.parseObject("0 / 1");
        java.lang.Object obj37 = fractionFormat33.parseObject("0 / 1");
        java.text.NumberFormat numberFormat38 = fractionFormat33.getNumeratorFormat();
        java.text.NumberFormat numberFormat39 = fractionFormat33.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat40 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator42 = fractionFormat40.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat43 = fractionFormat40.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat44 = new org.apache.commons.math.fraction.FractionFormat(numberFormat39, numberFormat43);
        org.apache.commons.math.fraction.FractionFormat fractionFormat45 = new org.apache.commons.math.fraction.FractionFormat(numberFormat31, numberFormat43);
        fractionFormat22.setNumeratorFormat(numberFormat31);
        org.apache.commons.math.fraction.FractionFormat fractionFormat47 = new org.apache.commons.math.fraction.FractionFormat(numberFormat10, numberFormat31);
        org.apache.commons.math.fraction.FractionFormat fractionFormat48 = new org.apache.commons.math.fraction.FractionFormat();
        java.text.NumberFormat numberFormat49 = fractionFormat48.getDenominatorFormat();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str50 = fractionFormat47.format((java.lang.Object) numberFormat49);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot format given object as a fraction");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(numberFormat3);
        org.junit.Assert.assertNull(numberFormat4);
        org.junit.Assert.assertNotNull(fractionFormat5);
        org.junit.Assert.assertNotNull(obj7);
        org.junit.Assert.assertNotNull(obj9);
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertNotNull(fractionFormat11);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertNotNull(numberFormat14);
        org.junit.Assert.assertNotNull(attributedCharacterIterator17);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNull(numberFormat23);
        org.junit.Assert.assertNull(numberFormat24);
        org.junit.Assert.assertNull(numberFormat25);
        org.junit.Assert.assertNotNull(fractionFormat26);
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertNotNull(numberFormat31);
        org.junit.Assert.assertNotNull(obj32);
        org.junit.Assert.assertNotNull(fractionFormat33);
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertNotNull(numberFormat38);
        org.junit.Assert.assertNotNull(numberFormat39);
        org.junit.Assert.assertNotNull(fractionFormat40);
        org.junit.Assert.assertNotNull(attributedCharacterIterator42);
        org.junit.Assert.assertNotNull(numberFormat43);
        org.junit.Assert.assertNotNull(numberFormat49);
    }

    @Test
    public void test0376() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0376");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.text.NumberFormat numberFormat3 = fractionFormat2.getNumeratorFormat();
        java.text.NumberFormat numberFormat4 = fractionFormat2.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj7 = fractionFormat5.parseObject("0 / 1");
        java.lang.Object obj9 = fractionFormat5.parseObject("0 / 1");
        java.text.NumberFormat numberFormat10 = fractionFormat5.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj13 = fractionFormat11.parseObject("0 / 1");
        java.text.NumberFormat numberFormat14 = fractionFormat11.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat15 = new org.apache.commons.math.fraction.FractionFormat(numberFormat10, numberFormat14);
        fractionFormat2.setNumeratorFormat(numberFormat10);
        java.text.NumberFormat numberFormat17 = fractionFormat2.getDenominatorFormat();
        java.text.ParsePosition parsePosition19 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.fraction.Fraction fraction20 = fractionFormat2.parse("", parsePosition19);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(numberFormat3);
        org.junit.Assert.assertNull(numberFormat4);
        org.junit.Assert.assertNotNull(fractionFormat5);
        org.junit.Assert.assertNotNull(obj7);
        org.junit.Assert.assertNotNull(obj9);
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertNotNull(fractionFormat11);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertNotNull(numberFormat14);
        org.junit.Assert.assertNull(numberFormat17);
    }

    @Test
    public void test0377() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0377");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.text.NumberFormat numberFormat3 = fractionFormat2.getDenominatorFormat();
        java.text.NumberFormat numberFormat4 = fractionFormat2.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator7 = fractionFormat5.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat8 = fractionFormat5.getDenominatorFormat();
        fractionFormat2.setNumeratorFormat(numberFormat8);
        org.apache.commons.math.fraction.FractionFormat fractionFormat10 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj12 = fractionFormat10.parseObject("0 / 1");
        java.text.NumberFormat numberFormat13 = fractionFormat10.getNumeratorFormat();
        fractionFormat2.setNumeratorFormat(numberFormat13);
        java.text.NumberFormat numberFormat15 = null;
        java.text.NumberFormat numberFormat16 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat17 = new org.apache.commons.math.fraction.FractionFormat(numberFormat15, numberFormat16);
        java.text.NumberFormat numberFormat18 = fractionFormat17.getDenominatorFormat();
        java.lang.StringBuffer stringBuffer19 = null;
        java.text.FieldPosition fieldPosition20 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer21 = fractionFormat2.format((java.lang.Object) fractionFormat17, stringBuffer19, fieldPosition20);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot format given object as a fraction");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(numberFormat3);
        org.junit.Assert.assertNull(numberFormat4);
        org.junit.Assert.assertNotNull(fractionFormat5);
        org.junit.Assert.assertNotNull(attributedCharacterIterator7);
        org.junit.Assert.assertNotNull(numberFormat8);
        org.junit.Assert.assertNotNull(fractionFormat10);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertNotNull(numberFormat13);
        org.junit.Assert.assertNull(numberFormat18);
    }

    @Test
    public void test0378() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0378");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.text.NumberFormat numberFormat3 = fractionFormat2.getDenominatorFormat();
        java.text.NumberFormat numberFormat4 = fractionFormat2.getNumeratorFormat();
        java.text.NumberFormat numberFormat5 = fractionFormat2.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat6 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator8 = fractionFormat6.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat9 = fractionFormat6.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat10 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator12 = fractionFormat10.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat13 = fractionFormat10.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat14 = new org.apache.commons.math.fraction.FractionFormat(numberFormat9, numberFormat13);
        fractionFormat2.setNumeratorFormat(numberFormat9);
        org.apache.commons.math.fraction.FractionFormat fractionFormat16 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj18 = fractionFormat16.parseObject("0 / 1");
        java.lang.Object obj20 = fractionFormat16.parseObject("0 / 1");
        java.text.NumberFormat numberFormat21 = fractionFormat16.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat22 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj24 = fractionFormat22.parseObject("0 / 1");
        java.lang.Object obj26 = fractionFormat22.parseObject("0 / 1");
        java.text.NumberFormat numberFormat27 = fractionFormat22.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat28 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj30 = fractionFormat28.parseObject("0 / 1");
        java.text.NumberFormat numberFormat31 = fractionFormat28.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat32 = new org.apache.commons.math.fraction.FractionFormat(numberFormat27, numberFormat31);
        org.apache.commons.math.fraction.FractionFormat fractionFormat33 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj35 = fractionFormat33.parseObject("0 / 1");
        java.lang.Object obj37 = fractionFormat33.parseObject("0 / 1");
        java.text.NumberFormat numberFormat38 = fractionFormat33.getNumeratorFormat();
        fractionFormat32.setDenominatorFormat(numberFormat38);
        org.apache.commons.math.fraction.FractionFormat fractionFormat40 = new org.apache.commons.math.fraction.FractionFormat(numberFormat21, numberFormat38);
        java.lang.Object obj41 = numberFormat38.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat42 = new org.apache.commons.math.fraction.FractionFormat(numberFormat9, numberFormat38);
        java.text.NumberFormat numberFormat43 = null;
        java.text.NumberFormat numberFormat44 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat45 = new org.apache.commons.math.fraction.FractionFormat(numberFormat43, numberFormat44);
        java.text.NumberFormat numberFormat46 = fractionFormat45.getDenominatorFormat();
        java.text.NumberFormat numberFormat47 = fractionFormat45.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat48 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator50 = fractionFormat48.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat51 = fractionFormat48.getDenominatorFormat();
        fractionFormat45.setNumeratorFormat(numberFormat51);
        java.lang.Object obj53 = numberFormat51.clone();
        java.lang.String str55 = numberFormat51.format((java.lang.Object) (short) 10);
        java.text.NumberFormat numberFormat56 = null;
        java.text.NumberFormat numberFormat57 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat58 = new org.apache.commons.math.fraction.FractionFormat(numberFormat56, numberFormat57);
        java.text.NumberFormat numberFormat59 = fractionFormat58.getDenominatorFormat();
        java.text.NumberFormat numberFormat60 = fractionFormat58.getNumeratorFormat();
        java.text.NumberFormat numberFormat61 = fractionFormat58.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat62 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator64 = fractionFormat62.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat65 = fractionFormat62.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat66 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator68 = fractionFormat66.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat69 = fractionFormat66.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat70 = new org.apache.commons.math.fraction.FractionFormat(numberFormat65, numberFormat69);
        fractionFormat58.setNumeratorFormat(numberFormat65);
        org.apache.commons.math.fraction.FractionFormat fractionFormat72 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj74 = fractionFormat72.parseObject("0 / 1");
        java.text.NumberFormat numberFormat75 = fractionFormat72.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat76 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator78 = fractionFormat76.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat79 = fractionFormat76.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat80 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator82 = fractionFormat80.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat83 = fractionFormat80.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat84 = new org.apache.commons.math.fraction.FractionFormat(numberFormat79, numberFormat83);
        org.apache.commons.math.fraction.FractionFormat fractionFormat85 = new org.apache.commons.math.fraction.FractionFormat(numberFormat75, numberFormat79);
        org.apache.commons.math.fraction.FractionFormat fractionFormat86 = new org.apache.commons.math.fraction.FractionFormat(numberFormat65, numberFormat75);
        org.apache.commons.math.fraction.FractionFormat fractionFormat87 = new org.apache.commons.math.fraction.FractionFormat(numberFormat51, numberFormat75);
        java.text.NumberFormat numberFormat88 = fractionFormat87.getDenominatorFormat();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str89 = fractionFormat42.format((java.lang.Object) fractionFormat87);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot format given object as a fraction");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(numberFormat3);
        org.junit.Assert.assertNull(numberFormat4);
        org.junit.Assert.assertNull(numberFormat5);
        org.junit.Assert.assertNotNull(fractionFormat6);
        org.junit.Assert.assertNotNull(attributedCharacterIterator8);
        org.junit.Assert.assertNotNull(numberFormat9);
        org.junit.Assert.assertNotNull(fractionFormat10);
        org.junit.Assert.assertNotNull(attributedCharacterIterator12);
        org.junit.Assert.assertNotNull(numberFormat13);
        org.junit.Assert.assertNotNull(fractionFormat16);
        org.junit.Assert.assertNotNull(obj18);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertNotNull(numberFormat21);
        org.junit.Assert.assertNotNull(fractionFormat22);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertNotNull(numberFormat27);
        org.junit.Assert.assertNotNull(fractionFormat28);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertNotNull(numberFormat31);
        org.junit.Assert.assertNotNull(fractionFormat33);
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertNotNull(numberFormat38);
        org.junit.Assert.assertNotNull(obj41);
        org.junit.Assert.assertNull(numberFormat46);
        org.junit.Assert.assertNull(numberFormat47);
        org.junit.Assert.assertNotNull(fractionFormat48);
        org.junit.Assert.assertNotNull(attributedCharacterIterator50);
        org.junit.Assert.assertNotNull(numberFormat51);
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "10" + "'", str55, "10");
        org.junit.Assert.assertNull(numberFormat59);
        org.junit.Assert.assertNull(numberFormat60);
        org.junit.Assert.assertNull(numberFormat61);
        org.junit.Assert.assertNotNull(fractionFormat62);
        org.junit.Assert.assertNotNull(attributedCharacterIterator64);
        org.junit.Assert.assertNotNull(numberFormat65);
        org.junit.Assert.assertNotNull(fractionFormat66);
        org.junit.Assert.assertNotNull(attributedCharacterIterator68);
        org.junit.Assert.assertNotNull(numberFormat69);
        org.junit.Assert.assertNotNull(fractionFormat72);
        org.junit.Assert.assertNotNull(obj74);
        org.junit.Assert.assertNotNull(numberFormat75);
        org.junit.Assert.assertNotNull(fractionFormat76);
        org.junit.Assert.assertNotNull(attributedCharacterIterator78);
        org.junit.Assert.assertNotNull(numberFormat79);
        org.junit.Assert.assertNotNull(fractionFormat80);
        org.junit.Assert.assertNotNull(attributedCharacterIterator82);
        org.junit.Assert.assertNotNull(numberFormat83);
        org.junit.Assert.assertNotNull(numberFormat88);
    }

    @Test
    public void test0379() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0379");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.lang.Object obj3 = fractionFormat2.clone();
        java.lang.Object obj4 = fractionFormat2.clone();
        java.text.NumberFormat numberFormat5 = null;
        java.text.NumberFormat numberFormat6 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat7 = new org.apache.commons.math.fraction.FractionFormat(numberFormat5, numberFormat6);
        java.text.NumberFormat numberFormat8 = fractionFormat7.getDenominatorFormat();
        java.text.NumberFormat numberFormat9 = fractionFormat7.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat10 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator12 = fractionFormat10.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat13 = fractionFormat10.getDenominatorFormat();
        fractionFormat7.setNumeratorFormat(numberFormat13);
        org.apache.commons.math.fraction.FractionFormat fractionFormat15 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj17 = fractionFormat15.parseObject("0 / 1");
        java.lang.Object obj19 = fractionFormat15.parseObject("0 / 1");
        java.text.NumberFormat numberFormat20 = fractionFormat15.getNumeratorFormat();
        fractionFormat7.setDenominatorFormat(numberFormat20);
        org.apache.commons.math.fraction.FractionFormat fractionFormat22 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat23 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj25 = fractionFormat23.parseObject("0 / 1");
        java.lang.Object obj27 = fractionFormat23.parseObject("0 / 1");
        java.text.NumberFormat numberFormat28 = fractionFormat23.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat29 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj31 = fractionFormat29.parseObject("0 / 1");
        java.text.NumberFormat numberFormat32 = fractionFormat29.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat33 = new org.apache.commons.math.fraction.FractionFormat(numberFormat28, numberFormat32);
        org.apache.commons.math.fraction.FractionFormat fractionFormat34 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj36 = fractionFormat34.parseObject("0 / 1");
        java.lang.Object obj38 = fractionFormat34.parseObject("0 / 1");
        java.text.NumberFormat numberFormat39 = fractionFormat34.getNumeratorFormat();
        fractionFormat33.setDenominatorFormat(numberFormat39);
        java.lang.Object obj41 = numberFormat39.clone();
        fractionFormat22.setNumeratorFormat(numberFormat39);
        fractionFormat7.setDenominatorFormat(numberFormat39);
        org.apache.commons.math.fraction.FractionFormat fractionFormat44 = new org.apache.commons.math.fraction.FractionFormat(numberFormat39);
        fractionFormat2.setNumeratorFormat(numberFormat39);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.fraction.Fraction fraction47 = fractionFormat2.parse("");
            org.junit.Assert.fail("Expected exception of type java.text.ParseException; message: Unparseable fraction number: \"\"");
        } catch (java.text.ParseException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(obj3);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNull(numberFormat8);
        org.junit.Assert.assertNull(numberFormat9);
        org.junit.Assert.assertNotNull(fractionFormat10);
        org.junit.Assert.assertNotNull(attributedCharacterIterator12);
        org.junit.Assert.assertNotNull(numberFormat13);
        org.junit.Assert.assertNotNull(fractionFormat15);
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(numberFormat20);
        org.junit.Assert.assertNotNull(fractionFormat22);
        org.junit.Assert.assertNotNull(fractionFormat23);
        org.junit.Assert.assertNotNull(obj25);
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertNotNull(numberFormat28);
        org.junit.Assert.assertNotNull(fractionFormat29);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertNotNull(numberFormat32);
        org.junit.Assert.assertNotNull(fractionFormat34);
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertNotNull(numberFormat39);
        org.junit.Assert.assertNotNull(obj41);
    }

    @Test
    public void test0380() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0380");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat5 = fractionFormat0.getNumeratorFormat();
        java.text.NumberFormat numberFormat6 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat7 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator9 = fractionFormat7.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat10 = fractionFormat7.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = new org.apache.commons.math.fraction.FractionFormat(numberFormat6, numberFormat10);
        org.apache.commons.math.fraction.FractionFormat fractionFormat12 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator14 = fractionFormat12.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat15 = fractionFormat12.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat16 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator18 = fractionFormat16.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat19 = fractionFormat16.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat20 = new org.apache.commons.math.fraction.FractionFormat(numberFormat15, numberFormat19);
        org.apache.commons.math.fraction.FractionFormat fractionFormat21 = new org.apache.commons.math.fraction.FractionFormat(numberFormat6, numberFormat19);
        org.apache.commons.math.fraction.FractionFormat fractionFormat22 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj24 = fractionFormat22.parseObject("0 / 1");
        java.text.NumberFormat numberFormat25 = fractionFormat22.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat26 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj28 = fractionFormat26.parseObject("0 / 1");
        java.lang.Object obj30 = fractionFormat26.parseObject("0 / 1");
        java.text.NumberFormat numberFormat31 = fractionFormat26.getNumeratorFormat();
        java.text.NumberFormat numberFormat32 = fractionFormat26.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat33 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator35 = fractionFormat33.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat36 = fractionFormat33.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat37 = new org.apache.commons.math.fraction.FractionFormat(numberFormat32, numberFormat36);
        fractionFormat22.setNumeratorFormat(numberFormat36);
        java.lang.Object obj39 = fractionFormat22.clone();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str40 = numberFormat19.format(obj39);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot format given Object as a Number");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertNotNull(fractionFormat7);
        org.junit.Assert.assertNotNull(attributedCharacterIterator9);
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertNotNull(fractionFormat12);
        org.junit.Assert.assertNotNull(attributedCharacterIterator14);
        org.junit.Assert.assertNotNull(numberFormat15);
        org.junit.Assert.assertNotNull(fractionFormat16);
        org.junit.Assert.assertNotNull(attributedCharacterIterator18);
        org.junit.Assert.assertNotNull(numberFormat19);
        org.junit.Assert.assertNotNull(fractionFormat22);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertNotNull(numberFormat25);
        org.junit.Assert.assertNotNull(fractionFormat26);
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertNotNull(numberFormat31);
        org.junit.Assert.assertNotNull(numberFormat32);
        org.junit.Assert.assertNotNull(fractionFormat33);
        org.junit.Assert.assertNotNull(attributedCharacterIterator35);
        org.junit.Assert.assertNotNull(numberFormat36);
        org.junit.Assert.assertNotNull(obj39);
    }

    @Test
    public void test0381() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0381");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.text.NumberFormat numberFormat3 = fractionFormat2.getDenominatorFormat();
        java.text.NumberFormat numberFormat4 = fractionFormat2.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator7 = fractionFormat5.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat8 = fractionFormat5.getDenominatorFormat();
        fractionFormat2.setNumeratorFormat(numberFormat8);
        java.text.NumberFormat numberFormat10 = fractionFormat2.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat12 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj14 = fractionFormat12.parseObject("0 / 1");
        java.lang.Object obj16 = fractionFormat12.parseObject("0 / 1");
        java.text.NumberFormat numberFormat17 = fractionFormat12.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat18 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj20 = fractionFormat18.parseObject("0 / 1");
        java.text.NumberFormat numberFormat21 = fractionFormat18.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat22 = new org.apache.commons.math.fraction.FractionFormat(numberFormat17, numberFormat21);
        org.apache.commons.math.fraction.FractionFormat fractionFormat23 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj25 = fractionFormat23.parseObject("0 / 1");
        java.lang.Object obj27 = fractionFormat23.parseObject("0 / 1");
        java.text.NumberFormat numberFormat28 = fractionFormat23.getNumeratorFormat();
        fractionFormat22.setDenominatorFormat(numberFormat28);
        java.lang.Object obj30 = numberFormat28.clone();
        fractionFormat11.setNumeratorFormat(numberFormat28);
        java.lang.Object obj32 = numberFormat28.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat33 = new org.apache.commons.math.fraction.FractionFormat(numberFormat28);
        fractionFormat2.setNumeratorFormat(numberFormat28);
        java.text.NumberFormat numberFormat35 = null;
        java.text.NumberFormat numberFormat36 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat37 = new org.apache.commons.math.fraction.FractionFormat(numberFormat35, numberFormat36);
        java.text.NumberFormat numberFormat38 = fractionFormat37.getDenominatorFormat();
        java.text.NumberFormat numberFormat39 = fractionFormat37.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat40 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator42 = fractionFormat40.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat43 = fractionFormat40.getDenominatorFormat();
        fractionFormat37.setNumeratorFormat(numberFormat43);
        java.lang.Object obj45 = numberFormat43.clone();
        fractionFormat2.setNumeratorFormat(numberFormat43);
        java.text.ParsePosition parsePosition48 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.fraction.Fraction fraction49 = fractionFormat2.parse("0 / 1", parsePosition48);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(numberFormat3);
        org.junit.Assert.assertNull(numberFormat4);
        org.junit.Assert.assertNotNull(fractionFormat5);
        org.junit.Assert.assertNotNull(attributedCharacterIterator7);
        org.junit.Assert.assertNotNull(numberFormat8);
        org.junit.Assert.assertNull(numberFormat10);
        org.junit.Assert.assertNotNull(fractionFormat11);
        org.junit.Assert.assertNotNull(fractionFormat12);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertNotNull(obj16);
        org.junit.Assert.assertNotNull(numberFormat17);
        org.junit.Assert.assertNotNull(fractionFormat18);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertNotNull(numberFormat21);
        org.junit.Assert.assertNotNull(fractionFormat23);
        org.junit.Assert.assertNotNull(obj25);
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertNotNull(numberFormat28);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertNotNull(obj32);
        org.junit.Assert.assertNull(numberFormat38);
        org.junit.Assert.assertNull(numberFormat39);
        org.junit.Assert.assertNotNull(fractionFormat40);
        org.junit.Assert.assertNotNull(attributedCharacterIterator42);
        org.junit.Assert.assertNotNull(numberFormat43);
        org.junit.Assert.assertNotNull(obj45);
    }

    @Test
    public void test0382() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0382");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj6 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat7 = null;
        java.text.NumberFormat numberFormat8 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat9 = new org.apache.commons.math.fraction.FractionFormat(numberFormat7, numberFormat8);
        java.text.NumberFormat numberFormat10 = fractionFormat9.getDenominatorFormat();
        java.text.NumberFormat numberFormat11 = fractionFormat9.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat12 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator14 = fractionFormat12.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat15 = fractionFormat12.getDenominatorFormat();
        fractionFormat9.setNumeratorFormat(numberFormat15);
        org.apache.commons.math.fraction.FractionFormat fractionFormat17 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj19 = fractionFormat17.parseObject("0 / 1");
        java.text.NumberFormat numberFormat20 = fractionFormat17.getNumeratorFormat();
        fractionFormat9.setNumeratorFormat(numberFormat20);
        java.lang.Object obj23 = numberFormat20.parseObject("0 / 1");
        fractionFormat0.setNumeratorFormat(numberFormat20);
        org.apache.commons.math.fraction.FractionFormat fractionFormat25 = new org.apache.commons.math.fraction.FractionFormat();
        java.text.NumberFormat numberFormat26 = fractionFormat25.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat27 = new org.apache.commons.math.fraction.FractionFormat(numberFormat20, numberFormat26);
        org.apache.commons.math.fraction.FractionFormat fractionFormat28 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj30 = fractionFormat28.parseObject("0 / 1");
        java.lang.Object obj32 = fractionFormat28.parseObject("0 / 1");
        java.text.NumberFormat numberFormat33 = fractionFormat28.getNumeratorFormat();
        java.text.NumberFormat numberFormat34 = fractionFormat28.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat35 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator37 = fractionFormat35.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat38 = fractionFormat35.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat39 = new org.apache.commons.math.fraction.FractionFormat(numberFormat34, numberFormat38);
        org.apache.commons.math.fraction.FractionFormat fractionFormat40 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj42 = fractionFormat40.parseObject("0 / 1");
        java.text.NumberFormat numberFormat43 = fractionFormat40.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat44 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj46 = fractionFormat44.parseObject("0 / 1");
        java.lang.Object obj48 = fractionFormat44.parseObject("0 / 1");
        java.text.NumberFormat numberFormat49 = fractionFormat44.getNumeratorFormat();
        java.text.NumberFormat numberFormat50 = fractionFormat44.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat51 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator53 = fractionFormat51.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat54 = fractionFormat51.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat55 = new org.apache.commons.math.fraction.FractionFormat(numberFormat50, numberFormat54);
        fractionFormat40.setNumeratorFormat(numberFormat54);
        org.apache.commons.math.fraction.FractionFormat fractionFormat57 = new org.apache.commons.math.fraction.FractionFormat(numberFormat34, numberFormat54);
        java.lang.StringBuffer stringBuffer58 = null;
        java.text.FieldPosition fieldPosition59 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer60 = fractionFormat27.format((java.lang.Object) fractionFormat57, stringBuffer58, fieldPosition59);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot format given object as a fraction");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(obj6);
        org.junit.Assert.assertNull(numberFormat10);
        org.junit.Assert.assertNull(numberFormat11);
        org.junit.Assert.assertNotNull(fractionFormat12);
        org.junit.Assert.assertNotNull(attributedCharacterIterator14);
        org.junit.Assert.assertNotNull(numberFormat15);
        org.junit.Assert.assertNotNull(fractionFormat17);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(numberFormat20);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + 0L + "'", obj23, 0L);
        org.junit.Assert.assertNotNull(numberFormat26);
        org.junit.Assert.assertNotNull(fractionFormat28);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertNotNull(obj32);
        org.junit.Assert.assertNotNull(numberFormat33);
        org.junit.Assert.assertNotNull(numberFormat34);
        org.junit.Assert.assertNotNull(fractionFormat35);
        org.junit.Assert.assertNotNull(attributedCharacterIterator37);
        org.junit.Assert.assertNotNull(numberFormat38);
        org.junit.Assert.assertNotNull(fractionFormat40);
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertNotNull(numberFormat43);
        org.junit.Assert.assertNotNull(fractionFormat44);
        org.junit.Assert.assertNotNull(obj46);
        org.junit.Assert.assertNotNull(obj48);
        org.junit.Assert.assertNotNull(numberFormat49);
        org.junit.Assert.assertNotNull(numberFormat50);
        org.junit.Assert.assertNotNull(fractionFormat51);
        org.junit.Assert.assertNotNull(attributedCharacterIterator53);
        org.junit.Assert.assertNotNull(numberFormat54);
    }

    @Test
    public void test0383() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0383");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.text.NumberFormat numberFormat3 = fractionFormat2.getDenominatorFormat();
        java.text.NumberFormat numberFormat4 = fractionFormat2.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj7 = fractionFormat5.parseObject("0 / 1");
        java.lang.Object obj9 = fractionFormat5.parseObject("0 / 1");
        java.text.NumberFormat numberFormat10 = fractionFormat5.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj13 = fractionFormat11.parseObject("0 / 1");
        java.text.NumberFormat numberFormat14 = fractionFormat11.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat15 = new org.apache.commons.math.fraction.FractionFormat(numberFormat10, numberFormat14);
        java.text.AttributedCharacterIterator attributedCharacterIterator17 = numberFormat10.formatToCharacterIterator((java.lang.Object) (-1));
        fractionFormat2.setDenominatorFormat(numberFormat10);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj20 = fractionFormat2.parseObject("hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(numberFormat3);
        org.junit.Assert.assertNull(numberFormat4);
        org.junit.Assert.assertNotNull(fractionFormat5);
        org.junit.Assert.assertNotNull(obj7);
        org.junit.Assert.assertNotNull(obj9);
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertNotNull(fractionFormat11);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertNotNull(numberFormat14);
        org.junit.Assert.assertNotNull(attributedCharacterIterator17);
    }

    @Test
    public void test0384() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0384");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.text.NumberFormat numberFormat3 = fractionFormat2.getDenominatorFormat();
        java.text.NumberFormat numberFormat4 = fractionFormat2.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator7 = fractionFormat5.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat8 = fractionFormat5.getDenominatorFormat();
        fractionFormat2.setNumeratorFormat(numberFormat8);
        java.lang.Object obj10 = numberFormat8.clone();
        java.lang.String str12 = numberFormat8.format((java.lang.Object) (short) 10);
        java.text.NumberFormat numberFormat13 = null;
        java.text.NumberFormat numberFormat14 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat15 = new org.apache.commons.math.fraction.FractionFormat(numberFormat13, numberFormat14);
        java.text.NumberFormat numberFormat16 = fractionFormat15.getDenominatorFormat();
        java.text.NumberFormat numberFormat17 = fractionFormat15.getNumeratorFormat();
        java.text.NumberFormat numberFormat18 = fractionFormat15.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat19 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator21 = fractionFormat19.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat22 = fractionFormat19.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat23 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator25 = fractionFormat23.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat26 = fractionFormat23.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat27 = new org.apache.commons.math.fraction.FractionFormat(numberFormat22, numberFormat26);
        fractionFormat15.setNumeratorFormat(numberFormat22);
        org.apache.commons.math.fraction.FractionFormat fractionFormat29 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj31 = fractionFormat29.parseObject("0 / 1");
        java.text.NumberFormat numberFormat32 = fractionFormat29.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat33 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator35 = fractionFormat33.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat36 = fractionFormat33.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat37 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator39 = fractionFormat37.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat40 = fractionFormat37.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat41 = new org.apache.commons.math.fraction.FractionFormat(numberFormat36, numberFormat40);
        org.apache.commons.math.fraction.FractionFormat fractionFormat42 = new org.apache.commons.math.fraction.FractionFormat(numberFormat32, numberFormat36);
        org.apache.commons.math.fraction.FractionFormat fractionFormat43 = new org.apache.commons.math.fraction.FractionFormat(numberFormat22, numberFormat32);
        org.apache.commons.math.fraction.FractionFormat fractionFormat44 = new org.apache.commons.math.fraction.FractionFormat(numberFormat8, numberFormat32);
        org.apache.commons.math.fraction.FractionFormat fractionFormat45 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator47 = fractionFormat45.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat48 = fractionFormat45.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat49 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator51 = fractionFormat49.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat52 = fractionFormat49.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat53 = new org.apache.commons.math.fraction.FractionFormat(numberFormat48, numberFormat52);
        org.apache.commons.math.fraction.FractionFormat fractionFormat54 = new org.apache.commons.math.fraction.FractionFormat(numberFormat48);
        java.text.NumberFormat numberFormat55 = fractionFormat54.getNumeratorFormat();
        java.lang.StringBuffer stringBuffer56 = null;
        java.text.FieldPosition fieldPosition57 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer58 = fractionFormat44.format((java.lang.Object) numberFormat55, stringBuffer56, fieldPosition57);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot format given object as a fraction");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(numberFormat3);
        org.junit.Assert.assertNull(numberFormat4);
        org.junit.Assert.assertNotNull(fractionFormat5);
        org.junit.Assert.assertNotNull(attributedCharacterIterator7);
        org.junit.Assert.assertNotNull(numberFormat8);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "10" + "'", str12, "10");
        org.junit.Assert.assertNull(numberFormat16);
        org.junit.Assert.assertNull(numberFormat17);
        org.junit.Assert.assertNull(numberFormat18);
        org.junit.Assert.assertNotNull(fractionFormat19);
        org.junit.Assert.assertNotNull(attributedCharacterIterator21);
        org.junit.Assert.assertNotNull(numberFormat22);
        org.junit.Assert.assertNotNull(fractionFormat23);
        org.junit.Assert.assertNotNull(attributedCharacterIterator25);
        org.junit.Assert.assertNotNull(numberFormat26);
        org.junit.Assert.assertNotNull(fractionFormat29);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertNotNull(numberFormat32);
        org.junit.Assert.assertNotNull(fractionFormat33);
        org.junit.Assert.assertNotNull(attributedCharacterIterator35);
        org.junit.Assert.assertNotNull(numberFormat36);
        org.junit.Assert.assertNotNull(fractionFormat37);
        org.junit.Assert.assertNotNull(attributedCharacterIterator39);
        org.junit.Assert.assertNotNull(numberFormat40);
        org.junit.Assert.assertNotNull(fractionFormat45);
        org.junit.Assert.assertNotNull(attributedCharacterIterator47);
        org.junit.Assert.assertNotNull(numberFormat48);
        org.junit.Assert.assertNotNull(fractionFormat49);
        org.junit.Assert.assertNotNull(attributedCharacterIterator51);
        org.junit.Assert.assertNotNull(numberFormat52);
        org.junit.Assert.assertNotNull(numberFormat55);
    }

    @Test
    public void test0385() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0385");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat5 = fractionFormat0.getNumeratorFormat();
        java.text.NumberFormat numberFormat6 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat7 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator9 = fractionFormat7.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat10 = fractionFormat7.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = new org.apache.commons.math.fraction.FractionFormat(numberFormat6, numberFormat10);
        org.apache.commons.math.fraction.FractionFormat fractionFormat12 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj14 = fractionFormat12.parseObject("0 / 1");
        java.lang.Object obj16 = fractionFormat12.parseObject("0 / 1");
        java.text.NumberFormat numberFormat17 = fractionFormat12.getNumeratorFormat();
        java.text.NumberFormat numberFormat18 = fractionFormat12.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat19 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator21 = fractionFormat19.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat22 = fractionFormat19.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat23 = new org.apache.commons.math.fraction.FractionFormat(numberFormat18, numberFormat22);
        fractionFormat11.setNumeratorFormat(numberFormat22);
        java.text.NumberFormat numberFormat25 = null;
        java.text.NumberFormat numberFormat26 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat27 = new org.apache.commons.math.fraction.FractionFormat(numberFormat25, numberFormat26);
        java.text.NumberFormat numberFormat28 = fractionFormat27.getDenominatorFormat();
        java.text.NumberFormat numberFormat29 = fractionFormat27.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat30 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator32 = fractionFormat30.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat33 = fractionFormat30.getDenominatorFormat();
        fractionFormat27.setNumeratorFormat(numberFormat33);
        java.lang.Object obj35 = numberFormat33.clone();
        java.lang.String str37 = numberFormat33.format((java.lang.Object) (short) 10);
        java.text.NumberFormat numberFormat38 = null;
        java.text.NumberFormat numberFormat39 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat40 = new org.apache.commons.math.fraction.FractionFormat(numberFormat38, numberFormat39);
        java.text.NumberFormat numberFormat41 = fractionFormat40.getDenominatorFormat();
        java.text.NumberFormat numberFormat42 = fractionFormat40.getNumeratorFormat();
        java.text.NumberFormat numberFormat43 = fractionFormat40.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat44 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator46 = fractionFormat44.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat47 = fractionFormat44.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat48 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator50 = fractionFormat48.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat51 = fractionFormat48.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat52 = new org.apache.commons.math.fraction.FractionFormat(numberFormat47, numberFormat51);
        fractionFormat40.setNumeratorFormat(numberFormat47);
        org.apache.commons.math.fraction.FractionFormat fractionFormat54 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj56 = fractionFormat54.parseObject("0 / 1");
        java.text.NumberFormat numberFormat57 = fractionFormat54.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat58 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator60 = fractionFormat58.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat61 = fractionFormat58.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat62 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator64 = fractionFormat62.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat65 = fractionFormat62.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat66 = new org.apache.commons.math.fraction.FractionFormat(numberFormat61, numberFormat65);
        org.apache.commons.math.fraction.FractionFormat fractionFormat67 = new org.apache.commons.math.fraction.FractionFormat(numberFormat57, numberFormat61);
        org.apache.commons.math.fraction.FractionFormat fractionFormat68 = new org.apache.commons.math.fraction.FractionFormat(numberFormat47, numberFormat57);
        org.apache.commons.math.fraction.FractionFormat fractionFormat69 = new org.apache.commons.math.fraction.FractionFormat(numberFormat33, numberFormat57);
        java.lang.Object obj70 = fractionFormat69.clone();
        java.lang.Object obj71 = fractionFormat69.clone();
        java.lang.String str73 = fractionFormat69.format((java.lang.Object) (byte) 0);
        org.apache.commons.math.fraction.Fraction fraction75 = fractionFormat69.parse("100");
        java.lang.StringBuffer stringBuffer76 = null;
        java.text.FieldPosition fieldPosition77 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer78 = fractionFormat11.format(fraction75, stringBuffer76, fieldPosition77);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertNotNull(fractionFormat7);
        org.junit.Assert.assertNotNull(attributedCharacterIterator9);
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertNotNull(fractionFormat12);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertNotNull(obj16);
        org.junit.Assert.assertNotNull(numberFormat17);
        org.junit.Assert.assertNotNull(numberFormat18);
        org.junit.Assert.assertNotNull(fractionFormat19);
        org.junit.Assert.assertNotNull(attributedCharacterIterator21);
        org.junit.Assert.assertNotNull(numberFormat22);
        org.junit.Assert.assertNull(numberFormat28);
        org.junit.Assert.assertNull(numberFormat29);
        org.junit.Assert.assertNotNull(fractionFormat30);
        org.junit.Assert.assertNotNull(attributedCharacterIterator32);
        org.junit.Assert.assertNotNull(numberFormat33);
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "10" + "'", str37, "10");
        org.junit.Assert.assertNull(numberFormat41);
        org.junit.Assert.assertNull(numberFormat42);
        org.junit.Assert.assertNull(numberFormat43);
        org.junit.Assert.assertNotNull(fractionFormat44);
        org.junit.Assert.assertNotNull(attributedCharacterIterator46);
        org.junit.Assert.assertNotNull(numberFormat47);
        org.junit.Assert.assertNotNull(fractionFormat48);
        org.junit.Assert.assertNotNull(attributedCharacterIterator50);
        org.junit.Assert.assertNotNull(numberFormat51);
        org.junit.Assert.assertNotNull(fractionFormat54);
        org.junit.Assert.assertNotNull(obj56);
        org.junit.Assert.assertNotNull(numberFormat57);
        org.junit.Assert.assertNotNull(fractionFormat58);
        org.junit.Assert.assertNotNull(attributedCharacterIterator60);
        org.junit.Assert.assertNotNull(numberFormat61);
        org.junit.Assert.assertNotNull(fractionFormat62);
        org.junit.Assert.assertNotNull(attributedCharacterIterator64);
        org.junit.Assert.assertNotNull(numberFormat65);
        org.junit.Assert.assertNotNull(obj70);
        org.junit.Assert.assertNotNull(obj71);
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "0 / 1" + "'", str73, "0 / 1");
        org.junit.Assert.assertNotNull(fraction75);
    }

    @Test
    public void test0386() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0386");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.text.NumberFormat numberFormat3 = fractionFormat2.getDenominatorFormat();
        java.text.NumberFormat numberFormat4 = fractionFormat2.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator7 = fractionFormat5.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat8 = fractionFormat5.getDenominatorFormat();
        fractionFormat2.setNumeratorFormat(numberFormat8);
        org.apache.commons.math.fraction.FractionFormat fractionFormat10 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj12 = fractionFormat10.parseObject("0 / 1");
        java.lang.Object obj14 = fractionFormat10.parseObject("0 / 1");
        java.text.NumberFormat numberFormat15 = fractionFormat10.getNumeratorFormat();
        fractionFormat2.setDenominatorFormat(numberFormat15);
        java.text.NumberFormat numberFormat17 = fractionFormat2.getDenominatorFormat();
        java.text.NumberFormat numberFormat18 = fractionFormat2.getDenominatorFormat();
        java.text.ParsePosition parsePosition20 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.fraction.Fraction fraction21 = fractionFormat2.parse("", parsePosition20);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(numberFormat3);
        org.junit.Assert.assertNull(numberFormat4);
        org.junit.Assert.assertNotNull(fractionFormat5);
        org.junit.Assert.assertNotNull(attributedCharacterIterator7);
        org.junit.Assert.assertNotNull(numberFormat8);
        org.junit.Assert.assertNotNull(fractionFormat10);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertNotNull(numberFormat15);
        org.junit.Assert.assertNotNull(numberFormat17);
        org.junit.Assert.assertNotNull(numberFormat18);
    }

    @Test
    public void test0387() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0387");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = new org.apache.commons.math.fraction.FractionFormat();
        java.text.NumberFormat numberFormat1 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.Fraction fraction4 = fractionFormat2.parse("0 / 1");
        java.lang.String str5 = org.apache.commons.math.fraction.FractionFormat.formatFraction(fraction4);
        java.lang.String str6 = org.apache.commons.math.fraction.FractionFormat.formatFraction(fraction4);
        java.lang.String str7 = org.apache.commons.math.fraction.FractionFormat.formatFraction(fraction4);
        java.lang.StringBuffer stringBuffer8 = null;
        java.text.FieldPosition fieldPosition9 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer10 = fractionFormat0.format(fraction4, stringBuffer8, fieldPosition9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(numberFormat1);
        org.junit.Assert.assertNotNull(fractionFormat2);
        org.junit.Assert.assertNotNull(fraction4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "0 / 1" + "'", str5, "0 / 1");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "0 / 1" + "'", str6, "0 / 1");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "0 / 1" + "'", str7, "0 / 1");
    }

    @Test
    public void test0388() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0388");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.text.NumberFormat numberFormat3 = fractionFormat2.getDenominatorFormat();
        java.text.NumberFormat numberFormat4 = fractionFormat2.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator7 = fractionFormat5.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat8 = fractionFormat5.getDenominatorFormat();
        fractionFormat2.setNumeratorFormat(numberFormat8);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.fraction.Fraction fraction11 = fractionFormat2.parse("");
            org.junit.Assert.fail("Expected exception of type java.text.ParseException; message: Unparseable fraction number: \"\"");
        } catch (java.text.ParseException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(numberFormat3);
        org.junit.Assert.assertNull(numberFormat4);
        org.junit.Assert.assertNotNull(fractionFormat5);
        org.junit.Assert.assertNotNull(attributedCharacterIterator7);
        org.junit.Assert.assertNotNull(numberFormat8);
    }

    @Test
    public void test0389() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0389");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj6 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat7 = null;
        // The following exception was thrown during execution in test generation
        try {
            fractionFormat0.setDenominatorFormat(numberFormat7);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: denominator format can not be null.");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(obj6);
    }

    @Test
    public void test0390() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0390");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.text.NumberFormat numberFormat3 = fractionFormat2.getDenominatorFormat();
        java.text.NumberFormat numberFormat4 = fractionFormat2.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator7 = fractionFormat5.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat8 = fractionFormat5.getDenominatorFormat();
        fractionFormat2.setNumeratorFormat(numberFormat8);
        java.lang.Object obj10 = numberFormat8.clone();
        java.lang.String str12 = numberFormat8.format((java.lang.Object) (short) 10);
        java.text.NumberFormat numberFormat13 = null;
        java.text.NumberFormat numberFormat14 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat15 = new org.apache.commons.math.fraction.FractionFormat(numberFormat13, numberFormat14);
        java.text.NumberFormat numberFormat16 = fractionFormat15.getDenominatorFormat();
        java.text.NumberFormat numberFormat17 = fractionFormat15.getNumeratorFormat();
        java.text.NumberFormat numberFormat18 = fractionFormat15.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat19 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator21 = fractionFormat19.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat22 = fractionFormat19.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat23 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator25 = fractionFormat23.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat26 = fractionFormat23.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat27 = new org.apache.commons.math.fraction.FractionFormat(numberFormat22, numberFormat26);
        fractionFormat15.setNumeratorFormat(numberFormat22);
        org.apache.commons.math.fraction.FractionFormat fractionFormat29 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj31 = fractionFormat29.parseObject("0 / 1");
        java.text.NumberFormat numberFormat32 = fractionFormat29.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat33 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator35 = fractionFormat33.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat36 = fractionFormat33.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat37 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator39 = fractionFormat37.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat40 = fractionFormat37.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat41 = new org.apache.commons.math.fraction.FractionFormat(numberFormat36, numberFormat40);
        org.apache.commons.math.fraction.FractionFormat fractionFormat42 = new org.apache.commons.math.fraction.FractionFormat(numberFormat32, numberFormat36);
        org.apache.commons.math.fraction.FractionFormat fractionFormat43 = new org.apache.commons.math.fraction.FractionFormat(numberFormat22, numberFormat32);
        org.apache.commons.math.fraction.FractionFormat fractionFormat44 = new org.apache.commons.math.fraction.FractionFormat(numberFormat8, numberFormat32);
        org.apache.commons.math.fraction.FractionFormat fractionFormat45 = new org.apache.commons.math.fraction.FractionFormat(numberFormat8);
        org.apache.commons.math.fraction.Fraction fraction47 = fractionFormat45.parse("100");
        java.lang.String str48 = org.apache.commons.math.fraction.FractionFormat.formatFraction(fraction47);
        org.junit.Assert.assertNull(numberFormat3);
        org.junit.Assert.assertNull(numberFormat4);
        org.junit.Assert.assertNotNull(fractionFormat5);
        org.junit.Assert.assertNotNull(attributedCharacterIterator7);
        org.junit.Assert.assertNotNull(numberFormat8);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "10" + "'", str12, "10");
        org.junit.Assert.assertNull(numberFormat16);
        org.junit.Assert.assertNull(numberFormat17);
        org.junit.Assert.assertNull(numberFormat18);
        org.junit.Assert.assertNotNull(fractionFormat19);
        org.junit.Assert.assertNotNull(attributedCharacterIterator21);
        org.junit.Assert.assertNotNull(numberFormat22);
        org.junit.Assert.assertNotNull(fractionFormat23);
        org.junit.Assert.assertNotNull(attributedCharacterIterator25);
        org.junit.Assert.assertNotNull(numberFormat26);
        org.junit.Assert.assertNotNull(fractionFormat29);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertNotNull(numberFormat32);
        org.junit.Assert.assertNotNull(fractionFormat33);
        org.junit.Assert.assertNotNull(attributedCharacterIterator35);
        org.junit.Assert.assertNotNull(numberFormat36);
        org.junit.Assert.assertNotNull(fractionFormat37);
        org.junit.Assert.assertNotNull(attributedCharacterIterator39);
        org.junit.Assert.assertNotNull(numberFormat40);
        org.junit.Assert.assertNotNull(fraction47);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "100 / 1" + "'", str48, "100 / 1");
    }

    @Test
    public void test0391() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0391");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj6 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat7 = null;
        java.text.NumberFormat numberFormat8 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat9 = new org.apache.commons.math.fraction.FractionFormat(numberFormat7, numberFormat8);
        java.text.NumberFormat numberFormat10 = fractionFormat9.getDenominatorFormat();
        java.text.NumberFormat numberFormat11 = fractionFormat9.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat12 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator14 = fractionFormat12.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat15 = fractionFormat12.getDenominatorFormat();
        fractionFormat9.setNumeratorFormat(numberFormat15);
        org.apache.commons.math.fraction.FractionFormat fractionFormat17 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj19 = fractionFormat17.parseObject("0 / 1");
        java.text.NumberFormat numberFormat20 = fractionFormat17.getNumeratorFormat();
        fractionFormat9.setNumeratorFormat(numberFormat20);
        java.lang.Object obj23 = numberFormat20.parseObject("0 / 1");
        fractionFormat0.setNumeratorFormat(numberFormat20);
        java.text.NumberFormat numberFormat25 = fractionFormat0.getDenominatorFormat();
        java.text.NumberFormat numberFormat26 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat27 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj29 = fractionFormat27.parseObject("0 / 1");
        java.lang.Object obj31 = fractionFormat27.parseObject("0 / 1");
        java.text.NumberFormat numberFormat32 = fractionFormat27.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat33 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj35 = fractionFormat33.parseObject("0 / 1");
        java.text.NumberFormat numberFormat36 = fractionFormat33.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat37 = new org.apache.commons.math.fraction.FractionFormat(numberFormat32, numberFormat36);
        fractionFormat0.setDenominatorFormat(numberFormat36);
        org.apache.commons.math.fraction.FractionFormat fractionFormat39 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.Fraction fraction41 = fractionFormat39.parse("0 / 1");
        java.lang.String str42 = org.apache.commons.math.fraction.FractionFormat.formatFraction(fraction41);
        java.lang.StringBuffer stringBuffer43 = null;
        java.text.FieldPosition fieldPosition44 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer45 = fractionFormat0.format(fraction41, stringBuffer43, fieldPosition44);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(obj6);
        org.junit.Assert.assertNull(numberFormat10);
        org.junit.Assert.assertNull(numberFormat11);
        org.junit.Assert.assertNotNull(fractionFormat12);
        org.junit.Assert.assertNotNull(attributedCharacterIterator14);
        org.junit.Assert.assertNotNull(numberFormat15);
        org.junit.Assert.assertNotNull(fractionFormat17);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(numberFormat20);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + 0L + "'", obj23, 0L);
        org.junit.Assert.assertNotNull(numberFormat25);
        org.junit.Assert.assertNotNull(numberFormat26);
        org.junit.Assert.assertNotNull(fractionFormat27);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertNotNull(numberFormat32);
        org.junit.Assert.assertNotNull(fractionFormat33);
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertNotNull(numberFormat36);
        org.junit.Assert.assertNotNull(fractionFormat39);
        org.junit.Assert.assertNotNull(fraction41);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "0 / 1" + "'", str42, "0 / 1");
    }

    @Test
    public void test0392() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0392");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat5 = fractionFormat0.getNumeratorFormat();
        java.text.NumberFormat numberFormat6 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat7 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator9 = fractionFormat7.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat10 = fractionFormat7.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = new org.apache.commons.math.fraction.FractionFormat(numberFormat6, numberFormat10);
        org.apache.commons.math.fraction.FractionFormat fractionFormat12 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator14 = fractionFormat12.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat15 = fractionFormat12.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat16 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator18 = fractionFormat16.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat19 = fractionFormat16.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat20 = new org.apache.commons.math.fraction.FractionFormat(numberFormat15, numberFormat19);
        fractionFormat11.setNumeratorFormat(numberFormat15);
        java.text.NumberFormat numberFormat22 = fractionFormat11.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat23 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj25 = fractionFormat23.parseObject("0 / 1");
        java.lang.Object obj27 = fractionFormat23.parseObject("0 / 1");
        java.text.NumberFormat numberFormat28 = fractionFormat23.getNumeratorFormat();
        java.text.NumberFormat numberFormat29 = fractionFormat23.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat30 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator32 = fractionFormat30.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat33 = fractionFormat30.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat34 = new org.apache.commons.math.fraction.FractionFormat(numberFormat29, numberFormat33);
        org.apache.commons.math.fraction.FractionFormat fractionFormat35 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj37 = fractionFormat35.parseObject("0 / 1");
        java.lang.Object obj39 = fractionFormat35.parseObject("0 / 1");
        java.text.NumberFormat numberFormat40 = fractionFormat35.getNumeratorFormat();
        java.text.NumberFormat numberFormat41 = fractionFormat35.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat42 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator44 = fractionFormat42.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat45 = fractionFormat42.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat46 = new org.apache.commons.math.fraction.FractionFormat(numberFormat41, numberFormat45);
        fractionFormat34.setNumeratorFormat(numberFormat45);
        fractionFormat11.setDenominatorFormat(numberFormat45);
        java.lang.Class<?> wildcardClass49 = numberFormat45.getClass();
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertNotNull(fractionFormat7);
        org.junit.Assert.assertNotNull(attributedCharacterIterator9);
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertNotNull(fractionFormat12);
        org.junit.Assert.assertNotNull(attributedCharacterIterator14);
        org.junit.Assert.assertNotNull(numberFormat15);
        org.junit.Assert.assertNotNull(fractionFormat16);
        org.junit.Assert.assertNotNull(attributedCharacterIterator18);
        org.junit.Assert.assertNotNull(numberFormat19);
        org.junit.Assert.assertNotNull(numberFormat22);
        org.junit.Assert.assertNotNull(fractionFormat23);
        org.junit.Assert.assertNotNull(obj25);
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertNotNull(numberFormat28);
        org.junit.Assert.assertNotNull(numberFormat29);
        org.junit.Assert.assertNotNull(fractionFormat30);
        org.junit.Assert.assertNotNull(attributedCharacterIterator32);
        org.junit.Assert.assertNotNull(numberFormat33);
        org.junit.Assert.assertNotNull(fractionFormat35);
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertNotNull(obj39);
        org.junit.Assert.assertNotNull(numberFormat40);
        org.junit.Assert.assertNotNull(numberFormat41);
        org.junit.Assert.assertNotNull(fractionFormat42);
        org.junit.Assert.assertNotNull(attributedCharacterIterator44);
        org.junit.Assert.assertNotNull(numberFormat45);
        org.junit.Assert.assertNotNull(wildcardClass49);
    }

    @Test
    public void test0393() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0393");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat3 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat4 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj6 = fractionFormat4.parseObject("0 / 1");
        java.lang.Object obj8 = fractionFormat4.parseObject("0 / 1");
        java.text.NumberFormat numberFormat9 = fractionFormat4.getNumeratorFormat();
        java.text.NumberFormat numberFormat10 = fractionFormat4.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator13 = fractionFormat11.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat14 = fractionFormat11.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat15 = new org.apache.commons.math.fraction.FractionFormat(numberFormat10, numberFormat14);
        fractionFormat0.setNumeratorFormat(numberFormat14);
        java.lang.Object obj17 = fractionFormat0.clone();
        java.lang.Object obj19 = fractionFormat0.parseObject("0 / 1");
        org.apache.commons.math.fraction.FractionFormat fractionFormat20 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj22 = fractionFormat20.parseObject("0 / 1");
        java.lang.Object obj24 = fractionFormat20.parseObject("0 / 1");
        java.text.NumberFormat numberFormat25 = fractionFormat20.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat26 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj28 = fractionFormat26.parseObject("0 / 1");
        java.text.NumberFormat numberFormat29 = fractionFormat26.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat30 = new org.apache.commons.math.fraction.FractionFormat(numberFormat25, numberFormat29);
        org.apache.commons.math.fraction.FractionFormat fractionFormat31 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj33 = fractionFormat31.parseObject("0 / 1");
        java.lang.Object obj35 = fractionFormat31.parseObject("0 / 1");
        java.text.NumberFormat numberFormat36 = fractionFormat31.getNumeratorFormat();
        fractionFormat30.setDenominatorFormat(numberFormat36);
        fractionFormat0.setDenominatorFormat(numberFormat36);
        java.text.ParsePosition parsePosition40 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj41 = fractionFormat0.parseObject("10", parsePosition40);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(numberFormat3);
        org.junit.Assert.assertNotNull(fractionFormat4);
        org.junit.Assert.assertNotNull(obj6);
        org.junit.Assert.assertNotNull(obj8);
        org.junit.Assert.assertNotNull(numberFormat9);
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertNotNull(fractionFormat11);
        org.junit.Assert.assertNotNull(attributedCharacterIterator13);
        org.junit.Assert.assertNotNull(numberFormat14);
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(fractionFormat20);
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertNotNull(numberFormat25);
        org.junit.Assert.assertNotNull(fractionFormat26);
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertNotNull(numberFormat29);
        org.junit.Assert.assertNotNull(fractionFormat31);
        org.junit.Assert.assertNotNull(obj33);
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertNotNull(numberFormat36);
    }

    @Test
    public void test0394() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0394");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat5 = fractionFormat0.getNumeratorFormat();
        java.text.NumberFormat numberFormat6 = fractionFormat0.getNumeratorFormat();
        java.text.NumberFormat numberFormat7 = fractionFormat0.getNumeratorFormat();
        java.text.ParsePosition parsePosition9 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.fraction.Fraction fraction10 = fractionFormat0.parse("100", parsePosition9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertNotNull(numberFormat7);
    }

    @Test
    public void test0395() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0395");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.Fraction fraction2 = fractionFormat0.parse("0 / 1");
        org.apache.commons.math.fraction.FractionFormat fractionFormat3 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator5 = fractionFormat3.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat6 = fractionFormat3.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat7 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator9 = fractionFormat7.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat10 = fractionFormat7.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = new org.apache.commons.math.fraction.FractionFormat(numberFormat6, numberFormat10);
        java.text.NumberFormat numberFormat12 = fractionFormat11.getDenominatorFormat();
        fractionFormat0.setDenominatorFormat(numberFormat12);
        java.text.NumberFormat numberFormat14 = null;
        java.text.NumberFormat numberFormat15 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat16 = new org.apache.commons.math.fraction.FractionFormat(numberFormat14, numberFormat15);
        java.lang.Object obj17 = fractionFormat16.clone();
        java.text.NumberFormat numberFormat18 = null;
        java.text.NumberFormat numberFormat19 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat20 = new org.apache.commons.math.fraction.FractionFormat(numberFormat18, numberFormat19);
        java.text.NumberFormat numberFormat21 = fractionFormat20.getDenominatorFormat();
        java.text.NumberFormat numberFormat22 = fractionFormat20.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat23 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator25 = fractionFormat23.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat26 = fractionFormat23.getDenominatorFormat();
        fractionFormat20.setNumeratorFormat(numberFormat26);
        java.lang.Object obj28 = numberFormat26.clone();
        java.lang.String str30 = numberFormat26.format((java.lang.Object) (short) 10);
        org.apache.commons.math.fraction.FractionFormat fractionFormat31 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator33 = fractionFormat31.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat34 = fractionFormat31.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat35 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator37 = fractionFormat35.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat38 = fractionFormat35.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat39 = new org.apache.commons.math.fraction.FractionFormat(numberFormat34, numberFormat38);
        org.apache.commons.math.fraction.FractionFormat fractionFormat40 = new org.apache.commons.math.fraction.FractionFormat(numberFormat26, numberFormat34);
        fractionFormat16.setDenominatorFormat(numberFormat26);
        org.apache.commons.math.fraction.FractionFormat fractionFormat42 = new org.apache.commons.math.fraction.FractionFormat(numberFormat26);
        java.text.NumberFormat numberFormat43 = null;
        java.text.NumberFormat numberFormat44 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat45 = new org.apache.commons.math.fraction.FractionFormat(numberFormat43, numberFormat44);
        java.text.NumberFormat numberFormat46 = fractionFormat45.getDenominatorFormat();
        java.text.NumberFormat numberFormat47 = fractionFormat45.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat48 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator50 = fractionFormat48.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat51 = fractionFormat48.getDenominatorFormat();
        fractionFormat45.setNumeratorFormat(numberFormat51);
        org.apache.commons.math.fraction.FractionFormat fractionFormat53 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator55 = fractionFormat53.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat56 = fractionFormat53.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat57 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator59 = fractionFormat57.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat60 = fractionFormat57.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat61 = new org.apache.commons.math.fraction.FractionFormat(numberFormat56, numberFormat60);
        java.text.NumberFormat numberFormat62 = fractionFormat61.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat63 = new org.apache.commons.math.fraction.FractionFormat(numberFormat62);
        fractionFormat45.setNumeratorFormat(numberFormat62);
        fractionFormat42.setNumeratorFormat(numberFormat62);
        // The following exception was thrown during execution in test generation
        try {
            java.text.AttributedCharacterIterator attributedCharacterIterator66 = fractionFormat0.formatToCharacterIterator((java.lang.Object) fractionFormat42);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot format given object as a fraction");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(fraction2);
        org.junit.Assert.assertNotNull(fractionFormat3);
        org.junit.Assert.assertNotNull(attributedCharacterIterator5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertNotNull(fractionFormat7);
        org.junit.Assert.assertNotNull(attributedCharacterIterator9);
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertNotNull(numberFormat12);
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertNull(numberFormat21);
        org.junit.Assert.assertNull(numberFormat22);
        org.junit.Assert.assertNotNull(fractionFormat23);
        org.junit.Assert.assertNotNull(attributedCharacterIterator25);
        org.junit.Assert.assertNotNull(numberFormat26);
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "10" + "'", str30, "10");
        org.junit.Assert.assertNotNull(fractionFormat31);
        org.junit.Assert.assertNotNull(attributedCharacterIterator33);
        org.junit.Assert.assertNotNull(numberFormat34);
        org.junit.Assert.assertNotNull(fractionFormat35);
        org.junit.Assert.assertNotNull(attributedCharacterIterator37);
        org.junit.Assert.assertNotNull(numberFormat38);
        org.junit.Assert.assertNull(numberFormat46);
        org.junit.Assert.assertNull(numberFormat47);
        org.junit.Assert.assertNotNull(fractionFormat48);
        org.junit.Assert.assertNotNull(attributedCharacterIterator50);
        org.junit.Assert.assertNotNull(numberFormat51);
        org.junit.Assert.assertNotNull(fractionFormat53);
        org.junit.Assert.assertNotNull(attributedCharacterIterator55);
        org.junit.Assert.assertNotNull(numberFormat56);
        org.junit.Assert.assertNotNull(fractionFormat57);
        org.junit.Assert.assertNotNull(attributedCharacterIterator59);
        org.junit.Assert.assertNotNull(numberFormat60);
        org.junit.Assert.assertNotNull(numberFormat62);
    }

    @Test
    public void test0396() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0396");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.text.NumberFormat numberFormat3 = fractionFormat2.getDenominatorFormat();
        java.text.NumberFormat numberFormat4 = fractionFormat2.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj7 = fractionFormat5.parseObject("0 / 1");
        java.lang.Object obj9 = fractionFormat5.parseObject("0 / 1");
        java.text.NumberFormat numberFormat10 = fractionFormat5.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj13 = fractionFormat11.parseObject("0 / 1");
        java.text.NumberFormat numberFormat14 = fractionFormat11.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat15 = new org.apache.commons.math.fraction.FractionFormat(numberFormat10, numberFormat14);
        java.text.AttributedCharacterIterator attributedCharacterIterator17 = numberFormat10.formatToCharacterIterator((java.lang.Object) (-1));
        fractionFormat2.setDenominatorFormat(numberFormat10);
        java.lang.Object obj19 = numberFormat10.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat20 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj22 = fractionFormat20.parseObject("0 / 1");
        java.lang.Object obj24 = fractionFormat20.parseObject("0 / 1");
        java.text.NumberFormat numberFormat25 = fractionFormat20.getNumeratorFormat();
        java.lang.Object obj26 = numberFormat25.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat27 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj29 = fractionFormat27.parseObject("0 / 1");
        java.lang.Object obj31 = fractionFormat27.parseObject("0 / 1");
        java.text.NumberFormat numberFormat32 = fractionFormat27.getNumeratorFormat();
        java.text.NumberFormat numberFormat33 = fractionFormat27.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat34 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator36 = fractionFormat34.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat37 = fractionFormat34.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat38 = new org.apache.commons.math.fraction.FractionFormat(numberFormat33, numberFormat37);
        org.apache.commons.math.fraction.FractionFormat fractionFormat39 = new org.apache.commons.math.fraction.FractionFormat(numberFormat25, numberFormat37);
        org.apache.commons.math.fraction.FractionFormat fractionFormat40 = new org.apache.commons.math.fraction.FractionFormat(numberFormat10, numberFormat25);
        org.apache.commons.math.fraction.FractionFormat fractionFormat41 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.Fraction fraction43 = fractionFormat41.parse("0 / 1");
        java.lang.String str44 = org.apache.commons.math.fraction.FractionFormat.formatFraction(fraction43);
        java.lang.String str45 = org.apache.commons.math.fraction.FractionFormat.formatFraction(fraction43);
        java.lang.String str46 = org.apache.commons.math.fraction.FractionFormat.formatFraction(fraction43);
        java.lang.String str47 = org.apache.commons.math.fraction.FractionFormat.formatFraction(fraction43);
        java.lang.StringBuffer stringBuffer48 = null;
        java.text.FieldPosition fieldPosition49 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer50 = fractionFormat40.format(fraction43, stringBuffer48, fieldPosition49);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(numberFormat3);
        org.junit.Assert.assertNull(numberFormat4);
        org.junit.Assert.assertNotNull(fractionFormat5);
        org.junit.Assert.assertNotNull(obj7);
        org.junit.Assert.assertNotNull(obj9);
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertNotNull(fractionFormat11);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertNotNull(numberFormat14);
        org.junit.Assert.assertNotNull(attributedCharacterIterator17);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(fractionFormat20);
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertNotNull(numberFormat25);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertNotNull(fractionFormat27);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertNotNull(numberFormat32);
        org.junit.Assert.assertNotNull(numberFormat33);
        org.junit.Assert.assertNotNull(fractionFormat34);
        org.junit.Assert.assertNotNull(attributedCharacterIterator36);
        org.junit.Assert.assertNotNull(numberFormat37);
        org.junit.Assert.assertNotNull(fractionFormat41);
        org.junit.Assert.assertNotNull(fraction43);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "0 / 1" + "'", str44, "0 / 1");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "0 / 1" + "'", str45, "0 / 1");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "0 / 1" + "'", str46, "0 / 1");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "0 / 1" + "'", str47, "0 / 1");
    }

    @Test
    public void test0397() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0397");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj6 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj8 = fractionFormat0.parseObject("-1 / 1");
        org.apache.commons.math.fraction.FractionFormat fractionFormat9 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator11 = fractionFormat9.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat12 = fractionFormat9.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat13 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator15 = fractionFormat13.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat16 = fractionFormat13.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat17 = new org.apache.commons.math.fraction.FractionFormat(numberFormat12, numberFormat16);
        java.text.NumberFormat numberFormat18 = fractionFormat17.getDenominatorFormat();
        fractionFormat0.setDenominatorFormat(numberFormat18);
        java.text.NumberFormat numberFormat20 = fractionFormat0.getNumeratorFormat();
        java.text.NumberFormat numberFormat21 = null;
        java.text.NumberFormat numberFormat22 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat23 = new org.apache.commons.math.fraction.FractionFormat(numberFormat21, numberFormat22);
        java.text.NumberFormat numberFormat24 = fractionFormat23.getDenominatorFormat();
        java.text.NumberFormat numberFormat25 = fractionFormat23.getNumeratorFormat();
        java.text.NumberFormat numberFormat26 = fractionFormat23.getNumeratorFormat();
        java.text.NumberFormat numberFormat27 = fractionFormat23.getDenominatorFormat();
        java.lang.Object obj28 = fractionFormat23.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat29 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj31 = fractionFormat29.parseObject("0 / 1");
        java.lang.Object obj33 = fractionFormat29.parseObject("0 / 1");
        java.text.NumberFormat numberFormat34 = fractionFormat29.getNumeratorFormat();
        java.text.NumberFormat numberFormat35 = fractionFormat29.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat36 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator38 = fractionFormat36.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat39 = fractionFormat36.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat40 = new org.apache.commons.math.fraction.FractionFormat(numberFormat35, numberFormat39);
        org.apache.commons.math.fraction.FractionFormat fractionFormat41 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator43 = fractionFormat41.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat44 = fractionFormat41.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat45 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator47 = fractionFormat45.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat48 = fractionFormat45.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat49 = new org.apache.commons.math.fraction.FractionFormat(numberFormat44, numberFormat48);
        org.apache.commons.math.fraction.FractionFormat fractionFormat50 = new org.apache.commons.math.fraction.FractionFormat(numberFormat35, numberFormat48);
        java.text.NumberFormat numberFormat51 = fractionFormat50.getDenominatorFormat();
        fractionFormat23.setDenominatorFormat(numberFormat51);
        org.apache.commons.math.fraction.FractionFormat fractionFormat53 = new org.apache.commons.math.fraction.FractionFormat(numberFormat51);
        org.apache.commons.math.fraction.FractionFormat fractionFormat54 = new org.apache.commons.math.fraction.FractionFormat(numberFormat20, numberFormat51);
        // The following exception was thrown during execution in test generation
        try {
            java.text.AttributedCharacterIterator attributedCharacterIterator56 = numberFormat51.formatToCharacterIterator((java.lang.Object) "0 / 1");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot format given Object as a Number");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(obj6);
        org.junit.Assert.assertNotNull(obj8);
        org.junit.Assert.assertNotNull(fractionFormat9);
        org.junit.Assert.assertNotNull(attributedCharacterIterator11);
        org.junit.Assert.assertNotNull(numberFormat12);
        org.junit.Assert.assertNotNull(fractionFormat13);
        org.junit.Assert.assertNotNull(attributedCharacterIterator15);
        org.junit.Assert.assertNotNull(numberFormat16);
        org.junit.Assert.assertNotNull(numberFormat18);
        org.junit.Assert.assertNotNull(numberFormat20);
        org.junit.Assert.assertNull(numberFormat24);
        org.junit.Assert.assertNull(numberFormat25);
        org.junit.Assert.assertNull(numberFormat26);
        org.junit.Assert.assertNull(numberFormat27);
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertNotNull(fractionFormat29);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertNotNull(obj33);
        org.junit.Assert.assertNotNull(numberFormat34);
        org.junit.Assert.assertNotNull(numberFormat35);
        org.junit.Assert.assertNotNull(fractionFormat36);
        org.junit.Assert.assertNotNull(attributedCharacterIterator38);
        org.junit.Assert.assertNotNull(numberFormat39);
        org.junit.Assert.assertNotNull(fractionFormat41);
        org.junit.Assert.assertNotNull(attributedCharacterIterator43);
        org.junit.Assert.assertNotNull(numberFormat44);
        org.junit.Assert.assertNotNull(fractionFormat45);
        org.junit.Assert.assertNotNull(attributedCharacterIterator47);
        org.junit.Assert.assertNotNull(numberFormat48);
        org.junit.Assert.assertNotNull(numberFormat51);
    }

    @Test
    public void test0398() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0398");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.text.NumberFormat numberFormat3 = fractionFormat2.getDenominatorFormat();
        java.text.NumberFormat numberFormat4 = fractionFormat2.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator7 = fractionFormat5.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat8 = fractionFormat5.getDenominatorFormat();
        fractionFormat2.setNumeratorFormat(numberFormat8);
        java.lang.Object obj10 = numberFormat8.clone();
        java.lang.String str12 = numberFormat8.format((java.lang.Object) (short) 10);
        java.text.NumberFormat numberFormat13 = null;
        java.text.NumberFormat numberFormat14 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat15 = new org.apache.commons.math.fraction.FractionFormat(numberFormat13, numberFormat14);
        java.text.NumberFormat numberFormat16 = fractionFormat15.getDenominatorFormat();
        java.text.NumberFormat numberFormat17 = fractionFormat15.getNumeratorFormat();
        java.text.NumberFormat numberFormat18 = fractionFormat15.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat19 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator21 = fractionFormat19.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat22 = fractionFormat19.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat23 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator25 = fractionFormat23.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat26 = fractionFormat23.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat27 = new org.apache.commons.math.fraction.FractionFormat(numberFormat22, numberFormat26);
        fractionFormat15.setNumeratorFormat(numberFormat22);
        org.apache.commons.math.fraction.FractionFormat fractionFormat29 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj31 = fractionFormat29.parseObject("0 / 1");
        java.text.NumberFormat numberFormat32 = fractionFormat29.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat33 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator35 = fractionFormat33.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat36 = fractionFormat33.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat37 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator39 = fractionFormat37.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat40 = fractionFormat37.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat41 = new org.apache.commons.math.fraction.FractionFormat(numberFormat36, numberFormat40);
        org.apache.commons.math.fraction.FractionFormat fractionFormat42 = new org.apache.commons.math.fraction.FractionFormat(numberFormat32, numberFormat36);
        org.apache.commons.math.fraction.FractionFormat fractionFormat43 = new org.apache.commons.math.fraction.FractionFormat(numberFormat22, numberFormat32);
        org.apache.commons.math.fraction.FractionFormat fractionFormat44 = new org.apache.commons.math.fraction.FractionFormat(numberFormat8, numberFormat32);
        java.lang.Object obj45 = fractionFormat44.clone();
        java.lang.Object obj46 = fractionFormat44.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat47 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj49 = fractionFormat47.parseObject("0 / 1");
        java.lang.Object obj51 = fractionFormat47.parseObject("0 / 1");
        java.text.NumberFormat numberFormat52 = fractionFormat47.getNumeratorFormat();
        java.text.NumberFormat numberFormat53 = fractionFormat47.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat54 = new org.apache.commons.math.fraction.FractionFormat(numberFormat53);
        org.apache.commons.math.fraction.FractionFormat fractionFormat55 = new org.apache.commons.math.fraction.FractionFormat(numberFormat53);
        java.text.NumberFormat numberFormat56 = null;
        java.text.NumberFormat numberFormat57 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat58 = new org.apache.commons.math.fraction.FractionFormat(numberFormat56, numberFormat57);
        java.lang.Object obj59 = fractionFormat58.clone();
        java.text.NumberFormat numberFormat60 = null;
        java.text.NumberFormat numberFormat61 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat62 = new org.apache.commons.math.fraction.FractionFormat(numberFormat60, numberFormat61);
        java.text.NumberFormat numberFormat63 = fractionFormat62.getDenominatorFormat();
        java.text.NumberFormat numberFormat64 = fractionFormat62.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat65 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator67 = fractionFormat65.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat68 = fractionFormat65.getDenominatorFormat();
        fractionFormat62.setNumeratorFormat(numberFormat68);
        java.lang.Object obj70 = numberFormat68.clone();
        java.lang.String str72 = numberFormat68.format((java.lang.Object) (short) 10);
        org.apache.commons.math.fraction.FractionFormat fractionFormat73 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator75 = fractionFormat73.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat76 = fractionFormat73.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat77 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator79 = fractionFormat77.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat80 = fractionFormat77.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat81 = new org.apache.commons.math.fraction.FractionFormat(numberFormat76, numberFormat80);
        org.apache.commons.math.fraction.FractionFormat fractionFormat82 = new org.apache.commons.math.fraction.FractionFormat(numberFormat68, numberFormat76);
        fractionFormat58.setDenominatorFormat(numberFormat68);
        fractionFormat55.setDenominatorFormat(numberFormat68);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str85 = fractionFormat44.format((java.lang.Object) numberFormat68);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot format given object as a fraction");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(numberFormat3);
        org.junit.Assert.assertNull(numberFormat4);
        org.junit.Assert.assertNotNull(fractionFormat5);
        org.junit.Assert.assertNotNull(attributedCharacterIterator7);
        org.junit.Assert.assertNotNull(numberFormat8);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "10" + "'", str12, "10");
        org.junit.Assert.assertNull(numberFormat16);
        org.junit.Assert.assertNull(numberFormat17);
        org.junit.Assert.assertNull(numberFormat18);
        org.junit.Assert.assertNotNull(fractionFormat19);
        org.junit.Assert.assertNotNull(attributedCharacterIterator21);
        org.junit.Assert.assertNotNull(numberFormat22);
        org.junit.Assert.assertNotNull(fractionFormat23);
        org.junit.Assert.assertNotNull(attributedCharacterIterator25);
        org.junit.Assert.assertNotNull(numberFormat26);
        org.junit.Assert.assertNotNull(fractionFormat29);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertNotNull(numberFormat32);
        org.junit.Assert.assertNotNull(fractionFormat33);
        org.junit.Assert.assertNotNull(attributedCharacterIterator35);
        org.junit.Assert.assertNotNull(numberFormat36);
        org.junit.Assert.assertNotNull(fractionFormat37);
        org.junit.Assert.assertNotNull(attributedCharacterIterator39);
        org.junit.Assert.assertNotNull(numberFormat40);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertNotNull(obj46);
        org.junit.Assert.assertNotNull(fractionFormat47);
        org.junit.Assert.assertNotNull(obj49);
        org.junit.Assert.assertNotNull(obj51);
        org.junit.Assert.assertNotNull(numberFormat52);
        org.junit.Assert.assertNotNull(numberFormat53);
        org.junit.Assert.assertNotNull(obj59);
        org.junit.Assert.assertNull(numberFormat63);
        org.junit.Assert.assertNull(numberFormat64);
        org.junit.Assert.assertNotNull(fractionFormat65);
        org.junit.Assert.assertNotNull(attributedCharacterIterator67);
        org.junit.Assert.assertNotNull(numberFormat68);
        org.junit.Assert.assertNotNull(obj70);
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "10" + "'", str72, "10");
        org.junit.Assert.assertNotNull(fractionFormat73);
        org.junit.Assert.assertNotNull(attributedCharacterIterator75);
        org.junit.Assert.assertNotNull(numberFormat76);
        org.junit.Assert.assertNotNull(fractionFormat77);
        org.junit.Assert.assertNotNull(attributedCharacterIterator79);
        org.junit.Assert.assertNotNull(numberFormat80);
    }

    @Test
    public void test0399() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0399");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("-1 / 1");
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.Fraction fraction7 = fractionFormat5.parse("0 / 1");
        java.lang.String str8 = org.apache.commons.math.fraction.FractionFormat.formatFraction(fraction7);
        java.lang.String str9 = org.apache.commons.math.fraction.FractionFormat.formatFraction(fraction7);
        java.lang.StringBuffer stringBuffer10 = null;
        java.text.FieldPosition fieldPosition11 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer12 = fractionFormat0.format(fraction7, stringBuffer10, fieldPosition11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(fractionFormat5);
        org.junit.Assert.assertNotNull(fraction7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "0 / 1" + "'", str8, "0 / 1");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "0 / 1" + "'", str9, "0 / 1");
    }

    @Test
    public void test0400() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0400");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat5 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat6 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj8 = fractionFormat6.parseObject("0 / 1");
        java.text.NumberFormat numberFormat9 = fractionFormat6.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat10 = new org.apache.commons.math.fraction.FractionFormat(numberFormat5, numberFormat9);
        java.text.NumberFormat numberFormat11 = fractionFormat10.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat12 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj14 = fractionFormat12.parseObject("0 / 1");
        java.lang.Object obj16 = fractionFormat12.parseObject("0 / 1");
        java.text.NumberFormat numberFormat17 = fractionFormat12.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat18 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj20 = fractionFormat18.parseObject("0 / 1");
        java.lang.Object obj22 = fractionFormat18.parseObject("0 / 1");
        java.text.NumberFormat numberFormat23 = fractionFormat18.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat24 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj26 = fractionFormat24.parseObject("0 / 1");
        java.text.NumberFormat numberFormat27 = fractionFormat24.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat28 = new org.apache.commons.math.fraction.FractionFormat(numberFormat23, numberFormat27);
        org.apache.commons.math.fraction.FractionFormat fractionFormat29 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj31 = fractionFormat29.parseObject("0 / 1");
        java.lang.Object obj33 = fractionFormat29.parseObject("0 / 1");
        java.text.NumberFormat numberFormat34 = fractionFormat29.getNumeratorFormat();
        fractionFormat28.setDenominatorFormat(numberFormat34);
        org.apache.commons.math.fraction.FractionFormat fractionFormat36 = new org.apache.commons.math.fraction.FractionFormat(numberFormat17, numberFormat34);
        org.apache.commons.math.fraction.FractionFormat fractionFormat37 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.Fraction fraction39 = fractionFormat37.parse("0 / 1");
        org.apache.commons.math.fraction.FractionFormat fractionFormat40 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator42 = fractionFormat40.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat43 = fractionFormat40.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat44 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator46 = fractionFormat44.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat47 = fractionFormat44.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat48 = new org.apache.commons.math.fraction.FractionFormat(numberFormat43, numberFormat47);
        java.text.NumberFormat numberFormat49 = fractionFormat48.getDenominatorFormat();
        fractionFormat37.setDenominatorFormat(numberFormat49);
        java.text.NumberFormat numberFormat51 = fractionFormat37.getNumeratorFormat();
        fractionFormat36.setNumeratorFormat(numberFormat51);
        java.text.NumberFormat numberFormat53 = fractionFormat36.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat54 = new org.apache.commons.math.fraction.FractionFormat(numberFormat11, numberFormat53);
        java.text.ParsePosition parsePosition56 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.fraction.Fraction fraction57 = fractionFormat54.parse("10", parsePosition56);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(fractionFormat6);
        org.junit.Assert.assertNotNull(obj8);
        org.junit.Assert.assertNotNull(numberFormat9);
        org.junit.Assert.assertNotNull(numberFormat11);
        org.junit.Assert.assertNotNull(fractionFormat12);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertNotNull(obj16);
        org.junit.Assert.assertNotNull(numberFormat17);
        org.junit.Assert.assertNotNull(fractionFormat18);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertNotNull(numberFormat23);
        org.junit.Assert.assertNotNull(fractionFormat24);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertNotNull(numberFormat27);
        org.junit.Assert.assertNotNull(fractionFormat29);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertNotNull(obj33);
        org.junit.Assert.assertNotNull(numberFormat34);
        org.junit.Assert.assertNotNull(fractionFormat37);
        org.junit.Assert.assertNotNull(fraction39);
        org.junit.Assert.assertNotNull(fractionFormat40);
        org.junit.Assert.assertNotNull(attributedCharacterIterator42);
        org.junit.Assert.assertNotNull(numberFormat43);
        org.junit.Assert.assertNotNull(fractionFormat44);
        org.junit.Assert.assertNotNull(attributedCharacterIterator46);
        org.junit.Assert.assertNotNull(numberFormat47);
        org.junit.Assert.assertNotNull(numberFormat49);
        org.junit.Assert.assertNotNull(numberFormat51);
        org.junit.Assert.assertNotNull(numberFormat53);
    }

    @Test
    public void test0401() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0401");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat3 = fractionFormat0.getNumeratorFormat();
        java.lang.Object obj4 = fractionFormat0.clone();
        java.text.NumberFormat numberFormat5 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat6 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj8 = fractionFormat6.parseObject("0 / 1");
        java.lang.Object obj10 = fractionFormat6.parseObject("0 / 1");
        java.text.NumberFormat numberFormat11 = fractionFormat6.getNumeratorFormat();
        java.text.NumberFormat numberFormat12 = fractionFormat6.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat13 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator15 = fractionFormat13.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat16 = fractionFormat13.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat17 = new org.apache.commons.math.fraction.FractionFormat(numberFormat12, numberFormat16);
        org.apache.commons.math.fraction.FractionFormat fractionFormat18 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj20 = fractionFormat18.parseObject("0 / 1");
        java.lang.Object obj22 = fractionFormat18.parseObject("0 / 1");
        java.text.NumberFormat numberFormat23 = fractionFormat18.getNumeratorFormat();
        java.text.NumberFormat numberFormat24 = fractionFormat18.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat25 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator27 = fractionFormat25.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat28 = fractionFormat25.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat29 = new org.apache.commons.math.fraction.FractionFormat(numberFormat24, numberFormat28);
        fractionFormat17.setNumeratorFormat(numberFormat28);
        fractionFormat0.setNumeratorFormat(numberFormat28);
        java.lang.Object obj33 = fractionFormat0.parseObject("100");
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(numberFormat3);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(fractionFormat6);
        org.junit.Assert.assertNotNull(obj8);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertNotNull(numberFormat11);
        org.junit.Assert.assertNotNull(numberFormat12);
        org.junit.Assert.assertNotNull(fractionFormat13);
        org.junit.Assert.assertNotNull(attributedCharacterIterator15);
        org.junit.Assert.assertNotNull(numberFormat16);
        org.junit.Assert.assertNotNull(fractionFormat18);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertNotNull(numberFormat23);
        org.junit.Assert.assertNotNull(numberFormat24);
        org.junit.Assert.assertNotNull(fractionFormat25);
        org.junit.Assert.assertNotNull(attributedCharacterIterator27);
        org.junit.Assert.assertNotNull(numberFormat28);
        org.junit.Assert.assertNotNull(obj33);
    }

    @Test
    public void test0402() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0402");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat1 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj3 = fractionFormat1.parseObject("0 / 1");
        java.lang.Object obj5 = fractionFormat1.parseObject("0 / 1");
        java.text.NumberFormat numberFormat6 = fractionFormat1.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat7 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj9 = fractionFormat7.parseObject("0 / 1");
        java.text.NumberFormat numberFormat10 = fractionFormat7.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = new org.apache.commons.math.fraction.FractionFormat(numberFormat6, numberFormat10);
        org.apache.commons.math.fraction.FractionFormat fractionFormat12 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj14 = fractionFormat12.parseObject("0 / 1");
        java.lang.Object obj16 = fractionFormat12.parseObject("0 / 1");
        java.text.NumberFormat numberFormat17 = fractionFormat12.getNumeratorFormat();
        fractionFormat11.setDenominatorFormat(numberFormat17);
        java.lang.Object obj19 = numberFormat17.clone();
        fractionFormat0.setNumeratorFormat(numberFormat17);
        java.text.NumberFormat numberFormat21 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat22 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj24 = fractionFormat22.parseObject("0 / 1");
        java.lang.Object obj26 = fractionFormat22.parseObject("0 / 1");
        java.text.NumberFormat numberFormat27 = fractionFormat22.getNumeratorFormat();
        java.text.NumberFormat numberFormat28 = fractionFormat22.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat29 = new org.apache.commons.math.fraction.FractionFormat(numberFormat28);
        fractionFormat0.setNumeratorFormat(numberFormat28);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj32 = numberFormat28.parseObject("hi!");
            org.junit.Assert.fail("Expected exception of type java.text.ParseException; message: Format.parseObject(String) failed");
        } catch (java.text.ParseException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(fractionFormat1);
        org.junit.Assert.assertNotNull(obj3);
        org.junit.Assert.assertNotNull(obj5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertNotNull(fractionFormat7);
        org.junit.Assert.assertNotNull(obj9);
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertNotNull(fractionFormat12);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertNotNull(obj16);
        org.junit.Assert.assertNotNull(numberFormat17);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(numberFormat21);
        org.junit.Assert.assertNotNull(fractionFormat22);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertNotNull(numberFormat27);
        org.junit.Assert.assertNotNull(numberFormat28);
    }

    @Test
    public void test0403() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0403");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.text.NumberFormat numberFormat3 = fractionFormat2.getDenominatorFormat();
        java.text.NumberFormat numberFormat4 = fractionFormat2.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj7 = fractionFormat5.parseObject("0 / 1");
        java.lang.Object obj9 = fractionFormat5.parseObject("0 / 1");
        java.text.NumberFormat numberFormat10 = fractionFormat5.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj13 = fractionFormat11.parseObject("0 / 1");
        java.text.NumberFormat numberFormat14 = fractionFormat11.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat15 = new org.apache.commons.math.fraction.FractionFormat(numberFormat10, numberFormat14);
        java.text.AttributedCharacterIterator attributedCharacterIterator17 = numberFormat10.formatToCharacterIterator((java.lang.Object) (-1));
        fractionFormat2.setDenominatorFormat(numberFormat10);
        java.text.ParsePosition parsePosition20 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj21 = fractionFormat2.parseObject("hi!", parsePosition20);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(numberFormat3);
        org.junit.Assert.assertNull(numberFormat4);
        org.junit.Assert.assertNotNull(fractionFormat5);
        org.junit.Assert.assertNotNull(obj7);
        org.junit.Assert.assertNotNull(obj9);
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertNotNull(fractionFormat11);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertNotNull(numberFormat14);
        org.junit.Assert.assertNotNull(attributedCharacterIterator17);
    }

    @Test
    public void test0404() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0404");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat5 = fractionFormat0.getNumeratorFormat();
        java.text.NumberFormat numberFormat6 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat7 = new org.apache.commons.math.fraction.FractionFormat(numberFormat6);
        org.apache.commons.math.fraction.FractionFormat fractionFormat8 = new org.apache.commons.math.fraction.FractionFormat(numberFormat6);
        java.text.NumberFormat numberFormat9 = null;
        java.text.NumberFormat numberFormat10 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = new org.apache.commons.math.fraction.FractionFormat(numberFormat9, numberFormat10);
        java.lang.Object obj12 = fractionFormat11.clone();
        java.text.NumberFormat numberFormat13 = null;
        java.text.NumberFormat numberFormat14 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat15 = new org.apache.commons.math.fraction.FractionFormat(numberFormat13, numberFormat14);
        java.text.NumberFormat numberFormat16 = fractionFormat15.getDenominatorFormat();
        java.text.NumberFormat numberFormat17 = fractionFormat15.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat18 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator20 = fractionFormat18.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat21 = fractionFormat18.getDenominatorFormat();
        fractionFormat15.setNumeratorFormat(numberFormat21);
        java.lang.Object obj23 = numberFormat21.clone();
        java.lang.String str25 = numberFormat21.format((java.lang.Object) (short) 10);
        org.apache.commons.math.fraction.FractionFormat fractionFormat26 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator28 = fractionFormat26.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat29 = fractionFormat26.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat30 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator32 = fractionFormat30.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat33 = fractionFormat30.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat34 = new org.apache.commons.math.fraction.FractionFormat(numberFormat29, numberFormat33);
        org.apache.commons.math.fraction.FractionFormat fractionFormat35 = new org.apache.commons.math.fraction.FractionFormat(numberFormat21, numberFormat29);
        fractionFormat11.setDenominatorFormat(numberFormat21);
        fractionFormat8.setDenominatorFormat(numberFormat21);
        java.text.NumberFormat numberFormat38 = fractionFormat8.getNumeratorFormat();
        java.lang.Object obj40 = numberFormat38.parseObject("10");
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertNull(numberFormat16);
        org.junit.Assert.assertNull(numberFormat17);
        org.junit.Assert.assertNotNull(fractionFormat18);
        org.junit.Assert.assertNotNull(attributedCharacterIterator20);
        org.junit.Assert.assertNotNull(numberFormat21);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "10" + "'", str25, "10");
        org.junit.Assert.assertNotNull(fractionFormat26);
        org.junit.Assert.assertNotNull(attributedCharacterIterator28);
        org.junit.Assert.assertNotNull(numberFormat29);
        org.junit.Assert.assertNotNull(fractionFormat30);
        org.junit.Assert.assertNotNull(attributedCharacterIterator32);
        org.junit.Assert.assertNotNull(numberFormat33);
        org.junit.Assert.assertNotNull(numberFormat38);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + 10L + "'", obj40, 10L);
    }

    @Test
    public void test0405() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0405");
        java.text.NumberFormat numberFormat0 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat1 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj4 = fractionFormat2.parseObject("0 / 1");
        java.lang.Object obj6 = fractionFormat2.parseObject("0 / 1");
        java.text.NumberFormat numberFormat7 = fractionFormat2.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat8 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj10 = fractionFormat8.parseObject("0 / 1");
        java.text.NumberFormat numberFormat11 = fractionFormat8.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat12 = new org.apache.commons.math.fraction.FractionFormat(numberFormat7, numberFormat11);
        org.apache.commons.math.fraction.FractionFormat fractionFormat13 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj15 = fractionFormat13.parseObject("0 / 1");
        java.lang.Object obj17 = fractionFormat13.parseObject("0 / 1");
        java.text.NumberFormat numberFormat18 = fractionFormat13.getNumeratorFormat();
        fractionFormat12.setDenominatorFormat(numberFormat18);
        java.lang.Object obj20 = numberFormat18.clone();
        fractionFormat1.setNumeratorFormat(numberFormat18);
        java.lang.Object obj22 = numberFormat18.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat23 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat18);
        java.text.NumberFormat numberFormat24 = null;
        java.text.NumberFormat numberFormat25 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat26 = new org.apache.commons.math.fraction.FractionFormat(numberFormat24, numberFormat25);
        java.text.NumberFormat numberFormat27 = fractionFormat26.getDenominatorFormat();
        java.text.NumberFormat numberFormat28 = fractionFormat26.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat29 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator31 = fractionFormat29.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat32 = fractionFormat29.getDenominatorFormat();
        fractionFormat26.setNumeratorFormat(numberFormat32);
        java.lang.Object obj34 = numberFormat32.clone();
        java.lang.String str36 = numberFormat32.format((java.lang.Object) (short) 10);
        java.text.NumberFormat numberFormat37 = null;
        java.text.NumberFormat numberFormat38 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat39 = new org.apache.commons.math.fraction.FractionFormat(numberFormat37, numberFormat38);
        java.text.NumberFormat numberFormat40 = fractionFormat39.getDenominatorFormat();
        java.text.NumberFormat numberFormat41 = fractionFormat39.getNumeratorFormat();
        java.text.NumberFormat numberFormat42 = fractionFormat39.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat43 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator45 = fractionFormat43.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat46 = fractionFormat43.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat47 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator49 = fractionFormat47.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat50 = fractionFormat47.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat51 = new org.apache.commons.math.fraction.FractionFormat(numberFormat46, numberFormat50);
        fractionFormat39.setNumeratorFormat(numberFormat46);
        org.apache.commons.math.fraction.FractionFormat fractionFormat53 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj55 = fractionFormat53.parseObject("0 / 1");
        java.text.NumberFormat numberFormat56 = fractionFormat53.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat57 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator59 = fractionFormat57.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat60 = fractionFormat57.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat61 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator63 = fractionFormat61.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat64 = fractionFormat61.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat65 = new org.apache.commons.math.fraction.FractionFormat(numberFormat60, numberFormat64);
        org.apache.commons.math.fraction.FractionFormat fractionFormat66 = new org.apache.commons.math.fraction.FractionFormat(numberFormat56, numberFormat60);
        org.apache.commons.math.fraction.FractionFormat fractionFormat67 = new org.apache.commons.math.fraction.FractionFormat(numberFormat46, numberFormat56);
        org.apache.commons.math.fraction.FractionFormat fractionFormat68 = new org.apache.commons.math.fraction.FractionFormat(numberFormat32, numberFormat56);
        org.apache.commons.math.fraction.FractionFormat fractionFormat69 = new org.apache.commons.math.fraction.FractionFormat(numberFormat32);
        org.apache.commons.math.fraction.Fraction fraction71 = fractionFormat69.parse("100");
        java.text.NumberFormat numberFormat72 = fractionFormat69.getNumeratorFormat();
        // The following exception was thrown during execution in test generation
        try {
            java.text.AttributedCharacterIterator attributedCharacterIterator73 = fractionFormat23.formatToCharacterIterator((java.lang.Object) numberFormat72);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot format given object as a fraction");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat1);
        org.junit.Assert.assertNotNull(fractionFormat2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(obj6);
        org.junit.Assert.assertNotNull(numberFormat7);
        org.junit.Assert.assertNotNull(fractionFormat8);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertNotNull(numberFormat11);
        org.junit.Assert.assertNotNull(fractionFormat13);
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertNotNull(numberFormat18);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertNull(numberFormat27);
        org.junit.Assert.assertNull(numberFormat28);
        org.junit.Assert.assertNotNull(fractionFormat29);
        org.junit.Assert.assertNotNull(attributedCharacterIterator31);
        org.junit.Assert.assertNotNull(numberFormat32);
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "10" + "'", str36, "10");
        org.junit.Assert.assertNull(numberFormat40);
        org.junit.Assert.assertNull(numberFormat41);
        org.junit.Assert.assertNull(numberFormat42);
        org.junit.Assert.assertNotNull(fractionFormat43);
        org.junit.Assert.assertNotNull(attributedCharacterIterator45);
        org.junit.Assert.assertNotNull(numberFormat46);
        org.junit.Assert.assertNotNull(fractionFormat47);
        org.junit.Assert.assertNotNull(attributedCharacterIterator49);
        org.junit.Assert.assertNotNull(numberFormat50);
        org.junit.Assert.assertNotNull(fractionFormat53);
        org.junit.Assert.assertNotNull(obj55);
        org.junit.Assert.assertNotNull(numberFormat56);
        org.junit.Assert.assertNotNull(fractionFormat57);
        org.junit.Assert.assertNotNull(attributedCharacterIterator59);
        org.junit.Assert.assertNotNull(numberFormat60);
        org.junit.Assert.assertNotNull(fractionFormat61);
        org.junit.Assert.assertNotNull(attributedCharacterIterator63);
        org.junit.Assert.assertNotNull(numberFormat64);
        org.junit.Assert.assertNotNull(fraction71);
        org.junit.Assert.assertNotNull(numberFormat72);
    }

    @Test
    public void test0406() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0406");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.text.NumberFormat numberFormat3 = fractionFormat2.getDenominatorFormat();
        java.text.NumberFormat numberFormat4 = fractionFormat2.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator7 = fractionFormat5.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat8 = fractionFormat5.getDenominatorFormat();
        fractionFormat2.setNumeratorFormat(numberFormat8);
        java.lang.Object obj10 = numberFormat8.clone();
        java.lang.String str12 = numberFormat8.format((java.lang.Object) (short) 10);
        java.text.NumberFormat numberFormat13 = null;
        java.text.NumberFormat numberFormat14 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat15 = new org.apache.commons.math.fraction.FractionFormat(numberFormat13, numberFormat14);
        java.text.NumberFormat numberFormat16 = fractionFormat15.getDenominatorFormat();
        java.text.NumberFormat numberFormat17 = fractionFormat15.getNumeratorFormat();
        java.text.NumberFormat numberFormat18 = fractionFormat15.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat19 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator21 = fractionFormat19.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat22 = fractionFormat19.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat23 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator25 = fractionFormat23.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat26 = fractionFormat23.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat27 = new org.apache.commons.math.fraction.FractionFormat(numberFormat22, numberFormat26);
        fractionFormat15.setNumeratorFormat(numberFormat22);
        org.apache.commons.math.fraction.FractionFormat fractionFormat29 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj31 = fractionFormat29.parseObject("0 / 1");
        java.text.NumberFormat numberFormat32 = fractionFormat29.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat33 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator35 = fractionFormat33.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat36 = fractionFormat33.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat37 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator39 = fractionFormat37.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat40 = fractionFormat37.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat41 = new org.apache.commons.math.fraction.FractionFormat(numberFormat36, numberFormat40);
        org.apache.commons.math.fraction.FractionFormat fractionFormat42 = new org.apache.commons.math.fraction.FractionFormat(numberFormat32, numberFormat36);
        org.apache.commons.math.fraction.FractionFormat fractionFormat43 = new org.apache.commons.math.fraction.FractionFormat(numberFormat22, numberFormat32);
        org.apache.commons.math.fraction.FractionFormat fractionFormat44 = new org.apache.commons.math.fraction.FractionFormat(numberFormat8, numberFormat32);
        java.lang.Object obj45 = fractionFormat44.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat46 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj48 = fractionFormat46.parseObject("0 / 1");
        java.lang.Object obj50 = fractionFormat46.parseObject("0 / 1");
        java.text.NumberFormat numberFormat51 = fractionFormat46.getNumeratorFormat();
        java.text.NumberFormat numberFormat52 = fractionFormat46.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat53 = new org.apache.commons.math.fraction.FractionFormat(numberFormat52);
        org.apache.commons.math.fraction.FractionFormat fractionFormat54 = new org.apache.commons.math.fraction.FractionFormat(numberFormat52);
        fractionFormat44.setDenominatorFormat(numberFormat52);
        java.lang.StringBuffer stringBuffer57 = null;
        java.text.FieldPosition fieldPosition58 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer59 = fractionFormat44.format((java.lang.Object) 0.0f, stringBuffer57, fieldPosition58);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(numberFormat3);
        org.junit.Assert.assertNull(numberFormat4);
        org.junit.Assert.assertNotNull(fractionFormat5);
        org.junit.Assert.assertNotNull(attributedCharacterIterator7);
        org.junit.Assert.assertNotNull(numberFormat8);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "10" + "'", str12, "10");
        org.junit.Assert.assertNull(numberFormat16);
        org.junit.Assert.assertNull(numberFormat17);
        org.junit.Assert.assertNull(numberFormat18);
        org.junit.Assert.assertNotNull(fractionFormat19);
        org.junit.Assert.assertNotNull(attributedCharacterIterator21);
        org.junit.Assert.assertNotNull(numberFormat22);
        org.junit.Assert.assertNotNull(fractionFormat23);
        org.junit.Assert.assertNotNull(attributedCharacterIterator25);
        org.junit.Assert.assertNotNull(numberFormat26);
        org.junit.Assert.assertNotNull(fractionFormat29);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertNotNull(numberFormat32);
        org.junit.Assert.assertNotNull(fractionFormat33);
        org.junit.Assert.assertNotNull(attributedCharacterIterator35);
        org.junit.Assert.assertNotNull(numberFormat36);
        org.junit.Assert.assertNotNull(fractionFormat37);
        org.junit.Assert.assertNotNull(attributedCharacterIterator39);
        org.junit.Assert.assertNotNull(numberFormat40);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertNotNull(fractionFormat46);
        org.junit.Assert.assertNotNull(obj48);
        org.junit.Assert.assertNotNull(obj50);
        org.junit.Assert.assertNotNull(numberFormat51);
        org.junit.Assert.assertNotNull(numberFormat52);
    }

    @Test
    public void test0407() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0407");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.text.NumberFormat numberFormat3 = fractionFormat2.getDenominatorFormat();
        java.text.NumberFormat numberFormat4 = fractionFormat2.getNumeratorFormat();
        java.text.NumberFormat numberFormat5 = fractionFormat2.getNumeratorFormat();
        java.text.NumberFormat numberFormat6 = fractionFormat2.getDenominatorFormat();
        java.text.NumberFormat numberFormat7 = fractionFormat2.getDenominatorFormat();
        java.text.ParsePosition parsePosition9 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj10 = fractionFormat2.parseObject("10", parsePosition9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(numberFormat3);
        org.junit.Assert.assertNull(numberFormat4);
        org.junit.Assert.assertNull(numberFormat5);
        org.junit.Assert.assertNull(numberFormat6);
        org.junit.Assert.assertNull(numberFormat7);
    }

    @Test
    public void test0408() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0408");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat5 = fractionFormat0.getNumeratorFormat();
        java.lang.Object obj6 = numberFormat5.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat7 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj9 = fractionFormat7.parseObject("0 / 1");
        java.lang.Object obj11 = fractionFormat7.parseObject("0 / 1");
        java.text.NumberFormat numberFormat12 = fractionFormat7.getNumeratorFormat();
        java.text.NumberFormat numberFormat13 = fractionFormat7.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat14 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator16 = fractionFormat14.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat17 = fractionFormat14.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat18 = new org.apache.commons.math.fraction.FractionFormat(numberFormat13, numberFormat17);
        org.apache.commons.math.fraction.FractionFormat fractionFormat19 = new org.apache.commons.math.fraction.FractionFormat(numberFormat5, numberFormat17);
        java.text.NumberFormat numberFormat20 = null;
        java.text.NumberFormat numberFormat21 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat22 = new org.apache.commons.math.fraction.FractionFormat(numberFormat20, numberFormat21);
        java.text.NumberFormat numberFormat23 = fractionFormat22.getDenominatorFormat();
        java.text.NumberFormat numberFormat24 = fractionFormat22.getNumeratorFormat();
        java.text.NumberFormat numberFormat25 = fractionFormat22.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat26 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator28 = fractionFormat26.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat29 = fractionFormat26.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat30 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator32 = fractionFormat30.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat33 = fractionFormat30.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat34 = new org.apache.commons.math.fraction.FractionFormat(numberFormat29, numberFormat33);
        fractionFormat22.setNumeratorFormat(numberFormat29);
        org.apache.commons.math.fraction.FractionFormat fractionFormat36 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj38 = fractionFormat36.parseObject("0 / 1");
        java.text.NumberFormat numberFormat39 = fractionFormat36.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat40 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator42 = fractionFormat40.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat43 = fractionFormat40.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat44 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator46 = fractionFormat44.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat47 = fractionFormat44.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat48 = new org.apache.commons.math.fraction.FractionFormat(numberFormat43, numberFormat47);
        org.apache.commons.math.fraction.FractionFormat fractionFormat49 = new org.apache.commons.math.fraction.FractionFormat(numberFormat39, numberFormat43);
        org.apache.commons.math.fraction.FractionFormat fractionFormat50 = new org.apache.commons.math.fraction.FractionFormat(numberFormat29, numberFormat39);
        org.apache.commons.math.fraction.FractionFormat fractionFormat51 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj53 = fractionFormat51.parseObject("0 / 1");
        java.lang.Object obj55 = fractionFormat51.parseObject("0 / 1");
        java.text.NumberFormat numberFormat56 = fractionFormat51.getNumeratorFormat();
        java.lang.Object obj57 = numberFormat56.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat58 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj60 = fractionFormat58.parseObject("0 / 1");
        java.lang.Object obj62 = fractionFormat58.parseObject("0 / 1");
        java.text.NumberFormat numberFormat63 = fractionFormat58.getNumeratorFormat();
        java.text.NumberFormat numberFormat64 = fractionFormat58.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat65 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator67 = fractionFormat65.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat68 = fractionFormat65.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat69 = new org.apache.commons.math.fraction.FractionFormat(numberFormat64, numberFormat68);
        org.apache.commons.math.fraction.FractionFormat fractionFormat70 = new org.apache.commons.math.fraction.FractionFormat(numberFormat56, numberFormat68);
        java.text.NumberFormat numberFormat71 = fractionFormat70.getNumeratorFormat();
        fractionFormat50.setDenominatorFormat(numberFormat71);
        org.apache.commons.math.fraction.FractionFormat fractionFormat73 = new org.apache.commons.math.fraction.FractionFormat(numberFormat17, numberFormat71);
        org.apache.commons.math.fraction.FractionFormat fractionFormat74 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.Fraction fraction76 = fractionFormat74.parse("0 / 1");
        java.lang.String str77 = org.apache.commons.math.fraction.FractionFormat.formatFraction(fraction76);
        java.lang.String str78 = org.apache.commons.math.fraction.FractionFormat.formatFraction(fraction76);
        java.lang.String str79 = org.apache.commons.math.fraction.FractionFormat.formatFraction(fraction76);
        java.lang.String str80 = org.apache.commons.math.fraction.FractionFormat.formatFraction(fraction76);
        java.lang.String str81 = org.apache.commons.math.fraction.FractionFormat.formatFraction(fraction76);
        java.lang.String str82 = org.apache.commons.math.fraction.FractionFormat.formatFraction(fraction76);
        java.lang.String str83 = org.apache.commons.math.fraction.FractionFormat.formatFraction(fraction76);
        java.lang.StringBuffer stringBuffer84 = null;
        java.text.FieldPosition fieldPosition85 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer86 = fractionFormat73.format(fraction76, stringBuffer84, fieldPosition85);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(obj6);
        org.junit.Assert.assertNotNull(fractionFormat7);
        org.junit.Assert.assertNotNull(obj9);
        org.junit.Assert.assertNotNull(obj11);
        org.junit.Assert.assertNotNull(numberFormat12);
        org.junit.Assert.assertNotNull(numberFormat13);
        org.junit.Assert.assertNotNull(fractionFormat14);
        org.junit.Assert.assertNotNull(attributedCharacterIterator16);
        org.junit.Assert.assertNotNull(numberFormat17);
        org.junit.Assert.assertNull(numberFormat23);
        org.junit.Assert.assertNull(numberFormat24);
        org.junit.Assert.assertNull(numberFormat25);
        org.junit.Assert.assertNotNull(fractionFormat26);
        org.junit.Assert.assertNotNull(attributedCharacterIterator28);
        org.junit.Assert.assertNotNull(numberFormat29);
        org.junit.Assert.assertNotNull(fractionFormat30);
        org.junit.Assert.assertNotNull(attributedCharacterIterator32);
        org.junit.Assert.assertNotNull(numberFormat33);
        org.junit.Assert.assertNotNull(fractionFormat36);
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertNotNull(numberFormat39);
        org.junit.Assert.assertNotNull(fractionFormat40);
        org.junit.Assert.assertNotNull(attributedCharacterIterator42);
        org.junit.Assert.assertNotNull(numberFormat43);
        org.junit.Assert.assertNotNull(fractionFormat44);
        org.junit.Assert.assertNotNull(attributedCharacterIterator46);
        org.junit.Assert.assertNotNull(numberFormat47);
        org.junit.Assert.assertNotNull(fractionFormat51);
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertNotNull(obj55);
        org.junit.Assert.assertNotNull(numberFormat56);
        org.junit.Assert.assertNotNull(obj57);
        org.junit.Assert.assertNotNull(fractionFormat58);
        org.junit.Assert.assertNotNull(obj60);
        org.junit.Assert.assertNotNull(obj62);
        org.junit.Assert.assertNotNull(numberFormat63);
        org.junit.Assert.assertNotNull(numberFormat64);
        org.junit.Assert.assertNotNull(fractionFormat65);
        org.junit.Assert.assertNotNull(attributedCharacterIterator67);
        org.junit.Assert.assertNotNull(numberFormat68);
        org.junit.Assert.assertNotNull(numberFormat71);
        org.junit.Assert.assertNotNull(fractionFormat74);
        org.junit.Assert.assertNotNull(fraction76);
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "0 / 1" + "'", str77, "0 / 1");
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "0 / 1" + "'", str78, "0 / 1");
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "0 / 1" + "'", str79, "0 / 1");
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "0 / 1" + "'", str80, "0 / 1");
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "0 / 1" + "'", str81, "0 / 1");
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "0 / 1" + "'", str82, "0 / 1");
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "0 / 1" + "'", str83, "0 / 1");
    }

    @Test
    public void test0409() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0409");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator2 = fractionFormat0.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat3 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat4 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator6 = fractionFormat4.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat7 = fractionFormat4.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat8 = new org.apache.commons.math.fraction.FractionFormat(numberFormat3, numberFormat7);
        java.text.NumberFormat numberFormat9 = fractionFormat8.getDenominatorFormat();
        java.lang.Object obj10 = fractionFormat8.clone();
        java.text.NumberFormat numberFormat11 = null;
        java.text.NumberFormat numberFormat12 = null;
        java.text.NumberFormat numberFormat13 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat14 = new org.apache.commons.math.fraction.FractionFormat(numberFormat12, numberFormat13);
        java.text.NumberFormat numberFormat15 = fractionFormat14.getDenominatorFormat();
        java.text.NumberFormat numberFormat16 = fractionFormat14.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat17 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator19 = fractionFormat17.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat20 = fractionFormat17.getDenominatorFormat();
        fractionFormat14.setNumeratorFormat(numberFormat20);
        org.apache.commons.math.fraction.FractionFormat fractionFormat22 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj24 = fractionFormat22.parseObject("0 / 1");
        java.text.NumberFormat numberFormat25 = fractionFormat22.getNumeratorFormat();
        fractionFormat14.setNumeratorFormat(numberFormat25);
        org.apache.commons.math.fraction.FractionFormat fractionFormat27 = new org.apache.commons.math.fraction.FractionFormat(numberFormat11, numberFormat25);
        java.text.NumberFormat numberFormat28 = null;
        java.text.NumberFormat numberFormat29 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat30 = new org.apache.commons.math.fraction.FractionFormat(numberFormat28, numberFormat29);
        java.text.NumberFormat numberFormat31 = fractionFormat30.getDenominatorFormat();
        java.text.NumberFormat numberFormat32 = fractionFormat30.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat33 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator35 = fractionFormat33.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat36 = fractionFormat33.getDenominatorFormat();
        fractionFormat30.setNumeratorFormat(numberFormat36);
        org.apache.commons.math.fraction.FractionFormat fractionFormat38 = new org.apache.commons.math.fraction.FractionFormat(numberFormat11, numberFormat36);
        org.apache.commons.math.fraction.FractionFormat fractionFormat39 = new org.apache.commons.math.fraction.FractionFormat(numberFormat36);
        org.apache.commons.math.fraction.FractionFormat fractionFormat40 = new org.apache.commons.math.fraction.FractionFormat(numberFormat36);
        // The following exception was thrown during execution in test generation
        try {
            java.text.AttributedCharacterIterator attributedCharacterIterator41 = fractionFormat8.formatToCharacterIterator((java.lang.Object) numberFormat36);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot format given object as a fraction");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(attributedCharacterIterator2);
        org.junit.Assert.assertNotNull(numberFormat3);
        org.junit.Assert.assertNotNull(fractionFormat4);
        org.junit.Assert.assertNotNull(attributedCharacterIterator6);
        org.junit.Assert.assertNotNull(numberFormat7);
        org.junit.Assert.assertNotNull(numberFormat9);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertNull(numberFormat15);
        org.junit.Assert.assertNull(numberFormat16);
        org.junit.Assert.assertNotNull(fractionFormat17);
        org.junit.Assert.assertNotNull(attributedCharacterIterator19);
        org.junit.Assert.assertNotNull(numberFormat20);
        org.junit.Assert.assertNotNull(fractionFormat22);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertNotNull(numberFormat25);
        org.junit.Assert.assertNull(numberFormat31);
        org.junit.Assert.assertNull(numberFormat32);
        org.junit.Assert.assertNotNull(fractionFormat33);
        org.junit.Assert.assertNotNull(attributedCharacterIterator35);
        org.junit.Assert.assertNotNull(numberFormat36);
    }

    @Test
    public void test0410() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0410");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat5 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat6 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj8 = fractionFormat6.parseObject("0 / 1");
        java.text.NumberFormat numberFormat9 = fractionFormat6.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat10 = new org.apache.commons.math.fraction.FractionFormat(numberFormat5, numberFormat9);
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj13 = fractionFormat11.parseObject("0 / 1");
        java.lang.Object obj15 = fractionFormat11.parseObject("0 / 1");
        java.text.NumberFormat numberFormat16 = fractionFormat11.getNumeratorFormat();
        java.text.NumberFormat numberFormat17 = fractionFormat11.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat18 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator20 = fractionFormat18.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat21 = fractionFormat18.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat22 = new org.apache.commons.math.fraction.FractionFormat(numberFormat17, numberFormat21);
        org.apache.commons.math.fraction.FractionFormat fractionFormat23 = new org.apache.commons.math.fraction.FractionFormat(numberFormat5, numberFormat21);
        java.lang.Object obj25 = fractionFormat23.parseObject("0 / 1");
        java.lang.Class<?> wildcardClass26 = fractionFormat23.getClass();
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(fractionFormat6);
        org.junit.Assert.assertNotNull(obj8);
        org.junit.Assert.assertNotNull(numberFormat9);
        org.junit.Assert.assertNotNull(fractionFormat11);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertNotNull(numberFormat16);
        org.junit.Assert.assertNotNull(numberFormat17);
        org.junit.Assert.assertNotNull(fractionFormat18);
        org.junit.Assert.assertNotNull(attributedCharacterIterator20);
        org.junit.Assert.assertNotNull(numberFormat21);
        org.junit.Assert.assertNotNull(obj25);
        org.junit.Assert.assertNotNull(wildcardClass26);
    }

    @Test
    public void test0411() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0411");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat5 = fractionFormat0.getNumeratorFormat();
        java.text.NumberFormat numberFormat6 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat7 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator9 = fractionFormat7.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat10 = fractionFormat7.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = new org.apache.commons.math.fraction.FractionFormat(numberFormat6, numberFormat10);
        org.apache.commons.math.fraction.FractionFormat fractionFormat12 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator14 = fractionFormat12.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat15 = fractionFormat12.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat16 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator18 = fractionFormat16.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat19 = fractionFormat16.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat20 = new org.apache.commons.math.fraction.FractionFormat(numberFormat15, numberFormat19);
        org.apache.commons.math.fraction.FractionFormat fractionFormat21 = new org.apache.commons.math.fraction.FractionFormat(numberFormat6, numberFormat19);
        java.text.NumberFormat numberFormat22 = fractionFormat21.getDenominatorFormat();
        java.lang.Object obj24 = numberFormat22.parseObject("-1 / 1");
        org.apache.commons.math.fraction.FractionFormat fractionFormat25 = new org.apache.commons.math.fraction.FractionFormat(numberFormat22);
        org.apache.commons.math.fraction.FractionFormat fractionFormat26 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.Fraction fraction28 = fractionFormat26.parse("0 / 1");
        java.lang.String str29 = org.apache.commons.math.fraction.FractionFormat.formatFraction(fraction28);
        java.lang.String str30 = org.apache.commons.math.fraction.FractionFormat.formatFraction(fraction28);
        java.lang.String str31 = org.apache.commons.math.fraction.FractionFormat.formatFraction(fraction28);
        java.lang.String str32 = org.apache.commons.math.fraction.FractionFormat.formatFraction(fraction28);
        java.lang.StringBuffer stringBuffer33 = null;
        java.text.FieldPosition fieldPosition34 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer35 = fractionFormat25.format(fraction28, stringBuffer33, fieldPosition34);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertNotNull(fractionFormat7);
        org.junit.Assert.assertNotNull(attributedCharacterIterator9);
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertNotNull(fractionFormat12);
        org.junit.Assert.assertNotNull(attributedCharacterIterator14);
        org.junit.Assert.assertNotNull(numberFormat15);
        org.junit.Assert.assertNotNull(fractionFormat16);
        org.junit.Assert.assertNotNull(attributedCharacterIterator18);
        org.junit.Assert.assertNotNull(numberFormat19);
        org.junit.Assert.assertNotNull(numberFormat22);
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + (-1L) + "'", obj24, (-1L));
        org.junit.Assert.assertNotNull(fractionFormat26);
        org.junit.Assert.assertNotNull(fraction28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "0 / 1" + "'", str29, "0 / 1");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "0 / 1" + "'", str30, "0 / 1");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "0 / 1" + "'", str31, "0 / 1");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "0 / 1" + "'", str32, "0 / 1");
    }

    @Test
    public void test0412() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0412");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat1 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj3 = fractionFormat1.parseObject("0 / 1");
        java.lang.Object obj5 = fractionFormat1.parseObject("0 / 1");
        java.text.NumberFormat numberFormat6 = fractionFormat1.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat7 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj9 = fractionFormat7.parseObject("0 / 1");
        java.text.NumberFormat numberFormat10 = fractionFormat7.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = new org.apache.commons.math.fraction.FractionFormat(numberFormat6, numberFormat10);
        org.apache.commons.math.fraction.FractionFormat fractionFormat12 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj14 = fractionFormat12.parseObject("0 / 1");
        java.lang.Object obj16 = fractionFormat12.parseObject("0 / 1");
        java.text.NumberFormat numberFormat17 = fractionFormat12.getNumeratorFormat();
        fractionFormat11.setDenominatorFormat(numberFormat17);
        java.lang.Object obj19 = numberFormat17.clone();
        fractionFormat0.setNumeratorFormat(numberFormat17);
        java.text.NumberFormat numberFormat21 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat22 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj24 = fractionFormat22.parseObject("0 / 1");
        java.lang.Object obj26 = fractionFormat22.parseObject("0 / 1");
        java.lang.Object obj28 = fractionFormat22.parseObject("0 / 1");
        java.text.NumberFormat numberFormat29 = fractionFormat22.getNumeratorFormat();
        java.lang.Object obj31 = numberFormat29.parseObject("10");
        org.apache.commons.math.fraction.FractionFormat fractionFormat32 = new org.apache.commons.math.fraction.FractionFormat(numberFormat29);
        java.lang.Object obj33 = fractionFormat32.clone();
        java.lang.StringBuffer stringBuffer34 = null;
        java.text.FieldPosition fieldPosition35 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer36 = fractionFormat0.format((java.lang.Object) fractionFormat32, stringBuffer34, fieldPosition35);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot format given object as a fraction");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(fractionFormat1);
        org.junit.Assert.assertNotNull(obj3);
        org.junit.Assert.assertNotNull(obj5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertNotNull(fractionFormat7);
        org.junit.Assert.assertNotNull(obj9);
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertNotNull(fractionFormat12);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertNotNull(obj16);
        org.junit.Assert.assertNotNull(numberFormat17);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(numberFormat21);
        org.junit.Assert.assertNotNull(fractionFormat22);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertNotNull(numberFormat29);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + 10L + "'", obj31, 10L);
        org.junit.Assert.assertNotNull(obj33);
    }

    @Test
    public void test0413() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0413");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.text.NumberFormat numberFormat3 = fractionFormat2.getDenominatorFormat();
        java.text.NumberFormat numberFormat4 = fractionFormat2.getNumeratorFormat();
        java.text.NumberFormat numberFormat5 = fractionFormat2.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat6 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj8 = fractionFormat6.parseObject("0 / 1");
        java.lang.Object obj10 = fractionFormat6.parseObject("0 / 1");
        java.text.NumberFormat numberFormat11 = fractionFormat6.getNumeratorFormat();
        java.text.NumberFormat numberFormat12 = fractionFormat6.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat13 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator15 = fractionFormat13.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat16 = fractionFormat13.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat17 = new org.apache.commons.math.fraction.FractionFormat(numberFormat12, numberFormat16);
        org.apache.commons.math.fraction.FractionFormat fractionFormat18 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator20 = fractionFormat18.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat21 = fractionFormat18.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat22 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator24 = fractionFormat22.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat25 = fractionFormat22.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat26 = new org.apache.commons.math.fraction.FractionFormat(numberFormat21, numberFormat25);
        fractionFormat17.setNumeratorFormat(numberFormat21);
        java.text.NumberFormat numberFormat28 = fractionFormat17.getDenominatorFormat();
        java.text.NumberFormat numberFormat29 = fractionFormat17.getDenominatorFormat();
        java.text.NumberFormat numberFormat30 = null;
        java.text.NumberFormat numberFormat31 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat32 = new org.apache.commons.math.fraction.FractionFormat(numberFormat30, numberFormat31);
        java.text.NumberFormat numberFormat33 = fractionFormat32.getDenominatorFormat();
        java.text.NumberFormat numberFormat34 = fractionFormat32.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat35 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator37 = fractionFormat35.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat38 = fractionFormat35.getDenominatorFormat();
        fractionFormat32.setNumeratorFormat(numberFormat38);
        java.lang.Object obj40 = numberFormat38.clone();
        java.lang.String str42 = numberFormat38.format((java.lang.Object) (short) 10);
        org.apache.commons.math.fraction.FractionFormat fractionFormat43 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator45 = fractionFormat43.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat46 = fractionFormat43.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat47 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator49 = fractionFormat47.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat50 = fractionFormat47.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat51 = new org.apache.commons.math.fraction.FractionFormat(numberFormat46, numberFormat50);
        org.apache.commons.math.fraction.FractionFormat fractionFormat52 = new org.apache.commons.math.fraction.FractionFormat(numberFormat38, numberFormat46);
        fractionFormat17.setDenominatorFormat(numberFormat38);
        java.lang.StringBuffer stringBuffer54 = null;
        java.text.FieldPosition fieldPosition55 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer56 = fractionFormat2.format((java.lang.Object) numberFormat38, stringBuffer54, fieldPosition55);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot format given object as a fraction");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(numberFormat3);
        org.junit.Assert.assertNull(numberFormat4);
        org.junit.Assert.assertNull(numberFormat5);
        org.junit.Assert.assertNotNull(fractionFormat6);
        org.junit.Assert.assertNotNull(obj8);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertNotNull(numberFormat11);
        org.junit.Assert.assertNotNull(numberFormat12);
        org.junit.Assert.assertNotNull(fractionFormat13);
        org.junit.Assert.assertNotNull(attributedCharacterIterator15);
        org.junit.Assert.assertNotNull(numberFormat16);
        org.junit.Assert.assertNotNull(fractionFormat18);
        org.junit.Assert.assertNotNull(attributedCharacterIterator20);
        org.junit.Assert.assertNotNull(numberFormat21);
        org.junit.Assert.assertNotNull(fractionFormat22);
        org.junit.Assert.assertNotNull(attributedCharacterIterator24);
        org.junit.Assert.assertNotNull(numberFormat25);
        org.junit.Assert.assertNotNull(numberFormat28);
        org.junit.Assert.assertNotNull(numberFormat29);
        org.junit.Assert.assertNull(numberFormat33);
        org.junit.Assert.assertNull(numberFormat34);
        org.junit.Assert.assertNotNull(fractionFormat35);
        org.junit.Assert.assertNotNull(attributedCharacterIterator37);
        org.junit.Assert.assertNotNull(numberFormat38);
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "10" + "'", str42, "10");
        org.junit.Assert.assertNotNull(fractionFormat43);
        org.junit.Assert.assertNotNull(attributedCharacterIterator45);
        org.junit.Assert.assertNotNull(numberFormat46);
        org.junit.Assert.assertNotNull(fractionFormat47);
        org.junit.Assert.assertNotNull(attributedCharacterIterator49);
        org.junit.Assert.assertNotNull(numberFormat50);
    }

    @Test
    public void test0414() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0414");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.text.NumberFormat numberFormat3 = fractionFormat2.getDenominatorFormat();
        java.text.NumberFormat numberFormat4 = fractionFormat2.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator7 = fractionFormat5.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat8 = fractionFormat5.getDenominatorFormat();
        fractionFormat2.setNumeratorFormat(numberFormat8);
        java.lang.Object obj10 = numberFormat8.clone();
        java.lang.String str12 = numberFormat8.format((java.lang.Object) (short) 10);
        org.apache.commons.math.fraction.FractionFormat fractionFormat13 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator15 = fractionFormat13.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat16 = fractionFormat13.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat17 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator19 = fractionFormat17.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat20 = fractionFormat17.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat21 = new org.apache.commons.math.fraction.FractionFormat(numberFormat16, numberFormat20);
        org.apache.commons.math.fraction.FractionFormat fractionFormat22 = new org.apache.commons.math.fraction.FractionFormat(numberFormat8, numberFormat16);
        java.text.NumberFormat numberFormat23 = null;
        java.text.NumberFormat numberFormat24 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat25 = new org.apache.commons.math.fraction.FractionFormat(numberFormat23, numberFormat24);
        java.text.NumberFormat numberFormat26 = fractionFormat25.getDenominatorFormat();
        java.text.NumberFormat numberFormat27 = fractionFormat25.getNumeratorFormat();
        java.text.NumberFormat numberFormat28 = fractionFormat25.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat29 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj31 = fractionFormat29.parseObject("0 / 1");
        java.lang.Object obj33 = fractionFormat29.parseObject("0 / 1");
        java.text.NumberFormat numberFormat34 = fractionFormat29.getNumeratorFormat();
        java.lang.Object obj35 = numberFormat34.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat36 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj38 = fractionFormat36.parseObject("0 / 1");
        java.lang.Object obj40 = fractionFormat36.parseObject("0 / 1");
        java.text.NumberFormat numberFormat41 = fractionFormat36.getNumeratorFormat();
        java.text.NumberFormat numberFormat42 = fractionFormat36.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat43 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator45 = fractionFormat43.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat46 = fractionFormat43.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat47 = new org.apache.commons.math.fraction.FractionFormat(numberFormat42, numberFormat46);
        org.apache.commons.math.fraction.FractionFormat fractionFormat48 = new org.apache.commons.math.fraction.FractionFormat(numberFormat34, numberFormat46);
        fractionFormat25.setNumeratorFormat(numberFormat34);
        org.apache.commons.math.fraction.FractionFormat fractionFormat50 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj52 = fractionFormat50.parseObject("0 / 1");
        java.lang.Object obj54 = fractionFormat50.parseObject("0 / 1");
        java.text.NumberFormat numberFormat55 = fractionFormat50.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat56 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj58 = fractionFormat56.parseObject("0 / 1");
        java.text.NumberFormat numberFormat59 = fractionFormat56.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat60 = new org.apache.commons.math.fraction.FractionFormat(numberFormat55, numberFormat59);
        org.apache.commons.math.fraction.FractionFormat fractionFormat61 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj63 = fractionFormat61.parseObject("0 / 1");
        java.lang.Object obj65 = fractionFormat61.parseObject("0 / 1");
        java.text.NumberFormat numberFormat66 = fractionFormat61.getNumeratorFormat();
        fractionFormat60.setDenominatorFormat(numberFormat66);
        java.lang.Object obj68 = numberFormat66.clone();
        fractionFormat25.setDenominatorFormat(numberFormat66);
        fractionFormat22.setDenominatorFormat(numberFormat66);
        org.apache.commons.math.fraction.FractionFormat fractionFormat71 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj73 = fractionFormat71.parseObject("0 / 1");
        java.text.NumberFormat numberFormat74 = null;
        java.text.NumberFormat numberFormat75 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat76 = new org.apache.commons.math.fraction.FractionFormat(numberFormat74, numberFormat75);
        java.text.NumberFormat numberFormat77 = fractionFormat76.getDenominatorFormat();
        java.text.NumberFormat numberFormat78 = fractionFormat76.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat79 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator81 = fractionFormat79.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat82 = fractionFormat79.getDenominatorFormat();
        fractionFormat76.setNumeratorFormat(numberFormat82);
        org.apache.commons.math.fraction.FractionFormat fractionFormat84 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj86 = fractionFormat84.parseObject("0 / 1");
        java.lang.Object obj88 = fractionFormat84.parseObject("0 / 1");
        java.text.NumberFormat numberFormat89 = fractionFormat84.getNumeratorFormat();
        fractionFormat76.setDenominatorFormat(numberFormat89);
        fractionFormat71.setDenominatorFormat(numberFormat89);
        // The following exception was thrown during execution in test generation
        try {
            java.text.AttributedCharacterIterator attributedCharacterIterator92 = fractionFormat22.formatToCharacterIterator((java.lang.Object) numberFormat89);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot format given object as a fraction");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(numberFormat3);
        org.junit.Assert.assertNull(numberFormat4);
        org.junit.Assert.assertNotNull(fractionFormat5);
        org.junit.Assert.assertNotNull(attributedCharacterIterator7);
        org.junit.Assert.assertNotNull(numberFormat8);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "10" + "'", str12, "10");
        org.junit.Assert.assertNotNull(fractionFormat13);
        org.junit.Assert.assertNotNull(attributedCharacterIterator15);
        org.junit.Assert.assertNotNull(numberFormat16);
        org.junit.Assert.assertNotNull(fractionFormat17);
        org.junit.Assert.assertNotNull(attributedCharacterIterator19);
        org.junit.Assert.assertNotNull(numberFormat20);
        org.junit.Assert.assertNull(numberFormat26);
        org.junit.Assert.assertNull(numberFormat27);
        org.junit.Assert.assertNull(numberFormat28);
        org.junit.Assert.assertNotNull(fractionFormat29);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertNotNull(obj33);
        org.junit.Assert.assertNotNull(numberFormat34);
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertNotNull(fractionFormat36);
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertNotNull(numberFormat41);
        org.junit.Assert.assertNotNull(numberFormat42);
        org.junit.Assert.assertNotNull(fractionFormat43);
        org.junit.Assert.assertNotNull(attributedCharacterIterator45);
        org.junit.Assert.assertNotNull(numberFormat46);
        org.junit.Assert.assertNotNull(fractionFormat50);
        org.junit.Assert.assertNotNull(obj52);
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertNotNull(numberFormat55);
        org.junit.Assert.assertNotNull(fractionFormat56);
        org.junit.Assert.assertNotNull(obj58);
        org.junit.Assert.assertNotNull(numberFormat59);
        org.junit.Assert.assertNotNull(fractionFormat61);
        org.junit.Assert.assertNotNull(obj63);
        org.junit.Assert.assertNotNull(obj65);
        org.junit.Assert.assertNotNull(numberFormat66);
        org.junit.Assert.assertNotNull(obj68);
        org.junit.Assert.assertNotNull(fractionFormat71);
        org.junit.Assert.assertNotNull(obj73);
        org.junit.Assert.assertNull(numberFormat77);
        org.junit.Assert.assertNull(numberFormat78);
        org.junit.Assert.assertNotNull(fractionFormat79);
        org.junit.Assert.assertNotNull(attributedCharacterIterator81);
        org.junit.Assert.assertNotNull(numberFormat82);
        org.junit.Assert.assertNotNull(fractionFormat84);
        org.junit.Assert.assertNotNull(obj86);
        org.junit.Assert.assertNotNull(obj88);
        org.junit.Assert.assertNotNull(numberFormat89);
    }

    @Test
    public void test0415() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0415");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat5 = fractionFormat0.getNumeratorFormat();
        java.text.NumberFormat numberFormat6 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat7 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator9 = fractionFormat7.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat10 = fractionFormat7.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = new org.apache.commons.math.fraction.FractionFormat(numberFormat6, numberFormat10);
        org.apache.commons.math.fraction.FractionFormat fractionFormat12 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj14 = fractionFormat12.parseObject("0 / 1");
        java.text.NumberFormat numberFormat15 = fractionFormat12.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat16 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj18 = fractionFormat16.parseObject("0 / 1");
        java.lang.Object obj20 = fractionFormat16.parseObject("0 / 1");
        java.text.NumberFormat numberFormat21 = fractionFormat16.getNumeratorFormat();
        java.text.NumberFormat numberFormat22 = fractionFormat16.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat23 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator25 = fractionFormat23.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat26 = fractionFormat23.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat27 = new org.apache.commons.math.fraction.FractionFormat(numberFormat22, numberFormat26);
        fractionFormat12.setNumeratorFormat(numberFormat26);
        org.apache.commons.math.fraction.FractionFormat fractionFormat29 = new org.apache.commons.math.fraction.FractionFormat(numberFormat6, numberFormat26);
        org.apache.commons.math.fraction.FractionFormat fractionFormat30 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator32 = fractionFormat30.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat33 = fractionFormat30.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat34 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator36 = fractionFormat34.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat37 = fractionFormat34.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat38 = new org.apache.commons.math.fraction.FractionFormat(numberFormat33, numberFormat37);
        java.text.NumberFormat numberFormat39 = fractionFormat38.getDenominatorFormat();
        java.lang.Object obj40 = fractionFormat38.clone();
        java.lang.Object obj42 = fractionFormat38.parseObject("10 / 1");
        // The following exception was thrown during execution in test generation
        try {
            java.text.AttributedCharacterIterator attributedCharacterIterator43 = fractionFormat29.formatToCharacterIterator((java.lang.Object) fractionFormat38);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot format given object as a fraction");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertNotNull(fractionFormat7);
        org.junit.Assert.assertNotNull(attributedCharacterIterator9);
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertNotNull(fractionFormat12);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertNotNull(numberFormat15);
        org.junit.Assert.assertNotNull(fractionFormat16);
        org.junit.Assert.assertNotNull(obj18);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertNotNull(numberFormat21);
        org.junit.Assert.assertNotNull(numberFormat22);
        org.junit.Assert.assertNotNull(fractionFormat23);
        org.junit.Assert.assertNotNull(attributedCharacterIterator25);
        org.junit.Assert.assertNotNull(numberFormat26);
        org.junit.Assert.assertNotNull(fractionFormat30);
        org.junit.Assert.assertNotNull(attributedCharacterIterator32);
        org.junit.Assert.assertNotNull(numberFormat33);
        org.junit.Assert.assertNotNull(fractionFormat34);
        org.junit.Assert.assertNotNull(attributedCharacterIterator36);
        org.junit.Assert.assertNotNull(numberFormat37);
        org.junit.Assert.assertNotNull(numberFormat39);
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertNotNull(obj42);
    }

    @Test
    public void test0416() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0416");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.text.NumberFormat numberFormat3 = fractionFormat2.getDenominatorFormat();
        java.text.NumberFormat numberFormat4 = fractionFormat2.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator7 = fractionFormat5.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat8 = fractionFormat5.getDenominatorFormat();
        fractionFormat2.setNumeratorFormat(numberFormat8);
        org.apache.commons.math.fraction.FractionFormat fractionFormat10 = new org.apache.commons.math.fraction.FractionFormat(numberFormat8);
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = new org.apache.commons.math.fraction.FractionFormat(numberFormat8);
        java.text.NumberFormat numberFormat12 = fractionFormat11.getNumeratorFormat();
        java.text.ParsePosition parsePosition14 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj15 = fractionFormat11.parseObject("", parsePosition14);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(numberFormat3);
        org.junit.Assert.assertNull(numberFormat4);
        org.junit.Assert.assertNotNull(fractionFormat5);
        org.junit.Assert.assertNotNull(attributedCharacterIterator7);
        org.junit.Assert.assertNotNull(numberFormat8);
        org.junit.Assert.assertNotNull(numberFormat12);
    }

    @Test
    public void test0417() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0417");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.Fraction fraction2 = fractionFormat0.parse("0 / 1");
        org.apache.commons.math.fraction.FractionFormat fractionFormat3 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator5 = fractionFormat3.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat6 = fractionFormat3.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat7 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator9 = fractionFormat7.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat10 = fractionFormat7.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = new org.apache.commons.math.fraction.FractionFormat(numberFormat6, numberFormat10);
        java.text.NumberFormat numberFormat12 = fractionFormat11.getDenominatorFormat();
        fractionFormat0.setDenominatorFormat(numberFormat12);
        java.lang.Class<?> wildcardClass14 = fractionFormat0.getClass();
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(fraction2);
        org.junit.Assert.assertNotNull(fractionFormat3);
        org.junit.Assert.assertNotNull(attributedCharacterIterator5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertNotNull(fractionFormat7);
        org.junit.Assert.assertNotNull(attributedCharacterIterator9);
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertNotNull(numberFormat12);
        org.junit.Assert.assertNotNull(wildcardClass14);
    }

    @Test
    public void test0418() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0418");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat5 = fractionFormat0.getNumeratorFormat();
        java.lang.Object obj6 = numberFormat5.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat7 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj9 = fractionFormat7.parseObject("0 / 1");
        java.lang.Object obj11 = fractionFormat7.parseObject("0 / 1");
        java.text.NumberFormat numberFormat12 = fractionFormat7.getNumeratorFormat();
        java.text.NumberFormat numberFormat13 = fractionFormat7.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat14 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator16 = fractionFormat14.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat17 = fractionFormat14.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat18 = new org.apache.commons.math.fraction.FractionFormat(numberFormat13, numberFormat17);
        org.apache.commons.math.fraction.FractionFormat fractionFormat19 = new org.apache.commons.math.fraction.FractionFormat(numberFormat5, numberFormat17);
        java.text.NumberFormat numberFormat20 = fractionFormat19.getNumeratorFormat();
        java.text.NumberFormat numberFormat21 = null;
        java.text.NumberFormat numberFormat22 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat23 = new org.apache.commons.math.fraction.FractionFormat(numberFormat21, numberFormat22);
        java.text.NumberFormat numberFormat24 = fractionFormat23.getDenominatorFormat();
        java.text.NumberFormat numberFormat25 = fractionFormat23.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat26 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj28 = fractionFormat26.parseObject("0 / 1");
        java.lang.Object obj30 = fractionFormat26.parseObject("0 / 1");
        java.text.NumberFormat numberFormat31 = fractionFormat26.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat32 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj34 = fractionFormat32.parseObject("0 / 1");
        java.text.NumberFormat numberFormat35 = fractionFormat32.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat36 = new org.apache.commons.math.fraction.FractionFormat(numberFormat31, numberFormat35);
        java.text.AttributedCharacterIterator attributedCharacterIterator38 = numberFormat31.formatToCharacterIterator((java.lang.Object) (-1));
        fractionFormat23.setDenominatorFormat(numberFormat31);
        java.lang.Object obj40 = numberFormat31.clone();
        java.text.NumberFormat numberFormat41 = null;
        java.text.NumberFormat numberFormat42 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat43 = new org.apache.commons.math.fraction.FractionFormat(numberFormat41, numberFormat42);
        java.text.NumberFormat numberFormat44 = fractionFormat43.getDenominatorFormat();
        java.text.NumberFormat numberFormat45 = fractionFormat43.getNumeratorFormat();
        java.text.NumberFormat numberFormat46 = fractionFormat43.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat47 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj49 = fractionFormat47.parseObject("0 / 1");
        java.lang.Object obj51 = fractionFormat47.parseObject("0 / 1");
        java.text.NumberFormat numberFormat52 = fractionFormat47.getNumeratorFormat();
        java.lang.Object obj53 = numberFormat52.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat54 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj56 = fractionFormat54.parseObject("0 / 1");
        java.lang.Object obj58 = fractionFormat54.parseObject("0 / 1");
        java.text.NumberFormat numberFormat59 = fractionFormat54.getNumeratorFormat();
        java.text.NumberFormat numberFormat60 = fractionFormat54.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat61 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator63 = fractionFormat61.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat64 = fractionFormat61.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat65 = new org.apache.commons.math.fraction.FractionFormat(numberFormat60, numberFormat64);
        org.apache.commons.math.fraction.FractionFormat fractionFormat66 = new org.apache.commons.math.fraction.FractionFormat(numberFormat52, numberFormat64);
        fractionFormat43.setNumeratorFormat(numberFormat52);
        org.apache.commons.math.fraction.FractionFormat fractionFormat68 = new org.apache.commons.math.fraction.FractionFormat(numberFormat31, numberFormat52);
        org.apache.commons.math.fraction.FractionFormat fractionFormat69 = new org.apache.commons.math.fraction.FractionFormat(numberFormat20, numberFormat52);
        org.apache.commons.math.fraction.FractionFormat fractionFormat70 = new org.apache.commons.math.fraction.FractionFormat(numberFormat52);
        org.apache.commons.math.fraction.FractionFormat fractionFormat71 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj73 = fractionFormat71.parseObject("0 / 1");
        java.lang.Object obj75 = fractionFormat71.parseObject("0 / 1");
        java.lang.Object obj77 = fractionFormat71.parseObject("0 / 1");
        java.text.NumberFormat numberFormat78 = null;
        java.text.NumberFormat numberFormat79 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat80 = new org.apache.commons.math.fraction.FractionFormat(numberFormat78, numberFormat79);
        java.text.NumberFormat numberFormat81 = fractionFormat80.getDenominatorFormat();
        java.text.NumberFormat numberFormat82 = fractionFormat80.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat83 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator85 = fractionFormat83.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat86 = fractionFormat83.getDenominatorFormat();
        fractionFormat80.setNumeratorFormat(numberFormat86);
        org.apache.commons.math.fraction.FractionFormat fractionFormat88 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj90 = fractionFormat88.parseObject("0 / 1");
        java.text.NumberFormat numberFormat91 = fractionFormat88.getNumeratorFormat();
        fractionFormat80.setNumeratorFormat(numberFormat91);
        java.lang.Object obj94 = numberFormat91.parseObject("0 / 1");
        fractionFormat71.setNumeratorFormat(numberFormat91);
        java.lang.Object obj97 = fractionFormat71.parseObject("0 / 1");
        // The following exception was thrown during execution in test generation
        try {
            java.text.AttributedCharacterIterator attributedCharacterIterator98 = numberFormat52.formatToCharacterIterator((java.lang.Object) "0 / 1");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot format given Object as a Number");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(obj6);
        org.junit.Assert.assertNotNull(fractionFormat7);
        org.junit.Assert.assertNotNull(obj9);
        org.junit.Assert.assertNotNull(obj11);
        org.junit.Assert.assertNotNull(numberFormat12);
        org.junit.Assert.assertNotNull(numberFormat13);
        org.junit.Assert.assertNotNull(fractionFormat14);
        org.junit.Assert.assertNotNull(attributedCharacterIterator16);
        org.junit.Assert.assertNotNull(numberFormat17);
        org.junit.Assert.assertNotNull(numberFormat20);
        org.junit.Assert.assertNull(numberFormat24);
        org.junit.Assert.assertNull(numberFormat25);
        org.junit.Assert.assertNotNull(fractionFormat26);
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertNotNull(numberFormat31);
        org.junit.Assert.assertNotNull(fractionFormat32);
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertNotNull(numberFormat35);
        org.junit.Assert.assertNotNull(attributedCharacterIterator38);
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertNull(numberFormat44);
        org.junit.Assert.assertNull(numberFormat45);
        org.junit.Assert.assertNull(numberFormat46);
        org.junit.Assert.assertNotNull(fractionFormat47);
        org.junit.Assert.assertNotNull(obj49);
        org.junit.Assert.assertNotNull(obj51);
        org.junit.Assert.assertNotNull(numberFormat52);
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertNotNull(fractionFormat54);
        org.junit.Assert.assertNotNull(obj56);
        org.junit.Assert.assertNotNull(obj58);
        org.junit.Assert.assertNotNull(numberFormat59);
        org.junit.Assert.assertNotNull(numberFormat60);
        org.junit.Assert.assertNotNull(fractionFormat61);
        org.junit.Assert.assertNotNull(attributedCharacterIterator63);
        org.junit.Assert.assertNotNull(numberFormat64);
        org.junit.Assert.assertNotNull(fractionFormat71);
        org.junit.Assert.assertNotNull(obj73);
        org.junit.Assert.assertNotNull(obj75);
        org.junit.Assert.assertNotNull(obj77);
        org.junit.Assert.assertNull(numberFormat81);
        org.junit.Assert.assertNull(numberFormat82);
        org.junit.Assert.assertNotNull(fractionFormat83);
        org.junit.Assert.assertNotNull(attributedCharacterIterator85);
        org.junit.Assert.assertNotNull(numberFormat86);
        org.junit.Assert.assertNotNull(fractionFormat88);
        org.junit.Assert.assertNotNull(obj90);
        org.junit.Assert.assertNotNull(numberFormat91);
        org.junit.Assert.assertEquals("'" + obj94 + "' != '" + 0L + "'", obj94, 0L);
        org.junit.Assert.assertNotNull(obj97);
    }

    @Test
    public void test0419() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0419");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat5 = fractionFormat0.getNumeratorFormat();
        java.text.NumberFormat numberFormat6 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat7 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator9 = fractionFormat7.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat10 = fractionFormat7.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = new org.apache.commons.math.fraction.FractionFormat(numberFormat6, numberFormat10);
        org.apache.commons.math.fraction.FractionFormat fractionFormat12 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator14 = fractionFormat12.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat15 = fractionFormat12.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat16 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator18 = fractionFormat16.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat19 = fractionFormat16.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat20 = new org.apache.commons.math.fraction.FractionFormat(numberFormat15, numberFormat19);
        fractionFormat11.setNumeratorFormat(numberFormat15);
        java.text.NumberFormat numberFormat22 = fractionFormat11.getDenominatorFormat();
        java.text.NumberFormat numberFormat23 = null;
        // The following exception was thrown during execution in test generation
        try {
            fractionFormat11.setNumeratorFormat(numberFormat23);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: numerator format can not be null.");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertNotNull(fractionFormat7);
        org.junit.Assert.assertNotNull(attributedCharacterIterator9);
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertNotNull(fractionFormat12);
        org.junit.Assert.assertNotNull(attributedCharacterIterator14);
        org.junit.Assert.assertNotNull(numberFormat15);
        org.junit.Assert.assertNotNull(fractionFormat16);
        org.junit.Assert.assertNotNull(attributedCharacterIterator18);
        org.junit.Assert.assertNotNull(numberFormat19);
        org.junit.Assert.assertNotNull(numberFormat22);
    }

    @Test
    public void test0420() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0420");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.text.NumberFormat numberFormat3 = fractionFormat2.getDenominatorFormat();
        java.text.NumberFormat numberFormat4 = fractionFormat2.getNumeratorFormat();
        java.text.NumberFormat numberFormat5 = fractionFormat2.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat6 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator8 = fractionFormat6.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat9 = fractionFormat6.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat10 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator12 = fractionFormat10.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat13 = fractionFormat10.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat14 = new org.apache.commons.math.fraction.FractionFormat(numberFormat9, numberFormat13);
        fractionFormat2.setNumeratorFormat(numberFormat9);
        org.apache.commons.math.fraction.FractionFormat fractionFormat16 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj18 = fractionFormat16.parseObject("0 / 1");
        java.text.NumberFormat numberFormat19 = fractionFormat16.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat20 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator22 = fractionFormat20.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat23 = fractionFormat20.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat24 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator26 = fractionFormat24.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat27 = fractionFormat24.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat28 = new org.apache.commons.math.fraction.FractionFormat(numberFormat23, numberFormat27);
        org.apache.commons.math.fraction.FractionFormat fractionFormat29 = new org.apache.commons.math.fraction.FractionFormat(numberFormat19, numberFormat23);
        org.apache.commons.math.fraction.FractionFormat fractionFormat30 = new org.apache.commons.math.fraction.FractionFormat(numberFormat9, numberFormat19);
        org.apache.commons.math.fraction.FractionFormat fractionFormat31 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj33 = fractionFormat31.parseObject("0 / 1");
        java.lang.Object obj35 = fractionFormat31.parseObject("0 / 1");
        java.text.NumberFormat numberFormat36 = fractionFormat31.getNumeratorFormat();
        java.text.NumberFormat numberFormat37 = fractionFormat31.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat38 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator40 = fractionFormat38.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat41 = fractionFormat38.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat42 = new org.apache.commons.math.fraction.FractionFormat(numberFormat37, numberFormat41);
        org.apache.commons.math.fraction.FractionFormat fractionFormat43 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator45 = fractionFormat43.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat46 = fractionFormat43.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat47 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator49 = fractionFormat47.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat50 = fractionFormat47.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat51 = new org.apache.commons.math.fraction.FractionFormat(numberFormat46, numberFormat50);
        org.apache.commons.math.fraction.FractionFormat fractionFormat52 = new org.apache.commons.math.fraction.FractionFormat(numberFormat37, numberFormat50);
        java.text.NumberFormat numberFormat53 = fractionFormat52.getNumeratorFormat();
        fractionFormat30.setNumeratorFormat(numberFormat53);
        java.text.ParsePosition parsePosition56 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.fraction.Fraction fraction57 = fractionFormat30.parse("100", parsePosition56);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(numberFormat3);
        org.junit.Assert.assertNull(numberFormat4);
        org.junit.Assert.assertNull(numberFormat5);
        org.junit.Assert.assertNotNull(fractionFormat6);
        org.junit.Assert.assertNotNull(attributedCharacterIterator8);
        org.junit.Assert.assertNotNull(numberFormat9);
        org.junit.Assert.assertNotNull(fractionFormat10);
        org.junit.Assert.assertNotNull(attributedCharacterIterator12);
        org.junit.Assert.assertNotNull(numberFormat13);
        org.junit.Assert.assertNotNull(fractionFormat16);
        org.junit.Assert.assertNotNull(obj18);
        org.junit.Assert.assertNotNull(numberFormat19);
        org.junit.Assert.assertNotNull(fractionFormat20);
        org.junit.Assert.assertNotNull(attributedCharacterIterator22);
        org.junit.Assert.assertNotNull(numberFormat23);
        org.junit.Assert.assertNotNull(fractionFormat24);
        org.junit.Assert.assertNotNull(attributedCharacterIterator26);
        org.junit.Assert.assertNotNull(numberFormat27);
        org.junit.Assert.assertNotNull(fractionFormat31);
        org.junit.Assert.assertNotNull(obj33);
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertNotNull(numberFormat36);
        org.junit.Assert.assertNotNull(numberFormat37);
        org.junit.Assert.assertNotNull(fractionFormat38);
        org.junit.Assert.assertNotNull(attributedCharacterIterator40);
        org.junit.Assert.assertNotNull(numberFormat41);
        org.junit.Assert.assertNotNull(fractionFormat43);
        org.junit.Assert.assertNotNull(attributedCharacterIterator45);
        org.junit.Assert.assertNotNull(numberFormat46);
        org.junit.Assert.assertNotNull(fractionFormat47);
        org.junit.Assert.assertNotNull(attributedCharacterIterator49);
        org.junit.Assert.assertNotNull(numberFormat50);
        org.junit.Assert.assertNotNull(numberFormat53);
    }

    @Test
    public void test0421() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0421");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.text.NumberFormat numberFormat3 = fractionFormat2.getDenominatorFormat();
        java.text.NumberFormat numberFormat4 = fractionFormat2.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator7 = fractionFormat5.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat8 = fractionFormat5.getDenominatorFormat();
        fractionFormat2.setNumeratorFormat(numberFormat8);
        java.lang.Object obj10 = numberFormat8.clone();
        java.lang.String str12 = numberFormat8.format((java.lang.Object) (short) 10);
        java.text.NumberFormat numberFormat13 = null;
        java.text.NumberFormat numberFormat14 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat15 = new org.apache.commons.math.fraction.FractionFormat(numberFormat13, numberFormat14);
        java.text.NumberFormat numberFormat16 = fractionFormat15.getDenominatorFormat();
        java.text.NumberFormat numberFormat17 = fractionFormat15.getNumeratorFormat();
        java.text.NumberFormat numberFormat18 = fractionFormat15.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat19 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator21 = fractionFormat19.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat22 = fractionFormat19.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat23 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator25 = fractionFormat23.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat26 = fractionFormat23.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat27 = new org.apache.commons.math.fraction.FractionFormat(numberFormat22, numberFormat26);
        fractionFormat15.setNumeratorFormat(numberFormat22);
        org.apache.commons.math.fraction.FractionFormat fractionFormat29 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj31 = fractionFormat29.parseObject("0 / 1");
        java.text.NumberFormat numberFormat32 = fractionFormat29.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat33 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator35 = fractionFormat33.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat36 = fractionFormat33.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat37 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator39 = fractionFormat37.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat40 = fractionFormat37.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat41 = new org.apache.commons.math.fraction.FractionFormat(numberFormat36, numberFormat40);
        org.apache.commons.math.fraction.FractionFormat fractionFormat42 = new org.apache.commons.math.fraction.FractionFormat(numberFormat32, numberFormat36);
        org.apache.commons.math.fraction.FractionFormat fractionFormat43 = new org.apache.commons.math.fraction.FractionFormat(numberFormat22, numberFormat32);
        org.apache.commons.math.fraction.FractionFormat fractionFormat44 = new org.apache.commons.math.fraction.FractionFormat(numberFormat8, numberFormat32);
        java.lang.Object obj45 = fractionFormat44.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat46 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj48 = fractionFormat46.parseObject("0 / 1");
        java.lang.Object obj50 = fractionFormat46.parseObject("0 / 1");
        java.text.NumberFormat numberFormat51 = fractionFormat46.getNumeratorFormat();
        java.text.NumberFormat numberFormat52 = fractionFormat46.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat53 = new org.apache.commons.math.fraction.FractionFormat(numberFormat52);
        org.apache.commons.math.fraction.FractionFormat fractionFormat54 = new org.apache.commons.math.fraction.FractionFormat(numberFormat52);
        fractionFormat44.setDenominatorFormat(numberFormat52);
        java.text.NumberFormat numberFormat56 = null;
        // The following exception was thrown during execution in test generation
        try {
            fractionFormat44.setNumeratorFormat(numberFormat56);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: numerator format can not be null.");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(numberFormat3);
        org.junit.Assert.assertNull(numberFormat4);
        org.junit.Assert.assertNotNull(fractionFormat5);
        org.junit.Assert.assertNotNull(attributedCharacterIterator7);
        org.junit.Assert.assertNotNull(numberFormat8);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "10" + "'", str12, "10");
        org.junit.Assert.assertNull(numberFormat16);
        org.junit.Assert.assertNull(numberFormat17);
        org.junit.Assert.assertNull(numberFormat18);
        org.junit.Assert.assertNotNull(fractionFormat19);
        org.junit.Assert.assertNotNull(attributedCharacterIterator21);
        org.junit.Assert.assertNotNull(numberFormat22);
        org.junit.Assert.assertNotNull(fractionFormat23);
        org.junit.Assert.assertNotNull(attributedCharacterIterator25);
        org.junit.Assert.assertNotNull(numberFormat26);
        org.junit.Assert.assertNotNull(fractionFormat29);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertNotNull(numberFormat32);
        org.junit.Assert.assertNotNull(fractionFormat33);
        org.junit.Assert.assertNotNull(attributedCharacterIterator35);
        org.junit.Assert.assertNotNull(numberFormat36);
        org.junit.Assert.assertNotNull(fractionFormat37);
        org.junit.Assert.assertNotNull(attributedCharacterIterator39);
        org.junit.Assert.assertNotNull(numberFormat40);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertNotNull(fractionFormat46);
        org.junit.Assert.assertNotNull(obj48);
        org.junit.Assert.assertNotNull(obj50);
        org.junit.Assert.assertNotNull(numberFormat51);
        org.junit.Assert.assertNotNull(numberFormat52);
    }

    @Test
    public void test0422() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0422");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.text.NumberFormat numberFormat3 = fractionFormat2.getDenominatorFormat();
        java.text.NumberFormat numberFormat4 = fractionFormat2.getNumeratorFormat();
        java.text.NumberFormat numberFormat5 = fractionFormat2.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat6 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator8 = fractionFormat6.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat9 = fractionFormat6.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat10 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator12 = fractionFormat10.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat13 = fractionFormat10.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat14 = new org.apache.commons.math.fraction.FractionFormat(numberFormat9, numberFormat13);
        fractionFormat2.setNumeratorFormat(numberFormat9);
        java.text.ParsePosition parsePosition17 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.fraction.Fraction fraction18 = fractionFormat2.parse("hi!", parsePosition17);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(numberFormat3);
        org.junit.Assert.assertNull(numberFormat4);
        org.junit.Assert.assertNull(numberFormat5);
        org.junit.Assert.assertNotNull(fractionFormat6);
        org.junit.Assert.assertNotNull(attributedCharacterIterator8);
        org.junit.Assert.assertNotNull(numberFormat9);
        org.junit.Assert.assertNotNull(fractionFormat10);
        org.junit.Assert.assertNotNull(attributedCharacterIterator12);
        org.junit.Assert.assertNotNull(numberFormat13);
    }

    @Test
    public void test0423() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0423");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat5 = fractionFormat0.getNumeratorFormat();
        java.text.NumberFormat numberFormat6 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat7 = new org.apache.commons.math.fraction.FractionFormat(numberFormat6);
        org.apache.commons.math.fraction.FractionFormat fractionFormat8 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj10 = fractionFormat8.parseObject("0 / 1");
        java.lang.Object obj12 = fractionFormat8.parseObject("0 / 1");
        java.text.NumberFormat numberFormat13 = fractionFormat8.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat14 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj16 = fractionFormat14.parseObject("0 / 1");
        java.text.NumberFormat numberFormat17 = fractionFormat14.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat18 = new org.apache.commons.math.fraction.FractionFormat(numberFormat13, numberFormat17);
        org.apache.commons.math.fraction.FractionFormat fractionFormat19 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj21 = fractionFormat19.parseObject("0 / 1");
        java.lang.Object obj23 = fractionFormat19.parseObject("0 / 1");
        java.text.NumberFormat numberFormat24 = fractionFormat19.getNumeratorFormat();
        fractionFormat18.setDenominatorFormat(numberFormat24);
        org.apache.commons.math.fraction.FractionFormat fractionFormat26 = new org.apache.commons.math.fraction.FractionFormat(numberFormat6, numberFormat24);
        java.lang.Object obj28 = numberFormat6.parseObject("100");
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertNotNull(fractionFormat8);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertNotNull(numberFormat13);
        org.junit.Assert.assertNotNull(fractionFormat14);
        org.junit.Assert.assertNotNull(obj16);
        org.junit.Assert.assertNotNull(numberFormat17);
        org.junit.Assert.assertNotNull(fractionFormat19);
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertNotNull(numberFormat24);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + 100L + "'", obj28, 100L);
    }

    @Test
    public void test0424() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0424");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator2 = fractionFormat0.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat3 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat4 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator6 = fractionFormat4.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat7 = fractionFormat4.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat8 = new org.apache.commons.math.fraction.FractionFormat(numberFormat3, numberFormat7);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj10 = fractionFormat8.parseObject("");
            org.junit.Assert.fail("Expected exception of type java.text.ParseException; message: Format.parseObject(String) failed");
        } catch (java.text.ParseException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(attributedCharacterIterator2);
        org.junit.Assert.assertNotNull(numberFormat3);
        org.junit.Assert.assertNotNull(fractionFormat4);
        org.junit.Assert.assertNotNull(attributedCharacterIterator6);
        org.junit.Assert.assertNotNull(numberFormat7);
    }

    @Test
    public void test0425() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0425");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.text.NumberFormat numberFormat3 = fractionFormat2.getDenominatorFormat();
        java.text.NumberFormat numberFormat4 = fractionFormat2.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator7 = fractionFormat5.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat8 = fractionFormat5.getDenominatorFormat();
        fractionFormat2.setNumeratorFormat(numberFormat8);
        java.lang.Object obj10 = numberFormat8.clone();
        java.lang.String str12 = numberFormat8.format((java.lang.Object) (short) 10);
        java.text.NumberFormat numberFormat13 = null;
        java.text.NumberFormat numberFormat14 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat15 = new org.apache.commons.math.fraction.FractionFormat(numberFormat13, numberFormat14);
        java.text.NumberFormat numberFormat16 = fractionFormat15.getDenominatorFormat();
        java.text.NumberFormat numberFormat17 = fractionFormat15.getNumeratorFormat();
        java.text.NumberFormat numberFormat18 = fractionFormat15.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat19 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator21 = fractionFormat19.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat22 = fractionFormat19.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat23 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator25 = fractionFormat23.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat26 = fractionFormat23.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat27 = new org.apache.commons.math.fraction.FractionFormat(numberFormat22, numberFormat26);
        fractionFormat15.setNumeratorFormat(numberFormat22);
        org.apache.commons.math.fraction.FractionFormat fractionFormat29 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj31 = fractionFormat29.parseObject("0 / 1");
        java.text.NumberFormat numberFormat32 = fractionFormat29.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat33 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator35 = fractionFormat33.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat36 = fractionFormat33.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat37 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator39 = fractionFormat37.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat40 = fractionFormat37.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat41 = new org.apache.commons.math.fraction.FractionFormat(numberFormat36, numberFormat40);
        org.apache.commons.math.fraction.FractionFormat fractionFormat42 = new org.apache.commons.math.fraction.FractionFormat(numberFormat32, numberFormat36);
        org.apache.commons.math.fraction.FractionFormat fractionFormat43 = new org.apache.commons.math.fraction.FractionFormat(numberFormat22, numberFormat32);
        org.apache.commons.math.fraction.FractionFormat fractionFormat44 = new org.apache.commons.math.fraction.FractionFormat(numberFormat8, numberFormat32);
        java.text.NumberFormat numberFormat45 = fractionFormat44.getDenominatorFormat();
        java.lang.Object obj47 = fractionFormat44.parseObject("10 / 1");
        org.apache.commons.math.fraction.FractionFormat fractionFormat48 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.Fraction fraction50 = fractionFormat48.parse("0 / 1");
        java.lang.String str51 = org.apache.commons.math.fraction.FractionFormat.formatFraction(fraction50);
        java.lang.String str52 = org.apache.commons.math.fraction.FractionFormat.formatFraction(fraction50);
        java.lang.StringBuffer stringBuffer53 = null;
        java.text.FieldPosition fieldPosition54 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer55 = fractionFormat44.format(fraction50, stringBuffer53, fieldPosition54);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(numberFormat3);
        org.junit.Assert.assertNull(numberFormat4);
        org.junit.Assert.assertNotNull(fractionFormat5);
        org.junit.Assert.assertNotNull(attributedCharacterIterator7);
        org.junit.Assert.assertNotNull(numberFormat8);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "10" + "'", str12, "10");
        org.junit.Assert.assertNull(numberFormat16);
        org.junit.Assert.assertNull(numberFormat17);
        org.junit.Assert.assertNull(numberFormat18);
        org.junit.Assert.assertNotNull(fractionFormat19);
        org.junit.Assert.assertNotNull(attributedCharacterIterator21);
        org.junit.Assert.assertNotNull(numberFormat22);
        org.junit.Assert.assertNotNull(fractionFormat23);
        org.junit.Assert.assertNotNull(attributedCharacterIterator25);
        org.junit.Assert.assertNotNull(numberFormat26);
        org.junit.Assert.assertNotNull(fractionFormat29);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertNotNull(numberFormat32);
        org.junit.Assert.assertNotNull(fractionFormat33);
        org.junit.Assert.assertNotNull(attributedCharacterIterator35);
        org.junit.Assert.assertNotNull(numberFormat36);
        org.junit.Assert.assertNotNull(fractionFormat37);
        org.junit.Assert.assertNotNull(attributedCharacterIterator39);
        org.junit.Assert.assertNotNull(numberFormat40);
        org.junit.Assert.assertNotNull(numberFormat45);
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertNotNull(fractionFormat48);
        org.junit.Assert.assertNotNull(fraction50);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "0 / 1" + "'", str51, "0 / 1");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "0 / 1" + "'", str52, "0 / 1");
    }

    @Test
    public void test0426() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0426");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat5 = fractionFormat0.getNumeratorFormat();
        java.text.NumberFormat numberFormat6 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat7 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator9 = fractionFormat7.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat10 = fractionFormat7.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = new org.apache.commons.math.fraction.FractionFormat(numberFormat6, numberFormat10);
        org.apache.commons.math.fraction.FractionFormat fractionFormat12 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj14 = fractionFormat12.parseObject("0 / 1");
        java.text.NumberFormat numberFormat15 = fractionFormat12.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat16 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj18 = fractionFormat16.parseObject("0 / 1");
        java.lang.Object obj20 = fractionFormat16.parseObject("0 / 1");
        java.text.NumberFormat numberFormat21 = fractionFormat16.getNumeratorFormat();
        java.text.NumberFormat numberFormat22 = fractionFormat16.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat23 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator25 = fractionFormat23.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat26 = fractionFormat23.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat27 = new org.apache.commons.math.fraction.FractionFormat(numberFormat22, numberFormat26);
        fractionFormat12.setNumeratorFormat(numberFormat26);
        org.apache.commons.math.fraction.FractionFormat fractionFormat29 = new org.apache.commons.math.fraction.FractionFormat(numberFormat6, numberFormat26);
        org.apache.commons.math.fraction.FractionFormat fractionFormat30 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj32 = fractionFormat30.parseObject("0 / 1");
        java.lang.Object obj34 = fractionFormat30.parseObject("0 / 1");
        java.text.NumberFormat numberFormat35 = fractionFormat30.getNumeratorFormat();
        java.text.NumberFormat numberFormat36 = fractionFormat30.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat37 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator39 = fractionFormat37.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat40 = fractionFormat37.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat41 = new org.apache.commons.math.fraction.FractionFormat(numberFormat36, numberFormat40);
        java.lang.StringBuffer stringBuffer42 = null;
        java.text.FieldPosition fieldPosition43 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer44 = fractionFormat29.format((java.lang.Object) fractionFormat41, stringBuffer42, fieldPosition43);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot format given object as a fraction");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertNotNull(fractionFormat7);
        org.junit.Assert.assertNotNull(attributedCharacterIterator9);
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertNotNull(fractionFormat12);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertNotNull(numberFormat15);
        org.junit.Assert.assertNotNull(fractionFormat16);
        org.junit.Assert.assertNotNull(obj18);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertNotNull(numberFormat21);
        org.junit.Assert.assertNotNull(numberFormat22);
        org.junit.Assert.assertNotNull(fractionFormat23);
        org.junit.Assert.assertNotNull(attributedCharacterIterator25);
        org.junit.Assert.assertNotNull(numberFormat26);
        org.junit.Assert.assertNotNull(fractionFormat30);
        org.junit.Assert.assertNotNull(obj32);
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertNotNull(numberFormat35);
        org.junit.Assert.assertNotNull(numberFormat36);
        org.junit.Assert.assertNotNull(fractionFormat37);
        org.junit.Assert.assertNotNull(attributedCharacterIterator39);
        org.junit.Assert.assertNotNull(numberFormat40);
    }

    @Test
    public void test0427() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0427");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat5 = fractionFormat0.getNumeratorFormat();
        java.text.NumberFormat numberFormat6 = fractionFormat0.getNumeratorFormat();
        java.text.ParsePosition parsePosition8 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj9 = fractionFormat0.parseObject("-1 / 1", parsePosition8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
    }

    @Test
    public void test0428() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0428");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.text.NumberFormat numberFormat3 = fractionFormat2.getDenominatorFormat();
        java.text.NumberFormat numberFormat4 = fractionFormat2.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator7 = fractionFormat5.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat8 = fractionFormat5.getDenominatorFormat();
        fractionFormat2.setNumeratorFormat(numberFormat8);
        org.apache.commons.math.fraction.FractionFormat fractionFormat10 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj12 = fractionFormat10.parseObject("0 / 1");
        java.lang.Object obj14 = fractionFormat10.parseObject("0 / 1");
        java.text.NumberFormat numberFormat15 = fractionFormat10.getNumeratorFormat();
        fractionFormat2.setDenominatorFormat(numberFormat15);
        java.text.NumberFormat numberFormat17 = fractionFormat2.getDenominatorFormat();
        java.text.NumberFormat numberFormat18 = fractionFormat2.getDenominatorFormat();
        org.apache.commons.math.fraction.Fraction fraction19 = null;
        java.lang.StringBuffer stringBuffer20 = null;
        java.text.FieldPosition fieldPosition21 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer22 = fractionFormat2.format(fraction19, stringBuffer20, fieldPosition21);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(numberFormat3);
        org.junit.Assert.assertNull(numberFormat4);
        org.junit.Assert.assertNotNull(fractionFormat5);
        org.junit.Assert.assertNotNull(attributedCharacterIterator7);
        org.junit.Assert.assertNotNull(numberFormat8);
        org.junit.Assert.assertNotNull(fractionFormat10);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertNotNull(numberFormat15);
        org.junit.Assert.assertNotNull(numberFormat17);
        org.junit.Assert.assertNotNull(numberFormat18);
    }

    @Test
    public void test0429() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0429");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.text.NumberFormat numberFormat3 = fractionFormat2.getDenominatorFormat();
        java.text.NumberFormat numberFormat4 = fractionFormat2.getNumeratorFormat();
        java.text.NumberFormat numberFormat5 = fractionFormat2.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat6 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj8 = fractionFormat6.parseObject("0 / 1");
        java.lang.Object obj10 = fractionFormat6.parseObject("0 / 1");
        java.text.NumberFormat numberFormat11 = fractionFormat6.getNumeratorFormat();
        java.lang.Object obj12 = numberFormat11.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat13 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj15 = fractionFormat13.parseObject("0 / 1");
        java.lang.Object obj17 = fractionFormat13.parseObject("0 / 1");
        java.text.NumberFormat numberFormat18 = fractionFormat13.getNumeratorFormat();
        java.text.NumberFormat numberFormat19 = fractionFormat13.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat20 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator22 = fractionFormat20.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat23 = fractionFormat20.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat24 = new org.apache.commons.math.fraction.FractionFormat(numberFormat19, numberFormat23);
        org.apache.commons.math.fraction.FractionFormat fractionFormat25 = new org.apache.commons.math.fraction.FractionFormat(numberFormat11, numberFormat23);
        fractionFormat2.setNumeratorFormat(numberFormat11);
        org.apache.commons.math.fraction.FractionFormat fractionFormat27 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj29 = fractionFormat27.parseObject("0 / 1");
        java.lang.Object obj31 = fractionFormat27.parseObject("0 / 1");
        java.text.NumberFormat numberFormat32 = fractionFormat27.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat33 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj35 = fractionFormat33.parseObject("0 / 1");
        java.text.NumberFormat numberFormat36 = fractionFormat33.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat37 = new org.apache.commons.math.fraction.FractionFormat(numberFormat32, numberFormat36);
        org.apache.commons.math.fraction.FractionFormat fractionFormat38 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj40 = fractionFormat38.parseObject("0 / 1");
        java.lang.Object obj42 = fractionFormat38.parseObject("0 / 1");
        java.text.NumberFormat numberFormat43 = fractionFormat38.getNumeratorFormat();
        fractionFormat37.setDenominatorFormat(numberFormat43);
        java.lang.Object obj45 = numberFormat43.clone();
        fractionFormat2.setDenominatorFormat(numberFormat43);
        java.text.NumberFormat numberFormat47 = fractionFormat2.getNumeratorFormat();
        java.text.ParsePosition parsePosition49 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.fraction.Fraction fraction50 = fractionFormat2.parse("", parsePosition49);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(numberFormat3);
        org.junit.Assert.assertNull(numberFormat4);
        org.junit.Assert.assertNull(numberFormat5);
        org.junit.Assert.assertNotNull(fractionFormat6);
        org.junit.Assert.assertNotNull(obj8);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertNotNull(numberFormat11);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertNotNull(fractionFormat13);
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertNotNull(numberFormat18);
        org.junit.Assert.assertNotNull(numberFormat19);
        org.junit.Assert.assertNotNull(fractionFormat20);
        org.junit.Assert.assertNotNull(attributedCharacterIterator22);
        org.junit.Assert.assertNotNull(numberFormat23);
        org.junit.Assert.assertNotNull(fractionFormat27);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertNotNull(numberFormat32);
        org.junit.Assert.assertNotNull(fractionFormat33);
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertNotNull(numberFormat36);
        org.junit.Assert.assertNotNull(fractionFormat38);
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertNotNull(numberFormat43);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertNotNull(numberFormat47);
    }

    @Test
    public void test0430() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0430");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat5 = fractionFormat0.getNumeratorFormat();
        java.text.NumberFormat numberFormat6 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat7 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator9 = fractionFormat7.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat10 = fractionFormat7.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = new org.apache.commons.math.fraction.FractionFormat(numberFormat6, numberFormat10);
        org.apache.commons.math.fraction.FractionFormat fractionFormat12 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator14 = fractionFormat12.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat15 = fractionFormat12.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat16 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator18 = fractionFormat16.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat19 = fractionFormat16.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat20 = new org.apache.commons.math.fraction.FractionFormat(numberFormat15, numberFormat19);
        java.text.NumberFormat numberFormat21 = fractionFormat20.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat22 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat23 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj25 = fractionFormat23.parseObject("0 / 1");
        java.lang.Object obj27 = fractionFormat23.parseObject("0 / 1");
        java.text.NumberFormat numberFormat28 = fractionFormat23.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat29 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj31 = fractionFormat29.parseObject("0 / 1");
        java.text.NumberFormat numberFormat32 = fractionFormat29.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat33 = new org.apache.commons.math.fraction.FractionFormat(numberFormat28, numberFormat32);
        org.apache.commons.math.fraction.FractionFormat fractionFormat34 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj36 = fractionFormat34.parseObject("0 / 1");
        java.lang.Object obj38 = fractionFormat34.parseObject("0 / 1");
        java.text.NumberFormat numberFormat39 = fractionFormat34.getNumeratorFormat();
        fractionFormat33.setDenominatorFormat(numberFormat39);
        java.lang.Object obj41 = numberFormat39.clone();
        fractionFormat22.setNumeratorFormat(numberFormat39);
        java.lang.Object obj43 = numberFormat39.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat44 = new org.apache.commons.math.fraction.FractionFormat(numberFormat21, numberFormat39);
        org.apache.commons.math.fraction.FractionFormat fractionFormat45 = new org.apache.commons.math.fraction.FractionFormat(numberFormat6, numberFormat39);
        org.apache.commons.math.fraction.FractionFormat fractionFormat46 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj48 = fractionFormat46.parseObject("0 / 1");
        java.lang.Object obj50 = fractionFormat46.parseObject("0 / 1");
        java.text.NumberFormat numberFormat51 = fractionFormat46.getNumeratorFormat();
        java.text.NumberFormat numberFormat52 = fractionFormat46.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat53 = new org.apache.commons.math.fraction.FractionFormat(numberFormat52);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str54 = fractionFormat45.format((java.lang.Object) fractionFormat53);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot format given object as a fraction");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertNotNull(fractionFormat7);
        org.junit.Assert.assertNotNull(attributedCharacterIterator9);
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertNotNull(fractionFormat12);
        org.junit.Assert.assertNotNull(attributedCharacterIterator14);
        org.junit.Assert.assertNotNull(numberFormat15);
        org.junit.Assert.assertNotNull(fractionFormat16);
        org.junit.Assert.assertNotNull(attributedCharacterIterator18);
        org.junit.Assert.assertNotNull(numberFormat19);
        org.junit.Assert.assertNotNull(numberFormat21);
        org.junit.Assert.assertNotNull(fractionFormat22);
        org.junit.Assert.assertNotNull(fractionFormat23);
        org.junit.Assert.assertNotNull(obj25);
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertNotNull(numberFormat28);
        org.junit.Assert.assertNotNull(fractionFormat29);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertNotNull(numberFormat32);
        org.junit.Assert.assertNotNull(fractionFormat34);
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertNotNull(numberFormat39);
        org.junit.Assert.assertNotNull(obj41);
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertNotNull(fractionFormat46);
        org.junit.Assert.assertNotNull(obj48);
        org.junit.Assert.assertNotNull(obj50);
        org.junit.Assert.assertNotNull(numberFormat51);
        org.junit.Assert.assertNotNull(numberFormat52);
    }

    @Test
    public void test0431() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0431");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat1 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj3 = fractionFormat1.parseObject("0 / 1");
        java.lang.Object obj5 = fractionFormat1.parseObject("-1 / 1");
        org.apache.commons.math.fraction.FractionFormat fractionFormat6 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat7 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj9 = fractionFormat7.parseObject("0 / 1");
        java.lang.Object obj11 = fractionFormat7.parseObject("0 / 1");
        java.text.NumberFormat numberFormat12 = fractionFormat7.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat13 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj15 = fractionFormat13.parseObject("0 / 1");
        java.text.NumberFormat numberFormat16 = fractionFormat13.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat17 = new org.apache.commons.math.fraction.FractionFormat(numberFormat12, numberFormat16);
        org.apache.commons.math.fraction.FractionFormat fractionFormat18 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj20 = fractionFormat18.parseObject("0 / 1");
        java.lang.Object obj22 = fractionFormat18.parseObject("0 / 1");
        java.text.NumberFormat numberFormat23 = fractionFormat18.getNumeratorFormat();
        fractionFormat17.setDenominatorFormat(numberFormat23);
        java.lang.Object obj25 = numberFormat23.clone();
        fractionFormat6.setNumeratorFormat(numberFormat23);
        java.lang.Object obj27 = numberFormat23.clone();
        java.lang.Object obj28 = numberFormat23.clone();
        fractionFormat1.setDenominatorFormat(numberFormat23);
        org.apache.commons.math.fraction.FractionFormat fractionFormat30 = new org.apache.commons.math.fraction.FractionFormat(numberFormat23);
        fractionFormat0.setNumeratorFormat(numberFormat23);
        org.apache.commons.math.fraction.FractionFormat fractionFormat32 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj34 = fractionFormat32.parseObject("0 / 1");
        java.text.NumberFormat numberFormat35 = fractionFormat32.getNumeratorFormat();
        java.text.NumberFormat numberFormat36 = fractionFormat32.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat37 = new org.apache.commons.math.fraction.FractionFormat(numberFormat23, numberFormat36);
        org.apache.commons.math.fraction.FractionFormat fractionFormat38 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj40 = fractionFormat38.parseObject("0 / 1");
        java.lang.Object obj42 = fractionFormat38.parseObject("0 / 1");
        java.text.NumberFormat numberFormat43 = fractionFormat38.getNumeratorFormat();
        java.text.NumberFormat numberFormat44 = fractionFormat38.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat45 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator47 = fractionFormat45.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat48 = fractionFormat45.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat49 = new org.apache.commons.math.fraction.FractionFormat(numberFormat44, numberFormat48);
        java.lang.Object obj50 = fractionFormat49.clone();
        java.text.NumberFormat numberFormat51 = fractionFormat49.getNumeratorFormat();
        org.apache.commons.math.fraction.Fraction fraction53 = fractionFormat49.parse("-1 / 1");
        java.lang.StringBuffer stringBuffer54 = null;
        java.text.FieldPosition fieldPosition55 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer56 = fractionFormat37.format(fraction53, stringBuffer54, fieldPosition55);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(fractionFormat1);
        org.junit.Assert.assertNotNull(obj3);
        org.junit.Assert.assertNotNull(obj5);
        org.junit.Assert.assertNotNull(fractionFormat6);
        org.junit.Assert.assertNotNull(fractionFormat7);
        org.junit.Assert.assertNotNull(obj9);
        org.junit.Assert.assertNotNull(obj11);
        org.junit.Assert.assertNotNull(numberFormat12);
        org.junit.Assert.assertNotNull(fractionFormat13);
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertNotNull(numberFormat16);
        org.junit.Assert.assertNotNull(fractionFormat18);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertNotNull(numberFormat23);
        org.junit.Assert.assertNotNull(obj25);
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertNotNull(fractionFormat32);
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertNotNull(numberFormat35);
        org.junit.Assert.assertNotNull(numberFormat36);
        org.junit.Assert.assertNotNull(fractionFormat38);
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertNotNull(numberFormat43);
        org.junit.Assert.assertNotNull(numberFormat44);
        org.junit.Assert.assertNotNull(fractionFormat45);
        org.junit.Assert.assertNotNull(attributedCharacterIterator47);
        org.junit.Assert.assertNotNull(numberFormat48);
        org.junit.Assert.assertNotNull(obj50);
        org.junit.Assert.assertNotNull(numberFormat51);
        org.junit.Assert.assertNotNull(fraction53);
    }

    @Test
    public void test0432() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0432");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat5 = fractionFormat0.getNumeratorFormat();
        java.text.NumberFormat numberFormat6 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat7 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator9 = fractionFormat7.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat10 = fractionFormat7.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = new org.apache.commons.math.fraction.FractionFormat(numberFormat6, numberFormat10);
        org.apache.commons.math.fraction.FractionFormat fractionFormat12 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator14 = fractionFormat12.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat15 = fractionFormat12.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat16 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator18 = fractionFormat16.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat19 = fractionFormat16.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat20 = new org.apache.commons.math.fraction.FractionFormat(numberFormat15, numberFormat19);
        fractionFormat11.setNumeratorFormat(numberFormat15);
        org.apache.commons.math.fraction.Fraction fraction23 = fractionFormat11.parse("0 / 1");
        java.lang.Class<?> wildcardClass24 = fractionFormat11.getClass();
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertNotNull(fractionFormat7);
        org.junit.Assert.assertNotNull(attributedCharacterIterator9);
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertNotNull(fractionFormat12);
        org.junit.Assert.assertNotNull(attributedCharacterIterator14);
        org.junit.Assert.assertNotNull(numberFormat15);
        org.junit.Assert.assertNotNull(fractionFormat16);
        org.junit.Assert.assertNotNull(attributedCharacterIterator18);
        org.junit.Assert.assertNotNull(numberFormat19);
        org.junit.Assert.assertNotNull(fraction23);
        org.junit.Assert.assertNotNull(wildcardClass24);
    }

    @Test
    public void test0433() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0433");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = new org.apache.commons.math.fraction.FractionFormat();
        java.lang.String str2 = fractionFormat0.format((java.lang.Object) 0);
        org.apache.commons.math.fraction.FractionFormat fractionFormat3 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator5 = fractionFormat3.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat6 = fractionFormat3.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat7 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator9 = fractionFormat7.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat10 = fractionFormat7.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = new org.apache.commons.math.fraction.FractionFormat(numberFormat6, numberFormat10);
        java.text.NumberFormat numberFormat12 = fractionFormat11.getDenominatorFormat();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str13 = fractionFormat0.format((java.lang.Object) fractionFormat11);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot format given object as a fraction");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "0 / 1" + "'", str2, "0 / 1");
        org.junit.Assert.assertNotNull(fractionFormat3);
        org.junit.Assert.assertNotNull(attributedCharacterIterator5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertNotNull(fractionFormat7);
        org.junit.Assert.assertNotNull(attributedCharacterIterator9);
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertNotNull(numberFormat12);
    }

    @Test
    public void test0434() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0434");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat1 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj3 = fractionFormat1.parseObject("0 / 1");
        java.lang.Object obj5 = fractionFormat1.parseObject("0 / 1");
        java.text.NumberFormat numberFormat6 = fractionFormat1.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat7 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj9 = fractionFormat7.parseObject("0 / 1");
        java.text.NumberFormat numberFormat10 = fractionFormat7.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = new org.apache.commons.math.fraction.FractionFormat(numberFormat6, numberFormat10);
        org.apache.commons.math.fraction.FractionFormat fractionFormat12 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj14 = fractionFormat12.parseObject("0 / 1");
        java.lang.Object obj16 = fractionFormat12.parseObject("0 / 1");
        java.text.NumberFormat numberFormat17 = fractionFormat12.getNumeratorFormat();
        fractionFormat11.setDenominatorFormat(numberFormat17);
        java.lang.Object obj19 = numberFormat17.clone();
        fractionFormat0.setNumeratorFormat(numberFormat17);
        java.text.NumberFormat numberFormat21 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat22 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj24 = fractionFormat22.parseObject("0 / 1");
        java.lang.Object obj26 = fractionFormat22.parseObject("0 / 1");
        java.text.NumberFormat numberFormat27 = fractionFormat22.getNumeratorFormat();
        java.text.NumberFormat numberFormat28 = fractionFormat22.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat29 = new org.apache.commons.math.fraction.FractionFormat(numberFormat28);
        fractionFormat0.setNumeratorFormat(numberFormat28);
        java.text.ParsePosition parsePosition32 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.fraction.Fraction fraction33 = fractionFormat0.parse("0 / 1", parsePosition32);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(fractionFormat1);
        org.junit.Assert.assertNotNull(obj3);
        org.junit.Assert.assertNotNull(obj5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertNotNull(fractionFormat7);
        org.junit.Assert.assertNotNull(obj9);
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertNotNull(fractionFormat12);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertNotNull(obj16);
        org.junit.Assert.assertNotNull(numberFormat17);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(numberFormat21);
        org.junit.Assert.assertNotNull(fractionFormat22);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertNotNull(numberFormat27);
        org.junit.Assert.assertNotNull(numberFormat28);
    }

    @Test
    public void test0435() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0435");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.text.NumberFormat numberFormat3 = fractionFormat2.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat4 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj6 = fractionFormat4.parseObject("0 / 1");
        java.lang.Object obj8 = fractionFormat4.parseObject("0 / 1");
        java.text.NumberFormat numberFormat9 = fractionFormat4.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat10 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj12 = fractionFormat10.parseObject("0 / 1");
        java.text.NumberFormat numberFormat13 = fractionFormat10.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat14 = new org.apache.commons.math.fraction.FractionFormat(numberFormat9, numberFormat13);
        org.apache.commons.math.fraction.FractionFormat fractionFormat15 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj17 = fractionFormat15.parseObject("0 / 1");
        java.lang.Object obj19 = fractionFormat15.parseObject("0 / 1");
        java.text.NumberFormat numberFormat20 = fractionFormat15.getNumeratorFormat();
        fractionFormat14.setDenominatorFormat(numberFormat20);
        java.lang.Object obj22 = numberFormat20.clone();
        fractionFormat2.setDenominatorFormat(numberFormat20);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj25 = fractionFormat2.parseObject("hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(numberFormat3);
        org.junit.Assert.assertNotNull(fractionFormat4);
        org.junit.Assert.assertNotNull(obj6);
        org.junit.Assert.assertNotNull(obj8);
        org.junit.Assert.assertNotNull(numberFormat9);
        org.junit.Assert.assertNotNull(fractionFormat10);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertNotNull(numberFormat13);
        org.junit.Assert.assertNotNull(fractionFormat15);
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(numberFormat20);
        org.junit.Assert.assertNotNull(obj22);
    }

    @Test
    public void test0436() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0436");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator2 = fractionFormat0.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat3 = fractionFormat0.getDenominatorFormat();
        java.text.NumberFormat numberFormat4 = null;
        // The following exception was thrown during execution in test generation
        try {
            fractionFormat0.setNumeratorFormat(numberFormat4);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: numerator format can not be null.");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(attributedCharacterIterator2);
        org.junit.Assert.assertNotNull(numberFormat3);
    }

    @Test
    public void test0437() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0437");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat5 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat6 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj8 = fractionFormat6.parseObject("0 / 1");
        java.lang.Object obj10 = fractionFormat6.parseObject("0 / 1");
        java.text.NumberFormat numberFormat11 = fractionFormat6.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat12 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj14 = fractionFormat12.parseObject("0 / 1");
        java.text.NumberFormat numberFormat15 = fractionFormat12.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat16 = new org.apache.commons.math.fraction.FractionFormat(numberFormat11, numberFormat15);
        org.apache.commons.math.fraction.FractionFormat fractionFormat17 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj19 = fractionFormat17.parseObject("0 / 1");
        java.lang.Object obj21 = fractionFormat17.parseObject("0 / 1");
        java.text.NumberFormat numberFormat22 = fractionFormat17.getNumeratorFormat();
        fractionFormat16.setDenominatorFormat(numberFormat22);
        org.apache.commons.math.fraction.FractionFormat fractionFormat24 = new org.apache.commons.math.fraction.FractionFormat(numberFormat5, numberFormat22);
        java.text.NumberFormat numberFormat25 = null;
        java.text.NumberFormat numberFormat26 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat27 = new org.apache.commons.math.fraction.FractionFormat(numberFormat25, numberFormat26);
        java.text.NumberFormat numberFormat28 = fractionFormat27.getDenominatorFormat();
        java.text.NumberFormat numberFormat29 = fractionFormat27.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat30 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj32 = fractionFormat30.parseObject("0 / 1");
        java.lang.Object obj34 = fractionFormat30.parseObject("0 / 1");
        java.text.NumberFormat numberFormat35 = fractionFormat30.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat36 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj38 = fractionFormat36.parseObject("0 / 1");
        java.text.NumberFormat numberFormat39 = fractionFormat36.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat40 = new org.apache.commons.math.fraction.FractionFormat(numberFormat35, numberFormat39);
        java.text.AttributedCharacterIterator attributedCharacterIterator42 = numberFormat35.formatToCharacterIterator((java.lang.Object) (-1));
        fractionFormat27.setDenominatorFormat(numberFormat35);
        java.lang.Object obj44 = numberFormat35.clone();
        java.text.NumberFormat numberFormat45 = null;
        java.text.NumberFormat numberFormat46 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat47 = new org.apache.commons.math.fraction.FractionFormat(numberFormat45, numberFormat46);
        java.text.NumberFormat numberFormat48 = fractionFormat47.getDenominatorFormat();
        java.text.NumberFormat numberFormat49 = fractionFormat47.getNumeratorFormat();
        java.text.NumberFormat numberFormat50 = fractionFormat47.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat51 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj53 = fractionFormat51.parseObject("0 / 1");
        java.lang.Object obj55 = fractionFormat51.parseObject("0 / 1");
        java.text.NumberFormat numberFormat56 = fractionFormat51.getNumeratorFormat();
        java.lang.Object obj57 = numberFormat56.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat58 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj60 = fractionFormat58.parseObject("0 / 1");
        java.lang.Object obj62 = fractionFormat58.parseObject("0 / 1");
        java.text.NumberFormat numberFormat63 = fractionFormat58.getNumeratorFormat();
        java.text.NumberFormat numberFormat64 = fractionFormat58.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat65 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator67 = fractionFormat65.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat68 = fractionFormat65.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat69 = new org.apache.commons.math.fraction.FractionFormat(numberFormat64, numberFormat68);
        org.apache.commons.math.fraction.FractionFormat fractionFormat70 = new org.apache.commons.math.fraction.FractionFormat(numberFormat56, numberFormat68);
        fractionFormat47.setNumeratorFormat(numberFormat56);
        org.apache.commons.math.fraction.FractionFormat fractionFormat72 = new org.apache.commons.math.fraction.FractionFormat(numberFormat35, numberFormat56);
        org.apache.commons.math.fraction.Fraction fraction74 = fractionFormat72.parse("10");
        java.lang.StringBuffer stringBuffer75 = null;
        java.text.FieldPosition fieldPosition76 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer77 = fractionFormat24.format(fraction74, stringBuffer75, fieldPosition76);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(fractionFormat6);
        org.junit.Assert.assertNotNull(obj8);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertNotNull(numberFormat11);
        org.junit.Assert.assertNotNull(fractionFormat12);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertNotNull(numberFormat15);
        org.junit.Assert.assertNotNull(fractionFormat17);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertNotNull(numberFormat22);
        org.junit.Assert.assertNull(numberFormat28);
        org.junit.Assert.assertNull(numberFormat29);
        org.junit.Assert.assertNotNull(fractionFormat30);
        org.junit.Assert.assertNotNull(obj32);
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertNotNull(numberFormat35);
        org.junit.Assert.assertNotNull(fractionFormat36);
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertNotNull(numberFormat39);
        org.junit.Assert.assertNotNull(attributedCharacterIterator42);
        org.junit.Assert.assertNotNull(obj44);
        org.junit.Assert.assertNull(numberFormat48);
        org.junit.Assert.assertNull(numberFormat49);
        org.junit.Assert.assertNull(numberFormat50);
        org.junit.Assert.assertNotNull(fractionFormat51);
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertNotNull(obj55);
        org.junit.Assert.assertNotNull(numberFormat56);
        org.junit.Assert.assertNotNull(obj57);
        org.junit.Assert.assertNotNull(fractionFormat58);
        org.junit.Assert.assertNotNull(obj60);
        org.junit.Assert.assertNotNull(obj62);
        org.junit.Assert.assertNotNull(numberFormat63);
        org.junit.Assert.assertNotNull(numberFormat64);
        org.junit.Assert.assertNotNull(fractionFormat65);
        org.junit.Assert.assertNotNull(attributedCharacterIterator67);
        org.junit.Assert.assertNotNull(numberFormat68);
        org.junit.Assert.assertNotNull(fraction74);
    }

    @Test
    public void test0438() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0438");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.text.NumberFormat numberFormat3 = fractionFormat2.getDenominatorFormat();
        java.text.NumberFormat numberFormat4 = fractionFormat2.getNumeratorFormat();
        java.text.NumberFormat numberFormat5 = fractionFormat2.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat6 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator8 = fractionFormat6.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat9 = fractionFormat6.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat10 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator12 = fractionFormat10.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat13 = fractionFormat10.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat14 = new org.apache.commons.math.fraction.FractionFormat(numberFormat9, numberFormat13);
        fractionFormat2.setNumeratorFormat(numberFormat9);
        org.apache.commons.math.fraction.FractionFormat fractionFormat16 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj18 = fractionFormat16.parseObject("0 / 1");
        java.text.NumberFormat numberFormat19 = fractionFormat16.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat20 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator22 = fractionFormat20.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat23 = fractionFormat20.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat24 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator26 = fractionFormat24.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat27 = fractionFormat24.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat28 = new org.apache.commons.math.fraction.FractionFormat(numberFormat23, numberFormat27);
        org.apache.commons.math.fraction.FractionFormat fractionFormat29 = new org.apache.commons.math.fraction.FractionFormat(numberFormat19, numberFormat23);
        org.apache.commons.math.fraction.FractionFormat fractionFormat30 = new org.apache.commons.math.fraction.FractionFormat(numberFormat9, numberFormat19);
        java.text.ParsePosition parsePosition32 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.fraction.Fraction fraction33 = fractionFormat30.parse("100 / 1", parsePosition32);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(numberFormat3);
        org.junit.Assert.assertNull(numberFormat4);
        org.junit.Assert.assertNull(numberFormat5);
        org.junit.Assert.assertNotNull(fractionFormat6);
        org.junit.Assert.assertNotNull(attributedCharacterIterator8);
        org.junit.Assert.assertNotNull(numberFormat9);
        org.junit.Assert.assertNotNull(fractionFormat10);
        org.junit.Assert.assertNotNull(attributedCharacterIterator12);
        org.junit.Assert.assertNotNull(numberFormat13);
        org.junit.Assert.assertNotNull(fractionFormat16);
        org.junit.Assert.assertNotNull(obj18);
        org.junit.Assert.assertNotNull(numberFormat19);
        org.junit.Assert.assertNotNull(fractionFormat20);
        org.junit.Assert.assertNotNull(attributedCharacterIterator22);
        org.junit.Assert.assertNotNull(numberFormat23);
        org.junit.Assert.assertNotNull(fractionFormat24);
        org.junit.Assert.assertNotNull(attributedCharacterIterator26);
        org.junit.Assert.assertNotNull(numberFormat27);
    }

    @Test
    public void test0439() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0439");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat5 = fractionFormat0.getNumeratorFormat();
        java.text.NumberFormat numberFormat6 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat7 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator9 = fractionFormat7.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat10 = fractionFormat7.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = new org.apache.commons.math.fraction.FractionFormat(numberFormat6, numberFormat10);
        org.apache.commons.math.fraction.FractionFormat fractionFormat12 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj14 = fractionFormat12.parseObject("0 / 1");
        java.lang.Object obj16 = fractionFormat12.parseObject("0 / 1");
        java.text.NumberFormat numberFormat17 = fractionFormat12.getNumeratorFormat();
        java.text.NumberFormat numberFormat18 = fractionFormat12.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat19 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator21 = fractionFormat19.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat22 = fractionFormat19.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat23 = new org.apache.commons.math.fraction.FractionFormat(numberFormat18, numberFormat22);
        fractionFormat11.setNumeratorFormat(numberFormat22);
        org.apache.commons.math.fraction.FractionFormat fractionFormat25 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj27 = fractionFormat25.parseObject("0 / 1");
        java.lang.Object obj29 = fractionFormat25.parseObject("0 / 1");
        java.lang.Object obj31 = fractionFormat25.parseObject("0 / 1");
        java.text.NumberFormat numberFormat32 = null;
        java.text.NumberFormat numberFormat33 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat34 = new org.apache.commons.math.fraction.FractionFormat(numberFormat32, numberFormat33);
        java.text.NumberFormat numberFormat35 = fractionFormat34.getDenominatorFormat();
        java.text.NumberFormat numberFormat36 = fractionFormat34.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat37 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator39 = fractionFormat37.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat40 = fractionFormat37.getDenominatorFormat();
        fractionFormat34.setNumeratorFormat(numberFormat40);
        org.apache.commons.math.fraction.FractionFormat fractionFormat42 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj44 = fractionFormat42.parseObject("0 / 1");
        java.text.NumberFormat numberFormat45 = fractionFormat42.getNumeratorFormat();
        fractionFormat34.setNumeratorFormat(numberFormat45);
        java.lang.Object obj48 = numberFormat45.parseObject("0 / 1");
        fractionFormat25.setNumeratorFormat(numberFormat45);
        java.text.NumberFormat numberFormat50 = fractionFormat25.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat51 = new org.apache.commons.math.fraction.FractionFormat(numberFormat22, numberFormat50);
        java.text.NumberFormat numberFormat52 = null;
        java.text.NumberFormat numberFormat53 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat54 = new org.apache.commons.math.fraction.FractionFormat(numberFormat52, numberFormat53);
        java.text.NumberFormat numberFormat55 = fractionFormat54.getDenominatorFormat();
        java.text.NumberFormat numberFormat56 = fractionFormat54.getNumeratorFormat();
        java.text.NumberFormat numberFormat57 = fractionFormat54.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat58 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj60 = fractionFormat58.parseObject("0 / 1");
        java.lang.Object obj62 = fractionFormat58.parseObject("0 / 1");
        java.text.NumberFormat numberFormat63 = fractionFormat58.getNumeratorFormat();
        java.lang.Object obj64 = numberFormat63.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat65 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj67 = fractionFormat65.parseObject("0 / 1");
        java.lang.Object obj69 = fractionFormat65.parseObject("0 / 1");
        java.text.NumberFormat numberFormat70 = fractionFormat65.getNumeratorFormat();
        java.text.NumberFormat numberFormat71 = fractionFormat65.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat72 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator74 = fractionFormat72.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat75 = fractionFormat72.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat76 = new org.apache.commons.math.fraction.FractionFormat(numberFormat71, numberFormat75);
        org.apache.commons.math.fraction.FractionFormat fractionFormat77 = new org.apache.commons.math.fraction.FractionFormat(numberFormat63, numberFormat75);
        fractionFormat54.setNumeratorFormat(numberFormat63);
        org.apache.commons.math.fraction.FractionFormat fractionFormat79 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj81 = fractionFormat79.parseObject("0 / 1");
        java.lang.Object obj83 = fractionFormat79.parseObject("0 / 1");
        java.text.NumberFormat numberFormat84 = fractionFormat79.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat85 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj87 = fractionFormat85.parseObject("0 / 1");
        java.text.NumberFormat numberFormat88 = fractionFormat85.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat89 = new org.apache.commons.math.fraction.FractionFormat(numberFormat84, numberFormat88);
        org.apache.commons.math.fraction.FractionFormat fractionFormat90 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj92 = fractionFormat90.parseObject("0 / 1");
        java.lang.Object obj94 = fractionFormat90.parseObject("0 / 1");
        java.text.NumberFormat numberFormat95 = fractionFormat90.getNumeratorFormat();
        fractionFormat89.setDenominatorFormat(numberFormat95);
        java.lang.Object obj97 = numberFormat95.clone();
        fractionFormat54.setDenominatorFormat(numberFormat95);
        fractionFormat51.setNumeratorFormat(numberFormat95);
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertNotNull(fractionFormat7);
        org.junit.Assert.assertNotNull(attributedCharacterIterator9);
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertNotNull(fractionFormat12);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertNotNull(obj16);
        org.junit.Assert.assertNotNull(numberFormat17);
        org.junit.Assert.assertNotNull(numberFormat18);
        org.junit.Assert.assertNotNull(fractionFormat19);
        org.junit.Assert.assertNotNull(attributedCharacterIterator21);
        org.junit.Assert.assertNotNull(numberFormat22);
        org.junit.Assert.assertNotNull(fractionFormat25);
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertNull(numberFormat35);
        org.junit.Assert.assertNull(numberFormat36);
        org.junit.Assert.assertNotNull(fractionFormat37);
        org.junit.Assert.assertNotNull(attributedCharacterIterator39);
        org.junit.Assert.assertNotNull(numberFormat40);
        org.junit.Assert.assertNotNull(fractionFormat42);
        org.junit.Assert.assertNotNull(obj44);
        org.junit.Assert.assertNotNull(numberFormat45);
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + 0L + "'", obj48, 0L);
        org.junit.Assert.assertNotNull(numberFormat50);
        org.junit.Assert.assertNull(numberFormat55);
        org.junit.Assert.assertNull(numberFormat56);
        org.junit.Assert.assertNull(numberFormat57);
        org.junit.Assert.assertNotNull(fractionFormat58);
        org.junit.Assert.assertNotNull(obj60);
        org.junit.Assert.assertNotNull(obj62);
        org.junit.Assert.assertNotNull(numberFormat63);
        org.junit.Assert.assertNotNull(obj64);
        org.junit.Assert.assertNotNull(fractionFormat65);
        org.junit.Assert.assertNotNull(obj67);
        org.junit.Assert.assertNotNull(obj69);
        org.junit.Assert.assertNotNull(numberFormat70);
        org.junit.Assert.assertNotNull(numberFormat71);
        org.junit.Assert.assertNotNull(fractionFormat72);
        org.junit.Assert.assertNotNull(attributedCharacterIterator74);
        org.junit.Assert.assertNotNull(numberFormat75);
        org.junit.Assert.assertNotNull(fractionFormat79);
        org.junit.Assert.assertNotNull(obj81);
        org.junit.Assert.assertNotNull(obj83);
        org.junit.Assert.assertNotNull(numberFormat84);
        org.junit.Assert.assertNotNull(fractionFormat85);
        org.junit.Assert.assertNotNull(obj87);
        org.junit.Assert.assertNotNull(numberFormat88);
        org.junit.Assert.assertNotNull(fractionFormat90);
        org.junit.Assert.assertNotNull(obj92);
        org.junit.Assert.assertNotNull(obj94);
        org.junit.Assert.assertNotNull(numberFormat95);
        org.junit.Assert.assertNotNull(obj97);
    }

    @Test
    public void test0440() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0440");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.text.NumberFormat numberFormat3 = fractionFormat2.getDenominatorFormat();
        java.text.NumberFormat numberFormat4 = fractionFormat2.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator7 = fractionFormat5.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat8 = fractionFormat5.getDenominatorFormat();
        fractionFormat2.setNumeratorFormat(numberFormat8);
        java.lang.Object obj10 = numberFormat8.clone();
        java.lang.String str12 = numberFormat8.format((java.lang.Object) (short) 10);
        java.text.NumberFormat numberFormat13 = null;
        java.text.NumberFormat numberFormat14 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat15 = new org.apache.commons.math.fraction.FractionFormat(numberFormat13, numberFormat14);
        java.text.NumberFormat numberFormat16 = fractionFormat15.getDenominatorFormat();
        java.text.NumberFormat numberFormat17 = fractionFormat15.getNumeratorFormat();
        java.text.NumberFormat numberFormat18 = fractionFormat15.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat19 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator21 = fractionFormat19.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat22 = fractionFormat19.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat23 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator25 = fractionFormat23.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat26 = fractionFormat23.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat27 = new org.apache.commons.math.fraction.FractionFormat(numberFormat22, numberFormat26);
        fractionFormat15.setNumeratorFormat(numberFormat22);
        org.apache.commons.math.fraction.FractionFormat fractionFormat29 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj31 = fractionFormat29.parseObject("0 / 1");
        java.text.NumberFormat numberFormat32 = fractionFormat29.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat33 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator35 = fractionFormat33.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat36 = fractionFormat33.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat37 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator39 = fractionFormat37.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat40 = fractionFormat37.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat41 = new org.apache.commons.math.fraction.FractionFormat(numberFormat36, numberFormat40);
        org.apache.commons.math.fraction.FractionFormat fractionFormat42 = new org.apache.commons.math.fraction.FractionFormat(numberFormat32, numberFormat36);
        org.apache.commons.math.fraction.FractionFormat fractionFormat43 = new org.apache.commons.math.fraction.FractionFormat(numberFormat22, numberFormat32);
        org.apache.commons.math.fraction.FractionFormat fractionFormat44 = new org.apache.commons.math.fraction.FractionFormat(numberFormat8, numberFormat32);
        java.text.NumberFormat numberFormat45 = fractionFormat44.getNumeratorFormat();
        java.lang.Object obj47 = numberFormat45.parseObject("0 / 1");
        org.junit.Assert.assertNull(numberFormat3);
        org.junit.Assert.assertNull(numberFormat4);
        org.junit.Assert.assertNotNull(fractionFormat5);
        org.junit.Assert.assertNotNull(attributedCharacterIterator7);
        org.junit.Assert.assertNotNull(numberFormat8);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "10" + "'", str12, "10");
        org.junit.Assert.assertNull(numberFormat16);
        org.junit.Assert.assertNull(numberFormat17);
        org.junit.Assert.assertNull(numberFormat18);
        org.junit.Assert.assertNotNull(fractionFormat19);
        org.junit.Assert.assertNotNull(attributedCharacterIterator21);
        org.junit.Assert.assertNotNull(numberFormat22);
        org.junit.Assert.assertNotNull(fractionFormat23);
        org.junit.Assert.assertNotNull(attributedCharacterIterator25);
        org.junit.Assert.assertNotNull(numberFormat26);
        org.junit.Assert.assertNotNull(fractionFormat29);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertNotNull(numberFormat32);
        org.junit.Assert.assertNotNull(fractionFormat33);
        org.junit.Assert.assertNotNull(attributedCharacterIterator35);
        org.junit.Assert.assertNotNull(numberFormat36);
        org.junit.Assert.assertNotNull(fractionFormat37);
        org.junit.Assert.assertNotNull(attributedCharacterIterator39);
        org.junit.Assert.assertNotNull(numberFormat40);
        org.junit.Assert.assertNotNull(numberFormat45);
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + 0L + "'", obj47, 0L);
    }

    @Test
    public void test0441() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0441");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat5 = fractionFormat0.getNumeratorFormat();
        java.text.NumberFormat numberFormat6 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat7 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator9 = fractionFormat7.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat10 = fractionFormat7.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = new org.apache.commons.math.fraction.FractionFormat(numberFormat6, numberFormat10);
        org.apache.commons.math.fraction.FractionFormat fractionFormat12 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj14 = fractionFormat12.parseObject("0 / 1");
        java.text.NumberFormat numberFormat15 = fractionFormat12.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat16 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj18 = fractionFormat16.parseObject("0 / 1");
        java.lang.Object obj20 = fractionFormat16.parseObject("0 / 1");
        java.text.NumberFormat numberFormat21 = fractionFormat16.getNumeratorFormat();
        java.text.NumberFormat numberFormat22 = fractionFormat16.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat23 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator25 = fractionFormat23.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat26 = fractionFormat23.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat27 = new org.apache.commons.math.fraction.FractionFormat(numberFormat22, numberFormat26);
        fractionFormat12.setNumeratorFormat(numberFormat26);
        org.apache.commons.math.fraction.FractionFormat fractionFormat29 = new org.apache.commons.math.fraction.FractionFormat(numberFormat6, numberFormat26);
        org.apache.commons.math.fraction.FractionFormat fractionFormat30 = new org.apache.commons.math.fraction.FractionFormat(numberFormat26);
        org.apache.commons.math.fraction.FractionFormat fractionFormat31 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.Fraction fraction33 = fractionFormat31.parse("0 / 1");
        org.apache.commons.math.fraction.FractionFormat fractionFormat34 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator36 = fractionFormat34.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat37 = fractionFormat34.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat38 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator40 = fractionFormat38.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat41 = fractionFormat38.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat42 = new org.apache.commons.math.fraction.FractionFormat(numberFormat37, numberFormat41);
        java.text.NumberFormat numberFormat43 = fractionFormat42.getDenominatorFormat();
        fractionFormat31.setDenominatorFormat(numberFormat43);
        org.apache.commons.math.fraction.FractionFormat fractionFormat45 = new org.apache.commons.math.fraction.FractionFormat(numberFormat43);
        fractionFormat30.setDenominatorFormat(numberFormat43);
        java.lang.Class<?> wildcardClass47 = numberFormat43.getClass();
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertNotNull(fractionFormat7);
        org.junit.Assert.assertNotNull(attributedCharacterIterator9);
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertNotNull(fractionFormat12);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertNotNull(numberFormat15);
        org.junit.Assert.assertNotNull(fractionFormat16);
        org.junit.Assert.assertNotNull(obj18);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertNotNull(numberFormat21);
        org.junit.Assert.assertNotNull(numberFormat22);
        org.junit.Assert.assertNotNull(fractionFormat23);
        org.junit.Assert.assertNotNull(attributedCharacterIterator25);
        org.junit.Assert.assertNotNull(numberFormat26);
        org.junit.Assert.assertNotNull(fractionFormat31);
        org.junit.Assert.assertNotNull(fraction33);
        org.junit.Assert.assertNotNull(fractionFormat34);
        org.junit.Assert.assertNotNull(attributedCharacterIterator36);
        org.junit.Assert.assertNotNull(numberFormat37);
        org.junit.Assert.assertNotNull(fractionFormat38);
        org.junit.Assert.assertNotNull(attributedCharacterIterator40);
        org.junit.Assert.assertNotNull(numberFormat41);
        org.junit.Assert.assertNotNull(numberFormat43);
        org.junit.Assert.assertNotNull(wildcardClass47);
    }

    @Test
    public void test0442() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0442");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator2 = fractionFormat0.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat3 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat4 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator6 = fractionFormat4.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat7 = fractionFormat4.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat8 = new org.apache.commons.math.fraction.FractionFormat(numberFormat3, numberFormat7);
        java.text.NumberFormat numberFormat9 = fractionFormat8.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat10 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj13 = fractionFormat11.parseObject("0 / 1");
        java.lang.Object obj15 = fractionFormat11.parseObject("0 / 1");
        java.text.NumberFormat numberFormat16 = fractionFormat11.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat17 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj19 = fractionFormat17.parseObject("0 / 1");
        java.text.NumberFormat numberFormat20 = fractionFormat17.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat21 = new org.apache.commons.math.fraction.FractionFormat(numberFormat16, numberFormat20);
        org.apache.commons.math.fraction.FractionFormat fractionFormat22 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj24 = fractionFormat22.parseObject("0 / 1");
        java.lang.Object obj26 = fractionFormat22.parseObject("0 / 1");
        java.text.NumberFormat numberFormat27 = fractionFormat22.getNumeratorFormat();
        fractionFormat21.setDenominatorFormat(numberFormat27);
        java.lang.Object obj29 = numberFormat27.clone();
        fractionFormat10.setNumeratorFormat(numberFormat27);
        java.lang.Object obj31 = numberFormat27.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat32 = new org.apache.commons.math.fraction.FractionFormat(numberFormat9, numberFormat27);
        java.text.NumberFormat numberFormat33 = fractionFormat32.getNumeratorFormat();
        java.text.ParsePosition parsePosition35 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj36 = fractionFormat32.parseObject("", parsePosition35);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(attributedCharacterIterator2);
        org.junit.Assert.assertNotNull(numberFormat3);
        org.junit.Assert.assertNotNull(fractionFormat4);
        org.junit.Assert.assertNotNull(attributedCharacterIterator6);
        org.junit.Assert.assertNotNull(numberFormat7);
        org.junit.Assert.assertNotNull(numberFormat9);
        org.junit.Assert.assertNotNull(fractionFormat10);
        org.junit.Assert.assertNotNull(fractionFormat11);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertNotNull(numberFormat16);
        org.junit.Assert.assertNotNull(fractionFormat17);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(numberFormat20);
        org.junit.Assert.assertNotNull(fractionFormat22);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertNotNull(numberFormat27);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertNotNull(numberFormat33);
    }

    @Test
    public void test0443() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0443");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.text.NumberFormat numberFormat3 = fractionFormat2.getDenominatorFormat();
        java.text.NumberFormat numberFormat4 = fractionFormat2.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator7 = fractionFormat5.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat8 = fractionFormat5.getDenominatorFormat();
        fractionFormat2.setNumeratorFormat(numberFormat8);
        java.text.NumberFormat numberFormat10 = fractionFormat2.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat12 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj14 = fractionFormat12.parseObject("0 / 1");
        java.lang.Object obj16 = fractionFormat12.parseObject("0 / 1");
        java.text.NumberFormat numberFormat17 = fractionFormat12.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat18 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj20 = fractionFormat18.parseObject("0 / 1");
        java.text.NumberFormat numberFormat21 = fractionFormat18.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat22 = new org.apache.commons.math.fraction.FractionFormat(numberFormat17, numberFormat21);
        org.apache.commons.math.fraction.FractionFormat fractionFormat23 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj25 = fractionFormat23.parseObject("0 / 1");
        java.lang.Object obj27 = fractionFormat23.parseObject("0 / 1");
        java.text.NumberFormat numberFormat28 = fractionFormat23.getNumeratorFormat();
        fractionFormat22.setDenominatorFormat(numberFormat28);
        java.lang.Object obj30 = numberFormat28.clone();
        fractionFormat11.setNumeratorFormat(numberFormat28);
        java.lang.Object obj32 = numberFormat28.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat33 = new org.apache.commons.math.fraction.FractionFormat(numberFormat28);
        fractionFormat2.setNumeratorFormat(numberFormat28);
        java.text.ParsePosition parsePosition36 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.fraction.Fraction fraction37 = fractionFormat2.parse("10 / 1", parsePosition36);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(numberFormat3);
        org.junit.Assert.assertNull(numberFormat4);
        org.junit.Assert.assertNotNull(fractionFormat5);
        org.junit.Assert.assertNotNull(attributedCharacterIterator7);
        org.junit.Assert.assertNotNull(numberFormat8);
        org.junit.Assert.assertNull(numberFormat10);
        org.junit.Assert.assertNotNull(fractionFormat11);
        org.junit.Assert.assertNotNull(fractionFormat12);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertNotNull(obj16);
        org.junit.Assert.assertNotNull(numberFormat17);
        org.junit.Assert.assertNotNull(fractionFormat18);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertNotNull(numberFormat21);
        org.junit.Assert.assertNotNull(fractionFormat23);
        org.junit.Assert.assertNotNull(obj25);
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertNotNull(numberFormat28);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertNotNull(obj32);
    }

    @Test
    public void test0444() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0444");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat5 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat6 = new org.apache.commons.math.fraction.FractionFormat(numberFormat5);
        java.text.AttributedCharacterIterator attributedCharacterIterator8 = fractionFormat6.formatToCharacterIterator((java.lang.Object) 1.0d);
        org.apache.commons.math.fraction.Fraction fraction9 = null;
        java.lang.StringBuffer stringBuffer10 = null;
        java.text.FieldPosition fieldPosition11 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer12 = fractionFormat6.format(fraction9, stringBuffer10, fieldPosition11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(attributedCharacterIterator8);
    }

    @Test
    public void test0445() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0445");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.text.NumberFormat numberFormat3 = fractionFormat2.getDenominatorFormat();
        java.text.NumberFormat numberFormat4 = fractionFormat2.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator7 = fractionFormat5.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat8 = fractionFormat5.getDenominatorFormat();
        fractionFormat2.setNumeratorFormat(numberFormat8);
        org.apache.commons.math.fraction.FractionFormat fractionFormat10 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj12 = fractionFormat10.parseObject("0 / 1");
        java.text.NumberFormat numberFormat13 = fractionFormat10.getNumeratorFormat();
        fractionFormat2.setNumeratorFormat(numberFormat13);
        java.text.NumberFormat numberFormat15 = fractionFormat2.getNumeratorFormat();
        java.lang.Class<?> wildcardClass16 = fractionFormat2.getClass();
        org.junit.Assert.assertNull(numberFormat3);
        org.junit.Assert.assertNull(numberFormat4);
        org.junit.Assert.assertNotNull(fractionFormat5);
        org.junit.Assert.assertNotNull(attributedCharacterIterator7);
        org.junit.Assert.assertNotNull(numberFormat8);
        org.junit.Assert.assertNotNull(fractionFormat10);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertNotNull(numberFormat13);
        org.junit.Assert.assertNotNull(numberFormat15);
        org.junit.Assert.assertNotNull(wildcardClass16);
    }

    @Test
    public void test0446() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0446");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat5 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat6 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj8 = fractionFormat6.parseObject("0 / 1");
        java.text.NumberFormat numberFormat9 = fractionFormat6.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat10 = new org.apache.commons.math.fraction.FractionFormat(numberFormat5, numberFormat9);
        java.text.AttributedCharacterIterator attributedCharacterIterator12 = numberFormat5.formatToCharacterIterator((java.lang.Object) (-1));
        org.apache.commons.math.fraction.FractionFormat fractionFormat13 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator15 = fractionFormat13.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat16 = fractionFormat13.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat17 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator19 = fractionFormat17.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat20 = fractionFormat17.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat21 = new org.apache.commons.math.fraction.FractionFormat(numberFormat16, numberFormat20);
        java.text.NumberFormat numberFormat22 = fractionFormat21.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat23 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat24 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj26 = fractionFormat24.parseObject("0 / 1");
        java.lang.Object obj28 = fractionFormat24.parseObject("0 / 1");
        java.text.NumberFormat numberFormat29 = fractionFormat24.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat30 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj32 = fractionFormat30.parseObject("0 / 1");
        java.text.NumberFormat numberFormat33 = fractionFormat30.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat34 = new org.apache.commons.math.fraction.FractionFormat(numberFormat29, numberFormat33);
        org.apache.commons.math.fraction.FractionFormat fractionFormat35 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj37 = fractionFormat35.parseObject("0 / 1");
        java.lang.Object obj39 = fractionFormat35.parseObject("0 / 1");
        java.text.NumberFormat numberFormat40 = fractionFormat35.getNumeratorFormat();
        fractionFormat34.setDenominatorFormat(numberFormat40);
        java.lang.Object obj42 = numberFormat40.clone();
        fractionFormat23.setNumeratorFormat(numberFormat40);
        java.lang.Object obj44 = numberFormat40.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat45 = new org.apache.commons.math.fraction.FractionFormat(numberFormat22, numberFormat40);
        java.text.NumberFormat numberFormat46 = fractionFormat45.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat47 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj49 = fractionFormat47.parseObject("0 / 1");
        java.lang.Object obj51 = fractionFormat47.parseObject("0 / 1");
        java.text.NumberFormat numberFormat52 = fractionFormat47.getNumeratorFormat();
        java.text.NumberFormat numberFormat53 = fractionFormat47.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat54 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator56 = fractionFormat54.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat57 = fractionFormat54.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat58 = new org.apache.commons.math.fraction.FractionFormat(numberFormat53, numberFormat57);
        org.apache.commons.math.fraction.FractionFormat fractionFormat59 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator61 = fractionFormat59.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat62 = fractionFormat59.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat63 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator65 = fractionFormat63.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat66 = fractionFormat63.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat67 = new org.apache.commons.math.fraction.FractionFormat(numberFormat62, numberFormat66);
        fractionFormat58.setNumeratorFormat(numberFormat62);
        org.apache.commons.math.fraction.FractionFormat fractionFormat69 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj71 = fractionFormat69.parseObject("0 / 1");
        java.lang.Object obj73 = fractionFormat69.parseObject("0 / 1");
        java.text.NumberFormat numberFormat74 = fractionFormat69.getNumeratorFormat();
        java.text.NumberFormat numberFormat75 = fractionFormat69.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat76 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator78 = fractionFormat76.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat79 = fractionFormat76.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat80 = new org.apache.commons.math.fraction.FractionFormat(numberFormat75, numberFormat79);
        org.apache.commons.math.fraction.FractionFormat fractionFormat81 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator83 = fractionFormat81.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat84 = fractionFormat81.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat85 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator87 = fractionFormat85.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat88 = fractionFormat85.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat89 = new org.apache.commons.math.fraction.FractionFormat(numberFormat84, numberFormat88);
        fractionFormat80.setNumeratorFormat(numberFormat84);
        fractionFormat58.setNumeratorFormat(numberFormat84);
        fractionFormat45.setNumeratorFormat(numberFormat84);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str93 = numberFormat5.format((java.lang.Object) numberFormat84);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot format given Object as a Number");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(fractionFormat6);
        org.junit.Assert.assertNotNull(obj8);
        org.junit.Assert.assertNotNull(numberFormat9);
        org.junit.Assert.assertNotNull(attributedCharacterIterator12);
        org.junit.Assert.assertNotNull(fractionFormat13);
        org.junit.Assert.assertNotNull(attributedCharacterIterator15);
        org.junit.Assert.assertNotNull(numberFormat16);
        org.junit.Assert.assertNotNull(fractionFormat17);
        org.junit.Assert.assertNotNull(attributedCharacterIterator19);
        org.junit.Assert.assertNotNull(numberFormat20);
        org.junit.Assert.assertNotNull(numberFormat22);
        org.junit.Assert.assertNotNull(fractionFormat23);
        org.junit.Assert.assertNotNull(fractionFormat24);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertNotNull(numberFormat29);
        org.junit.Assert.assertNotNull(fractionFormat30);
        org.junit.Assert.assertNotNull(obj32);
        org.junit.Assert.assertNotNull(numberFormat33);
        org.junit.Assert.assertNotNull(fractionFormat35);
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertNotNull(obj39);
        org.junit.Assert.assertNotNull(numberFormat40);
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertNotNull(obj44);
        org.junit.Assert.assertNotNull(numberFormat46);
        org.junit.Assert.assertNotNull(fractionFormat47);
        org.junit.Assert.assertNotNull(obj49);
        org.junit.Assert.assertNotNull(obj51);
        org.junit.Assert.assertNotNull(numberFormat52);
        org.junit.Assert.assertNotNull(numberFormat53);
        org.junit.Assert.assertNotNull(fractionFormat54);
        org.junit.Assert.assertNotNull(attributedCharacterIterator56);
        org.junit.Assert.assertNotNull(numberFormat57);
        org.junit.Assert.assertNotNull(fractionFormat59);
        org.junit.Assert.assertNotNull(attributedCharacterIterator61);
        org.junit.Assert.assertNotNull(numberFormat62);
        org.junit.Assert.assertNotNull(fractionFormat63);
        org.junit.Assert.assertNotNull(attributedCharacterIterator65);
        org.junit.Assert.assertNotNull(numberFormat66);
        org.junit.Assert.assertNotNull(fractionFormat69);
        org.junit.Assert.assertNotNull(obj71);
        org.junit.Assert.assertNotNull(obj73);
        org.junit.Assert.assertNotNull(numberFormat74);
        org.junit.Assert.assertNotNull(numberFormat75);
        org.junit.Assert.assertNotNull(fractionFormat76);
        org.junit.Assert.assertNotNull(attributedCharacterIterator78);
        org.junit.Assert.assertNotNull(numberFormat79);
        org.junit.Assert.assertNotNull(fractionFormat81);
        org.junit.Assert.assertNotNull(attributedCharacterIterator83);
        org.junit.Assert.assertNotNull(numberFormat84);
        org.junit.Assert.assertNotNull(fractionFormat85);
        org.junit.Assert.assertNotNull(attributedCharacterIterator87);
        org.junit.Assert.assertNotNull(numberFormat88);
    }

    @Test
    public void test0447() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0447");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj6 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat7 = fractionFormat0.getNumeratorFormat();
        java.lang.Object obj9 = numberFormat7.parseObject("10");
        org.apache.commons.math.fraction.FractionFormat fractionFormat10 = new org.apache.commons.math.fraction.FractionFormat(numberFormat7);
        java.lang.Class<?> wildcardClass11 = numberFormat7.getClass();
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(obj6);
        org.junit.Assert.assertNotNull(numberFormat7);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 10L + "'", obj9, 10L);
        org.junit.Assert.assertNotNull(wildcardClass11);
    }

    @Test
    public void test0448() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0448");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat5 = fractionFormat0.getNumeratorFormat();
        java.text.NumberFormat numberFormat6 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat7 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator9 = fractionFormat7.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat10 = fractionFormat7.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = new org.apache.commons.math.fraction.FractionFormat(numberFormat6, numberFormat10);
        org.apache.commons.math.fraction.FractionFormat fractionFormat12 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator14 = fractionFormat12.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat15 = fractionFormat12.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat16 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator18 = fractionFormat16.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat19 = fractionFormat16.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat20 = new org.apache.commons.math.fraction.FractionFormat(numberFormat15, numberFormat19);
        org.apache.commons.math.fraction.FractionFormat fractionFormat21 = new org.apache.commons.math.fraction.FractionFormat(numberFormat6, numberFormat19);
        java.text.NumberFormat numberFormat22 = null;
        java.text.NumberFormat numberFormat23 = null;
        java.text.NumberFormat numberFormat24 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat25 = new org.apache.commons.math.fraction.FractionFormat(numberFormat23, numberFormat24);
        java.lang.Object obj26 = fractionFormat25.clone();
        java.text.NumberFormat numberFormat27 = null;
        java.text.NumberFormat numberFormat28 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat29 = new org.apache.commons.math.fraction.FractionFormat(numberFormat27, numberFormat28);
        java.text.NumberFormat numberFormat30 = fractionFormat29.getDenominatorFormat();
        java.text.NumberFormat numberFormat31 = fractionFormat29.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat32 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator34 = fractionFormat32.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat35 = fractionFormat32.getDenominatorFormat();
        fractionFormat29.setNumeratorFormat(numberFormat35);
        java.lang.Object obj37 = numberFormat35.clone();
        java.lang.String str39 = numberFormat35.format((java.lang.Object) (short) 10);
        org.apache.commons.math.fraction.FractionFormat fractionFormat40 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator42 = fractionFormat40.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat43 = fractionFormat40.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat44 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator46 = fractionFormat44.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat47 = fractionFormat44.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat48 = new org.apache.commons.math.fraction.FractionFormat(numberFormat43, numberFormat47);
        org.apache.commons.math.fraction.FractionFormat fractionFormat49 = new org.apache.commons.math.fraction.FractionFormat(numberFormat35, numberFormat43);
        fractionFormat25.setDenominatorFormat(numberFormat35);
        org.apache.commons.math.fraction.FractionFormat fractionFormat51 = new org.apache.commons.math.fraction.FractionFormat(numberFormat35);
        org.apache.commons.math.fraction.FractionFormat fractionFormat52 = new org.apache.commons.math.fraction.FractionFormat(numberFormat22, numberFormat35);
        org.apache.commons.math.fraction.FractionFormat fractionFormat53 = new org.apache.commons.math.fraction.FractionFormat(numberFormat19, numberFormat22);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.fraction.FractionFormat fractionFormat54 = new org.apache.commons.math.fraction.FractionFormat(numberFormat22);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertNotNull(fractionFormat7);
        org.junit.Assert.assertNotNull(attributedCharacterIterator9);
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertNotNull(fractionFormat12);
        org.junit.Assert.assertNotNull(attributedCharacterIterator14);
        org.junit.Assert.assertNotNull(numberFormat15);
        org.junit.Assert.assertNotNull(fractionFormat16);
        org.junit.Assert.assertNotNull(attributedCharacterIterator18);
        org.junit.Assert.assertNotNull(numberFormat19);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertNull(numberFormat30);
        org.junit.Assert.assertNull(numberFormat31);
        org.junit.Assert.assertNotNull(fractionFormat32);
        org.junit.Assert.assertNotNull(attributedCharacterIterator34);
        org.junit.Assert.assertNotNull(numberFormat35);
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "10" + "'", str39, "10");
        org.junit.Assert.assertNotNull(fractionFormat40);
        org.junit.Assert.assertNotNull(attributedCharacterIterator42);
        org.junit.Assert.assertNotNull(numberFormat43);
        org.junit.Assert.assertNotNull(fractionFormat44);
        org.junit.Assert.assertNotNull(attributedCharacterIterator46);
        org.junit.Assert.assertNotNull(numberFormat47);
    }

    @Test
    public void test0449() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0449");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.lang.Object obj3 = fractionFormat2.clone();
        java.text.NumberFormat numberFormat4 = null;
        java.text.NumberFormat numberFormat5 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat6 = new org.apache.commons.math.fraction.FractionFormat(numberFormat4, numberFormat5);
        java.text.NumberFormat numberFormat7 = fractionFormat6.getDenominatorFormat();
        java.text.NumberFormat numberFormat8 = fractionFormat6.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat9 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator11 = fractionFormat9.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat12 = fractionFormat9.getDenominatorFormat();
        fractionFormat6.setNumeratorFormat(numberFormat12);
        java.lang.Object obj14 = numberFormat12.clone();
        java.lang.String str16 = numberFormat12.format((java.lang.Object) (short) 10);
        org.apache.commons.math.fraction.FractionFormat fractionFormat17 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator19 = fractionFormat17.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat20 = fractionFormat17.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat21 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator23 = fractionFormat21.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat24 = fractionFormat21.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat25 = new org.apache.commons.math.fraction.FractionFormat(numberFormat20, numberFormat24);
        org.apache.commons.math.fraction.FractionFormat fractionFormat26 = new org.apache.commons.math.fraction.FractionFormat(numberFormat12, numberFormat20);
        fractionFormat2.setDenominatorFormat(numberFormat12);
        java.text.ParsePosition parsePosition29 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.fraction.Fraction fraction30 = fractionFormat2.parse("", parsePosition29);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(obj3);
        org.junit.Assert.assertNull(numberFormat7);
        org.junit.Assert.assertNull(numberFormat8);
        org.junit.Assert.assertNotNull(fractionFormat9);
        org.junit.Assert.assertNotNull(attributedCharacterIterator11);
        org.junit.Assert.assertNotNull(numberFormat12);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "10" + "'", str16, "10");
        org.junit.Assert.assertNotNull(fractionFormat17);
        org.junit.Assert.assertNotNull(attributedCharacterIterator19);
        org.junit.Assert.assertNotNull(numberFormat20);
        org.junit.Assert.assertNotNull(fractionFormat21);
        org.junit.Assert.assertNotNull(attributedCharacterIterator23);
        org.junit.Assert.assertNotNull(numberFormat24);
    }

    @Test
    public void test0450() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0450");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat5 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat6 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj8 = fractionFormat6.parseObject("0 / 1");
        java.text.NumberFormat numberFormat9 = fractionFormat6.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat10 = new org.apache.commons.math.fraction.FractionFormat(numberFormat5, numberFormat9);
        java.text.NumberFormat numberFormat11 = fractionFormat10.getNumeratorFormat();
        java.text.NumberFormat numberFormat12 = fractionFormat10.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat13 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj15 = fractionFormat13.parseObject("0 / 1");
        java.lang.Object obj17 = fractionFormat13.parseObject("0 / 1");
        java.text.NumberFormat numberFormat18 = fractionFormat13.getNumeratorFormat();
        java.text.NumberFormat numberFormat19 = fractionFormat13.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat20 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator22 = fractionFormat20.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat23 = fractionFormat20.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat24 = new org.apache.commons.math.fraction.FractionFormat(numberFormat19, numberFormat23);
        org.apache.commons.math.fraction.FractionFormat fractionFormat25 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator27 = fractionFormat25.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat28 = fractionFormat25.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat29 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator31 = fractionFormat29.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat32 = fractionFormat29.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat33 = new org.apache.commons.math.fraction.FractionFormat(numberFormat28, numberFormat32);
        org.apache.commons.math.fraction.FractionFormat fractionFormat34 = new org.apache.commons.math.fraction.FractionFormat(numberFormat19, numberFormat32);
        java.text.NumberFormat numberFormat35 = fractionFormat34.getDenominatorFormat();
        java.lang.Object obj36 = fractionFormat34.clone();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str37 = fractionFormat10.format((java.lang.Object) fractionFormat34);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot format given object as a fraction");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(fractionFormat6);
        org.junit.Assert.assertNotNull(obj8);
        org.junit.Assert.assertNotNull(numberFormat9);
        org.junit.Assert.assertNotNull(numberFormat11);
        org.junit.Assert.assertNotNull(numberFormat12);
        org.junit.Assert.assertNotNull(fractionFormat13);
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertNotNull(numberFormat18);
        org.junit.Assert.assertNotNull(numberFormat19);
        org.junit.Assert.assertNotNull(fractionFormat20);
        org.junit.Assert.assertNotNull(attributedCharacterIterator22);
        org.junit.Assert.assertNotNull(numberFormat23);
        org.junit.Assert.assertNotNull(fractionFormat25);
        org.junit.Assert.assertNotNull(attributedCharacterIterator27);
        org.junit.Assert.assertNotNull(numberFormat28);
        org.junit.Assert.assertNotNull(fractionFormat29);
        org.junit.Assert.assertNotNull(attributedCharacterIterator31);
        org.junit.Assert.assertNotNull(numberFormat32);
        org.junit.Assert.assertNotNull(numberFormat35);
        org.junit.Assert.assertNotNull(obj36);
    }

    @Test
    public void test0451() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0451");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat3 = fractionFormat0.getNumeratorFormat();
        java.lang.Object obj4 = fractionFormat0.clone();
        java.text.NumberFormat numberFormat5 = fractionFormat0.getDenominatorFormat();
        java.lang.Class<?> wildcardClass6 = numberFormat5.getClass();
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(numberFormat3);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(wildcardClass6);
    }

    @Test
    public void test0452() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0452");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat5 = fractionFormat0.getNumeratorFormat();
        java.text.NumberFormat numberFormat6 = fractionFormat0.getNumeratorFormat();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.fraction.Fraction fraction8 = fractionFormat0.parse("hi!");
            org.junit.Assert.fail("Expected exception of type java.text.ParseException; message: Unparseable fraction number: \"hi!\"");
        } catch (java.text.ParseException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
    }

    @Test
    public void test0453() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0453");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator2 = fractionFormat0.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat3 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat4 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator6 = fractionFormat4.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat7 = fractionFormat4.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat8 = new org.apache.commons.math.fraction.FractionFormat(numberFormat3, numberFormat7);
        java.text.NumberFormat numberFormat9 = fractionFormat8.getDenominatorFormat();
        java.text.ParsePosition parsePosition11 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.fraction.Fraction fraction12 = fractionFormat8.parse("100", parsePosition11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(attributedCharacterIterator2);
        org.junit.Assert.assertNotNull(numberFormat3);
        org.junit.Assert.assertNotNull(fractionFormat4);
        org.junit.Assert.assertNotNull(attributedCharacterIterator6);
        org.junit.Assert.assertNotNull(numberFormat7);
        org.junit.Assert.assertNotNull(numberFormat9);
    }

    @Test
    public void test0454() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0454");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat3 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat4 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj6 = fractionFormat4.parseObject("0 / 1");
        java.lang.Object obj8 = fractionFormat4.parseObject("0 / 1");
        java.text.NumberFormat numberFormat9 = fractionFormat4.getNumeratorFormat();
        java.text.NumberFormat numberFormat10 = fractionFormat4.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator13 = fractionFormat11.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat14 = fractionFormat11.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat15 = new org.apache.commons.math.fraction.FractionFormat(numberFormat10, numberFormat14);
        fractionFormat0.setNumeratorFormat(numberFormat14);
        java.lang.Object obj17 = fractionFormat0.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat18 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat19 = fractionFormat18.getNumeratorFormat();
        fractionFormat0.setDenominatorFormat(numberFormat19);
        org.apache.commons.math.fraction.FractionFormat fractionFormat21 = new org.apache.commons.math.fraction.FractionFormat(numberFormat19);
        java.text.NumberFormat numberFormat22 = null;
        java.text.NumberFormat numberFormat23 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat24 = new org.apache.commons.math.fraction.FractionFormat(numberFormat22, numberFormat23);
        java.text.NumberFormat numberFormat25 = fractionFormat24.getDenominatorFormat();
        java.text.NumberFormat numberFormat26 = fractionFormat24.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat27 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator29 = fractionFormat27.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat30 = fractionFormat27.getDenominatorFormat();
        fractionFormat24.setNumeratorFormat(numberFormat30);
        java.lang.Object obj32 = numberFormat30.clone();
        java.lang.String str34 = numberFormat30.format((java.lang.Object) (short) 10);
        org.apache.commons.math.fraction.FractionFormat fractionFormat35 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator37 = fractionFormat35.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat38 = fractionFormat35.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat39 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator41 = fractionFormat39.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat42 = fractionFormat39.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat43 = new org.apache.commons.math.fraction.FractionFormat(numberFormat38, numberFormat42);
        org.apache.commons.math.fraction.FractionFormat fractionFormat44 = new org.apache.commons.math.fraction.FractionFormat(numberFormat30, numberFormat38);
        org.apache.commons.math.fraction.Fraction fraction46 = fractionFormat44.parse("-1 / 1");
        java.lang.String str47 = org.apache.commons.math.fraction.FractionFormat.formatFraction(fraction46);
        java.lang.StringBuffer stringBuffer48 = null;
        java.text.FieldPosition fieldPosition49 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer50 = fractionFormat21.format(fraction46, stringBuffer48, fieldPosition49);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(numberFormat3);
        org.junit.Assert.assertNotNull(fractionFormat4);
        org.junit.Assert.assertNotNull(obj6);
        org.junit.Assert.assertNotNull(obj8);
        org.junit.Assert.assertNotNull(numberFormat9);
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertNotNull(fractionFormat11);
        org.junit.Assert.assertNotNull(attributedCharacterIterator13);
        org.junit.Assert.assertNotNull(numberFormat14);
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertNotNull(fractionFormat18);
        org.junit.Assert.assertNotNull(numberFormat19);
        org.junit.Assert.assertNull(numberFormat25);
        org.junit.Assert.assertNull(numberFormat26);
        org.junit.Assert.assertNotNull(fractionFormat27);
        org.junit.Assert.assertNotNull(attributedCharacterIterator29);
        org.junit.Assert.assertNotNull(numberFormat30);
        org.junit.Assert.assertNotNull(obj32);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "10" + "'", str34, "10");
        org.junit.Assert.assertNotNull(fractionFormat35);
        org.junit.Assert.assertNotNull(attributedCharacterIterator37);
        org.junit.Assert.assertNotNull(numberFormat38);
        org.junit.Assert.assertNotNull(fractionFormat39);
        org.junit.Assert.assertNotNull(attributedCharacterIterator41);
        org.junit.Assert.assertNotNull(numberFormat42);
        org.junit.Assert.assertNotNull(fraction46);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "-1 / 1" + "'", str47, "-1 / 1");
    }

    @Test
    public void test0455() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0455");
        java.text.NumberFormat numberFormat0 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat1 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj3 = fractionFormat1.parseObject("0 / 1");
        java.lang.Object obj5 = fractionFormat1.parseObject("0 / 1");
        java.text.NumberFormat numberFormat6 = fractionFormat1.getNumeratorFormat();
        java.text.NumberFormat numberFormat7 = fractionFormat1.getNumeratorFormat();
        java.text.NumberFormat numberFormat8 = fractionFormat1.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat9 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat8);
        java.text.NumberFormat numberFormat10 = null;
        java.text.NumberFormat numberFormat11 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat12 = new org.apache.commons.math.fraction.FractionFormat(numberFormat10, numberFormat11);
        java.text.NumberFormat numberFormat13 = fractionFormat12.getDenominatorFormat();
        java.text.NumberFormat numberFormat14 = fractionFormat12.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat15 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator17 = fractionFormat15.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat18 = fractionFormat15.getDenominatorFormat();
        fractionFormat12.setNumeratorFormat(numberFormat18);
        java.lang.Object obj20 = numberFormat18.clone();
        java.lang.String str22 = numberFormat18.format((java.lang.Object) (short) 10);
        java.text.NumberFormat numberFormat23 = null;
        java.text.NumberFormat numberFormat24 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat25 = new org.apache.commons.math.fraction.FractionFormat(numberFormat23, numberFormat24);
        java.text.NumberFormat numberFormat26 = fractionFormat25.getDenominatorFormat();
        java.text.NumberFormat numberFormat27 = fractionFormat25.getNumeratorFormat();
        java.text.NumberFormat numberFormat28 = fractionFormat25.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat29 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator31 = fractionFormat29.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat32 = fractionFormat29.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat33 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator35 = fractionFormat33.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat36 = fractionFormat33.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat37 = new org.apache.commons.math.fraction.FractionFormat(numberFormat32, numberFormat36);
        fractionFormat25.setNumeratorFormat(numberFormat32);
        org.apache.commons.math.fraction.FractionFormat fractionFormat39 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj41 = fractionFormat39.parseObject("0 / 1");
        java.text.NumberFormat numberFormat42 = fractionFormat39.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat43 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator45 = fractionFormat43.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat46 = fractionFormat43.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat47 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator49 = fractionFormat47.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat50 = fractionFormat47.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat51 = new org.apache.commons.math.fraction.FractionFormat(numberFormat46, numberFormat50);
        org.apache.commons.math.fraction.FractionFormat fractionFormat52 = new org.apache.commons.math.fraction.FractionFormat(numberFormat42, numberFormat46);
        org.apache.commons.math.fraction.FractionFormat fractionFormat53 = new org.apache.commons.math.fraction.FractionFormat(numberFormat32, numberFormat42);
        org.apache.commons.math.fraction.FractionFormat fractionFormat54 = new org.apache.commons.math.fraction.FractionFormat(numberFormat18, numberFormat42);
        java.lang.Object obj55 = fractionFormat54.clone();
        java.lang.Object obj56 = fractionFormat54.clone();
        java.lang.Class<?> wildcardClass57 = fractionFormat54.getClass();
        java.lang.StringBuffer stringBuffer58 = null;
        java.text.FieldPosition fieldPosition59 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer60 = fractionFormat9.format((java.lang.Object) fractionFormat54, stringBuffer58, fieldPosition59);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot format given object as a fraction");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat1);
        org.junit.Assert.assertNotNull(obj3);
        org.junit.Assert.assertNotNull(obj5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertNotNull(numberFormat7);
        org.junit.Assert.assertNotNull(numberFormat8);
        org.junit.Assert.assertNull(numberFormat13);
        org.junit.Assert.assertNull(numberFormat14);
        org.junit.Assert.assertNotNull(fractionFormat15);
        org.junit.Assert.assertNotNull(attributedCharacterIterator17);
        org.junit.Assert.assertNotNull(numberFormat18);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "10" + "'", str22, "10");
        org.junit.Assert.assertNull(numberFormat26);
        org.junit.Assert.assertNull(numberFormat27);
        org.junit.Assert.assertNull(numberFormat28);
        org.junit.Assert.assertNotNull(fractionFormat29);
        org.junit.Assert.assertNotNull(attributedCharacterIterator31);
        org.junit.Assert.assertNotNull(numberFormat32);
        org.junit.Assert.assertNotNull(fractionFormat33);
        org.junit.Assert.assertNotNull(attributedCharacterIterator35);
        org.junit.Assert.assertNotNull(numberFormat36);
        org.junit.Assert.assertNotNull(fractionFormat39);
        org.junit.Assert.assertNotNull(obj41);
        org.junit.Assert.assertNotNull(numberFormat42);
        org.junit.Assert.assertNotNull(fractionFormat43);
        org.junit.Assert.assertNotNull(attributedCharacterIterator45);
        org.junit.Assert.assertNotNull(numberFormat46);
        org.junit.Assert.assertNotNull(fractionFormat47);
        org.junit.Assert.assertNotNull(attributedCharacterIterator49);
        org.junit.Assert.assertNotNull(numberFormat50);
        org.junit.Assert.assertNotNull(obj55);
        org.junit.Assert.assertNotNull(obj56);
        org.junit.Assert.assertNotNull(wildcardClass57);
    }

    @Test
    public void test0456() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0456");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat5 = fractionFormat0.getNumeratorFormat();
        java.text.NumberFormat numberFormat6 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat7 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator9 = fractionFormat7.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat10 = fractionFormat7.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = new org.apache.commons.math.fraction.FractionFormat(numberFormat6, numberFormat10);
        org.apache.commons.math.fraction.FractionFormat fractionFormat12 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator14 = fractionFormat12.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat15 = fractionFormat12.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat16 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator18 = fractionFormat16.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat19 = fractionFormat16.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat20 = new org.apache.commons.math.fraction.FractionFormat(numberFormat15, numberFormat19);
        fractionFormat11.setNumeratorFormat(numberFormat15);
        java.text.NumberFormat numberFormat22 = fractionFormat11.getDenominatorFormat();
        java.text.NumberFormat numberFormat23 = null;
        java.text.NumberFormat numberFormat24 = null;
        java.text.NumberFormat numberFormat25 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat26 = new org.apache.commons.math.fraction.FractionFormat(numberFormat24, numberFormat25);
        java.text.NumberFormat numberFormat27 = fractionFormat26.getDenominatorFormat();
        java.text.NumberFormat numberFormat28 = fractionFormat26.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat29 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator31 = fractionFormat29.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat32 = fractionFormat29.getDenominatorFormat();
        fractionFormat26.setNumeratorFormat(numberFormat32);
        org.apache.commons.math.fraction.FractionFormat fractionFormat34 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj36 = fractionFormat34.parseObject("0 / 1");
        java.text.NumberFormat numberFormat37 = fractionFormat34.getNumeratorFormat();
        fractionFormat26.setNumeratorFormat(numberFormat37);
        org.apache.commons.math.fraction.FractionFormat fractionFormat39 = new org.apache.commons.math.fraction.FractionFormat(numberFormat23, numberFormat37);
        java.text.NumberFormat numberFormat40 = null;
        java.text.NumberFormat numberFormat41 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat42 = new org.apache.commons.math.fraction.FractionFormat(numberFormat40, numberFormat41);
        java.text.NumberFormat numberFormat43 = fractionFormat42.getDenominatorFormat();
        java.text.NumberFormat numberFormat44 = fractionFormat42.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat45 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator47 = fractionFormat45.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat48 = fractionFormat45.getDenominatorFormat();
        fractionFormat42.setNumeratorFormat(numberFormat48);
        org.apache.commons.math.fraction.FractionFormat fractionFormat50 = new org.apache.commons.math.fraction.FractionFormat(numberFormat23, numberFormat48);
        org.apache.commons.math.fraction.FractionFormat fractionFormat51 = new org.apache.commons.math.fraction.FractionFormat(numberFormat48);
        org.apache.commons.math.fraction.FractionFormat fractionFormat52 = new org.apache.commons.math.fraction.FractionFormat(numberFormat22, numberFormat48);
        org.apache.commons.math.fraction.FractionFormat fractionFormat53 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj55 = fractionFormat53.parseObject("0 / 1");
        java.lang.Object obj57 = fractionFormat53.parseObject("0 / 1");
        java.text.NumberFormat numberFormat58 = fractionFormat53.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat59 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj61 = fractionFormat59.parseObject("0 / 1");
        java.text.NumberFormat numberFormat62 = fractionFormat59.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat63 = new org.apache.commons.math.fraction.FractionFormat(numberFormat58, numberFormat62);
        java.lang.Class<?> wildcardClass64 = numberFormat58.getClass();
        java.lang.StringBuffer stringBuffer65 = null;
        java.text.FieldPosition fieldPosition66 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer67 = fractionFormat52.format((java.lang.Object) numberFormat58, stringBuffer65, fieldPosition66);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot format given object as a fraction");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertNotNull(fractionFormat7);
        org.junit.Assert.assertNotNull(attributedCharacterIterator9);
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertNotNull(fractionFormat12);
        org.junit.Assert.assertNotNull(attributedCharacterIterator14);
        org.junit.Assert.assertNotNull(numberFormat15);
        org.junit.Assert.assertNotNull(fractionFormat16);
        org.junit.Assert.assertNotNull(attributedCharacterIterator18);
        org.junit.Assert.assertNotNull(numberFormat19);
        org.junit.Assert.assertNotNull(numberFormat22);
        org.junit.Assert.assertNull(numberFormat27);
        org.junit.Assert.assertNull(numberFormat28);
        org.junit.Assert.assertNotNull(fractionFormat29);
        org.junit.Assert.assertNotNull(attributedCharacterIterator31);
        org.junit.Assert.assertNotNull(numberFormat32);
        org.junit.Assert.assertNotNull(fractionFormat34);
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertNotNull(numberFormat37);
        org.junit.Assert.assertNull(numberFormat43);
        org.junit.Assert.assertNull(numberFormat44);
        org.junit.Assert.assertNotNull(fractionFormat45);
        org.junit.Assert.assertNotNull(attributedCharacterIterator47);
        org.junit.Assert.assertNotNull(numberFormat48);
        org.junit.Assert.assertNotNull(fractionFormat53);
        org.junit.Assert.assertNotNull(obj55);
        org.junit.Assert.assertNotNull(obj57);
        org.junit.Assert.assertNotNull(numberFormat58);
        org.junit.Assert.assertNotNull(fractionFormat59);
        org.junit.Assert.assertNotNull(obj61);
        org.junit.Assert.assertNotNull(numberFormat62);
        org.junit.Assert.assertNotNull(wildcardClass64);
    }

    @Test
    public void test0457() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0457");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.text.NumberFormat numberFormat3 = fractionFormat2.getDenominatorFormat();
        java.text.NumberFormat numberFormat4 = fractionFormat2.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator7 = fractionFormat5.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat8 = fractionFormat5.getDenominatorFormat();
        fractionFormat2.setNumeratorFormat(numberFormat8);
        java.text.ParsePosition parsePosition11 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj12 = fractionFormat2.parseObject("100", parsePosition11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(numberFormat3);
        org.junit.Assert.assertNull(numberFormat4);
        org.junit.Assert.assertNotNull(fractionFormat5);
        org.junit.Assert.assertNotNull(attributedCharacterIterator7);
        org.junit.Assert.assertNotNull(numberFormat8);
    }

    @Test
    public void test0458() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0458");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat5 = fractionFormat0.getNumeratorFormat();
        java.text.NumberFormat numberFormat6 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat7 = new org.apache.commons.math.fraction.FractionFormat(numberFormat6);
        org.apache.commons.math.fraction.FractionFormat fractionFormat8 = new org.apache.commons.math.fraction.FractionFormat(numberFormat6);
        java.text.NumberFormat numberFormat9 = fractionFormat8.getNumeratorFormat();
        java.lang.Object obj10 = new java.lang.Object();
        java.lang.StringBuffer stringBuffer11 = null;
        java.text.FieldPosition fieldPosition12 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer13 = fractionFormat8.format(obj10, stringBuffer11, fieldPosition12);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot format given object as a fraction");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertNotNull(numberFormat9);
    }

    @Test
    public void test0459() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0459");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat5 = fractionFormat0.getNumeratorFormat();
        java.text.NumberFormat numberFormat6 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat7 = new org.apache.commons.math.fraction.FractionFormat(numberFormat6);
        org.apache.commons.math.fraction.FractionFormat fractionFormat8 = new org.apache.commons.math.fraction.FractionFormat(numberFormat6);
        java.lang.Class<?> wildcardClass9 = fractionFormat8.getClass();
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertNotNull(wildcardClass9);
    }

    @Test
    public void test0460() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0460");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat5 = fractionFormat0.getNumeratorFormat();
        java.text.NumberFormat numberFormat6 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat7 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator9 = fractionFormat7.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat10 = fractionFormat7.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = new org.apache.commons.math.fraction.FractionFormat(numberFormat6, numberFormat10);
        org.apache.commons.math.fraction.FractionFormat fractionFormat12 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator14 = fractionFormat12.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat15 = fractionFormat12.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat16 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator18 = fractionFormat16.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat19 = fractionFormat16.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat20 = new org.apache.commons.math.fraction.FractionFormat(numberFormat15, numberFormat19);
        fractionFormat11.setNumeratorFormat(numberFormat15);
        org.apache.commons.math.fraction.FractionFormat fractionFormat22 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj24 = fractionFormat22.parseObject("0 / 1");
        java.lang.Object obj26 = fractionFormat22.parseObject("0 / 1");
        java.text.NumberFormat numberFormat27 = fractionFormat22.getNumeratorFormat();
        java.text.NumberFormat numberFormat28 = fractionFormat22.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat29 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator31 = fractionFormat29.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat32 = fractionFormat29.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat33 = new org.apache.commons.math.fraction.FractionFormat(numberFormat28, numberFormat32);
        org.apache.commons.math.fraction.FractionFormat fractionFormat34 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator36 = fractionFormat34.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat37 = fractionFormat34.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat38 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator40 = fractionFormat38.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat41 = fractionFormat38.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat42 = new org.apache.commons.math.fraction.FractionFormat(numberFormat37, numberFormat41);
        fractionFormat33.setNumeratorFormat(numberFormat37);
        fractionFormat11.setNumeratorFormat(numberFormat37);
        org.apache.commons.math.fraction.FractionFormat fractionFormat45 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.Fraction fraction47 = fractionFormat45.parse("0 / 1");
        org.apache.commons.math.fraction.FractionFormat fractionFormat48 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator50 = fractionFormat48.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat51 = fractionFormat48.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat52 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator54 = fractionFormat52.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat55 = fractionFormat52.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat56 = new org.apache.commons.math.fraction.FractionFormat(numberFormat51, numberFormat55);
        java.text.NumberFormat numberFormat57 = fractionFormat56.getDenominatorFormat();
        fractionFormat45.setDenominatorFormat(numberFormat57);
        java.text.NumberFormat numberFormat59 = fractionFormat45.getNumeratorFormat();
        java.lang.StringBuffer stringBuffer60 = null;
        java.text.FieldPosition fieldPosition61 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer62 = fractionFormat11.format((java.lang.Object) fractionFormat45, stringBuffer60, fieldPosition61);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot format given object as a fraction");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertNotNull(fractionFormat7);
        org.junit.Assert.assertNotNull(attributedCharacterIterator9);
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertNotNull(fractionFormat12);
        org.junit.Assert.assertNotNull(attributedCharacterIterator14);
        org.junit.Assert.assertNotNull(numberFormat15);
        org.junit.Assert.assertNotNull(fractionFormat16);
        org.junit.Assert.assertNotNull(attributedCharacterIterator18);
        org.junit.Assert.assertNotNull(numberFormat19);
        org.junit.Assert.assertNotNull(fractionFormat22);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertNotNull(numberFormat27);
        org.junit.Assert.assertNotNull(numberFormat28);
        org.junit.Assert.assertNotNull(fractionFormat29);
        org.junit.Assert.assertNotNull(attributedCharacterIterator31);
        org.junit.Assert.assertNotNull(numberFormat32);
        org.junit.Assert.assertNotNull(fractionFormat34);
        org.junit.Assert.assertNotNull(attributedCharacterIterator36);
        org.junit.Assert.assertNotNull(numberFormat37);
        org.junit.Assert.assertNotNull(fractionFormat38);
        org.junit.Assert.assertNotNull(attributedCharacterIterator40);
        org.junit.Assert.assertNotNull(numberFormat41);
        org.junit.Assert.assertNotNull(fractionFormat45);
        org.junit.Assert.assertNotNull(fraction47);
        org.junit.Assert.assertNotNull(fractionFormat48);
        org.junit.Assert.assertNotNull(attributedCharacterIterator50);
        org.junit.Assert.assertNotNull(numberFormat51);
        org.junit.Assert.assertNotNull(fractionFormat52);
        org.junit.Assert.assertNotNull(attributedCharacterIterator54);
        org.junit.Assert.assertNotNull(numberFormat55);
        org.junit.Assert.assertNotNull(numberFormat57);
        org.junit.Assert.assertNotNull(numberFormat59);
    }

    @Test
    public void test0461() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0461");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.lang.Object obj3 = fractionFormat2.clone();
        java.lang.Object obj4 = fractionFormat2.clone();
        java.text.NumberFormat numberFormat5 = null;
        java.text.NumberFormat numberFormat6 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat7 = new org.apache.commons.math.fraction.FractionFormat(numberFormat5, numberFormat6);
        java.text.NumberFormat numberFormat8 = fractionFormat7.getDenominatorFormat();
        java.text.NumberFormat numberFormat9 = fractionFormat7.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat10 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator12 = fractionFormat10.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat13 = fractionFormat10.getDenominatorFormat();
        fractionFormat7.setNumeratorFormat(numberFormat13);
        org.apache.commons.math.fraction.FractionFormat fractionFormat15 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj17 = fractionFormat15.parseObject("0 / 1");
        java.lang.Object obj19 = fractionFormat15.parseObject("0 / 1");
        java.text.NumberFormat numberFormat20 = fractionFormat15.getNumeratorFormat();
        fractionFormat7.setDenominatorFormat(numberFormat20);
        org.apache.commons.math.fraction.FractionFormat fractionFormat22 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat23 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj25 = fractionFormat23.parseObject("0 / 1");
        java.lang.Object obj27 = fractionFormat23.parseObject("0 / 1");
        java.text.NumberFormat numberFormat28 = fractionFormat23.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat29 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj31 = fractionFormat29.parseObject("0 / 1");
        java.text.NumberFormat numberFormat32 = fractionFormat29.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat33 = new org.apache.commons.math.fraction.FractionFormat(numberFormat28, numberFormat32);
        org.apache.commons.math.fraction.FractionFormat fractionFormat34 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj36 = fractionFormat34.parseObject("0 / 1");
        java.lang.Object obj38 = fractionFormat34.parseObject("0 / 1");
        java.text.NumberFormat numberFormat39 = fractionFormat34.getNumeratorFormat();
        fractionFormat33.setDenominatorFormat(numberFormat39);
        java.lang.Object obj41 = numberFormat39.clone();
        fractionFormat22.setNumeratorFormat(numberFormat39);
        fractionFormat7.setDenominatorFormat(numberFormat39);
        org.apache.commons.math.fraction.FractionFormat fractionFormat44 = new org.apache.commons.math.fraction.FractionFormat(numberFormat39);
        fractionFormat2.setNumeratorFormat(numberFormat39);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj47 = fractionFormat2.parseObject("hi!");
            org.junit.Assert.fail("Expected exception of type java.text.ParseException; message: Format.parseObject(String) failed");
        } catch (java.text.ParseException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(obj3);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNull(numberFormat8);
        org.junit.Assert.assertNull(numberFormat9);
        org.junit.Assert.assertNotNull(fractionFormat10);
        org.junit.Assert.assertNotNull(attributedCharacterIterator12);
        org.junit.Assert.assertNotNull(numberFormat13);
        org.junit.Assert.assertNotNull(fractionFormat15);
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(numberFormat20);
        org.junit.Assert.assertNotNull(fractionFormat22);
        org.junit.Assert.assertNotNull(fractionFormat23);
        org.junit.Assert.assertNotNull(obj25);
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertNotNull(numberFormat28);
        org.junit.Assert.assertNotNull(fractionFormat29);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertNotNull(numberFormat32);
        org.junit.Assert.assertNotNull(fractionFormat34);
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertNotNull(numberFormat39);
        org.junit.Assert.assertNotNull(obj41);
    }

    @Test
    public void test0462() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0462");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        org.apache.commons.math.fraction.FractionFormat fractionFormat3 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator5 = fractionFormat3.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat6 = fractionFormat3.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat7 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator9 = fractionFormat7.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat10 = fractionFormat7.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = new org.apache.commons.math.fraction.FractionFormat(numberFormat6, numberFormat10);
        org.apache.commons.math.fraction.FractionFormat fractionFormat12 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj14 = fractionFormat12.parseObject("0 / 1");
        java.lang.Object obj16 = fractionFormat12.parseObject("0 / 1");
        java.text.NumberFormat numberFormat17 = fractionFormat12.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat18 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj20 = fractionFormat18.parseObject("0 / 1");
        java.text.NumberFormat numberFormat21 = fractionFormat18.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat22 = new org.apache.commons.math.fraction.FractionFormat(numberFormat17, numberFormat21);
        java.text.NumberFormat numberFormat23 = fractionFormat22.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat24 = new org.apache.commons.math.fraction.FractionFormat(numberFormat6, numberFormat23);
        fractionFormat0.setNumeratorFormat(numberFormat23);
        java.text.NumberFormat numberFormat26 = null;
        java.text.NumberFormat numberFormat27 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat28 = new org.apache.commons.math.fraction.FractionFormat(numberFormat26, numberFormat27);
        java.text.NumberFormat numberFormat29 = fractionFormat28.getDenominatorFormat();
        java.text.NumberFormat numberFormat30 = fractionFormat28.getNumeratorFormat();
        java.text.NumberFormat numberFormat31 = fractionFormat28.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat32 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator34 = fractionFormat32.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat35 = fractionFormat32.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat36 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator38 = fractionFormat36.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat39 = fractionFormat36.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat40 = new org.apache.commons.math.fraction.FractionFormat(numberFormat35, numberFormat39);
        fractionFormat28.setNumeratorFormat(numberFormat35);
        java.lang.Class<?> wildcardClass42 = numberFormat35.getClass();
        // The following exception was thrown during execution in test generation
        try {
            java.text.AttributedCharacterIterator attributedCharacterIterator43 = fractionFormat0.formatToCharacterIterator((java.lang.Object) wildcardClass42);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot format given object as a fraction");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(fractionFormat3);
        org.junit.Assert.assertNotNull(attributedCharacterIterator5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertNotNull(fractionFormat7);
        org.junit.Assert.assertNotNull(attributedCharacterIterator9);
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertNotNull(fractionFormat12);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertNotNull(obj16);
        org.junit.Assert.assertNotNull(numberFormat17);
        org.junit.Assert.assertNotNull(fractionFormat18);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertNotNull(numberFormat21);
        org.junit.Assert.assertNotNull(numberFormat23);
        org.junit.Assert.assertNull(numberFormat29);
        org.junit.Assert.assertNull(numberFormat30);
        org.junit.Assert.assertNull(numberFormat31);
        org.junit.Assert.assertNotNull(fractionFormat32);
        org.junit.Assert.assertNotNull(attributedCharacterIterator34);
        org.junit.Assert.assertNotNull(numberFormat35);
        org.junit.Assert.assertNotNull(fractionFormat36);
        org.junit.Assert.assertNotNull(attributedCharacterIterator38);
        org.junit.Assert.assertNotNull(numberFormat39);
        org.junit.Assert.assertNotNull(wildcardClass42);
    }

    @Test
    public void test0463() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0463");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.lang.Object obj3 = fractionFormat2.clone();
        java.text.NumberFormat numberFormat4 = null;
        java.text.NumberFormat numberFormat5 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat6 = new org.apache.commons.math.fraction.FractionFormat(numberFormat4, numberFormat5);
        java.text.NumberFormat numberFormat7 = fractionFormat6.getDenominatorFormat();
        java.text.NumberFormat numberFormat8 = fractionFormat6.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat9 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator11 = fractionFormat9.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat12 = fractionFormat9.getDenominatorFormat();
        fractionFormat6.setNumeratorFormat(numberFormat12);
        java.lang.Object obj14 = numberFormat12.clone();
        java.lang.String str16 = numberFormat12.format((java.lang.Object) (short) 10);
        org.apache.commons.math.fraction.FractionFormat fractionFormat17 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator19 = fractionFormat17.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat20 = fractionFormat17.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat21 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator23 = fractionFormat21.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat24 = fractionFormat21.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat25 = new org.apache.commons.math.fraction.FractionFormat(numberFormat20, numberFormat24);
        org.apache.commons.math.fraction.FractionFormat fractionFormat26 = new org.apache.commons.math.fraction.FractionFormat(numberFormat12, numberFormat20);
        fractionFormat2.setDenominatorFormat(numberFormat12);
        org.apache.commons.math.fraction.FractionFormat fractionFormat28 = new org.apache.commons.math.fraction.FractionFormat(numberFormat12);
        java.text.NumberFormat numberFormat29 = null;
        java.text.NumberFormat numberFormat30 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat31 = new org.apache.commons.math.fraction.FractionFormat(numberFormat29, numberFormat30);
        java.text.NumberFormat numberFormat32 = fractionFormat31.getDenominatorFormat();
        java.text.NumberFormat numberFormat33 = fractionFormat31.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat34 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator36 = fractionFormat34.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat37 = fractionFormat34.getDenominatorFormat();
        fractionFormat31.setNumeratorFormat(numberFormat37);
        org.apache.commons.math.fraction.FractionFormat fractionFormat39 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator41 = fractionFormat39.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat42 = fractionFormat39.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat43 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator45 = fractionFormat43.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat46 = fractionFormat43.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat47 = new org.apache.commons.math.fraction.FractionFormat(numberFormat42, numberFormat46);
        java.text.NumberFormat numberFormat48 = fractionFormat47.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat49 = new org.apache.commons.math.fraction.FractionFormat(numberFormat48);
        fractionFormat31.setNumeratorFormat(numberFormat48);
        fractionFormat28.setNumeratorFormat(numberFormat48);
        java.text.ParsePosition parsePosition53 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.fraction.Fraction fraction54 = fractionFormat28.parse("10", parsePosition53);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(obj3);
        org.junit.Assert.assertNull(numberFormat7);
        org.junit.Assert.assertNull(numberFormat8);
        org.junit.Assert.assertNotNull(fractionFormat9);
        org.junit.Assert.assertNotNull(attributedCharacterIterator11);
        org.junit.Assert.assertNotNull(numberFormat12);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "10" + "'", str16, "10");
        org.junit.Assert.assertNotNull(fractionFormat17);
        org.junit.Assert.assertNotNull(attributedCharacterIterator19);
        org.junit.Assert.assertNotNull(numberFormat20);
        org.junit.Assert.assertNotNull(fractionFormat21);
        org.junit.Assert.assertNotNull(attributedCharacterIterator23);
        org.junit.Assert.assertNotNull(numberFormat24);
        org.junit.Assert.assertNull(numberFormat32);
        org.junit.Assert.assertNull(numberFormat33);
        org.junit.Assert.assertNotNull(fractionFormat34);
        org.junit.Assert.assertNotNull(attributedCharacterIterator36);
        org.junit.Assert.assertNotNull(numberFormat37);
        org.junit.Assert.assertNotNull(fractionFormat39);
        org.junit.Assert.assertNotNull(attributedCharacterIterator41);
        org.junit.Assert.assertNotNull(numberFormat42);
        org.junit.Assert.assertNotNull(fractionFormat43);
        org.junit.Assert.assertNotNull(attributedCharacterIterator45);
        org.junit.Assert.assertNotNull(numberFormat46);
        org.junit.Assert.assertNotNull(numberFormat48);
    }

    @Test
    public void test0464() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0464");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat5 = fractionFormat0.getNumeratorFormat();
        java.text.NumberFormat numberFormat6 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat7 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator9 = fractionFormat7.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat10 = fractionFormat7.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = new org.apache.commons.math.fraction.FractionFormat(numberFormat6, numberFormat10);
        org.apache.commons.math.fraction.FractionFormat fractionFormat12 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator14 = fractionFormat12.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat15 = fractionFormat12.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat16 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator18 = fractionFormat16.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat19 = fractionFormat16.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat20 = new org.apache.commons.math.fraction.FractionFormat(numberFormat15, numberFormat19);
        org.apache.commons.math.fraction.FractionFormat fractionFormat21 = new org.apache.commons.math.fraction.FractionFormat(numberFormat6, numberFormat19);
        java.text.NumberFormat numberFormat22 = fractionFormat21.getDenominatorFormat();
        java.lang.Object obj24 = numberFormat22.parseObject("-1 / 1");
        org.apache.commons.math.fraction.FractionFormat fractionFormat25 = new org.apache.commons.math.fraction.FractionFormat(numberFormat22);
        org.apache.commons.math.fraction.FractionFormat fractionFormat26 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj28 = fractionFormat26.parseObject("0 / 1");
        java.lang.Object obj30 = fractionFormat26.parseObject("0 / 1");
        java.text.NumberFormat numberFormat31 = fractionFormat26.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat32 = new org.apache.commons.math.fraction.FractionFormat(numberFormat31);
        java.text.NumberFormat numberFormat33 = fractionFormat32.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat34 = new org.apache.commons.math.fraction.FractionFormat(numberFormat33);
        java.lang.Object obj35 = numberFormat33.clone();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str36 = fractionFormat25.format(obj35);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot format given object as a fraction");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertNotNull(fractionFormat7);
        org.junit.Assert.assertNotNull(attributedCharacterIterator9);
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertNotNull(fractionFormat12);
        org.junit.Assert.assertNotNull(attributedCharacterIterator14);
        org.junit.Assert.assertNotNull(numberFormat15);
        org.junit.Assert.assertNotNull(fractionFormat16);
        org.junit.Assert.assertNotNull(attributedCharacterIterator18);
        org.junit.Assert.assertNotNull(numberFormat19);
        org.junit.Assert.assertNotNull(numberFormat22);
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + (-1L) + "'", obj24, (-1L));
        org.junit.Assert.assertNotNull(fractionFormat26);
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertNotNull(numberFormat31);
        org.junit.Assert.assertNotNull(numberFormat33);
        org.junit.Assert.assertNotNull(obj35);
    }

    @Test
    public void test0465() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0465");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.text.NumberFormat numberFormat3 = fractionFormat2.getDenominatorFormat();
        java.text.NumberFormat numberFormat4 = fractionFormat2.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj7 = fractionFormat5.parseObject("0 / 1");
        java.lang.Object obj9 = fractionFormat5.parseObject("0 / 1");
        java.text.NumberFormat numberFormat10 = fractionFormat5.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj13 = fractionFormat11.parseObject("0 / 1");
        java.text.NumberFormat numberFormat14 = fractionFormat11.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat15 = new org.apache.commons.math.fraction.FractionFormat(numberFormat10, numberFormat14);
        java.text.AttributedCharacterIterator attributedCharacterIterator17 = numberFormat10.formatToCharacterIterator((java.lang.Object) (-1));
        fractionFormat2.setDenominatorFormat(numberFormat10);
        java.lang.Object obj19 = numberFormat10.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat20 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.Fraction fraction22 = fractionFormat20.parse("0 / 1");
        java.text.NumberFormat numberFormat23 = fractionFormat20.getNumeratorFormat();
        java.lang.Object obj25 = numberFormat23.parseObject("10 / 1");
        java.lang.String str26 = numberFormat10.format(obj25);
        java.text.NumberFormat numberFormat27 = null;
        java.text.NumberFormat numberFormat28 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat29 = new org.apache.commons.math.fraction.FractionFormat(numberFormat27, numberFormat28);
        java.text.NumberFormat numberFormat30 = fractionFormat29.getDenominatorFormat();
        java.text.NumberFormat numberFormat31 = fractionFormat29.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat32 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator34 = fractionFormat32.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat35 = fractionFormat32.getDenominatorFormat();
        fractionFormat29.setNumeratorFormat(numberFormat35);
        org.apache.commons.math.fraction.FractionFormat fractionFormat37 = new org.apache.commons.math.fraction.FractionFormat(numberFormat35);
        org.apache.commons.math.fraction.FractionFormat fractionFormat38 = new org.apache.commons.math.fraction.FractionFormat(numberFormat10, numberFormat35);
        org.apache.commons.math.fraction.FractionFormat fractionFormat39 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj41 = fractionFormat39.parseObject("0 / 1");
        java.lang.Object obj43 = fractionFormat39.parseObject("0 / 1");
        java.text.NumberFormat numberFormat44 = fractionFormat39.getNumeratorFormat();
        java.text.NumberFormat numberFormat45 = fractionFormat39.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat46 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator48 = fractionFormat46.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat49 = fractionFormat46.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat50 = new org.apache.commons.math.fraction.FractionFormat(numberFormat45, numberFormat49);
        org.apache.commons.math.fraction.FractionFormat fractionFormat51 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator53 = fractionFormat51.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat54 = fractionFormat51.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat55 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator57 = fractionFormat55.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat58 = fractionFormat55.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat59 = new org.apache.commons.math.fraction.FractionFormat(numberFormat54, numberFormat58);
        java.text.NumberFormat numberFormat60 = fractionFormat59.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat61 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat62 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj64 = fractionFormat62.parseObject("0 / 1");
        java.lang.Object obj66 = fractionFormat62.parseObject("0 / 1");
        java.text.NumberFormat numberFormat67 = fractionFormat62.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat68 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj70 = fractionFormat68.parseObject("0 / 1");
        java.text.NumberFormat numberFormat71 = fractionFormat68.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat72 = new org.apache.commons.math.fraction.FractionFormat(numberFormat67, numberFormat71);
        org.apache.commons.math.fraction.FractionFormat fractionFormat73 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj75 = fractionFormat73.parseObject("0 / 1");
        java.lang.Object obj77 = fractionFormat73.parseObject("0 / 1");
        java.text.NumberFormat numberFormat78 = fractionFormat73.getNumeratorFormat();
        fractionFormat72.setDenominatorFormat(numberFormat78);
        java.lang.Object obj80 = numberFormat78.clone();
        fractionFormat61.setNumeratorFormat(numberFormat78);
        java.lang.Object obj82 = numberFormat78.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat83 = new org.apache.commons.math.fraction.FractionFormat(numberFormat60, numberFormat78);
        org.apache.commons.math.fraction.FractionFormat fractionFormat84 = new org.apache.commons.math.fraction.FractionFormat(numberFormat45, numberFormat78);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str85 = numberFormat10.format((java.lang.Object) numberFormat45);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot format given Object as a Number");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(numberFormat3);
        org.junit.Assert.assertNull(numberFormat4);
        org.junit.Assert.assertNotNull(fractionFormat5);
        org.junit.Assert.assertNotNull(obj7);
        org.junit.Assert.assertNotNull(obj9);
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertNotNull(fractionFormat11);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertNotNull(numberFormat14);
        org.junit.Assert.assertNotNull(attributedCharacterIterator17);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(fractionFormat20);
        org.junit.Assert.assertNotNull(fraction22);
        org.junit.Assert.assertNotNull(numberFormat23);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + 10L + "'", obj25, 10L);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "10" + "'", str26, "10");
        org.junit.Assert.assertNull(numberFormat30);
        org.junit.Assert.assertNull(numberFormat31);
        org.junit.Assert.assertNotNull(fractionFormat32);
        org.junit.Assert.assertNotNull(attributedCharacterIterator34);
        org.junit.Assert.assertNotNull(numberFormat35);
        org.junit.Assert.assertNotNull(fractionFormat39);
        org.junit.Assert.assertNotNull(obj41);
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertNotNull(numberFormat44);
        org.junit.Assert.assertNotNull(numberFormat45);
        org.junit.Assert.assertNotNull(fractionFormat46);
        org.junit.Assert.assertNotNull(attributedCharacterIterator48);
        org.junit.Assert.assertNotNull(numberFormat49);
        org.junit.Assert.assertNotNull(fractionFormat51);
        org.junit.Assert.assertNotNull(attributedCharacterIterator53);
        org.junit.Assert.assertNotNull(numberFormat54);
        org.junit.Assert.assertNotNull(fractionFormat55);
        org.junit.Assert.assertNotNull(attributedCharacterIterator57);
        org.junit.Assert.assertNotNull(numberFormat58);
        org.junit.Assert.assertNotNull(numberFormat60);
        org.junit.Assert.assertNotNull(fractionFormat61);
        org.junit.Assert.assertNotNull(fractionFormat62);
        org.junit.Assert.assertNotNull(obj64);
        org.junit.Assert.assertNotNull(obj66);
        org.junit.Assert.assertNotNull(numberFormat67);
        org.junit.Assert.assertNotNull(fractionFormat68);
        org.junit.Assert.assertNotNull(obj70);
        org.junit.Assert.assertNotNull(numberFormat71);
        org.junit.Assert.assertNotNull(fractionFormat73);
        org.junit.Assert.assertNotNull(obj75);
        org.junit.Assert.assertNotNull(obj77);
        org.junit.Assert.assertNotNull(numberFormat78);
        org.junit.Assert.assertNotNull(obj80);
        org.junit.Assert.assertNotNull(obj82);
    }

    @Test
    public void test0466() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0466");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat5 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat6 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj8 = fractionFormat6.parseObject("0 / 1");
        java.lang.Object obj10 = fractionFormat6.parseObject("0 / 1");
        java.text.NumberFormat numberFormat11 = fractionFormat6.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat12 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj14 = fractionFormat12.parseObject("0 / 1");
        java.text.NumberFormat numberFormat15 = fractionFormat12.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat16 = new org.apache.commons.math.fraction.FractionFormat(numberFormat11, numberFormat15);
        org.apache.commons.math.fraction.FractionFormat fractionFormat17 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj19 = fractionFormat17.parseObject("0 / 1");
        java.lang.Object obj21 = fractionFormat17.parseObject("0 / 1");
        java.text.NumberFormat numberFormat22 = fractionFormat17.getNumeratorFormat();
        fractionFormat16.setDenominatorFormat(numberFormat22);
        org.apache.commons.math.fraction.FractionFormat fractionFormat24 = new org.apache.commons.math.fraction.FractionFormat(numberFormat5, numberFormat22);
        org.apache.commons.math.fraction.FractionFormat fractionFormat25 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.Fraction fraction27 = fractionFormat25.parse("0 / 1");
        org.apache.commons.math.fraction.FractionFormat fractionFormat28 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator30 = fractionFormat28.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat31 = fractionFormat28.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat32 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator34 = fractionFormat32.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat35 = fractionFormat32.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat36 = new org.apache.commons.math.fraction.FractionFormat(numberFormat31, numberFormat35);
        java.text.NumberFormat numberFormat37 = fractionFormat36.getDenominatorFormat();
        fractionFormat25.setDenominatorFormat(numberFormat37);
        java.text.NumberFormat numberFormat39 = fractionFormat25.getNumeratorFormat();
        fractionFormat24.setNumeratorFormat(numberFormat39);
        java.text.NumberFormat numberFormat41 = fractionFormat24.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat42 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj44 = fractionFormat42.parseObject("0 / 1");
        java.text.NumberFormat numberFormat45 = fractionFormat42.getNumeratorFormat();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str46 = numberFormat41.format((java.lang.Object) fractionFormat42);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot format given Object as a Number");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(fractionFormat6);
        org.junit.Assert.assertNotNull(obj8);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertNotNull(numberFormat11);
        org.junit.Assert.assertNotNull(fractionFormat12);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertNotNull(numberFormat15);
        org.junit.Assert.assertNotNull(fractionFormat17);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertNotNull(numberFormat22);
        org.junit.Assert.assertNotNull(fractionFormat25);
        org.junit.Assert.assertNotNull(fraction27);
        org.junit.Assert.assertNotNull(fractionFormat28);
        org.junit.Assert.assertNotNull(attributedCharacterIterator30);
        org.junit.Assert.assertNotNull(numberFormat31);
        org.junit.Assert.assertNotNull(fractionFormat32);
        org.junit.Assert.assertNotNull(attributedCharacterIterator34);
        org.junit.Assert.assertNotNull(numberFormat35);
        org.junit.Assert.assertNotNull(numberFormat37);
        org.junit.Assert.assertNotNull(numberFormat39);
        org.junit.Assert.assertNotNull(numberFormat41);
        org.junit.Assert.assertNotNull(fractionFormat42);
        org.junit.Assert.assertNotNull(obj44);
        org.junit.Assert.assertNotNull(numberFormat45);
    }

    @Test
    public void test0467() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0467");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.text.NumberFormat numberFormat3 = fractionFormat2.getDenominatorFormat();
        java.text.NumberFormat numberFormat4 = fractionFormat2.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator7 = fractionFormat5.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat8 = fractionFormat5.getDenominatorFormat();
        fractionFormat2.setNumeratorFormat(numberFormat8);
        java.lang.Object obj10 = numberFormat8.clone();
        java.lang.String str12 = numberFormat8.format((java.lang.Object) (short) 10);
        java.text.NumberFormat numberFormat13 = null;
        java.text.NumberFormat numberFormat14 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat15 = new org.apache.commons.math.fraction.FractionFormat(numberFormat13, numberFormat14);
        java.text.NumberFormat numberFormat16 = fractionFormat15.getDenominatorFormat();
        java.text.NumberFormat numberFormat17 = fractionFormat15.getNumeratorFormat();
        java.text.NumberFormat numberFormat18 = fractionFormat15.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat19 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator21 = fractionFormat19.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat22 = fractionFormat19.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat23 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator25 = fractionFormat23.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat26 = fractionFormat23.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat27 = new org.apache.commons.math.fraction.FractionFormat(numberFormat22, numberFormat26);
        fractionFormat15.setNumeratorFormat(numberFormat22);
        org.apache.commons.math.fraction.FractionFormat fractionFormat29 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj31 = fractionFormat29.parseObject("0 / 1");
        java.text.NumberFormat numberFormat32 = fractionFormat29.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat33 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator35 = fractionFormat33.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat36 = fractionFormat33.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat37 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator39 = fractionFormat37.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat40 = fractionFormat37.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat41 = new org.apache.commons.math.fraction.FractionFormat(numberFormat36, numberFormat40);
        org.apache.commons.math.fraction.FractionFormat fractionFormat42 = new org.apache.commons.math.fraction.FractionFormat(numberFormat32, numberFormat36);
        org.apache.commons.math.fraction.FractionFormat fractionFormat43 = new org.apache.commons.math.fraction.FractionFormat(numberFormat22, numberFormat32);
        org.apache.commons.math.fraction.FractionFormat fractionFormat44 = new org.apache.commons.math.fraction.FractionFormat(numberFormat8, numberFormat32);
        org.apache.commons.math.fraction.FractionFormat fractionFormat45 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj47 = fractionFormat45.parseObject("0 / 1");
        java.lang.Object obj49 = fractionFormat45.parseObject("0 / 1");
        java.text.NumberFormat numberFormat50 = fractionFormat45.getNumeratorFormat();
        java.text.NumberFormat numberFormat51 = fractionFormat45.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat52 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator54 = fractionFormat52.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat55 = fractionFormat52.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat56 = new org.apache.commons.math.fraction.FractionFormat(numberFormat51, numberFormat55);
        java.lang.Object obj57 = fractionFormat56.clone();
        java.text.NumberFormat numberFormat58 = fractionFormat56.getNumeratorFormat();
        org.apache.commons.math.fraction.Fraction fraction60 = fractionFormat56.parse("-1 / 1");
        java.lang.StringBuffer stringBuffer61 = null;
        java.text.FieldPosition fieldPosition62 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer63 = fractionFormat44.format((java.lang.Object) fraction60, stringBuffer61, fieldPosition62);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(numberFormat3);
        org.junit.Assert.assertNull(numberFormat4);
        org.junit.Assert.assertNotNull(fractionFormat5);
        org.junit.Assert.assertNotNull(attributedCharacterIterator7);
        org.junit.Assert.assertNotNull(numberFormat8);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "10" + "'", str12, "10");
        org.junit.Assert.assertNull(numberFormat16);
        org.junit.Assert.assertNull(numberFormat17);
        org.junit.Assert.assertNull(numberFormat18);
        org.junit.Assert.assertNotNull(fractionFormat19);
        org.junit.Assert.assertNotNull(attributedCharacterIterator21);
        org.junit.Assert.assertNotNull(numberFormat22);
        org.junit.Assert.assertNotNull(fractionFormat23);
        org.junit.Assert.assertNotNull(attributedCharacterIterator25);
        org.junit.Assert.assertNotNull(numberFormat26);
        org.junit.Assert.assertNotNull(fractionFormat29);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertNotNull(numberFormat32);
        org.junit.Assert.assertNotNull(fractionFormat33);
        org.junit.Assert.assertNotNull(attributedCharacterIterator35);
        org.junit.Assert.assertNotNull(numberFormat36);
        org.junit.Assert.assertNotNull(fractionFormat37);
        org.junit.Assert.assertNotNull(attributedCharacterIterator39);
        org.junit.Assert.assertNotNull(numberFormat40);
        org.junit.Assert.assertNotNull(fractionFormat45);
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertNotNull(obj49);
        org.junit.Assert.assertNotNull(numberFormat50);
        org.junit.Assert.assertNotNull(numberFormat51);
        org.junit.Assert.assertNotNull(fractionFormat52);
        org.junit.Assert.assertNotNull(attributedCharacterIterator54);
        org.junit.Assert.assertNotNull(numberFormat55);
        org.junit.Assert.assertNotNull(obj57);
        org.junit.Assert.assertNotNull(numberFormat58);
        org.junit.Assert.assertNotNull(fraction60);
    }

    @Test
    public void test0468() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0468");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat5 = fractionFormat0.getNumeratorFormat();
        java.text.ParsePosition parsePosition7 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj8 = fractionFormat0.parseObject("0 / 1", parsePosition7);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(numberFormat5);
    }

    @Test
    public void test0469() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0469");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.text.NumberFormat numberFormat3 = fractionFormat2.getDenominatorFormat();
        java.text.NumberFormat numberFormat4 = fractionFormat2.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator7 = fractionFormat5.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat8 = fractionFormat5.getDenominatorFormat();
        fractionFormat2.setNumeratorFormat(numberFormat8);
        java.text.NumberFormat numberFormat10 = null;
        java.text.NumberFormat numberFormat11 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat12 = new org.apache.commons.math.fraction.FractionFormat(numberFormat10, numberFormat11);
        java.text.NumberFormat numberFormat13 = fractionFormat12.getNumeratorFormat();
        java.text.NumberFormat numberFormat14 = fractionFormat12.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat15 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj17 = fractionFormat15.parseObject("0 / 1");
        java.lang.Object obj19 = fractionFormat15.parseObject("0 / 1");
        java.text.NumberFormat numberFormat20 = fractionFormat15.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat21 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj23 = fractionFormat21.parseObject("0 / 1");
        java.text.NumberFormat numberFormat24 = fractionFormat21.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat25 = new org.apache.commons.math.fraction.FractionFormat(numberFormat20, numberFormat24);
        fractionFormat12.setNumeratorFormat(numberFormat20);
        fractionFormat2.setDenominatorFormat(numberFormat20);
        java.text.NumberFormat numberFormat28 = fractionFormat2.getDenominatorFormat();
        java.text.NumberFormat numberFormat29 = null;
        java.text.NumberFormat numberFormat30 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat31 = new org.apache.commons.math.fraction.FractionFormat(numberFormat29, numberFormat30);
        java.text.NumberFormat numberFormat32 = fractionFormat31.getDenominatorFormat();
        java.text.NumberFormat numberFormat33 = fractionFormat31.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat34 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator36 = fractionFormat34.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat37 = fractionFormat34.getDenominatorFormat();
        fractionFormat31.setNumeratorFormat(numberFormat37);
        org.apache.commons.math.fraction.FractionFormat fractionFormat39 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj41 = fractionFormat39.parseObject("0 / 1");
        java.lang.Object obj43 = fractionFormat39.parseObject("0 / 1");
        java.text.NumberFormat numberFormat44 = fractionFormat39.getNumeratorFormat();
        fractionFormat31.setDenominatorFormat(numberFormat44);
        org.apache.commons.math.fraction.FractionFormat fractionFormat46 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat47 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj49 = fractionFormat47.parseObject("0 / 1");
        java.lang.Object obj51 = fractionFormat47.parseObject("0 / 1");
        java.text.NumberFormat numberFormat52 = fractionFormat47.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat53 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj55 = fractionFormat53.parseObject("0 / 1");
        java.text.NumberFormat numberFormat56 = fractionFormat53.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat57 = new org.apache.commons.math.fraction.FractionFormat(numberFormat52, numberFormat56);
        org.apache.commons.math.fraction.FractionFormat fractionFormat58 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj60 = fractionFormat58.parseObject("0 / 1");
        java.lang.Object obj62 = fractionFormat58.parseObject("0 / 1");
        java.text.NumberFormat numberFormat63 = fractionFormat58.getNumeratorFormat();
        fractionFormat57.setDenominatorFormat(numberFormat63);
        java.lang.Object obj65 = numberFormat63.clone();
        fractionFormat46.setNumeratorFormat(numberFormat63);
        fractionFormat31.setDenominatorFormat(numberFormat63);
        org.apache.commons.math.fraction.Fraction fraction69 = fractionFormat31.parse("10");
        java.lang.StringBuffer stringBuffer70 = null;
        java.text.FieldPosition fieldPosition71 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer72 = fractionFormat2.format(fraction69, stringBuffer70, fieldPosition71);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(numberFormat3);
        org.junit.Assert.assertNull(numberFormat4);
        org.junit.Assert.assertNotNull(fractionFormat5);
        org.junit.Assert.assertNotNull(attributedCharacterIterator7);
        org.junit.Assert.assertNotNull(numberFormat8);
        org.junit.Assert.assertNull(numberFormat13);
        org.junit.Assert.assertNull(numberFormat14);
        org.junit.Assert.assertNotNull(fractionFormat15);
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(numberFormat20);
        org.junit.Assert.assertNotNull(fractionFormat21);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertNotNull(numberFormat24);
        org.junit.Assert.assertNotNull(numberFormat28);
        org.junit.Assert.assertNull(numberFormat32);
        org.junit.Assert.assertNull(numberFormat33);
        org.junit.Assert.assertNotNull(fractionFormat34);
        org.junit.Assert.assertNotNull(attributedCharacterIterator36);
        org.junit.Assert.assertNotNull(numberFormat37);
        org.junit.Assert.assertNotNull(fractionFormat39);
        org.junit.Assert.assertNotNull(obj41);
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertNotNull(numberFormat44);
        org.junit.Assert.assertNotNull(fractionFormat46);
        org.junit.Assert.assertNotNull(fractionFormat47);
        org.junit.Assert.assertNotNull(obj49);
        org.junit.Assert.assertNotNull(obj51);
        org.junit.Assert.assertNotNull(numberFormat52);
        org.junit.Assert.assertNotNull(fractionFormat53);
        org.junit.Assert.assertNotNull(obj55);
        org.junit.Assert.assertNotNull(numberFormat56);
        org.junit.Assert.assertNotNull(fractionFormat58);
        org.junit.Assert.assertNotNull(obj60);
        org.junit.Assert.assertNotNull(obj62);
        org.junit.Assert.assertNotNull(numberFormat63);
        org.junit.Assert.assertNotNull(obj65);
        org.junit.Assert.assertNotNull(fraction69);
    }

    @Test
    public void test0470() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0470");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.text.NumberFormat numberFormat3 = fractionFormat2.getDenominatorFormat();
        java.text.NumberFormat numberFormat4 = fractionFormat2.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj7 = fractionFormat5.parseObject("0 / 1");
        java.lang.Object obj9 = fractionFormat5.parseObject("0 / 1");
        java.text.NumberFormat numberFormat10 = fractionFormat5.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj13 = fractionFormat11.parseObject("0 / 1");
        java.text.NumberFormat numberFormat14 = fractionFormat11.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat15 = new org.apache.commons.math.fraction.FractionFormat(numberFormat10, numberFormat14);
        java.text.AttributedCharacterIterator attributedCharacterIterator17 = numberFormat10.formatToCharacterIterator((java.lang.Object) (-1));
        fractionFormat2.setDenominatorFormat(numberFormat10);
        java.lang.Object obj19 = numberFormat10.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat20 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj22 = fractionFormat20.parseObject("0 / 1");
        java.lang.Object obj24 = fractionFormat20.parseObject("0 / 1");
        java.text.NumberFormat numberFormat25 = fractionFormat20.getNumeratorFormat();
        java.lang.Object obj26 = numberFormat25.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat27 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj29 = fractionFormat27.parseObject("0 / 1");
        java.lang.Object obj31 = fractionFormat27.parseObject("0 / 1");
        java.text.NumberFormat numberFormat32 = fractionFormat27.getNumeratorFormat();
        java.text.NumberFormat numberFormat33 = fractionFormat27.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat34 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator36 = fractionFormat34.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat37 = fractionFormat34.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat38 = new org.apache.commons.math.fraction.FractionFormat(numberFormat33, numberFormat37);
        org.apache.commons.math.fraction.FractionFormat fractionFormat39 = new org.apache.commons.math.fraction.FractionFormat(numberFormat25, numberFormat37);
        org.apache.commons.math.fraction.FractionFormat fractionFormat40 = new org.apache.commons.math.fraction.FractionFormat(numberFormat10, numberFormat25);
        org.apache.commons.math.fraction.FractionFormat fractionFormat41 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj43 = fractionFormat41.parseObject("0 / 1");
        java.lang.Object obj45 = fractionFormat41.parseObject("0 / 1");
        java.text.NumberFormat numberFormat46 = fractionFormat41.getNumeratorFormat();
        java.text.NumberFormat numberFormat47 = fractionFormat41.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat48 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator50 = fractionFormat48.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat51 = fractionFormat48.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat52 = new org.apache.commons.math.fraction.FractionFormat(numberFormat47, numberFormat51);
        org.apache.commons.math.fraction.FractionFormat fractionFormat53 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj55 = fractionFormat53.parseObject("0 / 1");
        java.text.NumberFormat numberFormat56 = fractionFormat53.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat57 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj59 = fractionFormat57.parseObject("0 / 1");
        java.lang.Object obj61 = fractionFormat57.parseObject("0 / 1");
        java.text.NumberFormat numberFormat62 = fractionFormat57.getNumeratorFormat();
        java.text.NumberFormat numberFormat63 = fractionFormat57.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat64 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator66 = fractionFormat64.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat67 = fractionFormat64.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat68 = new org.apache.commons.math.fraction.FractionFormat(numberFormat63, numberFormat67);
        fractionFormat53.setNumeratorFormat(numberFormat67);
        org.apache.commons.math.fraction.FractionFormat fractionFormat70 = new org.apache.commons.math.fraction.FractionFormat(numberFormat47, numberFormat67);
        org.apache.commons.math.fraction.FractionFormat fractionFormat71 = new org.apache.commons.math.fraction.FractionFormat(numberFormat67);
        // The following exception was thrown during execution in test generation
        try {
            java.text.AttributedCharacterIterator attributedCharacterIterator72 = numberFormat10.formatToCharacterIterator((java.lang.Object) fractionFormat71);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot format given Object as a Number");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(numberFormat3);
        org.junit.Assert.assertNull(numberFormat4);
        org.junit.Assert.assertNotNull(fractionFormat5);
        org.junit.Assert.assertNotNull(obj7);
        org.junit.Assert.assertNotNull(obj9);
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertNotNull(fractionFormat11);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertNotNull(numberFormat14);
        org.junit.Assert.assertNotNull(attributedCharacterIterator17);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(fractionFormat20);
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertNotNull(numberFormat25);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertNotNull(fractionFormat27);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertNotNull(numberFormat32);
        org.junit.Assert.assertNotNull(numberFormat33);
        org.junit.Assert.assertNotNull(fractionFormat34);
        org.junit.Assert.assertNotNull(attributedCharacterIterator36);
        org.junit.Assert.assertNotNull(numberFormat37);
        org.junit.Assert.assertNotNull(fractionFormat41);
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertNotNull(numberFormat46);
        org.junit.Assert.assertNotNull(numberFormat47);
        org.junit.Assert.assertNotNull(fractionFormat48);
        org.junit.Assert.assertNotNull(attributedCharacterIterator50);
        org.junit.Assert.assertNotNull(numberFormat51);
        org.junit.Assert.assertNotNull(fractionFormat53);
        org.junit.Assert.assertNotNull(obj55);
        org.junit.Assert.assertNotNull(numberFormat56);
        org.junit.Assert.assertNotNull(fractionFormat57);
        org.junit.Assert.assertNotNull(obj59);
        org.junit.Assert.assertNotNull(obj61);
        org.junit.Assert.assertNotNull(numberFormat62);
        org.junit.Assert.assertNotNull(numberFormat63);
        org.junit.Assert.assertNotNull(fractionFormat64);
        org.junit.Assert.assertNotNull(attributedCharacterIterator66);
        org.junit.Assert.assertNotNull(numberFormat67);
    }

    @Test
    public void test0471() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0471");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat3 = fractionFormat0.getNumeratorFormat();
        java.lang.Object obj4 = fractionFormat0.clone();
        java.text.NumberFormat numberFormat5 = fractionFormat0.getDenominatorFormat();
        java.lang.Class<?> wildcardClass6 = fractionFormat0.getClass();
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(numberFormat3);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(wildcardClass6);
    }

    @Test
    public void test0472() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0472");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat5 = fractionFormat0.getNumeratorFormat();
        java.text.NumberFormat numberFormat6 = fractionFormat0.getNumeratorFormat();
        java.text.ParsePosition parsePosition8 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj9 = fractionFormat0.parseObject("10", parsePosition8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
    }

    @Test
    public void test0473() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0473");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator2 = fractionFormat0.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat3 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat4 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator6 = fractionFormat4.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat7 = fractionFormat4.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat8 = new org.apache.commons.math.fraction.FractionFormat(numberFormat3, numberFormat7);
        java.text.NumberFormat numberFormat9 = fractionFormat8.getDenominatorFormat();
        java.lang.Object obj10 = fractionFormat8.clone();
        java.text.NumberFormat numberFormat11 = fractionFormat8.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat12 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj14 = fractionFormat12.parseObject("0 / 1");
        java.lang.Object obj16 = fractionFormat12.parseObject("0 / 1");
        java.text.NumberFormat numberFormat17 = fractionFormat12.getNumeratorFormat();
        java.text.NumberFormat numberFormat18 = fractionFormat12.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat19 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator21 = fractionFormat19.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat22 = fractionFormat19.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat23 = new org.apache.commons.math.fraction.FractionFormat(numberFormat18, numberFormat22);
        org.apache.commons.math.fraction.FractionFormat fractionFormat24 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator26 = fractionFormat24.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat27 = fractionFormat24.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat28 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator30 = fractionFormat28.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat31 = fractionFormat28.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat32 = new org.apache.commons.math.fraction.FractionFormat(numberFormat27, numberFormat31);
        java.text.NumberFormat numberFormat33 = fractionFormat32.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat34 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat35 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj37 = fractionFormat35.parseObject("0 / 1");
        java.lang.Object obj39 = fractionFormat35.parseObject("0 / 1");
        java.text.NumberFormat numberFormat40 = fractionFormat35.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat41 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj43 = fractionFormat41.parseObject("0 / 1");
        java.text.NumberFormat numberFormat44 = fractionFormat41.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat45 = new org.apache.commons.math.fraction.FractionFormat(numberFormat40, numberFormat44);
        org.apache.commons.math.fraction.FractionFormat fractionFormat46 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj48 = fractionFormat46.parseObject("0 / 1");
        java.lang.Object obj50 = fractionFormat46.parseObject("0 / 1");
        java.text.NumberFormat numberFormat51 = fractionFormat46.getNumeratorFormat();
        fractionFormat45.setDenominatorFormat(numberFormat51);
        java.lang.Object obj53 = numberFormat51.clone();
        fractionFormat34.setNumeratorFormat(numberFormat51);
        java.lang.Object obj55 = numberFormat51.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat56 = new org.apache.commons.math.fraction.FractionFormat(numberFormat33, numberFormat51);
        org.apache.commons.math.fraction.FractionFormat fractionFormat57 = new org.apache.commons.math.fraction.FractionFormat(numberFormat18, numberFormat51);
        java.lang.StringBuffer stringBuffer58 = null;
        java.text.FieldPosition fieldPosition59 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer60 = fractionFormat8.format((java.lang.Object) fractionFormat57, stringBuffer58, fieldPosition59);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot format given object as a fraction");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(attributedCharacterIterator2);
        org.junit.Assert.assertNotNull(numberFormat3);
        org.junit.Assert.assertNotNull(fractionFormat4);
        org.junit.Assert.assertNotNull(attributedCharacterIterator6);
        org.junit.Assert.assertNotNull(numberFormat7);
        org.junit.Assert.assertNotNull(numberFormat9);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertNotNull(numberFormat11);
        org.junit.Assert.assertNotNull(fractionFormat12);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertNotNull(obj16);
        org.junit.Assert.assertNotNull(numberFormat17);
        org.junit.Assert.assertNotNull(numberFormat18);
        org.junit.Assert.assertNotNull(fractionFormat19);
        org.junit.Assert.assertNotNull(attributedCharacterIterator21);
        org.junit.Assert.assertNotNull(numberFormat22);
        org.junit.Assert.assertNotNull(fractionFormat24);
        org.junit.Assert.assertNotNull(attributedCharacterIterator26);
        org.junit.Assert.assertNotNull(numberFormat27);
        org.junit.Assert.assertNotNull(fractionFormat28);
        org.junit.Assert.assertNotNull(attributedCharacterIterator30);
        org.junit.Assert.assertNotNull(numberFormat31);
        org.junit.Assert.assertNotNull(numberFormat33);
        org.junit.Assert.assertNotNull(fractionFormat34);
        org.junit.Assert.assertNotNull(fractionFormat35);
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertNotNull(obj39);
        org.junit.Assert.assertNotNull(numberFormat40);
        org.junit.Assert.assertNotNull(fractionFormat41);
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertNotNull(numberFormat44);
        org.junit.Assert.assertNotNull(fractionFormat46);
        org.junit.Assert.assertNotNull(obj48);
        org.junit.Assert.assertNotNull(obj50);
        org.junit.Assert.assertNotNull(numberFormat51);
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertNotNull(obj55);
    }

    @Test
    public void test0474() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0474");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat5 = fractionFormat0.getNumeratorFormat();
        java.text.NumberFormat numberFormat6 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat7 = new org.apache.commons.math.fraction.FractionFormat(numberFormat6);
        org.apache.commons.math.fraction.FractionFormat fractionFormat8 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj10 = fractionFormat8.parseObject("0 / 1");
        java.lang.Object obj12 = fractionFormat8.parseObject("0 / 1");
        java.text.NumberFormat numberFormat13 = fractionFormat8.getNumeratorFormat();
        java.text.NumberFormat numberFormat14 = fractionFormat8.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat15 = new org.apache.commons.math.fraction.FractionFormat(numberFormat14);
        org.apache.commons.math.fraction.FractionFormat fractionFormat16 = new org.apache.commons.math.fraction.FractionFormat(numberFormat14);
        fractionFormat7.setNumeratorFormat(numberFormat14);
        java.text.NumberFormat numberFormat18 = null;
        java.text.NumberFormat numberFormat19 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat20 = new org.apache.commons.math.fraction.FractionFormat(numberFormat18, numberFormat19);
        java.text.NumberFormat numberFormat21 = fractionFormat20.getDenominatorFormat();
        java.text.NumberFormat numberFormat22 = fractionFormat20.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat23 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj25 = fractionFormat23.parseObject("0 / 1");
        java.lang.Object obj27 = fractionFormat23.parseObject("0 / 1");
        java.text.NumberFormat numberFormat28 = fractionFormat23.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat29 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj31 = fractionFormat29.parseObject("0 / 1");
        java.text.NumberFormat numberFormat32 = fractionFormat29.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat33 = new org.apache.commons.math.fraction.FractionFormat(numberFormat28, numberFormat32);
        java.text.AttributedCharacterIterator attributedCharacterIterator35 = numberFormat28.formatToCharacterIterator((java.lang.Object) (-1));
        fractionFormat20.setDenominatorFormat(numberFormat28);
        java.lang.Object obj37 = numberFormat28.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat38 = new org.apache.commons.math.fraction.FractionFormat(numberFormat14, numberFormat28);
        java.text.ParsePosition parsePosition40 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.fraction.Fraction fraction41 = fractionFormat38.parse("10", parsePosition40);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertNotNull(fractionFormat8);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertNotNull(numberFormat13);
        org.junit.Assert.assertNotNull(numberFormat14);
        org.junit.Assert.assertNull(numberFormat21);
        org.junit.Assert.assertNull(numberFormat22);
        org.junit.Assert.assertNotNull(fractionFormat23);
        org.junit.Assert.assertNotNull(obj25);
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertNotNull(numberFormat28);
        org.junit.Assert.assertNotNull(fractionFormat29);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertNotNull(numberFormat32);
        org.junit.Assert.assertNotNull(attributedCharacterIterator35);
        org.junit.Assert.assertNotNull(obj37);
    }

    @Test
    public void test0475() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0475");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj6 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat7 = null;
        java.text.NumberFormat numberFormat8 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat9 = new org.apache.commons.math.fraction.FractionFormat(numberFormat7, numberFormat8);
        java.text.NumberFormat numberFormat10 = fractionFormat9.getDenominatorFormat();
        java.text.NumberFormat numberFormat11 = fractionFormat9.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat12 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator14 = fractionFormat12.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat15 = fractionFormat12.getDenominatorFormat();
        fractionFormat9.setNumeratorFormat(numberFormat15);
        org.apache.commons.math.fraction.FractionFormat fractionFormat17 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj19 = fractionFormat17.parseObject("0 / 1");
        java.text.NumberFormat numberFormat20 = fractionFormat17.getNumeratorFormat();
        fractionFormat9.setNumeratorFormat(numberFormat20);
        java.lang.Object obj23 = numberFormat20.parseObject("0 / 1");
        fractionFormat0.setNumeratorFormat(numberFormat20);
        java.lang.Object obj26 = fractionFormat0.parseObject("0 / 1");
        java.text.ParsePosition parsePosition28 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.fraction.Fraction fraction29 = fractionFormat0.parse("-1 / 1", parsePosition28);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(obj6);
        org.junit.Assert.assertNull(numberFormat10);
        org.junit.Assert.assertNull(numberFormat11);
        org.junit.Assert.assertNotNull(fractionFormat12);
        org.junit.Assert.assertNotNull(attributedCharacterIterator14);
        org.junit.Assert.assertNotNull(numberFormat15);
        org.junit.Assert.assertNotNull(fractionFormat17);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(numberFormat20);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + 0L + "'", obj23, 0L);
        org.junit.Assert.assertNotNull(obj26);
    }

    @Test
    public void test0476() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0476");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat1 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj3 = fractionFormat1.parseObject("0 / 1");
        java.lang.Object obj5 = fractionFormat1.parseObject("0 / 1");
        java.text.NumberFormat numberFormat6 = fractionFormat1.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat7 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj9 = fractionFormat7.parseObject("0 / 1");
        java.text.NumberFormat numberFormat10 = fractionFormat7.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = new org.apache.commons.math.fraction.FractionFormat(numberFormat6, numberFormat10);
        org.apache.commons.math.fraction.FractionFormat fractionFormat12 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj14 = fractionFormat12.parseObject("0 / 1");
        java.lang.Object obj16 = fractionFormat12.parseObject("0 / 1");
        java.text.NumberFormat numberFormat17 = fractionFormat12.getNumeratorFormat();
        fractionFormat11.setDenominatorFormat(numberFormat17);
        java.lang.Object obj19 = numberFormat17.clone();
        fractionFormat0.setNumeratorFormat(numberFormat17);
        java.text.NumberFormat numberFormat21 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat22 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj24 = fractionFormat22.parseObject("0 / 1");
        java.lang.Object obj26 = fractionFormat22.parseObject("0 / 1");
        java.text.NumberFormat numberFormat27 = fractionFormat22.getNumeratorFormat();
        java.text.NumberFormat numberFormat28 = fractionFormat22.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat29 = new org.apache.commons.math.fraction.FractionFormat(numberFormat28);
        fractionFormat0.setNumeratorFormat(numberFormat28);
        java.lang.Object obj31 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str32 = fractionFormat0.format(obj31);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot format given object as a fraction");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(fractionFormat1);
        org.junit.Assert.assertNotNull(obj3);
        org.junit.Assert.assertNotNull(obj5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertNotNull(fractionFormat7);
        org.junit.Assert.assertNotNull(obj9);
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertNotNull(fractionFormat12);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertNotNull(obj16);
        org.junit.Assert.assertNotNull(numberFormat17);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(numberFormat21);
        org.junit.Assert.assertNotNull(fractionFormat22);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertNotNull(numberFormat27);
        org.junit.Assert.assertNotNull(numberFormat28);
    }

    @Test
    public void test0477() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0477");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator2 = fractionFormat0.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat3 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat4 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj6 = fractionFormat4.parseObject("0 / 1");
        java.lang.Object obj8 = fractionFormat4.parseObject("0 / 1");
        java.text.NumberFormat numberFormat9 = fractionFormat4.getNumeratorFormat();
        java.lang.Object obj10 = numberFormat9.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj13 = fractionFormat11.parseObject("0 / 1");
        java.lang.Object obj15 = fractionFormat11.parseObject("0 / 1");
        java.text.NumberFormat numberFormat16 = fractionFormat11.getNumeratorFormat();
        java.text.NumberFormat numberFormat17 = fractionFormat11.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat18 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator20 = fractionFormat18.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat21 = fractionFormat18.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat22 = new org.apache.commons.math.fraction.FractionFormat(numberFormat17, numberFormat21);
        org.apache.commons.math.fraction.FractionFormat fractionFormat23 = new org.apache.commons.math.fraction.FractionFormat(numberFormat9, numberFormat21);
        fractionFormat0.setNumeratorFormat(numberFormat9);
        org.apache.commons.math.fraction.FractionFormat fractionFormat25 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator27 = fractionFormat25.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat28 = fractionFormat25.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat29 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator31 = fractionFormat29.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat32 = fractionFormat29.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat33 = new org.apache.commons.math.fraction.FractionFormat(numberFormat28, numberFormat32);
        java.text.NumberFormat numberFormat34 = fractionFormat33.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat35 = new org.apache.commons.math.fraction.FractionFormat(numberFormat34);
        java.text.NumberFormat numberFormat36 = fractionFormat35.getDenominatorFormat();
        org.apache.commons.math.fraction.Fraction fraction38 = fractionFormat35.parse("10");
        org.apache.commons.math.fraction.Fraction fraction40 = fractionFormat35.parse("10");
        java.lang.StringBuffer stringBuffer41 = null;
        java.text.FieldPosition fieldPosition42 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer43 = fractionFormat0.format(fraction40, stringBuffer41, fieldPosition42);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(attributedCharacterIterator2);
        org.junit.Assert.assertNotNull(numberFormat3);
        org.junit.Assert.assertNotNull(fractionFormat4);
        org.junit.Assert.assertNotNull(obj6);
        org.junit.Assert.assertNotNull(obj8);
        org.junit.Assert.assertNotNull(numberFormat9);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertNotNull(fractionFormat11);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertNotNull(numberFormat16);
        org.junit.Assert.assertNotNull(numberFormat17);
        org.junit.Assert.assertNotNull(fractionFormat18);
        org.junit.Assert.assertNotNull(attributedCharacterIterator20);
        org.junit.Assert.assertNotNull(numberFormat21);
        org.junit.Assert.assertNotNull(fractionFormat25);
        org.junit.Assert.assertNotNull(attributedCharacterIterator27);
        org.junit.Assert.assertNotNull(numberFormat28);
        org.junit.Assert.assertNotNull(fractionFormat29);
        org.junit.Assert.assertNotNull(attributedCharacterIterator31);
        org.junit.Assert.assertNotNull(numberFormat32);
        org.junit.Assert.assertNotNull(numberFormat34);
        org.junit.Assert.assertNotNull(numberFormat36);
        org.junit.Assert.assertNotNull(fraction38);
        org.junit.Assert.assertNotNull(fraction40);
    }

    @Test
    public void test0478() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0478");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.text.NumberFormat numberFormat3 = fractionFormat2.getDenominatorFormat();
        java.text.NumberFormat numberFormat4 = fractionFormat2.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator7 = fractionFormat5.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat8 = fractionFormat5.getDenominatorFormat();
        fractionFormat2.setNumeratorFormat(numberFormat8);
        java.lang.Object obj10 = numberFormat8.clone();
        java.lang.String str12 = numberFormat8.format((java.lang.Object) (short) 10);
        java.text.NumberFormat numberFormat13 = null;
        java.text.NumberFormat numberFormat14 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat15 = new org.apache.commons.math.fraction.FractionFormat(numberFormat13, numberFormat14);
        java.text.NumberFormat numberFormat16 = fractionFormat15.getDenominatorFormat();
        java.text.NumberFormat numberFormat17 = fractionFormat15.getNumeratorFormat();
        java.text.NumberFormat numberFormat18 = fractionFormat15.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat19 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator21 = fractionFormat19.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat22 = fractionFormat19.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat23 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator25 = fractionFormat23.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat26 = fractionFormat23.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat27 = new org.apache.commons.math.fraction.FractionFormat(numberFormat22, numberFormat26);
        fractionFormat15.setNumeratorFormat(numberFormat22);
        org.apache.commons.math.fraction.FractionFormat fractionFormat29 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj31 = fractionFormat29.parseObject("0 / 1");
        java.text.NumberFormat numberFormat32 = fractionFormat29.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat33 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator35 = fractionFormat33.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat36 = fractionFormat33.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat37 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator39 = fractionFormat37.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat40 = fractionFormat37.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat41 = new org.apache.commons.math.fraction.FractionFormat(numberFormat36, numberFormat40);
        org.apache.commons.math.fraction.FractionFormat fractionFormat42 = new org.apache.commons.math.fraction.FractionFormat(numberFormat32, numberFormat36);
        org.apache.commons.math.fraction.FractionFormat fractionFormat43 = new org.apache.commons.math.fraction.FractionFormat(numberFormat22, numberFormat32);
        org.apache.commons.math.fraction.FractionFormat fractionFormat44 = new org.apache.commons.math.fraction.FractionFormat(numberFormat8, numberFormat32);
        org.apache.commons.math.fraction.FractionFormat fractionFormat45 = new org.apache.commons.math.fraction.FractionFormat(numberFormat8);
        org.apache.commons.math.fraction.Fraction fraction47 = fractionFormat45.parse("100");
        org.apache.commons.math.fraction.FractionFormat fractionFormat48 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj50 = fractionFormat48.parseObject("0 / 1");
        java.lang.Object obj52 = fractionFormat48.parseObject("0 / 1");
        java.text.NumberFormat numberFormat53 = fractionFormat48.getNumeratorFormat();
        java.text.NumberFormat numberFormat54 = fractionFormat48.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat55 = new org.apache.commons.math.fraction.FractionFormat(numberFormat54);
        org.apache.commons.math.fraction.FractionFormat fractionFormat56 = new org.apache.commons.math.fraction.FractionFormat(numberFormat54);
        fractionFormat45.setNumeratorFormat(numberFormat54);
        org.apache.commons.math.fraction.FractionFormat fractionFormat58 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj60 = fractionFormat58.parseObject("0 / 1");
        java.lang.Object obj62 = fractionFormat58.parseObject("0 / 1");
        java.text.NumberFormat numberFormat63 = fractionFormat58.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat64 = new org.apache.commons.math.fraction.FractionFormat(numberFormat63);
        java.text.NumberFormat numberFormat65 = fractionFormat64.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat66 = new org.apache.commons.math.fraction.FractionFormat(numberFormat65);
        java.lang.Object obj67 = numberFormat65.clone();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str68 = fractionFormat45.format((java.lang.Object) numberFormat65);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot format given object as a fraction");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(numberFormat3);
        org.junit.Assert.assertNull(numberFormat4);
        org.junit.Assert.assertNotNull(fractionFormat5);
        org.junit.Assert.assertNotNull(attributedCharacterIterator7);
        org.junit.Assert.assertNotNull(numberFormat8);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "10" + "'", str12, "10");
        org.junit.Assert.assertNull(numberFormat16);
        org.junit.Assert.assertNull(numberFormat17);
        org.junit.Assert.assertNull(numberFormat18);
        org.junit.Assert.assertNotNull(fractionFormat19);
        org.junit.Assert.assertNotNull(attributedCharacterIterator21);
        org.junit.Assert.assertNotNull(numberFormat22);
        org.junit.Assert.assertNotNull(fractionFormat23);
        org.junit.Assert.assertNotNull(attributedCharacterIterator25);
        org.junit.Assert.assertNotNull(numberFormat26);
        org.junit.Assert.assertNotNull(fractionFormat29);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertNotNull(numberFormat32);
        org.junit.Assert.assertNotNull(fractionFormat33);
        org.junit.Assert.assertNotNull(attributedCharacterIterator35);
        org.junit.Assert.assertNotNull(numberFormat36);
        org.junit.Assert.assertNotNull(fractionFormat37);
        org.junit.Assert.assertNotNull(attributedCharacterIterator39);
        org.junit.Assert.assertNotNull(numberFormat40);
        org.junit.Assert.assertNotNull(fraction47);
        org.junit.Assert.assertNotNull(fractionFormat48);
        org.junit.Assert.assertNotNull(obj50);
        org.junit.Assert.assertNotNull(obj52);
        org.junit.Assert.assertNotNull(numberFormat53);
        org.junit.Assert.assertNotNull(numberFormat54);
        org.junit.Assert.assertNotNull(fractionFormat58);
        org.junit.Assert.assertNotNull(obj60);
        org.junit.Assert.assertNotNull(obj62);
        org.junit.Assert.assertNotNull(numberFormat63);
        org.junit.Assert.assertNotNull(numberFormat65);
        org.junit.Assert.assertNotNull(obj67);
    }

    @Test
    public void test0479() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0479");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.text.NumberFormat numberFormat3 = fractionFormat2.getDenominatorFormat();
        java.text.NumberFormat numberFormat4 = fractionFormat2.getNumeratorFormat();
        java.text.NumberFormat numberFormat5 = fractionFormat2.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat6 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj8 = fractionFormat6.parseObject("0 / 1");
        java.lang.Object obj10 = fractionFormat6.parseObject("0 / 1");
        java.text.NumberFormat numberFormat11 = fractionFormat6.getNumeratorFormat();
        java.lang.Object obj12 = numberFormat11.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat13 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj15 = fractionFormat13.parseObject("0 / 1");
        java.lang.Object obj17 = fractionFormat13.parseObject("0 / 1");
        java.text.NumberFormat numberFormat18 = fractionFormat13.getNumeratorFormat();
        java.text.NumberFormat numberFormat19 = fractionFormat13.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat20 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator22 = fractionFormat20.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat23 = fractionFormat20.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat24 = new org.apache.commons.math.fraction.FractionFormat(numberFormat19, numberFormat23);
        org.apache.commons.math.fraction.FractionFormat fractionFormat25 = new org.apache.commons.math.fraction.FractionFormat(numberFormat11, numberFormat23);
        fractionFormat2.setNumeratorFormat(numberFormat11);
        org.apache.commons.math.fraction.Fraction fraction28 = fractionFormat2.parse("10");
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.fraction.Fraction fraction30 = fractionFormat2.parse("");
            org.junit.Assert.fail("Expected exception of type java.text.ParseException; message: Unparseable fraction number: \"\"");
        } catch (java.text.ParseException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(numberFormat3);
        org.junit.Assert.assertNull(numberFormat4);
        org.junit.Assert.assertNull(numberFormat5);
        org.junit.Assert.assertNotNull(fractionFormat6);
        org.junit.Assert.assertNotNull(obj8);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertNotNull(numberFormat11);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertNotNull(fractionFormat13);
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertNotNull(numberFormat18);
        org.junit.Assert.assertNotNull(numberFormat19);
        org.junit.Assert.assertNotNull(fractionFormat20);
        org.junit.Assert.assertNotNull(attributedCharacterIterator22);
        org.junit.Assert.assertNotNull(numberFormat23);
        org.junit.Assert.assertNotNull(fraction28);
    }

    @Test
    public void test0480() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0480");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat5 = fractionFormat0.getNumeratorFormat();
        java.lang.Object obj6 = numberFormat5.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat7 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj9 = fractionFormat7.parseObject("0 / 1");
        java.lang.Object obj11 = fractionFormat7.parseObject("0 / 1");
        java.text.NumberFormat numberFormat12 = fractionFormat7.getNumeratorFormat();
        java.text.NumberFormat numberFormat13 = fractionFormat7.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat14 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator16 = fractionFormat14.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat17 = fractionFormat14.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat18 = new org.apache.commons.math.fraction.FractionFormat(numberFormat13, numberFormat17);
        org.apache.commons.math.fraction.FractionFormat fractionFormat19 = new org.apache.commons.math.fraction.FractionFormat(numberFormat5, numberFormat17);
        java.text.NumberFormat numberFormat20 = fractionFormat19.getNumeratorFormat();
        java.text.NumberFormat numberFormat21 = null;
        java.text.NumberFormat numberFormat22 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat23 = new org.apache.commons.math.fraction.FractionFormat(numberFormat21, numberFormat22);
        java.text.NumberFormat numberFormat24 = fractionFormat23.getDenominatorFormat();
        java.text.NumberFormat numberFormat25 = fractionFormat23.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat26 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj28 = fractionFormat26.parseObject("0 / 1");
        java.lang.Object obj30 = fractionFormat26.parseObject("0 / 1");
        java.text.NumberFormat numberFormat31 = fractionFormat26.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat32 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj34 = fractionFormat32.parseObject("0 / 1");
        java.text.NumberFormat numberFormat35 = fractionFormat32.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat36 = new org.apache.commons.math.fraction.FractionFormat(numberFormat31, numberFormat35);
        java.text.AttributedCharacterIterator attributedCharacterIterator38 = numberFormat31.formatToCharacterIterator((java.lang.Object) (-1));
        fractionFormat23.setDenominatorFormat(numberFormat31);
        java.lang.Object obj40 = numberFormat31.clone();
        java.text.NumberFormat numberFormat41 = null;
        java.text.NumberFormat numberFormat42 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat43 = new org.apache.commons.math.fraction.FractionFormat(numberFormat41, numberFormat42);
        java.text.NumberFormat numberFormat44 = fractionFormat43.getDenominatorFormat();
        java.text.NumberFormat numberFormat45 = fractionFormat43.getNumeratorFormat();
        java.text.NumberFormat numberFormat46 = fractionFormat43.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat47 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj49 = fractionFormat47.parseObject("0 / 1");
        java.lang.Object obj51 = fractionFormat47.parseObject("0 / 1");
        java.text.NumberFormat numberFormat52 = fractionFormat47.getNumeratorFormat();
        java.lang.Object obj53 = numberFormat52.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat54 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj56 = fractionFormat54.parseObject("0 / 1");
        java.lang.Object obj58 = fractionFormat54.parseObject("0 / 1");
        java.text.NumberFormat numberFormat59 = fractionFormat54.getNumeratorFormat();
        java.text.NumberFormat numberFormat60 = fractionFormat54.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat61 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator63 = fractionFormat61.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat64 = fractionFormat61.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat65 = new org.apache.commons.math.fraction.FractionFormat(numberFormat60, numberFormat64);
        org.apache.commons.math.fraction.FractionFormat fractionFormat66 = new org.apache.commons.math.fraction.FractionFormat(numberFormat52, numberFormat64);
        fractionFormat43.setNumeratorFormat(numberFormat52);
        org.apache.commons.math.fraction.FractionFormat fractionFormat68 = new org.apache.commons.math.fraction.FractionFormat(numberFormat31, numberFormat52);
        org.apache.commons.math.fraction.FractionFormat fractionFormat69 = new org.apache.commons.math.fraction.FractionFormat(numberFormat20, numberFormat52);
        java.lang.Object obj70 = numberFormat52.clone();
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(obj6);
        org.junit.Assert.assertNotNull(fractionFormat7);
        org.junit.Assert.assertNotNull(obj9);
        org.junit.Assert.assertNotNull(obj11);
        org.junit.Assert.assertNotNull(numberFormat12);
        org.junit.Assert.assertNotNull(numberFormat13);
        org.junit.Assert.assertNotNull(fractionFormat14);
        org.junit.Assert.assertNotNull(attributedCharacterIterator16);
        org.junit.Assert.assertNotNull(numberFormat17);
        org.junit.Assert.assertNotNull(numberFormat20);
        org.junit.Assert.assertNull(numberFormat24);
        org.junit.Assert.assertNull(numberFormat25);
        org.junit.Assert.assertNotNull(fractionFormat26);
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertNotNull(numberFormat31);
        org.junit.Assert.assertNotNull(fractionFormat32);
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertNotNull(numberFormat35);
        org.junit.Assert.assertNotNull(attributedCharacterIterator38);
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertNull(numberFormat44);
        org.junit.Assert.assertNull(numberFormat45);
        org.junit.Assert.assertNull(numberFormat46);
        org.junit.Assert.assertNotNull(fractionFormat47);
        org.junit.Assert.assertNotNull(obj49);
        org.junit.Assert.assertNotNull(obj51);
        org.junit.Assert.assertNotNull(numberFormat52);
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertNotNull(fractionFormat54);
        org.junit.Assert.assertNotNull(obj56);
        org.junit.Assert.assertNotNull(obj58);
        org.junit.Assert.assertNotNull(numberFormat59);
        org.junit.Assert.assertNotNull(numberFormat60);
        org.junit.Assert.assertNotNull(fractionFormat61);
        org.junit.Assert.assertNotNull(attributedCharacterIterator63);
        org.junit.Assert.assertNotNull(numberFormat64);
        org.junit.Assert.assertNotNull(obj70);
    }

    @Test
    public void test0481() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0481");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat5 = fractionFormat0.getNumeratorFormat();
        java.text.NumberFormat numberFormat6 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat7 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator9 = fractionFormat7.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat10 = fractionFormat7.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = new org.apache.commons.math.fraction.FractionFormat(numberFormat6, numberFormat10);
        java.lang.Object obj12 = fractionFormat11.clone();
        java.text.NumberFormat numberFormat13 = fractionFormat11.getNumeratorFormat();
        org.apache.commons.math.fraction.Fraction fraction15 = fractionFormat11.parse("-1 / 1");
        java.text.NumberFormat numberFormat16 = null;
        java.text.NumberFormat numberFormat17 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat18 = new org.apache.commons.math.fraction.FractionFormat(numberFormat16, numberFormat17);
        java.text.NumberFormat numberFormat19 = fractionFormat18.getDenominatorFormat();
        java.text.NumberFormat numberFormat20 = fractionFormat18.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat21 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator23 = fractionFormat21.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat24 = fractionFormat21.getDenominatorFormat();
        fractionFormat18.setNumeratorFormat(numberFormat24);
        java.lang.Object obj26 = numberFormat24.clone();
        java.lang.String str28 = numberFormat24.format((java.lang.Object) (short) 10);
        org.apache.commons.math.fraction.FractionFormat fractionFormat29 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator31 = fractionFormat29.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat32 = fractionFormat29.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat33 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator35 = fractionFormat33.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat36 = fractionFormat33.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat37 = new org.apache.commons.math.fraction.FractionFormat(numberFormat32, numberFormat36);
        org.apache.commons.math.fraction.FractionFormat fractionFormat38 = new org.apache.commons.math.fraction.FractionFormat(numberFormat24, numberFormat32);
        java.text.NumberFormat numberFormat39 = null;
        java.text.NumberFormat numberFormat40 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat41 = new org.apache.commons.math.fraction.FractionFormat(numberFormat39, numberFormat40);
        java.text.NumberFormat numberFormat42 = fractionFormat41.getDenominatorFormat();
        java.text.NumberFormat numberFormat43 = fractionFormat41.getNumeratorFormat();
        java.text.NumberFormat numberFormat44 = fractionFormat41.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat45 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj47 = fractionFormat45.parseObject("0 / 1");
        java.lang.Object obj49 = fractionFormat45.parseObject("0 / 1");
        java.text.NumberFormat numberFormat50 = fractionFormat45.getNumeratorFormat();
        java.lang.Object obj51 = numberFormat50.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat52 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj54 = fractionFormat52.parseObject("0 / 1");
        java.lang.Object obj56 = fractionFormat52.parseObject("0 / 1");
        java.text.NumberFormat numberFormat57 = fractionFormat52.getNumeratorFormat();
        java.text.NumberFormat numberFormat58 = fractionFormat52.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat59 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator61 = fractionFormat59.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat62 = fractionFormat59.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat63 = new org.apache.commons.math.fraction.FractionFormat(numberFormat58, numberFormat62);
        org.apache.commons.math.fraction.FractionFormat fractionFormat64 = new org.apache.commons.math.fraction.FractionFormat(numberFormat50, numberFormat62);
        fractionFormat41.setNumeratorFormat(numberFormat50);
        org.apache.commons.math.fraction.FractionFormat fractionFormat66 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj68 = fractionFormat66.parseObject("0 / 1");
        java.lang.Object obj70 = fractionFormat66.parseObject("0 / 1");
        java.text.NumberFormat numberFormat71 = fractionFormat66.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat72 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj74 = fractionFormat72.parseObject("0 / 1");
        java.text.NumberFormat numberFormat75 = fractionFormat72.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat76 = new org.apache.commons.math.fraction.FractionFormat(numberFormat71, numberFormat75);
        org.apache.commons.math.fraction.FractionFormat fractionFormat77 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj79 = fractionFormat77.parseObject("0 / 1");
        java.lang.Object obj81 = fractionFormat77.parseObject("0 / 1");
        java.text.NumberFormat numberFormat82 = fractionFormat77.getNumeratorFormat();
        fractionFormat76.setDenominatorFormat(numberFormat82);
        java.lang.Object obj84 = numberFormat82.clone();
        fractionFormat41.setDenominatorFormat(numberFormat82);
        fractionFormat38.setDenominatorFormat(numberFormat82);
        fractionFormat11.setDenominatorFormat(numberFormat82);
        java.text.NumberFormat numberFormat88 = fractionFormat11.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat89 = new org.apache.commons.math.fraction.FractionFormat();
        java.text.NumberFormat numberFormat90 = fractionFormat89.getDenominatorFormat();
        java.text.NumberFormat numberFormat91 = fractionFormat89.getNumeratorFormat();
        org.apache.commons.math.fraction.Fraction fraction93 = fractionFormat89.parse("-1 / 1");
        java.lang.StringBuffer stringBuffer94 = null;
        java.text.FieldPosition fieldPosition95 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer96 = fractionFormat11.format(fraction93, stringBuffer94, fieldPosition95);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertNotNull(fractionFormat7);
        org.junit.Assert.assertNotNull(attributedCharacterIterator9);
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertNotNull(numberFormat13);
        org.junit.Assert.assertNotNull(fraction15);
        org.junit.Assert.assertNull(numberFormat19);
        org.junit.Assert.assertNull(numberFormat20);
        org.junit.Assert.assertNotNull(fractionFormat21);
        org.junit.Assert.assertNotNull(attributedCharacterIterator23);
        org.junit.Assert.assertNotNull(numberFormat24);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "10" + "'", str28, "10");
        org.junit.Assert.assertNotNull(fractionFormat29);
        org.junit.Assert.assertNotNull(attributedCharacterIterator31);
        org.junit.Assert.assertNotNull(numberFormat32);
        org.junit.Assert.assertNotNull(fractionFormat33);
        org.junit.Assert.assertNotNull(attributedCharacterIterator35);
        org.junit.Assert.assertNotNull(numberFormat36);
        org.junit.Assert.assertNull(numberFormat42);
        org.junit.Assert.assertNull(numberFormat43);
        org.junit.Assert.assertNull(numberFormat44);
        org.junit.Assert.assertNotNull(fractionFormat45);
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertNotNull(obj49);
        org.junit.Assert.assertNotNull(numberFormat50);
        org.junit.Assert.assertNotNull(obj51);
        org.junit.Assert.assertNotNull(fractionFormat52);
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertNotNull(obj56);
        org.junit.Assert.assertNotNull(numberFormat57);
        org.junit.Assert.assertNotNull(numberFormat58);
        org.junit.Assert.assertNotNull(fractionFormat59);
        org.junit.Assert.assertNotNull(attributedCharacterIterator61);
        org.junit.Assert.assertNotNull(numberFormat62);
        org.junit.Assert.assertNotNull(fractionFormat66);
        org.junit.Assert.assertNotNull(obj68);
        org.junit.Assert.assertNotNull(obj70);
        org.junit.Assert.assertNotNull(numberFormat71);
        org.junit.Assert.assertNotNull(fractionFormat72);
        org.junit.Assert.assertNotNull(obj74);
        org.junit.Assert.assertNotNull(numberFormat75);
        org.junit.Assert.assertNotNull(fractionFormat77);
        org.junit.Assert.assertNotNull(obj79);
        org.junit.Assert.assertNotNull(obj81);
        org.junit.Assert.assertNotNull(numberFormat82);
        org.junit.Assert.assertNotNull(obj84);
        org.junit.Assert.assertNotNull(numberFormat88);
        org.junit.Assert.assertNotNull(numberFormat90);
        org.junit.Assert.assertNotNull(numberFormat91);
        org.junit.Assert.assertNotNull(fraction93);
    }

    @Test
    public void test0482() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0482");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.text.NumberFormat numberFormat3 = fractionFormat2.getNumeratorFormat();
        java.text.NumberFormat numberFormat4 = fractionFormat2.getNumeratorFormat();
        java.text.NumberFormat numberFormat5 = fractionFormat2.getNumeratorFormat();
        java.text.NumberFormat numberFormat6 = fractionFormat2.getNumeratorFormat();
        java.lang.Object obj7 = fractionFormat2.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat8 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj10 = fractionFormat8.parseObject("0 / 1");
        java.lang.Object obj12 = fractionFormat8.parseObject("0 / 1");
        java.text.NumberFormat numberFormat13 = fractionFormat8.getNumeratorFormat();
        java.text.NumberFormat numberFormat14 = fractionFormat8.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat15 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator17 = fractionFormat15.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat18 = fractionFormat15.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat19 = new org.apache.commons.math.fraction.FractionFormat(numberFormat14, numberFormat18);
        org.apache.commons.math.fraction.FractionFormat fractionFormat20 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator22 = fractionFormat20.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat23 = fractionFormat20.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat24 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator26 = fractionFormat24.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat27 = fractionFormat24.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat28 = new org.apache.commons.math.fraction.FractionFormat(numberFormat23, numberFormat27);
        fractionFormat19.setNumeratorFormat(numberFormat23);
        java.text.NumberFormat numberFormat30 = fractionFormat19.getDenominatorFormat();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str31 = fractionFormat2.format((java.lang.Object) fractionFormat19);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot format given object as a fraction");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(numberFormat3);
        org.junit.Assert.assertNull(numberFormat4);
        org.junit.Assert.assertNull(numberFormat5);
        org.junit.Assert.assertNull(numberFormat6);
        org.junit.Assert.assertNotNull(obj7);
        org.junit.Assert.assertNotNull(fractionFormat8);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertNotNull(numberFormat13);
        org.junit.Assert.assertNotNull(numberFormat14);
        org.junit.Assert.assertNotNull(fractionFormat15);
        org.junit.Assert.assertNotNull(attributedCharacterIterator17);
        org.junit.Assert.assertNotNull(numberFormat18);
        org.junit.Assert.assertNotNull(fractionFormat20);
        org.junit.Assert.assertNotNull(attributedCharacterIterator22);
        org.junit.Assert.assertNotNull(numberFormat23);
        org.junit.Assert.assertNotNull(fractionFormat24);
        org.junit.Assert.assertNotNull(attributedCharacterIterator26);
        org.junit.Assert.assertNotNull(numberFormat27);
        org.junit.Assert.assertNotNull(numberFormat30);
    }

    @Test
    public void test0483() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0483");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj6 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat7 = null;
        java.text.NumberFormat numberFormat8 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat9 = new org.apache.commons.math.fraction.FractionFormat(numberFormat7, numberFormat8);
        java.text.NumberFormat numberFormat10 = fractionFormat9.getDenominatorFormat();
        java.text.NumberFormat numberFormat11 = fractionFormat9.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat12 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator14 = fractionFormat12.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat15 = fractionFormat12.getDenominatorFormat();
        fractionFormat9.setNumeratorFormat(numberFormat15);
        org.apache.commons.math.fraction.FractionFormat fractionFormat17 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj19 = fractionFormat17.parseObject("0 / 1");
        java.text.NumberFormat numberFormat20 = fractionFormat17.getNumeratorFormat();
        fractionFormat9.setNumeratorFormat(numberFormat20);
        java.lang.Object obj23 = numberFormat20.parseObject("0 / 1");
        fractionFormat0.setNumeratorFormat(numberFormat20);
        java.text.NumberFormat numberFormat25 = fractionFormat0.getNumeratorFormat();
        java.text.NumberFormat numberFormat26 = fractionFormat0.getDenominatorFormat();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.fraction.Fraction fraction28 = fractionFormat0.parse("");
            org.junit.Assert.fail("Expected exception of type java.text.ParseException; message: Unparseable fraction number: \"\"");
        } catch (java.text.ParseException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(obj6);
        org.junit.Assert.assertNull(numberFormat10);
        org.junit.Assert.assertNull(numberFormat11);
        org.junit.Assert.assertNotNull(fractionFormat12);
        org.junit.Assert.assertNotNull(attributedCharacterIterator14);
        org.junit.Assert.assertNotNull(numberFormat15);
        org.junit.Assert.assertNotNull(fractionFormat17);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(numberFormat20);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + 0L + "'", obj23, 0L);
        org.junit.Assert.assertNotNull(numberFormat25);
        org.junit.Assert.assertNotNull(numberFormat26);
    }

    @Test
    public void test0484() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0484");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.text.NumberFormat numberFormat3 = fractionFormat2.getDenominatorFormat();
        java.text.NumberFormat numberFormat4 = fractionFormat2.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator7 = fractionFormat5.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat8 = fractionFormat5.getDenominatorFormat();
        fractionFormat2.setNumeratorFormat(numberFormat8);
        org.apache.commons.math.fraction.FractionFormat fractionFormat10 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj12 = fractionFormat10.parseObject("0 / 1");
        java.lang.Object obj14 = fractionFormat10.parseObject("0 / 1");
        java.text.NumberFormat numberFormat15 = fractionFormat10.getNumeratorFormat();
        fractionFormat2.setDenominatorFormat(numberFormat15);
        java.lang.Class<?> wildcardClass17 = fractionFormat2.getClass();
        org.junit.Assert.assertNull(numberFormat3);
        org.junit.Assert.assertNull(numberFormat4);
        org.junit.Assert.assertNotNull(fractionFormat5);
        org.junit.Assert.assertNotNull(attributedCharacterIterator7);
        org.junit.Assert.assertNotNull(numberFormat8);
        org.junit.Assert.assertNotNull(fractionFormat10);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertNotNull(numberFormat15);
        org.junit.Assert.assertNotNull(wildcardClass17);
    }

    @Test
    public void test0485() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0485");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat3 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat4 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator6 = fractionFormat4.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat7 = fractionFormat4.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat8 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator10 = fractionFormat8.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat11 = fractionFormat8.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat12 = new org.apache.commons.math.fraction.FractionFormat(numberFormat7, numberFormat11);
        org.apache.commons.math.fraction.FractionFormat fractionFormat13 = new org.apache.commons.math.fraction.FractionFormat(numberFormat3, numberFormat7);
        org.apache.commons.math.fraction.FractionFormat fractionFormat14 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj16 = fractionFormat14.parseObject("0 / 1");
        java.lang.Object obj18 = fractionFormat14.parseObject("-1 / 1");
        org.apache.commons.math.fraction.FractionFormat fractionFormat19 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat20 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj22 = fractionFormat20.parseObject("0 / 1");
        java.lang.Object obj24 = fractionFormat20.parseObject("0 / 1");
        java.text.NumberFormat numberFormat25 = fractionFormat20.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat26 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj28 = fractionFormat26.parseObject("0 / 1");
        java.text.NumberFormat numberFormat29 = fractionFormat26.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat30 = new org.apache.commons.math.fraction.FractionFormat(numberFormat25, numberFormat29);
        org.apache.commons.math.fraction.FractionFormat fractionFormat31 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj33 = fractionFormat31.parseObject("0 / 1");
        java.lang.Object obj35 = fractionFormat31.parseObject("0 / 1");
        java.text.NumberFormat numberFormat36 = fractionFormat31.getNumeratorFormat();
        fractionFormat30.setDenominatorFormat(numberFormat36);
        java.lang.Object obj38 = numberFormat36.clone();
        fractionFormat19.setNumeratorFormat(numberFormat36);
        java.lang.Object obj40 = numberFormat36.clone();
        java.lang.Object obj41 = numberFormat36.clone();
        fractionFormat14.setDenominatorFormat(numberFormat36);
        java.lang.Object obj43 = numberFormat36.clone();
        java.lang.Object obj45 = numberFormat36.parseObject("-1 / 1");
        fractionFormat13.setDenominatorFormat(numberFormat36);
        java.text.ParsePosition parsePosition48 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj49 = fractionFormat13.parseObject("0 / 1", parsePosition48);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(numberFormat3);
        org.junit.Assert.assertNotNull(fractionFormat4);
        org.junit.Assert.assertNotNull(attributedCharacterIterator6);
        org.junit.Assert.assertNotNull(numberFormat7);
        org.junit.Assert.assertNotNull(fractionFormat8);
        org.junit.Assert.assertNotNull(attributedCharacterIterator10);
        org.junit.Assert.assertNotNull(numberFormat11);
        org.junit.Assert.assertNotNull(fractionFormat14);
        org.junit.Assert.assertNotNull(obj16);
        org.junit.Assert.assertNotNull(obj18);
        org.junit.Assert.assertNotNull(fractionFormat19);
        org.junit.Assert.assertNotNull(fractionFormat20);
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertNotNull(numberFormat25);
        org.junit.Assert.assertNotNull(fractionFormat26);
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertNotNull(numberFormat29);
        org.junit.Assert.assertNotNull(fractionFormat31);
        org.junit.Assert.assertNotNull(obj33);
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertNotNull(numberFormat36);
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertNotNull(obj41);
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertEquals("'" + obj45 + "' != '" + (-1L) + "'", obj45, (-1L));
    }

    @Test
    public void test0486() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0486");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat5 = fractionFormat0.getNumeratorFormat();
        java.text.NumberFormat numberFormat6 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat7 = new org.apache.commons.math.fraction.FractionFormat(numberFormat6);
        org.apache.commons.math.fraction.FractionFormat fractionFormat8 = new org.apache.commons.math.fraction.FractionFormat(numberFormat6);
        java.text.NumberFormat numberFormat9 = null;
        java.text.NumberFormat numberFormat10 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = new org.apache.commons.math.fraction.FractionFormat(numberFormat9, numberFormat10);
        java.lang.Object obj12 = fractionFormat11.clone();
        java.text.NumberFormat numberFormat13 = null;
        java.text.NumberFormat numberFormat14 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat15 = new org.apache.commons.math.fraction.FractionFormat(numberFormat13, numberFormat14);
        java.text.NumberFormat numberFormat16 = fractionFormat15.getDenominatorFormat();
        java.text.NumberFormat numberFormat17 = fractionFormat15.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat18 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator20 = fractionFormat18.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat21 = fractionFormat18.getDenominatorFormat();
        fractionFormat15.setNumeratorFormat(numberFormat21);
        java.lang.Object obj23 = numberFormat21.clone();
        java.lang.String str25 = numberFormat21.format((java.lang.Object) (short) 10);
        org.apache.commons.math.fraction.FractionFormat fractionFormat26 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator28 = fractionFormat26.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat29 = fractionFormat26.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat30 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator32 = fractionFormat30.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat33 = fractionFormat30.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat34 = new org.apache.commons.math.fraction.FractionFormat(numberFormat29, numberFormat33);
        org.apache.commons.math.fraction.FractionFormat fractionFormat35 = new org.apache.commons.math.fraction.FractionFormat(numberFormat21, numberFormat29);
        fractionFormat11.setDenominatorFormat(numberFormat21);
        fractionFormat8.setDenominatorFormat(numberFormat21);
        java.text.NumberFormat numberFormat38 = fractionFormat8.getDenominatorFormat();
        java.lang.Object obj39 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str40 = fractionFormat8.format(obj39);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot format given object as a fraction");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertNull(numberFormat16);
        org.junit.Assert.assertNull(numberFormat17);
        org.junit.Assert.assertNotNull(fractionFormat18);
        org.junit.Assert.assertNotNull(attributedCharacterIterator20);
        org.junit.Assert.assertNotNull(numberFormat21);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "10" + "'", str25, "10");
        org.junit.Assert.assertNotNull(fractionFormat26);
        org.junit.Assert.assertNotNull(attributedCharacterIterator28);
        org.junit.Assert.assertNotNull(numberFormat29);
        org.junit.Assert.assertNotNull(fractionFormat30);
        org.junit.Assert.assertNotNull(attributedCharacterIterator32);
        org.junit.Assert.assertNotNull(numberFormat33);
        org.junit.Assert.assertNotNull(numberFormat38);
    }

    @Test
    public void test0487() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0487");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat5 = fractionFormat0.getNumeratorFormat();
        java.text.NumberFormat numberFormat6 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat7 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator9 = fractionFormat7.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat10 = fractionFormat7.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = new org.apache.commons.math.fraction.FractionFormat(numberFormat6, numberFormat10);
        org.apache.commons.math.fraction.FractionFormat fractionFormat12 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator14 = fractionFormat12.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat15 = fractionFormat12.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat16 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator18 = fractionFormat16.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat19 = fractionFormat16.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat20 = new org.apache.commons.math.fraction.FractionFormat(numberFormat15, numberFormat19);
        org.apache.commons.math.fraction.FractionFormat fractionFormat21 = new org.apache.commons.math.fraction.FractionFormat(numberFormat6, numberFormat19);
        java.text.NumberFormat numberFormat22 = fractionFormat21.getDenominatorFormat();
        java.lang.Object obj24 = numberFormat22.parseObject("-1 / 1");
        org.apache.commons.math.fraction.FractionFormat fractionFormat25 = new org.apache.commons.math.fraction.FractionFormat(numberFormat22);
        java.text.ParsePosition parsePosition27 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.fraction.Fraction fraction28 = fractionFormat25.parse("-1 / 1", parsePosition27);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertNotNull(fractionFormat7);
        org.junit.Assert.assertNotNull(attributedCharacterIterator9);
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertNotNull(fractionFormat12);
        org.junit.Assert.assertNotNull(attributedCharacterIterator14);
        org.junit.Assert.assertNotNull(numberFormat15);
        org.junit.Assert.assertNotNull(fractionFormat16);
        org.junit.Assert.assertNotNull(attributedCharacterIterator18);
        org.junit.Assert.assertNotNull(numberFormat19);
        org.junit.Assert.assertNotNull(numberFormat22);
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + (-1L) + "'", obj24, (-1L));
    }

    @Test
    public void test0488() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0488");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.text.NumberFormat numberFormat3 = fractionFormat2.getDenominatorFormat();
        java.text.NumberFormat numberFormat4 = fractionFormat2.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator7 = fractionFormat5.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat8 = fractionFormat5.getDenominatorFormat();
        fractionFormat2.setNumeratorFormat(numberFormat8);
        java.lang.Object obj10 = numberFormat8.clone();
        java.lang.String str12 = numberFormat8.format((java.lang.Object) (short) 10);
        java.text.NumberFormat numberFormat13 = null;
        java.text.NumberFormat numberFormat14 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat15 = new org.apache.commons.math.fraction.FractionFormat(numberFormat13, numberFormat14);
        java.text.NumberFormat numberFormat16 = fractionFormat15.getDenominatorFormat();
        java.text.NumberFormat numberFormat17 = fractionFormat15.getNumeratorFormat();
        java.text.NumberFormat numberFormat18 = fractionFormat15.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat19 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator21 = fractionFormat19.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat22 = fractionFormat19.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat23 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator25 = fractionFormat23.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat26 = fractionFormat23.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat27 = new org.apache.commons.math.fraction.FractionFormat(numberFormat22, numberFormat26);
        fractionFormat15.setNumeratorFormat(numberFormat22);
        org.apache.commons.math.fraction.FractionFormat fractionFormat29 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj31 = fractionFormat29.parseObject("0 / 1");
        java.text.NumberFormat numberFormat32 = fractionFormat29.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat33 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator35 = fractionFormat33.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat36 = fractionFormat33.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat37 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator39 = fractionFormat37.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat40 = fractionFormat37.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat41 = new org.apache.commons.math.fraction.FractionFormat(numberFormat36, numberFormat40);
        org.apache.commons.math.fraction.FractionFormat fractionFormat42 = new org.apache.commons.math.fraction.FractionFormat(numberFormat32, numberFormat36);
        org.apache.commons.math.fraction.FractionFormat fractionFormat43 = new org.apache.commons.math.fraction.FractionFormat(numberFormat22, numberFormat32);
        org.apache.commons.math.fraction.FractionFormat fractionFormat44 = new org.apache.commons.math.fraction.FractionFormat(numberFormat8, numberFormat32);
        org.apache.commons.math.fraction.FractionFormat fractionFormat45 = new org.apache.commons.math.fraction.FractionFormat(numberFormat8);
        org.apache.commons.math.fraction.Fraction fraction47 = fractionFormat45.parse("100");
        java.text.NumberFormat numberFormat48 = fractionFormat45.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat49 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj51 = fractionFormat49.parseObject("0 / 1");
        java.lang.Object obj53 = fractionFormat49.parseObject("0 / 1");
        java.lang.Object obj55 = fractionFormat49.parseObject("0 / 1");
        java.text.NumberFormat numberFormat56 = null;
        java.text.NumberFormat numberFormat57 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat58 = new org.apache.commons.math.fraction.FractionFormat(numberFormat56, numberFormat57);
        java.text.NumberFormat numberFormat59 = fractionFormat58.getDenominatorFormat();
        java.text.NumberFormat numberFormat60 = fractionFormat58.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat61 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator63 = fractionFormat61.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat64 = fractionFormat61.getDenominatorFormat();
        fractionFormat58.setNumeratorFormat(numberFormat64);
        org.apache.commons.math.fraction.FractionFormat fractionFormat66 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj68 = fractionFormat66.parseObject("0 / 1");
        java.text.NumberFormat numberFormat69 = fractionFormat66.getNumeratorFormat();
        fractionFormat58.setNumeratorFormat(numberFormat69);
        java.lang.Object obj72 = numberFormat69.parseObject("0 / 1");
        fractionFormat49.setNumeratorFormat(numberFormat69);
        java.text.NumberFormat numberFormat74 = fractionFormat49.getDenominatorFormat();
        java.text.NumberFormat numberFormat75 = fractionFormat49.getNumeratorFormat();
        java.lang.StringBuffer stringBuffer76 = null;
        java.text.FieldPosition fieldPosition77 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer78 = fractionFormat45.format((java.lang.Object) numberFormat75, stringBuffer76, fieldPosition77);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot format given object as a fraction");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(numberFormat3);
        org.junit.Assert.assertNull(numberFormat4);
        org.junit.Assert.assertNotNull(fractionFormat5);
        org.junit.Assert.assertNotNull(attributedCharacterIterator7);
        org.junit.Assert.assertNotNull(numberFormat8);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "10" + "'", str12, "10");
        org.junit.Assert.assertNull(numberFormat16);
        org.junit.Assert.assertNull(numberFormat17);
        org.junit.Assert.assertNull(numberFormat18);
        org.junit.Assert.assertNotNull(fractionFormat19);
        org.junit.Assert.assertNotNull(attributedCharacterIterator21);
        org.junit.Assert.assertNotNull(numberFormat22);
        org.junit.Assert.assertNotNull(fractionFormat23);
        org.junit.Assert.assertNotNull(attributedCharacterIterator25);
        org.junit.Assert.assertNotNull(numberFormat26);
        org.junit.Assert.assertNotNull(fractionFormat29);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertNotNull(numberFormat32);
        org.junit.Assert.assertNotNull(fractionFormat33);
        org.junit.Assert.assertNotNull(attributedCharacterIterator35);
        org.junit.Assert.assertNotNull(numberFormat36);
        org.junit.Assert.assertNotNull(fractionFormat37);
        org.junit.Assert.assertNotNull(attributedCharacterIterator39);
        org.junit.Assert.assertNotNull(numberFormat40);
        org.junit.Assert.assertNotNull(fraction47);
        org.junit.Assert.assertNotNull(numberFormat48);
        org.junit.Assert.assertNotNull(fractionFormat49);
        org.junit.Assert.assertNotNull(obj51);
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertNotNull(obj55);
        org.junit.Assert.assertNull(numberFormat59);
        org.junit.Assert.assertNull(numberFormat60);
        org.junit.Assert.assertNotNull(fractionFormat61);
        org.junit.Assert.assertNotNull(attributedCharacterIterator63);
        org.junit.Assert.assertNotNull(numberFormat64);
        org.junit.Assert.assertNotNull(fractionFormat66);
        org.junit.Assert.assertNotNull(obj68);
        org.junit.Assert.assertNotNull(numberFormat69);
        org.junit.Assert.assertEquals("'" + obj72 + "' != '" + 0L + "'", obj72, 0L);
        org.junit.Assert.assertNotNull(numberFormat74);
        org.junit.Assert.assertNotNull(numberFormat75);
    }

    @Test
    public void test0489() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0489");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat5 = fractionFormat0.getNumeratorFormat();
        java.text.NumberFormat numberFormat6 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat7 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator9 = fractionFormat7.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat10 = fractionFormat7.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = new org.apache.commons.math.fraction.FractionFormat(numberFormat6, numberFormat10);
        java.lang.Object obj12 = fractionFormat11.clone();
        java.text.NumberFormat numberFormat13 = fractionFormat11.getNumeratorFormat();
        org.apache.commons.math.fraction.Fraction fraction15 = fractionFormat11.parse("-1 / 1");
        java.text.NumberFormat numberFormat16 = null;
        java.text.NumberFormat numberFormat17 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat18 = new org.apache.commons.math.fraction.FractionFormat(numberFormat16, numberFormat17);
        java.text.NumberFormat numberFormat19 = fractionFormat18.getDenominatorFormat();
        java.text.NumberFormat numberFormat20 = fractionFormat18.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat21 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator23 = fractionFormat21.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat24 = fractionFormat21.getDenominatorFormat();
        fractionFormat18.setNumeratorFormat(numberFormat24);
        java.lang.Object obj26 = numberFormat24.clone();
        java.lang.String str28 = numberFormat24.format((java.lang.Object) (short) 10);
        org.apache.commons.math.fraction.FractionFormat fractionFormat29 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator31 = fractionFormat29.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat32 = fractionFormat29.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat33 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator35 = fractionFormat33.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat36 = fractionFormat33.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat37 = new org.apache.commons.math.fraction.FractionFormat(numberFormat32, numberFormat36);
        org.apache.commons.math.fraction.FractionFormat fractionFormat38 = new org.apache.commons.math.fraction.FractionFormat(numberFormat24, numberFormat32);
        java.text.NumberFormat numberFormat39 = null;
        java.text.NumberFormat numberFormat40 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat41 = new org.apache.commons.math.fraction.FractionFormat(numberFormat39, numberFormat40);
        java.text.NumberFormat numberFormat42 = fractionFormat41.getDenominatorFormat();
        java.text.NumberFormat numberFormat43 = fractionFormat41.getNumeratorFormat();
        java.text.NumberFormat numberFormat44 = fractionFormat41.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat45 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj47 = fractionFormat45.parseObject("0 / 1");
        java.lang.Object obj49 = fractionFormat45.parseObject("0 / 1");
        java.text.NumberFormat numberFormat50 = fractionFormat45.getNumeratorFormat();
        java.lang.Object obj51 = numberFormat50.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat52 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj54 = fractionFormat52.parseObject("0 / 1");
        java.lang.Object obj56 = fractionFormat52.parseObject("0 / 1");
        java.text.NumberFormat numberFormat57 = fractionFormat52.getNumeratorFormat();
        java.text.NumberFormat numberFormat58 = fractionFormat52.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat59 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator61 = fractionFormat59.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat62 = fractionFormat59.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat63 = new org.apache.commons.math.fraction.FractionFormat(numberFormat58, numberFormat62);
        org.apache.commons.math.fraction.FractionFormat fractionFormat64 = new org.apache.commons.math.fraction.FractionFormat(numberFormat50, numberFormat62);
        fractionFormat41.setNumeratorFormat(numberFormat50);
        org.apache.commons.math.fraction.FractionFormat fractionFormat66 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj68 = fractionFormat66.parseObject("0 / 1");
        java.lang.Object obj70 = fractionFormat66.parseObject("0 / 1");
        java.text.NumberFormat numberFormat71 = fractionFormat66.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat72 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj74 = fractionFormat72.parseObject("0 / 1");
        java.text.NumberFormat numberFormat75 = fractionFormat72.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat76 = new org.apache.commons.math.fraction.FractionFormat(numberFormat71, numberFormat75);
        org.apache.commons.math.fraction.FractionFormat fractionFormat77 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj79 = fractionFormat77.parseObject("0 / 1");
        java.lang.Object obj81 = fractionFormat77.parseObject("0 / 1");
        java.text.NumberFormat numberFormat82 = fractionFormat77.getNumeratorFormat();
        fractionFormat76.setDenominatorFormat(numberFormat82);
        java.lang.Object obj84 = numberFormat82.clone();
        fractionFormat41.setDenominatorFormat(numberFormat82);
        fractionFormat38.setDenominatorFormat(numberFormat82);
        fractionFormat11.setDenominatorFormat(numberFormat82);
        java.text.NumberFormat numberFormat88 = fractionFormat11.getDenominatorFormat();
        java.text.ParsePosition parsePosition90 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.fraction.Fraction fraction91 = fractionFormat11.parse("10", parsePosition90);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertNotNull(fractionFormat7);
        org.junit.Assert.assertNotNull(attributedCharacterIterator9);
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertNotNull(numberFormat13);
        org.junit.Assert.assertNotNull(fraction15);
        org.junit.Assert.assertNull(numberFormat19);
        org.junit.Assert.assertNull(numberFormat20);
        org.junit.Assert.assertNotNull(fractionFormat21);
        org.junit.Assert.assertNotNull(attributedCharacterIterator23);
        org.junit.Assert.assertNotNull(numberFormat24);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "10" + "'", str28, "10");
        org.junit.Assert.assertNotNull(fractionFormat29);
        org.junit.Assert.assertNotNull(attributedCharacterIterator31);
        org.junit.Assert.assertNotNull(numberFormat32);
        org.junit.Assert.assertNotNull(fractionFormat33);
        org.junit.Assert.assertNotNull(attributedCharacterIterator35);
        org.junit.Assert.assertNotNull(numberFormat36);
        org.junit.Assert.assertNull(numberFormat42);
        org.junit.Assert.assertNull(numberFormat43);
        org.junit.Assert.assertNull(numberFormat44);
        org.junit.Assert.assertNotNull(fractionFormat45);
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertNotNull(obj49);
        org.junit.Assert.assertNotNull(numberFormat50);
        org.junit.Assert.assertNotNull(obj51);
        org.junit.Assert.assertNotNull(fractionFormat52);
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertNotNull(obj56);
        org.junit.Assert.assertNotNull(numberFormat57);
        org.junit.Assert.assertNotNull(numberFormat58);
        org.junit.Assert.assertNotNull(fractionFormat59);
        org.junit.Assert.assertNotNull(attributedCharacterIterator61);
        org.junit.Assert.assertNotNull(numberFormat62);
        org.junit.Assert.assertNotNull(fractionFormat66);
        org.junit.Assert.assertNotNull(obj68);
        org.junit.Assert.assertNotNull(obj70);
        org.junit.Assert.assertNotNull(numberFormat71);
        org.junit.Assert.assertNotNull(fractionFormat72);
        org.junit.Assert.assertNotNull(obj74);
        org.junit.Assert.assertNotNull(numberFormat75);
        org.junit.Assert.assertNotNull(fractionFormat77);
        org.junit.Assert.assertNotNull(obj79);
        org.junit.Assert.assertNotNull(obj81);
        org.junit.Assert.assertNotNull(numberFormat82);
        org.junit.Assert.assertNotNull(obj84);
        org.junit.Assert.assertNotNull(numberFormat88);
    }

    @Test
    public void test0490() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0490");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.text.NumberFormat numberFormat3 = fractionFormat2.getDenominatorFormat();
        java.text.NumberFormat numberFormat4 = fractionFormat2.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj7 = fractionFormat5.parseObject("0 / 1");
        java.lang.Object obj9 = fractionFormat5.parseObject("0 / 1");
        java.text.NumberFormat numberFormat10 = fractionFormat5.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj13 = fractionFormat11.parseObject("0 / 1");
        java.text.NumberFormat numberFormat14 = fractionFormat11.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat15 = new org.apache.commons.math.fraction.FractionFormat(numberFormat10, numberFormat14);
        java.text.AttributedCharacterIterator attributedCharacterIterator17 = numberFormat10.formatToCharacterIterator((java.lang.Object) (-1));
        fractionFormat2.setDenominatorFormat(numberFormat10);
        java.lang.Object obj19 = numberFormat10.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat20 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.Fraction fraction22 = fractionFormat20.parse("0 / 1");
        java.text.NumberFormat numberFormat23 = fractionFormat20.getNumeratorFormat();
        java.lang.Object obj25 = numberFormat23.parseObject("10 / 1");
        java.lang.String str26 = numberFormat10.format(obj25);
        java.lang.Class<?> wildcardClass27 = obj25.getClass();
        org.junit.Assert.assertNull(numberFormat3);
        org.junit.Assert.assertNull(numberFormat4);
        org.junit.Assert.assertNotNull(fractionFormat5);
        org.junit.Assert.assertNotNull(obj7);
        org.junit.Assert.assertNotNull(obj9);
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertNotNull(fractionFormat11);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertNotNull(numberFormat14);
        org.junit.Assert.assertNotNull(attributedCharacterIterator17);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(fractionFormat20);
        org.junit.Assert.assertNotNull(fraction22);
        org.junit.Assert.assertNotNull(numberFormat23);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + 10L + "'", obj25, 10L);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "10" + "'", str26, "10");
        org.junit.Assert.assertNotNull(wildcardClass27);
    }

    @Test
    public void test0491() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0491");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.text.NumberFormat numberFormat3 = fractionFormat2.getDenominatorFormat();
        java.text.NumberFormat numberFormat4 = fractionFormat2.getNumeratorFormat();
        java.text.NumberFormat numberFormat5 = fractionFormat2.getNumeratorFormat();
        java.text.NumberFormat numberFormat6 = fractionFormat2.getDenominatorFormat();
        java.lang.Object obj7 = fractionFormat2.clone();
        java.text.ParsePosition parsePosition9 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.fraction.Fraction fraction10 = fractionFormat2.parse("0 / 1", parsePosition9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(numberFormat3);
        org.junit.Assert.assertNull(numberFormat4);
        org.junit.Assert.assertNull(numberFormat5);
        org.junit.Assert.assertNull(numberFormat6);
        org.junit.Assert.assertNotNull(obj7);
    }

    @Test
    public void test0492() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0492");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat5 = fractionFormat0.getNumeratorFormat();
        java.text.NumberFormat numberFormat6 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat7 = new org.apache.commons.math.fraction.FractionFormat(numberFormat6);
        org.apache.commons.math.fraction.FractionFormat fractionFormat8 = new org.apache.commons.math.fraction.FractionFormat(numberFormat6);
        java.text.NumberFormat numberFormat9 = null;
        java.text.NumberFormat numberFormat10 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = new org.apache.commons.math.fraction.FractionFormat(numberFormat9, numberFormat10);
        java.lang.Object obj12 = fractionFormat11.clone();
        java.text.NumberFormat numberFormat13 = null;
        java.text.NumberFormat numberFormat14 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat15 = new org.apache.commons.math.fraction.FractionFormat(numberFormat13, numberFormat14);
        java.text.NumberFormat numberFormat16 = fractionFormat15.getDenominatorFormat();
        java.text.NumberFormat numberFormat17 = fractionFormat15.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat18 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator20 = fractionFormat18.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat21 = fractionFormat18.getDenominatorFormat();
        fractionFormat15.setNumeratorFormat(numberFormat21);
        java.lang.Object obj23 = numberFormat21.clone();
        java.lang.String str25 = numberFormat21.format((java.lang.Object) (short) 10);
        org.apache.commons.math.fraction.FractionFormat fractionFormat26 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator28 = fractionFormat26.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat29 = fractionFormat26.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat30 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator32 = fractionFormat30.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat33 = fractionFormat30.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat34 = new org.apache.commons.math.fraction.FractionFormat(numberFormat29, numberFormat33);
        org.apache.commons.math.fraction.FractionFormat fractionFormat35 = new org.apache.commons.math.fraction.FractionFormat(numberFormat21, numberFormat29);
        fractionFormat11.setDenominatorFormat(numberFormat21);
        fractionFormat8.setDenominatorFormat(numberFormat21);
        java.text.NumberFormat numberFormat38 = fractionFormat8.getNumeratorFormat();
        java.text.NumberFormat numberFormat39 = null;
        java.text.NumberFormat numberFormat40 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat41 = new org.apache.commons.math.fraction.FractionFormat(numberFormat39, numberFormat40);
        java.text.NumberFormat numberFormat42 = fractionFormat41.getDenominatorFormat();
        java.text.NumberFormat numberFormat43 = fractionFormat41.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat44 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator46 = fractionFormat44.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat47 = fractionFormat44.getDenominatorFormat();
        fractionFormat41.setNumeratorFormat(numberFormat47);
        java.lang.Object obj49 = numberFormat47.clone();
        java.lang.String str51 = numberFormat47.format((java.lang.Object) (short) 10);
        java.text.NumberFormat numberFormat52 = null;
        java.text.NumberFormat numberFormat53 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat54 = new org.apache.commons.math.fraction.FractionFormat(numberFormat52, numberFormat53);
        java.text.NumberFormat numberFormat55 = fractionFormat54.getDenominatorFormat();
        java.text.NumberFormat numberFormat56 = fractionFormat54.getNumeratorFormat();
        java.text.NumberFormat numberFormat57 = fractionFormat54.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat58 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator60 = fractionFormat58.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat61 = fractionFormat58.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat62 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator64 = fractionFormat62.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat65 = fractionFormat62.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat66 = new org.apache.commons.math.fraction.FractionFormat(numberFormat61, numberFormat65);
        fractionFormat54.setNumeratorFormat(numberFormat61);
        org.apache.commons.math.fraction.FractionFormat fractionFormat68 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj70 = fractionFormat68.parseObject("0 / 1");
        java.text.NumberFormat numberFormat71 = fractionFormat68.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat72 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator74 = fractionFormat72.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat75 = fractionFormat72.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat76 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator78 = fractionFormat76.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat79 = fractionFormat76.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat80 = new org.apache.commons.math.fraction.FractionFormat(numberFormat75, numberFormat79);
        org.apache.commons.math.fraction.FractionFormat fractionFormat81 = new org.apache.commons.math.fraction.FractionFormat(numberFormat71, numberFormat75);
        org.apache.commons.math.fraction.FractionFormat fractionFormat82 = new org.apache.commons.math.fraction.FractionFormat(numberFormat61, numberFormat71);
        org.apache.commons.math.fraction.FractionFormat fractionFormat83 = new org.apache.commons.math.fraction.FractionFormat(numberFormat47, numberFormat71);
        java.lang.Object obj84 = fractionFormat83.clone();
        java.lang.Object obj85 = fractionFormat83.clone();
        java.lang.String str87 = fractionFormat83.format((java.lang.Object) (byte) 0);
        org.apache.commons.math.fraction.Fraction fraction89 = fractionFormat83.parse("100");
        java.lang.StringBuffer stringBuffer90 = null;
        java.text.FieldPosition fieldPosition91 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer92 = fractionFormat8.format(fraction89, stringBuffer90, fieldPosition91);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertNull(numberFormat16);
        org.junit.Assert.assertNull(numberFormat17);
        org.junit.Assert.assertNotNull(fractionFormat18);
        org.junit.Assert.assertNotNull(attributedCharacterIterator20);
        org.junit.Assert.assertNotNull(numberFormat21);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "10" + "'", str25, "10");
        org.junit.Assert.assertNotNull(fractionFormat26);
        org.junit.Assert.assertNotNull(attributedCharacterIterator28);
        org.junit.Assert.assertNotNull(numberFormat29);
        org.junit.Assert.assertNotNull(fractionFormat30);
        org.junit.Assert.assertNotNull(attributedCharacterIterator32);
        org.junit.Assert.assertNotNull(numberFormat33);
        org.junit.Assert.assertNotNull(numberFormat38);
        org.junit.Assert.assertNull(numberFormat42);
        org.junit.Assert.assertNull(numberFormat43);
        org.junit.Assert.assertNotNull(fractionFormat44);
        org.junit.Assert.assertNotNull(attributedCharacterIterator46);
        org.junit.Assert.assertNotNull(numberFormat47);
        org.junit.Assert.assertNotNull(obj49);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "10" + "'", str51, "10");
        org.junit.Assert.assertNull(numberFormat55);
        org.junit.Assert.assertNull(numberFormat56);
        org.junit.Assert.assertNull(numberFormat57);
        org.junit.Assert.assertNotNull(fractionFormat58);
        org.junit.Assert.assertNotNull(attributedCharacterIterator60);
        org.junit.Assert.assertNotNull(numberFormat61);
        org.junit.Assert.assertNotNull(fractionFormat62);
        org.junit.Assert.assertNotNull(attributedCharacterIterator64);
        org.junit.Assert.assertNotNull(numberFormat65);
        org.junit.Assert.assertNotNull(fractionFormat68);
        org.junit.Assert.assertNotNull(obj70);
        org.junit.Assert.assertNotNull(numberFormat71);
        org.junit.Assert.assertNotNull(fractionFormat72);
        org.junit.Assert.assertNotNull(attributedCharacterIterator74);
        org.junit.Assert.assertNotNull(numberFormat75);
        org.junit.Assert.assertNotNull(fractionFormat76);
        org.junit.Assert.assertNotNull(attributedCharacterIterator78);
        org.junit.Assert.assertNotNull(numberFormat79);
        org.junit.Assert.assertNotNull(obj84);
        org.junit.Assert.assertNotNull(obj85);
        org.junit.Assert.assertEquals("'" + str87 + "' != '" + "0 / 1" + "'", str87, "0 / 1");
        org.junit.Assert.assertNotNull(fraction89);
    }

    @Test
    public void test0493() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0493");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat5 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat6 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj8 = fractionFormat6.parseObject("0 / 1");
        java.text.NumberFormat numberFormat9 = fractionFormat6.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat10 = new org.apache.commons.math.fraction.FractionFormat(numberFormat5, numberFormat9);
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj13 = fractionFormat11.parseObject("0 / 1");
        java.lang.Object obj15 = fractionFormat11.parseObject("0 / 1");
        java.text.NumberFormat numberFormat16 = fractionFormat11.getNumeratorFormat();
        java.text.NumberFormat numberFormat17 = fractionFormat11.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat18 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator20 = fractionFormat18.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat21 = fractionFormat18.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat22 = new org.apache.commons.math.fraction.FractionFormat(numberFormat17, numberFormat21);
        org.apache.commons.math.fraction.FractionFormat fractionFormat23 = new org.apache.commons.math.fraction.FractionFormat(numberFormat5, numberFormat21);
        org.apache.commons.math.fraction.FractionFormat fractionFormat24 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator26 = fractionFormat24.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat27 = fractionFormat24.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat28 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator30 = fractionFormat28.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat31 = fractionFormat28.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat32 = new org.apache.commons.math.fraction.FractionFormat(numberFormat27, numberFormat31);
        java.text.NumberFormat numberFormat33 = fractionFormat32.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat34 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat35 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj37 = fractionFormat35.parseObject("0 / 1");
        java.lang.Object obj39 = fractionFormat35.parseObject("0 / 1");
        java.text.NumberFormat numberFormat40 = fractionFormat35.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat41 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj43 = fractionFormat41.parseObject("0 / 1");
        java.text.NumberFormat numberFormat44 = fractionFormat41.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat45 = new org.apache.commons.math.fraction.FractionFormat(numberFormat40, numberFormat44);
        org.apache.commons.math.fraction.FractionFormat fractionFormat46 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj48 = fractionFormat46.parseObject("0 / 1");
        java.lang.Object obj50 = fractionFormat46.parseObject("0 / 1");
        java.text.NumberFormat numberFormat51 = fractionFormat46.getNumeratorFormat();
        fractionFormat45.setDenominatorFormat(numberFormat51);
        java.lang.Object obj53 = numberFormat51.clone();
        fractionFormat34.setNumeratorFormat(numberFormat51);
        java.lang.Object obj55 = numberFormat51.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat56 = new org.apache.commons.math.fraction.FractionFormat(numberFormat33, numberFormat51);
        fractionFormat23.setDenominatorFormat(numberFormat51);
        java.text.NumberFormat numberFormat58 = null;
        // The following exception was thrown during execution in test generation
        try {
            fractionFormat23.setNumeratorFormat(numberFormat58);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: numerator format can not be null.");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(fractionFormat6);
        org.junit.Assert.assertNotNull(obj8);
        org.junit.Assert.assertNotNull(numberFormat9);
        org.junit.Assert.assertNotNull(fractionFormat11);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertNotNull(numberFormat16);
        org.junit.Assert.assertNotNull(numberFormat17);
        org.junit.Assert.assertNotNull(fractionFormat18);
        org.junit.Assert.assertNotNull(attributedCharacterIterator20);
        org.junit.Assert.assertNotNull(numberFormat21);
        org.junit.Assert.assertNotNull(fractionFormat24);
        org.junit.Assert.assertNotNull(attributedCharacterIterator26);
        org.junit.Assert.assertNotNull(numberFormat27);
        org.junit.Assert.assertNotNull(fractionFormat28);
        org.junit.Assert.assertNotNull(attributedCharacterIterator30);
        org.junit.Assert.assertNotNull(numberFormat31);
        org.junit.Assert.assertNotNull(numberFormat33);
        org.junit.Assert.assertNotNull(fractionFormat34);
        org.junit.Assert.assertNotNull(fractionFormat35);
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertNotNull(obj39);
        org.junit.Assert.assertNotNull(numberFormat40);
        org.junit.Assert.assertNotNull(fractionFormat41);
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertNotNull(numberFormat44);
        org.junit.Assert.assertNotNull(fractionFormat46);
        org.junit.Assert.assertNotNull(obj48);
        org.junit.Assert.assertNotNull(obj50);
        org.junit.Assert.assertNotNull(numberFormat51);
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertNotNull(obj55);
    }

    @Test
    public void test0494() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0494");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj6 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat7 = null;
        java.text.NumberFormat numberFormat8 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat9 = new org.apache.commons.math.fraction.FractionFormat(numberFormat7, numberFormat8);
        java.text.NumberFormat numberFormat10 = fractionFormat9.getDenominatorFormat();
        java.text.NumberFormat numberFormat11 = fractionFormat9.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat12 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator14 = fractionFormat12.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat15 = fractionFormat12.getDenominatorFormat();
        fractionFormat9.setNumeratorFormat(numberFormat15);
        org.apache.commons.math.fraction.FractionFormat fractionFormat17 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj19 = fractionFormat17.parseObject("0 / 1");
        java.text.NumberFormat numberFormat20 = fractionFormat17.getNumeratorFormat();
        fractionFormat9.setNumeratorFormat(numberFormat20);
        java.lang.Object obj23 = numberFormat20.parseObject("0 / 1");
        fractionFormat0.setNumeratorFormat(numberFormat20);
        java.text.NumberFormat numberFormat25 = fractionFormat0.getNumeratorFormat();
        java.text.ParsePosition parsePosition27 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.fraction.Fraction fraction28 = fractionFormat0.parse("10", parsePosition27);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(obj6);
        org.junit.Assert.assertNull(numberFormat10);
        org.junit.Assert.assertNull(numberFormat11);
        org.junit.Assert.assertNotNull(fractionFormat12);
        org.junit.Assert.assertNotNull(attributedCharacterIterator14);
        org.junit.Assert.assertNotNull(numberFormat15);
        org.junit.Assert.assertNotNull(fractionFormat17);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(numberFormat20);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + 0L + "'", obj23, 0L);
        org.junit.Assert.assertNotNull(numberFormat25);
    }

    @Test
    public void test0495() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0495");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat5 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat6 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj8 = fractionFormat6.parseObject("0 / 1");
        java.lang.Object obj10 = fractionFormat6.parseObject("0 / 1");
        java.text.NumberFormat numberFormat11 = fractionFormat6.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat12 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj14 = fractionFormat12.parseObject("0 / 1");
        java.text.NumberFormat numberFormat15 = fractionFormat12.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat16 = new org.apache.commons.math.fraction.FractionFormat(numberFormat11, numberFormat15);
        org.apache.commons.math.fraction.FractionFormat fractionFormat17 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj19 = fractionFormat17.parseObject("0 / 1");
        java.lang.Object obj21 = fractionFormat17.parseObject("0 / 1");
        java.text.NumberFormat numberFormat22 = fractionFormat17.getNumeratorFormat();
        fractionFormat16.setDenominatorFormat(numberFormat22);
        org.apache.commons.math.fraction.FractionFormat fractionFormat24 = new org.apache.commons.math.fraction.FractionFormat(numberFormat5, numberFormat22);
        java.text.NumberFormat numberFormat25 = fractionFormat24.getNumeratorFormat();
        java.text.NumberFormat numberFormat26 = null;
        java.text.NumberFormat numberFormat27 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat28 = new org.apache.commons.math.fraction.FractionFormat(numberFormat26, numberFormat27);
        java.text.NumberFormat numberFormat29 = fractionFormat28.getDenominatorFormat();
        java.text.NumberFormat numberFormat30 = fractionFormat28.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat31 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator33 = fractionFormat31.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat34 = fractionFormat31.getDenominatorFormat();
        fractionFormat28.setNumeratorFormat(numberFormat34);
        java.lang.Object obj36 = numberFormat34.clone();
        java.lang.String str38 = numberFormat34.format((java.lang.Object) (short) 10);
        java.text.NumberFormat numberFormat39 = null;
        java.text.NumberFormat numberFormat40 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat41 = new org.apache.commons.math.fraction.FractionFormat(numberFormat39, numberFormat40);
        java.text.NumberFormat numberFormat42 = fractionFormat41.getDenominatorFormat();
        java.text.NumberFormat numberFormat43 = fractionFormat41.getNumeratorFormat();
        java.text.NumberFormat numberFormat44 = fractionFormat41.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat45 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator47 = fractionFormat45.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat48 = fractionFormat45.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat49 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator51 = fractionFormat49.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat52 = fractionFormat49.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat53 = new org.apache.commons.math.fraction.FractionFormat(numberFormat48, numberFormat52);
        fractionFormat41.setNumeratorFormat(numberFormat48);
        org.apache.commons.math.fraction.FractionFormat fractionFormat55 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj57 = fractionFormat55.parseObject("0 / 1");
        java.text.NumberFormat numberFormat58 = fractionFormat55.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat59 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator61 = fractionFormat59.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat62 = fractionFormat59.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat63 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator65 = fractionFormat63.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat66 = fractionFormat63.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat67 = new org.apache.commons.math.fraction.FractionFormat(numberFormat62, numberFormat66);
        org.apache.commons.math.fraction.FractionFormat fractionFormat68 = new org.apache.commons.math.fraction.FractionFormat(numberFormat58, numberFormat62);
        org.apache.commons.math.fraction.FractionFormat fractionFormat69 = new org.apache.commons.math.fraction.FractionFormat(numberFormat48, numberFormat58);
        org.apache.commons.math.fraction.FractionFormat fractionFormat70 = new org.apache.commons.math.fraction.FractionFormat(numberFormat34, numberFormat58);
        java.text.NumberFormat numberFormat71 = fractionFormat70.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat72 = new org.apache.commons.math.fraction.FractionFormat(numberFormat71);
        org.apache.commons.math.fraction.FractionFormat fractionFormat73 = new org.apache.commons.math.fraction.FractionFormat();
        java.text.NumberFormat numberFormat74 = fractionFormat73.getDenominatorFormat();
        java.text.NumberFormat numberFormat75 = fractionFormat73.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat76 = new org.apache.commons.math.fraction.FractionFormat(numberFormat71, numberFormat75);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str77 = fractionFormat24.format((java.lang.Object) numberFormat75);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot format given object as a fraction");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(fractionFormat6);
        org.junit.Assert.assertNotNull(obj8);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertNotNull(numberFormat11);
        org.junit.Assert.assertNotNull(fractionFormat12);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertNotNull(numberFormat15);
        org.junit.Assert.assertNotNull(fractionFormat17);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertNotNull(numberFormat22);
        org.junit.Assert.assertNotNull(numberFormat25);
        org.junit.Assert.assertNull(numberFormat29);
        org.junit.Assert.assertNull(numberFormat30);
        org.junit.Assert.assertNotNull(fractionFormat31);
        org.junit.Assert.assertNotNull(attributedCharacterIterator33);
        org.junit.Assert.assertNotNull(numberFormat34);
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "10" + "'", str38, "10");
        org.junit.Assert.assertNull(numberFormat42);
        org.junit.Assert.assertNull(numberFormat43);
        org.junit.Assert.assertNull(numberFormat44);
        org.junit.Assert.assertNotNull(fractionFormat45);
        org.junit.Assert.assertNotNull(attributedCharacterIterator47);
        org.junit.Assert.assertNotNull(numberFormat48);
        org.junit.Assert.assertNotNull(fractionFormat49);
        org.junit.Assert.assertNotNull(attributedCharacterIterator51);
        org.junit.Assert.assertNotNull(numberFormat52);
        org.junit.Assert.assertNotNull(fractionFormat55);
        org.junit.Assert.assertNotNull(obj57);
        org.junit.Assert.assertNotNull(numberFormat58);
        org.junit.Assert.assertNotNull(fractionFormat59);
        org.junit.Assert.assertNotNull(attributedCharacterIterator61);
        org.junit.Assert.assertNotNull(numberFormat62);
        org.junit.Assert.assertNotNull(fractionFormat63);
        org.junit.Assert.assertNotNull(attributedCharacterIterator65);
        org.junit.Assert.assertNotNull(numberFormat66);
        org.junit.Assert.assertNotNull(numberFormat71);
        org.junit.Assert.assertNotNull(numberFormat74);
        org.junit.Assert.assertNotNull(numberFormat75);
    }

    @Test
    public void test0496() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0496");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator2 = fractionFormat0.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat3 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat4 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator6 = fractionFormat4.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat7 = fractionFormat4.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat8 = new org.apache.commons.math.fraction.FractionFormat(numberFormat3, numberFormat7);
        java.text.NumberFormat numberFormat9 = fractionFormat8.getDenominatorFormat();
        java.lang.Object obj10 = fractionFormat8.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator13 = fractionFormat11.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat14 = fractionFormat11.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat15 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator17 = fractionFormat15.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat18 = fractionFormat15.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat19 = new org.apache.commons.math.fraction.FractionFormat(numberFormat14, numberFormat18);
        java.text.NumberFormat numberFormat20 = fractionFormat19.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat21 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat22 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj24 = fractionFormat22.parseObject("0 / 1");
        java.lang.Object obj26 = fractionFormat22.parseObject("0 / 1");
        java.text.NumberFormat numberFormat27 = fractionFormat22.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat28 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj30 = fractionFormat28.parseObject("0 / 1");
        java.text.NumberFormat numberFormat31 = fractionFormat28.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat32 = new org.apache.commons.math.fraction.FractionFormat(numberFormat27, numberFormat31);
        org.apache.commons.math.fraction.FractionFormat fractionFormat33 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj35 = fractionFormat33.parseObject("0 / 1");
        java.lang.Object obj37 = fractionFormat33.parseObject("0 / 1");
        java.text.NumberFormat numberFormat38 = fractionFormat33.getNumeratorFormat();
        fractionFormat32.setDenominatorFormat(numberFormat38);
        java.lang.Object obj40 = numberFormat38.clone();
        fractionFormat21.setNumeratorFormat(numberFormat38);
        java.lang.Object obj42 = numberFormat38.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat43 = new org.apache.commons.math.fraction.FractionFormat(numberFormat20, numberFormat38);
        java.text.NumberFormat numberFormat44 = fractionFormat43.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat45 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.Fraction fraction47 = fractionFormat45.parse("0 / 1");
        org.apache.commons.math.fraction.FractionFormat fractionFormat48 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator50 = fractionFormat48.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat51 = fractionFormat48.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat52 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator54 = fractionFormat52.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat55 = fractionFormat52.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat56 = new org.apache.commons.math.fraction.FractionFormat(numberFormat51, numberFormat55);
        java.text.NumberFormat numberFormat57 = fractionFormat56.getDenominatorFormat();
        fractionFormat45.setDenominatorFormat(numberFormat57);
        java.text.NumberFormat numberFormat59 = fractionFormat45.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat60 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj62 = fractionFormat60.parseObject("0 / 1");
        java.text.NumberFormat numberFormat63 = fractionFormat60.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat64 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj66 = fractionFormat64.parseObject("0 / 1");
        java.lang.Object obj68 = fractionFormat64.parseObject("0 / 1");
        java.text.NumberFormat numberFormat69 = fractionFormat64.getNumeratorFormat();
        java.text.NumberFormat numberFormat70 = fractionFormat64.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat71 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator73 = fractionFormat71.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat74 = fractionFormat71.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat75 = new org.apache.commons.math.fraction.FractionFormat(numberFormat70, numberFormat74);
        fractionFormat60.setNumeratorFormat(numberFormat74);
        fractionFormat45.setDenominatorFormat(numberFormat74);
        fractionFormat43.setNumeratorFormat(numberFormat74);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str79 = fractionFormat8.format((java.lang.Object) fractionFormat43);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot format given object as a fraction");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(attributedCharacterIterator2);
        org.junit.Assert.assertNotNull(numberFormat3);
        org.junit.Assert.assertNotNull(fractionFormat4);
        org.junit.Assert.assertNotNull(attributedCharacterIterator6);
        org.junit.Assert.assertNotNull(numberFormat7);
        org.junit.Assert.assertNotNull(numberFormat9);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertNotNull(fractionFormat11);
        org.junit.Assert.assertNotNull(attributedCharacterIterator13);
        org.junit.Assert.assertNotNull(numberFormat14);
        org.junit.Assert.assertNotNull(fractionFormat15);
        org.junit.Assert.assertNotNull(attributedCharacterIterator17);
        org.junit.Assert.assertNotNull(numberFormat18);
        org.junit.Assert.assertNotNull(numberFormat20);
        org.junit.Assert.assertNotNull(fractionFormat21);
        org.junit.Assert.assertNotNull(fractionFormat22);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertNotNull(numberFormat27);
        org.junit.Assert.assertNotNull(fractionFormat28);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertNotNull(numberFormat31);
        org.junit.Assert.assertNotNull(fractionFormat33);
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertNotNull(numberFormat38);
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertNotNull(numberFormat44);
        org.junit.Assert.assertNotNull(fractionFormat45);
        org.junit.Assert.assertNotNull(fraction47);
        org.junit.Assert.assertNotNull(fractionFormat48);
        org.junit.Assert.assertNotNull(attributedCharacterIterator50);
        org.junit.Assert.assertNotNull(numberFormat51);
        org.junit.Assert.assertNotNull(fractionFormat52);
        org.junit.Assert.assertNotNull(attributedCharacterIterator54);
        org.junit.Assert.assertNotNull(numberFormat55);
        org.junit.Assert.assertNotNull(numberFormat57);
        org.junit.Assert.assertNotNull(numberFormat59);
        org.junit.Assert.assertNotNull(fractionFormat60);
        org.junit.Assert.assertNotNull(obj62);
        org.junit.Assert.assertNotNull(numberFormat63);
        org.junit.Assert.assertNotNull(fractionFormat64);
        org.junit.Assert.assertNotNull(obj66);
        org.junit.Assert.assertNotNull(obj68);
        org.junit.Assert.assertNotNull(numberFormat69);
        org.junit.Assert.assertNotNull(numberFormat70);
        org.junit.Assert.assertNotNull(fractionFormat71);
        org.junit.Assert.assertNotNull(attributedCharacterIterator73);
        org.junit.Assert.assertNotNull(numberFormat74);
    }

    @Test
    public void test0497() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0497");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.text.NumberFormat numberFormat3 = fractionFormat2.getDenominatorFormat();
        java.text.NumberFormat numberFormat4 = fractionFormat2.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator7 = fractionFormat5.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat8 = fractionFormat5.getDenominatorFormat();
        fractionFormat2.setNumeratorFormat(numberFormat8);
        org.apache.commons.math.fraction.FractionFormat fractionFormat10 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj12 = fractionFormat10.parseObject("0 / 1");
        java.lang.Object obj14 = fractionFormat10.parseObject("0 / 1");
        java.text.NumberFormat numberFormat15 = fractionFormat10.getNumeratorFormat();
        fractionFormat2.setDenominatorFormat(numberFormat15);
        java.text.NumberFormat numberFormat17 = null;
        java.text.NumberFormat numberFormat18 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat19 = new org.apache.commons.math.fraction.FractionFormat(numberFormat17, numberFormat18);
        java.text.NumberFormat numberFormat20 = fractionFormat19.getDenominatorFormat();
        java.text.NumberFormat numberFormat21 = fractionFormat19.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat22 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator24 = fractionFormat22.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat25 = fractionFormat22.getDenominatorFormat();
        fractionFormat19.setNumeratorFormat(numberFormat25);
        org.apache.commons.math.fraction.FractionFormat fractionFormat27 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj29 = fractionFormat27.parseObject("0 / 1");
        java.lang.Object obj31 = fractionFormat27.parseObject("0 / 1");
        java.text.NumberFormat numberFormat32 = fractionFormat27.getNumeratorFormat();
        fractionFormat19.setDenominatorFormat(numberFormat32);
        org.apache.commons.math.fraction.FractionFormat fractionFormat34 = new org.apache.commons.math.fraction.FractionFormat(numberFormat15, numberFormat32);
        java.text.NumberFormat numberFormat35 = fractionFormat34.getNumeratorFormat();
        java.lang.Object obj36 = fractionFormat34.clone();
        java.text.NumberFormat numberFormat37 = fractionFormat34.getDenominatorFormat();
        java.text.ParsePosition parsePosition39 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.fraction.Fraction fraction40 = fractionFormat34.parse("", parsePosition39);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(numberFormat3);
        org.junit.Assert.assertNull(numberFormat4);
        org.junit.Assert.assertNotNull(fractionFormat5);
        org.junit.Assert.assertNotNull(attributedCharacterIterator7);
        org.junit.Assert.assertNotNull(numberFormat8);
        org.junit.Assert.assertNotNull(fractionFormat10);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertNotNull(numberFormat15);
        org.junit.Assert.assertNull(numberFormat20);
        org.junit.Assert.assertNull(numberFormat21);
        org.junit.Assert.assertNotNull(fractionFormat22);
        org.junit.Assert.assertNotNull(attributedCharacterIterator24);
        org.junit.Assert.assertNotNull(numberFormat25);
        org.junit.Assert.assertNotNull(fractionFormat27);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertNotNull(numberFormat32);
        org.junit.Assert.assertNotNull(numberFormat35);
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertNotNull(numberFormat37);
    }

    @Test
    public void test0498() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0498");
        java.text.NumberFormat numberFormat0 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat1 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj4 = fractionFormat2.parseObject("0 / 1");
        java.lang.Object obj6 = fractionFormat2.parseObject("-1 / 1");
        org.apache.commons.math.fraction.FractionFormat fractionFormat7 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat8 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj10 = fractionFormat8.parseObject("0 / 1");
        java.lang.Object obj12 = fractionFormat8.parseObject("0 / 1");
        java.text.NumberFormat numberFormat13 = fractionFormat8.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat14 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj16 = fractionFormat14.parseObject("0 / 1");
        java.text.NumberFormat numberFormat17 = fractionFormat14.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat18 = new org.apache.commons.math.fraction.FractionFormat(numberFormat13, numberFormat17);
        org.apache.commons.math.fraction.FractionFormat fractionFormat19 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj21 = fractionFormat19.parseObject("0 / 1");
        java.lang.Object obj23 = fractionFormat19.parseObject("0 / 1");
        java.text.NumberFormat numberFormat24 = fractionFormat19.getNumeratorFormat();
        fractionFormat18.setDenominatorFormat(numberFormat24);
        java.lang.Object obj26 = numberFormat24.clone();
        fractionFormat7.setNumeratorFormat(numberFormat24);
        java.lang.Object obj28 = numberFormat24.clone();
        java.lang.Object obj29 = numberFormat24.clone();
        fractionFormat2.setDenominatorFormat(numberFormat24);
        org.apache.commons.math.fraction.FractionFormat fractionFormat31 = new org.apache.commons.math.fraction.FractionFormat(numberFormat24);
        fractionFormat1.setNumeratorFormat(numberFormat24);
        org.apache.commons.math.fraction.FractionFormat fractionFormat33 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat24);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.fraction.FractionFormat fractionFormat34 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat1);
        org.junit.Assert.assertNotNull(fractionFormat2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(obj6);
        org.junit.Assert.assertNotNull(fractionFormat7);
        org.junit.Assert.assertNotNull(fractionFormat8);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertNotNull(numberFormat13);
        org.junit.Assert.assertNotNull(fractionFormat14);
        org.junit.Assert.assertNotNull(obj16);
        org.junit.Assert.assertNotNull(numberFormat17);
        org.junit.Assert.assertNotNull(fractionFormat19);
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertNotNull(numberFormat24);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertNotNull(obj29);
    }

    @Test
    public void test0499() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0499");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj6 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat7 = null;
        java.text.NumberFormat numberFormat8 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat9 = new org.apache.commons.math.fraction.FractionFormat(numberFormat7, numberFormat8);
        java.text.NumberFormat numberFormat10 = fractionFormat9.getDenominatorFormat();
        java.text.NumberFormat numberFormat11 = fractionFormat9.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat12 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator14 = fractionFormat12.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat15 = fractionFormat12.getDenominatorFormat();
        fractionFormat9.setNumeratorFormat(numberFormat15);
        org.apache.commons.math.fraction.FractionFormat fractionFormat17 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj19 = fractionFormat17.parseObject("0 / 1");
        java.text.NumberFormat numberFormat20 = fractionFormat17.getNumeratorFormat();
        fractionFormat9.setNumeratorFormat(numberFormat20);
        java.lang.Object obj23 = numberFormat20.parseObject("0 / 1");
        fractionFormat0.setNumeratorFormat(numberFormat20);
        java.lang.Object obj25 = fractionFormat0.clone();
        java.lang.Class<?> wildcardClass26 = fractionFormat0.getClass();
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(obj6);
        org.junit.Assert.assertNull(numberFormat10);
        org.junit.Assert.assertNull(numberFormat11);
        org.junit.Assert.assertNotNull(fractionFormat12);
        org.junit.Assert.assertNotNull(attributedCharacterIterator14);
        org.junit.Assert.assertNotNull(numberFormat15);
        org.junit.Assert.assertNotNull(fractionFormat17);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(numberFormat20);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + 0L + "'", obj23, 0L);
        org.junit.Assert.assertNotNull(obj25);
        org.junit.Assert.assertNotNull(wildcardClass26);
    }

    @Test
    public void test0500() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0500");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.text.NumberFormat numberFormat3 = fractionFormat2.getDenominatorFormat();
        java.text.NumberFormat numberFormat4 = fractionFormat2.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator7 = fractionFormat5.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat8 = fractionFormat5.getDenominatorFormat();
        fractionFormat2.setNumeratorFormat(numberFormat8);
        org.apache.commons.math.fraction.FractionFormat fractionFormat10 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj12 = fractionFormat10.parseObject("0 / 1");
        java.lang.Object obj14 = fractionFormat10.parseObject("0 / 1");
        java.text.NumberFormat numberFormat15 = fractionFormat10.getNumeratorFormat();
        fractionFormat2.setDenominatorFormat(numberFormat15);
        java.text.NumberFormat numberFormat17 = fractionFormat2.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat18 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj20 = fractionFormat18.parseObject("0 / 1");
        java.lang.Object obj22 = fractionFormat18.parseObject("0 / 1");
        java.text.NumberFormat numberFormat23 = fractionFormat18.getNumeratorFormat();
        java.text.NumberFormat numberFormat24 = fractionFormat18.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat25 = new org.apache.commons.math.fraction.FractionFormat(numberFormat24);
        org.apache.commons.math.fraction.FractionFormat fractionFormat26 = new org.apache.commons.math.fraction.FractionFormat(numberFormat24);
        java.text.NumberFormat numberFormat27 = null;
        java.text.NumberFormat numberFormat28 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat29 = new org.apache.commons.math.fraction.FractionFormat(numberFormat27, numberFormat28);
        java.lang.Object obj30 = fractionFormat29.clone();
        java.text.NumberFormat numberFormat31 = null;
        java.text.NumberFormat numberFormat32 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat33 = new org.apache.commons.math.fraction.FractionFormat(numberFormat31, numberFormat32);
        java.text.NumberFormat numberFormat34 = fractionFormat33.getDenominatorFormat();
        java.text.NumberFormat numberFormat35 = fractionFormat33.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat36 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator38 = fractionFormat36.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat39 = fractionFormat36.getDenominatorFormat();
        fractionFormat33.setNumeratorFormat(numberFormat39);
        java.lang.Object obj41 = numberFormat39.clone();
        java.lang.String str43 = numberFormat39.format((java.lang.Object) (short) 10);
        org.apache.commons.math.fraction.FractionFormat fractionFormat44 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator46 = fractionFormat44.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat47 = fractionFormat44.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat48 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator50 = fractionFormat48.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat51 = fractionFormat48.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat52 = new org.apache.commons.math.fraction.FractionFormat(numberFormat47, numberFormat51);
        org.apache.commons.math.fraction.FractionFormat fractionFormat53 = new org.apache.commons.math.fraction.FractionFormat(numberFormat39, numberFormat47);
        fractionFormat29.setDenominatorFormat(numberFormat39);
        fractionFormat26.setDenominatorFormat(numberFormat39);
        fractionFormat2.setDenominatorFormat(numberFormat39);
        java.text.NumberFormat numberFormat57 = fractionFormat2.getDenominatorFormat();
        java.text.ParsePosition parsePosition59 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.fraction.Fraction fraction60 = fractionFormat2.parse("hi!", parsePosition59);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(numberFormat3);
        org.junit.Assert.assertNull(numberFormat4);
        org.junit.Assert.assertNotNull(fractionFormat5);
        org.junit.Assert.assertNotNull(attributedCharacterIterator7);
        org.junit.Assert.assertNotNull(numberFormat8);
        org.junit.Assert.assertNotNull(fractionFormat10);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertNotNull(numberFormat15);
        org.junit.Assert.assertNotNull(numberFormat17);
        org.junit.Assert.assertNotNull(fractionFormat18);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertNotNull(numberFormat23);
        org.junit.Assert.assertNotNull(numberFormat24);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertNull(numberFormat34);
        org.junit.Assert.assertNull(numberFormat35);
        org.junit.Assert.assertNotNull(fractionFormat36);
        org.junit.Assert.assertNotNull(attributedCharacterIterator38);
        org.junit.Assert.assertNotNull(numberFormat39);
        org.junit.Assert.assertNotNull(obj41);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "10" + "'", str43, "10");
        org.junit.Assert.assertNotNull(fractionFormat44);
        org.junit.Assert.assertNotNull(attributedCharacterIterator46);
        org.junit.Assert.assertNotNull(numberFormat47);
        org.junit.Assert.assertNotNull(fractionFormat48);
        org.junit.Assert.assertNotNull(attributedCharacterIterator50);
        org.junit.Assert.assertNotNull(numberFormat51);
        org.junit.Assert.assertNotNull(numberFormat57);
    }
}

