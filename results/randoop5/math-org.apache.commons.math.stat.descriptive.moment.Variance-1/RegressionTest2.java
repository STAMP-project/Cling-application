import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class RegressionTest2 {

    public static boolean debug = false;

    @Test
    public void test1001() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1001");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(true);
        double double2 = variance1.getResult();
        double double3 = variance1.getResult();
        variance1.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance6 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray13 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double14 = variance6.evaluate(doubleArray13);
        variance6.setBiasCorrected(true);
        long long17 = variance6.getN();
        long long18 = variance6.getN();
        boolean boolean19 = variance6.isBiasCorrected();
        org.apache.commons.math.stat.descriptive.moment.Variance variance21 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray28 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double29 = variance21.evaluate(doubleArray28);
        double[] doubleArray33 = new double[] { (byte) 1, (byte) 100, 1L };
        double double34 = variance21.evaluate(doubleArray33);
        variance6.incrementAll(doubleArray33, (int) (short) 1, 0);
        variance1.incrementAll(doubleArray33);
        long long39 = variance1.getN();
        variance1.setBiasCorrected(false);
        double double42 = variance1.getResult();
        variance1.clear();
        org.junit.Assert.assertTrue(Double.isNaN(double2));
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 2168.222222222222d + "'", double14 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + 0L + "'", long17 == 0L);
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 0L + "'", long18 == 0L);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 2168.222222222222d + "'", double29 == 2168.222222222222d);
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[1.0, 100.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 2178.0d + "'", double34 == 2178.0d);
        org.junit.Assert.assertTrue("'" + long39 + "' != '" + 3L + "'", long39 == 3L);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 2178.0d + "'", double42 == 2178.0d);
    }

    @Test
    public void test1002() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1002");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray8 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double9 = variance1.evaluate(doubleArray8);
        variance1.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance13 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray20 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double21 = variance13.evaluate(doubleArray20);
        variance13.setBiasCorrected(true);
        boolean boolean24 = variance13.isBiasCorrected();
        double[] doubleArray31 = new double[] { (short) 0, 1.0d, 1L, 0.0d, (-1.0d), 10L };
        double double32 = variance13.evaluate(doubleArray31);
        org.apache.commons.math.stat.descriptive.moment.Variance variance34 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray41 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double42 = variance34.evaluate(doubleArray41);
        variance34.setBiasCorrected(true);
        boolean boolean45 = variance34.isBiasCorrected();
        double[] doubleArray52 = new double[] { (short) 0, 1.0d, 1L, 0.0d, (-1.0d), 10L };
        double double53 = variance34.evaluate(doubleArray52);
        double double56 = variance13.evaluate(doubleArray52, (int) (byte) 1, 0);
        double double58 = variance1.evaluate(doubleArray52, 2178.0d);
        variance1.increment(3267.0d);
        org.apache.commons.math.stat.descriptive.moment.Variance variance62 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray69 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double70 = variance62.evaluate(doubleArray69);
        variance62.setBiasCorrected(true);
        variance62.clear();
        boolean boolean74 = variance1.equals((java.lang.Object) variance62);
        java.lang.Class<?> wildcardClass75 = variance62.getClass();
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 2168.222222222222d + "'", double9 == 2168.222222222222d);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 2168.222222222222d + "'", double21 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[0.0, 1.0, 1.0, 0.0, -1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 16.566666666666663d + "'", double32 == 16.566666666666663d);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 2168.222222222222d + "'", double42 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[0.0, 1.0, 1.0, 0.0, -1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 16.566666666666663d + "'", double53 == 16.566666666666663d);
        org.junit.Assert.assertTrue(Double.isNaN(double56));
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 16.566666666418314d + "'", double58 == 16.566666666418314d);
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + 2168.222222222222d + "'", double70 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNotNull(wildcardClass75);
    }

    @Test
    public void test1003() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1003");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray8 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double9 = variance1.evaluate(doubleArray8);
        variance1.setBiasCorrected(true);
        boolean boolean12 = variance1.isBiasCorrected();
        double[] doubleArray19 = new double[] { (short) 0, 1.0d, 1L, 0.0d, (-1.0d), 10L };
        double double20 = variance1.evaluate(doubleArray19);
        boolean boolean22 = variance1.equals((java.lang.Object) 10.0d);
        boolean boolean23 = variance1.isBiasCorrected();
        org.apache.commons.math.stat.descriptive.moment.Variance variance25 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        boolean boolean26 = variance1.equals((java.lang.Object) false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance28 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray35 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double36 = variance28.evaluate(doubleArray35);
        variance28.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance40 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray47 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double48 = variance40.evaluate(doubleArray47);
        variance28.incrementAll(doubleArray47);
        double double51 = variance1.evaluate(doubleArray47, (double) 100.0f);
        java.lang.Class<?> wildcardClass52 = variance1.getClass();
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 2168.222222222222d + "'", double9 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[0.0, 1.0, 1.0, 0.0, -1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 16.566666666666663d + "'", double20 == 16.566666666666663d);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 2168.222222222222d + "'", double36 == 2168.222222222222d);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 2168.222222222222d + "'", double48 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 2601.8666666666663d + "'", double51 == 2601.8666666666663d);
        org.junit.Assert.assertNotNull(wildcardClass52);
    }

    @Test
    public void test1004() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1004");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray8 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double9 = variance1.evaluate(doubleArray8);
        variance1.setBiasCorrected(true);
        boolean boolean12 = variance1.isBiasCorrected();
        org.apache.commons.math.stat.descriptive.moment.Variance variance14 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray21 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double22 = variance14.evaluate(doubleArray21);
        variance14.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance26 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray33 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double34 = variance26.evaluate(doubleArray33);
        variance26.setBiasCorrected(true);
        boolean boolean37 = variance26.isBiasCorrected();
        double[] doubleArray44 = new double[] { (short) 0, 1.0d, 1L, 0.0d, (-1.0d), 10L };
        double double45 = variance26.evaluate(doubleArray44);
        double double48 = variance14.evaluate(doubleArray44, (int) (byte) 1, (int) (byte) 0);
        double double51 = variance1.evaluate(doubleArray44, (int) (byte) 1, 0);
        variance1.setBiasCorrected(false);
        variance1.increment(Double.NaN);
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 2168.222222222222d + "'", double9 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 2168.222222222222d + "'", double22 == 2168.222222222222d);
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 2168.222222222222d + "'", double34 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[0.0, 1.0, 1.0, 0.0, -1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 16.566666666666663d + "'", double45 == 16.566666666666663d);
        org.junit.Assert.assertTrue(Double.isNaN(double48));
        org.junit.Assert.assertTrue(Double.isNaN(double51));
    }

    @Test
    public void test1005() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1005");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance1.clear();
        boolean boolean3 = variance1.isBiasCorrected();
        boolean boolean5 = variance1.equals((java.lang.Object) 1166128.5457099646d);
        variance1.clear();
        variance1.clear();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment9 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance10 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment9);
        double[] doubleArray11 = new double[] {};
        double double14 = variance10.evaluate(doubleArray11, 0, 0);
        boolean boolean16 = variance10.equals((java.lang.Object) 10.0f);
        boolean boolean17 = variance10.isBiasCorrected();
        variance10.clear();
        double[] doubleArray24 = new double[] { 10.0f, 10.0f, 1, 'a', (byte) 1 };
        double double25 = variance10.evaluate(doubleArray24);
        variance10.setBiasCorrected(false);
        variance10.clear();
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean29 = variance1.equals((java.lang.Object) variance10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double14));
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[10.0, 10.0, 1.0, 97.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 1694.7000000000003d + "'", double25 == 1694.7000000000003d);
    }

    @Test
    public void test1006() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1006");
        org.apache.commons.math.stat.descriptive.moment.Variance variance0 = new org.apache.commons.math.stat.descriptive.moment.Variance();
        long long1 = variance0.getN();
        boolean boolean2 = variance0.isBiasCorrected();
        java.lang.Class<?> wildcardClass3 = variance0.getClass();
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(wildcardClass3);
    }

    @Test
    public void test1007() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1007");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray8 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double9 = variance1.evaluate(doubleArray8);
        variance1.clear();
        variance1.setBiasCorrected(true);
        double[] doubleArray13 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double16 = variance1.evaluate(doubleArray13, (int) (short) 10, (int) (byte) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: input value array is null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 2168.222222222222d + "'", double9 == 2168.222222222222d);
    }

    @Test
    public void test1008() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1008");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance1.clear();
        double double3 = variance1.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance5 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray12 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double13 = variance5.evaluate(doubleArray12);
        variance5.setBiasCorrected(true);
        boolean boolean16 = variance5.isBiasCorrected();
        double[] doubleArray23 = new double[] { (short) 0, 1.0d, 1L, 0.0d, (-1.0d), 10L };
        double double24 = variance5.evaluate(doubleArray23);
        double double25 = variance5.getResult();
        variance5.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance29 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray36 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double37 = variance29.evaluate(doubleArray36);
        variance29.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance41 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray48 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double49 = variance41.evaluate(doubleArray48);
        variance41.setBiasCorrected(true);
        boolean boolean52 = variance41.isBiasCorrected();
        double[] doubleArray59 = new double[] { (short) 0, 1.0d, 1L, 0.0d, (-1.0d), 10L };
        double double60 = variance41.evaluate(doubleArray59);
        org.apache.commons.math.stat.descriptive.moment.Variance variance62 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray69 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double70 = variance62.evaluate(doubleArray69);
        variance62.setBiasCorrected(true);
        boolean boolean73 = variance62.isBiasCorrected();
        double[] doubleArray80 = new double[] { (short) 0, 1.0d, 1L, 0.0d, (-1.0d), 10L };
        double double81 = variance62.evaluate(doubleArray80);
        double double84 = variance41.evaluate(doubleArray80, (int) (byte) 1, 0);
        double double86 = variance29.evaluate(doubleArray80, 2178.0d);
        boolean boolean87 = variance5.equals((java.lang.Object) doubleArray80);
        double double89 = variance1.evaluate(doubleArray80, (double) '#');
        long long90 = variance1.getN();
        variance1.increment((double) '4');
        double[] doubleArray93 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double94 = variance1.evaluate(doubleArray93);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: input values array is null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 2168.222222222222d + "'", double13 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[0.0, 1.0, 1.0, 0.0, -1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 16.566666666666663d + "'", double24 == 16.566666666666663d);
        org.junit.Assert.assertTrue(Double.isNaN(double25));
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 2168.222222222222d + "'", double37 == 2168.222222222222d);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 2168.222222222222d + "'", double49 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[0.0, 1.0, 1.0, 0.0, -1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 16.566666666666663d + "'", double60 == 16.566666666666663d);
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + 2168.222222222222d + "'", double70 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray80), "[0.0, 1.0, 1.0, 0.0, -1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double81 + "' != '" + 16.566666666666663d + "'", double81 == 16.566666666666663d);
        org.junit.Assert.assertTrue(Double.isNaN(double84));
        org.junit.Assert.assertTrue("'" + double86 + "' != '" + 16.566666666418314d + "'", double86 == 16.566666666418314d);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertTrue("'" + double89 + "' != '" + 13.805555555555506d + "'", double89 == 13.805555555555506d);
        org.junit.Assert.assertTrue("'" + long90 + "' != '" + 0L + "'", long90 == 0L);
    }

    @Test
    public void test1009() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1009");
        org.apache.commons.math.stat.descriptive.moment.Variance variance0 = new org.apache.commons.math.stat.descriptive.moment.Variance();
        long long1 = variance0.getN();
        variance0.setBiasCorrected(true);
        variance0.increment(2178.0d);
        boolean boolean6 = variance0.isBiasCorrected();
        org.apache.commons.math.stat.descriptive.moment.Variance variance8 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray15 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double16 = variance8.evaluate(doubleArray15);
        variance8.setBiasCorrected(true);
        long long19 = variance8.getN();
        long long20 = variance8.getN();
        boolean boolean21 = variance8.isBiasCorrected();
        long long22 = variance8.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance24 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray31 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double32 = variance24.evaluate(doubleArray31);
        variance24.setBiasCorrected(true);
        long long35 = variance24.getN();
        variance24.clear();
        double double37 = variance24.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance39 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray46 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double47 = variance39.evaluate(doubleArray46);
        variance39.setBiasCorrected(true);
        boolean boolean50 = variance39.isBiasCorrected();
        double[] doubleArray57 = new double[] { (short) 0, 1.0d, 1L, 0.0d, (-1.0d), 10L };
        double double58 = variance39.evaluate(doubleArray57);
        boolean boolean60 = variance39.equals((java.lang.Object) 10.0d);
        org.apache.commons.math.stat.descriptive.moment.Variance variance62 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray69 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double70 = variance62.evaluate(doubleArray69);
        variance62.setBiasCorrected(true);
        boolean boolean73 = variance62.isBiasCorrected();
        double[] doubleArray80 = new double[] { (short) 0, 1.0d, 1L, 0.0d, (-1.0d), 10L };
        double double81 = variance62.evaluate(doubleArray80);
        double double83 = variance39.evaluate(doubleArray80, (double) 0.0f);
        variance24.incrementAll(doubleArray80);
        double double85 = variance8.evaluate(doubleArray80);
        // The following exception was thrown during execution in test generation
        try {
            variance0.incrementAll(doubleArray80, (int) (byte) 1, (int) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: length cannot be negative");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 2168.222222222222d + "'", double16 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + 0L + "'", long19 == 0L);
        org.junit.Assert.assertTrue("'" + long20 + "' != '" + 0L + "'", long20 == 0L);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + long22 + "' != '" + 0L + "'", long22 == 0L);
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 2168.222222222222d + "'", double32 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + long35 + "' != '" + 0L + "'", long35 == 0L);
        org.junit.Assert.assertTrue(Double.isNaN(double37));
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 2168.222222222222d + "'", double47 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[0.0, 1.0, 1.0, 0.0, -1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 16.566666666666663d + "'", double58 == 16.566666666666663d);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + 2168.222222222222d + "'", double70 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray80), "[0.0, 1.0, 1.0, 0.0, -1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double81 + "' != '" + 16.566666666666663d + "'", double81 == 16.566666666666663d);
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + 16.566666666666666d + "'", double83 == 16.566666666666666d);
        org.junit.Assert.assertTrue("'" + double85 + "' != '" + 16.566666666666663d + "'", double85 == 16.566666666666663d);
    }

    @Test
    public void test1010() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1010");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray8 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double9 = variance1.evaluate(doubleArray8);
        variance1.setBiasCorrected(true);
        long long12 = variance1.getN();
        long long13 = variance1.getN();
        boolean boolean15 = variance1.equals((java.lang.Object) 16.566666666666663d);
        org.apache.commons.math.stat.descriptive.moment.Variance variance17 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray24 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double25 = variance17.evaluate(doubleArray24);
        variance17.setBiasCorrected(true);
        boolean boolean28 = variance17.isBiasCorrected();
        double[] doubleArray35 = new double[] { (short) 0, 1.0d, 1L, 0.0d, (-1.0d), 10L };
        double double36 = variance17.evaluate(doubleArray35);
        boolean boolean38 = variance17.equals((java.lang.Object) 10.0d);
        boolean boolean39 = variance17.isBiasCorrected();
        org.apache.commons.math.stat.descriptive.moment.Variance variance41 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        boolean boolean42 = variance17.equals((java.lang.Object) false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance44 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray51 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double52 = variance44.evaluate(doubleArray51);
        variance44.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance56 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray63 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double64 = variance56.evaluate(doubleArray63);
        variance44.incrementAll(doubleArray63);
        double double67 = variance17.evaluate(doubleArray63, (double) 100.0f);
        variance17.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance70 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray77 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double78 = variance70.evaluate(doubleArray77);
        variance70.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance82 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray89 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double90 = variance82.evaluate(doubleArray89);
        variance70.incrementAll(doubleArray89);
        variance17.incrementAll(doubleArray89);
        variance1.incrementAll(doubleArray89);
        variance1.clear();
        variance1.clear();
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 2168.222222222222d + "'", double9 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 0L + "'", long12 == 0L);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 0L + "'", long13 == 0L);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 2168.222222222222d + "'", double25 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[0.0, 1.0, 1.0, 0.0, -1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 16.566666666666663d + "'", double36 == 16.566666666666663d);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 2168.222222222222d + "'", double52 == 2168.222222222222d);
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 2168.222222222222d + "'", double64 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 2601.8666666666663d + "'", double67 == 2601.8666666666663d);
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray77), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double78 + "' != '" + 2168.222222222222d + "'", double78 == 2168.222222222222d);
        org.junit.Assert.assertNotNull(doubleArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray89), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double90 + "' != '" + 2168.222222222222d + "'", double90 == 2168.222222222222d);
    }

    @Test
    public void test1011() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1011");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance1.clear();
        boolean boolean3 = variance1.isBiasCorrected();
        boolean boolean5 = variance1.equals((java.lang.Object) 1166128.5457099646d);
        double double6 = variance1.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance8 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double double9 = variance8.getResult();
        long long10 = variance8.getN();
        java.lang.Object obj11 = null;
        boolean boolean12 = variance8.equals(obj11);
        org.apache.commons.math.stat.descriptive.moment.Variance variance14 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray21 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double22 = variance14.evaluate(doubleArray21);
        variance14.setBiasCorrected(true);
        boolean boolean25 = variance14.isBiasCorrected();
        double[] doubleArray32 = new double[] { (short) 0, 1.0d, 1L, 0.0d, (-1.0d), 10L };
        double double33 = variance14.evaluate(doubleArray32);
        org.apache.commons.math.stat.descriptive.moment.Variance variance35 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray42 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double43 = variance35.evaluate(doubleArray42);
        variance35.setBiasCorrected(true);
        boolean boolean46 = variance35.isBiasCorrected();
        double[] doubleArray53 = new double[] { (short) 0, 1.0d, 1L, 0.0d, (-1.0d), 10L };
        double double54 = variance35.evaluate(doubleArray53);
        double double57 = variance14.evaluate(doubleArray53, (int) (byte) 1, 0);
        variance14.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance61 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray68 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double69 = variance61.evaluate(doubleArray68);
        variance61.setBiasCorrected(true);
        boolean boolean72 = variance61.isBiasCorrected();
        double[] doubleArray79 = new double[] { (short) 0, 1.0d, 1L, 0.0d, (-1.0d), 10L };
        double double80 = variance61.evaluate(doubleArray79);
        double double82 = variance14.evaluate(doubleArray79, 6.25d);
        variance8.incrementAll(doubleArray79);
        variance1.incrementAll(doubleArray79);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertTrue(Double.isNaN(double9));
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 0L + "'", long10 == 0L);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 2168.222222222222d + "'", double22 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[0.0, 1.0, 1.0, 0.0, -1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 16.566666666666663d + "'", double33 == 16.566666666666663d);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 2168.222222222222d + "'", double43 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray53), "[0.0, 1.0, 1.0, 0.0, -1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 16.566666666666663d + "'", double54 == 16.566666666666663d);
        org.junit.Assert.assertTrue(Double.isNaN(double57));
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 2168.222222222222d + "'", double69 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray79), "[0.0, 1.0, 1.0, 0.0, -1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double80 + "' != '" + 16.566666666666663d + "'", double80 == 16.566666666666663d);
        org.junit.Assert.assertTrue("'" + double82 + "' != '" + 16.566666666666666d + "'", double82 == 16.566666666666666d);
    }

    @Test
    public void test1012() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1012");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray8 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double9 = variance1.evaluate(doubleArray8);
        variance1.setBiasCorrected(true);
        boolean boolean12 = variance1.isBiasCorrected();
        double[] doubleArray19 = new double[] { (short) 0, 1.0d, 1L, 0.0d, (-1.0d), 10L };
        double double20 = variance1.evaluate(doubleArray19);
        double double21 = variance1.getResult();
        long long22 = variance1.getN();
        variance1.increment((double) '#');
        variance1.setBiasCorrected(false);
        java.lang.Class<?> wildcardClass27 = variance1.getClass();
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 2168.222222222222d + "'", double9 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[0.0, 1.0, 1.0, 0.0, -1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 16.566666666666663d + "'", double20 == 16.566666666666663d);
        org.junit.Assert.assertTrue(Double.isNaN(double21));
        org.junit.Assert.assertTrue("'" + long22 + "' != '" + 0L + "'", long22 == 0L);
        org.junit.Assert.assertNotNull(wildcardClass27);
    }

    @Test
    public void test1013() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1013");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray8 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double9 = variance1.evaluate(doubleArray8);
        variance1.setBiasCorrected(true);
        boolean boolean12 = variance1.isBiasCorrected();
        double[] doubleArray19 = new double[] { (short) 0, 1.0d, 1L, 0.0d, (-1.0d), 10L };
        double double20 = variance1.evaluate(doubleArray19);
        double double21 = variance1.getResult();
        long long22 = variance1.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance24 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray31 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double32 = variance24.evaluate(doubleArray31);
        variance24.setBiasCorrected(true);
        long long35 = variance24.getN();
        variance24.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance38 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray45 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double46 = variance38.evaluate(doubleArray45);
        double double47 = variance24.evaluate(doubleArray45);
        double double48 = variance1.evaluate(doubleArray45);
        org.apache.commons.math.stat.descriptive.moment.Variance variance50 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray57 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double58 = variance50.evaluate(doubleArray57);
        variance50.clear();
        variance50.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance63 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance63.clear();
        double double65 = variance63.getResult();
        double[] doubleArray70 = new double[] { (-1), 2168.222222222222d, 16.566666666418314d, 10.0d };
        variance63.incrementAll(doubleArray70);
        boolean boolean72 = variance50.equals((java.lang.Object) doubleArray70);
        double double74 = variance1.evaluate(doubleArray70, (double) 0L);
        double double75 = variance1.getResult();
        variance1.clear();
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 2168.222222222222d + "'", double9 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[0.0, 1.0, 1.0, 0.0, -1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 16.566666666666663d + "'", double20 == 16.566666666666663d);
        org.junit.Assert.assertTrue(Double.isNaN(double21));
        org.junit.Assert.assertTrue("'" + long22 + "' != '" + 0L + "'", long22 == 0L);
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 2168.222222222222d + "'", double32 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + long35 + "' != '" + 0L + "'", long35 == 0L);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 2168.222222222222d + "'", double46 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 2601.866666666667d + "'", double47 == 2601.866666666667d);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 2601.866666666667d + "'", double48 == 2601.866666666667d);
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 2168.222222222222d + "'", double58 == 2168.222222222222d);
        org.junit.Assert.assertTrue(Double.isNaN(double65));
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[-1.0, 2168.222222222222, 16.566666666418314, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertTrue("'" + double74 + "' != '" + 1166128.5457099646d + "'", double74 == 1166128.5457099646d);
        org.junit.Assert.assertTrue(Double.isNaN(double75));
    }

    @Test
    public void test1014() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1014");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray8 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double9 = variance1.evaluate(doubleArray8);
        variance1.clear();
        variance1.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance14 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance14.clear();
        double double16 = variance14.getResult();
        double[] doubleArray21 = new double[] { (-1), 2168.222222222222d, 16.566666666418314d, 10.0d };
        variance14.incrementAll(doubleArray21);
        boolean boolean23 = variance1.equals((java.lang.Object) doubleArray21);
        variance1.setBiasCorrected(false);
        long long26 = variance1.getN();
        long long27 = variance1.getN();
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 2168.222222222222d + "'", double9 == 2168.222222222222d);
        org.junit.Assert.assertTrue(Double.isNaN(double16));
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[-1.0, 2168.222222222222, 16.566666666418314, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + long26 + "' != '" + 0L + "'", long26 == 0L);
        org.junit.Assert.assertTrue("'" + long27 + "' != '" + 0L + "'", long27 == 0L);
    }

    @Test
    public void test1015() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1015");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment1 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance2 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment1);
        double[] doubleArray3 = new double[] {};
        double double6 = variance2.evaluate(doubleArray3, 0, 0);
        boolean boolean8 = variance2.equals((java.lang.Object) 10.0f);
        boolean boolean9 = variance2.isBiasCorrected();
        variance2.clear();
        double[] doubleArray16 = new double[] { 10.0f, 10.0f, 1, 'a', (byte) 1 };
        double double17 = variance2.evaluate(doubleArray16);
        variance2.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance21 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance21.clear();
        double double23 = variance21.getResult();
        variance21.increment((double) '4');
        long long26 = variance21.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance28 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray35 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double36 = variance28.evaluate(doubleArray35);
        variance28.setBiasCorrected(true);
        variance28.increment((double) (byte) 0);
        double[] doubleArray43 = new double[] { 'a', 100L };
        double double45 = variance28.evaluate(doubleArray43, 0.0d);
        double double46 = variance28.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance48 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance48.clear();
        double double50 = variance48.getResult();
        double[] doubleArray55 = new double[] { (-1), 2168.222222222222d, 16.566666666418314d, 10.0d };
        variance48.incrementAll(doubleArray55);
        variance28.incrementAll(doubleArray55, (int) (short) 1, 1);
        double double60 = variance21.evaluate(doubleArray55);
        // The following exception was thrown during execution in test generation
        try {
            double double64 = variance2.evaluate(doubleArray55, 0.0d, (int) (byte) 1, (int) (byte) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: begin + length > values.length");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[10.0, 10.0, 1.0, 97.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 1694.7000000000003d + "'", double17 == 1694.7000000000003d);
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertTrue("'" + long26 + "' != '" + 1L + "'", long26 == 1L);
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 2168.222222222222d + "'", double36 == 2168.222222222222d);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[97.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 4.5d + "'", double45 == 4.5d);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 0.0d + "'", double46 == 0.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double50));
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[-1.0, 2168.222222222222, 16.566666666418314, 10.0]");
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 874596.4092824734d + "'", double60 == 874596.4092824734d);
    }

    @Test
    public void test1016() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1016");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray8 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double9 = variance1.evaluate(doubleArray8);
        long long10 = variance1.getN();
        variance1.increment((double) (byte) 1);
        variance1.increment((double) 6L);
        variance1.setBiasCorrected(false);
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 2168.222222222222d + "'", double9 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 0L + "'", long10 == 0L);
    }

    @Test
    public void test1017() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1017");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray8 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double9 = variance1.evaluate(doubleArray8);
        variance1.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance13 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray20 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double21 = variance13.evaluate(doubleArray20);
        variance13.setBiasCorrected(true);
        boolean boolean24 = variance13.isBiasCorrected();
        double[] doubleArray31 = new double[] { (short) 0, 1.0d, 1L, 0.0d, (-1.0d), 10L };
        double double32 = variance13.evaluate(doubleArray31);
        double double35 = variance1.evaluate(doubleArray31, (int) (byte) 1, (int) (byte) 0);
        variance1.setBiasCorrected(true);
        double double38 = variance1.getResult();
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 2168.222222222222d + "'", double9 == 2168.222222222222d);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 2168.222222222222d + "'", double21 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[0.0, 1.0, 1.0, 0.0, -1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 16.566666666666663d + "'", double32 == 16.566666666666663d);
        org.junit.Assert.assertTrue(Double.isNaN(double35));
        org.junit.Assert.assertTrue(Double.isNaN(double38));
    }

    @Test
    public void test1018() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1018");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray8 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double9 = variance1.evaluate(doubleArray8);
        variance1.setBiasCorrected(true);
        boolean boolean12 = variance1.isBiasCorrected();
        double[] doubleArray19 = new double[] { (short) 0, 1.0d, 1L, 0.0d, (-1.0d), 10L };
        double double20 = variance1.evaluate(doubleArray19);
        double double21 = variance1.getResult();
        long long22 = variance1.getN();
        java.lang.Object obj23 = null;
        boolean boolean24 = variance1.equals(obj23);
        boolean boolean25 = variance1.isBiasCorrected();
        long long26 = variance1.getN();
        boolean boolean27 = variance1.isBiasCorrected();
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 2168.222222222222d + "'", double9 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[0.0, 1.0, 1.0, 0.0, -1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 16.566666666666663d + "'", double20 == 16.566666666666663d);
        org.junit.Assert.assertTrue(Double.isNaN(double21));
        org.junit.Assert.assertTrue("'" + long22 + "' != '" + 0L + "'", long22 == 0L);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + long26 + "' != '" + 0L + "'", long26 == 0L);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
    }

    @Test
    public void test1019() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1019");
        org.apache.commons.math.stat.descriptive.moment.Variance variance0 = new org.apache.commons.math.stat.descriptive.moment.Variance();
        long long1 = variance0.getN();
        variance0.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance5 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray12 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double13 = variance5.evaluate(doubleArray12);
        variance5.clear();
        variance5.setBiasCorrected(false);
        variance5.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance19 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray26 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double27 = variance19.evaluate(doubleArray26);
        variance19.setBiasCorrected(true);
        variance19.increment((double) (byte) 0);
        double[] doubleArray34 = new double[] { 'a', 100L };
        double double36 = variance19.evaluate(doubleArray34, 0.0d);
        double double37 = variance5.evaluate(doubleArray34);
        variance0.incrementAll(doubleArray34, 1, (int) (byte) 1);
        variance0.setBiasCorrected(false);
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 2168.222222222222d + "'", double13 == 2168.222222222222d);
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 2168.222222222222d + "'", double27 == 2168.222222222222d);
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[97.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 4.5d + "'", double36 == 4.5d);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 2.25d + "'", double37 == 2.25d);
    }

    @Test
    public void test1020() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1020");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray8 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double9 = variance1.evaluate(doubleArray8);
        variance1.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance13 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray20 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double21 = variance13.evaluate(doubleArray20);
        variance13.setBiasCorrected(true);
        boolean boolean24 = variance13.isBiasCorrected();
        double[] doubleArray31 = new double[] { (short) 0, 1.0d, 1L, 0.0d, (-1.0d), 10L };
        double double32 = variance13.evaluate(doubleArray31);
        org.apache.commons.math.stat.descriptive.moment.Variance variance34 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray41 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double42 = variance34.evaluate(doubleArray41);
        variance34.setBiasCorrected(true);
        boolean boolean45 = variance34.isBiasCorrected();
        double[] doubleArray52 = new double[] { (short) 0, 1.0d, 1L, 0.0d, (-1.0d), 10L };
        double double53 = variance34.evaluate(doubleArray52);
        double double56 = variance13.evaluate(doubleArray52, (int) (byte) 1, 0);
        double double58 = variance1.evaluate(doubleArray52, 2178.0d);
        variance1.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance62 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray69 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double70 = variance62.evaluate(doubleArray69);
        variance62.setBiasCorrected(true);
        long long73 = variance62.getN();
        long long74 = variance62.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance76 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray83 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double84 = variance76.evaluate(doubleArray83);
        double[] doubleArray88 = new double[] { (byte) 1, (byte) 100, 1L };
        double double89 = variance76.evaluate(doubleArray88);
        double double91 = variance62.evaluate(doubleArray88, (double) 10.0f);
        double double92 = variance1.evaluate(doubleArray88);
        variance1.clear();
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 2168.222222222222d + "'", double9 == 2168.222222222222d);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 2168.222222222222d + "'", double21 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[0.0, 1.0, 1.0, 0.0, -1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 16.566666666666663d + "'", double32 == 16.566666666666663d);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 2168.222222222222d + "'", double42 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[0.0, 1.0, 1.0, 0.0, -1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 16.566666666666663d + "'", double53 == 16.566666666666663d);
        org.junit.Assert.assertTrue(Double.isNaN(double56));
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 16.566666666418314d + "'", double58 == 16.566666666418314d);
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + 2168.222222222222d + "'", double70 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + long73 + "' != '" + 0L + "'", long73 == 0L);
        org.junit.Assert.assertTrue("'" + long74 + "' != '" + 0L + "'", long74 == 0L);
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray83), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double84 + "' != '" + 2168.222222222222d + "'", double84 == 2168.222222222222d);
        org.junit.Assert.assertNotNull(doubleArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray88), "[1.0, 100.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double89 + "' != '" + 2178.0d + "'", double89 == 2178.0d);
        org.junit.Assert.assertTrue("'" + double91 + "' != '" + 3267.0d + "'", double91 == 3267.0d);
        org.junit.Assert.assertTrue("'" + double92 + "' != '" + 3267.0d + "'", double92 == 3267.0d);
    }

    @Test
    public void test1021() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1021");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray8 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double9 = variance1.evaluate(doubleArray8);
        variance1.setBiasCorrected(true);
        boolean boolean12 = variance1.isBiasCorrected();
        double[] doubleArray19 = new double[] { (short) 0, 1.0d, 1L, 0.0d, (-1.0d), 10L };
        double double20 = variance1.evaluate(doubleArray19);
        org.apache.commons.math.stat.descriptive.moment.Variance variance22 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray29 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double30 = variance22.evaluate(doubleArray29);
        variance22.setBiasCorrected(true);
        boolean boolean33 = variance22.isBiasCorrected();
        double[] doubleArray40 = new double[] { (short) 0, 1.0d, 1L, 0.0d, (-1.0d), 10L };
        double double41 = variance22.evaluate(doubleArray40);
        double double44 = variance1.evaluate(doubleArray40, (int) (byte) 1, 0);
        boolean boolean45 = variance1.isBiasCorrected();
        variance1.setBiasCorrected(true);
        variance1.increment(13.80555555555562d);
        long long50 = variance1.getN();
        double double51 = variance1.getResult();
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 2168.222222222222d + "'", double9 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[0.0, 1.0, 1.0, 0.0, -1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 16.566666666666663d + "'", double20 == 16.566666666666663d);
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 2168.222222222222d + "'", double30 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[0.0, 1.0, 1.0, 0.0, -1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 16.566666666666663d + "'", double41 == 16.566666666666663d);
        org.junit.Assert.assertTrue(Double.isNaN(double44));
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + long50 + "' != '" + 1L + "'", long50 == 1L);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 0.0d + "'", double51 == 0.0d);
    }

    @Test
    public void test1022() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1022");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance3 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray10 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double11 = variance3.evaluate(doubleArray10);
        variance3.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance15 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance15.clear();
        double double17 = variance15.getResult();
        double[] doubleArray22 = new double[] { (-1), 2168.222222222222d, 16.566666666418314d, 10.0d };
        variance15.incrementAll(doubleArray22);
        variance3.incrementAll(doubleArray22);
        double double25 = variance1.evaluate(doubleArray22);
        variance1.setBiasCorrected(false);
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 2168.222222222222d + "'", double11 == 2168.222222222222d);
        org.junit.Assert.assertTrue(Double.isNaN(double17));
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[-1.0, 2168.222222222222, 16.566666666418314, 10.0]");
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 874596.4092824734d + "'", double25 == 874596.4092824734d);
    }

    @Test
    public void test1023() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1023");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray8 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double9 = variance1.evaluate(doubleArray8);
        long long10 = variance1.getN();
        variance1.increment((double) (byte) 1);
        double double13 = variance1.getResult();
        boolean boolean14 = variance1.isBiasCorrected();
        double double15 = variance1.getResult();
        variance1.increment(2601.8666666666663d);
        org.apache.commons.math.stat.descriptive.moment.Variance variance19 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray26 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double27 = variance19.evaluate(doubleArray26);
        long long28 = variance19.getN();
        variance19.increment(874596.4092824734d);
        org.apache.commons.math.stat.descriptive.moment.Variance variance32 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance32.clear();
        double double34 = variance32.getResult();
        double[] doubleArray39 = new double[] { (-1), 2168.222222222222d, 16.566666666418314d, 10.0d };
        variance32.incrementAll(doubleArray39);
        variance19.incrementAll(doubleArray39, 0, (int) (byte) 1);
        // The following exception was thrown during execution in test generation
        try {
            variance1.incrementAll(doubleArray39, (int) ' ', (int) (byte) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: begin + length > values.length");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 2168.222222222222d + "'", double9 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 0L + "'", long10 == 0L);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.0d + "'", double15 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 2168.222222222222d + "'", double27 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + long28 + "' != '" + 0L + "'", long28 == 0L);
        org.junit.Assert.assertTrue(Double.isNaN(double34));
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[-1.0, 2168.222222222222, 16.566666666418314, 10.0]");
    }

    @Test
    public void test1024() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1024");
        org.apache.commons.math.stat.descriptive.moment.Variance variance0 = new org.apache.commons.math.stat.descriptive.moment.Variance();
        double double1 = variance0.getResult();
        boolean boolean2 = variance0.isBiasCorrected();
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true);
        double double5 = variance4.getResult();
        double double6 = variance4.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance8 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray15 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double16 = variance8.evaluate(doubleArray15);
        variance8.clear();
        variance8.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance21 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance21.clear();
        double double23 = variance21.getResult();
        double[] doubleArray28 = new double[] { (-1), 2168.222222222222d, 16.566666666418314d, 10.0d };
        variance21.incrementAll(doubleArray28);
        boolean boolean30 = variance8.equals((java.lang.Object) doubleArray28);
        double double32 = variance4.evaluate(doubleArray28, (double) (-1.0f));
        double double34 = variance0.evaluate(doubleArray28, (double) (-1L));
        variance0.increment(2.25d);
        double double37 = variance0.getResult();
        variance0.setBiasCorrected(true);
        org.junit.Assert.assertTrue(Double.isNaN(double1));
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 2168.222222222222d + "'", double16 == 2168.222222222222d);
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[-1.0, 2168.222222222222, 16.566666666418314, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 1166128.5457099646d + "'", double32 == 1166128.5457099646d);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 1166128.5457099646d + "'", double34 == 1166128.5457099646d);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 0.0d + "'", double37 == 0.0d);
    }

    @Test
    public void test1025() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1025");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(true);
        double double2 = variance1.getResult();
        double double3 = variance1.getResult();
        variance1.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance6 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray13 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double14 = variance6.evaluate(doubleArray13);
        variance6.setBiasCorrected(true);
        long long17 = variance6.getN();
        long long18 = variance6.getN();
        boolean boolean19 = variance6.isBiasCorrected();
        org.apache.commons.math.stat.descriptive.moment.Variance variance21 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray28 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double29 = variance21.evaluate(doubleArray28);
        double[] doubleArray33 = new double[] { (byte) 1, (byte) 100, 1L };
        double double34 = variance21.evaluate(doubleArray33);
        variance6.incrementAll(doubleArray33, (int) (short) 1, 0);
        variance1.incrementAll(doubleArray33);
        variance1.increment(16.566666666666663d);
        org.apache.commons.math.stat.descriptive.moment.Variance variance42 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray49 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double50 = variance42.evaluate(doubleArray49);
        variance42.setBiasCorrected(true);
        boolean boolean53 = variance42.isBiasCorrected();
        double[] doubleArray60 = new double[] { (short) 0, 1.0d, 1L, 0.0d, (-1.0d), 10L };
        double double61 = variance42.evaluate(doubleArray60);
        double double62 = variance42.getResult();
        variance42.setBiasCorrected(true);
        double double65 = variance42.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance67 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray74 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double75 = variance67.evaluate(doubleArray74);
        variance67.clear();
        variance67.setBiasCorrected(true);
        double double79 = variance67.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance81 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray88 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double89 = variance81.evaluate(doubleArray88);
        double double90 = variance67.evaluate(doubleArray88);
        double double92 = variance42.evaluate(doubleArray88, (double) 100);
        double double93 = variance1.evaluate(doubleArray88);
        org.junit.Assert.assertTrue(Double.isNaN(double2));
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 2168.222222222222d + "'", double14 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + 0L + "'", long17 == 0L);
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 0L + "'", long18 == 0L);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 2168.222222222222d + "'", double29 == 2168.222222222222d);
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[1.0, 100.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 2178.0d + "'", double34 == 2178.0d);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 2168.222222222222d + "'", double50 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[0.0, 1.0, 1.0, 0.0, -1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 16.566666666666663d + "'", double61 == 16.566666666666663d);
        org.junit.Assert.assertTrue(Double.isNaN(double62));
        org.junit.Assert.assertTrue(Double.isNaN(double65));
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray74), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double75 + "' != '" + 2168.222222222222d + "'", double75 == 2168.222222222222d);
        org.junit.Assert.assertTrue(Double.isNaN(double79));
        org.junit.Assert.assertNotNull(doubleArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray88), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double89 + "' != '" + 2168.222222222222d + "'", double89 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + double90 + "' != '" + 2601.866666666667d + "'", double90 == 2601.866666666667d);
        org.junit.Assert.assertTrue("'" + double92 + "' != '" + 2601.8666666666663d + "'", double92 == 2601.8666666666663d);
        org.junit.Assert.assertTrue("'" + double93 + "' != '" + 2601.866666666667d + "'", double93 == 2601.866666666667d);
    }

    @Test
    public void test1026() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1026");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray8 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double9 = variance1.evaluate(doubleArray8);
        double[] doubleArray13 = new double[] { (byte) 1, (byte) 100, 1L };
        double double14 = variance1.evaluate(doubleArray13);
        double double15 = variance1.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance17 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double double18 = variance17.getResult();
        long long19 = variance17.getN();
        java.lang.Object obj20 = null;
        boolean boolean21 = variance17.equals(obj20);
        org.apache.commons.math.stat.descriptive.moment.Variance variance23 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray30 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double31 = variance23.evaluate(doubleArray30);
        variance23.setBiasCorrected(true);
        boolean boolean34 = variance23.isBiasCorrected();
        double[] doubleArray41 = new double[] { (short) 0, 1.0d, 1L, 0.0d, (-1.0d), 10L };
        double double42 = variance23.evaluate(doubleArray41);
        org.apache.commons.math.stat.descriptive.moment.Variance variance44 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray51 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double52 = variance44.evaluate(doubleArray51);
        variance44.setBiasCorrected(true);
        boolean boolean55 = variance44.isBiasCorrected();
        double[] doubleArray62 = new double[] { (short) 0, 1.0d, 1L, 0.0d, (-1.0d), 10L };
        double double63 = variance44.evaluate(doubleArray62);
        double double66 = variance23.evaluate(doubleArray62, (int) (byte) 1, 0);
        variance23.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance70 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray77 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double78 = variance70.evaluate(doubleArray77);
        variance70.setBiasCorrected(true);
        boolean boolean81 = variance70.isBiasCorrected();
        double[] doubleArray88 = new double[] { (short) 0, 1.0d, 1L, 0.0d, (-1.0d), 10L };
        double double89 = variance70.evaluate(doubleArray88);
        double double91 = variance23.evaluate(doubleArray88, 6.25d);
        variance17.incrementAll(doubleArray88);
        // The following exception was thrown during execution in test generation
        try {
            double double95 = variance1.evaluate(doubleArray88, (int) (byte) 1, (-1));
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: length cannot be negative");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 2168.222222222222d + "'", double9 == 2168.222222222222d);
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[1.0, 100.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 2178.0d + "'", double14 == 2178.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double15));
        org.junit.Assert.assertTrue(Double.isNaN(double18));
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + 0L + "'", long19 == 0L);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 2168.222222222222d + "'", double31 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[0.0, 1.0, 1.0, 0.0, -1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 16.566666666666663d + "'", double42 == 16.566666666666663d);
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 2168.222222222222d + "'", double52 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[0.0, 1.0, 1.0, 0.0, -1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 16.566666666666663d + "'", double63 == 16.566666666666663d);
        org.junit.Assert.assertTrue(Double.isNaN(double66));
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray77), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double78 + "' != '" + 2168.222222222222d + "'", double78 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertNotNull(doubleArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray88), "[0.0, 1.0, 1.0, 0.0, -1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double89 + "' != '" + 16.566666666666663d + "'", double89 == 16.566666666666663d);
        org.junit.Assert.assertTrue("'" + double91 + "' != '" + 16.566666666666666d + "'", double91 == 16.566666666666666d);
    }

    @Test
    public void test1027() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1027");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray8 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double9 = variance1.evaluate(doubleArray8);
        variance1.setBiasCorrected(true);
        long long12 = variance1.getN();
        long long13 = variance1.getN();
        double double14 = variance1.getResult();
        variance1.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance17 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray24 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double25 = variance17.evaluate(doubleArray24);
        double[] doubleArray29 = new double[] { (byte) 1, (byte) 100, 1L };
        double double30 = variance17.evaluate(doubleArray29);
        org.apache.commons.math.stat.descriptive.moment.Variance variance32 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray39 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double40 = variance32.evaluate(doubleArray39);
        variance32.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance44 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray51 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double52 = variance44.evaluate(doubleArray51);
        variance32.incrementAll(doubleArray51);
        variance17.incrementAll(doubleArray51);
        double double55 = variance1.evaluate(doubleArray51);
        long long56 = variance1.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance58 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance60 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray67 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double68 = variance60.evaluate(doubleArray67);
        variance60.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance72 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance72.clear();
        double double74 = variance72.getResult();
        double[] doubleArray79 = new double[] { (-1), 2168.222222222222d, 16.566666666418314d, 10.0d };
        variance72.incrementAll(doubleArray79);
        variance60.incrementAll(doubleArray79);
        double double82 = variance58.evaluate(doubleArray79);
        double double83 = variance1.evaluate(doubleArray79);
        java.lang.Class<?> wildcardClass84 = doubleArray79.getClass();
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 2168.222222222222d + "'", double9 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 0L + "'", long12 == 0L);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 0L + "'", long13 == 0L);
        org.junit.Assert.assertTrue(Double.isNaN(double14));
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 2168.222222222222d + "'", double25 == 2168.222222222222d);
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[1.0, 100.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 2178.0d + "'", double30 == 2178.0d);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 2168.222222222222d + "'", double40 == 2168.222222222222d);
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 2168.222222222222d + "'", double52 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 2601.866666666667d + "'", double55 == 2601.866666666667d);
        org.junit.Assert.assertTrue("'" + long56 + "' != '" + 0L + "'", long56 == 0L);
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 2168.222222222222d + "'", double68 == 2168.222222222222d);
        org.junit.Assert.assertTrue(Double.isNaN(double74));
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray79), "[-1.0, 2168.222222222222, 16.566666666418314, 10.0]");
        org.junit.Assert.assertTrue("'" + double82 + "' != '" + 874596.4092824734d + "'", double82 == 874596.4092824734d);
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + 1166128.5457099646d + "'", double83 == 1166128.5457099646d);
        org.junit.Assert.assertNotNull(wildcardClass84);
    }

    @Test
    public void test1028() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1028");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray8 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double9 = variance1.evaluate(doubleArray8);
        variance1.setBiasCorrected(true);
        boolean boolean12 = variance1.isBiasCorrected();
        double[] doubleArray19 = new double[] { (short) 0, 1.0d, 1L, 0.0d, (-1.0d), 10L };
        double double20 = variance1.evaluate(doubleArray19);
        org.apache.commons.math.stat.descriptive.moment.Variance variance22 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance22.clear();
        double double24 = variance22.getResult();
        double[] doubleArray29 = new double[] { (-1), 2168.222222222222d, 16.566666666418314d, 10.0d };
        variance22.incrementAll(doubleArray29);
        double double31 = variance22.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance33 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray40 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double41 = variance33.evaluate(doubleArray40);
        variance33.setBiasCorrected(true);
        boolean boolean44 = variance33.isBiasCorrected();
        double[] doubleArray51 = new double[] { (short) 0, 1.0d, 1L, 0.0d, (-1.0d), 10L };
        double double52 = variance33.evaluate(doubleArray51);
        boolean boolean54 = variance33.equals((java.lang.Object) 10.0d);
        org.apache.commons.math.stat.descriptive.moment.Variance variance56 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray63 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double64 = variance56.evaluate(doubleArray63);
        variance56.setBiasCorrected(true);
        boolean boolean67 = variance56.isBiasCorrected();
        double[] doubleArray74 = new double[] { (short) 0, 1.0d, 1L, 0.0d, (-1.0d), 10L };
        double double75 = variance56.evaluate(doubleArray74);
        double double77 = variance33.evaluate(doubleArray74, (double) 0.0f);
        variance22.incrementAll(doubleArray74, 1, (int) (byte) 0);
        // The following exception was thrown during execution in test generation
        try {
            variance1.incrementAll(doubleArray74, 0, (int) '#');
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: begin + length > values.length");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 2168.222222222222d + "'", double9 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[0.0, 1.0, 1.0, 0.0, -1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 16.566666666666663d + "'", double20 == 16.566666666666663d);
        org.junit.Assert.assertTrue(Double.isNaN(double24));
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[-1.0, 2168.222222222222, 16.566666666418314, 10.0]");
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 874596.4092824734d + "'", double31 == 874596.4092824734d);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 2168.222222222222d + "'", double41 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[0.0, 1.0, 1.0, 0.0, -1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 16.566666666666663d + "'", double52 == 16.566666666666663d);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 2168.222222222222d + "'", double64 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray74), "[0.0, 1.0, 1.0, 0.0, -1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double75 + "' != '" + 16.566666666666663d + "'", double75 == 16.566666666666663d);
        org.junit.Assert.assertTrue("'" + double77 + "' != '" + 16.566666666666666d + "'", double77 == 16.566666666666666d);
    }

    @Test
    public void test1029() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1029");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray8 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double9 = variance1.evaluate(doubleArray8);
        variance1.setBiasCorrected(true);
        long long12 = variance1.getN();
        long long13 = variance1.getN();
        boolean boolean15 = variance1.equals((java.lang.Object) 16.566666666666663d);
        boolean boolean17 = variance1.equals((java.lang.Object) (short) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance19 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray26 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double27 = variance19.evaluate(doubleArray26);
        variance19.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance31 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray38 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double39 = variance31.evaluate(doubleArray38);
        variance31.setBiasCorrected(true);
        boolean boolean42 = variance31.isBiasCorrected();
        double[] doubleArray49 = new double[] { (short) 0, 1.0d, 1L, 0.0d, (-1.0d), 10L };
        double double50 = variance31.evaluate(doubleArray49);
        org.apache.commons.math.stat.descriptive.moment.Variance variance52 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray59 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double60 = variance52.evaluate(doubleArray59);
        variance52.setBiasCorrected(true);
        boolean boolean63 = variance52.isBiasCorrected();
        double[] doubleArray70 = new double[] { (short) 0, 1.0d, 1L, 0.0d, (-1.0d), 10L };
        double double71 = variance52.evaluate(doubleArray70);
        double double74 = variance31.evaluate(doubleArray70, (int) (byte) 1, 0);
        double double76 = variance19.evaluate(doubleArray70, 2178.0d);
        double double77 = variance1.evaluate(doubleArray70);
        boolean boolean79 = variance1.equals((java.lang.Object) (short) 100);
        java.lang.Class<?> wildcardClass80 = variance1.getClass();
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 2168.222222222222d + "'", double9 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 0L + "'", long12 == 0L);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 0L + "'", long13 == 0L);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 2168.222222222222d + "'", double27 == 2168.222222222222d);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 2168.222222222222d + "'", double39 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[0.0, 1.0, 1.0, 0.0, -1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 16.566666666666663d + "'", double50 == 16.566666666666663d);
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 2168.222222222222d + "'", double60 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[0.0, 1.0, 1.0, 0.0, -1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + 16.566666666666663d + "'", double71 == 16.566666666666663d);
        org.junit.Assert.assertTrue(Double.isNaN(double74));
        org.junit.Assert.assertTrue("'" + double76 + "' != '" + 16.566666666418314d + "'", double76 == 16.566666666418314d);
        org.junit.Assert.assertTrue("'" + double77 + "' != '" + 16.566666666666663d + "'", double77 == 16.566666666666663d);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertNotNull(wildcardClass80);
    }

    @Test
    public void test1030() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1030");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment1 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance2 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment1);
        variance2.clear();
        double[] doubleArray4 = new double[] {};
        variance2.incrementAll(doubleArray4);
        variance2.increment(2178.0d);
        variance2.clear();
        double[] doubleArray9 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double11 = variance2.evaluate(doubleArray9, 677378.9558333334d);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[]");
    }

    @Test
    public void test1031() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1031");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance1.clear();
        double double3 = variance1.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance5 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray12 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double13 = variance5.evaluate(doubleArray12);
        variance5.setBiasCorrected(true);
        boolean boolean16 = variance5.isBiasCorrected();
        double[] doubleArray23 = new double[] { (short) 0, 1.0d, 1L, 0.0d, (-1.0d), 10L };
        double double24 = variance5.evaluate(doubleArray23);
        double double25 = variance5.getResult();
        variance5.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance29 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray36 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double37 = variance29.evaluate(doubleArray36);
        variance29.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance41 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray48 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double49 = variance41.evaluate(doubleArray48);
        variance41.setBiasCorrected(true);
        boolean boolean52 = variance41.isBiasCorrected();
        double[] doubleArray59 = new double[] { (short) 0, 1.0d, 1L, 0.0d, (-1.0d), 10L };
        double double60 = variance41.evaluate(doubleArray59);
        org.apache.commons.math.stat.descriptive.moment.Variance variance62 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray69 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double70 = variance62.evaluate(doubleArray69);
        variance62.setBiasCorrected(true);
        boolean boolean73 = variance62.isBiasCorrected();
        double[] doubleArray80 = new double[] { (short) 0, 1.0d, 1L, 0.0d, (-1.0d), 10L };
        double double81 = variance62.evaluate(doubleArray80);
        double double84 = variance41.evaluate(doubleArray80, (int) (byte) 1, 0);
        double double86 = variance29.evaluate(doubleArray80, 2178.0d);
        boolean boolean87 = variance5.equals((java.lang.Object) doubleArray80);
        double double89 = variance1.evaluate(doubleArray80, (double) '#');
        long long90 = variance1.getN();
        variance1.increment((double) '4');
        variance1.setBiasCorrected(true);
        long long95 = variance1.getN();
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 2168.222222222222d + "'", double13 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[0.0, 1.0, 1.0, 0.0, -1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 16.566666666666663d + "'", double24 == 16.566666666666663d);
        org.junit.Assert.assertTrue(Double.isNaN(double25));
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 2168.222222222222d + "'", double37 == 2168.222222222222d);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 2168.222222222222d + "'", double49 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[0.0, 1.0, 1.0, 0.0, -1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 16.566666666666663d + "'", double60 == 16.566666666666663d);
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + 2168.222222222222d + "'", double70 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray80), "[0.0, 1.0, 1.0, 0.0, -1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double81 + "' != '" + 16.566666666666663d + "'", double81 == 16.566666666666663d);
        org.junit.Assert.assertTrue(Double.isNaN(double84));
        org.junit.Assert.assertTrue("'" + double86 + "' != '" + 16.566666666418314d + "'", double86 == 16.566666666418314d);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertTrue("'" + double89 + "' != '" + 13.805555555555506d + "'", double89 == 13.805555555555506d);
        org.junit.Assert.assertTrue("'" + long90 + "' != '" + 0L + "'", long90 == 0L);
        org.junit.Assert.assertTrue("'" + long95 + "' != '" + 1L + "'", long95 == 1L);
    }

    @Test
    public void test1032() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1032");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray8 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double9 = variance1.evaluate(doubleArray8);
        long long10 = variance1.getN();
        variance1.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance13 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray20 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double21 = variance13.evaluate(doubleArray20);
        variance13.setBiasCorrected(true);
        boolean boolean24 = variance13.isBiasCorrected();
        double[] doubleArray31 = new double[] { (short) 0, 1.0d, 1L, 0.0d, (-1.0d), 10L };
        double double32 = variance13.evaluate(doubleArray31);
        double double33 = variance13.getResult();
        variance13.setBiasCorrected(true);
        long long36 = variance13.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance38 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray45 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double46 = variance38.evaluate(doubleArray45);
        variance38.setBiasCorrected(true);
        boolean boolean49 = variance38.isBiasCorrected();
        double[] doubleArray56 = new double[] { (short) 0, 1.0d, 1L, 0.0d, (-1.0d), 10L };
        double double57 = variance38.evaluate(doubleArray56);
        double double58 = variance38.getResult();
        variance38.setBiasCorrected(true);
        boolean boolean61 = variance38.isBiasCorrected();
        variance38.setBiasCorrected(false);
        variance38.increment(2601.866666666667d);
        org.apache.commons.math.stat.descriptive.moment.Variance variance67 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray74 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double75 = variance67.evaluate(doubleArray74);
        variance67.clear();
        variance67.setBiasCorrected(true);
        double double79 = variance67.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance81 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray88 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double89 = variance81.evaluate(doubleArray88);
        double double90 = variance67.evaluate(doubleArray88);
        double double91 = variance38.evaluate(doubleArray88);
        variance13.incrementAll(doubleArray88);
        // The following exception was thrown during execution in test generation
        try {
            double double95 = variance1.evaluate(doubleArray88, (int) (byte) 100, 0);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: begin + length > values.length");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 2168.222222222222d + "'", double9 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 0L + "'", long10 == 0L);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 2168.222222222222d + "'", double21 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[0.0, 1.0, 1.0, 0.0, -1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 16.566666666666663d + "'", double32 == 16.566666666666663d);
        org.junit.Assert.assertTrue(Double.isNaN(double33));
        org.junit.Assert.assertTrue("'" + long36 + "' != '" + 0L + "'", long36 == 0L);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 2168.222222222222d + "'", double46 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[0.0, 1.0, 1.0, 0.0, -1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 16.566666666666663d + "'", double57 == 16.566666666666663d);
        org.junit.Assert.assertTrue(Double.isNaN(double58));
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray74), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double75 + "' != '" + 2168.222222222222d + "'", double75 == 2168.222222222222d);
        org.junit.Assert.assertTrue(Double.isNaN(double79));
        org.junit.Assert.assertNotNull(doubleArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray88), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double89 + "' != '" + 2168.222222222222d + "'", double89 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + double90 + "' != '" + 2601.866666666667d + "'", double90 == 2601.866666666667d);
        org.junit.Assert.assertTrue("'" + double91 + "' != '" + 2168.222222222222d + "'", double91 == 2168.222222222222d);
    }

    @Test
    public void test1033() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1033");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray8 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double9 = variance1.evaluate(doubleArray8);
        variance1.clear();
        java.lang.Object obj11 = null;
        boolean boolean12 = variance1.equals(obj11);
        variance1.clear();
        variance1.increment((double) (-1L));
        double[] doubleArray17 = new double[] { 2168.2222222222226d };
        // The following exception was thrown during execution in test generation
        try {
            double double21 = variance1.evaluate(doubleArray17, 2601.866666666667d, (int) (short) -1, (int) '4');
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: start position cannot be negative");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 2168.222222222222d + "'", double9 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[2168.2222222222226]");
    }

    @Test
    public void test1034() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1034");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray8 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double9 = variance1.evaluate(doubleArray8);
        long long10 = variance1.getN();
        variance1.increment((double) (byte) 1);
        double double13 = variance1.getResult();
        boolean boolean14 = variance1.isBiasCorrected();
        double double15 = variance1.getResult();
        variance1.increment(2601.8666666666663d);
        org.apache.commons.math.stat.descriptive.moment.Variance variance19 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance19.clear();
        boolean boolean21 = variance19.isBiasCorrected();
        boolean boolean23 = variance19.equals((java.lang.Object) 1166128.5457099646d);
        org.apache.commons.math.stat.descriptive.moment.Variance variance25 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray32 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double33 = variance25.evaluate(doubleArray32);
        org.apache.commons.math.stat.descriptive.moment.Variance variance35 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray42 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double43 = variance35.evaluate(doubleArray42);
        variance35.setBiasCorrected(true);
        boolean boolean46 = variance35.isBiasCorrected();
        double[] doubleArray53 = new double[] { (short) 0, 1.0d, 1L, 0.0d, (-1.0d), 10L };
        double double54 = variance35.evaluate(doubleArray53);
        org.apache.commons.math.stat.descriptive.moment.Variance variance56 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray63 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double64 = variance56.evaluate(doubleArray63);
        variance56.setBiasCorrected(true);
        boolean boolean67 = variance56.isBiasCorrected();
        double[] doubleArray74 = new double[] { (short) 0, 1.0d, 1L, 0.0d, (-1.0d), 10L };
        double double75 = variance56.evaluate(doubleArray74);
        double double78 = variance35.evaluate(doubleArray74, (int) (byte) 1, 0);
        variance35.setBiasCorrected(true);
        boolean boolean81 = variance25.equals((java.lang.Object) true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance83 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray90 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double91 = variance83.evaluate(doubleArray90);
        double double93 = variance25.evaluate(doubleArray90, 874596.4092824734d);
        double double95 = variance19.evaluate(doubleArray90, (double) 100L);
        variance1.incrementAll(doubleArray90);
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 2168.222222222222d + "'", double9 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 0L + "'", long10 == 0L);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.0d + "'", double15 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 2168.222222222222d + "'", double33 == 2168.222222222222d);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 2168.222222222222d + "'", double43 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray53), "[0.0, 1.0, 1.0, 0.0, -1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 16.566666666666663d + "'", double54 == 16.566666666666663d);
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 2168.222222222222d + "'", double64 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray74), "[0.0, 1.0, 1.0, 0.0, -1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double75 + "' != '" + 16.566666666666663d + "'", double75 == 16.566666666666663d);
        org.junit.Assert.assertTrue(Double.isNaN(double78));
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertNotNull(doubleArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray90), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double91 + "' != '" + 2168.222222222222d + "'", double91 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + double93 + "' != '" + 2168.2220052083335d + "'", double93 == 2168.2220052083335d);
        org.junit.Assert.assertTrue("'" + double95 + "' != '" + 2168.222222222222d + "'", double95 == 2168.222222222222d);
    }

    @Test
    public void test1035() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1035");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(true);
        double double2 = variance1.getResult();
        double double3 = variance1.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance5 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray12 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double13 = variance5.evaluate(doubleArray12);
        variance5.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance17 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray24 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double25 = variance17.evaluate(doubleArray24);
        variance5.incrementAll(doubleArray24);
        variance5.clear();
        variance5.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance31 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray38 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double39 = variance31.evaluate(doubleArray38);
        variance31.setBiasCorrected(true);
        long long42 = variance31.getN();
        long long43 = variance31.getN();
        boolean boolean45 = variance31.equals((java.lang.Object) 16.566666666666663d);
        boolean boolean47 = variance31.equals((java.lang.Object) (short) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance49 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray56 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double57 = variance49.evaluate(doubleArray56);
        variance49.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance61 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray68 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double69 = variance61.evaluate(doubleArray68);
        variance49.incrementAll(doubleArray68);
        double double71 = variance31.evaluate(doubleArray68);
        double double73 = variance5.evaluate(doubleArray68, (double) (byte) 100);
        double double75 = variance1.evaluate(doubleArray68, (double) (-1));
        boolean boolean76 = variance1.isBiasCorrected();
        variance1.clear();
        boolean boolean78 = variance1.isBiasCorrected();
        boolean boolean79 = variance1.isBiasCorrected();
        org.junit.Assert.assertTrue(Double.isNaN(double2));
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 2168.222222222222d + "'", double13 == 2168.222222222222d);
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 2168.222222222222d + "'", double25 == 2168.222222222222d);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 2168.222222222222d + "'", double39 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + long42 + "' != '" + 0L + "'", long42 == 0L);
        org.junit.Assert.assertTrue("'" + long43 + "' != '" + 0L + "'", long43 == 0L);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 2168.222222222222d + "'", double57 == 2168.222222222222d);
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 2168.222222222222d + "'", double69 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + 2601.866666666667d + "'", double71 == 2601.866666666667d);
        org.junit.Assert.assertTrue("'" + double73 + "' != '" + 2168.222222222222d + "'", double73 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + double75 + "' != '" + 2601.8666666666663d + "'", double75 == 2601.8666666666663d);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
    }

    @Test
    public void test1036() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1036");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray8 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double9 = variance1.evaluate(doubleArray8);
        variance1.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance13 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray20 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double21 = variance13.evaluate(doubleArray20);
        variance1.incrementAll(doubleArray20);
        variance1.clear();
        variance1.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance27 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray34 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double35 = variance27.evaluate(doubleArray34);
        variance27.setBiasCorrected(true);
        long long38 = variance27.getN();
        long long39 = variance27.getN();
        boolean boolean41 = variance27.equals((java.lang.Object) 16.566666666666663d);
        boolean boolean43 = variance27.equals((java.lang.Object) (short) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance45 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray52 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double53 = variance45.evaluate(doubleArray52);
        variance45.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance57 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray64 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double65 = variance57.evaluate(doubleArray64);
        variance45.incrementAll(doubleArray64);
        double double67 = variance27.evaluate(doubleArray64);
        double double69 = variance1.evaluate(doubleArray64, (double) (byte) 100);
        variance1.increment((double) (short) 100);
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 2168.222222222222d + "'", double9 == 2168.222222222222d);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 2168.222222222222d + "'", double21 == 2168.222222222222d);
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 2168.222222222222d + "'", double35 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + long38 + "' != '" + 0L + "'", long38 == 0L);
        org.junit.Assert.assertTrue("'" + long39 + "' != '" + 0L + "'", long39 == 0L);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 2168.222222222222d + "'", double53 == 2168.222222222222d);
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 2168.222222222222d + "'", double65 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 2601.866666666667d + "'", double67 == 2601.866666666667d);
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 2168.222222222222d + "'", double69 == 2168.222222222222d);
    }

    @Test
    public void test1037() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1037");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray8 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double9 = variance1.evaluate(doubleArray8);
        variance1.setBiasCorrected(true);
        boolean boolean12 = variance1.isBiasCorrected();
        double[] doubleArray19 = new double[] { (short) 0, 1.0d, 1L, 0.0d, (-1.0d), 10L };
        double double20 = variance1.evaluate(doubleArray19);
        org.apache.commons.math.stat.descriptive.moment.Variance variance22 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray29 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double30 = variance22.evaluate(doubleArray29);
        variance22.setBiasCorrected(true);
        boolean boolean33 = variance22.isBiasCorrected();
        double[] doubleArray40 = new double[] { (short) 0, 1.0d, 1L, 0.0d, (-1.0d), 10L };
        double double41 = variance22.evaluate(doubleArray40);
        double double44 = variance1.evaluate(doubleArray40, (int) (byte) 1, 0);
        variance1.setBiasCorrected(true);
        variance1.clear();
        variance1.clear();
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 2168.222222222222d + "'", double9 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[0.0, 1.0, 1.0, 0.0, -1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 16.566666666666663d + "'", double20 == 16.566666666666663d);
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 2168.222222222222d + "'", double30 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[0.0, 1.0, 1.0, 0.0, -1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 16.566666666666663d + "'", double41 == 16.566666666666663d);
        org.junit.Assert.assertTrue(Double.isNaN(double44));
    }

    @Test
    public void test1038() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1038");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance3 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray10 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double11 = variance3.evaluate(doubleArray10);
        variance3.setBiasCorrected(true);
        long long14 = variance3.getN();
        long long15 = variance3.getN();
        double double16 = variance3.getResult();
        variance3.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance19 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray26 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double27 = variance19.evaluate(doubleArray26);
        double[] doubleArray31 = new double[] { (byte) 1, (byte) 100, 1L };
        double double32 = variance19.evaluate(doubleArray31);
        org.apache.commons.math.stat.descriptive.moment.Variance variance34 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray41 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double42 = variance34.evaluate(doubleArray41);
        variance34.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance46 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray53 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double54 = variance46.evaluate(doubleArray53);
        variance34.incrementAll(doubleArray53);
        variance19.incrementAll(doubleArray53);
        double double57 = variance3.evaluate(doubleArray53);
        variance1.incrementAll(doubleArray53);
        variance1.clear();
        boolean boolean60 = variance1.isBiasCorrected();
        boolean boolean61 = variance1.isBiasCorrected();
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 2168.222222222222d + "'", double11 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 0L + "'", long14 == 0L);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 0L + "'", long15 == 0L);
        org.junit.Assert.assertTrue(Double.isNaN(double16));
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 2168.222222222222d + "'", double27 == 2168.222222222222d);
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[1.0, 100.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 2178.0d + "'", double32 == 2178.0d);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 2168.222222222222d + "'", double42 == 2168.222222222222d);
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray53), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 2168.222222222222d + "'", double54 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 2601.866666666667d + "'", double57 == 2601.866666666667d);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
    }

    @Test
    public void test1039() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1039");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray8 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double9 = variance1.evaluate(doubleArray8);
        variance1.clear();
        variance1.setBiasCorrected(true);
        double double13 = variance1.getResult();
        variance1.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance16 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray23 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double24 = variance16.evaluate(doubleArray23);
        variance16.clear();
        variance16.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance29 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance29.clear();
        double double31 = variance29.getResult();
        double[] doubleArray36 = new double[] { (-1), 2168.222222222222d, 16.566666666418314d, 10.0d };
        variance29.incrementAll(doubleArray36);
        boolean boolean38 = variance16.equals((java.lang.Object) doubleArray36);
        variance16.setBiasCorrected(false);
        boolean boolean41 = variance16.isBiasCorrected();
        org.apache.commons.math.stat.descriptive.moment.Variance variance43 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray50 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double51 = variance43.evaluate(doubleArray50);
        variance43.clear();
        variance43.setBiasCorrected(true);
        double double55 = variance43.getResult();
        variance43.clear();
        double double57 = variance43.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance59 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray66 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double67 = variance59.evaluate(doubleArray66);
        variance59.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance71 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance71.clear();
        double double73 = variance71.getResult();
        double[] doubleArray78 = new double[] { (-1), 2168.222222222222d, 16.566666666418314d, 10.0d };
        variance71.incrementAll(doubleArray78);
        variance59.incrementAll(doubleArray78);
        variance43.incrementAll(doubleArray78);
        double double83 = variance16.evaluate(doubleArray78, (double) 0.0f);
        variance1.incrementAll(doubleArray78);
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 2168.222222222222d + "'", double9 == 2168.222222222222d);
        org.junit.Assert.assertTrue(Double.isNaN(double13));
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 2168.222222222222d + "'", double24 == 2168.222222222222d);
        org.junit.Assert.assertTrue(Double.isNaN(double31));
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[-1.0, 2168.222222222222, 16.566666666418314, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 2168.222222222222d + "'", double51 == 2168.222222222222d);
        org.junit.Assert.assertTrue(Double.isNaN(double55));
        org.junit.Assert.assertTrue(Double.isNaN(double57));
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 2168.222222222222d + "'", double67 == 2168.222222222222d);
        org.junit.Assert.assertTrue(Double.isNaN(double73));
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray78), "[-1.0, 2168.222222222222, 16.566666666418314, 10.0]");
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + 874596.4092824734d + "'", double83 == 874596.4092824734d);
    }

    @Test
    public void test1040() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1040");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(true);
        double double2 = variance1.getResult();
        double double3 = variance1.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance5 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray12 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double13 = variance5.evaluate(doubleArray12);
        variance5.clear();
        variance5.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance18 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance18.clear();
        double double20 = variance18.getResult();
        double[] doubleArray25 = new double[] { (-1), 2168.222222222222d, 16.566666666418314d, 10.0d };
        variance18.incrementAll(doubleArray25);
        boolean boolean27 = variance5.equals((java.lang.Object) doubleArray25);
        double double29 = variance1.evaluate(doubleArray25, (double) (-1.0f));
        long long30 = variance1.getN();
        variance1.clear();
        long long32 = variance1.getN();
        variance1.clear();
        org.junit.Assert.assertTrue(Double.isNaN(double2));
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 2168.222222222222d + "'", double13 == 2168.222222222222d);
        org.junit.Assert.assertTrue(Double.isNaN(double20));
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[-1.0, 2168.222222222222, 16.566666666418314, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 1166128.5457099646d + "'", double29 == 1166128.5457099646d);
        org.junit.Assert.assertTrue("'" + long30 + "' != '" + 0L + "'", long30 == 0L);
        org.junit.Assert.assertTrue("'" + long32 + "' != '" + 0L + "'", long32 == 0L);
    }

    @Test
    public void test1041() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1041");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray8 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double9 = variance1.evaluate(doubleArray8);
        long long10 = variance1.getN();
        variance1.increment(874596.4092824734d);
        variance1.setBiasCorrected(false);
        boolean boolean15 = variance1.isBiasCorrected();
        org.apache.commons.math.stat.descriptive.moment.Variance variance17 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray24 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double25 = variance17.evaluate(doubleArray24);
        variance17.setBiasCorrected(true);
        boolean boolean28 = variance17.isBiasCorrected();
        double[] doubleArray35 = new double[] { (short) 0, 1.0d, 1L, 0.0d, (-1.0d), 10L };
        double double36 = variance17.evaluate(doubleArray35);
        boolean boolean38 = variance17.equals((java.lang.Object) 10.0d);
        boolean boolean39 = variance17.isBiasCorrected();
        org.apache.commons.math.stat.descriptive.moment.Variance variance41 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        boolean boolean42 = variance17.equals((java.lang.Object) false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance44 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray51 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double52 = variance44.evaluate(doubleArray51);
        variance44.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance56 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray63 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double64 = variance56.evaluate(doubleArray63);
        variance44.incrementAll(doubleArray63);
        double double67 = variance17.evaluate(doubleArray63, (double) 100.0f);
        variance17.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance70 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray77 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double78 = variance70.evaluate(doubleArray77);
        variance70.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance82 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray89 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double90 = variance82.evaluate(doubleArray89);
        variance70.incrementAll(doubleArray89);
        variance17.incrementAll(doubleArray89);
        double double94 = variance1.evaluate(doubleArray89, 16.566666666667153d);
        variance1.setBiasCorrected(false);
        java.lang.Class<?> wildcardClass97 = variance1.getClass();
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 2168.222222222222d + "'", double9 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 0L + "'", long10 == 0L);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 2168.222222222222d + "'", double25 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[0.0, 1.0, 1.0, 0.0, -1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 16.566666666666663d + "'", double36 == 16.566666666666663d);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 2168.222222222222d + "'", double52 == 2168.222222222222d);
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 2168.222222222222d + "'", double64 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 2601.8666666666663d + "'", double67 == 2601.8666666666663d);
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray77), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double78 + "' != '" + 2168.222222222222d + "'", double78 == 2168.222222222222d);
        org.junit.Assert.assertNotNull(doubleArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray89), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double90 + "' != '" + 2168.222222222222d + "'", double90 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + double94 + "' != '" + 2168.2222222222226d + "'", double94 == 2168.2222222222226d);
        org.junit.Assert.assertNotNull(wildcardClass97);
    }

    @Test
    public void test1042() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1042");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment1 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance2 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment1);
        variance2.clear();
        variance2.setBiasCorrected(false);
        boolean boolean6 = variance2.isBiasCorrected();
        // The following exception was thrown during execution in test generation
        try {
            double double7 = variance2.getResult();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    }

    @Test
    public void test1043() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1043");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(true);
        variance1.increment(16.566666666418314d);
        variance1.increment(16.566666666666666d);
        org.apache.commons.math.stat.descriptive.moment.Variance variance7 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray14 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double15 = variance7.evaluate(doubleArray14);
        variance7.setBiasCorrected(true);
        boolean boolean18 = variance7.isBiasCorrected();
        double[] doubleArray25 = new double[] { (short) 0, 1.0d, 1L, 0.0d, (-1.0d), 10L };
        double double26 = variance7.evaluate(doubleArray25);
        boolean boolean28 = variance7.equals((java.lang.Object) 10.0d);
        boolean boolean29 = variance7.isBiasCorrected();
        org.apache.commons.math.stat.descriptive.moment.Variance variance31 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        boolean boolean32 = variance7.equals((java.lang.Object) false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance34 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray41 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double42 = variance34.evaluate(doubleArray41);
        variance34.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance46 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray53 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double54 = variance46.evaluate(doubleArray53);
        variance34.incrementAll(doubleArray53);
        double double57 = variance7.evaluate(doubleArray53, (double) 100.0f);
        variance7.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance60 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray67 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double68 = variance60.evaluate(doubleArray67);
        variance60.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance72 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray79 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double80 = variance72.evaluate(doubleArray79);
        variance60.incrementAll(doubleArray79);
        variance7.incrementAll(doubleArray79);
        // The following exception was thrown during execution in test generation
        try {
            variance1.incrementAll(doubleArray79, (int) (byte) 10, (int) '4');
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: begin + length > values.length");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 2168.222222222222d + "'", double15 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[0.0, 1.0, 1.0, 0.0, -1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 16.566666666666663d + "'", double26 == 16.566666666666663d);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 2168.222222222222d + "'", double42 == 2168.222222222222d);
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray53), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 2168.222222222222d + "'", double54 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 2601.8666666666663d + "'", double57 == 2601.8666666666663d);
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 2168.222222222222d + "'", double68 == 2168.222222222222d);
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray79), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double80 + "' != '" + 2168.222222222222d + "'", double80 == 2168.222222222222d);
    }

    @Test
    public void test1044() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1044");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment1 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance2 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment1);
        double[] doubleArray3 = new double[] {};
        double double6 = variance2.evaluate(doubleArray3, 0, 0);
        boolean boolean8 = variance2.equals((java.lang.Object) 10.0f);
        variance2.clear();
        // The following exception was thrown during execution in test generation
        try {
            long long10 = variance2.getN();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
    }

    @Test
    public void test1045() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1045");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray8 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double9 = variance1.evaluate(doubleArray8);
        variance1.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance13 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance13.clear();
        double double15 = variance13.getResult();
        double[] doubleArray20 = new double[] { (-1), 2168.222222222222d, 16.566666666418314d, 10.0d };
        variance13.incrementAll(doubleArray20);
        variance1.incrementAll(doubleArray20);
        long long23 = variance1.getN();
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 2168.222222222222d + "'", double9 == 2168.222222222222d);
        org.junit.Assert.assertTrue(Double.isNaN(double15));
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[-1.0, 2168.222222222222, 16.566666666418314, 10.0]");
        org.junit.Assert.assertTrue("'" + long23 + "' != '" + 4L + "'", long23 == 4L);
    }

    @Test
    public void test1046() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1046");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray8 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double9 = variance1.evaluate(doubleArray8);
        variance1.setBiasCorrected(true);
        long long12 = variance1.getN();
        long long13 = variance1.getN();
        boolean boolean14 = variance1.isBiasCorrected();
        org.apache.commons.math.stat.descriptive.moment.Variance variance16 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray23 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double24 = variance16.evaluate(doubleArray23);
        double[] doubleArray28 = new double[] { (byte) 1, (byte) 100, 1L };
        double double29 = variance16.evaluate(doubleArray28);
        variance1.incrementAll(doubleArray28, (int) (short) 1, 0);
        boolean boolean34 = variance1.equals((java.lang.Object) 1);
        double double35 = variance1.getResult();
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 2168.222222222222d + "'", double9 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 0L + "'", long12 == 0L);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 0L + "'", long13 == 0L);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 2168.222222222222d + "'", double24 == 2168.222222222222d);
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[1.0, 100.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 2178.0d + "'", double29 == 2178.0d);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double35));
    }

    @Test
    public void test1047() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1047");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray8 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double9 = variance1.evaluate(doubleArray8);
        variance1.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance13 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray20 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double21 = variance13.evaluate(doubleArray20);
        variance13.setBiasCorrected(true);
        boolean boolean24 = variance13.isBiasCorrected();
        double[] doubleArray31 = new double[] { (short) 0, 1.0d, 1L, 0.0d, (-1.0d), 10L };
        double double32 = variance13.evaluate(doubleArray31);
        double double35 = variance1.evaluate(doubleArray31, (int) (byte) 1, (int) (byte) 0);
        org.apache.commons.math.stat.descriptive.moment.Variance variance37 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance39 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray46 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double47 = variance39.evaluate(doubleArray46);
        variance39.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance51 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray58 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double59 = variance51.evaluate(doubleArray58);
        variance51.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance63 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray70 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double71 = variance63.evaluate(doubleArray70);
        variance63.setBiasCorrected(true);
        boolean boolean74 = variance63.isBiasCorrected();
        double[] doubleArray81 = new double[] { (short) 0, 1.0d, 1L, 0.0d, (-1.0d), 10L };
        double double82 = variance63.evaluate(doubleArray81);
        double double85 = variance51.evaluate(doubleArray81, (int) (byte) 1, (int) (byte) 0);
        variance39.incrementAll(doubleArray81, (int) (byte) 1, 1);
        double double89 = variance37.evaluate(doubleArray81);
        double double90 = variance1.evaluate(doubleArray81);
        boolean boolean91 = variance1.isBiasCorrected();
        boolean boolean92 = variance1.isBiasCorrected();
        variance1.increment((double) 'a');
        double double95 = variance1.getResult();
        variance1.increment((double) 0.0f);
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 2168.222222222222d + "'", double9 == 2168.222222222222d);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 2168.222222222222d + "'", double21 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[0.0, 1.0, 1.0, 0.0, -1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 16.566666666666663d + "'", double32 == 16.566666666666663d);
        org.junit.Assert.assertTrue(Double.isNaN(double35));
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 2168.222222222222d + "'", double47 == 2168.222222222222d);
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 2168.222222222222d + "'", double59 == 2168.222222222222d);
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + 2168.222222222222d + "'", double71 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray81), "[0.0, 1.0, 1.0, 0.0, -1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double82 + "' != '" + 16.566666666666663d + "'", double82 == 16.566666666666663d);
        org.junit.Assert.assertTrue(Double.isNaN(double85));
        org.junit.Assert.assertTrue("'" + double89 + "' != '" + 13.805555555555552d + "'", double89 == 13.805555555555552d);
        org.junit.Assert.assertTrue("'" + double90 + "' != '" + 16.566666666666663d + "'", double90 == 16.566666666666663d);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + true + "'", boolean91 == true);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + true + "'", boolean92 == true);
        org.junit.Assert.assertTrue("'" + double95 + "' != '" + 0.0d + "'", double95 == 0.0d);
    }

    @Test
    public void test1048() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1048");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray8 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double9 = variance1.evaluate(doubleArray8);
        variance1.setBiasCorrected(true);
        boolean boolean12 = variance1.isBiasCorrected();
        org.apache.commons.math.stat.descriptive.moment.Variance variance14 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray21 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double22 = variance14.evaluate(doubleArray21);
        variance14.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance26 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray33 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double34 = variance26.evaluate(doubleArray33);
        variance26.setBiasCorrected(true);
        boolean boolean37 = variance26.isBiasCorrected();
        double[] doubleArray44 = new double[] { (short) 0, 1.0d, 1L, 0.0d, (-1.0d), 10L };
        double double45 = variance26.evaluate(doubleArray44);
        double double48 = variance14.evaluate(doubleArray44, (int) (byte) 1, (int) (byte) 0);
        double double51 = variance1.evaluate(doubleArray44, (int) (byte) 1, 0);
        variance1.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance55 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray62 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double63 = variance55.evaluate(doubleArray62);
        variance55.setBiasCorrected(true);
        boolean boolean66 = variance55.isBiasCorrected();
        double[] doubleArray73 = new double[] { (short) 0, 1.0d, 1L, 0.0d, (-1.0d), 10L };
        double double74 = variance55.evaluate(doubleArray73);
        double double75 = variance55.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance77 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance77.clear();
        double double79 = variance77.getResult();
        double[] doubleArray84 = new double[] { (-1), 2168.222222222222d, 16.566666666418314d, 10.0d };
        variance77.incrementAll(doubleArray84);
        double double86 = variance55.evaluate(doubleArray84);
        boolean boolean87 = variance1.equals((java.lang.Object) variance55);
        variance55.setBiasCorrected(false);
        variance55.clear();
        variance55.setBiasCorrected(true);
        long long93 = variance55.getN();
        variance55.increment((double) (byte) 1);
        double[] doubleArray96 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double98 = variance55.evaluate(doubleArray96, (double) (byte) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 2168.222222222222d + "'", double9 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 2168.222222222222d + "'", double22 == 2168.222222222222d);
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 2168.222222222222d + "'", double34 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[0.0, 1.0, 1.0, 0.0, -1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 16.566666666666663d + "'", double45 == 16.566666666666663d);
        org.junit.Assert.assertTrue(Double.isNaN(double48));
        org.junit.Assert.assertTrue(Double.isNaN(double51));
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 2168.222222222222d + "'", double63 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[0.0, 1.0, 1.0, 0.0, -1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double74 + "' != '" + 16.566666666666663d + "'", double74 == 16.566666666666663d);
        org.junit.Assert.assertTrue(Double.isNaN(double75));
        org.junit.Assert.assertTrue(Double.isNaN(double79));
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray84), "[-1.0, 2168.222222222222, 16.566666666418314, 10.0]");
        org.junit.Assert.assertTrue("'" + double86 + "' != '" + 1166128.5457099646d + "'", double86 == 1166128.5457099646d);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + true + "'", boolean87 == true);
        org.junit.Assert.assertTrue("'" + long93 + "' != '" + 0L + "'", long93 == 0L);
    }

    @Test
    public void test1049() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1049");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray8 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double9 = variance1.evaluate(doubleArray8);
        variance1.setBiasCorrected(true);
        long long12 = variance1.getN();
        variance1.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance15 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray22 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double23 = variance15.evaluate(doubleArray22);
        double double24 = variance1.evaluate(doubleArray22);
        org.apache.commons.math.stat.descriptive.moment.Variance variance26 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray33 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double34 = variance26.evaluate(doubleArray33);
        variance26.setBiasCorrected(true);
        variance26.increment((double) (byte) 0);
        double[] doubleArray41 = new double[] { 'a', 100L };
        double double43 = variance26.evaluate(doubleArray41, 0.0d);
        long long44 = variance26.getN();
        boolean boolean45 = variance26.isBiasCorrected();
        long long46 = variance26.getN();
        double double47 = variance26.getResult();
        double double48 = variance26.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance50 = new org.apache.commons.math.stat.descriptive.moment.Variance(true);
        double double51 = variance50.getResult();
        double double52 = variance50.getResult();
        variance50.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance55 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray62 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double63 = variance55.evaluate(doubleArray62);
        variance55.setBiasCorrected(true);
        long long66 = variance55.getN();
        long long67 = variance55.getN();
        boolean boolean68 = variance55.isBiasCorrected();
        org.apache.commons.math.stat.descriptive.moment.Variance variance70 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray77 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double78 = variance70.evaluate(doubleArray77);
        double[] doubleArray82 = new double[] { (byte) 1, (byte) 100, 1L };
        double double83 = variance70.evaluate(doubleArray82);
        variance55.incrementAll(doubleArray82, (int) (short) 1, 0);
        variance50.incrementAll(doubleArray82);
        double double88 = variance26.evaluate(doubleArray82);
        variance1.incrementAll(doubleArray82);
        variance1.clear();
        double double91 = variance1.getResult();
        long long92 = variance1.getN();
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 2168.222222222222d + "'", double9 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 0L + "'", long12 == 0L);
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 2168.222222222222d + "'", double23 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 2601.866666666667d + "'", double24 == 2601.866666666667d);
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 2168.222222222222d + "'", double34 == 2168.222222222222d);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[97.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 4.5d + "'", double43 == 4.5d);
        org.junit.Assert.assertTrue("'" + long44 + "' != '" + 1L + "'", long44 == 1L);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + long46 + "' != '" + 1L + "'", long46 == 1L);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 0.0d + "'", double47 == 0.0d);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 0.0d + "'", double48 == 0.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double51));
        org.junit.Assert.assertTrue(Double.isNaN(double52));
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 2168.222222222222d + "'", double63 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + long66 + "' != '" + 0L + "'", long66 == 0L);
        org.junit.Assert.assertTrue("'" + long67 + "' != '" + 0L + "'", long67 == 0L);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray77), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double78 + "' != '" + 2168.222222222222d + "'", double78 == 2168.222222222222d);
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray82), "[1.0, 100.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + 2178.0d + "'", double83 == 2178.0d);
        org.junit.Assert.assertTrue("'" + double88 + "' != '" + 3267.0d + "'", double88 == 3267.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double91));
        org.junit.Assert.assertTrue("'" + long92 + "' != '" + 0L + "'", long92 == 0L);
    }

    @Test
    public void test1050() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1050");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray8 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double9 = variance1.evaluate(doubleArray8);
        variance1.setBiasCorrected(true);
        boolean boolean12 = variance1.isBiasCorrected();
        double[] doubleArray19 = new double[] { (short) 0, 1.0d, 1L, 0.0d, (-1.0d), 10L };
        double double20 = variance1.evaluate(doubleArray19);
        org.apache.commons.math.stat.descriptive.moment.Variance variance22 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray29 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double30 = variance22.evaluate(doubleArray29);
        variance22.setBiasCorrected(true);
        boolean boolean33 = variance22.isBiasCorrected();
        double[] doubleArray40 = new double[] { (short) 0, 1.0d, 1L, 0.0d, (-1.0d), 10L };
        double double41 = variance22.evaluate(doubleArray40);
        double double44 = variance1.evaluate(doubleArray40, (int) (byte) 1, 0);
        variance1.setBiasCorrected(true);
        variance1.setBiasCorrected(true);
        double double49 = variance1.getResult();
        boolean boolean50 = variance1.isBiasCorrected();
        variance1.setBiasCorrected(true);
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 2168.222222222222d + "'", double9 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[0.0, 1.0, 1.0, 0.0, -1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 16.566666666666663d + "'", double20 == 16.566666666666663d);
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 2168.222222222222d + "'", double30 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[0.0, 1.0, 1.0, 0.0, -1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 16.566666666666663d + "'", double41 == 16.566666666666663d);
        org.junit.Assert.assertTrue(Double.isNaN(double44));
        org.junit.Assert.assertTrue(Double.isNaN(double49));
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
    }

    @Test
    public void test1051() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1051");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray8 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double9 = variance1.evaluate(doubleArray8);
        org.apache.commons.math.stat.descriptive.moment.Variance variance11 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray18 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double19 = variance11.evaluate(doubleArray18);
        variance11.setBiasCorrected(true);
        boolean boolean22 = variance11.isBiasCorrected();
        double[] doubleArray29 = new double[] { (short) 0, 1.0d, 1L, 0.0d, (-1.0d), 10L };
        double double30 = variance11.evaluate(doubleArray29);
        org.apache.commons.math.stat.descriptive.moment.Variance variance32 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray39 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double40 = variance32.evaluate(doubleArray39);
        variance32.setBiasCorrected(true);
        boolean boolean43 = variance32.isBiasCorrected();
        double[] doubleArray50 = new double[] { (short) 0, 1.0d, 1L, 0.0d, (-1.0d), 10L };
        double double51 = variance32.evaluate(doubleArray50);
        double double54 = variance11.evaluate(doubleArray50, (int) (byte) 1, 0);
        variance11.setBiasCorrected(true);
        boolean boolean57 = variance1.equals((java.lang.Object) true);
        java.lang.Class<?> wildcardClass58 = variance1.getClass();
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 2168.222222222222d + "'", double9 == 2168.222222222222d);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 2168.222222222222d + "'", double19 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[0.0, 1.0, 1.0, 0.0, -1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 16.566666666666663d + "'", double30 == 16.566666666666663d);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 2168.222222222222d + "'", double40 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[0.0, 1.0, 1.0, 0.0, -1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 16.566666666666663d + "'", double51 == 16.566666666666663d);
        org.junit.Assert.assertTrue(Double.isNaN(double54));
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(wildcardClass58);
    }

    @Test
    public void test1052() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1052");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray8 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double9 = variance1.evaluate(doubleArray8);
        variance1.setBiasCorrected(true);
        boolean boolean12 = variance1.isBiasCorrected();
        double[] doubleArray19 = new double[] { (short) 0, 1.0d, 1L, 0.0d, (-1.0d), 10L };
        double double20 = variance1.evaluate(doubleArray19);
        double double21 = variance1.getResult();
        variance1.setBiasCorrected(true);
        double double24 = variance1.getResult();
        boolean boolean25 = variance1.isBiasCorrected();
        variance1.increment(16.56666666666674d);
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 2168.222222222222d + "'", double9 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[0.0, 1.0, 1.0, 0.0, -1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 16.566666666666663d + "'", double20 == 16.566666666666663d);
        org.junit.Assert.assertTrue(Double.isNaN(double21));
        org.junit.Assert.assertTrue(Double.isNaN(double24));
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
    }

    @Test
    public void test1053() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1053");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance1.clear();
        double double3 = variance1.getResult();
        double[] doubleArray8 = new double[] { (-1), 2168.222222222222d, 16.566666666418314d, 10.0d };
        variance1.incrementAll(doubleArray8);
        org.apache.commons.math.stat.descriptive.moment.Variance variance11 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray18 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double19 = variance11.evaluate(doubleArray18);
        variance11.setBiasCorrected(true);
        boolean boolean22 = variance11.isBiasCorrected();
        double[] doubleArray29 = new double[] { (short) 0, 1.0d, 1L, 0.0d, (-1.0d), 10L };
        double double30 = variance11.evaluate(doubleArray29);
        double double31 = variance11.getResult();
        variance11.setBiasCorrected(true);
        boolean boolean34 = variance11.isBiasCorrected();
        variance11.setBiasCorrected(false);
        variance11.increment(2601.866666666667d);
        org.apache.commons.math.stat.descriptive.moment.Variance variance40 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray47 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double48 = variance40.evaluate(doubleArray47);
        variance40.clear();
        variance40.setBiasCorrected(true);
        double double52 = variance40.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance54 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray61 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double62 = variance54.evaluate(doubleArray61);
        double double63 = variance40.evaluate(doubleArray61);
        double double64 = variance11.evaluate(doubleArray61);
        double double65 = variance1.evaluate(doubleArray61);
        long long66 = variance1.getN();
        boolean boolean67 = variance1.isBiasCorrected();
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-1.0, 2168.222222222222, 16.566666666418314, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 2168.222222222222d + "'", double19 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[0.0, 1.0, 1.0, 0.0, -1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 16.566666666666663d + "'", double30 == 16.566666666666663d);
        org.junit.Assert.assertTrue(Double.isNaN(double31));
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 2168.222222222222d + "'", double48 == 2168.222222222222d);
        org.junit.Assert.assertTrue(Double.isNaN(double52));
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 2168.222222222222d + "'", double62 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 2601.866666666667d + "'", double63 == 2601.866666666667d);
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 2168.222222222222d + "'", double64 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 2168.222222222222d + "'", double65 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + long66 + "' != '" + 0L + "'", long66 == 0L);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
    }

    @Test
    public void test1054() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1054");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray8 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double9 = variance1.evaluate(doubleArray8);
        variance1.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance13 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray20 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double21 = variance13.evaluate(doubleArray20);
        variance1.incrementAll(doubleArray20);
        variance1.clear();
        boolean boolean24 = variance1.isBiasCorrected();
        variance1.increment(2601.866666666667d);
        org.apache.commons.math.stat.descriptive.moment.Variance variance28 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray35 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double36 = variance28.evaluate(doubleArray35);
        variance28.setBiasCorrected(true);
        boolean boolean39 = variance28.isBiasCorrected();
        java.lang.Class<?> wildcardClass40 = variance28.getClass();
        boolean boolean41 = variance1.equals((java.lang.Object) wildcardClass40);
        long long42 = variance1.getN();
        variance1.increment(16.56666666666674d);
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 2168.222222222222d + "'", double9 == 2168.222222222222d);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 2168.222222222222d + "'", double21 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 2168.222222222222d + "'", double36 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + long42 + "' != '" + 1L + "'", long42 == 1L);
    }

    @Test
    public void test1055() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1055");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray8 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double9 = variance1.evaluate(doubleArray8);
        long long10 = variance1.getN();
        variance1.increment(874596.4092824734d);
        variance1.increment((double) (byte) 100);
        org.apache.commons.math.stat.descriptive.moment.Variance variance16 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray23 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double24 = variance16.evaluate(doubleArray23);
        variance16.setBiasCorrected(true);
        variance16.increment((double) (byte) 0);
        double[] doubleArray31 = new double[] { 'a', 100L };
        double double33 = variance16.evaluate(doubleArray31, 0.0d);
        org.apache.commons.math.stat.descriptive.moment.Variance variance35 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray42 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double43 = variance35.evaluate(doubleArray42);
        double[] doubleArray47 = new double[] { (byte) 1, (byte) 100, 1L };
        double double48 = variance35.evaluate(doubleArray47);
        org.apache.commons.math.stat.descriptive.moment.Variance variance50 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray57 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double58 = variance50.evaluate(doubleArray57);
        variance50.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance62 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray69 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double70 = variance62.evaluate(doubleArray69);
        variance50.incrementAll(doubleArray69);
        variance35.incrementAll(doubleArray69);
        double double74 = variance16.evaluate(doubleArray69, (double) 1L);
        double double76 = variance1.evaluate(doubleArray69, (double) 1);
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 2168.222222222222d + "'", double9 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 0L + "'", long10 == 0L);
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 2168.222222222222d + "'", double24 == 2168.222222222222d);
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[97.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 4.5d + "'", double33 == 4.5d);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 2168.222222222222d + "'", double43 == 2168.222222222222d);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[1.0, 100.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 2178.0d + "'", double48 == 2178.0d);
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 2168.222222222222d + "'", double58 == 2168.222222222222d);
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + 2168.222222222222d + "'", double70 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + double74 + "' != '" + 2601.8666666666663d + "'", double74 == 2601.8666666666663d);
        org.junit.Assert.assertTrue("'" + double76 + "' != '" + 2168.222222222222d + "'", double76 == 2168.222222222222d);
    }

    @Test
    public void test1056() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1056");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray8 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double9 = variance1.evaluate(doubleArray8);
        variance1.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance13 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray20 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double21 = variance13.evaluate(doubleArray20);
        variance1.incrementAll(doubleArray20);
        variance1.clear();
        variance1.setBiasCorrected(false);
        variance1.setBiasCorrected(false);
        variance1.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance31 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray38 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double39 = variance31.evaluate(doubleArray38);
        variance31.setBiasCorrected(true);
        boolean boolean42 = variance31.isBiasCorrected();
        org.apache.commons.math.stat.descriptive.moment.Variance variance44 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray51 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double52 = variance44.evaluate(doubleArray51);
        variance44.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance56 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray63 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double64 = variance56.evaluate(doubleArray63);
        variance56.setBiasCorrected(true);
        boolean boolean67 = variance56.isBiasCorrected();
        double[] doubleArray74 = new double[] { (short) 0, 1.0d, 1L, 0.0d, (-1.0d), 10L };
        double double75 = variance56.evaluate(doubleArray74);
        double double78 = variance44.evaluate(doubleArray74, (int) (byte) 1, (int) (byte) 0);
        double double81 = variance31.evaluate(doubleArray74, (int) (byte) 1, 0);
        org.apache.commons.math.stat.descriptive.moment.Variance variance83 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray90 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double91 = variance83.evaluate(doubleArray90);
        variance83.clear();
        variance83.setBiasCorrected(true);
        boolean boolean95 = variance31.equals((java.lang.Object) variance83);
        boolean boolean96 = variance1.equals((java.lang.Object) variance83);
        double double97 = variance83.getResult();
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 2168.222222222222d + "'", double9 == 2168.222222222222d);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 2168.222222222222d + "'", double21 == 2168.222222222222d);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 2168.222222222222d + "'", double39 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 2168.222222222222d + "'", double52 == 2168.222222222222d);
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 2168.222222222222d + "'", double64 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray74), "[0.0, 1.0, 1.0, 0.0, -1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double75 + "' != '" + 16.566666666666663d + "'", double75 == 16.566666666666663d);
        org.junit.Assert.assertTrue(Double.isNaN(double78));
        org.junit.Assert.assertTrue(Double.isNaN(double81));
        org.junit.Assert.assertNotNull(doubleArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray90), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double91 + "' != '" + 2168.222222222222d + "'", double91 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + true + "'", boolean95 == true);
        org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + true + "'", boolean96 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double97));
    }

    @Test
    public void test1057() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1057");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance1.clear();
        double double3 = variance1.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance5 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray12 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double13 = variance5.evaluate(doubleArray12);
        variance5.setBiasCorrected(true);
        boolean boolean16 = variance5.isBiasCorrected();
        double[] doubleArray23 = new double[] { (short) 0, 1.0d, 1L, 0.0d, (-1.0d), 10L };
        double double24 = variance5.evaluate(doubleArray23);
        double double25 = variance5.getResult();
        variance5.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance29 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray36 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double37 = variance29.evaluate(doubleArray36);
        variance29.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance41 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray48 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double49 = variance41.evaluate(doubleArray48);
        variance41.setBiasCorrected(true);
        boolean boolean52 = variance41.isBiasCorrected();
        double[] doubleArray59 = new double[] { (short) 0, 1.0d, 1L, 0.0d, (-1.0d), 10L };
        double double60 = variance41.evaluate(doubleArray59);
        org.apache.commons.math.stat.descriptive.moment.Variance variance62 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray69 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double70 = variance62.evaluate(doubleArray69);
        variance62.setBiasCorrected(true);
        boolean boolean73 = variance62.isBiasCorrected();
        double[] doubleArray80 = new double[] { (short) 0, 1.0d, 1L, 0.0d, (-1.0d), 10L };
        double double81 = variance62.evaluate(doubleArray80);
        double double84 = variance41.evaluate(doubleArray80, (int) (byte) 1, 0);
        double double86 = variance29.evaluate(doubleArray80, 2178.0d);
        boolean boolean87 = variance5.equals((java.lang.Object) doubleArray80);
        double double89 = variance1.evaluate(doubleArray80, (double) '#');
        long long90 = variance1.getN();
        boolean boolean91 = variance1.isBiasCorrected();
        variance1.increment(13.805555555555552d);
        double double94 = variance1.getResult();
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 2168.222222222222d + "'", double13 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[0.0, 1.0, 1.0, 0.0, -1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 16.566666666666663d + "'", double24 == 16.566666666666663d);
        org.junit.Assert.assertTrue(Double.isNaN(double25));
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 2168.222222222222d + "'", double37 == 2168.222222222222d);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 2168.222222222222d + "'", double49 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[0.0, 1.0, 1.0, 0.0, -1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 16.566666666666663d + "'", double60 == 16.566666666666663d);
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + 2168.222222222222d + "'", double70 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray80), "[0.0, 1.0, 1.0, 0.0, -1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double81 + "' != '" + 16.566666666666663d + "'", double81 == 16.566666666666663d);
        org.junit.Assert.assertTrue(Double.isNaN(double84));
        org.junit.Assert.assertTrue("'" + double86 + "' != '" + 16.566666666418314d + "'", double86 == 16.566666666418314d);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertTrue("'" + double89 + "' != '" + 13.805555555555506d + "'", double89 == 13.805555555555506d);
        org.junit.Assert.assertTrue("'" + long90 + "' != '" + 0L + "'", long90 == 0L);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
        org.junit.Assert.assertTrue("'" + double94 + "' != '" + 0.0d + "'", double94 == 0.0d);
    }

    @Test
    public void test1058() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1058");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray8 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double9 = variance1.evaluate(doubleArray8);
        variance1.setBiasCorrected(true);
        long long12 = variance1.getN();
        long long13 = variance1.getN();
        boolean boolean14 = variance1.isBiasCorrected();
        org.apache.commons.math.stat.descriptive.moment.Variance variance16 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray23 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double24 = variance16.evaluate(doubleArray23);
        double[] doubleArray28 = new double[] { (byte) 1, (byte) 100, 1L };
        double double29 = variance16.evaluate(doubleArray28);
        variance1.incrementAll(doubleArray28, (int) (short) 1, 0);
        variance1.clear();
        boolean boolean35 = variance1.equals((java.lang.Object) 0.0f);
        variance1.clear();
        variance1.clear();
        long long38 = variance1.getN();
        java.lang.Class<?> wildcardClass39 = variance1.getClass();
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 2168.222222222222d + "'", double9 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 0L + "'", long12 == 0L);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 0L + "'", long13 == 0L);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 2168.222222222222d + "'", double24 == 2168.222222222222d);
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[1.0, 100.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 2178.0d + "'", double29 == 2178.0d);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + long38 + "' != '" + 0L + "'", long38 == 0L);
        org.junit.Assert.assertNotNull(wildcardClass39);
    }

    @Test
    public void test1059() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1059");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray8 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double9 = variance1.evaluate(doubleArray8);
        variance1.setBiasCorrected(true);
        long long12 = variance1.getN();
        double double13 = variance1.getResult();
        variance1.increment((double) 'a');
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 2168.222222222222d + "'", double9 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 0L + "'", long12 == 0L);
        org.junit.Assert.assertTrue(Double.isNaN(double13));
    }

    @Test
    public void test1060() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1060");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance3 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray10 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double11 = variance3.evaluate(doubleArray10);
        variance3.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance15 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray22 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double23 = variance15.evaluate(doubleArray22);
        variance15.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance27 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray34 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double35 = variance27.evaluate(doubleArray34);
        variance27.setBiasCorrected(true);
        boolean boolean38 = variance27.isBiasCorrected();
        double[] doubleArray45 = new double[] { (short) 0, 1.0d, 1L, 0.0d, (-1.0d), 10L };
        double double46 = variance27.evaluate(doubleArray45);
        double double49 = variance15.evaluate(doubleArray45, (int) (byte) 1, (int) (byte) 0);
        variance3.incrementAll(doubleArray45, (int) (byte) 1, 1);
        double double53 = variance1.evaluate(doubleArray45);
        variance1.setBiasCorrected(false);
        double double56 = variance1.getResult();
        java.lang.Class<?> wildcardClass57 = variance1.getClass();
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 2168.222222222222d + "'", double11 == 2168.222222222222d);
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 2168.222222222222d + "'", double23 == 2168.222222222222d);
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 2168.222222222222d + "'", double35 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[0.0, 1.0, 1.0, 0.0, -1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 16.566666666666663d + "'", double46 == 16.566666666666663d);
        org.junit.Assert.assertTrue(Double.isNaN(double49));
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 13.805555555555552d + "'", double53 == 13.805555555555552d);
        org.junit.Assert.assertTrue(Double.isNaN(double56));
        org.junit.Assert.assertNotNull(wildcardClass57);
    }

    @Test
    public void test1061() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1061");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray8 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double9 = variance1.evaluate(doubleArray8);
        double[] doubleArray13 = new double[] { (byte) 1, (byte) 100, 1L };
        double double14 = variance1.evaluate(doubleArray13);
        long long15 = variance1.getN();
        boolean boolean16 = variance1.isBiasCorrected();
        variance1.increment(677378.9558333334d);
        variance1.setBiasCorrected(true);
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 2168.222222222222d + "'", double9 == 2168.222222222222d);
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[1.0, 100.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 2178.0d + "'", double14 == 2178.0d);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 0L + "'", long15 == 0L);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
    }

    @Test
    public void test1062() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1062");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray8 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double9 = variance1.evaluate(doubleArray8);
        variance1.clear();
        variance1.setBiasCorrected(false);
        variance1.increment(2178.0d);
        variance1.setBiasCorrected(true);
        boolean boolean17 = variance1.isBiasCorrected();
        java.lang.Class<?> wildcardClass18 = variance1.getClass();
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 2168.222222222222d + "'", double9 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(wildcardClass18);
    }

    @Test
    public void test1063() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1063");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance1.clear();
        boolean boolean3 = variance1.isBiasCorrected();
        variance1.increment(16.56666666666667d);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
    }

    @Test
    public void test1064() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1064");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray8 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double9 = variance1.evaluate(doubleArray8);
        variance1.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance13 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray20 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double21 = variance13.evaluate(doubleArray20);
        variance13.setBiasCorrected(true);
        boolean boolean24 = variance13.isBiasCorrected();
        double[] doubleArray31 = new double[] { (short) 0, 1.0d, 1L, 0.0d, (-1.0d), 10L };
        double double32 = variance13.evaluate(doubleArray31);
        org.apache.commons.math.stat.descriptive.moment.Variance variance34 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray41 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double42 = variance34.evaluate(doubleArray41);
        variance34.setBiasCorrected(true);
        boolean boolean45 = variance34.isBiasCorrected();
        double[] doubleArray52 = new double[] { (short) 0, 1.0d, 1L, 0.0d, (-1.0d), 10L };
        double double53 = variance34.evaluate(doubleArray52);
        double double56 = variance13.evaluate(doubleArray52, (int) (byte) 1, 0);
        double double58 = variance1.evaluate(doubleArray52, 2178.0d);
        variance1.clear();
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 2168.222222222222d + "'", double9 == 2168.222222222222d);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 2168.222222222222d + "'", double21 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[0.0, 1.0, 1.0, 0.0, -1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 16.566666666666663d + "'", double32 == 16.566666666666663d);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 2168.222222222222d + "'", double42 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[0.0, 1.0, 1.0, 0.0, -1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 16.566666666666663d + "'", double53 == 16.566666666666663d);
        org.junit.Assert.assertTrue(Double.isNaN(double56));
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 16.566666666418314d + "'", double58 == 16.566666666418314d);
    }

    @Test
    public void test1065() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1065");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray8 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double9 = variance1.evaluate(doubleArray8);
        variance1.setBiasCorrected(true);
        boolean boolean12 = variance1.isBiasCorrected();
        variance1.clear();
        boolean boolean14 = variance1.isBiasCorrected();
        variance1.setBiasCorrected(false);
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 2168.222222222222d + "'", double9 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
    }

    @Test
    public void test1066() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1066");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray8 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double9 = variance1.evaluate(doubleArray8);
        variance1.setBiasCorrected(true);
        boolean boolean12 = variance1.isBiasCorrected();
        org.apache.commons.math.stat.descriptive.moment.Variance variance14 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray21 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double22 = variance14.evaluate(doubleArray21);
        variance14.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance26 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray33 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double34 = variance26.evaluate(doubleArray33);
        variance26.setBiasCorrected(true);
        boolean boolean37 = variance26.isBiasCorrected();
        double[] doubleArray44 = new double[] { (short) 0, 1.0d, 1L, 0.0d, (-1.0d), 10L };
        double double45 = variance26.evaluate(doubleArray44);
        double double48 = variance14.evaluate(doubleArray44, (int) (byte) 1, (int) (byte) 0);
        double double51 = variance1.evaluate(doubleArray44, (int) (byte) 1, 0);
        org.apache.commons.math.stat.descriptive.moment.Variance variance53 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray60 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double61 = variance53.evaluate(doubleArray60);
        variance53.clear();
        variance53.setBiasCorrected(true);
        boolean boolean65 = variance1.equals((java.lang.Object) variance53);
        double double66 = variance1.getResult();
        java.lang.Object obj67 = null;
        boolean boolean68 = variance1.equals(obj67);
        variance1.setBiasCorrected(true);
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 2168.222222222222d + "'", double9 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 2168.222222222222d + "'", double22 == 2168.222222222222d);
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 2168.222222222222d + "'", double34 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[0.0, 1.0, 1.0, 0.0, -1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 16.566666666666663d + "'", double45 == 16.566666666666663d);
        org.junit.Assert.assertTrue(Double.isNaN(double48));
        org.junit.Assert.assertTrue(Double.isNaN(double51));
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 2168.222222222222d + "'", double61 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double66));
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
    }

    @Test
    public void test1067() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1067");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray8 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double9 = variance1.evaluate(doubleArray8);
        variance1.setBiasCorrected(true);
        boolean boolean12 = variance1.isBiasCorrected();
        double[] doubleArray19 = new double[] { (short) 0, 1.0d, 1L, 0.0d, (-1.0d), 10L };
        double double20 = variance1.evaluate(doubleArray19);
        double double21 = variance1.getResult();
        variance1.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance25 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray32 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double33 = variance25.evaluate(doubleArray32);
        variance25.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance37 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray44 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double45 = variance37.evaluate(doubleArray44);
        variance37.setBiasCorrected(true);
        boolean boolean48 = variance37.isBiasCorrected();
        double[] doubleArray55 = new double[] { (short) 0, 1.0d, 1L, 0.0d, (-1.0d), 10L };
        double double56 = variance37.evaluate(doubleArray55);
        org.apache.commons.math.stat.descriptive.moment.Variance variance58 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray65 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double66 = variance58.evaluate(doubleArray65);
        variance58.setBiasCorrected(true);
        boolean boolean69 = variance58.isBiasCorrected();
        double[] doubleArray76 = new double[] { (short) 0, 1.0d, 1L, 0.0d, (-1.0d), 10L };
        double double77 = variance58.evaluate(doubleArray76);
        double double80 = variance37.evaluate(doubleArray76, (int) (byte) 1, 0);
        double double82 = variance25.evaluate(doubleArray76, 2178.0d);
        boolean boolean83 = variance1.equals((java.lang.Object) doubleArray76);
        variance1.increment(1166128.545709965d);
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 2168.222222222222d + "'", double9 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[0.0, 1.0, 1.0, 0.0, -1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 16.566666666666663d + "'", double20 == 16.566666666666663d);
        org.junit.Assert.assertTrue(Double.isNaN(double21));
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 2168.222222222222d + "'", double33 == 2168.222222222222d);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 2168.222222222222d + "'", double45 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[0.0, 1.0, 1.0, 0.0, -1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 16.566666666666663d + "'", double56 == 16.566666666666663d);
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 2168.222222222222d + "'", double66 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[0.0, 1.0, 1.0, 0.0, -1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double77 + "' != '" + 16.566666666666663d + "'", double77 == 16.566666666666663d);
        org.junit.Assert.assertTrue(Double.isNaN(double80));
        org.junit.Assert.assertTrue("'" + double82 + "' != '" + 16.566666666418314d + "'", double82 == 16.566666666418314d);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
    }

    @Test
    public void test1068() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1068");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment1 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance2 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment1);
        double[] doubleArray3 = new double[] {};
        double double6 = variance2.evaluate(doubleArray3, 0, 0);
        boolean boolean8 = variance2.equals((java.lang.Object) 10.0f);
        variance2.setBiasCorrected(false);
        // The following exception was thrown during execution in test generation
        try {
            long long11 = variance2.getN();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
    }

    @Test
    public void test1069() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1069");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray8 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double9 = variance1.evaluate(doubleArray8);
        variance1.setBiasCorrected(true);
        boolean boolean12 = variance1.isBiasCorrected();
        double[] doubleArray19 = new double[] { (short) 0, 1.0d, 1L, 0.0d, (-1.0d), 10L };
        double double20 = variance1.evaluate(doubleArray19);
        boolean boolean22 = variance1.equals((java.lang.Object) 10.0d);
        long long23 = variance1.getN();
        double double24 = variance1.getResult();
        variance1.setBiasCorrected(false);
        java.lang.Class<?> wildcardClass27 = variance1.getClass();
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 2168.222222222222d + "'", double9 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[0.0, 1.0, 1.0, 0.0, -1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 16.566666666666663d + "'", double20 == 16.566666666666663d);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + long23 + "' != '" + 0L + "'", long23 == 0L);
        org.junit.Assert.assertTrue(Double.isNaN(double24));
        org.junit.Assert.assertNotNull(wildcardClass27);
    }

    @Test
    public void test1070() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1070");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray8 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double9 = variance1.evaluate(doubleArray8);
        variance1.setBiasCorrected(true);
        long long12 = variance1.getN();
        variance1.clear();
        double double14 = variance1.getResult();
        variance1.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance18 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance18.clear();
        double double20 = variance18.getResult();
        variance18.increment((double) '4');
        long long23 = variance18.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance25 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray32 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double33 = variance25.evaluate(doubleArray32);
        variance25.setBiasCorrected(true);
        long long36 = variance25.getN();
        variance25.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance39 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray46 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double47 = variance39.evaluate(doubleArray46);
        double[] doubleArray51 = new double[] { (byte) 1, (byte) 100, 1L };
        double double52 = variance39.evaluate(doubleArray51);
        org.apache.commons.math.stat.descriptive.moment.Variance variance54 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray61 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double62 = variance54.evaluate(doubleArray61);
        variance54.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance66 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray73 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double74 = variance66.evaluate(doubleArray73);
        variance54.incrementAll(doubleArray73);
        variance39.incrementAll(doubleArray73);
        variance25.incrementAll(doubleArray73, (int) (byte) 1, (int) (short) 1);
        variance18.incrementAll(doubleArray73);
        variance1.incrementAll(doubleArray73);
        boolean boolean82 = variance1.isBiasCorrected();
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 2168.222222222222d + "'", double9 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 0L + "'", long12 == 0L);
        org.junit.Assert.assertTrue(Double.isNaN(double14));
        org.junit.Assert.assertTrue(Double.isNaN(double20));
        org.junit.Assert.assertTrue("'" + long23 + "' != '" + 1L + "'", long23 == 1L);
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 2168.222222222222d + "'", double33 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + long36 + "' != '" + 0L + "'", long36 == 0L);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 2168.222222222222d + "'", double47 == 2168.222222222222d);
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[1.0, 100.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 2178.0d + "'", double52 == 2178.0d);
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 2168.222222222222d + "'", double62 == 2168.222222222222d);
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double74 + "' != '" + 2168.222222222222d + "'", double74 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
    }

    @Test
    public void test1071() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1071");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray8 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double9 = variance1.evaluate(doubleArray8);
        variance1.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance13 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray20 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double21 = variance13.evaluate(doubleArray20);
        variance1.incrementAll(doubleArray20);
        variance1.clear();
        variance1.setBiasCorrected(false);
        long long26 = variance1.getN();
        variance1.setBiasCorrected(true);
        long long29 = variance1.getN();
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 2168.222222222222d + "'", double9 == 2168.222222222222d);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 2168.222222222222d + "'", double21 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + long26 + "' != '" + 0L + "'", long26 == 0L);
        org.junit.Assert.assertTrue("'" + long29 + "' != '" + 0L + "'", long29 == 0L);
    }

    @Test
    public void test1072() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1072");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray8 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double9 = variance1.evaluate(doubleArray8);
        variance1.setBiasCorrected(true);
        boolean boolean12 = variance1.isBiasCorrected();
        double double13 = variance1.getResult();
        variance1.increment((double) 'a');
        variance1.increment((-1.0d));
        double double18 = variance1.getResult();
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 2168.222222222222d + "'", double9 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double13));
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 4802.0d + "'", double18 == 4802.0d);
    }

    @Test
    public void test1073() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1073");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray8 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double9 = variance1.evaluate(doubleArray8);
        variance1.setBiasCorrected(true);
        boolean boolean12 = variance1.isBiasCorrected();
        double[] doubleArray19 = new double[] { (short) 0, 1.0d, 1L, 0.0d, (-1.0d), 10L };
        double double20 = variance1.evaluate(doubleArray19);
        double double21 = variance1.getResult();
        variance1.increment(3267.0d);
        double double24 = variance1.getResult();
        variance1.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance27 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray34 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double35 = variance27.evaluate(doubleArray34);
        variance27.setBiasCorrected(true);
        long long38 = variance27.getN();
        double double39 = variance27.getResult();
        variance27.setBiasCorrected(true);
        boolean boolean42 = variance1.equals((java.lang.Object) true);
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 2168.222222222222d + "'", double9 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[0.0, 1.0, 1.0, 0.0, -1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 16.566666666666663d + "'", double20 == 16.566666666666663d);
        org.junit.Assert.assertTrue(Double.isNaN(double21));
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 0.0d + "'", double24 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 2168.222222222222d + "'", double35 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + long38 + "' != '" + 0L + "'", long38 == 0L);
        org.junit.Assert.assertTrue(Double.isNaN(double39));
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
    }

    @Test
    public void test1074() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1074");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray8 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double9 = variance1.evaluate(doubleArray8);
        variance1.setBiasCorrected(true);
        boolean boolean12 = variance1.isBiasCorrected();
        double[] doubleArray19 = new double[] { (short) 0, 1.0d, 1L, 0.0d, (-1.0d), 10L };
        double double20 = variance1.evaluate(doubleArray19);
        long long21 = variance1.getN();
        double double22 = variance1.getResult();
        variance1.increment(16.56666666666667d);
        variance1.clear();
        variance1.clear();
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 2168.222222222222d + "'", double9 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[0.0, 1.0, 1.0, 0.0, -1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 16.566666666666663d + "'", double20 == 16.566666666666663d);
        org.junit.Assert.assertTrue("'" + long21 + "' != '" + 0L + "'", long21 == 0L);
        org.junit.Assert.assertTrue(Double.isNaN(double22));
    }

    @Test
    public void test1075() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1075");
        org.apache.commons.math.stat.descriptive.moment.Variance variance0 = new org.apache.commons.math.stat.descriptive.moment.Variance();
        double double1 = variance0.getResult();
        variance0.clear();
        variance0.clear();
        variance0.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance7 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance7.clear();
        boolean boolean9 = variance7.isBiasCorrected();
        boolean boolean11 = variance7.equals((java.lang.Object) 1166128.5457099646d);
        org.apache.commons.math.stat.descriptive.moment.Variance variance13 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray20 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double21 = variance13.evaluate(doubleArray20);
        org.apache.commons.math.stat.descriptive.moment.Variance variance23 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray30 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double31 = variance23.evaluate(doubleArray30);
        variance23.setBiasCorrected(true);
        boolean boolean34 = variance23.isBiasCorrected();
        double[] doubleArray41 = new double[] { (short) 0, 1.0d, 1L, 0.0d, (-1.0d), 10L };
        double double42 = variance23.evaluate(doubleArray41);
        org.apache.commons.math.stat.descriptive.moment.Variance variance44 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray51 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double52 = variance44.evaluate(doubleArray51);
        variance44.setBiasCorrected(true);
        boolean boolean55 = variance44.isBiasCorrected();
        double[] doubleArray62 = new double[] { (short) 0, 1.0d, 1L, 0.0d, (-1.0d), 10L };
        double double63 = variance44.evaluate(doubleArray62);
        double double66 = variance23.evaluate(doubleArray62, (int) (byte) 1, 0);
        variance23.setBiasCorrected(true);
        boolean boolean69 = variance13.equals((java.lang.Object) true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance71 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray78 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double79 = variance71.evaluate(doubleArray78);
        double double81 = variance13.evaluate(doubleArray78, 874596.4092824734d);
        double double83 = variance7.evaluate(doubleArray78, (double) 100L);
        variance0.incrementAll(doubleArray78);
        org.junit.Assert.assertTrue(Double.isNaN(double1));
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 2168.222222222222d + "'", double21 == 2168.222222222222d);
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 2168.222222222222d + "'", double31 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[0.0, 1.0, 1.0, 0.0, -1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 16.566666666666663d + "'", double42 == 16.566666666666663d);
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 2168.222222222222d + "'", double52 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[0.0, 1.0, 1.0, 0.0, -1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 16.566666666666663d + "'", double63 == 16.566666666666663d);
        org.junit.Assert.assertTrue(Double.isNaN(double66));
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray78), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double79 + "' != '" + 2168.222222222222d + "'", double79 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + double81 + "' != '" + 2168.2220052083335d + "'", double81 == 2168.2220052083335d);
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + 2168.222222222222d + "'", double83 == 2168.222222222222d);
    }

    @Test
    public void test1076() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1076");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray8 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double9 = variance1.evaluate(doubleArray8);
        variance1.setBiasCorrected(true);
        boolean boolean12 = variance1.isBiasCorrected();
        double[] doubleArray19 = new double[] { (short) 0, 1.0d, 1L, 0.0d, (-1.0d), 10L };
        double double20 = variance1.evaluate(doubleArray19);
        org.apache.commons.math.stat.descriptive.moment.Variance variance22 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray29 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double30 = variance22.evaluate(doubleArray29);
        variance22.setBiasCorrected(true);
        boolean boolean33 = variance22.isBiasCorrected();
        double[] doubleArray40 = new double[] { (short) 0, 1.0d, 1L, 0.0d, (-1.0d), 10L };
        double double41 = variance22.evaluate(doubleArray40);
        double double44 = variance1.evaluate(doubleArray40, (int) (byte) 1, 0);
        double double45 = variance1.getResult();
        long long46 = variance1.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance48 = new org.apache.commons.math.stat.descriptive.moment.Variance(true);
        double double49 = variance48.getResult();
        boolean boolean50 = variance48.isBiasCorrected();
        boolean boolean51 = variance48.isBiasCorrected();
        org.apache.commons.math.stat.descriptive.moment.Variance variance53 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray60 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double61 = variance53.evaluate(doubleArray60);
        variance53.setBiasCorrected(true);
        boolean boolean64 = variance53.isBiasCorrected();
        double[] doubleArray71 = new double[] { (short) 0, 1.0d, 1L, 0.0d, (-1.0d), 10L };
        double double72 = variance53.evaluate(doubleArray71);
        org.apache.commons.math.stat.descriptive.moment.Variance variance74 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray81 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double82 = variance74.evaluate(doubleArray81);
        variance74.setBiasCorrected(true);
        boolean boolean85 = variance74.isBiasCorrected();
        double[] doubleArray92 = new double[] { (short) 0, 1.0d, 1L, 0.0d, (-1.0d), 10L };
        double double93 = variance74.evaluate(doubleArray92);
        double double96 = variance53.evaluate(doubleArray92, (int) (byte) 1, 0);
        double double97 = variance48.evaluate(doubleArray92);
        boolean boolean98 = variance1.equals((java.lang.Object) double97);
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 2168.222222222222d + "'", double9 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[0.0, 1.0, 1.0, 0.0, -1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 16.566666666666663d + "'", double20 == 16.566666666666663d);
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 2168.222222222222d + "'", double30 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[0.0, 1.0, 1.0, 0.0, -1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 16.566666666666663d + "'", double41 == 16.566666666666663d);
        org.junit.Assert.assertTrue(Double.isNaN(double44));
        org.junit.Assert.assertTrue(Double.isNaN(double45));
        org.junit.Assert.assertTrue("'" + long46 + "' != '" + 0L + "'", long46 == 0L);
        org.junit.Assert.assertTrue(Double.isNaN(double49));
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 2168.222222222222d + "'", double61 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[0.0, 1.0, 1.0, 0.0, -1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 16.566666666666663d + "'", double72 == 16.566666666666663d);
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray81), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double82 + "' != '" + 2168.222222222222d + "'", double82 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + true + "'", boolean85 == true);
        org.junit.Assert.assertNotNull(doubleArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray92), "[0.0, 1.0, 1.0, 0.0, -1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double93 + "' != '" + 16.566666666666663d + "'", double93 == 16.566666666666663d);
        org.junit.Assert.assertTrue(Double.isNaN(double96));
        org.junit.Assert.assertTrue("'" + double97 + "' != '" + 16.566666666666663d + "'", double97 == 16.566666666666663d);
        org.junit.Assert.assertTrue("'" + boolean98 + "' != '" + false + "'", boolean98 == false);
    }

    @Test
    public void test1077() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1077");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance1.clear();
        double double3 = variance1.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance5 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray12 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double13 = variance5.evaluate(doubleArray12);
        variance5.setBiasCorrected(true);
        boolean boolean16 = variance5.isBiasCorrected();
        double[] doubleArray23 = new double[] { (short) 0, 1.0d, 1L, 0.0d, (-1.0d), 10L };
        double double24 = variance5.evaluate(doubleArray23);
        org.apache.commons.math.stat.descriptive.moment.Variance variance26 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray33 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double34 = variance26.evaluate(doubleArray33);
        variance26.setBiasCorrected(true);
        boolean boolean37 = variance26.isBiasCorrected();
        double[] doubleArray44 = new double[] { (short) 0, 1.0d, 1L, 0.0d, (-1.0d), 10L };
        double double45 = variance26.evaluate(doubleArray44);
        double double48 = variance5.evaluate(doubleArray44, (int) (byte) 1, 0);
        variance5.setBiasCorrected(true);
        variance5.setBiasCorrected(true);
        double double53 = variance5.getResult();
        boolean boolean54 = variance5.isBiasCorrected();
        boolean boolean55 = variance5.isBiasCorrected();
        long long56 = variance5.getN();
        variance5.clear();
        boolean boolean58 = variance1.equals((java.lang.Object) variance5);
        double double59 = variance5.getResult();
        variance5.setBiasCorrected(true);
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 2168.222222222222d + "'", double13 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[0.0, 1.0, 1.0, 0.0, -1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 16.566666666666663d + "'", double24 == 16.566666666666663d);
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 2168.222222222222d + "'", double34 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[0.0, 1.0, 1.0, 0.0, -1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 16.566666666666663d + "'", double45 == 16.566666666666663d);
        org.junit.Assert.assertTrue(Double.isNaN(double48));
        org.junit.Assert.assertTrue(Double.isNaN(double53));
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + long56 + "' != '" + 0L + "'", long56 == 0L);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double59));
    }

    @Test
    public void test1078() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1078");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(true);
        double double2 = variance1.getResult();
        double double3 = variance1.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance5 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray12 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double13 = variance5.evaluate(doubleArray12);
        variance5.clear();
        variance5.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance18 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance18.clear();
        double double20 = variance18.getResult();
        double[] doubleArray25 = new double[] { (-1), 2168.222222222222d, 16.566666666418314d, 10.0d };
        variance18.incrementAll(doubleArray25);
        boolean boolean27 = variance5.equals((java.lang.Object) doubleArray25);
        double double29 = variance1.evaluate(doubleArray25, (double) (-1.0f));
        long long30 = variance1.getN();
        variance1.clear();
        long long32 = variance1.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance34 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray41 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double42 = variance34.evaluate(doubleArray41);
        variance34.setBiasCorrected(true);
        variance34.increment((double) (byte) 0);
        double[] doubleArray49 = new double[] { 'a', 100L };
        double double51 = variance34.evaluate(doubleArray49, 0.0d);
        long long52 = variance34.getN();
        boolean boolean53 = variance34.isBiasCorrected();
        long long54 = variance34.getN();
        double double55 = variance34.getResult();
        double double56 = variance34.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance58 = new org.apache.commons.math.stat.descriptive.moment.Variance(true);
        double double59 = variance58.getResult();
        double double60 = variance58.getResult();
        variance58.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance63 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray70 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double71 = variance63.evaluate(doubleArray70);
        variance63.setBiasCorrected(true);
        long long74 = variance63.getN();
        long long75 = variance63.getN();
        boolean boolean76 = variance63.isBiasCorrected();
        org.apache.commons.math.stat.descriptive.moment.Variance variance78 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray85 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double86 = variance78.evaluate(doubleArray85);
        double[] doubleArray90 = new double[] { (byte) 1, (byte) 100, 1L };
        double double91 = variance78.evaluate(doubleArray90);
        variance63.incrementAll(doubleArray90, (int) (short) 1, 0);
        variance58.incrementAll(doubleArray90);
        double double96 = variance34.evaluate(doubleArray90);
        double double97 = variance1.evaluate(doubleArray90);
        org.junit.Assert.assertTrue(Double.isNaN(double2));
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 2168.222222222222d + "'", double13 == 2168.222222222222d);
        org.junit.Assert.assertTrue(Double.isNaN(double20));
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[-1.0, 2168.222222222222, 16.566666666418314, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 1166128.5457099646d + "'", double29 == 1166128.5457099646d);
        org.junit.Assert.assertTrue("'" + long30 + "' != '" + 0L + "'", long30 == 0L);
        org.junit.Assert.assertTrue("'" + long32 + "' != '" + 0L + "'", long32 == 0L);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 2168.222222222222d + "'", double42 == 2168.222222222222d);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[97.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 4.5d + "'", double51 == 4.5d);
        org.junit.Assert.assertTrue("'" + long52 + "' != '" + 1L + "'", long52 == 1L);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertTrue("'" + long54 + "' != '" + 1L + "'", long54 == 1L);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 0.0d + "'", double55 == 0.0d);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 0.0d + "'", double56 == 0.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double59));
        org.junit.Assert.assertTrue(Double.isNaN(double60));
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + 2168.222222222222d + "'", double71 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + long74 + "' != '" + 0L + "'", long74 == 0L);
        org.junit.Assert.assertTrue("'" + long75 + "' != '" + 0L + "'", long75 == 0L);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray85), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double86 + "' != '" + 2168.222222222222d + "'", double86 == 2168.222222222222d);
        org.junit.Assert.assertNotNull(doubleArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray90), "[1.0, 100.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double91 + "' != '" + 2178.0d + "'", double91 == 2178.0d);
        org.junit.Assert.assertTrue("'" + double96 + "' != '" + 3267.0d + "'", double96 == 3267.0d);
        org.junit.Assert.assertTrue("'" + double97 + "' != '" + 3267.0d + "'", double97 == 3267.0d);
    }

    @Test
    public void test1079() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1079");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment1 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance2 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment1);
        variance2.increment(0.0d);
        variance2.clear();
        variance2.increment((double) (-1));
        // The following exception was thrown during execution in test generation
        try {
            long long8 = variance2.getN();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test1080() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1080");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment1 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance2 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment1);
        double[] doubleArray3 = new double[] {};
        double double6 = variance2.evaluate(doubleArray3, 0, 0);
        boolean boolean8 = variance2.equals((java.lang.Object) 10.0f);
        boolean boolean9 = variance2.isBiasCorrected();
        variance2.clear();
        double[] doubleArray16 = new double[] { 10.0f, 10.0f, 1, 'a', (byte) 1 };
        double double17 = variance2.evaluate(doubleArray16);
        variance2.setBiasCorrected(false);
        variance2.clear();
        variance2.increment(2601.8666666666672d);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[10.0, 10.0, 1.0, 97.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 1694.7000000000003d + "'", double17 == 1694.7000000000003d);
    }

    @Test
    public void test1081() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1081");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray8 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double9 = variance1.evaluate(doubleArray8);
        variance1.setBiasCorrected(true);
        long long12 = variance1.getN();
        double double13 = variance1.getResult();
        boolean boolean14 = variance1.isBiasCorrected();
        long long15 = variance1.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance17 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray24 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double25 = variance17.evaluate(doubleArray24);
        variance17.setBiasCorrected(true);
        long long28 = variance17.getN();
        variance17.clear();
        variance17.increment((double) (short) -1);
        variance17.clear();
        boolean boolean33 = variance1.equals((java.lang.Object) variance17);
        variance17.increment(2601.866666666667d);
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 2168.222222222222d + "'", double9 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 0L + "'", long12 == 0L);
        org.junit.Assert.assertTrue(Double.isNaN(double13));
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 0L + "'", long15 == 0L);
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 2168.222222222222d + "'", double25 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + long28 + "' != '" + 0L + "'", long28 == 0L);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
    }

    @Test
    public void test1082() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1082");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray8 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double9 = variance1.evaluate(doubleArray8);
        variance1.setBiasCorrected(true);
        boolean boolean12 = variance1.isBiasCorrected();
        org.apache.commons.math.stat.descriptive.moment.Variance variance14 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray21 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double22 = variance14.evaluate(doubleArray21);
        variance14.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance26 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray33 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double34 = variance26.evaluate(doubleArray33);
        variance26.setBiasCorrected(true);
        boolean boolean37 = variance26.isBiasCorrected();
        double[] doubleArray44 = new double[] { (short) 0, 1.0d, 1L, 0.0d, (-1.0d), 10L };
        double double45 = variance26.evaluate(doubleArray44);
        double double48 = variance14.evaluate(doubleArray44, (int) (byte) 1, (int) (byte) 0);
        double double51 = variance1.evaluate(doubleArray44, (int) (byte) 1, 0);
        variance1.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance55 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray62 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double63 = variance55.evaluate(doubleArray62);
        variance55.setBiasCorrected(true);
        long long66 = variance55.getN();
        long long67 = variance55.getN();
        boolean boolean68 = variance55.isBiasCorrected();
        org.apache.commons.math.stat.descriptive.moment.Variance variance70 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray77 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double78 = variance70.evaluate(doubleArray77);
        double[] doubleArray82 = new double[] { (byte) 1, (byte) 100, 1L };
        double double83 = variance70.evaluate(doubleArray82);
        variance55.incrementAll(doubleArray82, (int) (short) 1, 0);
        variance55.clear();
        boolean boolean88 = variance1.equals((java.lang.Object) variance55);
        variance55.setBiasCorrected(false);
        long long91 = variance55.getN();
        variance55.clear();
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 2168.222222222222d + "'", double9 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 2168.222222222222d + "'", double22 == 2168.222222222222d);
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 2168.222222222222d + "'", double34 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[0.0, 1.0, 1.0, 0.0, -1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 16.566666666666663d + "'", double45 == 16.566666666666663d);
        org.junit.Assert.assertTrue(Double.isNaN(double48));
        org.junit.Assert.assertTrue(Double.isNaN(double51));
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 2168.222222222222d + "'", double63 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + long66 + "' != '" + 0L + "'", long66 == 0L);
        org.junit.Assert.assertTrue("'" + long67 + "' != '" + 0L + "'", long67 == 0L);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray77), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double78 + "' != '" + 2168.222222222222d + "'", double78 == 2168.222222222222d);
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray82), "[1.0, 100.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + 2178.0d + "'", double83 == 2178.0d);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + true + "'", boolean88 == true);
        org.junit.Assert.assertTrue("'" + long91 + "' != '" + 0L + "'", long91 == 0L);
    }

    @Test
    public void test1083() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1083");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray8 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double9 = variance1.evaluate(doubleArray8);
        variance1.setBiasCorrected(true);
        boolean boolean12 = variance1.isBiasCorrected();
        double[] doubleArray19 = new double[] { (short) 0, 1.0d, 1L, 0.0d, (-1.0d), 10L };
        double double20 = variance1.evaluate(doubleArray19);
        boolean boolean22 = variance1.equals((java.lang.Object) 10.0d);
        boolean boolean23 = variance1.isBiasCorrected();
        org.apache.commons.math.stat.descriptive.moment.Variance variance25 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        boolean boolean26 = variance1.equals((java.lang.Object) false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance28 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray35 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double36 = variance28.evaluate(doubleArray35);
        variance28.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance40 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray47 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double48 = variance40.evaluate(doubleArray47);
        variance28.incrementAll(doubleArray47);
        double double51 = variance1.evaluate(doubleArray47, (double) 100.0f);
        long long52 = variance1.getN();
        boolean boolean53 = variance1.isBiasCorrected();
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 2168.222222222222d + "'", double9 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[0.0, 1.0, 1.0, 0.0, -1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 16.566666666666663d + "'", double20 == 16.566666666666663d);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 2168.222222222222d + "'", double36 == 2168.222222222222d);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 2168.222222222222d + "'", double48 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 2601.8666666666663d + "'", double51 == 2601.8666666666663d);
        org.junit.Assert.assertTrue("'" + long52 + "' != '" + 0L + "'", long52 == 0L);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
    }

    @Test
    public void test1084() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1084");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray8 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double9 = variance1.evaluate(doubleArray8);
        org.apache.commons.math.stat.descriptive.moment.Variance variance11 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray18 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double19 = variance11.evaluate(doubleArray18);
        variance11.setBiasCorrected(true);
        boolean boolean22 = variance11.isBiasCorrected();
        double[] doubleArray29 = new double[] { (short) 0, 1.0d, 1L, 0.0d, (-1.0d), 10L };
        double double30 = variance11.evaluate(doubleArray29);
        org.apache.commons.math.stat.descriptive.moment.Variance variance32 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray39 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double40 = variance32.evaluate(doubleArray39);
        variance32.setBiasCorrected(true);
        boolean boolean43 = variance32.isBiasCorrected();
        double[] doubleArray50 = new double[] { (short) 0, 1.0d, 1L, 0.0d, (-1.0d), 10L };
        double double51 = variance32.evaluate(doubleArray50);
        double double54 = variance11.evaluate(doubleArray50, (int) (byte) 1, 0);
        variance11.setBiasCorrected(true);
        boolean boolean57 = variance1.equals((java.lang.Object) true);
        variance1.increment(1694.7000000000003d);
        long long60 = variance1.getN();
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 2168.222222222222d + "'", double9 == 2168.222222222222d);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 2168.222222222222d + "'", double19 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[0.0, 1.0, 1.0, 0.0, -1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 16.566666666666663d + "'", double30 == 16.566666666666663d);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 2168.222222222222d + "'", double40 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[0.0, 1.0, 1.0, 0.0, -1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 16.566666666666663d + "'", double51 == 16.566666666666663d);
        org.junit.Assert.assertTrue(Double.isNaN(double54));
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + long60 + "' != '" + 1L + "'", long60 == 1L);
    }

    @Test
    public void test1085() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1085");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(true);
        double double2 = variance1.getResult();
        double double3 = variance1.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance5 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray12 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double13 = variance5.evaluate(doubleArray12);
        variance5.clear();
        variance5.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance18 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance18.clear();
        double double20 = variance18.getResult();
        double[] doubleArray25 = new double[] { (-1), 2168.222222222222d, 16.566666666418314d, 10.0d };
        variance18.incrementAll(doubleArray25);
        boolean boolean27 = variance5.equals((java.lang.Object) doubleArray25);
        double double29 = variance1.evaluate(doubleArray25, (double) (-1.0f));
        org.apache.commons.math.stat.descriptive.moment.Variance variance31 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray38 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double39 = variance31.evaluate(doubleArray38);
        variance31.setBiasCorrected(true);
        boolean boolean42 = variance31.isBiasCorrected();
        double[] doubleArray49 = new double[] { (short) 0, 1.0d, 1L, 0.0d, (-1.0d), 10L };
        double double50 = variance31.evaluate(doubleArray49);
        double double52 = variance1.evaluate(doubleArray49, (double) (short) 1);
        long long53 = variance1.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance55 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray62 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double63 = variance55.evaluate(doubleArray62);
        long long64 = variance55.getN();
        variance55.increment((double) (byte) 1);
        variance55.increment((double) 6L);
        variance55.increment(2178.0d);
        org.apache.commons.math.stat.descriptive.moment.Variance variance72 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance72.clear();
        boolean boolean74 = variance72.isBiasCorrected();
        double double75 = variance72.getResult();
        boolean boolean76 = variance55.equals((java.lang.Object) variance72);
        long long77 = variance72.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance79 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance79.clear();
        double double81 = variance79.getResult();
        double[] doubleArray86 = new double[] { (-1), 2168.222222222222d, 16.566666666418314d, 10.0d };
        variance79.incrementAll(doubleArray86);
        double double89 = variance72.evaluate(doubleArray86, 100.0d);
        double double90 = variance1.evaluate(doubleArray86);
        org.junit.Assert.assertTrue(Double.isNaN(double2));
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 2168.222222222222d + "'", double13 == 2168.222222222222d);
        org.junit.Assert.assertTrue(Double.isNaN(double20));
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[-1.0, 2168.222222222222, 16.566666666418314, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 1166128.5457099646d + "'", double29 == 1166128.5457099646d);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 2168.222222222222d + "'", double39 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[0.0, 1.0, 1.0, 0.0, -1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 16.566666666666663d + "'", double50 == 16.566666666666663d);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 16.566666666666666d + "'", double52 == 16.566666666666666d);
        org.junit.Assert.assertTrue("'" + long53 + "' != '" + 0L + "'", long53 == 0L);
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 2168.222222222222d + "'", double63 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + long64 + "' != '" + 0L + "'", long64 == 0L);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double75));
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertTrue("'" + long77 + "' != '" + 0L + "'", long77 == 0L);
        org.junit.Assert.assertTrue(Double.isNaN(double81));
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray86), "[-1.0, 2168.222222222222, 16.566666666418314, 10.0]");
        org.junit.Assert.assertTrue("'" + double89 + "' != '" + 874596.4092824734d + "'", double89 == 874596.4092824734d);
        org.junit.Assert.assertTrue("'" + double90 + "' != '" + 1166128.5457099646d + "'", double90 == 1166128.5457099646d);
    }

    @Test
    public void test1086() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1086");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray8 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double9 = variance1.evaluate(doubleArray8);
        variance1.setBiasCorrected(true);
        boolean boolean12 = variance1.isBiasCorrected();
        double[] doubleArray19 = new double[] { (short) 0, 1.0d, 1L, 0.0d, (-1.0d), 10L };
        double double20 = variance1.evaluate(doubleArray19);
        org.apache.commons.math.stat.descriptive.moment.Variance variance22 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray29 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double30 = variance22.evaluate(doubleArray29);
        variance22.setBiasCorrected(true);
        boolean boolean33 = variance22.isBiasCorrected();
        double[] doubleArray40 = new double[] { (short) 0, 1.0d, 1L, 0.0d, (-1.0d), 10L };
        double double41 = variance22.evaluate(doubleArray40);
        double double44 = variance1.evaluate(doubleArray40, (int) (byte) 1, 0);
        variance1.setBiasCorrected(true);
        variance1.increment((double) 6L);
        variance1.clear();
        variance1.clear();
        long long51 = variance1.getN();
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 2168.222222222222d + "'", double9 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[0.0, 1.0, 1.0, 0.0, -1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 16.566666666666663d + "'", double20 == 16.566666666666663d);
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 2168.222222222222d + "'", double30 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[0.0, 1.0, 1.0, 0.0, -1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 16.566666666666663d + "'", double41 == 16.566666666666663d);
        org.junit.Assert.assertTrue(Double.isNaN(double44));
        org.junit.Assert.assertTrue("'" + long51 + "' != '" + 0L + "'", long51 == 0L);
    }

    @Test
    public void test1087() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1087");
        org.apache.commons.math.stat.descriptive.moment.Variance variance0 = new org.apache.commons.math.stat.descriptive.moment.Variance();
        double double1 = variance0.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance3 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray10 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double11 = variance3.evaluate(doubleArray10);
        variance3.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance15 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray22 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double23 = variance15.evaluate(doubleArray22);
        variance3.incrementAll(doubleArray22);
        boolean boolean25 = variance0.equals((java.lang.Object) variance3);
        org.apache.commons.math.stat.descriptive.moment.Variance variance27 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray34 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double35 = variance27.evaluate(doubleArray34);
        variance27.setBiasCorrected(true);
        boolean boolean38 = variance27.isBiasCorrected();
        double[] doubleArray45 = new double[] { (short) 0, 1.0d, 1L, 0.0d, (-1.0d), 10L };
        double double46 = variance27.evaluate(doubleArray45);
        org.apache.commons.math.stat.descriptive.moment.Variance variance48 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray55 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double56 = variance48.evaluate(doubleArray55);
        variance48.setBiasCorrected(true);
        boolean boolean59 = variance48.isBiasCorrected();
        double[] doubleArray66 = new double[] { (short) 0, 1.0d, 1L, 0.0d, (-1.0d), 10L };
        double double67 = variance48.evaluate(doubleArray66);
        double double70 = variance27.evaluate(doubleArray66, (int) (byte) 1, 0);
        variance27.setBiasCorrected(true);
        variance27.setBiasCorrected(true);
        double double75 = variance27.getResult();
        boolean boolean76 = variance27.isBiasCorrected();
        boolean boolean77 = variance27.isBiasCorrected();
        variance27.increment(0.0d);
        org.apache.commons.math.stat.descriptive.moment.Variance variance81 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray88 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double89 = variance81.evaluate(doubleArray88);
        variance27.incrementAll(doubleArray88, (int) (byte) 0, 1);
        double double93 = variance3.evaluate(doubleArray88);
        java.lang.Class<?> wildcardClass94 = variance3.getClass();
        org.junit.Assert.assertTrue(Double.isNaN(double1));
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 2168.222222222222d + "'", double11 == 2168.222222222222d);
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 2168.222222222222d + "'", double23 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 2168.222222222222d + "'", double35 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[0.0, 1.0, 1.0, 0.0, -1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 16.566666666666663d + "'", double46 == 16.566666666666663d);
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 2168.222222222222d + "'", double56 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[0.0, 1.0, 1.0, 0.0, -1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 16.566666666666663d + "'", double67 == 16.566666666666663d);
        org.junit.Assert.assertTrue(Double.isNaN(double70));
        org.junit.Assert.assertTrue(Double.isNaN(double75));
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertNotNull(doubleArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray88), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double89 + "' != '" + 2168.222222222222d + "'", double89 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + double93 + "' != '" + 2601.866666666667d + "'", double93 == 2601.866666666667d);
        org.junit.Assert.assertNotNull(wildcardClass94);
    }

    @Test
    public void test1088() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1088");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray8 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double9 = variance1.evaluate(doubleArray8);
        variance1.setBiasCorrected(true);
        boolean boolean12 = variance1.isBiasCorrected();
        double[] doubleArray19 = new double[] { (short) 0, 1.0d, 1L, 0.0d, (-1.0d), 10L };
        double double20 = variance1.evaluate(doubleArray19);
        org.apache.commons.math.stat.descriptive.moment.Variance variance22 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray29 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double30 = variance22.evaluate(doubleArray29);
        variance22.setBiasCorrected(true);
        boolean boolean33 = variance22.isBiasCorrected();
        double[] doubleArray40 = new double[] { (short) 0, 1.0d, 1L, 0.0d, (-1.0d), 10L };
        double double41 = variance22.evaluate(doubleArray40);
        double double44 = variance1.evaluate(doubleArray40, (int) (byte) 1, 0);
        variance1.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance48 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray55 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double56 = variance48.evaluate(doubleArray55);
        variance48.setBiasCorrected(true);
        boolean boolean59 = variance48.isBiasCorrected();
        double[] doubleArray66 = new double[] { (short) 0, 1.0d, 1L, 0.0d, (-1.0d), 10L };
        double double67 = variance48.evaluate(doubleArray66);
        double double69 = variance1.evaluate(doubleArray66, 6.25d);
        variance1.setBiasCorrected(true);
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 2168.222222222222d + "'", double9 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[0.0, 1.0, 1.0, 0.0, -1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 16.566666666666663d + "'", double20 == 16.566666666666663d);
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 2168.222222222222d + "'", double30 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[0.0, 1.0, 1.0, 0.0, -1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 16.566666666666663d + "'", double41 == 16.566666666666663d);
        org.junit.Assert.assertTrue(Double.isNaN(double44));
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 2168.222222222222d + "'", double56 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[0.0, 1.0, 1.0, 0.0, -1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 16.566666666666663d + "'", double67 == 16.566666666666663d);
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 16.566666666666666d + "'", double69 == 16.566666666666666d);
    }

    @Test
    public void test1089() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1089");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double double2 = variance1.getResult();
        long long3 = variance1.getN();
        java.lang.Object obj4 = null;
        boolean boolean5 = variance1.equals(obj4);
        org.apache.commons.math.stat.descriptive.moment.Variance variance7 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray14 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double15 = variance7.evaluate(doubleArray14);
        variance7.setBiasCorrected(true);
        boolean boolean18 = variance7.isBiasCorrected();
        double[] doubleArray25 = new double[] { (short) 0, 1.0d, 1L, 0.0d, (-1.0d), 10L };
        double double26 = variance7.evaluate(doubleArray25);
        org.apache.commons.math.stat.descriptive.moment.Variance variance28 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray35 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double36 = variance28.evaluate(doubleArray35);
        variance28.setBiasCorrected(true);
        boolean boolean39 = variance28.isBiasCorrected();
        double[] doubleArray46 = new double[] { (short) 0, 1.0d, 1L, 0.0d, (-1.0d), 10L };
        double double47 = variance28.evaluate(doubleArray46);
        double double50 = variance7.evaluate(doubleArray46, (int) (byte) 1, 0);
        variance7.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance54 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray61 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double62 = variance54.evaluate(doubleArray61);
        variance54.setBiasCorrected(true);
        boolean boolean65 = variance54.isBiasCorrected();
        double[] doubleArray72 = new double[] { (short) 0, 1.0d, 1L, 0.0d, (-1.0d), 10L };
        double double73 = variance54.evaluate(doubleArray72);
        double double75 = variance7.evaluate(doubleArray72, 6.25d);
        variance1.incrementAll(doubleArray72);
        variance1.setBiasCorrected(false);
        org.junit.Assert.assertTrue(Double.isNaN(double2));
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 0L + "'", long3 == 0L);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 2168.222222222222d + "'", double15 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[0.0, 1.0, 1.0, 0.0, -1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 16.566666666666663d + "'", double26 == 16.566666666666663d);
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 2168.222222222222d + "'", double36 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[0.0, 1.0, 1.0, 0.0, -1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 16.566666666666663d + "'", double47 == 16.566666666666663d);
        org.junit.Assert.assertTrue(Double.isNaN(double50));
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 2168.222222222222d + "'", double62 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray72), "[0.0, 1.0, 1.0, 0.0, -1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double73 + "' != '" + 16.566666666666663d + "'", double73 == 16.566666666666663d);
        org.junit.Assert.assertTrue("'" + double75 + "' != '" + 16.566666666666666d + "'", double75 == 16.566666666666666d);
    }

    @Test
    public void test1090() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1090");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray8 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double9 = variance1.evaluate(doubleArray8);
        variance1.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance13 = new org.apache.commons.math.stat.descriptive.moment.Variance(true);
        boolean boolean14 = variance1.equals((java.lang.Object) true);
        java.lang.Object obj15 = null;
        boolean boolean16 = variance1.equals(obj15);
        long long17 = variance1.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance18 = new org.apache.commons.math.stat.descriptive.moment.Variance();
        double double19 = variance18.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance21 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray28 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double29 = variance21.evaluate(doubleArray28);
        variance21.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance33 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray40 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double41 = variance33.evaluate(doubleArray40);
        variance21.incrementAll(doubleArray40);
        boolean boolean43 = variance18.equals((java.lang.Object) variance21);
        org.apache.commons.math.stat.descriptive.moment.Variance variance45 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray52 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double53 = variance45.evaluate(doubleArray52);
        variance45.clear();
        boolean boolean55 = variance21.equals((java.lang.Object) variance45);
        org.apache.commons.math.stat.descriptive.moment.Variance variance57 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray64 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double65 = variance57.evaluate(doubleArray64);
        variance57.clear();
        variance57.setBiasCorrected(true);
        double double69 = variance57.getResult();
        variance57.clear();
        double double71 = variance57.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance73 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray80 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double81 = variance73.evaluate(doubleArray80);
        variance73.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance85 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance85.clear();
        double double87 = variance85.getResult();
        double[] doubleArray92 = new double[] { (-1), 2168.222222222222d, 16.566666666418314d, 10.0d };
        variance85.incrementAll(doubleArray92);
        variance73.incrementAll(doubleArray92);
        variance57.incrementAll(doubleArray92);
        double double96 = variance45.evaluate(doubleArray92);
        double double97 = variance1.evaluate(doubleArray92);
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 2168.222222222222d + "'", double9 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + 0L + "'", long17 == 0L);
        org.junit.Assert.assertTrue(Double.isNaN(double19));
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 2168.222222222222d + "'", double29 == 2168.222222222222d);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 2168.222222222222d + "'", double41 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 2168.222222222222d + "'", double53 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 2168.222222222222d + "'", double65 == 2168.222222222222d);
        org.junit.Assert.assertTrue(Double.isNaN(double69));
        org.junit.Assert.assertTrue(Double.isNaN(double71));
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray80), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double81 + "' != '" + 2168.222222222222d + "'", double81 == 2168.222222222222d);
        org.junit.Assert.assertTrue(Double.isNaN(double87));
        org.junit.Assert.assertNotNull(doubleArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray92), "[-1.0, 2168.222222222222, 16.566666666418314, 10.0]");
        org.junit.Assert.assertTrue("'" + double96 + "' != '" + 874596.4092824734d + "'", double96 == 874596.4092824734d);
        org.junit.Assert.assertTrue("'" + double97 + "' != '" + 1166128.5457099646d + "'", double97 == 1166128.5457099646d);
    }

    @Test
    public void test1091() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1091");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(true);
        variance1.increment(16.566666666418314d);
        variance1.increment(16.566666666666666d);
        java.lang.Class<?> wildcardClass6 = variance1.getClass();
        org.junit.Assert.assertNotNull(wildcardClass6);
    }

    @Test
    public void test1092() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1092");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray8 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double9 = variance1.evaluate(doubleArray8);
        variance1.setBiasCorrected(true);
        boolean boolean12 = variance1.isBiasCorrected();
        double[] doubleArray19 = new double[] { (short) 0, 1.0d, 1L, 0.0d, (-1.0d), 10L };
        double double20 = variance1.evaluate(doubleArray19);
        boolean boolean22 = variance1.equals((java.lang.Object) 10.0d);
        boolean boolean23 = variance1.isBiasCorrected();
        org.apache.commons.math.stat.descriptive.moment.Variance variance25 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        boolean boolean26 = variance1.equals((java.lang.Object) false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance28 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray35 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double36 = variance28.evaluate(doubleArray35);
        variance28.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance40 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray47 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double48 = variance40.evaluate(doubleArray47);
        variance28.incrementAll(doubleArray47);
        double double51 = variance1.evaluate(doubleArray47, (double) 100.0f);
        variance1.clear();
        boolean boolean53 = variance1.isBiasCorrected();
        org.apache.commons.math.stat.descriptive.moment.Variance variance55 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray62 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double63 = variance55.evaluate(doubleArray62);
        variance55.setBiasCorrected(true);
        long long66 = variance55.getN();
        variance55.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance69 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray76 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double77 = variance69.evaluate(doubleArray76);
        double double78 = variance55.evaluate(doubleArray76);
        double double79 = variance1.evaluate(doubleArray76);
        variance1.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance82 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray89 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double90 = variance82.evaluate(doubleArray89);
        double[] doubleArray94 = new double[] { (byte) 1, (byte) 100, 1L };
        double double95 = variance82.evaluate(doubleArray94);
        variance1.incrementAll(doubleArray94);
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 2168.222222222222d + "'", double9 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[0.0, 1.0, 1.0, 0.0, -1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 16.566666666666663d + "'", double20 == 16.566666666666663d);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 2168.222222222222d + "'", double36 == 2168.222222222222d);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 2168.222222222222d + "'", double48 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 2601.8666666666663d + "'", double51 == 2601.8666666666663d);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 2168.222222222222d + "'", double63 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + long66 + "' != '" + 0L + "'", long66 == 0L);
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double77 + "' != '" + 2168.222222222222d + "'", double77 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + double78 + "' != '" + 2601.866666666667d + "'", double78 == 2601.866666666667d);
        org.junit.Assert.assertTrue("'" + double79 + "' != '" + 2601.866666666667d + "'", double79 == 2601.866666666667d);
        org.junit.Assert.assertNotNull(doubleArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray89), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double90 + "' != '" + 2168.222222222222d + "'", double90 == 2168.222222222222d);
        org.junit.Assert.assertNotNull(doubleArray94);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray94), "[1.0, 100.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double95 + "' != '" + 2178.0d + "'", double95 == 2178.0d);
    }

    @Test
    public void test1093() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1093");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray8 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double9 = variance1.evaluate(doubleArray8);
        long long10 = variance1.getN();
        variance1.increment((double) (byte) 1);
        double double13 = variance1.getResult();
        java.lang.Class<?> wildcardClass14 = variance1.getClass();
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 2168.222222222222d + "'", double9 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 0L + "'", long10 == 0L);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        org.junit.Assert.assertNotNull(wildcardClass14);
    }

    @Test
    public void test1094() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1094");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray8 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double9 = variance1.evaluate(doubleArray8);
        variance1.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance13 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance13.clear();
        double double15 = variance13.getResult();
        double[] doubleArray20 = new double[] { (-1), 2168.222222222222d, 16.566666666418314d, 10.0d };
        variance13.incrementAll(doubleArray20);
        variance1.incrementAll(doubleArray20);
        org.apache.commons.math.stat.descriptive.moment.Variance variance23 = new org.apache.commons.math.stat.descriptive.moment.Variance();
        long long24 = variance23.getN();
        variance23.setBiasCorrected(true);
        variance23.increment(2178.0d);
        boolean boolean29 = variance23.isBiasCorrected();
        org.apache.commons.math.stat.descriptive.moment.Variance variance31 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray38 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double39 = variance31.evaluate(doubleArray38);
        variance31.setBiasCorrected(true);
        boolean boolean42 = variance31.isBiasCorrected();
        double[] doubleArray49 = new double[] { (short) 0, 1.0d, 1L, 0.0d, (-1.0d), 10L };
        double double50 = variance31.evaluate(doubleArray49);
        double double51 = variance31.getResult();
        long long52 = variance31.getN();
        variance31.increment((double) '#');
        variance31.increment(100.0d);
        org.apache.commons.math.stat.descriptive.moment.Variance variance58 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray65 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double66 = variance58.evaluate(doubleArray65);
        variance58.setBiasCorrected(true);
        boolean boolean69 = variance58.isBiasCorrected();
        double[] doubleArray76 = new double[] { (short) 0, 1.0d, 1L, 0.0d, (-1.0d), 10L };
        double double77 = variance58.evaluate(doubleArray76);
        double double79 = variance31.evaluate(doubleArray76, (double) (byte) 100);
        double double80 = variance23.evaluate(doubleArray76);
        double double81 = variance1.evaluate(doubleArray76);
        java.lang.Class<?> wildcardClass82 = variance1.getClass();
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 2168.222222222222d + "'", double9 == 2168.222222222222d);
        org.junit.Assert.assertTrue(Double.isNaN(double15));
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[-1.0, 2168.222222222222, 16.566666666418314, 10.0]");
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + 0L + "'", long24 == 0L);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 2168.222222222222d + "'", double39 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[0.0, 1.0, 1.0, 0.0, -1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 16.566666666666663d + "'", double50 == 16.566666666666663d);
        org.junit.Assert.assertTrue(Double.isNaN(double51));
        org.junit.Assert.assertTrue("'" + long52 + "' != '" + 0L + "'", long52 == 0L);
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 2168.222222222222d + "'", double66 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[0.0, 1.0, 1.0, 0.0, -1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double77 + "' != '" + 16.566666666666663d + "'", double77 == 16.566666666666663d);
        org.junit.Assert.assertTrue("'" + double79 + "' != '" + 16.566666666667153d + "'", double79 == 16.566666666667153d);
        org.junit.Assert.assertTrue("'" + double80 + "' != '" + 16.566666666666663d + "'", double80 == 16.566666666666663d);
        org.junit.Assert.assertTrue("'" + double81 + "' != '" + 16.566666666666663d + "'", double81 == 16.566666666666663d);
        org.junit.Assert.assertNotNull(wildcardClass82);
    }

    @Test
    public void test1095() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1095");
        org.apache.commons.math.stat.descriptive.moment.Variance variance0 = new org.apache.commons.math.stat.descriptive.moment.Variance();
        variance0.increment(1694.7000000000003d);
        double double3 = variance0.getResult();
        variance0.setBiasCorrected(false);
        boolean boolean6 = variance0.isBiasCorrected();
        long long7 = variance0.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray16 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double17 = variance9.evaluate(doubleArray16);
        variance9.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance21 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray28 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double29 = variance21.evaluate(doubleArray28);
        variance9.incrementAll(doubleArray28);
        variance9.clear();
        boolean boolean32 = variance9.isBiasCorrected();
        boolean boolean33 = variance0.equals((java.lang.Object) boolean32);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 0.0d + "'", double3 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 1L + "'", long7 == 1L);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 2168.222222222222d + "'", double17 == 2168.222222222222d);
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 2168.222222222222d + "'", double29 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
    }

    @Test
    public void test1096() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1096");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance1.clear();
        double double3 = variance1.getResult();
        variance1.increment((double) '4');
        long long6 = variance1.getN();
        variance1.setBiasCorrected(false);
        variance1.increment((double) 'a');
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 1L + "'", long6 == 1L);
    }

    @Test
    public void test1097() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1097");
        org.apache.commons.math.stat.descriptive.moment.Variance variance0 = new org.apache.commons.math.stat.descriptive.moment.Variance();
        double double1 = variance0.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance3 = new org.apache.commons.math.stat.descriptive.moment.Variance(true);
        variance3.increment(16.566666666418314d);
        org.apache.commons.math.stat.descriptive.moment.Variance variance7 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray14 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double15 = variance7.evaluate(doubleArray14);
        variance7.setBiasCorrected(true);
        long long18 = variance7.getN();
        long long19 = variance7.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance21 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray28 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double29 = variance21.evaluate(doubleArray28);
        double[] doubleArray33 = new double[] { (byte) 1, (byte) 100, 1L };
        double double34 = variance21.evaluate(doubleArray33);
        double double36 = variance7.evaluate(doubleArray33, (double) 10.0f);
        double double38 = variance3.evaluate(doubleArray33, 13.805555555555557d);
        // The following exception was thrown during execution in test generation
        try {
            variance0.incrementAll(doubleArray33, (int) (byte) -1, (-1));
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: start position cannot be negative");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue(Double.isNaN(double1));
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 2168.222222222222d + "'", double15 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 0L + "'", long18 == 0L);
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + 0L + "'", long19 == 0L);
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 2168.222222222222d + "'", double29 == 2168.222222222222d);
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[1.0, 100.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 2178.0d + "'", double34 == 2178.0d);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 3267.0d + "'", double36 == 3267.0d);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 3266.9999999999995d + "'", double38 == 3266.9999999999995d);
    }

    @Test
    public void test1098() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1098");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray8 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double9 = variance1.evaluate(doubleArray8);
        variance1.setBiasCorrected(true);
        variance1.increment((double) (byte) 0);
        double[] doubleArray16 = new double[] { 'a', 100L };
        double double18 = variance1.evaluate(doubleArray16, 0.0d);
        double double19 = variance1.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance21 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance21.clear();
        double double23 = variance21.getResult();
        double[] doubleArray28 = new double[] { (-1), 2168.222222222222d, 16.566666666418314d, 10.0d };
        variance21.incrementAll(doubleArray28);
        variance1.incrementAll(doubleArray28, (int) (short) 1, 1);
        variance1.increment(2.25d);
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 2168.222222222222d + "'", double9 == 2168.222222222222d);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[97.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 4.5d + "'", double18 == 4.5d);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.0d + "'", double19 == 0.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[-1.0, 2168.222222222222, 16.566666666418314, 10.0]");
    }

    @Test
    public void test1099() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1099");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment1 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance2 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment1);
        variance2.clear();
        double[] doubleArray4 = new double[] {};
        variance2.incrementAll(doubleArray4);
        variance2.increment(2178.0d);
        variance2.clear();
        variance2.increment((double) 100);
        variance2.clear();
        variance2.clear();
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[]");
    }

    @Test
    public void test1100() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1100");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray8 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double9 = variance1.evaluate(doubleArray8);
        variance1.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance13 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray20 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double21 = variance13.evaluate(doubleArray20);
        variance13.setBiasCorrected(true);
        boolean boolean24 = variance13.isBiasCorrected();
        double[] doubleArray31 = new double[] { (short) 0, 1.0d, 1L, 0.0d, (-1.0d), 10L };
        double double32 = variance13.evaluate(doubleArray31);
        org.apache.commons.math.stat.descriptive.moment.Variance variance34 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray41 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double42 = variance34.evaluate(doubleArray41);
        variance34.setBiasCorrected(true);
        boolean boolean45 = variance34.isBiasCorrected();
        double[] doubleArray52 = new double[] { (short) 0, 1.0d, 1L, 0.0d, (-1.0d), 10L };
        double double53 = variance34.evaluate(doubleArray52);
        double double56 = variance13.evaluate(doubleArray52, (int) (byte) 1, 0);
        double double58 = variance1.evaluate(doubleArray52, 2178.0d);
        variance1.increment(3267.0d);
        org.apache.commons.math.stat.descriptive.moment.Variance variance62 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray69 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double70 = variance62.evaluate(doubleArray69);
        variance62.setBiasCorrected(true);
        variance62.clear();
        boolean boolean74 = variance1.equals((java.lang.Object) variance62);
        variance62.increment((double) 10);
        variance62.increment(1175056.0d);
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 2168.222222222222d + "'", double9 == 2168.222222222222d);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 2168.222222222222d + "'", double21 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[0.0, 1.0, 1.0, 0.0, -1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 16.566666666666663d + "'", double32 == 16.566666666666663d);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 2168.222222222222d + "'", double42 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[0.0, 1.0, 1.0, 0.0, -1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 16.566666666666663d + "'", double53 == 16.566666666666663d);
        org.junit.Assert.assertTrue(Double.isNaN(double56));
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 16.566666666418314d + "'", double58 == 16.566666666418314d);
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + 2168.222222222222d + "'", double70 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
    }

    @Test
    public void test1101() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1101");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray8 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double9 = variance1.evaluate(doubleArray8);
        variance1.setBiasCorrected(true);
        long long12 = variance1.getN();
        long long13 = variance1.getN();
        boolean boolean15 = variance1.equals((java.lang.Object) 16.566666666666663d);
        boolean boolean17 = variance1.equals((java.lang.Object) (short) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance19 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray26 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double27 = variance19.evaluate(doubleArray26);
        variance19.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance31 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray38 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double39 = variance31.evaluate(doubleArray38);
        variance31.setBiasCorrected(true);
        boolean boolean42 = variance31.isBiasCorrected();
        double[] doubleArray49 = new double[] { (short) 0, 1.0d, 1L, 0.0d, (-1.0d), 10L };
        double double50 = variance31.evaluate(doubleArray49);
        org.apache.commons.math.stat.descriptive.moment.Variance variance52 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray59 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double60 = variance52.evaluate(doubleArray59);
        variance52.setBiasCorrected(true);
        boolean boolean63 = variance52.isBiasCorrected();
        double[] doubleArray70 = new double[] { (short) 0, 1.0d, 1L, 0.0d, (-1.0d), 10L };
        double double71 = variance52.evaluate(doubleArray70);
        double double74 = variance31.evaluate(doubleArray70, (int) (byte) 1, 0);
        double double76 = variance19.evaluate(doubleArray70, 2178.0d);
        double double77 = variance1.evaluate(doubleArray70);
        variance1.increment((double) 1);
        double double80 = variance1.getResult();
        variance1.clear();
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 2168.222222222222d + "'", double9 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 0L + "'", long12 == 0L);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 0L + "'", long13 == 0L);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 2168.222222222222d + "'", double27 == 2168.222222222222d);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 2168.222222222222d + "'", double39 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[0.0, 1.0, 1.0, 0.0, -1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 16.566666666666663d + "'", double50 == 16.566666666666663d);
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 2168.222222222222d + "'", double60 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[0.0, 1.0, 1.0, 0.0, -1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + 16.566666666666663d + "'", double71 == 16.566666666666663d);
        org.junit.Assert.assertTrue(Double.isNaN(double74));
        org.junit.Assert.assertTrue("'" + double76 + "' != '" + 16.566666666418314d + "'", double76 == 16.566666666418314d);
        org.junit.Assert.assertTrue("'" + double77 + "' != '" + 16.566666666666663d + "'", double77 == 16.566666666666663d);
        org.junit.Assert.assertTrue("'" + double80 + "' != '" + 0.0d + "'", double80 == 0.0d);
    }

    @Test
    public void test1102() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1102");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance3 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray10 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double11 = variance3.evaluate(doubleArray10);
        variance3.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance15 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray22 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double23 = variance15.evaluate(doubleArray22);
        variance15.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance27 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray34 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double35 = variance27.evaluate(doubleArray34);
        variance27.setBiasCorrected(true);
        boolean boolean38 = variance27.isBiasCorrected();
        double[] doubleArray45 = new double[] { (short) 0, 1.0d, 1L, 0.0d, (-1.0d), 10L };
        double double46 = variance27.evaluate(doubleArray45);
        double double49 = variance15.evaluate(doubleArray45, (int) (byte) 1, (int) (byte) 0);
        variance3.incrementAll(doubleArray45, (int) (byte) 1, 1);
        double double53 = variance1.evaluate(doubleArray45);
        double double54 = variance1.getResult();
        boolean boolean55 = variance1.isBiasCorrected();
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 2168.222222222222d + "'", double11 == 2168.222222222222d);
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 2168.222222222222d + "'", double23 == 2168.222222222222d);
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 2168.222222222222d + "'", double35 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[0.0, 1.0, 1.0, 0.0, -1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 16.566666666666663d + "'", double46 == 16.566666666666663d);
        org.junit.Assert.assertTrue(Double.isNaN(double49));
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 13.805555555555552d + "'", double53 == 13.805555555555552d);
        org.junit.Assert.assertTrue(Double.isNaN(double54));
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
    }

    @Test
    public void test1103() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1103");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray8 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double9 = variance1.evaluate(doubleArray8);
        variance1.setBiasCorrected(true);
        long long12 = variance1.getN();
        long long13 = variance1.getN();
        boolean boolean14 = variance1.isBiasCorrected();
        org.apache.commons.math.stat.descriptive.moment.Variance variance16 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray23 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double24 = variance16.evaluate(doubleArray23);
        double[] doubleArray28 = new double[] { (byte) 1, (byte) 100, 1L };
        double double29 = variance16.evaluate(doubleArray28);
        variance1.incrementAll(doubleArray28, (int) (short) 1, 0);
        org.apache.commons.math.stat.descriptive.moment.Variance variance34 = new org.apache.commons.math.stat.descriptive.moment.Variance(true);
        double double35 = variance34.getResult();
        double double36 = variance34.getResult();
        variance34.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance39 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray46 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double47 = variance39.evaluate(doubleArray46);
        variance39.setBiasCorrected(true);
        long long50 = variance39.getN();
        long long51 = variance39.getN();
        boolean boolean52 = variance39.isBiasCorrected();
        org.apache.commons.math.stat.descriptive.moment.Variance variance54 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray61 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double62 = variance54.evaluate(doubleArray61);
        double[] doubleArray66 = new double[] { (byte) 1, (byte) 100, 1L };
        double double67 = variance54.evaluate(doubleArray66);
        variance39.incrementAll(doubleArray66, (int) (short) 1, 0);
        variance34.incrementAll(doubleArray66);
        variance1.incrementAll(doubleArray66);
        double double73 = variance1.getResult();
        double double74 = variance1.getResult();
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 2168.222222222222d + "'", double9 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 0L + "'", long12 == 0L);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 0L + "'", long13 == 0L);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 2168.222222222222d + "'", double24 == 2168.222222222222d);
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[1.0, 100.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 2178.0d + "'", double29 == 2178.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double35));
        org.junit.Assert.assertTrue(Double.isNaN(double36));
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 2168.222222222222d + "'", double47 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + long50 + "' != '" + 0L + "'", long50 == 0L);
        org.junit.Assert.assertTrue("'" + long51 + "' != '" + 0L + "'", long51 == 0L);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 2168.222222222222d + "'", double62 == 2168.222222222222d);
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[1.0, 100.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 2178.0d + "'", double67 == 2178.0d);
        org.junit.Assert.assertTrue("'" + double73 + "' != '" + 3267.0d + "'", double73 == 3267.0d);
        org.junit.Assert.assertTrue("'" + double74 + "' != '" + 3267.0d + "'", double74 == 3267.0d);
    }

    @Test
    public void test1104() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1104");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray8 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double9 = variance1.evaluate(doubleArray8);
        variance1.setBiasCorrected(true);
        boolean boolean12 = variance1.isBiasCorrected();
        double double13 = variance1.getResult();
        variance1.increment((double) 'a');
        boolean boolean16 = variance1.isBiasCorrected();
        variance1.setBiasCorrected(true);
        variance1.setBiasCorrected(true);
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 2168.222222222222d + "'", double9 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double13));
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
    }

    @Test
    public void test1105() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1105");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray8 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double9 = variance1.evaluate(doubleArray8);
        variance1.setBiasCorrected(true);
        boolean boolean12 = variance1.isBiasCorrected();
        double[] doubleArray19 = new double[] { (short) 0, 1.0d, 1L, 0.0d, (-1.0d), 10L };
        double double20 = variance1.evaluate(doubleArray19);
        double double21 = variance1.getResult();
        variance1.setBiasCorrected(true);
        long long24 = variance1.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance26 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray33 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double34 = variance26.evaluate(doubleArray33);
        variance26.setBiasCorrected(true);
        boolean boolean37 = variance26.isBiasCorrected();
        double[] doubleArray44 = new double[] { (short) 0, 1.0d, 1L, 0.0d, (-1.0d), 10L };
        double double45 = variance26.evaluate(doubleArray44);
        boolean boolean47 = variance26.equals((java.lang.Object) 10.0d);
        org.apache.commons.math.stat.descriptive.moment.Variance variance49 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray56 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double57 = variance49.evaluate(doubleArray56);
        variance49.setBiasCorrected(true);
        boolean boolean60 = variance49.isBiasCorrected();
        double[] doubleArray67 = new double[] { (short) 0, 1.0d, 1L, 0.0d, (-1.0d), 10L };
        double double68 = variance49.evaluate(doubleArray67);
        double double70 = variance26.evaluate(doubleArray67, (double) 0.0f);
        variance1.incrementAll(doubleArray67);
        long long72 = variance1.getN();
        variance1.increment((double) 10);
        double double75 = variance1.getResult();
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 2168.222222222222d + "'", double9 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[0.0, 1.0, 1.0, 0.0, -1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 16.566666666666663d + "'", double20 == 16.566666666666663d);
        org.junit.Assert.assertTrue(Double.isNaN(double21));
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + 0L + "'", long24 == 0L);
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 2168.222222222222d + "'", double34 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[0.0, 1.0, 1.0, 0.0, -1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 16.566666666666663d + "'", double45 == 16.566666666666663d);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 2168.222222222222d + "'", double57 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[0.0, 1.0, 1.0, 0.0, -1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 16.566666666666663d + "'", double68 == 16.566666666666663d);
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + 16.566666666666666d + "'", double70 == 16.566666666666666d);
        org.junit.Assert.assertTrue("'" + long72 + "' != '" + 6L + "'", long72 == 6L);
        org.junit.Assert.assertTrue("'" + double75 + "' != '" + 23.333333333333332d + "'", double75 == 23.333333333333332d);
    }

    @Test
    public void test1106() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1106");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance1.setBiasCorrected(false);
        long long4 = variance1.getN();
        variance1.increment((double) 0.0f);
        org.apache.commons.math.stat.descriptive.moment.Variance variance8 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray15 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double16 = variance8.evaluate(doubleArray15);
        variance8.setBiasCorrected(true);
        boolean boolean19 = variance8.isBiasCorrected();
        double[] doubleArray26 = new double[] { (short) 0, 1.0d, 1L, 0.0d, (-1.0d), 10L };
        double double27 = variance8.evaluate(doubleArray26);
        boolean boolean29 = variance8.equals((java.lang.Object) 10.0d);
        org.apache.commons.math.stat.descriptive.moment.Variance variance31 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray38 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double39 = variance31.evaluate(doubleArray38);
        variance31.setBiasCorrected(true);
        boolean boolean42 = variance31.isBiasCorrected();
        double[] doubleArray49 = new double[] { (short) 0, 1.0d, 1L, 0.0d, (-1.0d), 10L };
        double double50 = variance31.evaluate(doubleArray49);
        double double52 = variance8.evaluate(doubleArray49, (double) 0.0f);
        boolean boolean53 = variance1.equals((java.lang.Object) double52);
        variance1.increment(2168.222222222222d);
        org.apache.commons.math.stat.descriptive.moment.Variance variance57 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray64 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double65 = variance57.evaluate(doubleArray64);
        variance57.setBiasCorrected(true);
        boolean boolean68 = variance57.isBiasCorrected();
        double[] doubleArray75 = new double[] { (short) 0, 1.0d, 1L, 0.0d, (-1.0d), 10L };
        double double76 = variance57.evaluate(doubleArray75);
        double double77 = variance57.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance79 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance79.clear();
        double double81 = variance79.getResult();
        double[] doubleArray86 = new double[] { (-1), 2168.222222222222d, 16.566666666418314d, 10.0d };
        variance79.incrementAll(doubleArray86);
        double double88 = variance57.evaluate(doubleArray86);
        boolean boolean89 = variance1.equals((java.lang.Object) variance57);
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 0L + "'", long4 == 0L);
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 2168.222222222222d + "'", double16 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[0.0, 1.0, 1.0, 0.0, -1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 16.566666666666663d + "'", double27 == 16.566666666666663d);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 2168.222222222222d + "'", double39 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[0.0, 1.0, 1.0, 0.0, -1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 16.566666666666663d + "'", double50 == 16.566666666666663d);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 16.566666666666666d + "'", double52 == 16.566666666666666d);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 2168.222222222222d + "'", double65 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray75), "[0.0, 1.0, 1.0, 0.0, -1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double76 + "' != '" + 16.566666666666663d + "'", double76 == 16.566666666666663d);
        org.junit.Assert.assertTrue(Double.isNaN(double77));
        org.junit.Assert.assertTrue(Double.isNaN(double81));
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray86), "[-1.0, 2168.222222222222, 16.566666666418314, 10.0]");
        org.junit.Assert.assertTrue("'" + double88 + "' != '" + 1166128.5457099646d + "'", double88 == 1166128.5457099646d);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
    }

    @Test
    public void test1107() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1107");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray8 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double9 = variance1.evaluate(doubleArray8);
        variance1.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance12 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance12.clear();
        double double14 = variance12.getResult();
        double double15 = variance12.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance17 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray24 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double25 = variance17.evaluate(doubleArray24);
        double[] doubleArray29 = new double[] { (byte) 1, (byte) 100, 1L };
        double double30 = variance17.evaluate(doubleArray29);
        org.apache.commons.math.stat.descriptive.moment.Variance variance32 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray39 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double40 = variance32.evaluate(doubleArray39);
        variance32.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance44 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray51 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double52 = variance44.evaluate(doubleArray51);
        variance32.incrementAll(doubleArray51);
        variance17.incrementAll(doubleArray51);
        variance12.incrementAll(doubleArray51);
        boolean boolean56 = variance1.equals((java.lang.Object) variance12);
        variance1.clear();
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 2168.222222222222d + "'", double9 == 2168.222222222222d);
        org.junit.Assert.assertTrue(Double.isNaN(double14));
        org.junit.Assert.assertTrue(Double.isNaN(double15));
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 2168.222222222222d + "'", double25 == 2168.222222222222d);
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[1.0, 100.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 2178.0d + "'", double30 == 2178.0d);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 2168.222222222222d + "'", double40 == 2168.222222222222d);
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 2168.222222222222d + "'", double52 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
    }

    @Test
    public void test1108() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1108");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray8 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double9 = variance1.evaluate(doubleArray8);
        variance1.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance13 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance13.clear();
        double double15 = variance13.getResult();
        double[] doubleArray20 = new double[] { (-1), 2168.222222222222d, 16.566666666418314d, 10.0d };
        variance13.incrementAll(doubleArray20);
        variance1.incrementAll(doubleArray20);
        variance1.increment(16.566666666666674d);
        java.lang.Class<?> wildcardClass25 = variance1.getClass();
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 2168.222222222222d + "'", double9 == 2168.222222222222d);
        org.junit.Assert.assertTrue(Double.isNaN(double15));
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[-1.0, 2168.222222222222, 16.566666666418314, 10.0]");
        org.junit.Assert.assertNotNull(wildcardClass25);
    }

    @Test
    public void test1109() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1109");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray8 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double9 = variance1.evaluate(doubleArray8);
        variance1.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance13 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray20 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double21 = variance13.evaluate(doubleArray20);
        variance1.incrementAll(doubleArray20);
        variance1.clear();
        variance1.setBiasCorrected(false);
        variance1.setBiasCorrected(false);
        variance1.setBiasCorrected(true);
        boolean boolean30 = variance1.isBiasCorrected();
        org.apache.commons.math.stat.descriptive.moment.Variance variance32 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        boolean boolean33 = variance1.equals((java.lang.Object) false);
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 2168.222222222222d + "'", double9 == 2168.222222222222d);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 2168.222222222222d + "'", double21 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
    }

    @Test
    public void test1110() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1110");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray8 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double9 = variance1.evaluate(doubleArray8);
        variance1.setBiasCorrected(true);
        long long12 = variance1.getN();
        long long13 = variance1.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance15 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray22 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double23 = variance15.evaluate(doubleArray22);
        double[] doubleArray27 = new double[] { (byte) 1, (byte) 100, 1L };
        double double28 = variance15.evaluate(doubleArray27);
        double double30 = variance1.evaluate(doubleArray27, (double) 10.0f);
        org.apache.commons.math.stat.descriptive.moment.Variance variance32 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray39 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double40 = variance32.evaluate(doubleArray39);
        variance32.setBiasCorrected(true);
        long long43 = variance32.getN();
        long long44 = variance32.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance46 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray53 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double54 = variance46.evaluate(doubleArray53);
        double[] doubleArray58 = new double[] { (byte) 1, (byte) 100, 1L };
        double double59 = variance46.evaluate(doubleArray58);
        double double61 = variance32.evaluate(doubleArray58, (double) 10.0f);
        double double62 = variance1.evaluate(doubleArray58);
        org.apache.commons.math.stat.descriptive.moment.Variance variance64 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray71 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double72 = variance64.evaluate(doubleArray71);
        variance64.setBiasCorrected(true);
        boolean boolean75 = variance64.isBiasCorrected();
        double[] doubleArray82 = new double[] { (short) 0, 1.0d, 1L, 0.0d, (-1.0d), 10L };
        double double83 = variance64.evaluate(doubleArray82);
        double double85 = variance1.evaluate(doubleArray82, (double) 0.0f);
        boolean boolean86 = variance1.isBiasCorrected();
        variance1.clear();
        variance1.clear();
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 2168.222222222222d + "'", double9 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 0L + "'", long12 == 0L);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 0L + "'", long13 == 0L);
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 2168.222222222222d + "'", double23 == 2168.222222222222d);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[1.0, 100.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 2178.0d + "'", double28 == 2178.0d);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 3267.0d + "'", double30 == 3267.0d);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 2168.222222222222d + "'", double40 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + long43 + "' != '" + 0L + "'", long43 == 0L);
        org.junit.Assert.assertTrue("'" + long44 + "' != '" + 0L + "'", long44 == 0L);
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray53), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 2168.222222222222d + "'", double54 == 2168.222222222222d);
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[1.0, 100.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 2178.0d + "'", double59 == 2178.0d);
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 3267.0d + "'", double61 == 3267.0d);
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 3267.0d + "'", double62 == 3267.0d);
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 2168.222222222222d + "'", double72 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray82), "[0.0, 1.0, 1.0, 0.0, -1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + 16.566666666666663d + "'", double83 == 16.566666666666663d);
        org.junit.Assert.assertTrue("'" + double85 + "' != '" + 16.566666666666666d + "'", double85 == 16.566666666666666d);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
    }

    @Test
    public void test1111() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1111");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance1.clear();
        boolean boolean3 = variance1.isBiasCorrected();
        boolean boolean5 = variance1.equals((java.lang.Object) 1166128.5457099646d);
        variance1.clear();
        long long7 = variance1.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray16 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double17 = variance9.evaluate(doubleArray16);
        long long18 = variance9.getN();
        variance9.increment((double) (byte) 1);
        variance9.increment((double) 6L);
        variance9.increment(2178.0d);
        org.apache.commons.math.stat.descriptive.moment.Variance variance25 = new org.apache.commons.math.stat.descriptive.moment.Variance();
        long long26 = variance25.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance28 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray35 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double36 = variance28.evaluate(doubleArray35);
        variance28.setBiasCorrected(true);
        boolean boolean39 = variance28.isBiasCorrected();
        double[] doubleArray46 = new double[] { (short) 0, 1.0d, 1L, 0.0d, (-1.0d), 10L };
        double double47 = variance28.evaluate(doubleArray46);
        boolean boolean49 = variance28.equals((java.lang.Object) 10.0d);
        boolean boolean50 = variance28.isBiasCorrected();
        org.apache.commons.math.stat.descriptive.moment.Variance variance52 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        boolean boolean53 = variance28.equals((java.lang.Object) false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance55 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray62 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double63 = variance55.evaluate(doubleArray62);
        variance55.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance67 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray74 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double75 = variance67.evaluate(doubleArray74);
        variance55.incrementAll(doubleArray74);
        double double78 = variance28.evaluate(doubleArray74, (double) 100.0f);
        variance25.incrementAll(doubleArray74, (int) (short) 1, (int) (byte) 0);
        variance9.incrementAll(doubleArray74);
        double double83 = variance1.evaluate(doubleArray74);
        double double84 = variance1.getResult();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 0L + "'", long7 == 0L);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 2168.222222222222d + "'", double17 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 0L + "'", long18 == 0L);
        org.junit.Assert.assertTrue("'" + long26 + "' != '" + 0L + "'", long26 == 0L);
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 2168.222222222222d + "'", double36 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[0.0, 1.0, 1.0, 0.0, -1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 16.566666666666663d + "'", double47 == 16.566666666666663d);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 2168.222222222222d + "'", double63 == 2168.222222222222d);
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray74), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double75 + "' != '" + 2168.222222222222d + "'", double75 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + double78 + "' != '" + 2601.8666666666663d + "'", double78 == 2601.8666666666663d);
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + 2168.222222222222d + "'", double83 == 2168.222222222222d);
        org.junit.Assert.assertTrue(Double.isNaN(double84));
    }

    @Test
    public void test1112() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1112");
        org.apache.commons.math.stat.descriptive.moment.Variance variance0 = new org.apache.commons.math.stat.descriptive.moment.Variance();
        double double1 = variance0.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance3 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray10 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double11 = variance3.evaluate(doubleArray10);
        variance3.setBiasCorrected(true);
        long long14 = variance3.getN();
        long long15 = variance3.getN();
        boolean boolean17 = variance3.equals((java.lang.Object) 16.566666666666663d);
        boolean boolean19 = variance3.equals((java.lang.Object) (short) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance21 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray28 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double29 = variance21.evaluate(doubleArray28);
        variance21.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance33 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray40 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double41 = variance33.evaluate(doubleArray40);
        variance33.setBiasCorrected(true);
        boolean boolean44 = variance33.isBiasCorrected();
        double[] doubleArray51 = new double[] { (short) 0, 1.0d, 1L, 0.0d, (-1.0d), 10L };
        double double52 = variance33.evaluate(doubleArray51);
        org.apache.commons.math.stat.descriptive.moment.Variance variance54 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray61 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double62 = variance54.evaluate(doubleArray61);
        variance54.setBiasCorrected(true);
        boolean boolean65 = variance54.isBiasCorrected();
        double[] doubleArray72 = new double[] { (short) 0, 1.0d, 1L, 0.0d, (-1.0d), 10L };
        double double73 = variance54.evaluate(doubleArray72);
        double double76 = variance33.evaluate(doubleArray72, (int) (byte) 1, 0);
        double double78 = variance21.evaluate(doubleArray72, 2178.0d);
        double double79 = variance3.evaluate(doubleArray72);
        boolean boolean80 = variance0.equals((java.lang.Object) double79);
        variance0.increment(16.56666666666674d);
        variance0.increment(16.56666666666667d);
        org.junit.Assert.assertTrue(Double.isNaN(double1));
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 2168.222222222222d + "'", double11 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 0L + "'", long14 == 0L);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 0L + "'", long15 == 0L);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 2168.222222222222d + "'", double29 == 2168.222222222222d);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 2168.222222222222d + "'", double41 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[0.0, 1.0, 1.0, 0.0, -1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 16.566666666666663d + "'", double52 == 16.566666666666663d);
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 2168.222222222222d + "'", double62 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray72), "[0.0, 1.0, 1.0, 0.0, -1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double73 + "' != '" + 16.566666666666663d + "'", double73 == 16.566666666666663d);
        org.junit.Assert.assertTrue(Double.isNaN(double76));
        org.junit.Assert.assertTrue("'" + double78 + "' != '" + 16.566666666418314d + "'", double78 == 16.566666666418314d);
        org.junit.Assert.assertTrue("'" + double79 + "' != '" + 16.566666666666663d + "'", double79 == 16.566666666666663d);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
    }

    @Test
    public void test1113() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1113");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray8 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double9 = variance1.evaluate(doubleArray8);
        variance1.setBiasCorrected(true);
        variance1.increment((double) (byte) 0);
        variance1.clear();
        double double15 = variance1.getResult();
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 2168.222222222222d + "'", double9 == 2168.222222222222d);
        org.junit.Assert.assertTrue(Double.isNaN(double15));
    }

    @Test
    public void test1114() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1114");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray8 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double9 = variance1.evaluate(doubleArray8);
        variance1.setBiasCorrected(true);
        boolean boolean12 = variance1.isBiasCorrected();
        double double13 = variance1.getResult();
        variance1.increment((double) 'a');
        variance1.clear();
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 2168.222222222222d + "'", double9 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double13));
    }

    @Test
    public void test1115() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1115");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray8 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double9 = variance1.evaluate(doubleArray8);
        variance1.clear();
        variance1.setBiasCorrected(true);
        double double13 = variance1.getResult();
        variance1.clear();
        variance1.clear();
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 2168.222222222222d + "'", double9 == 2168.222222222222d);
        org.junit.Assert.assertTrue(Double.isNaN(double13));
    }

    @Test
    public void test1116() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1116");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance1.clear();
        boolean boolean3 = variance1.isBiasCorrected();
        double double4 = variance1.getResult();
        variance1.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance7 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray14 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double15 = variance7.evaluate(doubleArray14);
        variance7.setBiasCorrected(true);
        long long18 = variance7.getN();
        variance7.clear();
        double double20 = variance7.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance22 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray29 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double30 = variance22.evaluate(doubleArray29);
        variance22.setBiasCorrected(true);
        boolean boolean33 = variance22.isBiasCorrected();
        double[] doubleArray40 = new double[] { (short) 0, 1.0d, 1L, 0.0d, (-1.0d), 10L };
        double double41 = variance22.evaluate(doubleArray40);
        org.apache.commons.math.stat.descriptive.moment.Variance variance43 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray50 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double51 = variance43.evaluate(doubleArray50);
        variance43.setBiasCorrected(true);
        boolean boolean54 = variance43.isBiasCorrected();
        double[] doubleArray61 = new double[] { (short) 0, 1.0d, 1L, 0.0d, (-1.0d), 10L };
        double double62 = variance43.evaluate(doubleArray61);
        double double65 = variance22.evaluate(doubleArray61, (int) (byte) 1, 0);
        variance7.incrementAll(doubleArray61);
        double double68 = variance1.evaluate(doubleArray61, 2601.8666666664185d);
        long long69 = variance1.getN();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double4));
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 2168.222222222222d + "'", double15 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 0L + "'", long18 == 0L);
        org.junit.Assert.assertTrue(Double.isNaN(double20));
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 2168.222222222222d + "'", double30 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[0.0, 1.0, 1.0, 0.0, -1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 16.566666666666663d + "'", double41 == 16.566666666666663d);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 2168.222222222222d + "'", double51 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[0.0, 1.0, 1.0, 0.0, -1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 16.566666666666663d + "'", double62 == 16.566666666666663d);
        org.junit.Assert.assertTrue(Double.isNaN(double65));
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 13.805555558453003d + "'", double68 == 13.805555558453003d);
        org.junit.Assert.assertTrue("'" + long69 + "' != '" + 0L + "'", long69 == 0L);
    }

    @Test
    public void test1117() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1117");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance3 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray10 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double11 = variance3.evaluate(doubleArray10);
        variance3.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance15 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray22 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double23 = variance15.evaluate(doubleArray22);
        variance15.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance27 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray34 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double35 = variance27.evaluate(doubleArray34);
        variance27.setBiasCorrected(true);
        boolean boolean38 = variance27.isBiasCorrected();
        double[] doubleArray45 = new double[] { (short) 0, 1.0d, 1L, 0.0d, (-1.0d), 10L };
        double double46 = variance27.evaluate(doubleArray45);
        double double49 = variance15.evaluate(doubleArray45, (int) (byte) 1, (int) (byte) 0);
        variance3.incrementAll(doubleArray45, (int) (byte) 1, 1);
        double double53 = variance1.evaluate(doubleArray45);
        double double54 = variance1.getResult();
        variance1.clear();
        variance1.setBiasCorrected(true);
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 2168.222222222222d + "'", double11 == 2168.222222222222d);
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 2168.222222222222d + "'", double23 == 2168.222222222222d);
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 2168.222222222222d + "'", double35 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[0.0, 1.0, 1.0, 0.0, -1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 16.566666666666663d + "'", double46 == 16.566666666666663d);
        org.junit.Assert.assertTrue(Double.isNaN(double49));
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 13.805555555555552d + "'", double53 == 13.805555555555552d);
        org.junit.Assert.assertTrue(Double.isNaN(double54));
    }

    @Test
    public void test1118() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1118");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray8 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double9 = variance1.evaluate(doubleArray8);
        variance1.setBiasCorrected(true);
        boolean boolean12 = variance1.isBiasCorrected();
        org.apache.commons.math.stat.descriptive.moment.Variance variance14 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray21 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double22 = variance14.evaluate(doubleArray21);
        variance14.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance26 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray33 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double34 = variance26.evaluate(doubleArray33);
        variance26.setBiasCorrected(true);
        boolean boolean37 = variance26.isBiasCorrected();
        double[] doubleArray44 = new double[] { (short) 0, 1.0d, 1L, 0.0d, (-1.0d), 10L };
        double double45 = variance26.evaluate(doubleArray44);
        double double48 = variance14.evaluate(doubleArray44, (int) (byte) 1, (int) (byte) 0);
        double double51 = variance1.evaluate(doubleArray44, (int) (byte) 1, 0);
        org.apache.commons.math.stat.descriptive.moment.Variance variance53 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray60 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double61 = variance53.evaluate(doubleArray60);
        variance53.clear();
        variance53.setBiasCorrected(true);
        boolean boolean65 = variance1.equals((java.lang.Object) variance53);
        long long66 = variance53.getN();
        boolean boolean67 = variance53.isBiasCorrected();
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 2168.222222222222d + "'", double9 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 2168.222222222222d + "'", double22 == 2168.222222222222d);
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 2168.222222222222d + "'", double34 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[0.0, 1.0, 1.0, 0.0, -1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 16.566666666666663d + "'", double45 == 16.566666666666663d);
        org.junit.Assert.assertTrue(Double.isNaN(double48));
        org.junit.Assert.assertTrue(Double.isNaN(double51));
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 2168.222222222222d + "'", double61 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertTrue("'" + long66 + "' != '" + 0L + "'", long66 == 0L);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
    }

    @Test
    public void test1119() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1119");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray8 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double9 = variance1.evaluate(doubleArray8);
        long long10 = variance1.getN();
        variance1.increment(874596.4092824734d);
        variance1.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance16 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance16.setBiasCorrected(false);
        variance16.clear();
        boolean boolean20 = variance16.isBiasCorrected();
        org.apache.commons.math.stat.descriptive.moment.Variance variance22 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray29 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double30 = variance22.evaluate(doubleArray29);
        variance22.setBiasCorrected(true);
        long long33 = variance22.getN();
        double double34 = variance22.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance36 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray43 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double44 = variance36.evaluate(doubleArray43);
        variance36.setBiasCorrected(true);
        long long47 = variance36.getN();
        long long48 = variance36.getN();
        double double49 = variance36.getResult();
        variance36.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance52 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray59 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double60 = variance52.evaluate(doubleArray59);
        double[] doubleArray64 = new double[] { (byte) 1, (byte) 100, 1L };
        double double65 = variance52.evaluate(doubleArray64);
        org.apache.commons.math.stat.descriptive.moment.Variance variance67 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray74 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double75 = variance67.evaluate(doubleArray74);
        variance67.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance79 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray86 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double87 = variance79.evaluate(doubleArray86);
        variance67.incrementAll(doubleArray86);
        variance52.incrementAll(doubleArray86);
        double double90 = variance36.evaluate(doubleArray86);
        double double91 = variance22.evaluate(doubleArray86);
        double double92 = variance16.evaluate(doubleArray86);
        double double93 = variance1.evaluate(doubleArray86);
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 2168.222222222222d + "'", double9 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 0L + "'", long10 == 0L);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 2168.222222222222d + "'", double30 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + long33 + "' != '" + 0L + "'", long33 == 0L);
        org.junit.Assert.assertTrue(Double.isNaN(double34));
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 2168.222222222222d + "'", double44 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + long47 + "' != '" + 0L + "'", long47 == 0L);
        org.junit.Assert.assertTrue("'" + long48 + "' != '" + 0L + "'", long48 == 0L);
        org.junit.Assert.assertTrue(Double.isNaN(double49));
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 2168.222222222222d + "'", double60 == 2168.222222222222d);
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[1.0, 100.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 2178.0d + "'", double65 == 2178.0d);
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray74), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double75 + "' != '" + 2168.222222222222d + "'", double75 == 2168.222222222222d);
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray86), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double87 + "' != '" + 2168.222222222222d + "'", double87 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + double90 + "' != '" + 2601.866666666667d + "'", double90 == 2601.866666666667d);
        org.junit.Assert.assertTrue("'" + double91 + "' != '" + 2601.866666666667d + "'", double91 == 2601.866666666667d);
        org.junit.Assert.assertTrue("'" + double92 + "' != '" + 2168.222222222222d + "'", double92 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + double93 + "' != '" + 2168.222222222222d + "'", double93 == 2168.222222222222d);
    }

    @Test
    public void test1120() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1120");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray8 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double9 = variance1.evaluate(doubleArray8);
        variance1.setBiasCorrected(true);
        boolean boolean12 = variance1.isBiasCorrected();
        double[] doubleArray19 = new double[] { (short) 0, 1.0d, 1L, 0.0d, (-1.0d), 10L };
        double double20 = variance1.evaluate(doubleArray19);
        org.apache.commons.math.stat.descriptive.moment.Variance variance22 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray29 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double30 = variance22.evaluate(doubleArray29);
        variance22.setBiasCorrected(true);
        boolean boolean33 = variance22.isBiasCorrected();
        double[] doubleArray40 = new double[] { (short) 0, 1.0d, 1L, 0.0d, (-1.0d), 10L };
        double double41 = variance22.evaluate(doubleArray40);
        double double44 = variance1.evaluate(doubleArray40, (int) (byte) 1, 0);
        variance1.setBiasCorrected(true);
        boolean boolean47 = variance1.isBiasCorrected();
        variance1.setBiasCorrected(false);
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 2168.222222222222d + "'", double9 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[0.0, 1.0, 1.0, 0.0, -1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 16.566666666666663d + "'", double20 == 16.566666666666663d);
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 2168.222222222222d + "'", double30 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[0.0, 1.0, 1.0, 0.0, -1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 16.566666666666663d + "'", double41 == 16.566666666666663d);
        org.junit.Assert.assertTrue(Double.isNaN(double44));
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
    }

    @Test
    public void test1121() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1121");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray8 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double9 = variance1.evaluate(doubleArray8);
        variance1.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance13 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray20 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double21 = variance13.evaluate(doubleArray20);
        variance13.setBiasCorrected(true);
        boolean boolean24 = variance13.isBiasCorrected();
        double[] doubleArray31 = new double[] { (short) 0, 1.0d, 1L, 0.0d, (-1.0d), 10L };
        double double32 = variance13.evaluate(doubleArray31);
        double double35 = variance1.evaluate(doubleArray31, (int) (byte) 1, (int) (byte) 0);
        org.apache.commons.math.stat.descriptive.moment.Variance variance37 = new org.apache.commons.math.stat.descriptive.moment.Variance(true);
        variance37.increment(16.566666666418314d);
        org.apache.commons.math.stat.descriptive.moment.Variance variance41 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray48 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double49 = variance41.evaluate(doubleArray48);
        variance41.setBiasCorrected(true);
        long long52 = variance41.getN();
        long long53 = variance41.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance55 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray62 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double63 = variance55.evaluate(doubleArray62);
        double[] doubleArray67 = new double[] { (byte) 1, (byte) 100, 1L };
        double double68 = variance55.evaluate(doubleArray67);
        double double70 = variance41.evaluate(doubleArray67, (double) 10.0f);
        double double72 = variance37.evaluate(doubleArray67, 13.805555555555557d);
        double double73 = variance1.evaluate(doubleArray67);
        java.lang.Class<?> wildcardClass74 = variance1.getClass();
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 2168.222222222222d + "'", double9 == 2168.222222222222d);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 2168.222222222222d + "'", double21 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[0.0, 1.0, 1.0, 0.0, -1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 16.566666666666663d + "'", double32 == 16.566666666666663d);
        org.junit.Assert.assertTrue(Double.isNaN(double35));
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 2168.222222222222d + "'", double49 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + long52 + "' != '" + 0L + "'", long52 == 0L);
        org.junit.Assert.assertTrue("'" + long53 + "' != '" + 0L + "'", long53 == 0L);
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 2168.222222222222d + "'", double63 == 2168.222222222222d);
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[1.0, 100.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 2178.0d + "'", double68 == 2178.0d);
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + 3267.0d + "'", double70 == 3267.0d);
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 3266.9999999999995d + "'", double72 == 3266.9999999999995d);
        org.junit.Assert.assertTrue("'" + double73 + "' != '" + 3267.0d + "'", double73 == 3267.0d);
        org.junit.Assert.assertNotNull(wildcardClass74);
    }

    @Test
    public void test1122() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1122");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(true);
        double double2 = variance1.getResult();
        double double3 = variance1.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance5 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray12 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double13 = variance5.evaluate(doubleArray12);
        variance5.setBiasCorrected(true);
        long long16 = variance5.getN();
        variance5.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance19 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray26 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double27 = variance19.evaluate(doubleArray26);
        double double28 = variance5.evaluate(doubleArray26);
        variance1.incrementAll(doubleArray26);
        variance1.clear();
        variance1.setBiasCorrected(true);
        org.junit.Assert.assertTrue(Double.isNaN(double2));
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 2168.222222222222d + "'", double13 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 0L + "'", long16 == 0L);
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 2168.222222222222d + "'", double27 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 2601.866666666667d + "'", double28 == 2601.866666666667d);
    }

    @Test
    public void test1123() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1123");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray8 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double9 = variance1.evaluate(doubleArray8);
        double[] doubleArray13 = new double[] { (byte) 1, (byte) 100, 1L };
        double double14 = variance1.evaluate(doubleArray13);
        long long15 = variance1.getN();
        boolean boolean16 = variance1.isBiasCorrected();
        variance1.increment(677378.9558333334d);
        org.apache.commons.math.stat.descriptive.moment.Variance variance20 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance20.clear();
        double double22 = variance20.getResult();
        double[] doubleArray27 = new double[] { (-1), 2168.222222222222d, 16.566666666418314d, 10.0d };
        variance20.incrementAll(doubleArray27);
        org.apache.commons.math.stat.descriptive.moment.Variance variance30 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray37 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double38 = variance30.evaluate(doubleArray37);
        variance30.setBiasCorrected(true);
        boolean boolean41 = variance30.isBiasCorrected();
        double[] doubleArray48 = new double[] { (short) 0, 1.0d, 1L, 0.0d, (-1.0d), 10L };
        double double49 = variance30.evaluate(doubleArray48);
        double double50 = variance30.getResult();
        variance30.setBiasCorrected(true);
        boolean boolean53 = variance30.isBiasCorrected();
        variance30.setBiasCorrected(false);
        variance30.increment(2601.866666666667d);
        org.apache.commons.math.stat.descriptive.moment.Variance variance59 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray66 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double67 = variance59.evaluate(doubleArray66);
        variance59.clear();
        variance59.setBiasCorrected(true);
        double double71 = variance59.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance73 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray80 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double81 = variance73.evaluate(doubleArray80);
        double double82 = variance59.evaluate(doubleArray80);
        double double83 = variance30.evaluate(doubleArray80);
        double double84 = variance20.evaluate(doubleArray80);
        // The following exception was thrown during execution in test generation
        try {
            double double87 = variance1.evaluate(doubleArray80, (int) (short) 10, (int) (byte) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: begin + length > values.length");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 2168.222222222222d + "'", double9 == 2168.222222222222d);
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[1.0, 100.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 2178.0d + "'", double14 == 2178.0d);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 0L + "'", long15 == 0L);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double22));
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[-1.0, 2168.222222222222, 16.566666666418314, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 2168.222222222222d + "'", double38 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[0.0, 1.0, 1.0, 0.0, -1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 16.566666666666663d + "'", double49 == 16.566666666666663d);
        org.junit.Assert.assertTrue(Double.isNaN(double50));
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 2168.222222222222d + "'", double67 == 2168.222222222222d);
        org.junit.Assert.assertTrue(Double.isNaN(double71));
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray80), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double81 + "' != '" + 2168.222222222222d + "'", double81 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + double82 + "' != '" + 2601.866666666667d + "'", double82 == 2601.866666666667d);
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + 2168.222222222222d + "'", double83 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + double84 + "' != '" + 2168.222222222222d + "'", double84 == 2168.222222222222d);
    }

    @Test
    public void test1124() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1124");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment1 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance2 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment1);
        double[] doubleArray3 = new double[] {};
        double double6 = variance2.evaluate(doubleArray3, 0, 0);
        boolean boolean8 = variance2.equals((java.lang.Object) 10.0f);
        boolean boolean9 = variance2.isBiasCorrected();
        variance2.clear();
        double[] doubleArray16 = new double[] { 10.0f, 10.0f, 1, 'a', (byte) 1 };
        double double17 = variance2.evaluate(doubleArray16);
        variance2.setBiasCorrected(false);
        variance2.clear();
        variance2.increment(16.56666666666667d);
        java.lang.Class<?> wildcardClass23 = variance2.getClass();
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[10.0, 10.0, 1.0, 97.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 1694.7000000000003d + "'", double17 == 1694.7000000000003d);
        org.junit.Assert.assertNotNull(wildcardClass23);
    }

    @Test
    public void test1125() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1125");
        org.apache.commons.math.stat.descriptive.moment.Variance variance0 = new org.apache.commons.math.stat.descriptive.moment.Variance();
        double double1 = variance0.getResult();
        variance0.clear();
        variance0.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance();
        long long5 = variance4.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance7 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray14 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double15 = variance7.evaluate(doubleArray14);
        variance7.setBiasCorrected(true);
        boolean boolean18 = variance7.isBiasCorrected();
        double[] doubleArray25 = new double[] { (short) 0, 1.0d, 1L, 0.0d, (-1.0d), 10L };
        double double26 = variance7.evaluate(doubleArray25);
        boolean boolean28 = variance7.equals((java.lang.Object) 10.0d);
        boolean boolean29 = variance7.isBiasCorrected();
        org.apache.commons.math.stat.descriptive.moment.Variance variance31 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        boolean boolean32 = variance7.equals((java.lang.Object) false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance34 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray41 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double42 = variance34.evaluate(doubleArray41);
        variance34.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance46 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray53 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double54 = variance46.evaluate(doubleArray53);
        variance34.incrementAll(doubleArray53);
        double double57 = variance7.evaluate(doubleArray53, (double) 100.0f);
        variance4.incrementAll(doubleArray53, (int) (short) 1, (int) (byte) 0);
        org.apache.commons.math.stat.descriptive.moment.Variance variance62 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray69 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double70 = variance62.evaluate(doubleArray69);
        variance62.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance74 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance74.clear();
        double double76 = variance74.getResult();
        double[] doubleArray81 = new double[] { (-1), 2168.222222222222d, 16.566666666418314d, 10.0d };
        variance74.incrementAll(doubleArray81);
        variance62.incrementAll(doubleArray81);
        variance4.incrementAll(doubleArray81);
        // The following exception was thrown during execution in test generation
        try {
            double double87 = variance0.evaluate(doubleArray81, (int) 'a', (int) (short) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: begin + length > values.length");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue(Double.isNaN(double1));
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 0L + "'", long5 == 0L);
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 2168.222222222222d + "'", double15 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[0.0, 1.0, 1.0, 0.0, -1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 16.566666666666663d + "'", double26 == 16.566666666666663d);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 2168.222222222222d + "'", double42 == 2168.222222222222d);
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray53), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 2168.222222222222d + "'", double54 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 2601.8666666666663d + "'", double57 == 2601.8666666666663d);
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + 2168.222222222222d + "'", double70 == 2168.222222222222d);
        org.junit.Assert.assertTrue(Double.isNaN(double76));
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray81), "[-1.0, 2168.222222222222, 16.566666666418314, 10.0]");
    }

    @Test
    public void test1126() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1126");
        org.apache.commons.math.stat.descriptive.moment.Variance variance0 = new org.apache.commons.math.stat.descriptive.moment.Variance();
        double double1 = variance0.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance3 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray10 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double11 = variance3.evaluate(doubleArray10);
        variance3.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance15 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray22 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double23 = variance15.evaluate(doubleArray22);
        variance3.incrementAll(doubleArray22);
        boolean boolean25 = variance0.equals((java.lang.Object) variance3);
        org.apache.commons.math.stat.descriptive.moment.Variance variance27 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray34 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double35 = variance27.evaluate(doubleArray34);
        variance27.clear();
        boolean boolean37 = variance3.equals((java.lang.Object) variance27);
        java.lang.Class<?> wildcardClass38 = variance27.getClass();
        org.junit.Assert.assertTrue(Double.isNaN(double1));
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 2168.222222222222d + "'", double11 == 2168.222222222222d);
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 2168.222222222222d + "'", double23 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 2168.222222222222d + "'", double35 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(wildcardClass38);
    }

    @Test
    public void test1127() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1127");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray8 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double9 = variance1.evaluate(doubleArray8);
        variance1.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance13 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance13.clear();
        double double15 = variance13.getResult();
        double[] doubleArray20 = new double[] { (-1), 2168.222222222222d, 16.566666666418314d, 10.0d };
        variance13.incrementAll(doubleArray20);
        variance1.incrementAll(doubleArray20);
        variance1.increment(16.566666666666674d);
        org.apache.commons.math.stat.descriptive.moment.Variance variance26 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray33 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double34 = variance26.evaluate(doubleArray33);
        variance26.clear();
        variance26.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance39 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance39.clear();
        double double41 = variance39.getResult();
        double[] doubleArray46 = new double[] { (-1), 2168.222222222222d, 16.566666666418314d, 10.0d };
        variance39.incrementAll(doubleArray46);
        boolean boolean48 = variance26.equals((java.lang.Object) doubleArray46);
        variance26.setBiasCorrected(false);
        boolean boolean51 = variance26.isBiasCorrected();
        org.apache.commons.math.stat.descriptive.moment.Variance variance53 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray60 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double61 = variance53.evaluate(doubleArray60);
        variance53.clear();
        variance53.setBiasCorrected(true);
        double double65 = variance53.getResult();
        variance53.clear();
        double double67 = variance53.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance69 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray76 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double77 = variance69.evaluate(doubleArray76);
        variance69.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance81 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance81.clear();
        double double83 = variance81.getResult();
        double[] doubleArray88 = new double[] { (-1), 2168.222222222222d, 16.566666666418314d, 10.0d };
        variance81.incrementAll(doubleArray88);
        variance69.incrementAll(doubleArray88);
        variance53.incrementAll(doubleArray88);
        double double93 = variance26.evaluate(doubleArray88, (double) 0.0f);
        // The following exception was thrown during execution in test generation
        try {
            variance1.incrementAll(doubleArray88, (int) (byte) 0, 100);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: begin + length > values.length");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 2168.222222222222d + "'", double9 == 2168.222222222222d);
        org.junit.Assert.assertTrue(Double.isNaN(double15));
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[-1.0, 2168.222222222222, 16.566666666418314, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 2168.222222222222d + "'", double34 == 2168.222222222222d);
        org.junit.Assert.assertTrue(Double.isNaN(double41));
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[-1.0, 2168.222222222222, 16.566666666418314, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 2168.222222222222d + "'", double61 == 2168.222222222222d);
        org.junit.Assert.assertTrue(Double.isNaN(double65));
        org.junit.Assert.assertTrue(Double.isNaN(double67));
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double77 + "' != '" + 2168.222222222222d + "'", double77 == 2168.222222222222d);
        org.junit.Assert.assertTrue(Double.isNaN(double83));
        org.junit.Assert.assertNotNull(doubleArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray88), "[-1.0, 2168.222222222222, 16.566666666418314, 10.0]");
        org.junit.Assert.assertTrue("'" + double93 + "' != '" + 874596.4092824734d + "'", double93 == 874596.4092824734d);
    }

    @Test
    public void test1128() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1128");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray8 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double9 = variance1.evaluate(doubleArray8);
        variance1.clear();
        java.lang.Object obj11 = null;
        boolean boolean12 = variance1.equals(obj11);
        variance1.clear();
        variance1.increment((double) (-1L));
        org.apache.commons.math.stat.descriptive.moment.Variance variance17 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray24 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double25 = variance17.evaluate(doubleArray24);
        variance17.setBiasCorrected(true);
        long long28 = variance17.getN();
        long long29 = variance17.getN();
        boolean boolean30 = variance17.isBiasCorrected();
        org.apache.commons.math.stat.descriptive.moment.Variance variance32 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray39 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double40 = variance32.evaluate(doubleArray39);
        double[] doubleArray44 = new double[] { (byte) 1, (byte) 100, 1L };
        double double45 = variance32.evaluate(doubleArray44);
        variance17.incrementAll(doubleArray44, (int) (short) 1, 0);
        org.apache.commons.math.stat.descriptive.moment.Variance variance50 = new org.apache.commons.math.stat.descriptive.moment.Variance(true);
        double double51 = variance50.getResult();
        double double52 = variance50.getResult();
        variance50.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance55 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray62 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double63 = variance55.evaluate(doubleArray62);
        variance55.setBiasCorrected(true);
        long long66 = variance55.getN();
        long long67 = variance55.getN();
        boolean boolean68 = variance55.isBiasCorrected();
        org.apache.commons.math.stat.descriptive.moment.Variance variance70 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray77 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double78 = variance70.evaluate(doubleArray77);
        double[] doubleArray82 = new double[] { (byte) 1, (byte) 100, 1L };
        double double83 = variance70.evaluate(doubleArray82);
        variance55.incrementAll(doubleArray82, (int) (short) 1, 0);
        variance50.incrementAll(doubleArray82);
        variance17.incrementAll(doubleArray82);
        double double92 = variance1.evaluate(doubleArray82, 16.566666666418314d, 1, (int) (byte) 1);
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 2168.222222222222d + "'", double9 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 2168.222222222222d + "'", double25 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + long28 + "' != '" + 0L + "'", long28 == 0L);
        org.junit.Assert.assertTrue("'" + long29 + "' != '" + 0L + "'", long29 == 0L);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 2168.222222222222d + "'", double40 == 2168.222222222222d);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[1.0, 100.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 2178.0d + "'", double45 == 2178.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double51));
        org.junit.Assert.assertTrue(Double.isNaN(double52));
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 2168.222222222222d + "'", double63 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + long66 + "' != '" + 0L + "'", long66 == 0L);
        org.junit.Assert.assertTrue("'" + long67 + "' != '" + 0L + "'", long67 == 0L);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray77), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double78 + "' != '" + 2168.222222222222d + "'", double78 == 2168.222222222222d);
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray82), "[1.0, 100.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + 2178.0d + "'", double83 == 2178.0d);
        org.junit.Assert.assertTrue("'" + double92 + "' != '" + 0.0d + "'", double92 == 0.0d);
    }

    @Test
    public void test1129() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1129");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray8 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double9 = variance1.evaluate(doubleArray8);
        variance1.setBiasCorrected(true);
        boolean boolean12 = variance1.isBiasCorrected();
        org.apache.commons.math.stat.descriptive.moment.Variance variance14 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray21 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double22 = variance14.evaluate(doubleArray21);
        variance14.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance26 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray33 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double34 = variance26.evaluate(doubleArray33);
        variance26.setBiasCorrected(true);
        boolean boolean37 = variance26.isBiasCorrected();
        double[] doubleArray44 = new double[] { (short) 0, 1.0d, 1L, 0.0d, (-1.0d), 10L };
        double double45 = variance26.evaluate(doubleArray44);
        double double48 = variance14.evaluate(doubleArray44, (int) (byte) 1, (int) (byte) 0);
        double double51 = variance1.evaluate(doubleArray44, (int) (byte) 1, 0);
        variance1.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance55 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray62 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double63 = variance55.evaluate(doubleArray62);
        variance55.setBiasCorrected(true);
        boolean boolean66 = variance55.isBiasCorrected();
        double[] doubleArray73 = new double[] { (short) 0, 1.0d, 1L, 0.0d, (-1.0d), 10L };
        double double74 = variance55.evaluate(doubleArray73);
        double double75 = variance55.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance77 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance77.clear();
        double double79 = variance77.getResult();
        double[] doubleArray84 = new double[] { (-1), 2168.222222222222d, 16.566666666418314d, 10.0d };
        variance77.incrementAll(doubleArray84);
        double double86 = variance55.evaluate(doubleArray84);
        boolean boolean87 = variance1.equals((java.lang.Object) variance55);
        variance55.setBiasCorrected(false);
        variance55.clear();
        variance55.setBiasCorrected(true);
        long long93 = variance55.getN();
        long long94 = variance55.getN();
        long long95 = variance55.getN();
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 2168.222222222222d + "'", double9 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 2168.222222222222d + "'", double22 == 2168.222222222222d);
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 2168.222222222222d + "'", double34 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[0.0, 1.0, 1.0, 0.0, -1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 16.566666666666663d + "'", double45 == 16.566666666666663d);
        org.junit.Assert.assertTrue(Double.isNaN(double48));
        org.junit.Assert.assertTrue(Double.isNaN(double51));
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 2168.222222222222d + "'", double63 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[0.0, 1.0, 1.0, 0.0, -1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double74 + "' != '" + 16.566666666666663d + "'", double74 == 16.566666666666663d);
        org.junit.Assert.assertTrue(Double.isNaN(double75));
        org.junit.Assert.assertTrue(Double.isNaN(double79));
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray84), "[-1.0, 2168.222222222222, 16.566666666418314, 10.0]");
        org.junit.Assert.assertTrue("'" + double86 + "' != '" + 1166128.5457099646d + "'", double86 == 1166128.5457099646d);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + true + "'", boolean87 == true);
        org.junit.Assert.assertTrue("'" + long93 + "' != '" + 0L + "'", long93 == 0L);
        org.junit.Assert.assertTrue("'" + long94 + "' != '" + 0L + "'", long94 == 0L);
        org.junit.Assert.assertTrue("'" + long95 + "' != '" + 0L + "'", long95 == 0L);
    }

    @Test
    public void test1130() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1130");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray8 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double9 = variance1.evaluate(doubleArray8);
        variance1.clear();
        variance1.setBiasCorrected(false);
        variance1.clear();
        boolean boolean15 = variance1.equals((java.lang.Object) 10.0d);
        org.apache.commons.math.stat.descriptive.moment.Variance variance17 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray24 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double25 = variance17.evaluate(doubleArray24);
        variance17.setBiasCorrected(true);
        long long28 = variance17.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance30 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray37 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double38 = variance30.evaluate(doubleArray37);
        variance30.clear();
        variance30.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance43 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance43.clear();
        double double45 = variance43.getResult();
        double[] doubleArray50 = new double[] { (-1), 2168.222222222222d, 16.566666666418314d, 10.0d };
        variance43.incrementAll(doubleArray50);
        boolean boolean52 = variance30.equals((java.lang.Object) doubleArray50);
        variance17.incrementAll(doubleArray50);
        variance1.incrementAll(doubleArray50);
        boolean boolean55 = variance1.isBiasCorrected();
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 2168.222222222222d + "'", double9 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 2168.222222222222d + "'", double25 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + long28 + "' != '" + 0L + "'", long28 == 0L);
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 2168.222222222222d + "'", double38 == 2168.222222222222d);
        org.junit.Assert.assertTrue(Double.isNaN(double45));
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[-1.0, 2168.222222222222, 16.566666666418314, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
    }

    @Test
    public void test1131() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1131");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray8 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double9 = variance1.evaluate(doubleArray8);
        variance1.setBiasCorrected(true);
        boolean boolean12 = variance1.isBiasCorrected();
        double[] doubleArray19 = new double[] { (short) 0, 1.0d, 1L, 0.0d, (-1.0d), 10L };
        double double20 = variance1.evaluate(doubleArray19);
        double double21 = variance1.getResult();
        variance1.setBiasCorrected(true);
        long long24 = variance1.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance26 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray33 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double34 = variance26.evaluate(doubleArray33);
        variance26.setBiasCorrected(true);
        boolean boolean37 = variance26.isBiasCorrected();
        double[] doubleArray44 = new double[] { (short) 0, 1.0d, 1L, 0.0d, (-1.0d), 10L };
        double double45 = variance26.evaluate(doubleArray44);
        boolean boolean47 = variance26.equals((java.lang.Object) 10.0d);
        org.apache.commons.math.stat.descriptive.moment.Variance variance49 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray56 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double57 = variance49.evaluate(doubleArray56);
        variance49.setBiasCorrected(true);
        boolean boolean60 = variance49.isBiasCorrected();
        double[] doubleArray67 = new double[] { (short) 0, 1.0d, 1L, 0.0d, (-1.0d), 10L };
        double double68 = variance49.evaluate(doubleArray67);
        double double70 = variance26.evaluate(doubleArray67, (double) 0.0f);
        variance1.incrementAll(doubleArray67);
        variance1.clear();
        boolean boolean73 = variance1.isBiasCorrected();
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 2168.222222222222d + "'", double9 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[0.0, 1.0, 1.0, 0.0, -1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 16.566666666666663d + "'", double20 == 16.566666666666663d);
        org.junit.Assert.assertTrue(Double.isNaN(double21));
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + 0L + "'", long24 == 0L);
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 2168.222222222222d + "'", double34 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[0.0, 1.0, 1.0, 0.0, -1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 16.566666666666663d + "'", double45 == 16.566666666666663d);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 2168.222222222222d + "'", double57 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[0.0, 1.0, 1.0, 0.0, -1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 16.566666666666663d + "'", double68 == 16.566666666666663d);
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + 16.566666666666666d + "'", double70 == 16.566666666666666d);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
    }

    @Test
    public void test1132() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1132");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray8 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double9 = variance1.evaluate(doubleArray8);
        variance1.setBiasCorrected(true);
        boolean boolean12 = variance1.isBiasCorrected();
        double double13 = variance1.getResult();
        variance1.increment((double) 'a');
        boolean boolean16 = variance1.isBiasCorrected();
        variance1.setBiasCorrected(true);
        double double19 = variance1.getResult();
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 2168.222222222222d + "'", double9 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double13));
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.0d + "'", double19 == 0.0d);
    }

    @Test
    public void test1133() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1133");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray8 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double9 = variance1.evaluate(doubleArray8);
        long long10 = variance1.getN();
        variance1.increment((double) (byte) 1);
        variance1.increment((double) 6L);
        variance1.increment(2178.0d);
        org.apache.commons.math.stat.descriptive.moment.Variance variance18 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance18.clear();
        boolean boolean20 = variance18.isBiasCorrected();
        double double21 = variance18.getResult();
        boolean boolean22 = variance1.equals((java.lang.Object) variance18);
        org.apache.commons.math.stat.descriptive.moment.Variance variance24 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray31 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double32 = variance24.evaluate(doubleArray31);
        variance24.setBiasCorrected(true);
        variance24.increment((double) (byte) 0);
        variance24.clear();
        boolean boolean38 = variance24.isBiasCorrected();
        org.apache.commons.math.stat.descriptive.moment.Variance variance40 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray47 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double48 = variance40.evaluate(doubleArray47);
        variance40.setBiasCorrected(true);
        long long51 = variance40.getN();
        long long52 = variance40.getN();
        double double53 = variance40.getResult();
        variance40.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance56 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray63 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double64 = variance56.evaluate(doubleArray63);
        double[] doubleArray68 = new double[] { (byte) 1, (byte) 100, 1L };
        double double69 = variance56.evaluate(doubleArray68);
        org.apache.commons.math.stat.descriptive.moment.Variance variance71 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray78 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double79 = variance71.evaluate(doubleArray78);
        variance71.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance83 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray90 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double91 = variance83.evaluate(doubleArray90);
        variance71.incrementAll(doubleArray90);
        variance56.incrementAll(doubleArray90);
        double double94 = variance40.evaluate(doubleArray90);
        variance24.incrementAll(doubleArray90);
        double double97 = variance1.evaluate(doubleArray90, 2601.8666666664185d);
        variance1.setBiasCorrected(false);
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 2168.222222222222d + "'", double9 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 0L + "'", long10 == 0L);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double21));
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 2168.222222222222d + "'", double32 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 2168.222222222222d + "'", double48 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + long51 + "' != '" + 0L + "'", long51 == 0L);
        org.junit.Assert.assertTrue("'" + long52 + "' != '" + 0L + "'", long52 == 0L);
        org.junit.Assert.assertTrue(Double.isNaN(double53));
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 2168.222222222222d + "'", double64 == 2168.222222222222d);
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[1.0, 100.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 2178.0d + "'", double69 == 2178.0d);
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray78), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double79 + "' != '" + 2168.222222222222d + "'", double79 == 2168.222222222222d);
        org.junit.Assert.assertNotNull(doubleArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray90), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double91 + "' != '" + 2168.222222222222d + "'", double91 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + double94 + "' != '" + 2601.866666666667d + "'", double94 == 2601.866666666667d);
        org.junit.Assert.assertTrue("'" + double97 + "' != '" + 2168.222222223878d + "'", double97 == 2168.222222223878d);
    }

    @Test
    public void test1134() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1134");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray8 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double9 = variance1.evaluate(doubleArray8);
        variance1.setBiasCorrected(true);
        boolean boolean12 = variance1.isBiasCorrected();
        double[] doubleArray19 = new double[] { (short) 0, 1.0d, 1L, 0.0d, (-1.0d), 10L };
        double double20 = variance1.evaluate(doubleArray19);
        double double21 = variance1.getResult();
        long long22 = variance1.getN();
        long long23 = variance1.getN();
        double double24 = variance1.getResult();
        double double25 = variance1.getResult();
        variance1.setBiasCorrected(false);
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 2168.222222222222d + "'", double9 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[0.0, 1.0, 1.0, 0.0, -1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 16.566666666666663d + "'", double20 == 16.566666666666663d);
        org.junit.Assert.assertTrue(Double.isNaN(double21));
        org.junit.Assert.assertTrue("'" + long22 + "' != '" + 0L + "'", long22 == 0L);
        org.junit.Assert.assertTrue("'" + long23 + "' != '" + 0L + "'", long23 == 0L);
        org.junit.Assert.assertTrue(Double.isNaN(double24));
        org.junit.Assert.assertTrue(Double.isNaN(double25));
    }

    @Test
    public void test1135() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1135");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray8 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double9 = variance1.evaluate(doubleArray8);
        variance1.setBiasCorrected(true);
        boolean boolean12 = variance1.isBiasCorrected();
        double[] doubleArray19 = new double[] { (short) 0, 1.0d, 1L, 0.0d, (-1.0d), 10L };
        double double20 = variance1.evaluate(doubleArray19);
        double double21 = variance1.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance23 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance23.clear();
        double double25 = variance23.getResult();
        double[] doubleArray30 = new double[] { (-1), 2168.222222222222d, 16.566666666418314d, 10.0d };
        variance23.incrementAll(doubleArray30);
        double double32 = variance1.evaluate(doubleArray30);
        double double33 = variance1.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance35 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance35.clear();
        boolean boolean37 = variance35.isBiasCorrected();
        long long38 = variance35.getN();
        variance35.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance42 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray49 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double50 = variance42.evaluate(doubleArray49);
        variance42.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance54 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray61 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double62 = variance54.evaluate(doubleArray61);
        variance54.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance66 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray73 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double74 = variance66.evaluate(doubleArray73);
        variance66.setBiasCorrected(true);
        boolean boolean77 = variance66.isBiasCorrected();
        double[] doubleArray84 = new double[] { (short) 0, 1.0d, 1L, 0.0d, (-1.0d), 10L };
        double double85 = variance66.evaluate(doubleArray84);
        double double88 = variance54.evaluate(doubleArray84, (int) (byte) 1, (int) (byte) 0);
        variance42.incrementAll(doubleArray84, (int) (byte) 1, 1);
        boolean boolean92 = variance35.equals((java.lang.Object) doubleArray84);
        boolean boolean93 = variance1.equals((java.lang.Object) variance35);
        java.lang.Object obj94 = null;
        boolean boolean95 = variance1.equals(obj94);
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 2168.222222222222d + "'", double9 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[0.0, 1.0, 1.0, 0.0, -1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 16.566666666666663d + "'", double20 == 16.566666666666663d);
        org.junit.Assert.assertTrue(Double.isNaN(double21));
        org.junit.Assert.assertTrue(Double.isNaN(double25));
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[-1.0, 2168.222222222222, 16.566666666418314, 10.0]");
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 1166128.5457099646d + "'", double32 == 1166128.5457099646d);
        org.junit.Assert.assertTrue(Double.isNaN(double33));
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + long38 + "' != '" + 0L + "'", long38 == 0L);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 2168.222222222222d + "'", double50 == 2168.222222222222d);
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 2168.222222222222d + "'", double62 == 2168.222222222222d);
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double74 + "' != '" + 2168.222222222222d + "'", double74 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray84), "[0.0, 1.0, 1.0, 0.0, -1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double85 + "' != '" + 16.566666666666663d + "'", double85 == 16.566666666666663d);
        org.junit.Assert.assertTrue(Double.isNaN(double88));
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + true + "'", boolean93 == true);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + false + "'", boolean95 == false);
    }

    @Test
    public void test1136() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1136");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(true);
        double double2 = variance1.getResult();
        boolean boolean3 = variance1.isBiasCorrected();
        variance1.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance6 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance6.clear();
        boolean boolean8 = variance6.isBiasCorrected();
        boolean boolean10 = variance6.equals((java.lang.Object) 1166128.5457099646d);
        variance6.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance13 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray20 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double21 = variance13.evaluate(doubleArray20);
        variance13.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance25 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray32 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double33 = variance25.evaluate(doubleArray32);
        variance13.incrementAll(doubleArray32);
        variance13.clear();
        boolean boolean36 = variance13.isBiasCorrected();
        variance13.increment(2601.866666666667d);
        org.apache.commons.math.stat.descriptive.moment.Variance variance40 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray47 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double48 = variance40.evaluate(doubleArray47);
        variance40.setBiasCorrected(true);
        boolean boolean51 = variance40.isBiasCorrected();
        java.lang.Class<?> wildcardClass52 = variance40.getClass();
        boolean boolean53 = variance13.equals((java.lang.Object) wildcardClass52);
        org.apache.commons.math.stat.descriptive.moment.Variance variance55 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray62 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double63 = variance55.evaluate(doubleArray62);
        long long64 = variance55.getN();
        variance55.increment(874596.4092824734d);
        org.apache.commons.math.stat.descriptive.moment.Variance variance68 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance68.clear();
        double double70 = variance68.getResult();
        double[] doubleArray75 = new double[] { (-1), 2168.222222222222d, 16.566666666418314d, 10.0d };
        variance68.incrementAll(doubleArray75);
        variance55.incrementAll(doubleArray75, 0, (int) (byte) 1);
        double double80 = variance13.evaluate(doubleArray75);
        double double82 = variance6.evaluate(doubleArray75, (double) (byte) 100);
        // The following exception was thrown during execution in test generation
        try {
            double double86 = variance1.evaluate(doubleArray75, 2601.8666666664185d, (int) (byte) -1, (int) (byte) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: start position cannot be negative");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue(Double.isNaN(double2));
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 2168.222222222222d + "'", double21 == 2168.222222222222d);
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 2168.222222222222d + "'", double33 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 2168.222222222222d + "'", double48 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 2168.222222222222d + "'", double63 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + long64 + "' != '" + 0L + "'", long64 == 0L);
        org.junit.Assert.assertTrue(Double.isNaN(double70));
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray75), "[-1.0, 2168.222222222222, 16.566666666418314, 10.0]");
        org.junit.Assert.assertTrue("'" + double80 + "' != '" + 1166128.5457099646d + "'", double80 == 1166128.5457099646d);
        org.junit.Assert.assertTrue("'" + double82 + "' != '" + 874596.4092824734d + "'", double82 == 874596.4092824734d);
    }

    @Test
    public void test1137() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1137");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment1 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance2 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment1);
        double[] doubleArray3 = new double[] {};
        double double6 = variance2.evaluate(doubleArray3, 0, 0);
        boolean boolean8 = variance2.equals((java.lang.Object) 10.0f);
        boolean boolean9 = variance2.isBiasCorrected();
        boolean boolean10 = variance2.isBiasCorrected();
        variance2.clear();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment13 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance14 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment13);
        variance14.increment(0.0d);
        boolean boolean17 = variance14.isBiasCorrected();
        variance14.increment((double) (byte) 0);
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean20 = variance2.equals((java.lang.Object) variance14);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
    }

    @Test
    public void test1138() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1138");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray8 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double9 = variance1.evaluate(doubleArray8);
        variance1.setBiasCorrected(true);
        long long12 = variance1.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance14 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray21 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double22 = variance14.evaluate(doubleArray21);
        variance14.clear();
        variance14.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance27 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance27.clear();
        double double29 = variance27.getResult();
        double[] doubleArray34 = new double[] { (-1), 2168.222222222222d, 16.566666666418314d, 10.0d };
        variance27.incrementAll(doubleArray34);
        boolean boolean36 = variance14.equals((java.lang.Object) doubleArray34);
        variance1.incrementAll(doubleArray34);
        org.apache.commons.math.stat.descriptive.moment.Variance variance39 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray46 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double47 = variance39.evaluate(doubleArray46);
        variance39.setBiasCorrected(true);
        long long50 = variance39.getN();
        long long51 = variance39.getN();
        boolean boolean53 = variance39.equals((java.lang.Object) 16.566666666666663d);
        boolean boolean54 = variance1.equals((java.lang.Object) variance39);
        org.apache.commons.math.stat.descriptive.moment.Variance variance56 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray63 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double64 = variance56.evaluate(doubleArray63);
        variance56.setBiasCorrected(true);
        variance56.increment((double) (byte) 0);
        double[] doubleArray71 = new double[] { 'a', 100L };
        double double73 = variance56.evaluate(doubleArray71, 0.0d);
        double double74 = variance39.evaluate(doubleArray71);
        variance39.increment((double) (short) 100);
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 2168.222222222222d + "'", double9 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 0L + "'", long12 == 0L);
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 2168.222222222222d + "'", double22 == 2168.222222222222d);
        org.junit.Assert.assertTrue(Double.isNaN(double29));
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[-1.0, 2168.222222222222, 16.566666666418314, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 2168.222222222222d + "'", double47 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + long50 + "' != '" + 0L + "'", long50 == 0L);
        org.junit.Assert.assertTrue("'" + long51 + "' != '" + 0L + "'", long51 == 0L);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 2168.222222222222d + "'", double64 == 2168.222222222222d);
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[97.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double73 + "' != '" + 4.5d + "'", double73 == 4.5d);
        org.junit.Assert.assertTrue("'" + double74 + "' != '" + 4.5d + "'", double74 == 4.5d);
    }

    @Test
    public void test1139() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1139");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray8 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double9 = variance1.evaluate(doubleArray8);
        variance1.setBiasCorrected(true);
        long long12 = variance1.getN();
        variance1.clear();
        boolean boolean14 = variance1.isBiasCorrected();
        long long15 = variance1.getN();
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 2168.222222222222d + "'", double9 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 0L + "'", long12 == 0L);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 0L + "'", long15 == 0L);
    }

    @Test
    public void test1140() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1140");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray8 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double9 = variance1.evaluate(doubleArray8);
        variance1.setBiasCorrected(true);
        boolean boolean12 = variance1.isBiasCorrected();
        double[] doubleArray19 = new double[] { (short) 0, 1.0d, 1L, 0.0d, (-1.0d), 10L };
        double double20 = variance1.evaluate(doubleArray19);
        org.apache.commons.math.stat.descriptive.moment.Variance variance22 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray29 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double30 = variance22.evaluate(doubleArray29);
        variance22.setBiasCorrected(true);
        boolean boolean33 = variance22.isBiasCorrected();
        double[] doubleArray40 = new double[] { (short) 0, 1.0d, 1L, 0.0d, (-1.0d), 10L };
        double double41 = variance22.evaluate(doubleArray40);
        double double44 = variance1.evaluate(doubleArray40, (int) (byte) 1, 0);
        boolean boolean45 = variance1.isBiasCorrected();
        variance1.setBiasCorrected(true);
        variance1.increment(13.80555555555562d);
        long long50 = variance1.getN();
        variance1.clear();
        boolean boolean52 = variance1.isBiasCorrected();
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 2168.222222222222d + "'", double9 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[0.0, 1.0, 1.0, 0.0, -1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 16.566666666666663d + "'", double20 == 16.566666666666663d);
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 2168.222222222222d + "'", double30 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[0.0, 1.0, 1.0, 0.0, -1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 16.566666666666663d + "'", double41 == 16.566666666666663d);
        org.junit.Assert.assertTrue(Double.isNaN(double44));
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + long50 + "' != '" + 1L + "'", long50 == 1L);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
    }

    @Test
    public void test1141() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1141");
        org.apache.commons.math.stat.descriptive.moment.Variance variance0 = new org.apache.commons.math.stat.descriptive.moment.Variance();
        long long1 = variance0.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance3 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray10 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double11 = variance3.evaluate(doubleArray10);
        variance3.setBiasCorrected(true);
        long long14 = variance3.getN();
        boolean boolean15 = variance0.equals((java.lang.Object) long14);
        double double16 = variance0.getResult();
        double double17 = variance0.getResult();
        variance0.clear();
        variance0.clear();
        boolean boolean20 = variance0.isBiasCorrected();
        boolean boolean21 = variance0.isBiasCorrected();
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 2168.222222222222d + "'", double11 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 0L + "'", long14 == 0L);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double16));
        org.junit.Assert.assertTrue(Double.isNaN(double17));
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
    }

    @Test
    public void test1142() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1142");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray8 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double9 = variance1.evaluate(doubleArray8);
        double[] doubleArray13 = new double[] { (byte) 1, (byte) 100, 1L };
        double double14 = variance1.evaluate(doubleArray13);
        org.apache.commons.math.stat.descriptive.moment.Variance variance16 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray23 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double24 = variance16.evaluate(doubleArray23);
        variance16.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance28 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray35 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double36 = variance28.evaluate(doubleArray35);
        variance16.incrementAll(doubleArray35);
        variance1.incrementAll(doubleArray35);
        boolean boolean40 = variance1.equals((java.lang.Object) (byte) 0);
        double double41 = variance1.getResult();
        long long42 = variance1.getN();
        variance1.setBiasCorrected(false);
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 2168.222222222222d + "'", double9 == 2168.222222222222d);
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[1.0, 100.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 2178.0d + "'", double14 == 2178.0d);
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 2168.222222222222d + "'", double24 == 2168.222222222222d);
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 2168.222222222222d + "'", double36 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 2168.222222222222d + "'", double41 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + long42 + "' != '" + 6L + "'", long42 == 6L);
    }

    @Test
    public void test1143() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1143");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance1.setBiasCorrected(true);
    }

    @Test
    public void test1144() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1144");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray8 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double9 = variance1.evaluate(doubleArray8);
        variance1.setBiasCorrected(true);
        boolean boolean12 = variance1.isBiasCorrected();
        double[] doubleArray19 = new double[] { (short) 0, 1.0d, 1L, 0.0d, (-1.0d), 10L };
        double double20 = variance1.evaluate(doubleArray19);
        double double21 = variance1.getResult();
        variance1.setBiasCorrected(true);
        double double24 = variance1.getResult();
        double[] doubleArray25 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double26 = variance1.evaluate(doubleArray25);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: input values array is null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 2168.222222222222d + "'", double9 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[0.0, 1.0, 1.0, 0.0, -1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 16.566666666666663d + "'", double20 == 16.566666666666663d);
        org.junit.Assert.assertTrue(Double.isNaN(double21));
        org.junit.Assert.assertTrue(Double.isNaN(double24));
    }

    @Test
    public void test1145() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1145");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray8 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double9 = variance1.evaluate(doubleArray8);
        variance1.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance13 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray20 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double21 = variance13.evaluate(doubleArray20);
        variance1.incrementAll(doubleArray20);
        variance1.clear();
        boolean boolean24 = variance1.isBiasCorrected();
        variance1.increment(2601.866666666667d);
        boolean boolean27 = variance1.isBiasCorrected();
        long long28 = variance1.getN();
        double[] doubleArray29 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double30 = variance1.evaluate(doubleArray29);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: input values array is null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 2168.222222222222d + "'", double9 == 2168.222222222222d);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 2168.222222222222d + "'", double21 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + long28 + "' != '" + 1L + "'", long28 == 1L);
    }

    @Test
    public void test1146() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1146");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray8 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double9 = variance1.evaluate(doubleArray8);
        variance1.setBiasCorrected(true);
        boolean boolean12 = variance1.isBiasCorrected();
        double[] doubleArray19 = new double[] { (short) 0, 1.0d, 1L, 0.0d, (-1.0d), 10L };
        double double20 = variance1.evaluate(doubleArray19);
        double double21 = variance1.getResult();
        variance1.setBiasCorrected(true);
        boolean boolean24 = variance1.isBiasCorrected();
        variance1.setBiasCorrected(false);
        variance1.increment(2601.866666666667d);
        org.apache.commons.math.stat.descriptive.moment.Variance variance30 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray37 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double38 = variance30.evaluate(doubleArray37);
        variance30.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance42 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray49 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double50 = variance42.evaluate(doubleArray49);
        variance30.incrementAll(doubleArray49);
        variance30.clear();
        variance30.setBiasCorrected(false);
        variance30.setBiasCorrected(false);
        boolean boolean57 = variance1.equals((java.lang.Object) variance30);
        variance30.clear();
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 2168.222222222222d + "'", double9 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[0.0, 1.0, 1.0, 0.0, -1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 16.566666666666663d + "'", double20 == 16.566666666666663d);
        org.junit.Assert.assertTrue(Double.isNaN(double21));
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 2168.222222222222d + "'", double38 == 2168.222222222222d);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 2168.222222222222d + "'", double50 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
    }

    @Test
    public void test1147() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1147");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray8 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double9 = variance1.evaluate(doubleArray8);
        variance1.setBiasCorrected(true);
        long long12 = variance1.getN();
        variance1.clear();
        variance1.increment((double) (short) -1);
        org.apache.commons.math.stat.descriptive.moment.Variance variance17 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray24 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double25 = variance17.evaluate(doubleArray24);
        variance17.setBiasCorrected(true);
        variance17.increment((double) (byte) 0);
        variance17.clear();
        boolean boolean31 = variance17.isBiasCorrected();
        org.apache.commons.math.stat.descriptive.moment.Variance variance33 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray40 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double41 = variance33.evaluate(doubleArray40);
        variance33.setBiasCorrected(true);
        long long44 = variance33.getN();
        long long45 = variance33.getN();
        double double46 = variance33.getResult();
        variance33.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance49 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray56 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double57 = variance49.evaluate(doubleArray56);
        double[] doubleArray61 = new double[] { (byte) 1, (byte) 100, 1L };
        double double62 = variance49.evaluate(doubleArray61);
        org.apache.commons.math.stat.descriptive.moment.Variance variance64 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray71 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double72 = variance64.evaluate(doubleArray71);
        variance64.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance76 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray83 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double84 = variance76.evaluate(doubleArray83);
        variance64.incrementAll(doubleArray83);
        variance49.incrementAll(doubleArray83);
        double double87 = variance33.evaluate(doubleArray83);
        variance17.incrementAll(doubleArray83);
        boolean boolean89 = variance1.equals((java.lang.Object) variance17);
        variance1.setBiasCorrected(false);
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 2168.222222222222d + "'", double9 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 0L + "'", long12 == 0L);
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 2168.222222222222d + "'", double25 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 2168.222222222222d + "'", double41 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + long44 + "' != '" + 0L + "'", long44 == 0L);
        org.junit.Assert.assertTrue("'" + long45 + "' != '" + 0L + "'", long45 == 0L);
        org.junit.Assert.assertTrue(Double.isNaN(double46));
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 2168.222222222222d + "'", double57 == 2168.222222222222d);
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[1.0, 100.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 2178.0d + "'", double62 == 2178.0d);
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 2168.222222222222d + "'", double72 == 2168.222222222222d);
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray83), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double84 + "' != '" + 2168.222222222222d + "'", double84 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + double87 + "' != '" + 2601.866666666667d + "'", double87 == 2601.866666666667d);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
    }

    @Test
    public void test1148() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1148");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance1.clear();
        long long3 = variance1.getN();
        variance1.increment((double) 3L);
        org.apache.commons.math.stat.descriptive.moment.Variance variance7 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray14 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double15 = variance7.evaluate(doubleArray14);
        variance7.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance19 = new org.apache.commons.math.stat.descriptive.moment.Variance(true);
        boolean boolean20 = variance7.equals((java.lang.Object) true);
        double double21 = variance7.getResult();
        boolean boolean22 = variance1.equals((java.lang.Object) variance7);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 0L + "'", long3 == 0L);
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 2168.222222222222d + "'", double15 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double21));
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
    }

    @Test
    public void test1149() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1149");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray8 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double9 = variance1.evaluate(doubleArray8);
        variance1.setBiasCorrected(true);
        boolean boolean12 = variance1.isBiasCorrected();
        double[] doubleArray19 = new double[] { (short) 0, 1.0d, 1L, 0.0d, (-1.0d), 10L };
        double double20 = variance1.evaluate(doubleArray19);
        org.apache.commons.math.stat.descriptive.moment.Variance variance22 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray29 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double30 = variance22.evaluate(doubleArray29);
        variance22.setBiasCorrected(true);
        boolean boolean33 = variance22.isBiasCorrected();
        double[] doubleArray40 = new double[] { (short) 0, 1.0d, 1L, 0.0d, (-1.0d), 10L };
        double double41 = variance22.evaluate(doubleArray40);
        double double44 = variance1.evaluate(doubleArray40, (int) (byte) 1, 0);
        variance1.setBiasCorrected(true);
        variance1.increment((double) 6L);
        variance1.clear();
        variance1.increment((double) 0);
        long long52 = variance1.getN();
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 2168.222222222222d + "'", double9 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[0.0, 1.0, 1.0, 0.0, -1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 16.566666666666663d + "'", double20 == 16.566666666666663d);
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 2168.222222222222d + "'", double30 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[0.0, 1.0, 1.0, 0.0, -1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 16.566666666666663d + "'", double41 == 16.566666666666663d);
        org.junit.Assert.assertTrue(Double.isNaN(double44));
        org.junit.Assert.assertTrue("'" + long52 + "' != '" + 1L + "'", long52 == 1L);
    }

    @Test
    public void test1150() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1150");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray8 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double9 = variance1.evaluate(doubleArray8);
        variance1.setBiasCorrected(true);
        long long12 = variance1.getN();
        variance1.increment(6.25d);
        variance1.setBiasCorrected(true);
        boolean boolean17 = variance1.isBiasCorrected();
        variance1.setBiasCorrected(false);
        variance1.increment((double) (-1L));
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 2168.222222222222d + "'", double9 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 0L + "'", long12 == 0L);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
    }

    @Test
    public void test1151() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1151");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance1.clear();
        double double3 = variance1.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance5 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray12 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double13 = variance5.evaluate(doubleArray12);
        variance5.setBiasCorrected(true);
        boolean boolean16 = variance5.isBiasCorrected();
        double[] doubleArray23 = new double[] { (short) 0, 1.0d, 1L, 0.0d, (-1.0d), 10L };
        double double24 = variance5.evaluate(doubleArray23);
        org.apache.commons.math.stat.descriptive.moment.Variance variance26 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray33 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double34 = variance26.evaluate(doubleArray33);
        variance26.setBiasCorrected(true);
        boolean boolean37 = variance26.isBiasCorrected();
        double[] doubleArray44 = new double[] { (short) 0, 1.0d, 1L, 0.0d, (-1.0d), 10L };
        double double45 = variance26.evaluate(doubleArray44);
        double double48 = variance5.evaluate(doubleArray44, (int) (byte) 1, 0);
        variance5.setBiasCorrected(true);
        variance5.setBiasCorrected(true);
        double double53 = variance5.getResult();
        boolean boolean54 = variance5.isBiasCorrected();
        boolean boolean55 = variance5.isBiasCorrected();
        long long56 = variance5.getN();
        variance5.clear();
        boolean boolean58 = variance1.equals((java.lang.Object) variance5);
        long long59 = variance1.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance61 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance61.clear();
        double double63 = variance61.getResult();
        double[] doubleArray68 = new double[] { (-1), 2168.222222222222d, 16.566666666418314d, 10.0d };
        variance61.incrementAll(doubleArray68);
        variance1.incrementAll(doubleArray68);
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 2168.222222222222d + "'", double13 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[0.0, 1.0, 1.0, 0.0, -1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 16.566666666666663d + "'", double24 == 16.566666666666663d);
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 2168.222222222222d + "'", double34 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[0.0, 1.0, 1.0, 0.0, -1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 16.566666666666663d + "'", double45 == 16.566666666666663d);
        org.junit.Assert.assertTrue(Double.isNaN(double48));
        org.junit.Assert.assertTrue(Double.isNaN(double53));
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + long56 + "' != '" + 0L + "'", long56 == 0L);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertTrue("'" + long59 + "' != '" + 0L + "'", long59 == 0L);
        org.junit.Assert.assertTrue(Double.isNaN(double63));
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[-1.0, 2168.222222222222, 16.566666666418314, 10.0]");
    }

    @Test
    public void test1152() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1152");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray8 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double9 = variance1.evaluate(doubleArray8);
        variance1.setBiasCorrected(true);
        boolean boolean12 = variance1.isBiasCorrected();
        double[] doubleArray19 = new double[] { (short) 0, 1.0d, 1L, 0.0d, (-1.0d), 10L };
        double double20 = variance1.evaluate(doubleArray19);
        boolean boolean22 = variance1.equals((java.lang.Object) 10.0d);
        boolean boolean23 = variance1.isBiasCorrected();
        org.apache.commons.math.stat.descriptive.moment.Variance variance25 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        boolean boolean26 = variance1.equals((java.lang.Object) false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance28 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray35 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double36 = variance28.evaluate(doubleArray35);
        variance28.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance40 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray47 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double48 = variance40.evaluate(doubleArray47);
        variance28.incrementAll(doubleArray47);
        double double51 = variance1.evaluate(doubleArray47, (double) 100.0f);
        variance1.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance54 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray61 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double62 = variance54.evaluate(doubleArray61);
        variance54.setBiasCorrected(true);
        variance54.increment((double) (byte) 0);
        double[] doubleArray69 = new double[] { 'a', 100L };
        double double71 = variance54.evaluate(doubleArray69, 0.0d);
        variance1.incrementAll(doubleArray69);
        java.lang.Class<?> wildcardClass73 = variance1.getClass();
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 2168.222222222222d + "'", double9 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[0.0, 1.0, 1.0, 0.0, -1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 16.566666666666663d + "'", double20 == 16.566666666666663d);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 2168.222222222222d + "'", double36 == 2168.222222222222d);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 2168.222222222222d + "'", double48 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 2601.8666666666663d + "'", double51 == 2601.8666666666663d);
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 2168.222222222222d + "'", double62 == 2168.222222222222d);
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[97.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + 4.5d + "'", double71 == 4.5d);
        org.junit.Assert.assertNotNull(wildcardClass73);
    }

    @Test
    public void test1153() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1153");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray8 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double9 = variance1.evaluate(doubleArray8);
        variance1.setBiasCorrected(true);
        long long12 = variance1.getN();
        long long13 = variance1.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance15 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray22 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double23 = variance15.evaluate(doubleArray22);
        double[] doubleArray27 = new double[] { (byte) 1, (byte) 100, 1L };
        double double28 = variance15.evaluate(doubleArray27);
        double double30 = variance1.evaluate(doubleArray27, (double) 10.0f);
        org.apache.commons.math.stat.descriptive.moment.Variance variance32 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray39 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double40 = variance32.evaluate(doubleArray39);
        variance32.setBiasCorrected(true);
        long long43 = variance32.getN();
        long long44 = variance32.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance46 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray53 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double54 = variance46.evaluate(doubleArray53);
        double[] doubleArray58 = new double[] { (byte) 1, (byte) 100, 1L };
        double double59 = variance46.evaluate(doubleArray58);
        double double61 = variance32.evaluate(doubleArray58, (double) 10.0f);
        double double62 = variance1.evaluate(doubleArray58);
        boolean boolean63 = variance1.isBiasCorrected();
        double double64 = variance1.getResult();
        variance1.setBiasCorrected(false);
        long long67 = variance1.getN();
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 2168.222222222222d + "'", double9 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 0L + "'", long12 == 0L);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 0L + "'", long13 == 0L);
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 2168.222222222222d + "'", double23 == 2168.222222222222d);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[1.0, 100.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 2178.0d + "'", double28 == 2178.0d);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 3267.0d + "'", double30 == 3267.0d);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 2168.222222222222d + "'", double40 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + long43 + "' != '" + 0L + "'", long43 == 0L);
        org.junit.Assert.assertTrue("'" + long44 + "' != '" + 0L + "'", long44 == 0L);
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray53), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 2168.222222222222d + "'", double54 == 2168.222222222222d);
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[1.0, 100.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 2178.0d + "'", double59 == 2178.0d);
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 3267.0d + "'", double61 == 3267.0d);
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 3267.0d + "'", double62 == 3267.0d);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double64));
        org.junit.Assert.assertTrue("'" + long67 + "' != '" + 0L + "'", long67 == 0L);
    }

    @Test
    public void test1154() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1154");
        org.apache.commons.math.stat.descriptive.moment.Variance variance0 = new org.apache.commons.math.stat.descriptive.moment.Variance();
        long long1 = variance0.getN();
        variance0.setBiasCorrected(true);
        variance0.increment(2178.0d);
        boolean boolean6 = variance0.isBiasCorrected();
        org.apache.commons.math.stat.descriptive.moment.Variance variance8 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray15 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double16 = variance8.evaluate(doubleArray15);
        variance8.setBiasCorrected(true);
        boolean boolean19 = variance8.isBiasCorrected();
        double[] doubleArray26 = new double[] { (short) 0, 1.0d, 1L, 0.0d, (-1.0d), 10L };
        double double27 = variance8.evaluate(doubleArray26);
        double double28 = variance8.getResult();
        long long29 = variance8.getN();
        variance8.increment((double) '#');
        variance8.increment(100.0d);
        org.apache.commons.math.stat.descriptive.moment.Variance variance35 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray42 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double43 = variance35.evaluate(doubleArray42);
        variance35.setBiasCorrected(true);
        boolean boolean46 = variance35.isBiasCorrected();
        double[] doubleArray53 = new double[] { (short) 0, 1.0d, 1L, 0.0d, (-1.0d), 10L };
        double double54 = variance35.evaluate(doubleArray53);
        double double56 = variance8.evaluate(doubleArray53, (double) (byte) 100);
        double double57 = variance0.evaluate(doubleArray53);
        variance0.increment(13.80555555555562d);
        variance0.increment((double) 3L);
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 2168.222222222222d + "'", double16 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[0.0, 1.0, 1.0, 0.0, -1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 16.566666666666663d + "'", double27 == 16.566666666666663d);
        org.junit.Assert.assertTrue(Double.isNaN(double28));
        org.junit.Assert.assertTrue("'" + long29 + "' != '" + 0L + "'", long29 == 0L);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 2168.222222222222d + "'", double43 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray53), "[0.0, 1.0, 1.0, 0.0, -1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 16.566666666666663d + "'", double54 == 16.566666666666663d);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 16.566666666667153d + "'", double56 == 16.566666666667153d);
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 16.566666666666663d + "'", double57 == 16.566666666666663d);
    }

    @Test
    public void test1155() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1155");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray8 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double9 = variance1.evaluate(doubleArray8);
        variance1.setBiasCorrected(true);
        long long12 = variance1.getN();
        variance1.clear();
        long long14 = variance1.getN();
        boolean boolean15 = variance1.isBiasCorrected();
        long long16 = variance1.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance17 = new org.apache.commons.math.stat.descriptive.moment.Variance();
        double double18 = variance17.getResult();
        boolean boolean19 = variance17.isBiasCorrected();
        org.apache.commons.math.stat.descriptive.moment.Variance variance21 = new org.apache.commons.math.stat.descriptive.moment.Variance(true);
        double double22 = variance21.getResult();
        double double23 = variance21.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance25 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray32 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double33 = variance25.evaluate(doubleArray32);
        variance25.clear();
        variance25.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance38 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance38.clear();
        double double40 = variance38.getResult();
        double[] doubleArray45 = new double[] { (-1), 2168.222222222222d, 16.566666666418314d, 10.0d };
        variance38.incrementAll(doubleArray45);
        boolean boolean47 = variance25.equals((java.lang.Object) doubleArray45);
        double double49 = variance21.evaluate(doubleArray45, (double) (-1.0f));
        double double51 = variance17.evaluate(doubleArray45, (double) (-1L));
        variance17.increment(2.25d);
        long long54 = variance17.getN();
        boolean boolean55 = variance17.isBiasCorrected();
        boolean boolean56 = variance1.equals((java.lang.Object) variance17);
        double double57 = variance1.getResult();
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 2168.222222222222d + "'", double9 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 0L + "'", long12 == 0L);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 0L + "'", long14 == 0L);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 0L + "'", long16 == 0L);
        org.junit.Assert.assertTrue(Double.isNaN(double18));
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double22));
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 2168.222222222222d + "'", double33 == 2168.222222222222d);
        org.junit.Assert.assertTrue(Double.isNaN(double40));
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[-1.0, 2168.222222222222, 16.566666666418314, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 1166128.5457099646d + "'", double49 == 1166128.5457099646d);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 1166128.5457099646d + "'", double51 == 1166128.5457099646d);
        org.junit.Assert.assertTrue("'" + long54 + "' != '" + 1L + "'", long54 == 1L);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double57));
    }

    @Test
    public void test1156() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1156");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray8 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double9 = variance1.evaluate(doubleArray8);
        double[] doubleArray13 = new double[] { (byte) 1, (byte) 100, 1L };
        double double14 = variance1.evaluate(doubleArray13);
        boolean boolean15 = variance1.isBiasCorrected();
        java.lang.Class<?> wildcardClass16 = variance1.getClass();
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 2168.222222222222d + "'", double9 == 2168.222222222222d);
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[1.0, 100.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 2178.0d + "'", double14 == 2178.0d);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(wildcardClass16);
    }

    @Test
    public void test1157() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1157");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray8 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double9 = variance1.evaluate(doubleArray8);
        long long10 = variance1.getN();
        variance1.increment((double) (byte) 1);
        variance1.increment((double) 6L);
        double double15 = variance1.getResult();
        variance1.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance18 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray25 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double26 = variance18.evaluate(doubleArray25);
        variance18.setBiasCorrected(true);
        boolean boolean29 = variance18.isBiasCorrected();
        double[] doubleArray36 = new double[] { (short) 0, 1.0d, 1L, 0.0d, (-1.0d), 10L };
        double double37 = variance18.evaluate(doubleArray36);
        double double38 = variance1.evaluate(doubleArray36);
        variance1.clear();
        variance1.setBiasCorrected(true);
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 2168.222222222222d + "'", double9 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 0L + "'", long10 == 0L);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 6.25d + "'", double15 == 6.25d);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 2168.222222222222d + "'", double26 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[0.0, 1.0, 1.0, 0.0, -1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 16.566666666666663d + "'", double37 == 16.566666666666663d);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 13.805555555555552d + "'", double38 == 13.805555555555552d);
    }

    @Test
    public void test1158() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1158");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray8 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double9 = variance1.evaluate(doubleArray8);
        variance1.setBiasCorrected(true);
        long long12 = variance1.getN();
        variance1.clear();
        boolean boolean14 = variance1.isBiasCorrected();
        org.apache.commons.math.stat.descriptive.moment.Variance variance16 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray23 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double24 = variance16.evaluate(doubleArray23);
        long long25 = variance16.getN();
        variance16.increment((double) (byte) 1);
        variance16.increment((double) 6L);
        variance16.increment(2178.0d);
        org.apache.commons.math.stat.descriptive.moment.Variance variance32 = new org.apache.commons.math.stat.descriptive.moment.Variance();
        long long33 = variance32.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance35 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray42 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double43 = variance35.evaluate(doubleArray42);
        variance35.setBiasCorrected(true);
        boolean boolean46 = variance35.isBiasCorrected();
        double[] doubleArray53 = new double[] { (short) 0, 1.0d, 1L, 0.0d, (-1.0d), 10L };
        double double54 = variance35.evaluate(doubleArray53);
        boolean boolean56 = variance35.equals((java.lang.Object) 10.0d);
        boolean boolean57 = variance35.isBiasCorrected();
        org.apache.commons.math.stat.descriptive.moment.Variance variance59 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        boolean boolean60 = variance35.equals((java.lang.Object) false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance62 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray69 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double70 = variance62.evaluate(doubleArray69);
        variance62.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance74 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray81 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double82 = variance74.evaluate(doubleArray81);
        variance62.incrementAll(doubleArray81);
        double double85 = variance35.evaluate(doubleArray81, (double) 100.0f);
        variance32.incrementAll(doubleArray81, (int) (short) 1, (int) (byte) 0);
        variance16.incrementAll(doubleArray81);
        double double91 = variance1.evaluate(doubleArray81, (double) 10L);
        boolean boolean92 = variance1.isBiasCorrected();
        variance1.setBiasCorrected(false);
        variance1.setBiasCorrected(false);
        variance1.increment(459247.35802469135d);
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 2168.222222222222d + "'", double9 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 0L + "'", long12 == 0L);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 2168.222222222222d + "'", double24 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + long25 + "' != '" + 0L + "'", long25 == 0L);
        org.junit.Assert.assertTrue("'" + long33 + "' != '" + 0L + "'", long33 == 0L);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 2168.222222222222d + "'", double43 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray53), "[0.0, 1.0, 1.0, 0.0, -1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 16.566666666666663d + "'", double54 == 16.566666666666663d);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + 2168.222222222222d + "'", double70 == 2168.222222222222d);
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray81), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double82 + "' != '" + 2168.222222222222d + "'", double82 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + double85 + "' != '" + 2601.8666666666663d + "'", double85 == 2601.8666666666663d);
        org.junit.Assert.assertTrue("'" + double91 + "' != '" + 2601.866666666667d + "'", double91 == 2601.866666666667d);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + true + "'", boolean92 == true);
    }

    @Test
    public void test1159() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1159");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray8 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double9 = variance1.evaluate(doubleArray8);
        variance1.setBiasCorrected(true);
        variance1.increment((double) (byte) 0);
        variance1.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance17 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray24 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double25 = variance17.evaluate(doubleArray24);
        long long26 = variance17.getN();
        variance17.increment((double) (byte) 1);
        variance17.increment((double) 6L);
        variance17.increment(2178.0d);
        org.apache.commons.math.stat.descriptive.moment.Variance variance33 = new org.apache.commons.math.stat.descriptive.moment.Variance();
        long long34 = variance33.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance36 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray43 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double44 = variance36.evaluate(doubleArray43);
        variance36.setBiasCorrected(true);
        boolean boolean47 = variance36.isBiasCorrected();
        double[] doubleArray54 = new double[] { (short) 0, 1.0d, 1L, 0.0d, (-1.0d), 10L };
        double double55 = variance36.evaluate(doubleArray54);
        boolean boolean57 = variance36.equals((java.lang.Object) 10.0d);
        boolean boolean58 = variance36.isBiasCorrected();
        org.apache.commons.math.stat.descriptive.moment.Variance variance60 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        boolean boolean61 = variance36.equals((java.lang.Object) false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance63 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray70 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double71 = variance63.evaluate(doubleArray70);
        variance63.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance75 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray82 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double83 = variance75.evaluate(doubleArray82);
        variance63.incrementAll(doubleArray82);
        double double86 = variance36.evaluate(doubleArray82, (double) 100.0f);
        variance33.incrementAll(doubleArray82, (int) (short) 1, (int) (byte) 0);
        variance17.incrementAll(doubleArray82);
        double double91 = variance17.getResult();
        boolean boolean92 = variance1.equals((java.lang.Object) variance17);
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 2168.222222222222d + "'", double9 == 2168.222222222222d);
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 2168.222222222222d + "'", double25 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + long26 + "' != '" + 0L + "'", long26 == 0L);
        org.junit.Assert.assertTrue("'" + long34 + "' != '" + 0L + "'", long34 == 0L);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 2168.222222222222d + "'", double44 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[0.0, 1.0, 1.0, 0.0, -1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 16.566666666666663d + "'", double55 == 16.566666666666663d);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + 2168.222222222222d + "'", double71 == 2168.222222222222d);
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray82), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + 2168.222222222222d + "'", double83 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + double86 + "' != '" + 2601.8666666666663d + "'", double86 == 2601.8666666666663d);
        org.junit.Assert.assertTrue("'" + double91 + "' != '" + 459247.35802469135d + "'", double91 == 459247.35802469135d);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
    }

    @Test
    public void test1160() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1160");
        org.apache.commons.math.stat.descriptive.moment.Variance variance0 = new org.apache.commons.math.stat.descriptive.moment.Variance();
        double double1 = variance0.getResult();
        boolean boolean2 = variance0.isBiasCorrected();
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true);
        double double5 = variance4.getResult();
        double double6 = variance4.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance8 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray15 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double16 = variance8.evaluate(doubleArray15);
        variance8.clear();
        variance8.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance21 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance21.clear();
        double double23 = variance21.getResult();
        double[] doubleArray28 = new double[] { (-1), 2168.222222222222d, 16.566666666418314d, 10.0d };
        variance21.incrementAll(doubleArray28);
        boolean boolean30 = variance8.equals((java.lang.Object) doubleArray28);
        double double32 = variance4.evaluate(doubleArray28, (double) (-1.0f));
        double double34 = variance0.evaluate(doubleArray28, (double) (-1L));
        variance0.increment(2.25d);
        long long37 = variance0.getN();
        variance0.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance39 = new org.apache.commons.math.stat.descriptive.moment.Variance();
        long long40 = variance39.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance42 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray49 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double50 = variance42.evaluate(doubleArray49);
        variance42.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance54 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray61 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double62 = variance54.evaluate(doubleArray61);
        variance42.incrementAll(doubleArray61);
        variance42.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance66 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray73 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double74 = variance66.evaluate(doubleArray73);
        double[] doubleArray78 = new double[] { (byte) 1, (byte) 100, 1L };
        double double79 = variance66.evaluate(doubleArray78);
        variance42.incrementAll(doubleArray78, (int) (byte) 0, (int) (byte) 1);
        variance39.incrementAll(doubleArray78);
        double double86 = variance0.evaluate(doubleArray78, (int) (byte) 0, (int) (short) 0);
        org.junit.Assert.assertTrue(Double.isNaN(double1));
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 2168.222222222222d + "'", double16 == 2168.222222222222d);
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[-1.0, 2168.222222222222, 16.566666666418314, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 1166128.5457099646d + "'", double32 == 1166128.5457099646d);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 1166128.5457099646d + "'", double34 == 1166128.5457099646d);
        org.junit.Assert.assertTrue("'" + long37 + "' != '" + 1L + "'", long37 == 1L);
        org.junit.Assert.assertTrue("'" + long40 + "' != '" + 0L + "'", long40 == 0L);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 2168.222222222222d + "'", double50 == 2168.222222222222d);
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 2168.222222222222d + "'", double62 == 2168.222222222222d);
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double74 + "' != '" + 2168.222222222222d + "'", double74 == 2168.222222222222d);
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray78), "[1.0, 100.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double79 + "' != '" + 2178.0d + "'", double79 == 2178.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double86));
    }

    @Test
    public void test1161() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1161");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance1.clear();
        double double3 = variance1.getResult();
        double[] doubleArray8 = new double[] { (-1), 2168.222222222222d, 16.566666666418314d, 10.0d };
        variance1.incrementAll(doubleArray8);
        org.apache.commons.math.stat.descriptive.moment.Variance variance11 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray18 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double19 = variance11.evaluate(doubleArray18);
        variance11.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance23 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray30 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double31 = variance23.evaluate(doubleArray30);
        variance11.incrementAll(doubleArray30);
        variance11.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance35 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray42 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double43 = variance35.evaluate(doubleArray42);
        double[] doubleArray47 = new double[] { (byte) 1, (byte) 100, 1L };
        double double48 = variance35.evaluate(doubleArray47);
        variance11.incrementAll(doubleArray47, (int) (byte) 0, (int) (byte) 1);
        double double55 = variance1.evaluate(doubleArray47, (double) 'a', (int) (short) 1, (int) (short) 1);
        variance1.clear();
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-1.0, 2168.222222222222, 16.566666666418314, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 2168.222222222222d + "'", double19 == 2168.222222222222d);
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 2168.222222222222d + "'", double31 == 2168.222222222222d);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 2168.222222222222d + "'", double43 == 2168.222222222222d);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[1.0, 100.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 2178.0d + "'", double48 == 2178.0d);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 0.0d + "'", double55 == 0.0d);
    }

    @Test
    public void test1162() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1162");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance3 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray10 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double11 = variance3.evaluate(doubleArray10);
        variance3.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance15 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray22 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double23 = variance15.evaluate(doubleArray22);
        variance15.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance27 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray34 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double35 = variance27.evaluate(doubleArray34);
        variance27.setBiasCorrected(true);
        boolean boolean38 = variance27.isBiasCorrected();
        double[] doubleArray45 = new double[] { (short) 0, 1.0d, 1L, 0.0d, (-1.0d), 10L };
        double double46 = variance27.evaluate(doubleArray45);
        double double49 = variance15.evaluate(doubleArray45, (int) (byte) 1, (int) (byte) 0);
        variance3.incrementAll(doubleArray45, (int) (byte) 1, 1);
        double double53 = variance1.evaluate(doubleArray45);
        double double54 = variance1.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance56 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray63 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double64 = variance56.evaluate(doubleArray63);
        variance56.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance68 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray75 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double76 = variance68.evaluate(doubleArray75);
        variance56.incrementAll(doubleArray75);
        variance56.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance80 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray87 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double88 = variance80.evaluate(doubleArray87);
        double[] doubleArray92 = new double[] { (byte) 1, (byte) 100, 1L };
        double double93 = variance80.evaluate(doubleArray92);
        variance56.incrementAll(doubleArray92, (int) (byte) 0, (int) (byte) 1);
        boolean boolean97 = variance1.equals((java.lang.Object) doubleArray92);
        long long98 = variance1.getN();
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 2168.222222222222d + "'", double11 == 2168.222222222222d);
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 2168.222222222222d + "'", double23 == 2168.222222222222d);
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 2168.222222222222d + "'", double35 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[0.0, 1.0, 1.0, 0.0, -1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 16.566666666666663d + "'", double46 == 16.566666666666663d);
        org.junit.Assert.assertTrue(Double.isNaN(double49));
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 13.805555555555552d + "'", double53 == 13.805555555555552d);
        org.junit.Assert.assertTrue(Double.isNaN(double54));
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 2168.222222222222d + "'", double64 == 2168.222222222222d);
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray75), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double76 + "' != '" + 2168.222222222222d + "'", double76 == 2168.222222222222d);
        org.junit.Assert.assertNotNull(doubleArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray87), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double88 + "' != '" + 2168.222222222222d + "'", double88 == 2168.222222222222d);
        org.junit.Assert.assertNotNull(doubleArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray92), "[1.0, 100.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double93 + "' != '" + 2178.0d + "'", double93 == 2178.0d);
        org.junit.Assert.assertTrue("'" + boolean97 + "' != '" + false + "'", boolean97 == false);
        org.junit.Assert.assertTrue("'" + long98 + "' != '" + 0L + "'", long98 == 0L);
    }

    @Test
    public void test1163() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1163");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray8 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double9 = variance1.evaluate(doubleArray8);
        variance1.setBiasCorrected(true);
        boolean boolean12 = variance1.isBiasCorrected();
        double[] doubleArray19 = new double[] { (short) 0, 1.0d, 1L, 0.0d, (-1.0d), 10L };
        double double20 = variance1.evaluate(doubleArray19);
        double double21 = variance1.getResult();
        variance1.setBiasCorrected(true);
        boolean boolean24 = variance1.isBiasCorrected();
        variance1.setBiasCorrected(false);
        variance1.increment(2601.866666666667d);
        org.apache.commons.math.stat.descriptive.moment.Variance variance30 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray37 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double38 = variance30.evaluate(doubleArray37);
        variance30.setBiasCorrected(true);
        long long41 = variance30.getN();
        variance30.clear();
        double double43 = variance30.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance45 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray52 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double53 = variance45.evaluate(doubleArray52);
        variance45.setBiasCorrected(true);
        boolean boolean56 = variance45.isBiasCorrected();
        double[] doubleArray63 = new double[] { (short) 0, 1.0d, 1L, 0.0d, (-1.0d), 10L };
        double double64 = variance45.evaluate(doubleArray63);
        boolean boolean66 = variance45.equals((java.lang.Object) 10.0d);
        org.apache.commons.math.stat.descriptive.moment.Variance variance68 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray75 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double76 = variance68.evaluate(doubleArray75);
        variance68.setBiasCorrected(true);
        boolean boolean79 = variance68.isBiasCorrected();
        double[] doubleArray86 = new double[] { (short) 0, 1.0d, 1L, 0.0d, (-1.0d), 10L };
        double double87 = variance68.evaluate(doubleArray86);
        double double89 = variance45.evaluate(doubleArray86, (double) 0.0f);
        variance30.incrementAll(doubleArray86);
        double double91 = variance1.evaluate(doubleArray86);
        boolean boolean92 = variance1.isBiasCorrected();
        double[] doubleArray93 = null;
        // The following exception was thrown during execution in test generation
        try {
            variance1.incrementAll(doubleArray93, (int) (short) 100, 10);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: input value array is null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 2168.222222222222d + "'", double9 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[0.0, 1.0, 1.0, 0.0, -1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 16.566666666666663d + "'", double20 == 16.566666666666663d);
        org.junit.Assert.assertTrue(Double.isNaN(double21));
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 2168.222222222222d + "'", double38 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + long41 + "' != '" + 0L + "'", long41 == 0L);
        org.junit.Assert.assertTrue(Double.isNaN(double43));
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 2168.222222222222d + "'", double53 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[0.0, 1.0, 1.0, 0.0, -1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 16.566666666666663d + "'", double64 == 16.566666666666663d);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray75), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double76 + "' != '" + 2168.222222222222d + "'", double76 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray86), "[0.0, 1.0, 1.0, 0.0, -1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double87 + "' != '" + 16.566666666666663d + "'", double87 == 16.566666666666663d);
        org.junit.Assert.assertTrue("'" + double89 + "' != '" + 16.566666666666666d + "'", double89 == 16.566666666666666d);
        org.junit.Assert.assertTrue("'" + double91 + "' != '" + 13.805555555555552d + "'", double91 == 13.805555555555552d);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
    }

    @Test
    public void test1164() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1164");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance1.setBiasCorrected(false);
        variance1.clear();
        boolean boolean5 = variance1.isBiasCorrected();
        variance1.setBiasCorrected(false);
        long long8 = variance1.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance10 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray17 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double18 = variance10.evaluate(doubleArray17);
        variance10.setBiasCorrected(true);
        long long21 = variance10.getN();
        long long22 = variance10.getN();
        double double23 = variance10.getResult();
        variance10.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance26 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray33 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double34 = variance26.evaluate(doubleArray33);
        double[] doubleArray38 = new double[] { (byte) 1, (byte) 100, 1L };
        double double39 = variance26.evaluate(doubleArray38);
        org.apache.commons.math.stat.descriptive.moment.Variance variance41 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray48 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double49 = variance41.evaluate(doubleArray48);
        variance41.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance53 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray60 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double61 = variance53.evaluate(doubleArray60);
        variance41.incrementAll(doubleArray60);
        variance26.incrementAll(doubleArray60);
        double double64 = variance10.evaluate(doubleArray60);
        long long65 = variance10.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance67 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance69 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray76 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double77 = variance69.evaluate(doubleArray76);
        variance69.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance81 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance81.clear();
        double double83 = variance81.getResult();
        double[] doubleArray88 = new double[] { (-1), 2168.222222222222d, 16.566666666418314d, 10.0d };
        variance81.incrementAll(doubleArray88);
        variance69.incrementAll(doubleArray88);
        double double91 = variance67.evaluate(doubleArray88);
        double double92 = variance10.evaluate(doubleArray88);
        double double93 = variance1.evaluate(doubleArray88);
        boolean boolean94 = variance1.isBiasCorrected();
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 0L + "'", long8 == 0L);
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 2168.222222222222d + "'", double18 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + long21 + "' != '" + 0L + "'", long21 == 0L);
        org.junit.Assert.assertTrue("'" + long22 + "' != '" + 0L + "'", long22 == 0L);
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 2168.222222222222d + "'", double34 == 2168.222222222222d);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[1.0, 100.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 2178.0d + "'", double39 == 2178.0d);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 2168.222222222222d + "'", double49 == 2168.222222222222d);
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 2168.222222222222d + "'", double61 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 2601.866666666667d + "'", double64 == 2601.866666666667d);
        org.junit.Assert.assertTrue("'" + long65 + "' != '" + 0L + "'", long65 == 0L);
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double77 + "' != '" + 2168.222222222222d + "'", double77 == 2168.222222222222d);
        org.junit.Assert.assertTrue(Double.isNaN(double83));
        org.junit.Assert.assertNotNull(doubleArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray88), "[-1.0, 2168.222222222222, 16.566666666418314, 10.0]");
        org.junit.Assert.assertTrue("'" + double91 + "' != '" + 874596.4092824734d + "'", double91 == 874596.4092824734d);
        org.junit.Assert.assertTrue("'" + double92 + "' != '" + 1166128.5457099646d + "'", double92 == 1166128.5457099646d);
        org.junit.Assert.assertTrue("'" + double93 + "' != '" + 874596.4092824734d + "'", double93 == 874596.4092824734d);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + false + "'", boolean94 == false);
    }

    @Test
    public void test1165() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1165");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray8 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double9 = variance1.evaluate(doubleArray8);
        variance1.setBiasCorrected(true);
        boolean boolean12 = variance1.isBiasCorrected();
        double[] doubleArray19 = new double[] { (short) 0, 1.0d, 1L, 0.0d, (-1.0d), 10L };
        double double20 = variance1.evaluate(doubleArray19);
        boolean boolean22 = variance1.equals((java.lang.Object) 10.0d);
        boolean boolean23 = variance1.isBiasCorrected();
        org.apache.commons.math.stat.descriptive.moment.Variance variance25 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        boolean boolean26 = variance1.equals((java.lang.Object) false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance28 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray35 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double36 = variance28.evaluate(doubleArray35);
        variance28.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance40 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray47 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double48 = variance40.evaluate(doubleArray47);
        variance28.incrementAll(doubleArray47);
        double double51 = variance1.evaluate(doubleArray47, (double) 100.0f);
        long long52 = variance1.getN();
        long long53 = variance1.getN();
        variance1.setBiasCorrected(false);
        boolean boolean56 = variance1.isBiasCorrected();
        double double57 = variance1.getResult();
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 2168.222222222222d + "'", double9 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[0.0, 1.0, 1.0, 0.0, -1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 16.566666666666663d + "'", double20 == 16.566666666666663d);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 2168.222222222222d + "'", double36 == 2168.222222222222d);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 2168.222222222222d + "'", double48 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 2601.8666666666663d + "'", double51 == 2601.8666666666663d);
        org.junit.Assert.assertTrue("'" + long52 + "' != '" + 0L + "'", long52 == 0L);
        org.junit.Assert.assertTrue("'" + long53 + "' != '" + 0L + "'", long53 == 0L);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double57));
    }

    @Test
    public void test1166() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1166");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray8 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double9 = variance1.evaluate(doubleArray8);
        variance1.setBiasCorrected(true);
        boolean boolean12 = variance1.isBiasCorrected();
        double[] doubleArray19 = new double[] { (short) 0, 1.0d, 1L, 0.0d, (-1.0d), 10L };
        double double20 = variance1.evaluate(doubleArray19);
        boolean boolean22 = variance1.equals((java.lang.Object) 10.0d);
        boolean boolean23 = variance1.isBiasCorrected();
        org.apache.commons.math.stat.descriptive.moment.Variance variance25 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        boolean boolean26 = variance1.equals((java.lang.Object) false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance28 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray35 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double36 = variance28.evaluate(doubleArray35);
        variance28.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance40 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray47 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double48 = variance40.evaluate(doubleArray47);
        variance28.incrementAll(doubleArray47);
        double double51 = variance1.evaluate(doubleArray47, (double) 100.0f);
        long long52 = variance1.getN();
        variance1.increment((double) '4');
        double double55 = variance1.getResult();
        variance1.clear();
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 2168.222222222222d + "'", double9 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[0.0, 1.0, 1.0, 0.0, -1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 16.566666666666663d + "'", double20 == 16.566666666666663d);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 2168.222222222222d + "'", double36 == 2168.222222222222d);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 2168.222222222222d + "'", double48 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 2601.8666666666663d + "'", double51 == 2601.8666666666663d);
        org.junit.Assert.assertTrue("'" + long52 + "' != '" + 0L + "'", long52 == 0L);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 0.0d + "'", double55 == 0.0d);
    }

    @Test
    public void test1167() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1167");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray8 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double9 = variance1.evaluate(doubleArray8);
        long long10 = variance1.getN();
        variance1.increment(874596.4092824734d);
        variance1.setBiasCorrected(false);
        boolean boolean15 = variance1.isBiasCorrected();
        org.apache.commons.math.stat.descriptive.moment.Variance variance17 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray24 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double25 = variance17.evaluate(doubleArray24);
        variance17.setBiasCorrected(true);
        boolean boolean28 = variance17.isBiasCorrected();
        double[] doubleArray35 = new double[] { (short) 0, 1.0d, 1L, 0.0d, (-1.0d), 10L };
        double double36 = variance17.evaluate(doubleArray35);
        boolean boolean38 = variance17.equals((java.lang.Object) 10.0d);
        boolean boolean39 = variance17.isBiasCorrected();
        org.apache.commons.math.stat.descriptive.moment.Variance variance41 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        boolean boolean42 = variance17.equals((java.lang.Object) false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance44 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray51 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double52 = variance44.evaluate(doubleArray51);
        variance44.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance56 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray63 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double64 = variance56.evaluate(doubleArray63);
        variance44.incrementAll(doubleArray63);
        double double67 = variance17.evaluate(doubleArray63, (double) 100.0f);
        variance17.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance70 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray77 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double78 = variance70.evaluate(doubleArray77);
        variance70.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance82 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray89 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double90 = variance82.evaluate(doubleArray89);
        variance70.incrementAll(doubleArray89);
        variance17.incrementAll(doubleArray89);
        double double94 = variance1.evaluate(doubleArray89, 16.566666666667153d);
        variance1.setBiasCorrected(false);
        variance1.increment(16.566666666666663d);
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 2168.222222222222d + "'", double9 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 0L + "'", long10 == 0L);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 2168.222222222222d + "'", double25 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[0.0, 1.0, 1.0, 0.0, -1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 16.566666666666663d + "'", double36 == 16.566666666666663d);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 2168.222222222222d + "'", double52 == 2168.222222222222d);
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 2168.222222222222d + "'", double64 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 2601.8666666666663d + "'", double67 == 2601.8666666666663d);
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray77), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double78 + "' != '" + 2168.222222222222d + "'", double78 == 2168.222222222222d);
        org.junit.Assert.assertNotNull(doubleArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray89), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double90 + "' != '" + 2168.222222222222d + "'", double90 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + double94 + "' != '" + 2168.2222222222226d + "'", double94 == 2168.2222222222226d);
    }

    @Test
    public void test1168() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1168");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray8 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double9 = variance1.evaluate(doubleArray8);
        variance1.setBiasCorrected(true);
        boolean boolean12 = variance1.isBiasCorrected();
        double[] doubleArray19 = new double[] { (short) 0, 1.0d, 1L, 0.0d, (-1.0d), 10L };
        double double20 = variance1.evaluate(doubleArray19);
        org.apache.commons.math.stat.descriptive.moment.Variance variance22 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray29 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double30 = variance22.evaluate(doubleArray29);
        variance22.setBiasCorrected(true);
        boolean boolean33 = variance22.isBiasCorrected();
        double[] doubleArray40 = new double[] { (short) 0, 1.0d, 1L, 0.0d, (-1.0d), 10L };
        double double41 = variance22.evaluate(doubleArray40);
        double double44 = variance1.evaluate(doubleArray40, (int) (byte) 1, 0);
        variance1.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance48 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray55 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double56 = variance48.evaluate(doubleArray55);
        variance48.setBiasCorrected(true);
        boolean boolean59 = variance48.isBiasCorrected();
        double[] doubleArray66 = new double[] { (short) 0, 1.0d, 1L, 0.0d, (-1.0d), 10L };
        double double67 = variance48.evaluate(doubleArray66);
        double double69 = variance1.evaluate(doubleArray66, 6.25d);
        variance1.increment(2178.0d);
        java.lang.Class<?> wildcardClass72 = variance1.getClass();
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 2168.222222222222d + "'", double9 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[0.0, 1.0, 1.0, 0.0, -1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 16.566666666666663d + "'", double20 == 16.566666666666663d);
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 2168.222222222222d + "'", double30 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[0.0, 1.0, 1.0, 0.0, -1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 16.566666666666663d + "'", double41 == 16.566666666666663d);
        org.junit.Assert.assertTrue(Double.isNaN(double44));
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 2168.222222222222d + "'", double56 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[0.0, 1.0, 1.0, 0.0, -1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 16.566666666666663d + "'", double67 == 16.566666666666663d);
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 16.566666666666666d + "'", double69 == 16.566666666666666d);
        org.junit.Assert.assertNotNull(wildcardClass72);
    }

    @Test
    public void test1169() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1169");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(true);
        double double2 = variance1.getResult();
        double double3 = variance1.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance5 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray12 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double13 = variance5.evaluate(doubleArray12);
        variance5.setBiasCorrected(true);
        long long16 = variance5.getN();
        variance5.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance19 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray26 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double27 = variance19.evaluate(doubleArray26);
        double double28 = variance5.evaluate(doubleArray26);
        variance1.incrementAll(doubleArray26);
        variance1.clear();
        long long31 = variance1.getN();
        org.junit.Assert.assertTrue(Double.isNaN(double2));
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 2168.222222222222d + "'", double13 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 0L + "'", long16 == 0L);
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 2168.222222222222d + "'", double27 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 2601.866666666667d + "'", double28 == 2601.866666666667d);
        org.junit.Assert.assertTrue("'" + long31 + "' != '" + 0L + "'", long31 == 0L);
    }

    @Test
    public void test1170() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1170");
        org.apache.commons.math.stat.descriptive.moment.Variance variance0 = new org.apache.commons.math.stat.descriptive.moment.Variance();
        double double1 = variance0.getResult();
        boolean boolean2 = variance0.isBiasCorrected();
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true);
        double double5 = variance4.getResult();
        double double6 = variance4.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance8 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray15 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double16 = variance8.evaluate(doubleArray15);
        variance8.clear();
        variance8.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance21 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance21.clear();
        double double23 = variance21.getResult();
        double[] doubleArray28 = new double[] { (-1), 2168.222222222222d, 16.566666666418314d, 10.0d };
        variance21.incrementAll(doubleArray28);
        boolean boolean30 = variance8.equals((java.lang.Object) doubleArray28);
        double double32 = variance4.evaluate(doubleArray28, (double) (-1.0f));
        double double34 = variance0.evaluate(doubleArray28, (double) (-1L));
        variance0.increment((double) 0L);
        variance0.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance39 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray46 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double47 = variance39.evaluate(doubleArray46);
        variance39.setBiasCorrected(true);
        long long50 = variance39.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance52 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray59 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double60 = variance52.evaluate(doubleArray59);
        variance52.clear();
        variance52.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance65 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance65.clear();
        double double67 = variance65.getResult();
        double[] doubleArray72 = new double[] { (-1), 2168.222222222222d, 16.566666666418314d, 10.0d };
        variance65.incrementAll(doubleArray72);
        boolean boolean74 = variance52.equals((java.lang.Object) doubleArray72);
        variance39.incrementAll(doubleArray72);
        org.apache.commons.math.stat.descriptive.moment.Variance variance77 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray84 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double85 = variance77.evaluate(doubleArray84);
        variance77.setBiasCorrected(true);
        long long88 = variance77.getN();
        long long89 = variance77.getN();
        boolean boolean91 = variance77.equals((java.lang.Object) 16.566666666666663d);
        boolean boolean92 = variance39.equals((java.lang.Object) variance77);
        boolean boolean93 = variance0.equals((java.lang.Object) variance39);
        org.junit.Assert.assertTrue(Double.isNaN(double1));
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 2168.222222222222d + "'", double16 == 2168.222222222222d);
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[-1.0, 2168.222222222222, 16.566666666418314, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 1166128.5457099646d + "'", double32 == 1166128.5457099646d);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 1166128.5457099646d + "'", double34 == 1166128.5457099646d);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 2168.222222222222d + "'", double47 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + long50 + "' != '" + 0L + "'", long50 == 0L);
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 2168.222222222222d + "'", double60 == 2168.222222222222d);
        org.junit.Assert.assertTrue(Double.isNaN(double67));
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray72), "[-1.0, 2168.222222222222, 16.566666666418314, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray84), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double85 + "' != '" + 2168.222222222222d + "'", double85 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + long88 + "' != '" + 0L + "'", long88 == 0L);
        org.junit.Assert.assertTrue("'" + long89 + "' != '" + 0L + "'", long89 == 0L);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
    }

    @Test
    public void test1171() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1171");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance1.setBiasCorrected(false);
        long long4 = variance1.getN();
        variance1.increment((double) 0.0f);
        org.apache.commons.math.stat.descriptive.moment.Variance variance8 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray15 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double16 = variance8.evaluate(doubleArray15);
        variance8.setBiasCorrected(true);
        boolean boolean19 = variance8.isBiasCorrected();
        double[] doubleArray26 = new double[] { (short) 0, 1.0d, 1L, 0.0d, (-1.0d), 10L };
        double double27 = variance8.evaluate(doubleArray26);
        boolean boolean29 = variance8.equals((java.lang.Object) 10.0d);
        org.apache.commons.math.stat.descriptive.moment.Variance variance31 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray38 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double39 = variance31.evaluate(doubleArray38);
        variance31.setBiasCorrected(true);
        boolean boolean42 = variance31.isBiasCorrected();
        double[] doubleArray49 = new double[] { (short) 0, 1.0d, 1L, 0.0d, (-1.0d), 10L };
        double double50 = variance31.evaluate(doubleArray49);
        double double52 = variance8.evaluate(doubleArray49, (double) 0.0f);
        boolean boolean53 = variance1.equals((java.lang.Object) double52);
        variance1.increment(2168.222222222222d);
        variance1.setBiasCorrected(true);
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 0L + "'", long4 == 0L);
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 2168.222222222222d + "'", double16 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[0.0, 1.0, 1.0, 0.0, -1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 16.566666666666663d + "'", double27 == 16.566666666666663d);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 2168.222222222222d + "'", double39 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[0.0, 1.0, 1.0, 0.0, -1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 16.566666666666663d + "'", double50 == 16.566666666666663d);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 16.566666666666666d + "'", double52 == 16.566666666666666d);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
    }

    @Test
    public void test1172() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1172");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray8 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double9 = variance1.evaluate(doubleArray8);
        variance1.clear();
        variance1.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance14 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray21 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double22 = variance14.evaluate(doubleArray21);
        variance14.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance26 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray33 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double34 = variance26.evaluate(doubleArray33);
        variance26.setBiasCorrected(true);
        boolean boolean37 = variance26.isBiasCorrected();
        double[] doubleArray44 = new double[] { (short) 0, 1.0d, 1L, 0.0d, (-1.0d), 10L };
        double double45 = variance26.evaluate(doubleArray44);
        double double48 = variance14.evaluate(doubleArray44, (int) (byte) 1, (int) (byte) 0);
        variance1.incrementAll(doubleArray44);
        variance1.clear();
        variance1.setBiasCorrected(false);
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 2168.222222222222d + "'", double9 == 2168.222222222222d);
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 2168.222222222222d + "'", double22 == 2168.222222222222d);
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 2168.222222222222d + "'", double34 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[0.0, 1.0, 1.0, 0.0, -1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 16.566666666666663d + "'", double45 == 16.566666666666663d);
        org.junit.Assert.assertTrue(Double.isNaN(double48));
    }

    @Test
    public void test1173() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1173");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray8 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double9 = variance1.evaluate(doubleArray8);
        variance1.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance13 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray20 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double21 = variance13.evaluate(doubleArray20);
        variance1.incrementAll(doubleArray20);
        variance1.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance25 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray32 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double33 = variance25.evaluate(doubleArray32);
        double[] doubleArray37 = new double[] { (byte) 1, (byte) 100, 1L };
        double double38 = variance25.evaluate(doubleArray37);
        variance1.incrementAll(doubleArray37, (int) (byte) 0, (int) (byte) 1);
        long long42 = variance1.getN();
        boolean boolean44 = variance1.equals((java.lang.Object) (short) -1);
        double double45 = variance1.getResult();
        boolean boolean46 = variance1.isBiasCorrected();
        variance1.setBiasCorrected(true);
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 2168.222222222222d + "'", double9 == 2168.222222222222d);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 2168.222222222222d + "'", double21 == 2168.222222222222d);
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 2168.222222222222d + "'", double33 == 2168.222222222222d);
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[1.0, 100.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 2178.0d + "'", double38 == 2178.0d);
        org.junit.Assert.assertTrue("'" + long42 + "' != '" + 1L + "'", long42 == 1L);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 0.0d + "'", double45 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
    }

    @Test
    public void test1174() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1174");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(true);
        double double2 = variance1.getResult();
        boolean boolean3 = variance1.isBiasCorrected();
        variance1.clear();
        variance1.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance8 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray15 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double16 = variance8.evaluate(doubleArray15);
        variance8.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance20 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray27 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double28 = variance20.evaluate(doubleArray27);
        variance20.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance32 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray39 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double40 = variance32.evaluate(doubleArray39);
        variance32.setBiasCorrected(true);
        boolean boolean43 = variance32.isBiasCorrected();
        double[] doubleArray50 = new double[] { (short) 0, 1.0d, 1L, 0.0d, (-1.0d), 10L };
        double double51 = variance32.evaluate(doubleArray50);
        double double54 = variance20.evaluate(doubleArray50, (int) (byte) 1, (int) (byte) 0);
        variance8.incrementAll(doubleArray50, (int) (byte) 1, 1);
        double double58 = variance1.evaluate(doubleArray50);
        org.apache.commons.math.stat.descriptive.moment.Variance variance60 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray67 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double68 = variance60.evaluate(doubleArray67);
        variance60.clear();
        variance60.setBiasCorrected(false);
        boolean boolean72 = variance1.equals((java.lang.Object) variance60);
        org.junit.Assert.assertTrue(Double.isNaN(double2));
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 2168.222222222222d + "'", double16 == 2168.222222222222d);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 2168.222222222222d + "'", double28 == 2168.222222222222d);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 2168.222222222222d + "'", double40 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[0.0, 1.0, 1.0, 0.0, -1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 16.566666666666663d + "'", double51 == 16.566666666666663d);
        org.junit.Assert.assertTrue(Double.isNaN(double54));
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 16.566666666666663d + "'", double58 == 16.566666666666663d);
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 2168.222222222222d + "'", double68 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
    }

    @Test
    public void test1175() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1175");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray8 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double9 = variance1.evaluate(doubleArray8);
        variance1.clear();
        variance1.setBiasCorrected(false);
        variance1.increment(2178.0d);
        variance1.increment((double) (short) 10);
        variance1.clear();
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 2168.222222222222d + "'", double9 == 2168.222222222222d);
    }

    @Test
    public void test1176() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1176");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray8 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double9 = variance1.evaluate(doubleArray8);
        variance1.setBiasCorrected(true);
        long long12 = variance1.getN();
        long long13 = variance1.getN();
        double double14 = variance1.getResult();
        variance1.increment((double) 0);
        variance1.clear();
        java.lang.Class<?> wildcardClass18 = variance1.getClass();
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 2168.222222222222d + "'", double9 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 0L + "'", long12 == 0L);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 0L + "'", long13 == 0L);
        org.junit.Assert.assertTrue(Double.isNaN(double14));
        org.junit.Assert.assertNotNull(wildcardClass18);
    }

    @Test
    public void test1177() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1177");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray8 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double9 = variance1.evaluate(doubleArray8);
        variance1.setBiasCorrected(true);
        long long12 = variance1.getN();
        variance1.clear();
        double double14 = variance1.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance16 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray23 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double24 = variance16.evaluate(doubleArray23);
        variance16.setBiasCorrected(true);
        boolean boolean27 = variance16.isBiasCorrected();
        double[] doubleArray34 = new double[] { (short) 0, 1.0d, 1L, 0.0d, (-1.0d), 10L };
        double double35 = variance16.evaluate(doubleArray34);
        boolean boolean37 = variance16.equals((java.lang.Object) 10.0d);
        org.apache.commons.math.stat.descriptive.moment.Variance variance39 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray46 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double47 = variance39.evaluate(doubleArray46);
        variance39.setBiasCorrected(true);
        boolean boolean50 = variance39.isBiasCorrected();
        double[] doubleArray57 = new double[] { (short) 0, 1.0d, 1L, 0.0d, (-1.0d), 10L };
        double double58 = variance39.evaluate(doubleArray57);
        double double60 = variance16.evaluate(doubleArray57, (double) 0.0f);
        variance1.incrementAll(doubleArray57);
        double double62 = variance1.getResult();
        double double63 = variance1.getResult();
        variance1.setBiasCorrected(false);
        double double66 = variance1.getResult();
        variance1.setBiasCorrected(false);
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 2168.222222222222d + "'", double9 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 0L + "'", long12 == 0L);
        org.junit.Assert.assertTrue(Double.isNaN(double14));
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 2168.222222222222d + "'", double24 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[0.0, 1.0, 1.0, 0.0, -1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 16.566666666666663d + "'", double35 == 16.566666666666663d);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 2168.222222222222d + "'", double47 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[0.0, 1.0, 1.0, 0.0, -1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 16.566666666666663d + "'", double58 == 16.566666666666663d);
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 16.566666666666666d + "'", double60 == 16.566666666666666d);
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 16.56666666666667d + "'", double62 == 16.56666666666667d);
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 16.56666666666667d + "'", double63 == 16.56666666666667d);
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 13.805555555555557d + "'", double66 == 13.805555555555557d);
    }

    @Test
    public void test1178() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1178");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance1.clear();
        double double3 = variance1.getResult();
        variance1.increment((double) '4');
        double double6 = variance1.getResult();
        long long7 = variance1.getN();
        double double8 = variance1.getResult();
        variance1.clear();
        variance1.increment(0.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 1L + "'", long7 == 1L);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
    }

    @Test
    public void test1179() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1179");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray8 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double9 = variance1.evaluate(doubleArray8);
        variance1.setBiasCorrected(true);
        long long12 = variance1.getN();
        long long13 = variance1.getN();
        boolean boolean14 = variance1.isBiasCorrected();
        long long15 = variance1.getN();
        boolean boolean16 = variance1.isBiasCorrected();
        double double17 = variance1.getResult();
        variance1.increment((-1.0d));
        boolean boolean20 = variance1.isBiasCorrected();
        org.apache.commons.math.stat.descriptive.moment.Variance variance22 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray29 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double30 = variance22.evaluate(doubleArray29);
        variance22.setBiasCorrected(true);
        boolean boolean33 = variance22.isBiasCorrected();
        double[] doubleArray40 = new double[] { (short) 0, 1.0d, 1L, 0.0d, (-1.0d), 10L };
        double double41 = variance22.evaluate(doubleArray40);
        double double42 = variance22.getResult();
        long long43 = variance22.getN();
        variance22.increment((double) '#');
        variance22.increment(100.0d);
        org.apache.commons.math.stat.descriptive.moment.Variance variance49 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray56 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double57 = variance49.evaluate(doubleArray56);
        variance49.setBiasCorrected(true);
        boolean boolean60 = variance49.isBiasCorrected();
        double[] doubleArray67 = new double[] { (short) 0, 1.0d, 1L, 0.0d, (-1.0d), 10L };
        double double68 = variance49.evaluate(doubleArray67);
        double double70 = variance22.evaluate(doubleArray67, (double) (byte) 100);
        boolean boolean71 = variance22.isBiasCorrected();
        variance22.setBiasCorrected(false);
        boolean boolean74 = variance1.equals((java.lang.Object) false);
        variance1.increment(2350112.0d);
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 2168.222222222222d + "'", double9 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 0L + "'", long12 == 0L);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 0L + "'", long13 == 0L);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 0L + "'", long15 == 0L);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double17));
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 2168.222222222222d + "'", double30 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[0.0, 1.0, 1.0, 0.0, -1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 16.566666666666663d + "'", double41 == 16.566666666666663d);
        org.junit.Assert.assertTrue(Double.isNaN(double42));
        org.junit.Assert.assertTrue("'" + long43 + "' != '" + 0L + "'", long43 == 0L);
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 2168.222222222222d + "'", double57 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[0.0, 1.0, 1.0, 0.0, -1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 16.566666666666663d + "'", double68 == 16.566666666666663d);
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + 16.566666666667153d + "'", double70 == 16.566666666667153d);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
    }

    @Test
    public void test1180() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1180");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(true);
        double double2 = variance1.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray11 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double12 = variance4.evaluate(doubleArray11);
        variance4.setBiasCorrected(true);
        boolean boolean15 = variance4.isBiasCorrected();
        double[] doubleArray22 = new double[] { (short) 0, 1.0d, 1L, 0.0d, (-1.0d), 10L };
        double double23 = variance4.evaluate(doubleArray22);
        boolean boolean25 = variance4.equals((java.lang.Object) 10.0d);
        boolean boolean26 = variance4.isBiasCorrected();
        org.apache.commons.math.stat.descriptive.moment.Variance variance28 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        boolean boolean29 = variance4.equals((java.lang.Object) false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance31 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray38 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double39 = variance31.evaluate(doubleArray38);
        variance31.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance43 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray50 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double51 = variance43.evaluate(doubleArray50);
        variance31.incrementAll(doubleArray50);
        double double54 = variance4.evaluate(doubleArray50, (double) 100.0f);
        long long55 = variance4.getN();
        long long56 = variance4.getN();
        variance4.setBiasCorrected(false);
        boolean boolean59 = variance1.equals((java.lang.Object) variance4);
        long long60 = variance1.getN();
        variance1.increment(3267.0000000018626d);
        variance1.increment(1.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double2));
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 2168.222222222222d + "'", double12 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[0.0, 1.0, 1.0, 0.0, -1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 16.566666666666663d + "'", double23 == 16.566666666666663d);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 2168.222222222222d + "'", double39 == 2168.222222222222d);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 2168.222222222222d + "'", double51 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 2601.8666666666663d + "'", double54 == 2601.8666666666663d);
        org.junit.Assert.assertTrue("'" + long55 + "' != '" + 0L + "'", long55 == 0L);
        org.junit.Assert.assertTrue("'" + long56 + "' != '" + 0L + "'", long56 == 0L);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertTrue("'" + long60 + "' != '" + 0L + "'", long60 == 0L);
    }

    @Test
    public void test1181() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1181");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray8 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double9 = variance1.evaluate(doubleArray8);
        variance1.clear();
        variance1.setBiasCorrected(true);
        double double13 = variance1.getResult();
        variance1.clear();
        double double15 = variance1.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance17 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray24 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double25 = variance17.evaluate(doubleArray24);
        variance17.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance29 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance29.clear();
        double double31 = variance29.getResult();
        double[] doubleArray36 = new double[] { (-1), 2168.222222222222d, 16.566666666418314d, 10.0d };
        variance29.incrementAll(doubleArray36);
        variance17.incrementAll(doubleArray36);
        variance1.incrementAll(doubleArray36);
        long long40 = variance1.getN();
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 2168.222222222222d + "'", double9 == 2168.222222222222d);
        org.junit.Assert.assertTrue(Double.isNaN(double13));
        org.junit.Assert.assertTrue(Double.isNaN(double15));
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 2168.222222222222d + "'", double25 == 2168.222222222222d);
        org.junit.Assert.assertTrue(Double.isNaN(double31));
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[-1.0, 2168.222222222222, 16.566666666418314, 10.0]");
        org.junit.Assert.assertTrue("'" + long40 + "' != '" + 4L + "'", long40 == 4L);
    }

    @Test
    public void test1182() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1182");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray8 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double9 = variance1.evaluate(doubleArray8);
        variance1.setBiasCorrected(true);
        boolean boolean12 = variance1.isBiasCorrected();
        org.apache.commons.math.stat.descriptive.moment.Variance variance14 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray21 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double22 = variance14.evaluate(doubleArray21);
        variance14.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance26 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray33 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double34 = variance26.evaluate(doubleArray33);
        variance26.setBiasCorrected(true);
        boolean boolean37 = variance26.isBiasCorrected();
        double[] doubleArray44 = new double[] { (short) 0, 1.0d, 1L, 0.0d, (-1.0d), 10L };
        double double45 = variance26.evaluate(doubleArray44);
        double double48 = variance14.evaluate(doubleArray44, (int) (byte) 1, (int) (byte) 0);
        double double51 = variance1.evaluate(doubleArray44, (int) (byte) 1, 0);
        org.apache.commons.math.stat.descriptive.moment.Variance variance53 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray60 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double61 = variance53.evaluate(doubleArray60);
        variance53.clear();
        variance53.setBiasCorrected(true);
        boolean boolean65 = variance1.equals((java.lang.Object) variance53);
        variance53.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance68 = new org.apache.commons.math.stat.descriptive.moment.Variance(true);
        double double69 = variance68.getResult();
        double double70 = variance68.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance72 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray79 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double80 = variance72.evaluate(doubleArray79);
        variance72.setBiasCorrected(true);
        long long83 = variance72.getN();
        variance72.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance86 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray93 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double94 = variance86.evaluate(doubleArray93);
        double double95 = variance72.evaluate(doubleArray93);
        variance68.incrementAll(doubleArray93);
        // The following exception was thrown during execution in test generation
        try {
            double double99 = variance53.evaluate(doubleArray93, (int) (short) -1, (int) '#');
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: start position cannot be negative");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 2168.222222222222d + "'", double9 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 2168.222222222222d + "'", double22 == 2168.222222222222d);
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 2168.222222222222d + "'", double34 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[0.0, 1.0, 1.0, 0.0, -1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 16.566666666666663d + "'", double45 == 16.566666666666663d);
        org.junit.Assert.assertTrue(Double.isNaN(double48));
        org.junit.Assert.assertTrue(Double.isNaN(double51));
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 2168.222222222222d + "'", double61 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double69));
        org.junit.Assert.assertTrue(Double.isNaN(double70));
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray79), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double80 + "' != '" + 2168.222222222222d + "'", double80 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + long83 + "' != '" + 0L + "'", long83 == 0L);
        org.junit.Assert.assertNotNull(doubleArray93);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray93), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double94 + "' != '" + 2168.222222222222d + "'", double94 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + double95 + "' != '" + 2601.866666666667d + "'", double95 == 2601.866666666667d);
    }

    @Test
    public void test1183() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1183");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray8 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double9 = variance1.evaluate(doubleArray8);
        variance1.setBiasCorrected(true);
        boolean boolean12 = variance1.isBiasCorrected();
        double[] doubleArray19 = new double[] { (short) 0, 1.0d, 1L, 0.0d, (-1.0d), 10L };
        double double20 = variance1.evaluate(doubleArray19);
        org.apache.commons.math.stat.descriptive.moment.Variance variance22 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray29 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double30 = variance22.evaluate(doubleArray29);
        variance22.setBiasCorrected(true);
        boolean boolean33 = variance22.isBiasCorrected();
        double[] doubleArray40 = new double[] { (short) 0, 1.0d, 1L, 0.0d, (-1.0d), 10L };
        double double41 = variance22.evaluate(doubleArray40);
        double double44 = variance1.evaluate(doubleArray40, (int) (byte) 1, 0);
        double double45 = variance1.getResult();
        variance1.setBiasCorrected(true);
        boolean boolean48 = variance1.isBiasCorrected();
        double[] doubleArray49 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double50 = variance1.evaluate(doubleArray49);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: input values array is null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 2168.222222222222d + "'", double9 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[0.0, 1.0, 1.0, 0.0, -1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 16.566666666666663d + "'", double20 == 16.566666666666663d);
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 2168.222222222222d + "'", double30 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[0.0, 1.0, 1.0, 0.0, -1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 16.566666666666663d + "'", double41 == 16.566666666666663d);
        org.junit.Assert.assertTrue(Double.isNaN(double44));
        org.junit.Assert.assertTrue(Double.isNaN(double45));
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
    }

    @Test
    public void test1184() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1184");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray8 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double9 = variance1.evaluate(doubleArray8);
        variance1.setBiasCorrected(true);
        variance1.increment((double) (byte) 0);
        variance1.clear();
        boolean boolean15 = variance1.isBiasCorrected();
        double double16 = variance1.getResult();
        double double17 = variance1.getResult();
        long long18 = variance1.getN();
        variance1.setBiasCorrected(true);
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 2168.222222222222d + "'", double9 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double16));
        org.junit.Assert.assertTrue(Double.isNaN(double17));
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 0L + "'", long18 == 0L);
    }

    @Test
    public void test1185() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1185");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray8 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double9 = variance1.evaluate(doubleArray8);
        double[] doubleArray13 = new double[] { (byte) 1, (byte) 100, 1L };
        double double14 = variance1.evaluate(doubleArray13);
        org.apache.commons.math.stat.descriptive.moment.Variance variance16 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray23 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double24 = variance16.evaluate(doubleArray23);
        variance16.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance28 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray35 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double36 = variance28.evaluate(doubleArray35);
        variance16.incrementAll(doubleArray35);
        variance1.incrementAll(doubleArray35);
        org.apache.commons.math.stat.descriptive.moment.Variance variance39 = new org.apache.commons.math.stat.descriptive.moment.Variance();
        long long40 = variance39.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance42 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray49 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double50 = variance42.evaluate(doubleArray49);
        variance42.setBiasCorrected(true);
        boolean boolean53 = variance42.isBiasCorrected();
        double[] doubleArray60 = new double[] { (short) 0, 1.0d, 1L, 0.0d, (-1.0d), 10L };
        double double61 = variance42.evaluate(doubleArray60);
        boolean boolean63 = variance42.equals((java.lang.Object) 10.0d);
        boolean boolean64 = variance42.isBiasCorrected();
        org.apache.commons.math.stat.descriptive.moment.Variance variance66 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        boolean boolean67 = variance42.equals((java.lang.Object) false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance69 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray76 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double77 = variance69.evaluate(doubleArray76);
        variance69.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance81 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray88 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double89 = variance81.evaluate(doubleArray88);
        variance69.incrementAll(doubleArray88);
        double double92 = variance42.evaluate(doubleArray88, (double) 100.0f);
        variance39.incrementAll(doubleArray88, (int) (short) 1, (int) (byte) 0);
        variance1.incrementAll(doubleArray88);
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 2168.222222222222d + "'", double9 == 2168.222222222222d);
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[1.0, 100.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 2178.0d + "'", double14 == 2178.0d);
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 2168.222222222222d + "'", double24 == 2168.222222222222d);
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 2168.222222222222d + "'", double36 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + long40 + "' != '" + 0L + "'", long40 == 0L);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 2168.222222222222d + "'", double50 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[0.0, 1.0, 1.0, 0.0, -1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 16.566666666666663d + "'", double61 == 16.566666666666663d);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double77 + "' != '" + 2168.222222222222d + "'", double77 == 2168.222222222222d);
        org.junit.Assert.assertNotNull(doubleArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray88), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double89 + "' != '" + 2168.222222222222d + "'", double89 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + double92 + "' != '" + 2601.8666666666663d + "'", double92 == 2601.8666666666663d);
    }

    @Test
    public void test1186() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1186");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray8 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double9 = variance1.evaluate(doubleArray8);
        variance1.setBiasCorrected(true);
        boolean boolean12 = variance1.isBiasCorrected();
        double[] doubleArray19 = new double[] { (short) 0, 1.0d, 1L, 0.0d, (-1.0d), 10L };
        double double20 = variance1.evaluate(doubleArray19);
        double double21 = variance1.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance23 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance23.clear();
        double double25 = variance23.getResult();
        double[] doubleArray30 = new double[] { (-1), 2168.222222222222d, 16.566666666418314d, 10.0d };
        variance23.incrementAll(doubleArray30);
        double double32 = variance1.evaluate(doubleArray30);
        double double33 = variance1.getResult();
        double double34 = variance1.getResult();
        variance1.setBiasCorrected(false);
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 2168.222222222222d + "'", double9 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[0.0, 1.0, 1.0, 0.0, -1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 16.566666666666663d + "'", double20 == 16.566666666666663d);
        org.junit.Assert.assertTrue(Double.isNaN(double21));
        org.junit.Assert.assertTrue(Double.isNaN(double25));
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[-1.0, 2168.222222222222, 16.566666666418314, 10.0]");
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 1166128.5457099646d + "'", double32 == 1166128.5457099646d);
        org.junit.Assert.assertTrue(Double.isNaN(double33));
        org.junit.Assert.assertTrue(Double.isNaN(double34));
    }

    @Test
    public void test1187() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1187");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance1.clear();
        boolean boolean3 = variance1.isBiasCorrected();
        boolean boolean5 = variance1.equals((java.lang.Object) 1166128.5457099646d);
        boolean boolean6 = variance1.isBiasCorrected();
        org.apache.commons.math.stat.descriptive.moment.Variance variance8 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance8.setBiasCorrected(false);
        long long11 = variance8.getN();
        variance8.increment((double) 0.0f);
        org.apache.commons.math.stat.descriptive.moment.Variance variance15 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray22 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double23 = variance15.evaluate(doubleArray22);
        variance15.setBiasCorrected(true);
        boolean boolean26 = variance15.isBiasCorrected();
        double[] doubleArray33 = new double[] { (short) 0, 1.0d, 1L, 0.0d, (-1.0d), 10L };
        double double34 = variance15.evaluate(doubleArray33);
        boolean boolean36 = variance15.equals((java.lang.Object) 10.0d);
        org.apache.commons.math.stat.descriptive.moment.Variance variance38 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray45 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double46 = variance38.evaluate(doubleArray45);
        variance38.setBiasCorrected(true);
        boolean boolean49 = variance38.isBiasCorrected();
        double[] doubleArray56 = new double[] { (short) 0, 1.0d, 1L, 0.0d, (-1.0d), 10L };
        double double57 = variance38.evaluate(doubleArray56);
        double double59 = variance15.evaluate(doubleArray56, (double) 0.0f);
        boolean boolean60 = variance8.equals((java.lang.Object) double59);
        variance8.increment(2168.222222222222d);
        boolean boolean63 = variance1.equals((java.lang.Object) 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 0L + "'", long11 == 0L);
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 2168.222222222222d + "'", double23 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[0.0, 1.0, 1.0, 0.0, -1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 16.566666666666663d + "'", double34 == 16.566666666666663d);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 2168.222222222222d + "'", double46 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[0.0, 1.0, 1.0, 0.0, -1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 16.566666666666663d + "'", double57 == 16.566666666666663d);
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 16.566666666666666d + "'", double59 == 16.566666666666666d);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
    }

    @Test
    public void test1188() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1188");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray8 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double9 = variance1.evaluate(doubleArray8);
        variance1.setBiasCorrected(true);
        boolean boolean12 = variance1.isBiasCorrected();
        double[] doubleArray19 = new double[] { (short) 0, 1.0d, 1L, 0.0d, (-1.0d), 10L };
        double double20 = variance1.evaluate(doubleArray19);
        boolean boolean22 = variance1.equals((java.lang.Object) 10.0d);
        boolean boolean23 = variance1.isBiasCorrected();
        org.apache.commons.math.stat.descriptive.moment.Variance variance25 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        boolean boolean26 = variance1.equals((java.lang.Object) false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance28 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray35 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double36 = variance28.evaluate(doubleArray35);
        variance28.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance40 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray47 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double48 = variance40.evaluate(doubleArray47);
        variance28.incrementAll(doubleArray47);
        double double51 = variance1.evaluate(doubleArray47, (double) 100.0f);
        long long52 = variance1.getN();
        long long53 = variance1.getN();
        variance1.setBiasCorrected(true);
        java.lang.Class<?> wildcardClass56 = variance1.getClass();
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 2168.222222222222d + "'", double9 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[0.0, 1.0, 1.0, 0.0, -1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 16.566666666666663d + "'", double20 == 16.566666666666663d);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 2168.222222222222d + "'", double36 == 2168.222222222222d);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 2168.222222222222d + "'", double48 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 2601.8666666666663d + "'", double51 == 2601.8666666666663d);
        org.junit.Assert.assertTrue("'" + long52 + "' != '" + 0L + "'", long52 == 0L);
        org.junit.Assert.assertTrue("'" + long53 + "' != '" + 0L + "'", long53 == 0L);
        org.junit.Assert.assertNotNull(wildcardClass56);
    }

    @Test
    public void test1189() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1189");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance1.clear();
        double double3 = variance1.getResult();
        double[] doubleArray8 = new double[] { (-1), 2168.222222222222d, 16.566666666418314d, 10.0d };
        variance1.incrementAll(doubleArray8);
        org.apache.commons.math.stat.descriptive.moment.Variance variance11 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray18 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double19 = variance11.evaluate(doubleArray18);
        variance11.setBiasCorrected(true);
        boolean boolean22 = variance11.isBiasCorrected();
        double[] doubleArray29 = new double[] { (short) 0, 1.0d, 1L, 0.0d, (-1.0d), 10L };
        double double30 = variance11.evaluate(doubleArray29);
        double double31 = variance11.getResult();
        variance11.setBiasCorrected(true);
        boolean boolean34 = variance11.isBiasCorrected();
        variance11.setBiasCorrected(false);
        variance11.increment(2601.866666666667d);
        org.apache.commons.math.stat.descriptive.moment.Variance variance40 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray47 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double48 = variance40.evaluate(doubleArray47);
        variance40.clear();
        variance40.setBiasCorrected(true);
        double double52 = variance40.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance54 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray61 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double62 = variance54.evaluate(doubleArray61);
        double double63 = variance40.evaluate(doubleArray61);
        double double64 = variance11.evaluate(doubleArray61);
        double double65 = variance1.evaluate(doubleArray61);
        long long66 = variance1.getN();
        double double67 = variance1.getResult();
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-1.0, 2168.222222222222, 16.566666666418314, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 2168.222222222222d + "'", double19 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[0.0, 1.0, 1.0, 0.0, -1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 16.566666666666663d + "'", double30 == 16.566666666666663d);
        org.junit.Assert.assertTrue(Double.isNaN(double31));
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 2168.222222222222d + "'", double48 == 2168.222222222222d);
        org.junit.Assert.assertTrue(Double.isNaN(double52));
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 2168.222222222222d + "'", double62 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 2601.866666666667d + "'", double63 == 2601.866666666667d);
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 2168.222222222222d + "'", double64 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 2168.222222222222d + "'", double65 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + long66 + "' != '" + 0L + "'", long66 == 0L);
        org.junit.Assert.assertTrue(Double.isNaN(double67));
    }

    @Test
    public void test1190() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1190");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray8 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double9 = variance1.evaluate(doubleArray8);
        variance1.setBiasCorrected(true);
        long long12 = variance1.getN();
        long long13 = variance1.getN();
        boolean boolean14 = variance1.isBiasCorrected();
        org.apache.commons.math.stat.descriptive.moment.Variance variance16 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray23 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double24 = variance16.evaluate(doubleArray23);
        variance16.setBiasCorrected(true);
        boolean boolean27 = variance16.isBiasCorrected();
        double[] doubleArray34 = new double[] { (short) 0, 1.0d, 1L, 0.0d, (-1.0d), 10L };
        double double35 = variance16.evaluate(doubleArray34);
        boolean boolean37 = variance16.equals((java.lang.Object) 10.0d);
        org.apache.commons.math.stat.descriptive.moment.Variance variance39 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray46 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double47 = variance39.evaluate(doubleArray46);
        variance39.setBiasCorrected(true);
        boolean boolean50 = variance39.isBiasCorrected();
        double[] doubleArray57 = new double[] { (short) 0, 1.0d, 1L, 0.0d, (-1.0d), 10L };
        double double58 = variance39.evaluate(doubleArray57);
        double double60 = variance16.evaluate(doubleArray57, (double) 0.0f);
        variance1.incrementAll(doubleArray57);
        variance1.increment((double) 0.0f);
        variance1.increment(1166128.5457099646d);
        variance1.clear();
        variance1.increment((double) 2L);
        boolean boolean69 = variance1.isBiasCorrected();
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 2168.222222222222d + "'", double9 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 0L + "'", long12 == 0L);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 0L + "'", long13 == 0L);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 2168.222222222222d + "'", double24 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[0.0, 1.0, 1.0, 0.0, -1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 16.566666666666663d + "'", double35 == 16.566666666666663d);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 2168.222222222222d + "'", double47 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[0.0, 1.0, 1.0, 0.0, -1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 16.566666666666663d + "'", double58 == 16.566666666666663d);
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 16.566666666666666d + "'", double60 == 16.566666666666666d);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
    }

    @Test
    public void test1191() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1191");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray8 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double9 = variance1.evaluate(doubleArray8);
        variance1.setBiasCorrected(true);
        boolean boolean12 = variance1.isBiasCorrected();
        double[] doubleArray19 = new double[] { (short) 0, 1.0d, 1L, 0.0d, (-1.0d), 10L };
        double double20 = variance1.evaluate(doubleArray19);
        boolean boolean22 = variance1.equals((java.lang.Object) 10.0d);
        boolean boolean23 = variance1.isBiasCorrected();
        org.apache.commons.math.stat.descriptive.moment.Variance variance25 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        boolean boolean26 = variance1.equals((java.lang.Object) false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance28 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray35 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double36 = variance28.evaluate(doubleArray35);
        variance28.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance40 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray47 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double48 = variance40.evaluate(doubleArray47);
        variance28.incrementAll(doubleArray47);
        double double51 = variance1.evaluate(doubleArray47, (double) 100.0f);
        variance1.clear();
        boolean boolean53 = variance1.isBiasCorrected();
        org.apache.commons.math.stat.descriptive.moment.Variance variance55 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray62 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double63 = variance55.evaluate(doubleArray62);
        variance55.setBiasCorrected(true);
        long long66 = variance55.getN();
        variance55.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance69 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray76 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double77 = variance69.evaluate(doubleArray76);
        double double78 = variance55.evaluate(doubleArray76);
        double double79 = variance1.evaluate(doubleArray76);
        variance1.increment(13.805555555555557d);
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 2168.222222222222d + "'", double9 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[0.0, 1.0, 1.0, 0.0, -1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 16.566666666666663d + "'", double20 == 16.566666666666663d);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 2168.222222222222d + "'", double36 == 2168.222222222222d);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 2168.222222222222d + "'", double48 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 2601.8666666666663d + "'", double51 == 2601.8666666666663d);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 2168.222222222222d + "'", double63 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + long66 + "' != '" + 0L + "'", long66 == 0L);
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double77 + "' != '" + 2168.222222222222d + "'", double77 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + double78 + "' != '" + 2601.866666666667d + "'", double78 == 2601.866666666667d);
        org.junit.Assert.assertTrue("'" + double79 + "' != '" + 2601.866666666667d + "'", double79 == 2601.866666666667d);
    }

    @Test
    public void test1192() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1192");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment1 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance2 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment1);
        variance2.clear();
        variance2.setBiasCorrected(false);
        boolean boolean6 = variance2.isBiasCorrected();
        variance2.increment(13.805555555555552d);
        boolean boolean9 = variance2.isBiasCorrected();
        variance2.setBiasCorrected(true);
        variance2.increment(2168.222222223878d);
        org.apache.commons.math.stat.descriptive.moment.Variance variance15 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray22 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double23 = variance15.evaluate(doubleArray22);
        variance15.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance27 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray34 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double35 = variance27.evaluate(doubleArray34);
        variance15.incrementAll(doubleArray34);
        org.apache.commons.math.stat.descriptive.moment.Variance variance38 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray45 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double46 = variance38.evaluate(doubleArray45);
        variance38.setBiasCorrected(true);
        long long49 = variance38.getN();
        variance38.clear();
        double double51 = variance38.getResult();
        variance38.setBiasCorrected(true);
        boolean boolean54 = variance15.equals((java.lang.Object) variance38);
        org.apache.commons.math.stat.descriptive.moment.Variance variance56 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray63 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double64 = variance56.evaluate(doubleArray63);
        variance56.setBiasCorrected(true);
        long long67 = variance56.getN();
        long long68 = variance56.getN();
        boolean boolean69 = variance56.isBiasCorrected();
        org.apache.commons.math.stat.descriptive.moment.Variance variance71 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray78 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double79 = variance71.evaluate(doubleArray78);
        double[] doubleArray83 = new double[] { (byte) 1, (byte) 100, 1L };
        double double84 = variance71.evaluate(doubleArray83);
        variance56.incrementAll(doubleArray83, (int) (short) 1, 0);
        double double88 = variance15.evaluate(doubleArray83);
        // The following exception was thrown during execution in test generation
        try {
            variance2.incrementAll(doubleArray83, (int) (byte) 100, 100);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: begin + length > values.length");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 2168.222222222222d + "'", double23 == 2168.222222222222d);
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 2168.222222222222d + "'", double35 == 2168.222222222222d);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 2168.222222222222d + "'", double46 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + long49 + "' != '" + 0L + "'", long49 == 0L);
        org.junit.Assert.assertTrue(Double.isNaN(double51));
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 2168.222222222222d + "'", double64 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + long67 + "' != '" + 0L + "'", long67 == 0L);
        org.junit.Assert.assertTrue("'" + long68 + "' != '" + 0L + "'", long68 == 0L);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray78), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double79 + "' != '" + 2168.222222222222d + "'", double79 == 2168.222222222222d);
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray83), "[1.0, 100.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double84 + "' != '" + 2178.0d + "'", double84 == 2178.0d);
        org.junit.Assert.assertTrue("'" + double88 + "' != '" + 3267.0d + "'", double88 == 3267.0d);
    }

    @Test
    public void test1193() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1193");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(true);
        double double2 = variance1.getResult();
        double double3 = variance1.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance5 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray12 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double13 = variance5.evaluate(doubleArray12);
        variance5.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance17 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray24 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double25 = variance17.evaluate(doubleArray24);
        variance5.incrementAll(doubleArray24);
        variance5.clear();
        variance5.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance31 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray38 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double39 = variance31.evaluate(doubleArray38);
        variance31.setBiasCorrected(true);
        long long42 = variance31.getN();
        long long43 = variance31.getN();
        boolean boolean45 = variance31.equals((java.lang.Object) 16.566666666666663d);
        boolean boolean47 = variance31.equals((java.lang.Object) (short) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance49 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray56 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double57 = variance49.evaluate(doubleArray56);
        variance49.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance61 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray68 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double69 = variance61.evaluate(doubleArray68);
        variance49.incrementAll(doubleArray68);
        double double71 = variance31.evaluate(doubleArray68);
        double double73 = variance5.evaluate(doubleArray68, (double) (byte) 100);
        double double75 = variance1.evaluate(doubleArray68, (double) (-1));
        boolean boolean76 = variance1.isBiasCorrected();
        variance1.clear();
        boolean boolean78 = variance1.isBiasCorrected();
        variance1.setBiasCorrected(false);
        org.junit.Assert.assertTrue(Double.isNaN(double2));
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 2168.222222222222d + "'", double13 == 2168.222222222222d);
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 2168.222222222222d + "'", double25 == 2168.222222222222d);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 2168.222222222222d + "'", double39 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + long42 + "' != '" + 0L + "'", long42 == 0L);
        org.junit.Assert.assertTrue("'" + long43 + "' != '" + 0L + "'", long43 == 0L);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 2168.222222222222d + "'", double57 == 2168.222222222222d);
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 2168.222222222222d + "'", double69 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + 2601.866666666667d + "'", double71 == 2601.866666666667d);
        org.junit.Assert.assertTrue("'" + double73 + "' != '" + 2168.222222222222d + "'", double73 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + double75 + "' != '" + 2601.8666666666663d + "'", double75 == 2601.8666666666663d);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
    }

    @Test
    public void test1194() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1194");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(true);
        double double2 = variance1.getResult();
        double double3 = variance1.getResult();
        variance1.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance6 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray13 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double14 = variance6.evaluate(doubleArray13);
        variance6.setBiasCorrected(true);
        long long17 = variance6.getN();
        long long18 = variance6.getN();
        boolean boolean19 = variance6.isBiasCorrected();
        org.apache.commons.math.stat.descriptive.moment.Variance variance21 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray28 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double29 = variance21.evaluate(doubleArray28);
        double[] doubleArray33 = new double[] { (byte) 1, (byte) 100, 1L };
        double double34 = variance21.evaluate(doubleArray33);
        variance6.incrementAll(doubleArray33, (int) (short) 1, 0);
        variance1.incrementAll(doubleArray33);
        long long39 = variance1.getN();
        variance1.setBiasCorrected(false);
        variance1.clear();
        long long43 = variance1.getN();
        org.junit.Assert.assertTrue(Double.isNaN(double2));
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 2168.222222222222d + "'", double14 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + 0L + "'", long17 == 0L);
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 0L + "'", long18 == 0L);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 2168.222222222222d + "'", double29 == 2168.222222222222d);
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[1.0, 100.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 2178.0d + "'", double34 == 2178.0d);
        org.junit.Assert.assertTrue("'" + long39 + "' != '" + 3L + "'", long39 == 3L);
        org.junit.Assert.assertTrue("'" + long43 + "' != '" + 0L + "'", long43 == 0L);
    }

    @Test
    public void test1195() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1195");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray8 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double9 = variance1.evaluate(doubleArray8);
        variance1.setBiasCorrected(true);
        long long12 = variance1.getN();
        long long13 = variance1.getN();
        boolean boolean14 = variance1.isBiasCorrected();
        long long15 = variance1.getN();
        boolean boolean16 = variance1.isBiasCorrected();
        double double17 = variance1.getResult();
        variance1.increment((-1.0d));
        variance1.setBiasCorrected(true);
        variance1.increment(2601.86640625d);
        variance1.setBiasCorrected(true);
        long long26 = variance1.getN();
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 2168.222222222222d + "'", double9 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 0L + "'", long12 == 0L);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 0L + "'", long13 == 0L);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 0L + "'", long15 == 0L);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double17));
        org.junit.Assert.assertTrue("'" + long26 + "' != '" + 2L + "'", long26 == 2L);
    }

    @Test
    public void test1196() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1196");
        org.apache.commons.math.stat.descriptive.moment.Variance variance0 = new org.apache.commons.math.stat.descriptive.moment.Variance();
        variance0.increment(1694.7000000000003d);
        double double3 = variance0.getResult();
        boolean boolean4 = variance0.isBiasCorrected();
        boolean boolean5 = variance0.isBiasCorrected();
        variance0.setBiasCorrected(true);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 0.0d + "'", double3 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
    }

    @Test
    public void test1197() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1197");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray8 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double9 = variance1.evaluate(doubleArray8);
        variance1.clear();
        java.lang.Object obj11 = null;
        boolean boolean12 = variance1.equals(obj11);
        org.apache.commons.math.stat.descriptive.moment.Variance variance14 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray21 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double22 = variance14.evaluate(doubleArray21);
        variance14.setBiasCorrected(true);
        boolean boolean25 = variance14.isBiasCorrected();
        double[] doubleArray32 = new double[] { (short) 0, 1.0d, 1L, 0.0d, (-1.0d), 10L };
        double double33 = variance14.evaluate(doubleArray32);
        double double34 = variance14.getResult();
        long long35 = variance14.getN();
        boolean boolean36 = variance1.equals((java.lang.Object) long35);
        variance1.increment(1.0d);
        variance1.increment(0.0d);
        org.apache.commons.math.stat.descriptive.moment.Variance variance41 = new org.apache.commons.math.stat.descriptive.moment.Variance();
        long long42 = variance41.getN();
        variance41.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance46 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray53 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double54 = variance46.evaluate(doubleArray53);
        variance46.clear();
        variance46.setBiasCorrected(false);
        variance46.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance60 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray67 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double68 = variance60.evaluate(doubleArray67);
        variance60.setBiasCorrected(true);
        variance60.increment((double) (byte) 0);
        double[] doubleArray75 = new double[] { 'a', 100L };
        double double77 = variance60.evaluate(doubleArray75, 0.0d);
        double double78 = variance46.evaluate(doubleArray75);
        variance41.incrementAll(doubleArray75, 1, (int) (byte) 1);
        boolean boolean82 = variance1.equals((java.lang.Object) variance41);
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 2168.222222222222d + "'", double9 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 2168.222222222222d + "'", double22 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[0.0, 1.0, 1.0, 0.0, -1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 16.566666666666663d + "'", double33 == 16.566666666666663d);
        org.junit.Assert.assertTrue(Double.isNaN(double34));
        org.junit.Assert.assertTrue("'" + long35 + "' != '" + 0L + "'", long35 == 0L);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + long42 + "' != '" + 0L + "'", long42 == 0L);
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray53), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 2168.222222222222d + "'", double54 == 2168.222222222222d);
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 2168.222222222222d + "'", double68 == 2168.222222222222d);
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray75), "[97.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double77 + "' != '" + 4.5d + "'", double77 == 4.5d);
        org.junit.Assert.assertTrue("'" + double78 + "' != '" + 2.25d + "'", double78 == 2.25d);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
    }

    @Test
    public void test1198() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1198");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance3 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray10 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double11 = variance3.evaluate(doubleArray10);
        variance3.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance15 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance15.clear();
        double double17 = variance15.getResult();
        double[] doubleArray22 = new double[] { (-1), 2168.222222222222d, 16.566666666418314d, 10.0d };
        variance15.incrementAll(doubleArray22);
        variance3.incrementAll(doubleArray22);
        double double25 = variance1.evaluate(doubleArray22);
        boolean boolean26 = variance1.isBiasCorrected();
        variance1.setBiasCorrected(true);
        double double29 = variance1.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance30 = new org.apache.commons.math.stat.descriptive.moment.Variance();
        double double31 = variance30.getResult();
        boolean boolean32 = variance30.isBiasCorrected();
        org.apache.commons.math.stat.descriptive.moment.Variance variance34 = new org.apache.commons.math.stat.descriptive.moment.Variance(true);
        double double35 = variance34.getResult();
        double double36 = variance34.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance38 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray45 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double46 = variance38.evaluate(doubleArray45);
        variance38.clear();
        variance38.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance51 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance51.clear();
        double double53 = variance51.getResult();
        double[] doubleArray58 = new double[] { (-1), 2168.222222222222d, 16.566666666418314d, 10.0d };
        variance51.incrementAll(doubleArray58);
        boolean boolean60 = variance38.equals((java.lang.Object) doubleArray58);
        double double62 = variance34.evaluate(doubleArray58, (double) (-1.0f));
        double double64 = variance30.evaluate(doubleArray58, (double) (-1L));
        variance30.increment(2.25d);
        org.apache.commons.math.stat.descriptive.moment.Variance variance68 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray75 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double76 = variance68.evaluate(doubleArray75);
        variance68.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance80 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray87 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double88 = variance80.evaluate(doubleArray87);
        variance68.incrementAll(doubleArray87);
        variance30.incrementAll(doubleArray87, (int) (byte) 1, 1);
        double double94 = variance1.evaluate(doubleArray87, 2.25d);
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 2168.222222222222d + "'", double11 == 2168.222222222222d);
        org.junit.Assert.assertTrue(Double.isNaN(double17));
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[-1.0, 2168.222222222222, 16.566666666418314, 10.0]");
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 874596.4092824734d + "'", double25 == 874596.4092824734d);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double29));
        org.junit.Assert.assertTrue(Double.isNaN(double31));
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double35));
        org.junit.Assert.assertTrue(Double.isNaN(double36));
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 2168.222222222222d + "'", double46 == 2168.222222222222d);
        org.junit.Assert.assertTrue(Double.isNaN(double53));
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[-1.0, 2168.222222222222, 16.566666666418314, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 1166128.5457099646d + "'", double62 == 1166128.5457099646d);
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 1166128.5457099646d + "'", double64 == 1166128.5457099646d);
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray75), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double76 + "' != '" + 2168.222222222222d + "'", double76 == 2168.222222222222d);
        org.junit.Assert.assertNotNull(doubleArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray87), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double88 + "' != '" + 2168.222222222222d + "'", double88 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + double94 + "' != '" + 2601.8666666666663d + "'", double94 == 2601.8666666666663d);
    }

    @Test
    public void test1199() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1199");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray8 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double9 = variance1.evaluate(doubleArray8);
        variance1.setBiasCorrected(true);
        boolean boolean12 = variance1.isBiasCorrected();
        double[] doubleArray19 = new double[] { (short) 0, 1.0d, 1L, 0.0d, (-1.0d), 10L };
        double double20 = variance1.evaluate(doubleArray19);
        double double21 = variance1.getResult();
        variance1.setBiasCorrected(true);
        double double24 = variance1.getResult();
        variance1.increment((double) 3L);
        double double27 = variance1.getResult();
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 2168.222222222222d + "'", double9 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[0.0, 1.0, 1.0, 0.0, -1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 16.566666666666663d + "'", double20 == 16.566666666666663d);
        org.junit.Assert.assertTrue(Double.isNaN(double21));
        org.junit.Assert.assertTrue(Double.isNaN(double24));
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 0.0d + "'", double27 == 0.0d);
    }

    @Test
    public void test1200() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1200");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment1 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance2 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment1);
        variance2.increment(0.0d);
        variance2.clear();
        variance2.increment((double) (byte) 0);
        variance2.clear();
    }

    @Test
    public void test1201() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1201");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray8 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double9 = variance1.evaluate(doubleArray8);
        variance1.setBiasCorrected(true);
        variance1.increment((double) (byte) 0);
        double[] doubleArray16 = new double[] { 'a', 100L };
        double double18 = variance1.evaluate(doubleArray16, 0.0d);
        double double19 = variance1.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance21 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance21.clear();
        double double23 = variance21.getResult();
        double[] doubleArray28 = new double[] { (-1), 2168.222222222222d, 16.566666666418314d, 10.0d };
        variance21.incrementAll(doubleArray28);
        variance1.incrementAll(doubleArray28, (int) (short) 1, 1);
        org.apache.commons.math.stat.descriptive.moment.Variance variance34 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray41 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double42 = variance34.evaluate(doubleArray41);
        variance34.setBiasCorrected(true);
        long long45 = variance34.getN();
        long long46 = variance34.getN();
        double double47 = variance34.getResult();
        variance34.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance50 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray57 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double58 = variance50.evaluate(doubleArray57);
        double[] doubleArray62 = new double[] { (byte) 1, (byte) 100, 1L };
        double double63 = variance50.evaluate(doubleArray62);
        org.apache.commons.math.stat.descriptive.moment.Variance variance65 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray72 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double73 = variance65.evaluate(doubleArray72);
        variance65.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance77 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray84 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double85 = variance77.evaluate(doubleArray84);
        variance65.incrementAll(doubleArray84);
        variance50.incrementAll(doubleArray84);
        double double88 = variance34.evaluate(doubleArray84);
        variance1.incrementAll(doubleArray84);
        boolean boolean90 = variance1.isBiasCorrected();
        java.lang.Class<?> wildcardClass91 = variance1.getClass();
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 2168.222222222222d + "'", double9 == 2168.222222222222d);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[97.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 4.5d + "'", double18 == 4.5d);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.0d + "'", double19 == 0.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[-1.0, 2168.222222222222, 16.566666666418314, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 2168.222222222222d + "'", double42 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + long45 + "' != '" + 0L + "'", long45 == 0L);
        org.junit.Assert.assertTrue("'" + long46 + "' != '" + 0L + "'", long46 == 0L);
        org.junit.Assert.assertTrue(Double.isNaN(double47));
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 2168.222222222222d + "'", double58 == 2168.222222222222d);
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[1.0, 100.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 2178.0d + "'", double63 == 2178.0d);
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray72), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double73 + "' != '" + 2168.222222222222d + "'", double73 == 2168.222222222222d);
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray84), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double85 + "' != '" + 2168.222222222222d + "'", double85 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + double88 + "' != '" + 2601.866666666667d + "'", double88 == 2601.866666666667d);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + true + "'", boolean90 == true);
        org.junit.Assert.assertNotNull(wildcardClass91);
    }

    @Test
    public void test1202() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1202");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance3 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray10 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double11 = variance3.evaluate(doubleArray10);
        variance3.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance15 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray22 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double23 = variance15.evaluate(doubleArray22);
        variance15.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance27 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray34 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double35 = variance27.evaluate(doubleArray34);
        variance27.setBiasCorrected(true);
        boolean boolean38 = variance27.isBiasCorrected();
        double[] doubleArray45 = new double[] { (short) 0, 1.0d, 1L, 0.0d, (-1.0d), 10L };
        double double46 = variance27.evaluate(doubleArray45);
        double double49 = variance15.evaluate(doubleArray45, (int) (byte) 1, (int) (byte) 0);
        variance3.incrementAll(doubleArray45, (int) (byte) 1, 1);
        double double53 = variance1.evaluate(doubleArray45);
        long long54 = variance1.getN();
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 2168.222222222222d + "'", double11 == 2168.222222222222d);
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 2168.222222222222d + "'", double23 == 2168.222222222222d);
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 2168.222222222222d + "'", double35 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[0.0, 1.0, 1.0, 0.0, -1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 16.566666666666663d + "'", double46 == 16.566666666666663d);
        org.junit.Assert.assertTrue(Double.isNaN(double49));
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 13.805555555555552d + "'", double53 == 13.805555555555552d);
        org.junit.Assert.assertTrue("'" + long54 + "' != '" + 0L + "'", long54 == 0L);
    }

    @Test
    public void test1203() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1203");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray8 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double9 = variance1.evaluate(doubleArray8);
        variance1.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance13 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray20 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double21 = variance13.evaluate(doubleArray20);
        variance13.setBiasCorrected(true);
        boolean boolean24 = variance13.isBiasCorrected();
        double[] doubleArray31 = new double[] { (short) 0, 1.0d, 1L, 0.0d, (-1.0d), 10L };
        double double32 = variance13.evaluate(doubleArray31);
        double double35 = variance1.evaluate(doubleArray31, (int) (byte) 1, (int) (byte) 0);
        variance1.setBiasCorrected(true);
        variance1.setBiasCorrected(false);
        variance1.clear();
        boolean boolean41 = variance1.isBiasCorrected();
        variance1.clear();
        variance1.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance46 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray53 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double54 = variance46.evaluate(doubleArray53);
        variance46.setBiasCorrected(true);
        boolean boolean57 = variance46.isBiasCorrected();
        double[] doubleArray64 = new double[] { (short) 0, 1.0d, 1L, 0.0d, (-1.0d), 10L };
        double double65 = variance46.evaluate(doubleArray64);
        double double66 = variance46.getResult();
        long long67 = variance46.getN();
        long long68 = variance46.getN();
        double double69 = variance46.getResult();
        java.lang.Class<?> wildcardClass70 = variance46.getClass();
        boolean boolean71 = variance1.equals((java.lang.Object) variance46);
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 2168.222222222222d + "'", double9 == 2168.222222222222d);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 2168.222222222222d + "'", double21 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[0.0, 1.0, 1.0, 0.0, -1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 16.566666666666663d + "'", double32 == 16.566666666666663d);
        org.junit.Assert.assertTrue(Double.isNaN(double35));
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray53), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 2168.222222222222d + "'", double54 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[0.0, 1.0, 1.0, 0.0, -1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 16.566666666666663d + "'", double65 == 16.566666666666663d);
        org.junit.Assert.assertTrue(Double.isNaN(double66));
        org.junit.Assert.assertTrue("'" + long67 + "' != '" + 0L + "'", long67 == 0L);
        org.junit.Assert.assertTrue("'" + long68 + "' != '" + 0L + "'", long68 == 0L);
        org.junit.Assert.assertTrue(Double.isNaN(double69));
        org.junit.Assert.assertNotNull(wildcardClass70);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
    }

    @Test
    public void test1204() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1204");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray8 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double9 = variance1.evaluate(doubleArray8);
        variance1.clear();
        variance1.setBiasCorrected(false);
        variance1.clear();
        boolean boolean15 = variance1.equals((java.lang.Object) 10.0d);
        org.apache.commons.math.stat.descriptive.moment.Variance variance17 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray24 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double25 = variance17.evaluate(doubleArray24);
        variance17.setBiasCorrected(true);
        long long28 = variance17.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance30 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray37 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double38 = variance30.evaluate(doubleArray37);
        variance30.clear();
        variance30.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance43 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance43.clear();
        double double45 = variance43.getResult();
        double[] doubleArray50 = new double[] { (-1), 2168.222222222222d, 16.566666666418314d, 10.0d };
        variance43.incrementAll(doubleArray50);
        boolean boolean52 = variance30.equals((java.lang.Object) doubleArray50);
        variance17.incrementAll(doubleArray50);
        variance1.incrementAll(doubleArray50);
        variance1.clear();
        boolean boolean56 = variance1.isBiasCorrected();
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 2168.222222222222d + "'", double9 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 2168.222222222222d + "'", double25 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + long28 + "' != '" + 0L + "'", long28 == 0L);
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 2168.222222222222d + "'", double38 == 2168.222222222222d);
        org.junit.Assert.assertTrue(Double.isNaN(double45));
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[-1.0, 2168.222222222222, 16.566666666418314, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
    }

    @Test
    public void test1205() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1205");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray8 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double9 = variance1.evaluate(doubleArray8);
        variance1.setBiasCorrected(true);
        long long12 = variance1.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance14 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray21 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double22 = variance14.evaluate(doubleArray21);
        variance14.clear();
        variance14.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance27 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance27.clear();
        double double29 = variance27.getResult();
        double[] doubleArray34 = new double[] { (-1), 2168.222222222222d, 16.566666666418314d, 10.0d };
        variance27.incrementAll(doubleArray34);
        boolean boolean36 = variance14.equals((java.lang.Object) doubleArray34);
        variance1.incrementAll(doubleArray34);
        org.apache.commons.math.stat.descriptive.moment.Variance variance39 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray46 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double47 = variance39.evaluate(doubleArray46);
        variance39.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance51 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance51.clear();
        double double53 = variance51.getResult();
        double[] doubleArray58 = new double[] { (-1), 2168.222222222222d, 16.566666666418314d, 10.0d };
        variance51.incrementAll(doubleArray58);
        variance39.incrementAll(doubleArray58);
        double double63 = variance1.evaluate(doubleArray58, (int) (byte) 0, 0);
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 2168.222222222222d + "'", double9 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 0L + "'", long12 == 0L);
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 2168.222222222222d + "'", double22 == 2168.222222222222d);
        org.junit.Assert.assertTrue(Double.isNaN(double29));
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[-1.0, 2168.222222222222, 16.566666666418314, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 2168.222222222222d + "'", double47 == 2168.222222222222d);
        org.junit.Assert.assertTrue(Double.isNaN(double53));
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[-1.0, 2168.222222222222, 16.566666666418314, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double63));
    }

    @Test
    public void test1206() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1206");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray8 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double9 = variance1.evaluate(doubleArray8);
        variance1.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance13 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray20 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double21 = variance13.evaluate(doubleArray20);
        variance13.setBiasCorrected(true);
        boolean boolean24 = variance13.isBiasCorrected();
        double[] doubleArray31 = new double[] { (short) 0, 1.0d, 1L, 0.0d, (-1.0d), 10L };
        double double32 = variance13.evaluate(doubleArray31);
        double double35 = variance1.evaluate(doubleArray31, (int) (byte) 1, (int) (byte) 0);
        org.apache.commons.math.stat.descriptive.moment.Variance variance37 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance39 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray46 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double47 = variance39.evaluate(doubleArray46);
        variance39.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance51 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray58 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double59 = variance51.evaluate(doubleArray58);
        variance51.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance63 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray70 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double71 = variance63.evaluate(doubleArray70);
        variance63.setBiasCorrected(true);
        boolean boolean74 = variance63.isBiasCorrected();
        double[] doubleArray81 = new double[] { (short) 0, 1.0d, 1L, 0.0d, (-1.0d), 10L };
        double double82 = variance63.evaluate(doubleArray81);
        double double85 = variance51.evaluate(doubleArray81, (int) (byte) 1, (int) (byte) 0);
        variance39.incrementAll(doubleArray81, (int) (byte) 1, 1);
        double double89 = variance37.evaluate(doubleArray81);
        double double90 = variance1.evaluate(doubleArray81);
        variance1.setBiasCorrected(true);
        java.lang.Object obj93 = null;
        boolean boolean94 = variance1.equals(obj93);
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 2168.222222222222d + "'", double9 == 2168.222222222222d);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 2168.222222222222d + "'", double21 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[0.0, 1.0, 1.0, 0.0, -1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 16.566666666666663d + "'", double32 == 16.566666666666663d);
        org.junit.Assert.assertTrue(Double.isNaN(double35));
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 2168.222222222222d + "'", double47 == 2168.222222222222d);
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 2168.222222222222d + "'", double59 == 2168.222222222222d);
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + 2168.222222222222d + "'", double71 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray81), "[0.0, 1.0, 1.0, 0.0, -1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double82 + "' != '" + 16.566666666666663d + "'", double82 == 16.566666666666663d);
        org.junit.Assert.assertTrue(Double.isNaN(double85));
        org.junit.Assert.assertTrue("'" + double89 + "' != '" + 13.805555555555552d + "'", double89 == 13.805555555555552d);
        org.junit.Assert.assertTrue("'" + double90 + "' != '" + 16.566666666666663d + "'", double90 == 16.566666666666663d);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + false + "'", boolean94 == false);
    }

    @Test
    public void test1207() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1207");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance1.clear();
        boolean boolean3 = variance1.isBiasCorrected();
        boolean boolean5 = variance1.equals((java.lang.Object) 1166128.5457099646d);
        org.apache.commons.math.stat.descriptive.moment.Variance variance7 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray14 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double15 = variance7.evaluate(doubleArray14);
        variance7.setBiasCorrected(true);
        boolean boolean18 = variance7.isBiasCorrected();
        double[] doubleArray25 = new double[] { (short) 0, 1.0d, 1L, 0.0d, (-1.0d), 10L };
        double double26 = variance7.evaluate(doubleArray25);
        org.apache.commons.math.stat.descriptive.moment.Variance variance28 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray35 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double36 = variance28.evaluate(doubleArray35);
        variance28.setBiasCorrected(true);
        boolean boolean39 = variance28.isBiasCorrected();
        double[] doubleArray46 = new double[] { (short) 0, 1.0d, 1L, 0.0d, (-1.0d), 10L };
        double double47 = variance28.evaluate(doubleArray46);
        double double50 = variance7.evaluate(doubleArray46, (int) (byte) 1, 0);
        variance7.setBiasCorrected(true);
        variance7.setBiasCorrected(true);
        double double55 = variance7.getResult();
        boolean boolean56 = variance7.isBiasCorrected();
        org.apache.commons.math.stat.descriptive.moment.Variance variance58 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray65 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double66 = variance58.evaluate(doubleArray65);
        variance58.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance70 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray77 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double78 = variance70.evaluate(doubleArray77);
        variance58.incrementAll(doubleArray77);
        double double81 = variance7.evaluate(doubleArray77, 0.0d);
        double double82 = variance1.evaluate(doubleArray77);
        double double83 = variance1.getResult();
        variance1.increment((double) (byte) 0);
        java.lang.Class<?> wildcardClass86 = variance1.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 2168.222222222222d + "'", double15 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[0.0, 1.0, 1.0, 0.0, -1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 16.566666666666663d + "'", double26 == 16.566666666666663d);
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 2168.222222222222d + "'", double36 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[0.0, 1.0, 1.0, 0.0, -1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 16.566666666666663d + "'", double47 == 16.566666666666663d);
        org.junit.Assert.assertTrue(Double.isNaN(double50));
        org.junit.Assert.assertTrue(Double.isNaN(double55));
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 2168.222222222222d + "'", double66 == 2168.222222222222d);
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray77), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double78 + "' != '" + 2168.222222222222d + "'", double78 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + double81 + "' != '" + 2601.8666666666663d + "'", double81 == 2601.8666666666663d);
        org.junit.Assert.assertTrue("'" + double82 + "' != '" + 2168.222222222222d + "'", double82 == 2168.222222222222d);
        org.junit.Assert.assertTrue(Double.isNaN(double83));
        org.junit.Assert.assertNotNull(wildcardClass86);
    }

    @Test
    public void test1208() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1208");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray8 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double9 = variance1.evaluate(doubleArray8);
        variance1.setBiasCorrected(true);
        boolean boolean12 = variance1.isBiasCorrected();
        org.apache.commons.math.stat.descriptive.moment.Variance variance14 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray21 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double22 = variance14.evaluate(doubleArray21);
        variance14.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance26 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray33 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double34 = variance26.evaluate(doubleArray33);
        variance26.setBiasCorrected(true);
        boolean boolean37 = variance26.isBiasCorrected();
        double[] doubleArray44 = new double[] { (short) 0, 1.0d, 1L, 0.0d, (-1.0d), 10L };
        double double45 = variance26.evaluate(doubleArray44);
        double double48 = variance14.evaluate(doubleArray44, (int) (byte) 1, (int) (byte) 0);
        double double51 = variance1.evaluate(doubleArray44, (int) (byte) 1, 0);
        variance1.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance55 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray62 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double63 = variance55.evaluate(doubleArray62);
        variance55.setBiasCorrected(true);
        boolean boolean66 = variance55.isBiasCorrected();
        double[] doubleArray73 = new double[] { (short) 0, 1.0d, 1L, 0.0d, (-1.0d), 10L };
        double double74 = variance55.evaluate(doubleArray73);
        double double75 = variance55.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance77 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance77.clear();
        double double79 = variance77.getResult();
        double[] doubleArray84 = new double[] { (-1), 2168.222222222222d, 16.566666666418314d, 10.0d };
        variance77.incrementAll(doubleArray84);
        double double86 = variance55.evaluate(doubleArray84);
        boolean boolean87 = variance1.equals((java.lang.Object) variance55);
        variance55.setBiasCorrected(false);
        variance55.clear();
        variance55.setBiasCorrected(true);
        long long93 = variance55.getN();
        variance55.increment((double) (byte) 1);
        long long96 = variance55.getN();
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 2168.222222222222d + "'", double9 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 2168.222222222222d + "'", double22 == 2168.222222222222d);
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 2168.222222222222d + "'", double34 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[0.0, 1.0, 1.0, 0.0, -1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 16.566666666666663d + "'", double45 == 16.566666666666663d);
        org.junit.Assert.assertTrue(Double.isNaN(double48));
        org.junit.Assert.assertTrue(Double.isNaN(double51));
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 2168.222222222222d + "'", double63 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[0.0, 1.0, 1.0, 0.0, -1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double74 + "' != '" + 16.566666666666663d + "'", double74 == 16.566666666666663d);
        org.junit.Assert.assertTrue(Double.isNaN(double75));
        org.junit.Assert.assertTrue(Double.isNaN(double79));
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray84), "[-1.0, 2168.222222222222, 16.566666666418314, 10.0]");
        org.junit.Assert.assertTrue("'" + double86 + "' != '" + 1166128.5457099646d + "'", double86 == 1166128.5457099646d);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + true + "'", boolean87 == true);
        org.junit.Assert.assertTrue("'" + long93 + "' != '" + 0L + "'", long93 == 0L);
        org.junit.Assert.assertTrue("'" + long96 + "' != '" + 1L + "'", long96 == 1L);
    }

    @Test
    public void test1209() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1209");
        org.apache.commons.math.stat.descriptive.moment.Variance variance0 = new org.apache.commons.math.stat.descriptive.moment.Variance();
        long long1 = variance0.getN();
        variance0.setBiasCorrected(true);
        variance0.increment(2178.0d);
        boolean boolean6 = variance0.isBiasCorrected();
        java.lang.Class<?> wildcardClass7 = variance0.getClass();
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(wildcardClass7);
    }

    @Test
    public void test1210() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1210");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment1 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance2 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment1);
        variance2.clear();
        double[] doubleArray4 = new double[] {};
        variance2.incrementAll(doubleArray4);
        variance2.increment(2178.0d);
        variance2.clear();
        variance2.increment(1166128.5457099646d);
        variance2.increment(2.25d);
        boolean boolean13 = variance2.isBiasCorrected();
        variance2.setBiasCorrected(false);
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[]");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
    }

    @Test
    public void test1211() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1211");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray8 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double9 = variance1.evaluate(doubleArray8);
        variance1.setBiasCorrected(true);
        variance1.increment((double) (byte) 0);
        double[] doubleArray16 = new double[] { 'a', 100L };
        double double18 = variance1.evaluate(doubleArray16, 0.0d);
        long long19 = variance1.getN();
        boolean boolean20 = variance1.isBiasCorrected();
        long long21 = variance1.getN();
        double double22 = variance1.getResult();
        double double23 = variance1.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance25 = new org.apache.commons.math.stat.descriptive.moment.Variance(true);
        double double26 = variance25.getResult();
        double double27 = variance25.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance29 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray36 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double37 = variance29.evaluate(doubleArray36);
        variance29.clear();
        variance29.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance42 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance42.clear();
        double double44 = variance42.getResult();
        double[] doubleArray49 = new double[] { (-1), 2168.222222222222d, 16.566666666418314d, 10.0d };
        variance42.incrementAll(doubleArray49);
        boolean boolean51 = variance29.equals((java.lang.Object) doubleArray49);
        double double53 = variance25.evaluate(doubleArray49, (double) (-1.0f));
        double double55 = variance1.evaluate(doubleArray49, 16.566666666666666d);
        long long56 = variance1.getN();
        java.lang.Class<?> wildcardClass57 = variance1.getClass();
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 2168.222222222222d + "'", double9 == 2168.222222222222d);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[97.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 4.5d + "'", double18 == 4.5d);
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + 1L + "'", long19 == 1L);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + long21 + "' != '" + 1L + "'", long21 == 1L);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 0.0d + "'", double22 == 0.0d);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double26));
        org.junit.Assert.assertTrue(Double.isNaN(double27));
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 2168.222222222222d + "'", double37 == 2168.222222222222d);
        org.junit.Assert.assertTrue(Double.isNaN(double44));
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[-1.0, 2168.222222222222, 16.566666666418314, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 1166128.5457099646d + "'", double53 == 1166128.5457099646d);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 1166128.5457099646d + "'", double55 == 1166128.5457099646d);
        org.junit.Assert.assertTrue("'" + long56 + "' != '" + 1L + "'", long56 == 1L);
        org.junit.Assert.assertNotNull(wildcardClass57);
    }

    @Test
    public void test1212() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1212");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray8 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double9 = variance1.evaluate(doubleArray8);
        variance1.setBiasCorrected(true);
        boolean boolean12 = variance1.isBiasCorrected();
        double[] doubleArray19 = new double[] { (short) 0, 1.0d, 1L, 0.0d, (-1.0d), 10L };
        double double20 = variance1.evaluate(doubleArray19);
        boolean boolean22 = variance1.equals((java.lang.Object) 10.0d);
        boolean boolean23 = variance1.isBiasCorrected();
        double double24 = variance1.getResult();
        double double25 = variance1.getResult();
        long long26 = variance1.getN();
        double double27 = variance1.getResult();
        double double28 = variance1.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance30 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray37 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double38 = variance30.evaluate(doubleArray37);
        variance30.setBiasCorrected(true);
        variance30.increment((double) (byte) 0);
        double[] doubleArray45 = new double[] { 'a', 100L };
        double double47 = variance30.evaluate(doubleArray45, 0.0d);
        double double48 = variance30.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance50 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance50.clear();
        double double52 = variance50.getResult();
        double[] doubleArray57 = new double[] { (-1), 2168.222222222222d, 16.566666666418314d, 10.0d };
        variance50.incrementAll(doubleArray57);
        variance30.incrementAll(doubleArray57, (int) (short) 1, 1);
        variance30.increment((double) 1L);
        org.apache.commons.math.stat.descriptive.moment.Variance variance65 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray72 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double73 = variance65.evaluate(doubleArray72);
        variance65.setBiasCorrected(true);
        long long76 = variance65.getN();
        long long77 = variance65.getN();
        boolean boolean78 = variance65.isBiasCorrected();
        org.apache.commons.math.stat.descriptive.moment.Variance variance80 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray87 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double88 = variance80.evaluate(doubleArray87);
        double[] doubleArray92 = new double[] { (byte) 1, (byte) 100, 1L };
        double double93 = variance80.evaluate(doubleArray92);
        variance65.incrementAll(doubleArray92, (int) (short) 1, 0);
        variance30.incrementAll(doubleArray92);
        boolean boolean98 = variance1.equals((java.lang.Object) doubleArray92);
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 2168.222222222222d + "'", double9 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[0.0, 1.0, 1.0, 0.0, -1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 16.566666666666663d + "'", double20 == 16.566666666666663d);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double24));
        org.junit.Assert.assertTrue(Double.isNaN(double25));
        org.junit.Assert.assertTrue("'" + long26 + "' != '" + 0L + "'", long26 == 0L);
        org.junit.Assert.assertTrue(Double.isNaN(double27));
        org.junit.Assert.assertTrue(Double.isNaN(double28));
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 2168.222222222222d + "'", double38 == 2168.222222222222d);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[97.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 4.5d + "'", double47 == 4.5d);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 0.0d + "'", double48 == 0.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double52));
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[-1.0, 2168.222222222222, 16.566666666418314, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray72), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double73 + "' != '" + 2168.222222222222d + "'", double73 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + long76 + "' != '" + 0L + "'", long76 == 0L);
        org.junit.Assert.assertTrue("'" + long77 + "' != '" + 0L + "'", long77 == 0L);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertNotNull(doubleArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray87), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double88 + "' != '" + 2168.222222222222d + "'", double88 == 2168.222222222222d);
        org.junit.Assert.assertNotNull(doubleArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray92), "[1.0, 100.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double93 + "' != '" + 2178.0d + "'", double93 == 2178.0d);
        org.junit.Assert.assertTrue("'" + boolean98 + "' != '" + false + "'", boolean98 == false);
    }

    @Test
    public void test1213() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1213");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray8 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double9 = variance1.evaluate(doubleArray8);
        variance1.setBiasCorrected(true);
        boolean boolean12 = variance1.isBiasCorrected();
        double[] doubleArray19 = new double[] { (short) 0, 1.0d, 1L, 0.0d, (-1.0d), 10L };
        double double20 = variance1.evaluate(doubleArray19);
        double double21 = variance1.getResult();
        long long22 = variance1.getN();
        variance1.increment((double) '#');
        variance1.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance28 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray35 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double36 = variance28.evaluate(doubleArray35);
        variance28.setBiasCorrected(true);
        variance28.increment((double) (byte) 0);
        double[] doubleArray43 = new double[] { 'a', 100L };
        double double45 = variance28.evaluate(doubleArray43, 0.0d);
        variance1.incrementAll(doubleArray43);
        long long47 = variance1.getN();
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 2168.222222222222d + "'", double9 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[0.0, 1.0, 1.0, 0.0, -1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 16.566666666666663d + "'", double20 == 16.566666666666663d);
        org.junit.Assert.assertTrue(Double.isNaN(double21));
        org.junit.Assert.assertTrue("'" + long22 + "' != '" + 0L + "'", long22 == 0L);
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 2168.222222222222d + "'", double36 == 2168.222222222222d);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[97.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 4.5d + "'", double45 == 4.5d);
        org.junit.Assert.assertTrue("'" + long47 + "' != '" + 3L + "'", long47 == 3L);
    }

    @Test
    public void test1214() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1214");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray8 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double9 = variance1.evaluate(doubleArray8);
        variance1.setBiasCorrected(true);
        variance1.increment((double) (byte) 0);
        org.apache.commons.math.stat.descriptive.moment.Variance variance15 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray22 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double23 = variance15.evaluate(doubleArray22);
        variance15.setBiasCorrected(true);
        boolean boolean26 = variance15.isBiasCorrected();
        org.apache.commons.math.stat.descriptive.moment.Variance variance28 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance28.clear();
        boolean boolean30 = variance28.isBiasCorrected();
        org.apache.commons.math.stat.descriptive.moment.Variance variance32 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray39 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double40 = variance32.evaluate(doubleArray39);
        variance32.setBiasCorrected(true);
        long long43 = variance32.getN();
        long long44 = variance32.getN();
        double double45 = variance32.getResult();
        variance32.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance48 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray55 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double56 = variance48.evaluate(doubleArray55);
        double[] doubleArray60 = new double[] { (byte) 1, (byte) 100, 1L };
        double double61 = variance48.evaluate(doubleArray60);
        org.apache.commons.math.stat.descriptive.moment.Variance variance63 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray70 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double71 = variance63.evaluate(doubleArray70);
        variance63.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance75 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray82 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double83 = variance75.evaluate(doubleArray82);
        variance63.incrementAll(doubleArray82);
        variance48.incrementAll(doubleArray82);
        double double86 = variance32.evaluate(doubleArray82);
        double double87 = variance28.evaluate(doubleArray82);
        double double88 = variance15.evaluate(doubleArray82);
        // The following exception was thrown during execution in test generation
        try {
            double double92 = variance1.evaluate(doubleArray82, 2168.2222222222226d, 0, (int) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: length cannot be negative");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 2168.222222222222d + "'", double9 == 2168.222222222222d);
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 2168.222222222222d + "'", double23 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 2168.222222222222d + "'", double40 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + long43 + "' != '" + 0L + "'", long43 == 0L);
        org.junit.Assert.assertTrue("'" + long44 + "' != '" + 0L + "'", long44 == 0L);
        org.junit.Assert.assertTrue(Double.isNaN(double45));
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 2168.222222222222d + "'", double56 == 2168.222222222222d);
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[1.0, 100.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 2178.0d + "'", double61 == 2178.0d);
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + 2168.222222222222d + "'", double71 == 2168.222222222222d);
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray82), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + 2168.222222222222d + "'", double83 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + double86 + "' != '" + 2601.866666666667d + "'", double86 == 2601.866666666667d);
        org.junit.Assert.assertTrue("'" + double87 + "' != '" + 2168.222222222222d + "'", double87 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + double88 + "' != '" + 2601.866666666667d + "'", double88 == 2601.866666666667d);
    }

    @Test
    public void test1215() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1215");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray8 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double9 = variance1.evaluate(doubleArray8);
        variance1.setBiasCorrected(true);
        long long12 = variance1.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance14 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray21 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double22 = variance14.evaluate(doubleArray21);
        variance14.clear();
        variance14.setBiasCorrected(false);
        variance14.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance28 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray35 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double36 = variance28.evaluate(doubleArray35);
        variance28.setBiasCorrected(true);
        variance28.increment((double) (byte) 0);
        double[] doubleArray43 = new double[] { 'a', 100L };
        double double45 = variance28.evaluate(doubleArray43, 0.0d);
        double double46 = variance14.evaluate(doubleArray43);
        org.apache.commons.math.stat.descriptive.moment.Variance variance48 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray55 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double56 = variance48.evaluate(doubleArray55);
        double[] doubleArray60 = new double[] { (byte) 1, (byte) 100, 1L };
        double double61 = variance48.evaluate(doubleArray60);
        org.apache.commons.math.stat.descriptive.moment.Variance variance63 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray70 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double71 = variance63.evaluate(doubleArray70);
        variance63.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance75 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray82 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double83 = variance75.evaluate(doubleArray82);
        variance63.incrementAll(doubleArray82);
        variance48.incrementAll(doubleArray82);
        boolean boolean86 = variance14.equals((java.lang.Object) doubleArray82);
        variance1.incrementAll(doubleArray82);
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 2168.222222222222d + "'", double9 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 0L + "'", long12 == 0L);
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 2168.222222222222d + "'", double22 == 2168.222222222222d);
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 2168.222222222222d + "'", double36 == 2168.222222222222d);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[97.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 4.5d + "'", double45 == 4.5d);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 2.25d + "'", double46 == 2.25d);
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 2168.222222222222d + "'", double56 == 2168.222222222222d);
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[1.0, 100.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 2178.0d + "'", double61 == 2178.0d);
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + 2168.222222222222d + "'", double71 == 2168.222222222222d);
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray82), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + 2168.222222222222d + "'", double83 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
    }

    @Test
    public void test1216() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1216");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray8 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double9 = variance1.evaluate(doubleArray8);
        long long10 = variance1.getN();
        variance1.increment((double) (byte) 1);
        variance1.increment((double) 6L);
        variance1.increment(2178.0d);
        variance1.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance20 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray27 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double28 = variance20.evaluate(doubleArray27);
        variance20.setBiasCorrected(true);
        variance20.increment((double) (byte) 0);
        double[] doubleArray35 = new double[] { 'a', 100L };
        double double37 = variance20.evaluate(doubleArray35, 0.0d);
        long long38 = variance20.getN();
        boolean boolean39 = variance20.isBiasCorrected();
        long long40 = variance20.getN();
        double double41 = variance20.getResult();
        double double42 = variance20.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance44 = new org.apache.commons.math.stat.descriptive.moment.Variance(true);
        double double45 = variance44.getResult();
        double double46 = variance44.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance48 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray55 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double56 = variance48.evaluate(doubleArray55);
        variance48.clear();
        variance48.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance61 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance61.clear();
        double double63 = variance61.getResult();
        double[] doubleArray68 = new double[] { (-1), 2168.222222222222d, 16.566666666418314d, 10.0d };
        variance61.incrementAll(doubleArray68);
        boolean boolean70 = variance48.equals((java.lang.Object) doubleArray68);
        double double72 = variance44.evaluate(doubleArray68, (double) (-1.0f));
        double double74 = variance20.evaluate(doubleArray68, 16.566666666666666d);
        // The following exception was thrown during execution in test generation
        try {
            variance1.incrementAll(doubleArray68, (int) (byte) 10, 1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: begin + length > values.length");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 2168.222222222222d + "'", double9 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 0L + "'", long10 == 0L);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 2168.222222222222d + "'", double28 == 2168.222222222222d);
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[97.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 4.5d + "'", double37 == 4.5d);
        org.junit.Assert.assertTrue("'" + long38 + "' != '" + 1L + "'", long38 == 1L);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertTrue("'" + long40 + "' != '" + 1L + "'", long40 == 1L);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.0d + "'", double41 == 0.0d);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 0.0d + "'", double42 == 0.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double45));
        org.junit.Assert.assertTrue(Double.isNaN(double46));
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 2168.222222222222d + "'", double56 == 2168.222222222222d);
        org.junit.Assert.assertTrue(Double.isNaN(double63));
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[-1.0, 2168.222222222222, 16.566666666418314, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 1166128.5457099646d + "'", double72 == 1166128.5457099646d);
        org.junit.Assert.assertTrue("'" + double74 + "' != '" + 1166128.5457099646d + "'", double74 == 1166128.5457099646d);
    }

    @Test
    public void test1217() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1217");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray8 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double9 = variance1.evaluate(doubleArray8);
        variance1.setBiasCorrected(true);
        boolean boolean12 = variance1.isBiasCorrected();
        double[] doubleArray19 = new double[] { (short) 0, 1.0d, 1L, 0.0d, (-1.0d), 10L };
        double double20 = variance1.evaluate(doubleArray19);
        boolean boolean22 = variance1.equals((java.lang.Object) 10.0d);
        boolean boolean23 = variance1.isBiasCorrected();
        org.apache.commons.math.stat.descriptive.moment.Variance variance25 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        boolean boolean26 = variance1.equals((java.lang.Object) false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance28 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray35 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double36 = variance28.evaluate(doubleArray35);
        variance28.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance40 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray47 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double48 = variance40.evaluate(doubleArray47);
        variance28.incrementAll(doubleArray47);
        double double51 = variance1.evaluate(doubleArray47, (double) 100.0f);
        long long52 = variance1.getN();
        variance1.increment((double) '4');
        double double55 = variance1.getResult();
        boolean boolean56 = variance1.isBiasCorrected();
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 2168.222222222222d + "'", double9 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[0.0, 1.0, 1.0, 0.0, -1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 16.566666666666663d + "'", double20 == 16.566666666666663d);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 2168.222222222222d + "'", double36 == 2168.222222222222d);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 2168.222222222222d + "'", double48 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 2601.8666666666663d + "'", double51 == 2601.8666666666663d);
        org.junit.Assert.assertTrue("'" + long52 + "' != '" + 0L + "'", long52 == 0L);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 0.0d + "'", double55 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
    }

    @Test
    public void test1218() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1218");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray8 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double9 = variance1.evaluate(doubleArray8);
        long long10 = variance1.getN();
        variance1.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance13 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray20 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double21 = variance13.evaluate(doubleArray20);
        variance13.setBiasCorrected(true);
        boolean boolean24 = variance13.isBiasCorrected();
        double[] doubleArray31 = new double[] { (short) 0, 1.0d, 1L, 0.0d, (-1.0d), 10L };
        double double32 = variance13.evaluate(doubleArray31);
        double double33 = variance13.getResult();
        variance13.setBiasCorrected(true);
        long long36 = variance13.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance38 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray45 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double46 = variance38.evaluate(doubleArray45);
        variance38.setBiasCorrected(true);
        boolean boolean49 = variance38.isBiasCorrected();
        double[] doubleArray56 = new double[] { (short) 0, 1.0d, 1L, 0.0d, (-1.0d), 10L };
        double double57 = variance38.evaluate(doubleArray56);
        boolean boolean59 = variance38.equals((java.lang.Object) 10.0d);
        org.apache.commons.math.stat.descriptive.moment.Variance variance61 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray68 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double69 = variance61.evaluate(doubleArray68);
        variance61.setBiasCorrected(true);
        boolean boolean72 = variance61.isBiasCorrected();
        double[] doubleArray79 = new double[] { (short) 0, 1.0d, 1L, 0.0d, (-1.0d), 10L };
        double double80 = variance61.evaluate(doubleArray79);
        double double82 = variance38.evaluate(doubleArray79, (double) 0.0f);
        variance13.incrementAll(doubleArray79);
        double double85 = variance1.evaluate(doubleArray79, (double) ' ');
        double double86 = variance1.getResult();
        long long87 = variance1.getN();
        boolean boolean89 = variance1.equals((java.lang.Object) 3267.0d);
        long long90 = variance1.getN();
        double double91 = variance1.getResult();
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 2168.222222222222d + "'", double9 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 0L + "'", long10 == 0L);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 2168.222222222222d + "'", double21 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[0.0, 1.0, 1.0, 0.0, -1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 16.566666666666663d + "'", double32 == 16.566666666666663d);
        org.junit.Assert.assertTrue(Double.isNaN(double33));
        org.junit.Assert.assertTrue("'" + long36 + "' != '" + 0L + "'", long36 == 0L);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 2168.222222222222d + "'", double46 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[0.0, 1.0, 1.0, 0.0, -1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 16.566666666666663d + "'", double57 == 16.566666666666663d);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 2168.222222222222d + "'", double69 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray79), "[0.0, 1.0, 1.0, 0.0, -1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double80 + "' != '" + 16.566666666666663d + "'", double80 == 16.566666666666663d);
        org.junit.Assert.assertTrue("'" + double82 + "' != '" + 16.566666666666666d + "'", double82 == 16.566666666666666d);
        org.junit.Assert.assertTrue("'" + double85 + "' != '" + 13.805555555555506d + "'", double85 == 13.805555555555506d);
        org.junit.Assert.assertTrue(Double.isNaN(double86));
        org.junit.Assert.assertTrue("'" + long87 + "' != '" + 0L + "'", long87 == 0L);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertTrue("'" + long90 + "' != '" + 0L + "'", long90 == 0L);
        org.junit.Assert.assertTrue(Double.isNaN(double91));
    }

    @Test
    public void test1219() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1219");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance1.clear();
        double double3 = variance1.getResult();
        double[] doubleArray8 = new double[] { (-1), 2168.222222222222d, 16.566666666418314d, 10.0d };
        variance1.incrementAll(doubleArray8);
        org.apache.commons.math.stat.descriptive.moment.Variance variance11 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray18 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double19 = variance11.evaluate(doubleArray18);
        variance11.setBiasCorrected(true);
        long long22 = variance11.getN();
        double double23 = variance11.getResult();
        variance11.setBiasCorrected(true);
        boolean boolean26 = variance1.equals((java.lang.Object) variance11);
        double double27 = variance11.getResult();
        variance11.clear();
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-1.0, 2168.222222222222, 16.566666666418314, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 2168.222222222222d + "'", double19 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + long22 + "' != '" + 0L + "'", long22 == 0L);
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double27));
    }

    @Test
    public void test1220() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1220");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray8 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double9 = variance1.evaluate(doubleArray8);
        variance1.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance13 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray20 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double21 = variance13.evaluate(doubleArray20);
        variance13.setBiasCorrected(true);
        boolean boolean24 = variance13.isBiasCorrected();
        double[] doubleArray31 = new double[] { (short) 0, 1.0d, 1L, 0.0d, (-1.0d), 10L };
        double double32 = variance13.evaluate(doubleArray31);
        double double35 = variance1.evaluate(doubleArray31, (int) (byte) 1, (int) (byte) 0);
        org.apache.commons.math.stat.descriptive.moment.Variance variance37 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance39 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray46 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double47 = variance39.evaluate(doubleArray46);
        variance39.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance51 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray58 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double59 = variance51.evaluate(doubleArray58);
        variance51.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance63 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray70 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double71 = variance63.evaluate(doubleArray70);
        variance63.setBiasCorrected(true);
        boolean boolean74 = variance63.isBiasCorrected();
        double[] doubleArray81 = new double[] { (short) 0, 1.0d, 1L, 0.0d, (-1.0d), 10L };
        double double82 = variance63.evaluate(doubleArray81);
        double double85 = variance51.evaluate(doubleArray81, (int) (byte) 1, (int) (byte) 0);
        variance39.incrementAll(doubleArray81, (int) (byte) 1, 1);
        double double89 = variance37.evaluate(doubleArray81);
        double double90 = variance1.evaluate(doubleArray81);
        variance1.setBiasCorrected(true);
        double double93 = variance1.getResult();
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 2168.222222222222d + "'", double9 == 2168.222222222222d);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 2168.222222222222d + "'", double21 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[0.0, 1.0, 1.0, 0.0, -1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 16.566666666666663d + "'", double32 == 16.566666666666663d);
        org.junit.Assert.assertTrue(Double.isNaN(double35));
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 2168.222222222222d + "'", double47 == 2168.222222222222d);
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 2168.222222222222d + "'", double59 == 2168.222222222222d);
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + 2168.222222222222d + "'", double71 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray81), "[0.0, 1.0, 1.0, 0.0, -1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double82 + "' != '" + 16.566666666666663d + "'", double82 == 16.566666666666663d);
        org.junit.Assert.assertTrue(Double.isNaN(double85));
        org.junit.Assert.assertTrue("'" + double89 + "' != '" + 13.805555555555552d + "'", double89 == 13.805555555555552d);
        org.junit.Assert.assertTrue("'" + double90 + "' != '" + 16.566666666666663d + "'", double90 == 16.566666666666663d);
        org.junit.Assert.assertTrue(Double.isNaN(double93));
    }

    @Test
    public void test1221() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1221");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray8 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double9 = variance1.evaluate(doubleArray8);
        variance1.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance13 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray20 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double21 = variance13.evaluate(doubleArray20);
        variance1.incrementAll(doubleArray20);
        variance1.clear();
        variance1.setBiasCorrected(false);
        long long26 = variance1.getN();
        variance1.setBiasCorrected(true);
        double double29 = variance1.getResult();
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 2168.222222222222d + "'", double9 == 2168.222222222222d);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 2168.222222222222d + "'", double21 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + long26 + "' != '" + 0L + "'", long26 == 0L);
        org.junit.Assert.assertTrue(Double.isNaN(double29));
    }

    @Test
    public void test1222() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1222");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray8 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double9 = variance1.evaluate(doubleArray8);
        double[] doubleArray13 = new double[] { (byte) 1, (byte) 100, 1L };
        double double14 = variance1.evaluate(doubleArray13);
        org.apache.commons.math.stat.descriptive.moment.Variance variance16 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray23 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double24 = variance16.evaluate(doubleArray23);
        variance16.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance28 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray35 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double36 = variance28.evaluate(doubleArray35);
        variance16.incrementAll(doubleArray35);
        variance1.incrementAll(doubleArray35);
        boolean boolean40 = variance1.equals((java.lang.Object) (byte) 0);
        double double41 = variance1.getResult();
        long long42 = variance1.getN();
        variance1.clear();
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 2168.222222222222d + "'", double9 == 2168.222222222222d);
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[1.0, 100.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 2178.0d + "'", double14 == 2178.0d);
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 2168.222222222222d + "'", double24 == 2168.222222222222d);
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 2168.222222222222d + "'", double36 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 2168.222222222222d + "'", double41 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + long42 + "' != '" + 6L + "'", long42 == 6L);
    }

    @Test
    public void test1223() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1223");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray8 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double9 = variance1.evaluate(doubleArray8);
        variance1.setBiasCorrected(true);
        boolean boolean12 = variance1.isBiasCorrected();
        org.apache.commons.math.stat.descriptive.moment.Variance variance14 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray21 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double22 = variance14.evaluate(doubleArray21);
        variance14.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance26 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray33 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double34 = variance26.evaluate(doubleArray33);
        variance26.setBiasCorrected(true);
        boolean boolean37 = variance26.isBiasCorrected();
        double[] doubleArray44 = new double[] { (short) 0, 1.0d, 1L, 0.0d, (-1.0d), 10L };
        double double45 = variance26.evaluate(doubleArray44);
        double double48 = variance14.evaluate(doubleArray44, (int) (byte) 1, (int) (byte) 0);
        double double51 = variance1.evaluate(doubleArray44, (int) (byte) 1, 0);
        org.apache.commons.math.stat.descriptive.moment.Variance variance53 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray60 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double61 = variance53.evaluate(doubleArray60);
        variance53.clear();
        variance53.setBiasCorrected(true);
        boolean boolean65 = variance1.equals((java.lang.Object) variance53);
        variance53.setBiasCorrected(false);
        variance53.clear();
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 2168.222222222222d + "'", double9 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 2168.222222222222d + "'", double22 == 2168.222222222222d);
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 2168.222222222222d + "'", double34 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[0.0, 1.0, 1.0, 0.0, -1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 16.566666666666663d + "'", double45 == 16.566666666666663d);
        org.junit.Assert.assertTrue(Double.isNaN(double48));
        org.junit.Assert.assertTrue(Double.isNaN(double51));
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 2168.222222222222d + "'", double61 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
    }

    @Test
    public void test1224() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1224");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray8 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double9 = variance1.evaluate(doubleArray8);
        variance1.clear();
        variance1.setBiasCorrected(false);
        variance1.clear();
        boolean boolean15 = variance1.equals((java.lang.Object) 10.0d);
        org.apache.commons.math.stat.descriptive.moment.Variance variance17 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray24 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double25 = variance17.evaluate(doubleArray24);
        variance17.setBiasCorrected(true);
        long long28 = variance17.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance30 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray37 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double38 = variance30.evaluate(doubleArray37);
        variance30.clear();
        variance30.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance43 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance43.clear();
        double double45 = variance43.getResult();
        double[] doubleArray50 = new double[] { (-1), 2168.222222222222d, 16.566666666418314d, 10.0d };
        variance43.incrementAll(doubleArray50);
        boolean boolean52 = variance30.equals((java.lang.Object) doubleArray50);
        variance17.incrementAll(doubleArray50);
        variance1.incrementAll(doubleArray50);
        variance1.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance57 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray64 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double65 = variance57.evaluate(doubleArray64);
        variance57.setBiasCorrected(true);
        long long68 = variance57.getN();
        long long69 = variance57.getN();
        boolean boolean70 = variance57.isBiasCorrected();
        org.apache.commons.math.stat.descriptive.moment.Variance variance72 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray79 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double80 = variance72.evaluate(doubleArray79);
        double[] doubleArray84 = new double[] { (byte) 1, (byte) 100, 1L };
        double double85 = variance72.evaluate(doubleArray84);
        variance57.incrementAll(doubleArray84, (int) (short) 1, 0);
        // The following exception was thrown during execution in test generation
        try {
            double double91 = variance1.evaluate(doubleArray84, (-1), (int) (short) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: start position cannot be negative");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 2168.222222222222d + "'", double9 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 2168.222222222222d + "'", double25 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + long28 + "' != '" + 0L + "'", long28 == 0L);
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 2168.222222222222d + "'", double38 == 2168.222222222222d);
        org.junit.Assert.assertTrue(Double.isNaN(double45));
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[-1.0, 2168.222222222222, 16.566666666418314, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 2168.222222222222d + "'", double65 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + long68 + "' != '" + 0L + "'", long68 == 0L);
        org.junit.Assert.assertTrue("'" + long69 + "' != '" + 0L + "'", long69 == 0L);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray79), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double80 + "' != '" + 2168.222222222222d + "'", double80 == 2168.222222222222d);
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray84), "[1.0, 100.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double85 + "' != '" + 2178.0d + "'", double85 == 2178.0d);
    }

    @Test
    public void test1225() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1225");
        org.apache.commons.math.stat.descriptive.moment.Variance variance0 = new org.apache.commons.math.stat.descriptive.moment.Variance();
        double double1 = variance0.getResult();
        long long2 = variance0.getN();
        org.junit.Assert.assertTrue(Double.isNaN(double1));
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
    }

    @Test
    public void test1226() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1226");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray8 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double9 = variance1.evaluate(doubleArray8);
        variance1.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance13 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray20 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double21 = variance13.evaluate(doubleArray20);
        variance13.setBiasCorrected(true);
        boolean boolean24 = variance13.isBiasCorrected();
        double[] doubleArray31 = new double[] { (short) 0, 1.0d, 1L, 0.0d, (-1.0d), 10L };
        double double32 = variance13.evaluate(doubleArray31);
        double double35 = variance1.evaluate(doubleArray31, (int) (byte) 1, (int) (byte) 0);
        long long36 = variance1.getN();
        boolean boolean37 = variance1.isBiasCorrected();
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 2168.222222222222d + "'", double9 == 2168.222222222222d);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 2168.222222222222d + "'", double21 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[0.0, 1.0, 1.0, 0.0, -1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 16.566666666666663d + "'", double32 == 16.566666666666663d);
        org.junit.Assert.assertTrue(Double.isNaN(double35));
        org.junit.Assert.assertTrue("'" + long36 + "' != '" + 0L + "'", long36 == 0L);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
    }

    @Test
    public void test1227() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1227");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray8 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double9 = variance1.evaluate(doubleArray8);
        variance1.setBiasCorrected(true);
        variance1.clear();
        variance1.increment((double) 100.0f);
        org.apache.commons.math.stat.descriptive.moment.Variance variance16 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray23 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double24 = variance16.evaluate(doubleArray23);
        variance16.setBiasCorrected(true);
        long long27 = variance16.getN();
        variance16.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance30 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray37 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double38 = variance30.evaluate(doubleArray37);
        double[] doubleArray42 = new double[] { (byte) 1, (byte) 100, 1L };
        double double43 = variance30.evaluate(doubleArray42);
        org.apache.commons.math.stat.descriptive.moment.Variance variance45 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray52 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double53 = variance45.evaluate(doubleArray52);
        variance45.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance57 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray64 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double65 = variance57.evaluate(doubleArray64);
        variance45.incrementAll(doubleArray64);
        variance30.incrementAll(doubleArray64);
        variance16.incrementAll(doubleArray64, (int) (byte) 1, (int) (short) 1);
        double double72 = variance1.evaluate(doubleArray64, (double) (short) 10);
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 2168.222222222222d + "'", double9 == 2168.222222222222d);
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 2168.222222222222d + "'", double24 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + long27 + "' != '" + 0L + "'", long27 == 0L);
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 2168.222222222222d + "'", double38 == 2168.222222222222d);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[1.0, 100.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 2178.0d + "'", double43 == 2178.0d);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 2168.222222222222d + "'", double53 == 2168.222222222222d);
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 2168.222222222222d + "'", double65 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 2601.866666666667d + "'", double72 == 2601.866666666667d);
    }

    @Test
    public void test1228() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1228");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray8 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double9 = variance1.evaluate(doubleArray8);
        long long10 = variance1.getN();
        variance1.increment(874596.4092824734d);
        variance1.setBiasCorrected(false);
        boolean boolean15 = variance1.isBiasCorrected();
        org.apache.commons.math.stat.descriptive.moment.Variance variance17 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray24 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double25 = variance17.evaluate(doubleArray24);
        variance17.setBiasCorrected(true);
        boolean boolean28 = variance17.isBiasCorrected();
        double[] doubleArray35 = new double[] { (short) 0, 1.0d, 1L, 0.0d, (-1.0d), 10L };
        double double36 = variance17.evaluate(doubleArray35);
        boolean boolean38 = variance17.equals((java.lang.Object) 10.0d);
        boolean boolean39 = variance17.isBiasCorrected();
        org.apache.commons.math.stat.descriptive.moment.Variance variance41 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        boolean boolean42 = variance17.equals((java.lang.Object) false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance44 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray51 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double52 = variance44.evaluate(doubleArray51);
        variance44.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance56 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray63 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double64 = variance56.evaluate(doubleArray63);
        variance44.incrementAll(doubleArray63);
        double double67 = variance17.evaluate(doubleArray63, (double) 100.0f);
        variance17.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance70 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray77 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double78 = variance70.evaluate(doubleArray77);
        variance70.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance82 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray89 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double90 = variance82.evaluate(doubleArray89);
        variance70.incrementAll(doubleArray89);
        variance17.incrementAll(doubleArray89);
        double double94 = variance1.evaluate(doubleArray89, 16.566666666667153d);
        double[] doubleArray95 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double96 = variance1.evaluate(doubleArray95);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: input values array is null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 2168.222222222222d + "'", double9 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 0L + "'", long10 == 0L);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 2168.222222222222d + "'", double25 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[0.0, 1.0, 1.0, 0.0, -1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 16.566666666666663d + "'", double36 == 16.566666666666663d);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 2168.222222222222d + "'", double52 == 2168.222222222222d);
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 2168.222222222222d + "'", double64 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 2601.8666666666663d + "'", double67 == 2601.8666666666663d);
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray77), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double78 + "' != '" + 2168.222222222222d + "'", double78 == 2168.222222222222d);
        org.junit.Assert.assertNotNull(doubleArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray89), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double90 + "' != '" + 2168.222222222222d + "'", double90 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + double94 + "' != '" + 2168.2222222222226d + "'", double94 == 2168.2222222222226d);
    }

    @Test
    public void test1229() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1229");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray8 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double9 = variance1.evaluate(doubleArray8);
        variance1.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance13 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray20 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double21 = variance13.evaluate(doubleArray20);
        variance1.incrementAll(doubleArray20);
        variance1.clear();
        variance1.setBiasCorrected(false);
        long long26 = variance1.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance28 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray35 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double36 = variance28.evaluate(doubleArray35);
        variance28.clear();
        variance28.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance41 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray48 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double49 = variance41.evaluate(doubleArray48);
        variance41.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance53 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray60 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double61 = variance53.evaluate(doubleArray60);
        variance53.setBiasCorrected(true);
        boolean boolean64 = variance53.isBiasCorrected();
        double[] doubleArray71 = new double[] { (short) 0, 1.0d, 1L, 0.0d, (-1.0d), 10L };
        double double72 = variance53.evaluate(doubleArray71);
        double double75 = variance41.evaluate(doubleArray71, (int) (byte) 1, (int) (byte) 0);
        variance28.incrementAll(doubleArray71);
        double double77 = variance1.evaluate(doubleArray71);
        double double78 = variance1.getResult();
        variance1.clear();
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 2168.222222222222d + "'", double9 == 2168.222222222222d);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 2168.222222222222d + "'", double21 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + long26 + "' != '" + 0L + "'", long26 == 0L);
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 2168.222222222222d + "'", double36 == 2168.222222222222d);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 2168.222222222222d + "'", double49 == 2168.222222222222d);
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 2168.222222222222d + "'", double61 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[0.0, 1.0, 1.0, 0.0, -1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 16.566666666666663d + "'", double72 == 16.566666666666663d);
        org.junit.Assert.assertTrue(Double.isNaN(double75));
        org.junit.Assert.assertTrue("'" + double77 + "' != '" + 13.805555555555552d + "'", double77 == 13.805555555555552d);
        org.junit.Assert.assertTrue(Double.isNaN(double78));
    }

    @Test
    public void test1230() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1230");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(true);
        double double2 = variance1.getResult();
        boolean boolean3 = variance1.isBiasCorrected();
        org.apache.commons.math.stat.descriptive.moment.Variance variance5 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray12 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double13 = variance5.evaluate(doubleArray12);
        variance5.setBiasCorrected(true);
        long long16 = variance5.getN();
        long long17 = variance5.getN();
        boolean boolean19 = variance5.equals((java.lang.Object) 16.566666666666663d);
        boolean boolean21 = variance5.equals((java.lang.Object) (short) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance23 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray30 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double31 = variance23.evaluate(doubleArray30);
        variance23.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance35 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray42 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double43 = variance35.evaluate(doubleArray42);
        variance35.setBiasCorrected(true);
        boolean boolean46 = variance35.isBiasCorrected();
        double[] doubleArray53 = new double[] { (short) 0, 1.0d, 1L, 0.0d, (-1.0d), 10L };
        double double54 = variance35.evaluate(doubleArray53);
        org.apache.commons.math.stat.descriptive.moment.Variance variance56 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray63 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double64 = variance56.evaluate(doubleArray63);
        variance56.setBiasCorrected(true);
        boolean boolean67 = variance56.isBiasCorrected();
        double[] doubleArray74 = new double[] { (short) 0, 1.0d, 1L, 0.0d, (-1.0d), 10L };
        double double75 = variance56.evaluate(doubleArray74);
        double double78 = variance35.evaluate(doubleArray74, (int) (byte) 1, 0);
        double double80 = variance23.evaluate(doubleArray74, 2178.0d);
        double double81 = variance5.evaluate(doubleArray74);
        boolean boolean83 = variance5.equals((java.lang.Object) (short) 100);
        boolean boolean84 = variance1.equals((java.lang.Object) variance5);
        double[] doubleArray85 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double89 = variance5.evaluate(doubleArray85, 0.0d, (int) 'a', (-1));
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: input value array is null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue(Double.isNaN(double2));
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 2168.222222222222d + "'", double13 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 0L + "'", long16 == 0L);
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + 0L + "'", long17 == 0L);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 2168.222222222222d + "'", double31 == 2168.222222222222d);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 2168.222222222222d + "'", double43 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray53), "[0.0, 1.0, 1.0, 0.0, -1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 16.566666666666663d + "'", double54 == 16.566666666666663d);
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 2168.222222222222d + "'", double64 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray74), "[0.0, 1.0, 1.0, 0.0, -1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double75 + "' != '" + 16.566666666666663d + "'", double75 == 16.566666666666663d);
        org.junit.Assert.assertTrue(Double.isNaN(double78));
        org.junit.Assert.assertTrue("'" + double80 + "' != '" + 16.566666666418314d + "'", double80 == 16.566666666418314d);
        org.junit.Assert.assertTrue("'" + double81 + "' != '" + 16.566666666666663d + "'", double81 == 16.566666666666663d);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
    }

    @Test
    public void test1231() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1231");
        org.apache.commons.math.stat.descriptive.moment.Variance variance0 = new org.apache.commons.math.stat.descriptive.moment.Variance();
        double double1 = variance0.getResult();
        double double2 = variance0.getResult();
        variance0.setBiasCorrected(false);
        org.junit.Assert.assertTrue(Double.isNaN(double1));
        org.junit.Assert.assertTrue(Double.isNaN(double2));
    }

    @Test
    public void test1232() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1232");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray8 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double9 = variance1.evaluate(doubleArray8);
        double[] doubleArray13 = new double[] { (byte) 1, (byte) 100, 1L };
        double double14 = variance1.evaluate(doubleArray13);
        org.apache.commons.math.stat.descriptive.moment.Variance variance16 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray23 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double24 = variance16.evaluate(doubleArray23);
        variance16.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance28 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray35 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double36 = variance28.evaluate(doubleArray35);
        variance16.incrementAll(doubleArray35);
        variance1.incrementAll(doubleArray35);
        long long39 = variance1.getN();
        java.lang.Class<?> wildcardClass40 = variance1.getClass();
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 2168.222222222222d + "'", double9 == 2168.222222222222d);
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[1.0, 100.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 2178.0d + "'", double14 == 2178.0d);
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 2168.222222222222d + "'", double24 == 2168.222222222222d);
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 2168.222222222222d + "'", double36 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + long39 + "' != '" + 6L + "'", long39 == 6L);
        org.junit.Assert.assertNotNull(wildcardClass40);
    }

    @Test
    public void test1233() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1233");
        org.apache.commons.math.stat.descriptive.moment.Variance variance0 = new org.apache.commons.math.stat.descriptive.moment.Variance();
        variance0.increment(1694.7000000000003d);
        double double3 = variance0.getResult();
        variance0.increment((double) 'a');
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment7 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance8 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment7);
        double[] doubleArray9 = new double[] {};
        double double12 = variance8.evaluate(doubleArray9, 0, 0);
        boolean boolean14 = variance8.equals((java.lang.Object) 10.0f);
        boolean boolean15 = variance8.isBiasCorrected();
        variance8.clear();
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean17 = variance0.equals((java.lang.Object) variance8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 0.0d + "'", double3 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double12));
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
    }

    @Test
    public void test1234() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1234");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray8 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double9 = variance1.evaluate(doubleArray8);
        variance1.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance13 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray20 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double21 = variance13.evaluate(doubleArray20);
        variance1.incrementAll(doubleArray20);
        variance1.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance25 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray32 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double33 = variance25.evaluate(doubleArray32);
        double[] doubleArray37 = new double[] { (byte) 1, (byte) 100, 1L };
        double double38 = variance25.evaluate(doubleArray37);
        variance1.incrementAll(doubleArray37, (int) (byte) 0, (int) (byte) 1);
        variance1.increment(16.566666666666666d);
        variance1.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance46 = new org.apache.commons.math.stat.descriptive.moment.Variance();
        double double47 = variance46.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance49 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray56 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double57 = variance49.evaluate(doubleArray56);
        variance49.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance61 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray68 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double69 = variance61.evaluate(doubleArray68);
        variance49.incrementAll(doubleArray68);
        boolean boolean71 = variance46.equals((java.lang.Object) variance49);
        org.apache.commons.math.stat.descriptive.moment.Variance variance73 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray80 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double81 = variance73.evaluate(doubleArray80);
        variance73.clear();
        boolean boolean83 = variance49.equals((java.lang.Object) variance73);
        boolean boolean84 = variance1.equals((java.lang.Object) variance49);
        double double85 = variance49.getResult();
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 2168.222222222222d + "'", double9 == 2168.222222222222d);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 2168.222222222222d + "'", double21 == 2168.222222222222d);
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 2168.222222222222d + "'", double33 == 2168.222222222222d);
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[1.0, 100.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 2178.0d + "'", double38 == 2178.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double47));
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 2168.222222222222d + "'", double57 == 2168.222222222222d);
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 2168.222222222222d + "'", double69 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray80), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double81 + "' != '" + 2168.222222222222d + "'", double81 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertTrue("'" + double85 + "' != '" + 2601.866666666667d + "'", double85 == 2601.866666666667d);
    }

    @Test
    public void test1235() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1235");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray8 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double9 = variance1.evaluate(doubleArray8);
        variance1.setBiasCorrected(true);
        boolean boolean12 = variance1.isBiasCorrected();
        org.apache.commons.math.stat.descriptive.moment.Variance variance14 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray21 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double22 = variance14.evaluate(doubleArray21);
        variance14.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance26 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray33 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double34 = variance26.evaluate(doubleArray33);
        variance14.incrementAll(doubleArray33);
        variance14.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance38 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray45 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double46 = variance38.evaluate(doubleArray45);
        double[] doubleArray50 = new double[] { (byte) 1, (byte) 100, 1L };
        double double51 = variance38.evaluate(doubleArray50);
        variance14.incrementAll(doubleArray50, (int) (byte) 0, (int) (byte) 1);
        double double56 = variance1.evaluate(doubleArray50, (double) '4');
        boolean boolean57 = variance1.isBiasCorrected();
        double double58 = variance1.getResult();
        long long59 = variance1.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance61 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray68 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double69 = variance61.evaluate(doubleArray68);
        variance61.setBiasCorrected(true);
        variance61.increment((double) (byte) 0);
        double[] doubleArray76 = new double[] { 'a', 100L };
        double double78 = variance61.evaluate(doubleArray76, 0.0d);
        double double79 = variance61.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance81 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance81.clear();
        double double83 = variance81.getResult();
        double[] doubleArray88 = new double[] { (-1), 2168.222222222222d, 16.566666666418314d, 10.0d };
        variance81.incrementAll(doubleArray88);
        variance61.incrementAll(doubleArray88, (int) (short) 1, 1);
        double double94 = variance1.evaluate(doubleArray88, (double) 4L);
        variance1.setBiasCorrected(true);
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 2168.222222222222d + "'", double9 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 2168.222222222222d + "'", double22 == 2168.222222222222d);
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 2168.222222222222d + "'", double34 == 2168.222222222222d);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 2168.222222222222d + "'", double46 == 2168.222222222222d);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[1.0, 100.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 2178.0d + "'", double51 == 2178.0d);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 3267.0d + "'", double56 == 3267.0d);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double58));
        org.junit.Assert.assertTrue("'" + long59 + "' != '" + 0L + "'", long59 == 0L);
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 2168.222222222222d + "'", double69 == 2168.222222222222d);
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[97.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double78 + "' != '" + 4.5d + "'", double78 == 4.5d);
        org.junit.Assert.assertTrue("'" + double79 + "' != '" + 0.0d + "'", double79 == 0.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double83));
        org.junit.Assert.assertNotNull(doubleArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray88), "[-1.0, 2168.222222222222, 16.566666666418314, 10.0]");
        org.junit.Assert.assertTrue("'" + double94 + "' != '" + 1166128.5457099646d + "'", double94 == 1166128.5457099646d);
    }

    @Test
    public void test1236() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1236");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance1.clear();
        double double3 = variance1.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance5 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray12 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double13 = variance5.evaluate(doubleArray12);
        variance5.setBiasCorrected(true);
        boolean boolean16 = variance5.isBiasCorrected();
        double[] doubleArray23 = new double[] { (short) 0, 1.0d, 1L, 0.0d, (-1.0d), 10L };
        double double24 = variance5.evaluate(doubleArray23);
        org.apache.commons.math.stat.descriptive.moment.Variance variance26 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray33 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double34 = variance26.evaluate(doubleArray33);
        variance26.setBiasCorrected(true);
        boolean boolean37 = variance26.isBiasCorrected();
        double[] doubleArray44 = new double[] { (short) 0, 1.0d, 1L, 0.0d, (-1.0d), 10L };
        double double45 = variance26.evaluate(doubleArray44);
        double double48 = variance5.evaluate(doubleArray44, (int) (byte) 1, 0);
        variance5.setBiasCorrected(true);
        variance5.setBiasCorrected(true);
        double double53 = variance5.getResult();
        boolean boolean54 = variance5.isBiasCorrected();
        boolean boolean55 = variance5.isBiasCorrected();
        long long56 = variance5.getN();
        variance5.clear();
        boolean boolean58 = variance1.equals((java.lang.Object) variance5);
        long long59 = variance1.getN();
        boolean boolean60 = variance1.isBiasCorrected();
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 2168.222222222222d + "'", double13 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[0.0, 1.0, 1.0, 0.0, -1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 16.566666666666663d + "'", double24 == 16.566666666666663d);
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 2168.222222222222d + "'", double34 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[0.0, 1.0, 1.0, 0.0, -1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 16.566666666666663d + "'", double45 == 16.566666666666663d);
        org.junit.Assert.assertTrue(Double.isNaN(double48));
        org.junit.Assert.assertTrue(Double.isNaN(double53));
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + long56 + "' != '" + 0L + "'", long56 == 0L);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertTrue("'" + long59 + "' != '" + 0L + "'", long59 == 0L);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
    }

    @Test
    public void test1237() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1237");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray8 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double9 = variance1.evaluate(doubleArray8);
        variance1.setBiasCorrected(true);
        long long12 = variance1.getN();
        long long13 = variance1.getN();
        boolean boolean14 = variance1.isBiasCorrected();
        org.apache.commons.math.stat.descriptive.moment.Variance variance16 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray23 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double24 = variance16.evaluate(doubleArray23);
        double[] doubleArray28 = new double[] { (byte) 1, (byte) 100, 1L };
        double double29 = variance16.evaluate(doubleArray28);
        variance1.incrementAll(doubleArray28, (int) (short) 1, 0);
        long long33 = variance1.getN();
        variance1.increment(1175056.0d);
        variance1.increment(16.566666666418314d);
        variance1.setBiasCorrected(true);
        long long40 = variance1.getN();
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 2168.222222222222d + "'", double9 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 0L + "'", long12 == 0L);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 0L + "'", long13 == 0L);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 2168.222222222222d + "'", double24 == 2168.222222222222d);
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[1.0, 100.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 2178.0d + "'", double29 == 2178.0d);
        org.junit.Assert.assertTrue("'" + long33 + "' != '" + 0L + "'", long33 == 0L);
        org.junit.Assert.assertTrue("'" + long40 + "' != '" + 2L + "'", long40 == 2L);
    }

    @Test
    public void test1238() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1238");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray8 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double9 = variance1.evaluate(doubleArray8);
        variance1.setBiasCorrected(true);
        boolean boolean12 = variance1.isBiasCorrected();
        double[] doubleArray19 = new double[] { (short) 0, 1.0d, 1L, 0.0d, (-1.0d), 10L };
        double double20 = variance1.evaluate(doubleArray19);
        double double21 = variance1.getResult();
        variance1.setBiasCorrected(true);
        long long24 = variance1.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance26 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray33 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double34 = variance26.evaluate(doubleArray33);
        variance26.setBiasCorrected(true);
        boolean boolean37 = variance26.isBiasCorrected();
        double[] doubleArray44 = new double[] { (short) 0, 1.0d, 1L, 0.0d, (-1.0d), 10L };
        double double45 = variance26.evaluate(doubleArray44);
        double double46 = variance26.getResult();
        variance26.setBiasCorrected(true);
        long long49 = variance26.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance51 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray58 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double59 = variance51.evaluate(doubleArray58);
        variance51.setBiasCorrected(true);
        boolean boolean62 = variance51.isBiasCorrected();
        double[] doubleArray69 = new double[] { (short) 0, 1.0d, 1L, 0.0d, (-1.0d), 10L };
        double double70 = variance51.evaluate(doubleArray69);
        boolean boolean72 = variance51.equals((java.lang.Object) 10.0d);
        org.apache.commons.math.stat.descriptive.moment.Variance variance74 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray81 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double82 = variance74.evaluate(doubleArray81);
        variance74.setBiasCorrected(true);
        boolean boolean85 = variance74.isBiasCorrected();
        double[] doubleArray92 = new double[] { (short) 0, 1.0d, 1L, 0.0d, (-1.0d), 10L };
        double double93 = variance74.evaluate(doubleArray92);
        double double95 = variance51.evaluate(doubleArray92, (double) 0.0f);
        variance26.incrementAll(doubleArray92);
        double double97 = variance1.evaluate(doubleArray92);
        long long98 = variance1.getN();
        java.lang.Class<?> wildcardClass99 = variance1.getClass();
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 2168.222222222222d + "'", double9 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[0.0, 1.0, 1.0, 0.0, -1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 16.566666666666663d + "'", double20 == 16.566666666666663d);
        org.junit.Assert.assertTrue(Double.isNaN(double21));
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + 0L + "'", long24 == 0L);
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 2168.222222222222d + "'", double34 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[0.0, 1.0, 1.0, 0.0, -1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 16.566666666666663d + "'", double45 == 16.566666666666663d);
        org.junit.Assert.assertTrue(Double.isNaN(double46));
        org.junit.Assert.assertTrue("'" + long49 + "' != '" + 0L + "'", long49 == 0L);
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 2168.222222222222d + "'", double59 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[0.0, 1.0, 1.0, 0.0, -1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + 16.566666666666663d + "'", double70 == 16.566666666666663d);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray81), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double82 + "' != '" + 2168.222222222222d + "'", double82 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + true + "'", boolean85 == true);
        org.junit.Assert.assertNotNull(doubleArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray92), "[0.0, 1.0, 1.0, 0.0, -1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double93 + "' != '" + 16.566666666666663d + "'", double93 == 16.566666666666663d);
        org.junit.Assert.assertTrue("'" + double95 + "' != '" + 16.566666666666666d + "'", double95 == 16.566666666666666d);
        org.junit.Assert.assertTrue("'" + double97 + "' != '" + 16.566666666666663d + "'", double97 == 16.566666666666663d);
        org.junit.Assert.assertTrue("'" + long98 + "' != '" + 0L + "'", long98 == 0L);
        org.junit.Assert.assertNotNull(wildcardClass99);
    }

    @Test
    public void test1239() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1239");
        org.apache.commons.math.stat.descriptive.moment.Variance variance0 = new org.apache.commons.math.stat.descriptive.moment.Variance();
        double double1 = variance0.getResult();
        boolean boolean2 = variance0.isBiasCorrected();
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true);
        double double5 = variance4.getResult();
        double double6 = variance4.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance8 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray15 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double16 = variance8.evaluate(doubleArray15);
        variance8.clear();
        variance8.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance21 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance21.clear();
        double double23 = variance21.getResult();
        double[] doubleArray28 = new double[] { (-1), 2168.222222222222d, 16.566666666418314d, 10.0d };
        variance21.incrementAll(doubleArray28);
        boolean boolean30 = variance8.equals((java.lang.Object) doubleArray28);
        double double32 = variance4.evaluate(doubleArray28, (double) (-1.0f));
        double double34 = variance0.evaluate(doubleArray28, (double) (-1L));
        variance0.increment(2.25d);
        org.apache.commons.math.stat.descriptive.moment.Variance variance38 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray45 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double46 = variance38.evaluate(doubleArray45);
        variance38.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance50 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray57 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double58 = variance50.evaluate(doubleArray57);
        variance38.incrementAll(doubleArray57);
        variance0.incrementAll(doubleArray57, (int) (byte) 1, 1);
        variance0.increment(16.566666666666666d);
        boolean boolean65 = variance0.isBiasCorrected();
        org.junit.Assert.assertTrue(Double.isNaN(double1));
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 2168.222222222222d + "'", double16 == 2168.222222222222d);
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[-1.0, 2168.222222222222, 16.566666666418314, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 1166128.5457099646d + "'", double32 == 1166128.5457099646d);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 1166128.5457099646d + "'", double34 == 1166128.5457099646d);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 2168.222222222222d + "'", double46 == 2168.222222222222d);
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 2168.222222222222d + "'", double58 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
    }

    @Test
    public void test1240() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1240");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance1.clear();
        boolean boolean3 = variance1.isBiasCorrected();
        org.apache.commons.math.stat.descriptive.moment.Variance variance5 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray12 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double13 = variance5.evaluate(doubleArray12);
        variance5.setBiasCorrected(true);
        long long16 = variance5.getN();
        long long17 = variance5.getN();
        double double18 = variance5.getResult();
        variance5.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance21 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray28 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double29 = variance21.evaluate(doubleArray28);
        double[] doubleArray33 = new double[] { (byte) 1, (byte) 100, 1L };
        double double34 = variance21.evaluate(doubleArray33);
        org.apache.commons.math.stat.descriptive.moment.Variance variance36 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray43 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double44 = variance36.evaluate(doubleArray43);
        variance36.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance48 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray55 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double56 = variance48.evaluate(doubleArray55);
        variance36.incrementAll(doubleArray55);
        variance21.incrementAll(doubleArray55);
        double double59 = variance5.evaluate(doubleArray55);
        double double60 = variance1.evaluate(doubleArray55);
        long long61 = variance1.getN();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 2168.222222222222d + "'", double13 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 0L + "'", long16 == 0L);
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + 0L + "'", long17 == 0L);
        org.junit.Assert.assertTrue(Double.isNaN(double18));
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 2168.222222222222d + "'", double29 == 2168.222222222222d);
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[1.0, 100.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 2178.0d + "'", double34 == 2178.0d);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 2168.222222222222d + "'", double44 == 2168.222222222222d);
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 2168.222222222222d + "'", double56 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 2601.866666666667d + "'", double59 == 2601.866666666667d);
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 2168.222222222222d + "'", double60 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + long61 + "' != '" + 0L + "'", long61 == 0L);
    }

    @Test
    public void test1241() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1241");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray8 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double9 = variance1.evaluate(doubleArray8);
        variance1.clear();
        variance1.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance14 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance14.clear();
        double double16 = variance14.getResult();
        double[] doubleArray21 = new double[] { (-1), 2168.222222222222d, 16.566666666418314d, 10.0d };
        variance14.incrementAll(doubleArray21);
        boolean boolean23 = variance1.equals((java.lang.Object) doubleArray21);
        variance1.setBiasCorrected(false);
        boolean boolean26 = variance1.isBiasCorrected();
        org.apache.commons.math.stat.descriptive.moment.Variance variance28 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray35 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double36 = variance28.evaluate(doubleArray35);
        long long37 = variance28.getN();
        variance28.increment(874596.4092824734d);
        variance28.increment((double) (byte) 100);
        org.apache.commons.math.stat.descriptive.moment.Variance variance43 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray50 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double51 = variance43.evaluate(doubleArray50);
        double[] doubleArray55 = new double[] { (byte) 1, (byte) 100, 1L };
        double double56 = variance43.evaluate(doubleArray55);
        org.apache.commons.math.stat.descriptive.moment.Variance variance58 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray65 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double66 = variance58.evaluate(doubleArray65);
        variance58.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance70 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray77 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double78 = variance70.evaluate(doubleArray77);
        variance58.incrementAll(doubleArray77);
        variance43.incrementAll(doubleArray77);
        variance28.incrementAll(doubleArray77);
        double double83 = variance1.evaluate(doubleArray77, (double) (byte) 10);
        java.lang.Class<?> wildcardClass84 = doubleArray77.getClass();
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 2168.222222222222d + "'", double9 == 2168.222222222222d);
        org.junit.Assert.assertTrue(Double.isNaN(double16));
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[-1.0, 2168.222222222222, 16.566666666418314, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 2168.222222222222d + "'", double36 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + long37 + "' != '" + 0L + "'", long37 == 0L);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 2168.222222222222d + "'", double51 == 2168.222222222222d);
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[1.0, 100.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 2178.0d + "'", double56 == 2178.0d);
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 2168.222222222222d + "'", double66 == 2168.222222222222d);
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray77), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double78 + "' != '" + 2168.222222222222d + "'", double78 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + 2168.222222222222d + "'", double83 == 2168.222222222222d);
        org.junit.Assert.assertNotNull(wildcardClass84);
    }

    @Test
    public void test1242() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1242");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray8 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double9 = variance1.evaluate(doubleArray8);
        variance1.setBiasCorrected(true);
        boolean boolean12 = variance1.isBiasCorrected();
        double[] doubleArray19 = new double[] { (short) 0, 1.0d, 1L, 0.0d, (-1.0d), 10L };
        double double20 = variance1.evaluate(doubleArray19);
        org.apache.commons.math.stat.descriptive.moment.Variance variance22 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray29 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double30 = variance22.evaluate(doubleArray29);
        variance22.setBiasCorrected(true);
        boolean boolean33 = variance22.isBiasCorrected();
        double[] doubleArray40 = new double[] { (short) 0, 1.0d, 1L, 0.0d, (-1.0d), 10L };
        double double41 = variance22.evaluate(doubleArray40);
        double double44 = variance1.evaluate(doubleArray40, (int) (byte) 1, 0);
        boolean boolean45 = variance1.isBiasCorrected();
        variance1.setBiasCorrected(true);
        variance1.increment(13.80555555555562d);
        long long50 = variance1.getN();
        variance1.clear();
        java.lang.Class<?> wildcardClass52 = variance1.getClass();
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 2168.222222222222d + "'", double9 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[0.0, 1.0, 1.0, 0.0, -1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 16.566666666666663d + "'", double20 == 16.566666666666663d);
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 2168.222222222222d + "'", double30 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[0.0, 1.0, 1.0, 0.0, -1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 16.566666666666663d + "'", double41 == 16.566666666666663d);
        org.junit.Assert.assertTrue(Double.isNaN(double44));
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + long50 + "' != '" + 1L + "'", long50 == 1L);
        org.junit.Assert.assertNotNull(wildcardClass52);
    }

    @Test
    public void test1243() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1243");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray8 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double9 = variance1.evaluate(doubleArray8);
        variance1.setBiasCorrected(true);
        boolean boolean12 = variance1.isBiasCorrected();
        double double13 = variance1.getResult();
        variance1.increment((double) 'a');
        boolean boolean16 = variance1.isBiasCorrected();
        variance1.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance19 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray26 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double27 = variance19.evaluate(doubleArray26);
        long long28 = variance19.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance30 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray37 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double38 = variance30.evaluate(doubleArray37);
        variance30.setBiasCorrected(true);
        long long41 = variance30.getN();
        variance30.clear();
        double double43 = variance30.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance45 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray52 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double53 = variance45.evaluate(doubleArray52);
        variance45.setBiasCorrected(true);
        boolean boolean56 = variance45.isBiasCorrected();
        double[] doubleArray63 = new double[] { (short) 0, 1.0d, 1L, 0.0d, (-1.0d), 10L };
        double double64 = variance45.evaluate(doubleArray63);
        boolean boolean66 = variance45.equals((java.lang.Object) 10.0d);
        org.apache.commons.math.stat.descriptive.moment.Variance variance68 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray75 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double76 = variance68.evaluate(doubleArray75);
        variance68.setBiasCorrected(true);
        boolean boolean79 = variance68.isBiasCorrected();
        double[] doubleArray86 = new double[] { (short) 0, 1.0d, 1L, 0.0d, (-1.0d), 10L };
        double double87 = variance68.evaluate(doubleArray86);
        double double89 = variance45.evaluate(doubleArray86, (double) 0.0f);
        variance30.incrementAll(doubleArray86);
        variance19.incrementAll(doubleArray86);
        // The following exception was thrown during execution in test generation
        try {
            variance1.incrementAll(doubleArray86, (int) '#', (int) 'a');
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: begin + length > values.length");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 2168.222222222222d + "'", double9 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double13));
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 2168.222222222222d + "'", double27 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + long28 + "' != '" + 0L + "'", long28 == 0L);
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 2168.222222222222d + "'", double38 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + long41 + "' != '" + 0L + "'", long41 == 0L);
        org.junit.Assert.assertTrue(Double.isNaN(double43));
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 2168.222222222222d + "'", double53 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[0.0, 1.0, 1.0, 0.0, -1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 16.566666666666663d + "'", double64 == 16.566666666666663d);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray75), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double76 + "' != '" + 2168.222222222222d + "'", double76 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray86), "[0.0, 1.0, 1.0, 0.0, -1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double87 + "' != '" + 16.566666666666663d + "'", double87 == 16.566666666666663d);
        org.junit.Assert.assertTrue("'" + double89 + "' != '" + 16.566666666666666d + "'", double89 == 16.566666666666666d);
    }

    @Test
    public void test1244() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1244");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance1.clear();
        double double3 = variance1.getResult();
        double[] doubleArray8 = new double[] { (-1), 2168.222222222222d, 16.566666666418314d, 10.0d };
        variance1.incrementAll(doubleArray8);
        org.apache.commons.math.stat.descriptive.moment.Variance variance11 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray18 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double19 = variance11.evaluate(doubleArray18);
        variance11.setBiasCorrected(true);
        boolean boolean22 = variance11.isBiasCorrected();
        double[] doubleArray29 = new double[] { (short) 0, 1.0d, 1L, 0.0d, (-1.0d), 10L };
        double double30 = variance11.evaluate(doubleArray29);
        double double31 = variance11.getResult();
        variance11.setBiasCorrected(true);
        boolean boolean34 = variance11.isBiasCorrected();
        variance11.setBiasCorrected(false);
        variance11.increment(2601.866666666667d);
        org.apache.commons.math.stat.descriptive.moment.Variance variance40 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray47 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double48 = variance40.evaluate(doubleArray47);
        variance40.clear();
        variance40.setBiasCorrected(true);
        double double52 = variance40.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance54 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray61 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double62 = variance54.evaluate(doubleArray61);
        double double63 = variance40.evaluate(doubleArray61);
        double double64 = variance11.evaluate(doubleArray61);
        double double65 = variance1.evaluate(doubleArray61);
        variance1.increment((double) 0.0f);
        double double68 = variance1.getResult();
        java.lang.Class<?> wildcardClass69 = variance1.getClass();
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-1.0, 2168.222222222222, 16.566666666418314, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 2168.222222222222d + "'", double19 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[0.0, 1.0, 1.0, 0.0, -1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 16.566666666666663d + "'", double30 == 16.566666666666663d);
        org.junit.Assert.assertTrue(Double.isNaN(double31));
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 2168.222222222222d + "'", double48 == 2168.222222222222d);
        org.junit.Assert.assertTrue(Double.isNaN(double52));
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 2168.222222222222d + "'", double62 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 2601.866666666667d + "'", double63 == 2601.866666666667d);
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 2168.222222222222d + "'", double64 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 2168.222222222222d + "'", double65 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 0.0d + "'", double68 == 0.0d);
        org.junit.Assert.assertNotNull(wildcardClass69);
    }

    @Test
    public void test1245() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1245");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance1.clear();
        double double3 = variance1.getResult();
        double double4 = variance1.getResult();
        variance1.clear();
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertTrue(Double.isNaN(double4));
    }

    @Test
    public void test1246() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1246");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray8 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double9 = variance1.evaluate(doubleArray8);
        variance1.setBiasCorrected(true);
        boolean boolean12 = variance1.isBiasCorrected();
        double[] doubleArray19 = new double[] { (short) 0, 1.0d, 1L, 0.0d, (-1.0d), 10L };
        double double20 = variance1.evaluate(doubleArray19);
        boolean boolean22 = variance1.equals((java.lang.Object) 10.0d);
        long long23 = variance1.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance25 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray32 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double33 = variance25.evaluate(doubleArray32);
        variance25.setBiasCorrected(true);
        variance25.increment((double) (byte) 0);
        variance25.clear();
        boolean boolean39 = variance25.isBiasCorrected();
        org.apache.commons.math.stat.descriptive.moment.Variance variance41 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray48 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double49 = variance41.evaluate(doubleArray48);
        variance41.setBiasCorrected(true);
        long long52 = variance41.getN();
        long long53 = variance41.getN();
        double double54 = variance41.getResult();
        variance41.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance57 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray64 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double65 = variance57.evaluate(doubleArray64);
        double[] doubleArray69 = new double[] { (byte) 1, (byte) 100, 1L };
        double double70 = variance57.evaluate(doubleArray69);
        org.apache.commons.math.stat.descriptive.moment.Variance variance72 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray79 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double80 = variance72.evaluate(doubleArray79);
        variance72.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance84 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray91 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double92 = variance84.evaluate(doubleArray91);
        variance72.incrementAll(doubleArray91);
        variance57.incrementAll(doubleArray91);
        double double95 = variance41.evaluate(doubleArray91);
        variance25.incrementAll(doubleArray91);
        double double97 = variance1.evaluate(doubleArray91);
        java.lang.Class<?> wildcardClass98 = variance1.getClass();
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 2168.222222222222d + "'", double9 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[0.0, 1.0, 1.0, 0.0, -1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 16.566666666666663d + "'", double20 == 16.566666666666663d);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + long23 + "' != '" + 0L + "'", long23 == 0L);
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 2168.222222222222d + "'", double33 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 2168.222222222222d + "'", double49 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + long52 + "' != '" + 0L + "'", long52 == 0L);
        org.junit.Assert.assertTrue("'" + long53 + "' != '" + 0L + "'", long53 == 0L);
        org.junit.Assert.assertTrue(Double.isNaN(double54));
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 2168.222222222222d + "'", double65 == 2168.222222222222d);
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[1.0, 100.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + 2178.0d + "'", double70 == 2178.0d);
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray79), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double80 + "' != '" + 2168.222222222222d + "'", double80 == 2168.222222222222d);
        org.junit.Assert.assertNotNull(doubleArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray91), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double92 + "' != '" + 2168.222222222222d + "'", double92 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + double95 + "' != '" + 2601.866666666667d + "'", double95 == 2601.866666666667d);
        org.junit.Assert.assertTrue("'" + double97 + "' != '" + 2601.866666666667d + "'", double97 == 2601.866666666667d);
        org.junit.Assert.assertNotNull(wildcardClass98);
    }

    @Test
    public void test1247() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1247");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray8 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double9 = variance1.evaluate(doubleArray8);
        variance1.setBiasCorrected(true);
        boolean boolean12 = variance1.isBiasCorrected();
        double[] doubleArray19 = new double[] { (short) 0, 1.0d, 1L, 0.0d, (-1.0d), 10L };
        double double20 = variance1.evaluate(doubleArray19);
        org.apache.commons.math.stat.descriptive.moment.Variance variance22 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray29 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double30 = variance22.evaluate(doubleArray29);
        variance22.setBiasCorrected(true);
        boolean boolean33 = variance22.isBiasCorrected();
        double[] doubleArray40 = new double[] { (short) 0, 1.0d, 1L, 0.0d, (-1.0d), 10L };
        double double41 = variance22.evaluate(doubleArray40);
        double double44 = variance1.evaluate(doubleArray40, (int) (byte) 1, 0);
        boolean boolean45 = variance1.isBiasCorrected();
        variance1.setBiasCorrected(true);
        variance1.increment(13.80555555555562d);
        long long50 = variance1.getN();
        variance1.setBiasCorrected(true);
        double double53 = variance1.getResult();
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 2168.222222222222d + "'", double9 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[0.0, 1.0, 1.0, 0.0, -1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 16.566666666666663d + "'", double20 == 16.566666666666663d);
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 2168.222222222222d + "'", double30 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[0.0, 1.0, 1.0, 0.0, -1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 16.566666666666663d + "'", double41 == 16.566666666666663d);
        org.junit.Assert.assertTrue(Double.isNaN(double44));
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + long50 + "' != '" + 1L + "'", long50 == 1L);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 0.0d + "'", double53 == 0.0d);
    }

    @Test
    public void test1248() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1248");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray8 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double9 = variance1.evaluate(doubleArray8);
        variance1.setBiasCorrected(true);
        long long12 = variance1.getN();
        long long13 = variance1.getN();
        double double14 = variance1.getResult();
        variance1.increment((double) 0);
        org.apache.commons.math.stat.descriptive.moment.Variance variance18 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray25 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double26 = variance18.evaluate(doubleArray25);
        variance18.setBiasCorrected(true);
        boolean boolean29 = variance18.isBiasCorrected();
        double[] doubleArray36 = new double[] { (short) 0, 1.0d, 1L, 0.0d, (-1.0d), 10L };
        double double37 = variance18.evaluate(doubleArray36);
        double double38 = variance18.getResult();
        long long39 = variance18.getN();
        variance18.increment((double) '#');
        variance18.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance45 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray52 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double53 = variance45.evaluate(doubleArray52);
        variance45.setBiasCorrected(true);
        variance45.increment((double) (byte) 0);
        double[] doubleArray60 = new double[] { 'a', 100L };
        double double62 = variance45.evaluate(doubleArray60, 0.0d);
        variance18.incrementAll(doubleArray60);
        org.apache.commons.math.stat.descriptive.moment.Variance variance65 = new org.apache.commons.math.stat.descriptive.moment.Variance(true);
        double double66 = variance65.getResult();
        double double67 = variance65.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance69 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray76 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double77 = variance69.evaluate(doubleArray76);
        variance69.setBiasCorrected(true);
        long long80 = variance69.getN();
        variance69.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance83 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray90 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double91 = variance83.evaluate(doubleArray90);
        double double92 = variance69.evaluate(doubleArray90);
        variance65.incrementAll(doubleArray90);
        double double94 = variance18.evaluate(doubleArray90);
        // The following exception was thrown during execution in test generation
        try {
            variance1.incrementAll(doubleArray90, (int) (short) -1, (int) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: start position cannot be negative");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 2168.222222222222d + "'", double9 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 0L + "'", long12 == 0L);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 0L + "'", long13 == 0L);
        org.junit.Assert.assertTrue(Double.isNaN(double14));
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 2168.222222222222d + "'", double26 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[0.0, 1.0, 1.0, 0.0, -1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 16.566666666666663d + "'", double37 == 16.566666666666663d);
        org.junit.Assert.assertTrue(Double.isNaN(double38));
        org.junit.Assert.assertTrue("'" + long39 + "' != '" + 0L + "'", long39 == 0L);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 2168.222222222222d + "'", double53 == 2168.222222222222d);
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[97.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 4.5d + "'", double62 == 4.5d);
        org.junit.Assert.assertTrue(Double.isNaN(double66));
        org.junit.Assert.assertTrue(Double.isNaN(double67));
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double77 + "' != '" + 2168.222222222222d + "'", double77 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + long80 + "' != '" + 0L + "'", long80 == 0L);
        org.junit.Assert.assertNotNull(doubleArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray90), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double91 + "' != '" + 2168.222222222222d + "'", double91 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + double92 + "' != '" + 2601.866666666667d + "'", double92 == 2601.866666666667d);
        org.junit.Assert.assertTrue("'" + double94 + "' != '" + 2168.222222222222d + "'", double94 == 2168.222222222222d);
    }

    @Test
    public void test1249() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1249");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray8 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double9 = variance1.evaluate(doubleArray8);
        variance1.setBiasCorrected(true);
        boolean boolean12 = variance1.isBiasCorrected();
        double[] doubleArray19 = new double[] { (short) 0, 1.0d, 1L, 0.0d, (-1.0d), 10L };
        double double20 = variance1.evaluate(doubleArray19);
        org.apache.commons.math.stat.descriptive.moment.Variance variance22 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray29 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double30 = variance22.evaluate(doubleArray29);
        variance22.setBiasCorrected(true);
        boolean boolean33 = variance22.isBiasCorrected();
        double[] doubleArray40 = new double[] { (short) 0, 1.0d, 1L, 0.0d, (-1.0d), 10L };
        double double41 = variance22.evaluate(doubleArray40);
        double double44 = variance1.evaluate(doubleArray40, (int) (byte) 1, 0);
        boolean boolean45 = variance1.isBiasCorrected();
        variance1.setBiasCorrected(true);
        variance1.increment(13.80555555555562d);
        long long50 = variance1.getN();
        variance1.setBiasCorrected(true);
        variance1.increment(1175056.0d);
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 2168.222222222222d + "'", double9 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[0.0, 1.0, 1.0, 0.0, -1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 16.566666666666663d + "'", double20 == 16.566666666666663d);
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 2168.222222222222d + "'", double30 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[0.0, 1.0, 1.0, 0.0, -1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 16.566666666666663d + "'", double41 == 16.566666666666663d);
        org.junit.Assert.assertTrue(Double.isNaN(double44));
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + long50 + "' != '" + 1L + "'", long50 == 1L);
    }

    @Test
    public void test1250() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1250");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray8 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double9 = variance1.evaluate(doubleArray8);
        variance1.setBiasCorrected(true);
        long long12 = variance1.getN();
        variance1.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance15 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray22 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double23 = variance15.evaluate(doubleArray22);
        double double24 = variance1.evaluate(doubleArray22);
        variance1.setBiasCorrected(true);
        variance1.increment((double) '#');
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 2168.222222222222d + "'", double9 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 0L + "'", long12 == 0L);
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 2168.222222222222d + "'", double23 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 2601.866666666667d + "'", double24 == 2601.866666666667d);
    }

    @Test
    public void test1251() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1251");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray8 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double9 = variance1.evaluate(doubleArray8);
        variance1.setBiasCorrected(true);
        boolean boolean12 = variance1.isBiasCorrected();
        double[] doubleArray19 = new double[] { (short) 0, 1.0d, 1L, 0.0d, (-1.0d), 10L };
        double double20 = variance1.evaluate(doubleArray19);
        boolean boolean22 = variance1.equals((java.lang.Object) 10.0d);
        boolean boolean23 = variance1.isBiasCorrected();
        org.apache.commons.math.stat.descriptive.moment.Variance variance25 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        boolean boolean26 = variance1.equals((java.lang.Object) false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance28 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray35 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double36 = variance28.evaluate(doubleArray35);
        variance28.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance40 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray47 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double48 = variance40.evaluate(doubleArray47);
        variance28.incrementAll(doubleArray47);
        double double51 = variance1.evaluate(doubleArray47, (double) 100.0f);
        variance1.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance54 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray61 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double62 = variance54.evaluate(doubleArray61);
        variance54.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance66 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray73 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double74 = variance66.evaluate(doubleArray73);
        variance54.incrementAll(doubleArray73);
        variance1.incrementAll(doubleArray73);
        variance1.setBiasCorrected(true);
        variance1.increment((double) (short) 100);
        variance1.clear();
        double double82 = variance1.getResult();
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 2168.222222222222d + "'", double9 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[0.0, 1.0, 1.0, 0.0, -1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 16.566666666666663d + "'", double20 == 16.566666666666663d);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 2168.222222222222d + "'", double36 == 2168.222222222222d);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 2168.222222222222d + "'", double48 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 2601.8666666666663d + "'", double51 == 2601.8666666666663d);
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 2168.222222222222d + "'", double62 == 2168.222222222222d);
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double74 + "' != '" + 2168.222222222222d + "'", double74 == 2168.222222222222d);
        org.junit.Assert.assertTrue(Double.isNaN(double82));
    }

    @Test
    public void test1252() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1252");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray8 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double9 = variance1.evaluate(doubleArray8);
        variance1.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance13 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray20 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double21 = variance13.evaluate(doubleArray20);
        variance1.incrementAll(doubleArray20);
        variance1.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance25 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray32 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double33 = variance25.evaluate(doubleArray32);
        double[] doubleArray37 = new double[] { (byte) 1, (byte) 100, 1L };
        double double38 = variance25.evaluate(doubleArray37);
        variance1.incrementAll(doubleArray37, (int) (byte) 0, (int) (byte) 1);
        double double42 = variance1.getResult();
        long long43 = variance1.getN();
        java.lang.Class<?> wildcardClass44 = variance1.getClass();
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 2168.222222222222d + "'", double9 == 2168.222222222222d);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 2168.222222222222d + "'", double21 == 2168.222222222222d);
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 2168.222222222222d + "'", double33 == 2168.222222222222d);
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[1.0, 100.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 2178.0d + "'", double38 == 2178.0d);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 0.0d + "'", double42 == 0.0d);
        org.junit.Assert.assertTrue("'" + long43 + "' != '" + 1L + "'", long43 == 1L);
        org.junit.Assert.assertNotNull(wildcardClass44);
    }

    @Test
    public void test1253() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1253");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray8 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double9 = variance1.evaluate(doubleArray8);
        variance1.setBiasCorrected(true);
        long long12 = variance1.getN();
        long long13 = variance1.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance15 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray22 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double23 = variance15.evaluate(doubleArray22);
        double[] doubleArray27 = new double[] { (byte) 1, (byte) 100, 1L };
        double double28 = variance15.evaluate(doubleArray27);
        double double30 = variance1.evaluate(doubleArray27, (double) 10.0f);
        long long31 = variance1.getN();
        double double32 = variance1.getResult();
        variance1.setBiasCorrected(true);
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 2168.222222222222d + "'", double9 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 0L + "'", long12 == 0L);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 0L + "'", long13 == 0L);
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 2168.222222222222d + "'", double23 == 2168.222222222222d);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[1.0, 100.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 2178.0d + "'", double28 == 2178.0d);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 3267.0d + "'", double30 == 3267.0d);
        org.junit.Assert.assertTrue("'" + long31 + "' != '" + 0L + "'", long31 == 0L);
        org.junit.Assert.assertTrue(Double.isNaN(double32));
    }

    @Test
    public void test1254() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1254");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray8 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double9 = variance1.evaluate(doubleArray8);
        variance1.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance13 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray20 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double21 = variance13.evaluate(doubleArray20);
        variance13.setBiasCorrected(true);
        boolean boolean24 = variance13.isBiasCorrected();
        double[] doubleArray31 = new double[] { (short) 0, 1.0d, 1L, 0.0d, (-1.0d), 10L };
        double double32 = variance13.evaluate(doubleArray31);
        double double35 = variance1.evaluate(doubleArray31, (int) (byte) 1, (int) (byte) 0);
        org.apache.commons.math.stat.descriptive.moment.Variance variance37 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance39 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray46 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double47 = variance39.evaluate(doubleArray46);
        variance39.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance51 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray58 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double59 = variance51.evaluate(doubleArray58);
        variance51.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance63 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray70 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double71 = variance63.evaluate(doubleArray70);
        variance63.setBiasCorrected(true);
        boolean boolean74 = variance63.isBiasCorrected();
        double[] doubleArray81 = new double[] { (short) 0, 1.0d, 1L, 0.0d, (-1.0d), 10L };
        double double82 = variance63.evaluate(doubleArray81);
        double double85 = variance51.evaluate(doubleArray81, (int) (byte) 1, (int) (byte) 0);
        variance39.incrementAll(doubleArray81, (int) (byte) 1, 1);
        double double89 = variance37.evaluate(doubleArray81);
        double double90 = variance1.evaluate(doubleArray81);
        long long91 = variance1.getN();
        variance1.clear();
        variance1.setBiasCorrected(false);
        variance1.increment(13.805555555555552d);
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 2168.222222222222d + "'", double9 == 2168.222222222222d);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 2168.222222222222d + "'", double21 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[0.0, 1.0, 1.0, 0.0, -1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 16.566666666666663d + "'", double32 == 16.566666666666663d);
        org.junit.Assert.assertTrue(Double.isNaN(double35));
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 2168.222222222222d + "'", double47 == 2168.222222222222d);
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 2168.222222222222d + "'", double59 == 2168.222222222222d);
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + 2168.222222222222d + "'", double71 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray81), "[0.0, 1.0, 1.0, 0.0, -1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double82 + "' != '" + 16.566666666666663d + "'", double82 == 16.566666666666663d);
        org.junit.Assert.assertTrue(Double.isNaN(double85));
        org.junit.Assert.assertTrue("'" + double89 + "' != '" + 13.805555555555552d + "'", double89 == 13.805555555555552d);
        org.junit.Assert.assertTrue("'" + double90 + "' != '" + 16.566666666666663d + "'", double90 == 16.566666666666663d);
        org.junit.Assert.assertTrue("'" + long91 + "' != '" + 0L + "'", long91 == 0L);
    }

    @Test
    public void test1255() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1255");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment1 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance2 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment1);
        variance2.increment(0.0d);
        variance2.clear();
        variance2.increment((double) (-1));
        boolean boolean8 = variance2.isBiasCorrected();
        boolean boolean9 = variance2.isBiasCorrected();
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
    }

    @Test
    public void test1256() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1256");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray8 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double9 = variance1.evaluate(doubleArray8);
        variance1.setBiasCorrected(true);
        boolean boolean12 = variance1.isBiasCorrected();
        double[] doubleArray19 = new double[] { (short) 0, 1.0d, 1L, 0.0d, (-1.0d), 10L };
        double double20 = variance1.evaluate(doubleArray19);
        boolean boolean22 = variance1.equals((java.lang.Object) 10.0d);
        boolean boolean23 = variance1.isBiasCorrected();
        org.apache.commons.math.stat.descriptive.moment.Variance variance25 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        boolean boolean26 = variance1.equals((java.lang.Object) false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance28 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray35 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double36 = variance28.evaluate(doubleArray35);
        variance28.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance40 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray47 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double48 = variance40.evaluate(doubleArray47);
        variance28.incrementAll(doubleArray47);
        double double51 = variance1.evaluate(doubleArray47, (double) 100.0f);
        variance1.clear();
        variance1.setBiasCorrected(false);
        variance1.setBiasCorrected(true);
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 2168.222222222222d + "'", double9 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[0.0, 1.0, 1.0, 0.0, -1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 16.566666666666663d + "'", double20 == 16.566666666666663d);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 2168.222222222222d + "'", double36 == 2168.222222222222d);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 2168.222222222222d + "'", double48 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 2601.8666666666663d + "'", double51 == 2601.8666666666663d);
    }

    @Test
    public void test1257() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1257");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray8 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double9 = variance1.evaluate(doubleArray8);
        variance1.setBiasCorrected(true);
        boolean boolean12 = variance1.isBiasCorrected();
        double[] doubleArray19 = new double[] { (short) 0, 1.0d, 1L, 0.0d, (-1.0d), 10L };
        double double20 = variance1.evaluate(doubleArray19);
        double double21 = variance1.getResult();
        variance1.setBiasCorrected(true);
        long long24 = variance1.getN();
        variance1.setBiasCorrected(true);
        boolean boolean27 = variance1.isBiasCorrected();
        org.apache.commons.math.stat.descriptive.moment.Variance variance29 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance29.clear();
        double double31 = variance29.getResult();
        double[] doubleArray36 = new double[] { (-1), 2168.222222222222d, 16.566666666418314d, 10.0d };
        variance29.incrementAll(doubleArray36);
        org.apache.commons.math.stat.descriptive.moment.Variance variance39 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray46 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double47 = variance39.evaluate(doubleArray46);
        variance39.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance51 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray58 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double59 = variance51.evaluate(doubleArray58);
        variance39.incrementAll(doubleArray58);
        variance39.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance63 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray70 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double71 = variance63.evaluate(doubleArray70);
        double[] doubleArray75 = new double[] { (byte) 1, (byte) 100, 1L };
        double double76 = variance63.evaluate(doubleArray75);
        variance39.incrementAll(doubleArray75, (int) (byte) 0, (int) (byte) 1);
        double double83 = variance29.evaluate(doubleArray75, (double) 'a', (int) (short) 1, (int) (short) 1);
        double double85 = variance1.evaluate(doubleArray75, 13.805555555555552d);
        long long86 = variance1.getN();
        double double87 = variance1.getResult();
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 2168.222222222222d + "'", double9 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[0.0, 1.0, 1.0, 0.0, -1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 16.566666666666663d + "'", double20 == 16.566666666666663d);
        org.junit.Assert.assertTrue(Double.isNaN(double21));
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + 0L + "'", long24 == 0L);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double31));
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[-1.0, 2168.222222222222, 16.566666666418314, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 2168.222222222222d + "'", double47 == 2168.222222222222d);
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 2168.222222222222d + "'", double59 == 2168.222222222222d);
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + 2168.222222222222d + "'", double71 == 2168.222222222222d);
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray75), "[1.0, 100.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double76 + "' != '" + 2178.0d + "'", double76 == 2178.0d);
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + 0.0d + "'", double83 == 0.0d);
        org.junit.Assert.assertTrue("'" + double85 + "' != '" + 3266.9999999999995d + "'", double85 == 3266.9999999999995d);
        org.junit.Assert.assertTrue("'" + long86 + "' != '" + 0L + "'", long86 == 0L);
        org.junit.Assert.assertTrue(Double.isNaN(double87));
    }

    @Test
    public void test1258() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1258");
        org.apache.commons.math.stat.descriptive.moment.Variance variance0 = new org.apache.commons.math.stat.descriptive.moment.Variance();
        double double1 = variance0.getResult();
        boolean boolean2 = variance0.isBiasCorrected();
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true);
        double double5 = variance4.getResult();
        double double6 = variance4.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance8 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray15 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double16 = variance8.evaluate(doubleArray15);
        variance8.clear();
        variance8.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance21 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance21.clear();
        double double23 = variance21.getResult();
        double[] doubleArray28 = new double[] { (-1), 2168.222222222222d, 16.566666666418314d, 10.0d };
        variance21.incrementAll(doubleArray28);
        boolean boolean30 = variance8.equals((java.lang.Object) doubleArray28);
        double double32 = variance4.evaluate(doubleArray28, (double) (-1.0f));
        double double34 = variance0.evaluate(doubleArray28, (double) (-1L));
        variance0.increment(2.25d);
        long long37 = variance0.getN();
        boolean boolean38 = variance0.isBiasCorrected();
        long long39 = variance0.getN();
        variance0.clear();
        org.junit.Assert.assertTrue(Double.isNaN(double1));
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 2168.222222222222d + "'", double16 == 2168.222222222222d);
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[-1.0, 2168.222222222222, 16.566666666418314, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 1166128.5457099646d + "'", double32 == 1166128.5457099646d);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 1166128.5457099646d + "'", double34 == 1166128.5457099646d);
        org.junit.Assert.assertTrue("'" + long37 + "' != '" + 1L + "'", long37 == 1L);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + long39 + "' != '" + 1L + "'", long39 == 1L);
    }

    @Test
    public void test1259() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1259");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray8 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double9 = variance1.evaluate(doubleArray8);
        variance1.setBiasCorrected(true);
        boolean boolean12 = variance1.isBiasCorrected();
        double[] doubleArray19 = new double[] { (short) 0, 1.0d, 1L, 0.0d, (-1.0d), 10L };
        double double20 = variance1.evaluate(doubleArray19);
        double double21 = variance1.getResult();
        long long22 = variance1.getN();
        java.lang.Object obj23 = null;
        boolean boolean24 = variance1.equals(obj23);
        double[] doubleArray25 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double28 = variance1.evaluate(doubleArray25, 100, (int) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: input value array is null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 2168.222222222222d + "'", double9 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[0.0, 1.0, 1.0, 0.0, -1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 16.566666666666663d + "'", double20 == 16.566666666666663d);
        org.junit.Assert.assertTrue(Double.isNaN(double21));
        org.junit.Assert.assertTrue("'" + long22 + "' != '" + 0L + "'", long22 == 0L);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
    }

    @Test
    public void test1260() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1260");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray8 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double9 = variance1.evaluate(doubleArray8);
        variance1.clear();
        variance1.setBiasCorrected(false);
        variance1.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance15 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray22 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double23 = variance15.evaluate(doubleArray22);
        variance15.setBiasCorrected(true);
        variance15.increment((double) (byte) 0);
        double[] doubleArray30 = new double[] { 'a', 100L };
        double double32 = variance15.evaluate(doubleArray30, 0.0d);
        double double33 = variance1.evaluate(doubleArray30);
        boolean boolean34 = variance1.isBiasCorrected();
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 2168.222222222222d + "'", double9 == 2168.222222222222d);
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 2168.222222222222d + "'", double23 == 2168.222222222222d);
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[97.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 4.5d + "'", double32 == 4.5d);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 2.25d + "'", double33 == 2.25d);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
    }

    @Test
    public void test1261() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1261");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray8 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double9 = variance1.evaluate(doubleArray8);
        variance1.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance13 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray20 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double21 = variance13.evaluate(doubleArray20);
        variance13.setBiasCorrected(true);
        boolean boolean24 = variance13.isBiasCorrected();
        double[] doubleArray31 = new double[] { (short) 0, 1.0d, 1L, 0.0d, (-1.0d), 10L };
        double double32 = variance13.evaluate(doubleArray31);
        double double35 = variance1.evaluate(doubleArray31, (int) (byte) 1, (int) (byte) 0);
        variance1.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance39 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray46 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double47 = variance39.evaluate(doubleArray46);
        variance39.setBiasCorrected(true);
        boolean boolean50 = variance39.isBiasCorrected();
        double[] doubleArray57 = new double[] { (short) 0, 1.0d, 1L, 0.0d, (-1.0d), 10L };
        double double58 = variance39.evaluate(doubleArray57);
        double double59 = variance39.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance61 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance61.clear();
        double double63 = variance61.getResult();
        double[] doubleArray68 = new double[] { (-1), 2168.222222222222d, 16.566666666418314d, 10.0d };
        variance61.incrementAll(doubleArray68);
        double double70 = variance39.evaluate(doubleArray68);
        boolean boolean71 = variance1.equals((java.lang.Object) variance39);
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 2168.222222222222d + "'", double9 == 2168.222222222222d);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 2168.222222222222d + "'", double21 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[0.0, 1.0, 1.0, 0.0, -1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 16.566666666666663d + "'", double32 == 16.566666666666663d);
        org.junit.Assert.assertTrue(Double.isNaN(double35));
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 2168.222222222222d + "'", double47 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[0.0, 1.0, 1.0, 0.0, -1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 16.566666666666663d + "'", double58 == 16.566666666666663d);
        org.junit.Assert.assertTrue(Double.isNaN(double59));
        org.junit.Assert.assertTrue(Double.isNaN(double63));
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[-1.0, 2168.222222222222, 16.566666666418314, 10.0]");
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + 1166128.5457099646d + "'", double70 == 1166128.5457099646d);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
    }

    @Test
    public void test1262() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1262");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray8 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double9 = variance1.evaluate(doubleArray8);
        variance1.setBiasCorrected(true);
        boolean boolean12 = variance1.isBiasCorrected();
        double[] doubleArray19 = new double[] { (short) 0, 1.0d, 1L, 0.0d, (-1.0d), 10L };
        double double20 = variance1.evaluate(doubleArray19);
        boolean boolean22 = variance1.equals((java.lang.Object) 10.0d);
        boolean boolean23 = variance1.isBiasCorrected();
        org.apache.commons.math.stat.descriptive.moment.Variance variance25 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        boolean boolean26 = variance1.equals((java.lang.Object) false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance28 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray35 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double36 = variance28.evaluate(doubleArray35);
        variance28.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance40 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray47 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double48 = variance40.evaluate(doubleArray47);
        variance28.incrementAll(doubleArray47);
        double double51 = variance1.evaluate(doubleArray47, (double) 100.0f);
        variance1.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance54 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray61 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double62 = variance54.evaluate(doubleArray61);
        variance54.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance66 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray73 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double74 = variance66.evaluate(doubleArray73);
        variance54.incrementAll(doubleArray73);
        variance1.incrementAll(doubleArray73);
        variance1.clear();
        long long78 = variance1.getN();
        variance1.increment((double) (byte) -1);
        variance1.setBiasCorrected(false);
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 2168.222222222222d + "'", double9 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[0.0, 1.0, 1.0, 0.0, -1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 16.566666666666663d + "'", double20 == 16.566666666666663d);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 2168.222222222222d + "'", double36 == 2168.222222222222d);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 2168.222222222222d + "'", double48 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 2601.8666666666663d + "'", double51 == 2601.8666666666663d);
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 2168.222222222222d + "'", double62 == 2168.222222222222d);
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double74 + "' != '" + 2168.222222222222d + "'", double74 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + long78 + "' != '" + 0L + "'", long78 == 0L);
    }

    @Test
    public void test1263() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1263");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment1 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance2 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment1);
        double[] doubleArray3 = new double[] {};
        double double6 = variance2.evaluate(doubleArray3, 0, 0);
        boolean boolean8 = variance2.equals((java.lang.Object) 10.0f);
        boolean boolean9 = variance2.isBiasCorrected();
        boolean boolean10 = variance2.isBiasCorrected();
        // The following exception was thrown during execution in test generation
        try {
            long long11 = variance2.getN();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
    }

    @Test
    public void test1264() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1264");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray8 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double9 = variance1.evaluate(doubleArray8);
        variance1.clear();
        variance1.setBiasCorrected(false);
        variance1.increment(2178.0d);
        long long15 = variance1.getN();
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 2168.222222222222d + "'", double9 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 1L + "'", long15 == 1L);
    }

    @Test
    public void test1265() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1265");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray8 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double9 = variance1.evaluate(doubleArray8);
        variance1.setBiasCorrected(true);
        long long12 = variance1.getN();
        variance1.clear();
        variance1.increment((double) (short) -1);
        org.apache.commons.math.stat.descriptive.moment.Variance variance17 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray24 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double25 = variance17.evaluate(doubleArray24);
        variance17.setBiasCorrected(true);
        variance17.increment((double) (byte) 0);
        variance17.clear();
        boolean boolean31 = variance17.isBiasCorrected();
        org.apache.commons.math.stat.descriptive.moment.Variance variance33 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray40 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double41 = variance33.evaluate(doubleArray40);
        variance33.setBiasCorrected(true);
        long long44 = variance33.getN();
        long long45 = variance33.getN();
        double double46 = variance33.getResult();
        variance33.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance49 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray56 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double57 = variance49.evaluate(doubleArray56);
        double[] doubleArray61 = new double[] { (byte) 1, (byte) 100, 1L };
        double double62 = variance49.evaluate(doubleArray61);
        org.apache.commons.math.stat.descriptive.moment.Variance variance64 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray71 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double72 = variance64.evaluate(doubleArray71);
        variance64.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance76 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray83 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double84 = variance76.evaluate(doubleArray83);
        variance64.incrementAll(doubleArray83);
        variance49.incrementAll(doubleArray83);
        double double87 = variance33.evaluate(doubleArray83);
        variance17.incrementAll(doubleArray83);
        boolean boolean89 = variance1.equals((java.lang.Object) variance17);
        double[] doubleArray90 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double94 = variance17.evaluate(doubleArray90, (double) (byte) -1, (int) (short) 0, 100);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: input value array is null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 2168.222222222222d + "'", double9 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 0L + "'", long12 == 0L);
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 2168.222222222222d + "'", double25 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 2168.222222222222d + "'", double41 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + long44 + "' != '" + 0L + "'", long44 == 0L);
        org.junit.Assert.assertTrue("'" + long45 + "' != '" + 0L + "'", long45 == 0L);
        org.junit.Assert.assertTrue(Double.isNaN(double46));
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 2168.222222222222d + "'", double57 == 2168.222222222222d);
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[1.0, 100.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 2178.0d + "'", double62 == 2178.0d);
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 2168.222222222222d + "'", double72 == 2168.222222222222d);
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray83), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double84 + "' != '" + 2168.222222222222d + "'", double84 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + double87 + "' != '" + 2601.866666666667d + "'", double87 == 2601.866666666667d);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
    }

    @Test
    public void test1266() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1266");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment1 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance2 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment1);
        variance2.increment(0.0d);
        variance2.clear();
        variance2.increment((double) (-1));
        boolean boolean8 = variance2.isBiasCorrected();
        variance2.increment((double) '4');
        boolean boolean11 = variance2.isBiasCorrected();
        org.apache.commons.math.stat.descriptive.moment.Variance variance13 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray20 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double21 = variance13.evaluate(doubleArray20);
        variance13.clear();
        variance13.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance26 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance26.clear();
        double double28 = variance26.getResult();
        double[] doubleArray33 = new double[] { (-1), 2168.222222222222d, 16.566666666418314d, 10.0d };
        variance26.incrementAll(doubleArray33);
        boolean boolean35 = variance13.equals((java.lang.Object) doubleArray33);
        variance13.setBiasCorrected(false);
        boolean boolean38 = variance13.isBiasCorrected();
        org.apache.commons.math.stat.descriptive.moment.Variance variance40 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray47 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double48 = variance40.evaluate(doubleArray47);
        long long49 = variance40.getN();
        variance40.increment(874596.4092824734d);
        variance40.increment((double) (byte) 100);
        org.apache.commons.math.stat.descriptive.moment.Variance variance55 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray62 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double63 = variance55.evaluate(doubleArray62);
        double[] doubleArray67 = new double[] { (byte) 1, (byte) 100, 1L };
        double double68 = variance55.evaluate(doubleArray67);
        org.apache.commons.math.stat.descriptive.moment.Variance variance70 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray77 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double78 = variance70.evaluate(doubleArray77);
        variance70.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance82 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray89 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double90 = variance82.evaluate(doubleArray89);
        variance70.incrementAll(doubleArray89);
        variance55.incrementAll(doubleArray89);
        variance40.incrementAll(doubleArray89);
        double double95 = variance13.evaluate(doubleArray89, (double) (byte) 10);
        // The following exception was thrown during execution in test generation
        try {
            double double98 = variance2.evaluate(doubleArray89, (int) (short) 100, (int) (byte) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: begin + length > values.length");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 2168.222222222222d + "'", double21 == 2168.222222222222d);
        org.junit.Assert.assertTrue(Double.isNaN(double28));
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[-1.0, 2168.222222222222, 16.566666666418314, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 2168.222222222222d + "'", double48 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + long49 + "' != '" + 0L + "'", long49 == 0L);
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 2168.222222222222d + "'", double63 == 2168.222222222222d);
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[1.0, 100.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 2178.0d + "'", double68 == 2178.0d);
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray77), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double78 + "' != '" + 2168.222222222222d + "'", double78 == 2168.222222222222d);
        org.junit.Assert.assertNotNull(doubleArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray89), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double90 + "' != '" + 2168.222222222222d + "'", double90 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + double95 + "' != '" + 2168.222222222222d + "'", double95 == 2168.222222222222d);
    }

    @Test
    public void test1267() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1267");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray8 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double9 = variance1.evaluate(doubleArray8);
        variance1.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance13 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance13.clear();
        double double15 = variance13.getResult();
        double[] doubleArray20 = new double[] { (-1), 2168.222222222222d, 16.566666666418314d, 10.0d };
        variance13.incrementAll(doubleArray20);
        variance1.incrementAll(doubleArray20);
        double[] doubleArray23 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double27 = variance1.evaluate(doubleArray23, (double) (-1.0f), 100, 0);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: input value array is null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 2168.222222222222d + "'", double9 == 2168.222222222222d);
        org.junit.Assert.assertTrue(Double.isNaN(double15));
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[-1.0, 2168.222222222222, 16.566666666418314, 10.0]");
    }

    @Test
    public void test1268() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1268");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double double2 = variance1.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray11 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double12 = variance4.evaluate(doubleArray11);
        variance4.setBiasCorrected(true);
        long long15 = variance4.getN();
        long long16 = variance4.getN();
        double double17 = variance4.getResult();
        variance4.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance20 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray27 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double28 = variance20.evaluate(doubleArray27);
        double[] doubleArray32 = new double[] { (byte) 1, (byte) 100, 1L };
        double double33 = variance20.evaluate(doubleArray32);
        org.apache.commons.math.stat.descriptive.moment.Variance variance35 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray42 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double43 = variance35.evaluate(doubleArray42);
        variance35.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance47 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray54 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double55 = variance47.evaluate(doubleArray54);
        variance35.incrementAll(doubleArray54);
        variance20.incrementAll(doubleArray54);
        double double58 = variance4.evaluate(doubleArray54);
        // The following exception was thrown during execution in test generation
        try {
            double double61 = variance1.evaluate(doubleArray54, (int) (byte) 10, (int) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: length cannot be negative");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue(Double.isNaN(double2));
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 2168.222222222222d + "'", double12 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 0L + "'", long15 == 0L);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 0L + "'", long16 == 0L);
        org.junit.Assert.assertTrue(Double.isNaN(double17));
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 2168.222222222222d + "'", double28 == 2168.222222222222d);
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[1.0, 100.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 2178.0d + "'", double33 == 2178.0d);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 2168.222222222222d + "'", double43 == 2168.222222222222d);
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 2168.222222222222d + "'", double55 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 2601.866666666667d + "'", double58 == 2601.866666666667d);
    }

    @Test
    public void test1269() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1269");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray8 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double9 = variance1.evaluate(doubleArray8);
        variance1.setBiasCorrected(true);
        boolean boolean12 = variance1.isBiasCorrected();
        double[] doubleArray19 = new double[] { (short) 0, 1.0d, 1L, 0.0d, (-1.0d), 10L };
        double double20 = variance1.evaluate(doubleArray19);
        boolean boolean22 = variance1.equals((java.lang.Object) 10.0d);
        boolean boolean23 = variance1.isBiasCorrected();
        org.apache.commons.math.stat.descriptive.moment.Variance variance25 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        boolean boolean26 = variance1.equals((java.lang.Object) false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance28 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray35 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double36 = variance28.evaluate(doubleArray35);
        variance28.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance40 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray47 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double48 = variance40.evaluate(doubleArray47);
        variance28.incrementAll(doubleArray47);
        double double51 = variance1.evaluate(doubleArray47, (double) 100.0f);
        long long52 = variance1.getN();
        variance1.increment((double) '4');
        boolean boolean55 = variance1.isBiasCorrected();
        boolean boolean56 = variance1.isBiasCorrected();
        variance1.clear();
        variance1.setBiasCorrected(true);
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 2168.222222222222d + "'", double9 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[0.0, 1.0, 1.0, 0.0, -1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 16.566666666666663d + "'", double20 == 16.566666666666663d);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 2168.222222222222d + "'", double36 == 2168.222222222222d);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 2168.222222222222d + "'", double48 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 2601.8666666666663d + "'", double51 == 2601.8666666666663d);
        org.junit.Assert.assertTrue("'" + long52 + "' != '" + 0L + "'", long52 == 0L);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
    }

    @Test
    public void test1270() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1270");
        org.apache.commons.math.stat.descriptive.moment.Variance variance0 = new org.apache.commons.math.stat.descriptive.moment.Variance();
        variance0.increment(1694.7000000000003d);
        double double3 = variance0.getResult();
        variance0.setBiasCorrected(false);
        boolean boolean6 = variance0.isBiasCorrected();
        long long7 = variance0.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance11 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray18 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double19 = variance11.evaluate(doubleArray18);
        variance11.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance23 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance23.clear();
        double double25 = variance23.getResult();
        double[] doubleArray30 = new double[] { (-1), 2168.222222222222d, 16.566666666418314d, 10.0d };
        variance23.incrementAll(doubleArray30);
        variance11.incrementAll(doubleArray30);
        double double33 = variance9.evaluate(doubleArray30);
        boolean boolean34 = variance9.isBiasCorrected();
        boolean boolean35 = variance0.equals((java.lang.Object) variance9);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 0.0d + "'", double3 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 1L + "'", long7 == 1L);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 2168.222222222222d + "'", double19 == 2168.222222222222d);
        org.junit.Assert.assertTrue(Double.isNaN(double25));
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[-1.0, 2168.222222222222, 16.566666666418314, 10.0]");
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 874596.4092824734d + "'", double33 == 874596.4092824734d);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
    }

    @Test
    public void test1271() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1271");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance3 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray10 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double11 = variance3.evaluate(doubleArray10);
        double[] doubleArray15 = new double[] { (byte) 1, (byte) 100, 1L };
        double double16 = variance3.evaluate(doubleArray15);
        boolean boolean17 = variance1.equals((java.lang.Object) variance3);
        variance1.increment((double) 3L);
        variance1.clear();
        long long21 = variance1.getN();
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 2168.222222222222d + "'", double11 == 2168.222222222222d);
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[1.0, 100.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 2178.0d + "'", double16 == 2178.0d);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + long21 + "' != '" + 0L + "'", long21 == 0L);
    }

    @Test
    public void test1272() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1272");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray8 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double9 = variance1.evaluate(doubleArray8);
        variance1.setBiasCorrected(true);
        boolean boolean12 = variance1.isBiasCorrected();
        double[] doubleArray19 = new double[] { (short) 0, 1.0d, 1L, 0.0d, (-1.0d), 10L };
        double double20 = variance1.evaluate(doubleArray19);
        boolean boolean22 = variance1.equals((java.lang.Object) 10.0d);
        long long23 = variance1.getN();
        double double24 = variance1.getResult();
        double double25 = variance1.getResult();
        long long26 = variance1.getN();
        variance1.increment(2.25d);
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 2168.222222222222d + "'", double9 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[0.0, 1.0, 1.0, 0.0, -1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 16.566666666666663d + "'", double20 == 16.566666666666663d);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + long23 + "' != '" + 0L + "'", long23 == 0L);
        org.junit.Assert.assertTrue(Double.isNaN(double24));
        org.junit.Assert.assertTrue(Double.isNaN(double25));
        org.junit.Assert.assertTrue("'" + long26 + "' != '" + 0L + "'", long26 == 0L);
    }

    @Test
    public void test1273() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1273");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray8 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double9 = variance1.evaluate(doubleArray8);
        variance1.setBiasCorrected(true);
        variance1.increment((double) (byte) 0);
        double[] doubleArray16 = new double[] { 'a', 100L };
        double double18 = variance1.evaluate(doubleArray16, 0.0d);
        org.apache.commons.math.stat.descriptive.moment.Variance variance20 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray27 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double28 = variance20.evaluate(doubleArray27);
        variance20.setBiasCorrected(true);
        long long31 = variance20.getN();
        long long32 = variance20.getN();
        boolean boolean33 = variance20.isBiasCorrected();
        long long34 = variance20.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance36 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray43 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double44 = variance36.evaluate(doubleArray43);
        variance36.setBiasCorrected(true);
        long long47 = variance36.getN();
        variance36.clear();
        double double49 = variance36.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance51 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray58 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double59 = variance51.evaluate(doubleArray58);
        variance51.setBiasCorrected(true);
        boolean boolean62 = variance51.isBiasCorrected();
        double[] doubleArray69 = new double[] { (short) 0, 1.0d, 1L, 0.0d, (-1.0d), 10L };
        double double70 = variance51.evaluate(doubleArray69);
        boolean boolean72 = variance51.equals((java.lang.Object) 10.0d);
        org.apache.commons.math.stat.descriptive.moment.Variance variance74 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray81 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double82 = variance74.evaluate(doubleArray81);
        variance74.setBiasCorrected(true);
        boolean boolean85 = variance74.isBiasCorrected();
        double[] doubleArray92 = new double[] { (short) 0, 1.0d, 1L, 0.0d, (-1.0d), 10L };
        double double93 = variance74.evaluate(doubleArray92);
        double double95 = variance51.evaluate(doubleArray92, (double) 0.0f);
        variance36.incrementAll(doubleArray92);
        double double97 = variance20.evaluate(doubleArray92);
        double double98 = variance1.evaluate(doubleArray92);
        variance1.clear();
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 2168.222222222222d + "'", double9 == 2168.222222222222d);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[97.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 4.5d + "'", double18 == 4.5d);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 2168.222222222222d + "'", double28 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + long31 + "' != '" + 0L + "'", long31 == 0L);
        org.junit.Assert.assertTrue("'" + long32 + "' != '" + 0L + "'", long32 == 0L);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + long34 + "' != '" + 0L + "'", long34 == 0L);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 2168.222222222222d + "'", double44 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + long47 + "' != '" + 0L + "'", long47 == 0L);
        org.junit.Assert.assertTrue(Double.isNaN(double49));
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 2168.222222222222d + "'", double59 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[0.0, 1.0, 1.0, 0.0, -1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + 16.566666666666663d + "'", double70 == 16.566666666666663d);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray81), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double82 + "' != '" + 2168.222222222222d + "'", double82 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + true + "'", boolean85 == true);
        org.junit.Assert.assertNotNull(doubleArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray92), "[0.0, 1.0, 1.0, 0.0, -1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double93 + "' != '" + 16.566666666666663d + "'", double93 == 16.566666666666663d);
        org.junit.Assert.assertTrue("'" + double95 + "' != '" + 16.566666666666666d + "'", double95 == 16.566666666666666d);
        org.junit.Assert.assertTrue("'" + double97 + "' != '" + 16.566666666666663d + "'", double97 == 16.566666666666663d);
        org.junit.Assert.assertTrue("'" + double98 + "' != '" + 16.566666666666663d + "'", double98 == 16.566666666666663d);
    }

    @Test
    public void test1274() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1274");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance1.clear();
        variance1.setBiasCorrected(true);
    }

    @Test
    public void test1275() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1275");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment1 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance2 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment1);
        variance2.increment(0.0d);
        variance2.clear();
        variance2.setBiasCorrected(true);
        variance2.clear();
        variance2.clear();
        variance2.clear();
    }

    @Test
    public void test1276() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1276");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance1.clear();
        boolean boolean3 = variance1.isBiasCorrected();
        boolean boolean5 = variance1.equals((java.lang.Object) 1166128.5457099646d);
        variance1.clear();
        variance1.setBiasCorrected(true);
        long long9 = variance1.getN();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + 0L + "'", long9 == 0L);
    }

    @Test
    public void test1277() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1277");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray8 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double9 = variance1.evaluate(doubleArray8);
        variance1.setBiasCorrected(true);
        boolean boolean12 = variance1.isBiasCorrected();
        double[] doubleArray19 = new double[] { (short) 0, 1.0d, 1L, 0.0d, (-1.0d), 10L };
        double double20 = variance1.evaluate(doubleArray19);
        boolean boolean22 = variance1.equals((java.lang.Object) 10.0d);
        boolean boolean23 = variance1.isBiasCorrected();
        org.apache.commons.math.stat.descriptive.moment.Variance variance25 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        boolean boolean26 = variance1.equals((java.lang.Object) false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance28 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray35 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double36 = variance28.evaluate(doubleArray35);
        variance28.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance40 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray47 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double48 = variance40.evaluate(doubleArray47);
        variance28.incrementAll(doubleArray47);
        double double51 = variance1.evaluate(doubleArray47, (double) 100.0f);
        variance1.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance54 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray61 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double62 = variance54.evaluate(doubleArray61);
        variance54.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance66 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray73 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double74 = variance66.evaluate(doubleArray73);
        variance54.incrementAll(doubleArray73);
        variance1.incrementAll(doubleArray73);
        variance1.clear();
        long long78 = variance1.getN();
        variance1.setBiasCorrected(true);
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 2168.222222222222d + "'", double9 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[0.0, 1.0, 1.0, 0.0, -1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 16.566666666666663d + "'", double20 == 16.566666666666663d);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 2168.222222222222d + "'", double36 == 2168.222222222222d);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 2168.222222222222d + "'", double48 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 2601.8666666666663d + "'", double51 == 2601.8666666666663d);
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 2168.222222222222d + "'", double62 == 2168.222222222222d);
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double74 + "' != '" + 2168.222222222222d + "'", double74 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + long78 + "' != '" + 0L + "'", long78 == 0L);
    }

    @Test
    public void test1278() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1278");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance1.clear();
        boolean boolean3 = variance1.isBiasCorrected();
        long long4 = variance1.getN();
        variance1.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance8 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray15 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double16 = variance8.evaluate(doubleArray15);
        variance8.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance20 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray27 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double28 = variance20.evaluate(doubleArray27);
        variance20.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance32 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray39 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double40 = variance32.evaluate(doubleArray39);
        variance32.setBiasCorrected(true);
        boolean boolean43 = variance32.isBiasCorrected();
        double[] doubleArray50 = new double[] { (short) 0, 1.0d, 1L, 0.0d, (-1.0d), 10L };
        double double51 = variance32.evaluate(doubleArray50);
        double double54 = variance20.evaluate(doubleArray50, (int) (byte) 1, (int) (byte) 0);
        variance8.incrementAll(doubleArray50, (int) (byte) 1, 1);
        boolean boolean58 = variance1.equals((java.lang.Object) doubleArray50);
        variance1.increment((double) 100.0f);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 0L + "'", long4 == 0L);
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 2168.222222222222d + "'", double16 == 2168.222222222222d);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 2168.222222222222d + "'", double28 == 2168.222222222222d);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 2168.222222222222d + "'", double40 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[0.0, 1.0, 1.0, 0.0, -1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 16.566666666666663d + "'", double51 == 16.566666666666663d);
        org.junit.Assert.assertTrue(Double.isNaN(double54));
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
    }

    @Test
    public void test1279() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1279");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray8 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double9 = variance1.evaluate(doubleArray8);
        variance1.setBiasCorrected(true);
        boolean boolean12 = variance1.isBiasCorrected();
        double[] doubleArray19 = new double[] { (short) 0, 1.0d, 1L, 0.0d, (-1.0d), 10L };
        double double20 = variance1.evaluate(doubleArray19);
        double double21 = variance1.getResult();
        variance1.setBiasCorrected(true);
        boolean boolean24 = variance1.isBiasCorrected();
        variance1.setBiasCorrected(false);
        variance1.increment(2601.866666666667d);
        org.apache.commons.math.stat.descriptive.moment.Variance variance30 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray37 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double38 = variance30.evaluate(doubleArray37);
        variance30.setBiasCorrected(true);
        boolean boolean41 = variance30.isBiasCorrected();
        org.apache.commons.math.stat.descriptive.moment.Variance variance43 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray50 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double51 = variance43.evaluate(doubleArray50);
        variance43.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance55 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray62 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double63 = variance55.evaluate(doubleArray62);
        variance43.incrementAll(doubleArray62);
        variance43.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance67 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray74 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double75 = variance67.evaluate(doubleArray74);
        double[] doubleArray79 = new double[] { (byte) 1, (byte) 100, 1L };
        double double80 = variance67.evaluate(doubleArray79);
        variance43.incrementAll(doubleArray79, (int) (byte) 0, (int) (byte) 1);
        double double85 = variance30.evaluate(doubleArray79, (double) '4');
        double double87 = variance1.evaluate(doubleArray79, Double.NaN);
        variance1.increment(6.25d);
        java.lang.Class<?> wildcardClass90 = variance1.getClass();
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 2168.222222222222d + "'", double9 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[0.0, 1.0, 1.0, 0.0, -1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 16.566666666666663d + "'", double20 == 16.566666666666663d);
        org.junit.Assert.assertTrue(Double.isNaN(double21));
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 2168.222222222222d + "'", double38 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 2168.222222222222d + "'", double51 == 2168.222222222222d);
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 2168.222222222222d + "'", double63 == 2168.222222222222d);
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray74), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double75 + "' != '" + 2168.222222222222d + "'", double75 == 2168.222222222222d);
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray79), "[1.0, 100.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double80 + "' != '" + 2178.0d + "'", double80 == 2178.0d);
        org.junit.Assert.assertTrue("'" + double85 + "' != '" + 3267.0d + "'", double85 == 3267.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double87));
        org.junit.Assert.assertNotNull(wildcardClass90);
    }

    @Test
    public void test1280() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1280");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance1.clear();
        double double3 = variance1.getResult();
        double[] doubleArray8 = new double[] { (-1), 2168.222222222222d, 16.566666666418314d, 10.0d };
        variance1.incrementAll(doubleArray8);
        org.apache.commons.math.stat.descriptive.moment.Variance variance11 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray18 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double19 = variance11.evaluate(doubleArray18);
        variance11.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance23 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray30 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double31 = variance23.evaluate(doubleArray30);
        variance11.incrementAll(doubleArray30);
        variance11.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance35 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray42 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double43 = variance35.evaluate(doubleArray42);
        double[] doubleArray47 = new double[] { (byte) 1, (byte) 100, 1L };
        double double48 = variance35.evaluate(doubleArray47);
        variance11.incrementAll(doubleArray47, (int) (byte) 0, (int) (byte) 1);
        double double55 = variance1.evaluate(doubleArray47, (double) 'a', (int) (short) 1, (int) (short) 1);
        boolean boolean56 = variance1.isBiasCorrected();
        variance1.setBiasCorrected(false);
        long long59 = variance1.getN();
        boolean boolean60 = variance1.isBiasCorrected();
        variance1.setBiasCorrected(false);
        variance1.clear();
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-1.0, 2168.222222222222, 16.566666666418314, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 2168.222222222222d + "'", double19 == 2168.222222222222d);
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 2168.222222222222d + "'", double31 == 2168.222222222222d);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 2168.222222222222d + "'", double43 == 2168.222222222222d);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[1.0, 100.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 2178.0d + "'", double48 == 2178.0d);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 0.0d + "'", double55 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + long59 + "' != '" + 4L + "'", long59 == 4L);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
    }

    @Test
    public void test1281() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1281");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray8 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double9 = variance1.evaluate(doubleArray8);
        variance1.clear();
        variance1.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance14 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance14.clear();
        double double16 = variance14.getResult();
        double[] doubleArray21 = new double[] { (-1), 2168.222222222222d, 16.566666666418314d, 10.0d };
        variance14.incrementAll(doubleArray21);
        boolean boolean23 = variance1.equals((java.lang.Object) doubleArray21);
        double double24 = variance1.getResult();
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 2168.222222222222d + "'", double9 == 2168.222222222222d);
        org.junit.Assert.assertTrue(Double.isNaN(double16));
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[-1.0, 2168.222222222222, 16.566666666418314, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double24));
    }

    @Test
    public void test1282() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1282");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment1 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance2 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment1);
        variance2.setBiasCorrected(true);
        variance2.clear();
        variance2.setBiasCorrected(false);
        // The following exception was thrown during execution in test generation
        try {
            long long8 = variance2.getN();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test1283() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1283");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray8 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double9 = variance1.evaluate(doubleArray8);
        variance1.setBiasCorrected(true);
        long long12 = variance1.getN();
        variance1.clear();
        double double14 = variance1.getResult();
        variance1.setBiasCorrected(true);
        boolean boolean17 = variance1.isBiasCorrected();
        org.apache.commons.math.stat.descriptive.moment.Variance variance19 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance19.clear();
        double double21 = variance19.getResult();
        double[] doubleArray26 = new double[] { (-1), 2168.222222222222d, 16.566666666418314d, 10.0d };
        variance19.incrementAll(doubleArray26);
        org.apache.commons.math.stat.descriptive.moment.Variance variance29 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray36 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double37 = variance29.evaluate(doubleArray36);
        variance29.setBiasCorrected(true);
        boolean boolean40 = variance29.isBiasCorrected();
        double[] doubleArray47 = new double[] { (short) 0, 1.0d, 1L, 0.0d, (-1.0d), 10L };
        double double48 = variance29.evaluate(doubleArray47);
        double double49 = variance29.getResult();
        variance29.setBiasCorrected(true);
        boolean boolean52 = variance29.isBiasCorrected();
        variance29.setBiasCorrected(false);
        variance29.increment(2601.866666666667d);
        org.apache.commons.math.stat.descriptive.moment.Variance variance58 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray65 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double66 = variance58.evaluate(doubleArray65);
        variance58.clear();
        variance58.setBiasCorrected(true);
        double double70 = variance58.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance72 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray79 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double80 = variance72.evaluate(doubleArray79);
        double double81 = variance58.evaluate(doubleArray79);
        double double82 = variance29.evaluate(doubleArray79);
        double double83 = variance19.evaluate(doubleArray79);
        // The following exception was thrown during execution in test generation
        try {
            double double87 = variance1.evaluate(doubleArray79, (double) 1, (int) (byte) 100, (int) (short) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: begin + length > values.length");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 2168.222222222222d + "'", double9 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 0L + "'", long12 == 0L);
        org.junit.Assert.assertTrue(Double.isNaN(double14));
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double21));
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[-1.0, 2168.222222222222, 16.566666666418314, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 2168.222222222222d + "'", double37 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[0.0, 1.0, 1.0, 0.0, -1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 16.566666666666663d + "'", double48 == 16.566666666666663d);
        org.junit.Assert.assertTrue(Double.isNaN(double49));
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 2168.222222222222d + "'", double66 == 2168.222222222222d);
        org.junit.Assert.assertTrue(Double.isNaN(double70));
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray79), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double80 + "' != '" + 2168.222222222222d + "'", double80 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + double81 + "' != '" + 2601.866666666667d + "'", double81 == 2601.866666666667d);
        org.junit.Assert.assertTrue("'" + double82 + "' != '" + 2168.222222222222d + "'", double82 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + 2168.222222222222d + "'", double83 == 2168.222222222222d);
    }

    @Test
    public void test1284() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1284");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray8 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double9 = variance1.evaluate(doubleArray8);
        variance1.clear();
        java.lang.Object obj11 = null;
        boolean boolean12 = variance1.equals(obj11);
        org.apache.commons.math.stat.descriptive.moment.Variance variance14 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray21 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double22 = variance14.evaluate(doubleArray21);
        variance14.setBiasCorrected(true);
        boolean boolean25 = variance14.isBiasCorrected();
        double[] doubleArray32 = new double[] { (short) 0, 1.0d, 1L, 0.0d, (-1.0d), 10L };
        double double33 = variance14.evaluate(doubleArray32);
        double double34 = variance14.getResult();
        long long35 = variance14.getN();
        boolean boolean36 = variance1.equals((java.lang.Object) long35);
        boolean boolean37 = variance1.isBiasCorrected();
        boolean boolean38 = variance1.isBiasCorrected();
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 2168.222222222222d + "'", double9 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 2168.222222222222d + "'", double22 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[0.0, 1.0, 1.0, 0.0, -1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 16.566666666666663d + "'", double33 == 16.566666666666663d);
        org.junit.Assert.assertTrue(Double.isNaN(double34));
        org.junit.Assert.assertTrue("'" + long35 + "' != '" + 0L + "'", long35 == 0L);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
    }

    @Test
    public void test1285() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1285");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(true);
        double double2 = variance1.getResult();
        double double3 = variance1.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance5 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray12 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double13 = variance5.evaluate(doubleArray12);
        variance5.setBiasCorrected(true);
        long long16 = variance5.getN();
        variance5.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance19 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray26 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double27 = variance19.evaluate(doubleArray26);
        double double28 = variance5.evaluate(doubleArray26);
        variance1.incrementAll(doubleArray26);
        org.apache.commons.math.stat.descriptive.moment.Variance variance31 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray38 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double39 = variance31.evaluate(doubleArray38);
        variance31.setBiasCorrected(true);
        boolean boolean42 = variance31.isBiasCorrected();
        double[] doubleArray49 = new double[] { (short) 0, 1.0d, 1L, 0.0d, (-1.0d), 10L };
        double double50 = variance31.evaluate(doubleArray49);
        double double51 = variance31.getResult();
        long long52 = variance31.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance54 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray61 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double62 = variance54.evaluate(doubleArray61);
        variance54.setBiasCorrected(true);
        long long65 = variance54.getN();
        variance54.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance68 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray75 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double76 = variance68.evaluate(doubleArray75);
        double double77 = variance54.evaluate(doubleArray75);
        double double78 = variance31.evaluate(doubleArray75);
        variance1.incrementAll(doubleArray75);
        boolean boolean80 = variance1.isBiasCorrected();
        variance1.setBiasCorrected(false);
        double double83 = variance1.getResult();
        variance1.clear();
        org.junit.Assert.assertTrue(Double.isNaN(double2));
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 2168.222222222222d + "'", double13 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 0L + "'", long16 == 0L);
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 2168.222222222222d + "'", double27 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 2601.866666666667d + "'", double28 == 2601.866666666667d);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 2168.222222222222d + "'", double39 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[0.0, 1.0, 1.0, 0.0, -1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 16.566666666666663d + "'", double50 == 16.566666666666663d);
        org.junit.Assert.assertTrue(Double.isNaN(double51));
        org.junit.Assert.assertTrue("'" + long52 + "' != '" + 0L + "'", long52 == 0L);
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 2168.222222222222d + "'", double62 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + long65 + "' != '" + 0L + "'", long65 == 0L);
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray75), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double76 + "' != '" + 2168.222222222222d + "'", double76 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + double77 + "' != '" + 2601.866666666667d + "'", double77 == 2601.866666666667d);
        org.junit.Assert.assertTrue("'" + double78 + "' != '" + 2601.866666666667d + "'", double78 == 2601.866666666667d);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + 2168.222222222222d + "'", double83 == 2168.222222222222d);
    }

    @Test
    public void test1286() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1286");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray8 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double9 = variance1.evaluate(doubleArray8);
        variance1.setBiasCorrected(true);
        boolean boolean12 = variance1.isBiasCorrected();
        double[] doubleArray19 = new double[] { (short) 0, 1.0d, 1L, 0.0d, (-1.0d), 10L };
        double double20 = variance1.evaluate(doubleArray19);
        boolean boolean22 = variance1.equals((java.lang.Object) 10.0d);
        boolean boolean23 = variance1.isBiasCorrected();
        org.apache.commons.math.stat.descriptive.moment.Variance variance25 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        boolean boolean26 = variance1.equals((java.lang.Object) false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance28 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray35 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double36 = variance28.evaluate(doubleArray35);
        variance28.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance40 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray47 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double48 = variance40.evaluate(doubleArray47);
        variance28.incrementAll(doubleArray47);
        double double51 = variance1.evaluate(doubleArray47, (double) 100.0f);
        long long52 = variance1.getN();
        variance1.increment((double) '4');
        double double55 = variance1.getResult();
        variance1.setBiasCorrected(false);
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 2168.222222222222d + "'", double9 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[0.0, 1.0, 1.0, 0.0, -1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 16.566666666666663d + "'", double20 == 16.566666666666663d);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 2168.222222222222d + "'", double36 == 2168.222222222222d);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 2168.222222222222d + "'", double48 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 2601.8666666666663d + "'", double51 == 2601.8666666666663d);
        org.junit.Assert.assertTrue("'" + long52 + "' != '" + 0L + "'", long52 == 0L);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 0.0d + "'", double55 == 0.0d);
    }

    @Test
    public void test1287() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1287");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray8 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double9 = variance1.evaluate(doubleArray8);
        variance1.setBiasCorrected(true);
        long long12 = variance1.getN();
        long long13 = variance1.getN();
        boolean boolean15 = variance1.equals((java.lang.Object) 16.566666666666663d);
        boolean boolean17 = variance1.equals((java.lang.Object) (short) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance19 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray26 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double27 = variance19.evaluate(doubleArray26);
        variance19.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance31 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray38 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double39 = variance31.evaluate(doubleArray38);
        variance31.setBiasCorrected(true);
        boolean boolean42 = variance31.isBiasCorrected();
        double[] doubleArray49 = new double[] { (short) 0, 1.0d, 1L, 0.0d, (-1.0d), 10L };
        double double50 = variance31.evaluate(doubleArray49);
        org.apache.commons.math.stat.descriptive.moment.Variance variance52 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray59 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double60 = variance52.evaluate(doubleArray59);
        variance52.setBiasCorrected(true);
        boolean boolean63 = variance52.isBiasCorrected();
        double[] doubleArray70 = new double[] { (short) 0, 1.0d, 1L, 0.0d, (-1.0d), 10L };
        double double71 = variance52.evaluate(doubleArray70);
        double double74 = variance31.evaluate(doubleArray70, (int) (byte) 1, 0);
        double double76 = variance19.evaluate(doubleArray70, 2178.0d);
        double double77 = variance1.evaluate(doubleArray70);
        double double78 = variance1.getResult();
        long long79 = variance1.getN();
        variance1.clear();
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 2168.222222222222d + "'", double9 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 0L + "'", long12 == 0L);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 0L + "'", long13 == 0L);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 2168.222222222222d + "'", double27 == 2168.222222222222d);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 2168.222222222222d + "'", double39 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[0.0, 1.0, 1.0, 0.0, -1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 16.566666666666663d + "'", double50 == 16.566666666666663d);
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 2168.222222222222d + "'", double60 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[0.0, 1.0, 1.0, 0.0, -1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + 16.566666666666663d + "'", double71 == 16.566666666666663d);
        org.junit.Assert.assertTrue(Double.isNaN(double74));
        org.junit.Assert.assertTrue("'" + double76 + "' != '" + 16.566666666418314d + "'", double76 == 16.566666666418314d);
        org.junit.Assert.assertTrue("'" + double77 + "' != '" + 16.566666666666663d + "'", double77 == 16.566666666666663d);
        org.junit.Assert.assertTrue(Double.isNaN(double78));
        org.junit.Assert.assertTrue("'" + long79 + "' != '" + 0L + "'", long79 == 0L);
    }

    @Test
    public void test1288() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1288");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray8 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double9 = variance1.evaluate(doubleArray8);
        long long10 = variance1.getN();
        variance1.increment((double) (byte) 1);
        double double13 = variance1.getResult();
        boolean boolean14 = variance1.isBiasCorrected();
        double double15 = variance1.getResult();
        boolean boolean16 = variance1.isBiasCorrected();
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 2168.222222222222d + "'", double9 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 0L + "'", long10 == 0L);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.0d + "'", double15 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
    }

    @Test
    public void test1289() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1289");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance1.clear();
        double double3 = variance1.getResult();
        variance1.increment((double) '4');
        double double6 = variance1.getResult();
        long long7 = variance1.getN();
        double double8 = variance1.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance10 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray17 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double18 = variance10.evaluate(doubleArray17);
        variance10.setBiasCorrected(true);
        long long21 = variance10.getN();
        long long22 = variance10.getN();
        boolean boolean23 = variance10.isBiasCorrected();
        org.apache.commons.math.stat.descriptive.moment.Variance variance25 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray32 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double33 = variance25.evaluate(doubleArray32);
        double[] doubleArray37 = new double[] { (byte) 1, (byte) 100, 1L };
        double double38 = variance25.evaluate(doubleArray37);
        variance10.incrementAll(doubleArray37, (int) (short) 1, 0);
        org.apache.commons.math.stat.descriptive.moment.Variance variance43 = new org.apache.commons.math.stat.descriptive.moment.Variance(true);
        double double44 = variance43.getResult();
        double double45 = variance43.getResult();
        variance43.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance48 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray55 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double56 = variance48.evaluate(doubleArray55);
        variance48.setBiasCorrected(true);
        long long59 = variance48.getN();
        long long60 = variance48.getN();
        boolean boolean61 = variance48.isBiasCorrected();
        org.apache.commons.math.stat.descriptive.moment.Variance variance63 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray70 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double71 = variance63.evaluate(doubleArray70);
        double[] doubleArray75 = new double[] { (byte) 1, (byte) 100, 1L };
        double double76 = variance63.evaluate(doubleArray75);
        variance48.incrementAll(doubleArray75, (int) (short) 1, 0);
        variance43.incrementAll(doubleArray75);
        variance10.incrementAll(doubleArray75);
        double double83 = variance1.evaluate(doubleArray75, 874596.4092824734d);
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 1L + "'", long7 == 1L);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 2168.222222222222d + "'", double18 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + long21 + "' != '" + 0L + "'", long21 == 0L);
        org.junit.Assert.assertTrue("'" + long22 + "' != '" + 0L + "'", long22 == 0L);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 2168.222222222222d + "'", double33 == 2168.222222222222d);
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[1.0, 100.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 2178.0d + "'", double38 == 2178.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double44));
        org.junit.Assert.assertTrue(Double.isNaN(double45));
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 2168.222222222222d + "'", double56 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + long59 + "' != '" + 0L + "'", long59 == 0L);
        org.junit.Assert.assertTrue("'" + long60 + "' != '" + 0L + "'", long60 == 0L);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + 2168.222222222222d + "'", double71 == 2168.222222222222d);
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray75), "[1.0, 100.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double76 + "' != '" + 2178.0d + "'", double76 == 2178.0d);
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + 2178.0d + "'", double83 == 2178.0d);
    }

    @Test
    public void test1290() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1290");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double double2 = variance1.getResult();
        long long3 = variance1.getN();
        java.lang.Class<?> wildcardClass4 = variance1.getClass();
        org.junit.Assert.assertTrue(Double.isNaN(double2));
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 0L + "'", long3 == 0L);
        org.junit.Assert.assertNotNull(wildcardClass4);
    }

    @Test
    public void test1291() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1291");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray8 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double9 = variance1.evaluate(doubleArray8);
        variance1.setBiasCorrected(true);
        long long12 = variance1.getN();
        long long13 = variance1.getN();
        boolean boolean15 = variance1.equals((java.lang.Object) 16.566666666666663d);
        boolean boolean17 = variance1.equals((java.lang.Object) (short) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance19 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray26 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double27 = variance19.evaluate(doubleArray26);
        variance19.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance31 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray38 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double39 = variance31.evaluate(doubleArray38);
        variance19.incrementAll(doubleArray38);
        double double41 = variance1.evaluate(doubleArray38);
        boolean boolean42 = variance1.isBiasCorrected();
        variance1.increment((double) 3L);
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 2168.222222222222d + "'", double9 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 0L + "'", long12 == 0L);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 0L + "'", long13 == 0L);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 2168.222222222222d + "'", double27 == 2168.222222222222d);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 2168.222222222222d + "'", double39 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 2601.866666666667d + "'", double41 == 2601.866666666667d);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
    }

    @Test
    public void test1292() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1292");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(true);
        double double2 = variance1.getResult();
        boolean boolean3 = variance1.isBiasCorrected();
        org.apache.commons.math.stat.descriptive.moment.Variance variance5 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray12 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double13 = variance5.evaluate(doubleArray12);
        variance5.setBiasCorrected(true);
        long long16 = variance5.getN();
        long long17 = variance5.getN();
        boolean boolean19 = variance5.equals((java.lang.Object) 16.566666666666663d);
        boolean boolean21 = variance5.equals((java.lang.Object) (short) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance23 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray30 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double31 = variance23.evaluate(doubleArray30);
        variance23.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance35 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray42 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double43 = variance35.evaluate(doubleArray42);
        variance35.setBiasCorrected(true);
        boolean boolean46 = variance35.isBiasCorrected();
        double[] doubleArray53 = new double[] { (short) 0, 1.0d, 1L, 0.0d, (-1.0d), 10L };
        double double54 = variance35.evaluate(doubleArray53);
        org.apache.commons.math.stat.descriptive.moment.Variance variance56 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray63 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double64 = variance56.evaluate(doubleArray63);
        variance56.setBiasCorrected(true);
        boolean boolean67 = variance56.isBiasCorrected();
        double[] doubleArray74 = new double[] { (short) 0, 1.0d, 1L, 0.0d, (-1.0d), 10L };
        double double75 = variance56.evaluate(doubleArray74);
        double double78 = variance35.evaluate(doubleArray74, (int) (byte) 1, 0);
        double double80 = variance23.evaluate(doubleArray74, 2178.0d);
        double double81 = variance5.evaluate(doubleArray74);
        boolean boolean83 = variance5.equals((java.lang.Object) (short) 100);
        boolean boolean84 = variance1.equals((java.lang.Object) variance5);
        variance5.clear();
        long long86 = variance5.getN();
        org.junit.Assert.assertTrue(Double.isNaN(double2));
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 2168.222222222222d + "'", double13 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 0L + "'", long16 == 0L);
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + 0L + "'", long17 == 0L);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 2168.222222222222d + "'", double31 == 2168.222222222222d);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 2168.222222222222d + "'", double43 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray53), "[0.0, 1.0, 1.0, 0.0, -1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 16.566666666666663d + "'", double54 == 16.566666666666663d);
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 2168.222222222222d + "'", double64 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray74), "[0.0, 1.0, 1.0, 0.0, -1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double75 + "' != '" + 16.566666666666663d + "'", double75 == 16.566666666666663d);
        org.junit.Assert.assertTrue(Double.isNaN(double78));
        org.junit.Assert.assertTrue("'" + double80 + "' != '" + 16.566666666418314d + "'", double80 == 16.566666666418314d);
        org.junit.Assert.assertTrue("'" + double81 + "' != '" + 16.566666666666663d + "'", double81 == 16.566666666666663d);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertTrue("'" + long86 + "' != '" + 0L + "'", long86 == 0L);
    }

    @Test
    public void test1293() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1293");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray8 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double9 = variance1.evaluate(doubleArray8);
        long long10 = variance1.getN();
        variance1.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance13 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray20 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double21 = variance13.evaluate(doubleArray20);
        variance13.setBiasCorrected(true);
        boolean boolean24 = variance13.isBiasCorrected();
        double[] doubleArray31 = new double[] { (short) 0, 1.0d, 1L, 0.0d, (-1.0d), 10L };
        double double32 = variance13.evaluate(doubleArray31);
        double double33 = variance13.getResult();
        variance13.setBiasCorrected(true);
        long long36 = variance13.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance38 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray45 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double46 = variance38.evaluate(doubleArray45);
        variance38.setBiasCorrected(true);
        boolean boolean49 = variance38.isBiasCorrected();
        double[] doubleArray56 = new double[] { (short) 0, 1.0d, 1L, 0.0d, (-1.0d), 10L };
        double double57 = variance38.evaluate(doubleArray56);
        boolean boolean59 = variance38.equals((java.lang.Object) 10.0d);
        org.apache.commons.math.stat.descriptive.moment.Variance variance61 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray68 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double69 = variance61.evaluate(doubleArray68);
        variance61.setBiasCorrected(true);
        boolean boolean72 = variance61.isBiasCorrected();
        double[] doubleArray79 = new double[] { (short) 0, 1.0d, 1L, 0.0d, (-1.0d), 10L };
        double double80 = variance61.evaluate(doubleArray79);
        double double82 = variance38.evaluate(doubleArray79, (double) 0.0f);
        variance13.incrementAll(doubleArray79);
        double double85 = variance1.evaluate(doubleArray79, (double) ' ');
        double double86 = variance1.getResult();
        long long87 = variance1.getN();
        variance1.increment(16.566666666666663d);
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 2168.222222222222d + "'", double9 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 0L + "'", long10 == 0L);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 2168.222222222222d + "'", double21 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[0.0, 1.0, 1.0, 0.0, -1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 16.566666666666663d + "'", double32 == 16.566666666666663d);
        org.junit.Assert.assertTrue(Double.isNaN(double33));
        org.junit.Assert.assertTrue("'" + long36 + "' != '" + 0L + "'", long36 == 0L);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 2168.222222222222d + "'", double46 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[0.0, 1.0, 1.0, 0.0, -1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 16.566666666666663d + "'", double57 == 16.566666666666663d);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 2168.222222222222d + "'", double69 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray79), "[0.0, 1.0, 1.0, 0.0, -1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double80 + "' != '" + 16.566666666666663d + "'", double80 == 16.566666666666663d);
        org.junit.Assert.assertTrue("'" + double82 + "' != '" + 16.566666666666666d + "'", double82 == 16.566666666666666d);
        org.junit.Assert.assertTrue("'" + double85 + "' != '" + 13.805555555555506d + "'", double85 == 13.805555555555506d);
        org.junit.Assert.assertTrue(Double.isNaN(double86));
        org.junit.Assert.assertTrue("'" + long87 + "' != '" + 0L + "'", long87 == 0L);
    }

    @Test
    public void test1294() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1294");
        org.apache.commons.math.stat.descriptive.moment.Variance variance0 = new org.apache.commons.math.stat.descriptive.moment.Variance();
        double double1 = variance0.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance3 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray10 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double11 = variance3.evaluate(doubleArray10);
        variance3.setBiasCorrected(true);
        long long14 = variance3.getN();
        long long15 = variance3.getN();
        boolean boolean17 = variance3.equals((java.lang.Object) 16.566666666666663d);
        boolean boolean19 = variance3.equals((java.lang.Object) (short) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance21 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray28 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double29 = variance21.evaluate(doubleArray28);
        variance21.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance33 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray40 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double41 = variance33.evaluate(doubleArray40);
        variance33.setBiasCorrected(true);
        boolean boolean44 = variance33.isBiasCorrected();
        double[] doubleArray51 = new double[] { (short) 0, 1.0d, 1L, 0.0d, (-1.0d), 10L };
        double double52 = variance33.evaluate(doubleArray51);
        org.apache.commons.math.stat.descriptive.moment.Variance variance54 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray61 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double62 = variance54.evaluate(doubleArray61);
        variance54.setBiasCorrected(true);
        boolean boolean65 = variance54.isBiasCorrected();
        double[] doubleArray72 = new double[] { (short) 0, 1.0d, 1L, 0.0d, (-1.0d), 10L };
        double double73 = variance54.evaluate(doubleArray72);
        double double76 = variance33.evaluate(doubleArray72, (int) (byte) 1, 0);
        double double78 = variance21.evaluate(doubleArray72, 2178.0d);
        double double79 = variance3.evaluate(doubleArray72);
        boolean boolean80 = variance0.equals((java.lang.Object) double79);
        org.apache.commons.math.stat.descriptive.moment.Variance variance82 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray89 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double90 = variance82.evaluate(doubleArray89);
        double double92 = variance0.evaluate(doubleArray89, 2178.0d);
        variance0.setBiasCorrected(true);
        org.junit.Assert.assertTrue(Double.isNaN(double1));
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 2168.222222222222d + "'", double11 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 0L + "'", long14 == 0L);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 0L + "'", long15 == 0L);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 2168.222222222222d + "'", double29 == 2168.222222222222d);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 2168.222222222222d + "'", double41 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[0.0, 1.0, 1.0, 0.0, -1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 16.566666666666663d + "'", double52 == 16.566666666666663d);
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 2168.222222222222d + "'", double62 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray72), "[0.0, 1.0, 1.0, 0.0, -1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double73 + "' != '" + 16.566666666666663d + "'", double73 == 16.566666666666663d);
        org.junit.Assert.assertTrue(Double.isNaN(double76));
        org.junit.Assert.assertTrue("'" + double78 + "' != '" + 16.566666666418314d + "'", double78 == 16.566666666418314d);
        org.junit.Assert.assertTrue("'" + double79 + "' != '" + 16.566666666666663d + "'", double79 == 16.566666666666663d);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertNotNull(doubleArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray89), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double90 + "' != '" + 2168.222222222222d + "'", double90 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + double92 + "' != '" + 2601.8666666664185d + "'", double92 == 2601.8666666664185d);
    }

    @Test
    public void test1295() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1295");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray8 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double9 = variance1.evaluate(doubleArray8);
        variance1.setBiasCorrected(true);
        boolean boolean12 = variance1.isBiasCorrected();
        double double13 = variance1.getResult();
        variance1.setBiasCorrected(false);
        boolean boolean16 = variance1.isBiasCorrected();
        variance1.increment(2601.866666666667d);
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 2168.222222222222d + "'", double9 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double13));
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
    }

    @Test
    public void test1296() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1296");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray8 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double9 = variance1.evaluate(doubleArray8);
        variance1.setBiasCorrected(true);
        boolean boolean12 = variance1.isBiasCorrected();
        double[] doubleArray19 = new double[] { (short) 0, 1.0d, 1L, 0.0d, (-1.0d), 10L };
        double double20 = variance1.evaluate(doubleArray19);
        double double21 = variance1.getResult();
        variance1.setBiasCorrected(true);
        boolean boolean24 = variance1.isBiasCorrected();
        variance1.setBiasCorrected(false);
        variance1.increment(2601.866666666667d);
        org.apache.commons.math.stat.descriptive.moment.Variance variance30 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray37 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double38 = variance30.evaluate(doubleArray37);
        variance30.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance42 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray49 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double50 = variance42.evaluate(doubleArray49);
        variance30.incrementAll(doubleArray49);
        variance30.clear();
        variance30.setBiasCorrected(false);
        variance30.setBiasCorrected(false);
        boolean boolean57 = variance1.equals((java.lang.Object) variance30);
        boolean boolean58 = variance1.isBiasCorrected();
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 2168.222222222222d + "'", double9 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[0.0, 1.0, 1.0, 0.0, -1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 16.566666666666663d + "'", double20 == 16.566666666666663d);
        org.junit.Assert.assertTrue(Double.isNaN(double21));
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 2168.222222222222d + "'", double38 == 2168.222222222222d);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 2168.222222222222d + "'", double50 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
    }

    @Test
    public void test1297() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1297");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance1.clear();
        double double3 = variance1.getResult();
        double[] doubleArray8 = new double[] { (-1), 2168.222222222222d, 16.566666666418314d, 10.0d };
        variance1.incrementAll(doubleArray8);
        org.apache.commons.math.stat.descriptive.moment.Variance variance11 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray18 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double19 = variance11.evaluate(doubleArray18);
        variance11.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance23 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray30 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double31 = variance23.evaluate(doubleArray30);
        variance11.incrementAll(doubleArray30);
        variance11.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance35 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray42 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double43 = variance35.evaluate(doubleArray42);
        double[] doubleArray47 = new double[] { (byte) 1, (byte) 100, 1L };
        double double48 = variance35.evaluate(doubleArray47);
        variance11.incrementAll(doubleArray47, (int) (byte) 0, (int) (byte) 1);
        double double55 = variance1.evaluate(doubleArray47, (double) 'a', (int) (short) 1, (int) (short) 1);
        boolean boolean56 = variance1.isBiasCorrected();
        variance1.setBiasCorrected(false);
        long long59 = variance1.getN();
        boolean boolean60 = variance1.isBiasCorrected();
        variance1.setBiasCorrected(false);
        double double63 = variance1.getResult();
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-1.0, 2168.222222222222, 16.566666666418314, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 2168.222222222222d + "'", double19 == 2168.222222222222d);
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 2168.222222222222d + "'", double31 == 2168.222222222222d);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 2168.222222222222d + "'", double43 == 2168.222222222222d);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[1.0, 100.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 2178.0d + "'", double48 == 2178.0d);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 0.0d + "'", double55 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + long59 + "' != '" + 4L + "'", long59 == 4L);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 874596.4092824734d + "'", double63 == 874596.4092824734d);
    }

    @Test
    public void test1298() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1298");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray8 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double9 = variance1.evaluate(doubleArray8);
        long long10 = variance1.getN();
        variance1.increment((double) (byte) 1);
        variance1.increment((double) 6L);
        double double15 = variance1.getResult();
        double double16 = variance1.getResult();
        variance1.increment((double) 10);
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 2168.222222222222d + "'", double9 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 0L + "'", long10 == 0L);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 6.25d + "'", double15 == 6.25d);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 6.25d + "'", double16 == 6.25d);
    }

    @Test
    public void test1299() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1299");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray8 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double9 = variance1.evaluate(doubleArray8);
        variance1.setBiasCorrected(true);
        long long12 = variance1.getN();
        long long13 = variance1.getN();
        boolean boolean15 = variance1.equals((java.lang.Object) 16.566666666666663d);
        org.apache.commons.math.stat.descriptive.moment.Variance variance17 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray24 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double25 = variance17.evaluate(doubleArray24);
        variance17.setBiasCorrected(true);
        boolean boolean28 = variance17.isBiasCorrected();
        double[] doubleArray35 = new double[] { (short) 0, 1.0d, 1L, 0.0d, (-1.0d), 10L };
        double double36 = variance17.evaluate(doubleArray35);
        boolean boolean38 = variance17.equals((java.lang.Object) 10.0d);
        boolean boolean39 = variance17.isBiasCorrected();
        org.apache.commons.math.stat.descriptive.moment.Variance variance41 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        boolean boolean42 = variance17.equals((java.lang.Object) false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance44 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray51 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double52 = variance44.evaluate(doubleArray51);
        variance44.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance56 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray63 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double64 = variance56.evaluate(doubleArray63);
        variance44.incrementAll(doubleArray63);
        double double67 = variance17.evaluate(doubleArray63, (double) 100.0f);
        variance17.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance70 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray77 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double78 = variance70.evaluate(doubleArray77);
        variance70.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance82 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray89 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double90 = variance82.evaluate(doubleArray89);
        variance70.incrementAll(doubleArray89);
        variance17.incrementAll(doubleArray89);
        variance1.incrementAll(doubleArray89);
        variance1.clear();
        double double95 = variance1.getResult();
        double double96 = variance1.getResult();
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 2168.222222222222d + "'", double9 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 0L + "'", long12 == 0L);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 0L + "'", long13 == 0L);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 2168.222222222222d + "'", double25 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[0.0, 1.0, 1.0, 0.0, -1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 16.566666666666663d + "'", double36 == 16.566666666666663d);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 2168.222222222222d + "'", double52 == 2168.222222222222d);
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 2168.222222222222d + "'", double64 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 2601.8666666666663d + "'", double67 == 2601.8666666666663d);
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray77), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double78 + "' != '" + 2168.222222222222d + "'", double78 == 2168.222222222222d);
        org.junit.Assert.assertNotNull(doubleArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray89), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double90 + "' != '" + 2168.222222222222d + "'", double90 == 2168.222222222222d);
        org.junit.Assert.assertTrue(Double.isNaN(double95));
        org.junit.Assert.assertTrue(Double.isNaN(double96));
    }

    @Test
    public void test1300() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1300");
        org.apache.commons.math.stat.descriptive.moment.Variance variance0 = new org.apache.commons.math.stat.descriptive.moment.Variance();
        long long1 = variance0.getN();
        long long2 = variance0.getN();
        long long3 = variance0.getN();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment5 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance6 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment5);
        double[] doubleArray7 = new double[] {};
        double double10 = variance6.evaluate(doubleArray7, 0, 0);
        boolean boolean12 = variance6.equals((java.lang.Object) 10);
        variance6.increment(Double.NaN);
        variance6.clear();
        java.lang.Class<?> wildcardClass16 = variance6.getClass();
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean17 = variance0.equals((java.lang.Object) variance6);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 0L + "'", long3 == 0L);
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double10));
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(wildcardClass16);
    }

    @Test
    public void test1301() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1301");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment1 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance2 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment1);
        double[] doubleArray3 = new double[] {};
        double double6 = variance2.evaluate(doubleArray3, 0, 0);
        variance2.setBiasCorrected(true);
        variance2.clear();
        variance2.setBiasCorrected(false);
        variance2.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance15 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray22 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double23 = variance15.evaluate(doubleArray22);
        variance15.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance27 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray34 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double35 = variance27.evaluate(doubleArray34);
        variance27.setBiasCorrected(true);
        boolean boolean38 = variance27.isBiasCorrected();
        double[] doubleArray45 = new double[] { (short) 0, 1.0d, 1L, 0.0d, (-1.0d), 10L };
        double double46 = variance27.evaluate(doubleArray45);
        double double49 = variance15.evaluate(doubleArray45, (int) (byte) 1, (int) (byte) 0);
        variance15.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance52 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray59 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double60 = variance52.evaluate(doubleArray59);
        variance52.clear();
        variance52.setBiasCorrected(true);
        double double64 = variance52.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance66 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray73 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double74 = variance66.evaluate(doubleArray73);
        double double75 = variance52.evaluate(doubleArray73);
        double double79 = variance15.evaluate(doubleArray73, 16.566666666666666d, 0, (int) (short) 0);
        // The following exception was thrown during execution in test generation
        try {
            double double83 = variance2.evaluate(doubleArray73, 2168.2220052083335d, (int) 'a', (int) '4');
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: begin + length > values.length");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 2168.222222222222d + "'", double23 == 2168.222222222222d);
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 2168.222222222222d + "'", double35 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[0.0, 1.0, 1.0, 0.0, -1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 16.566666666666663d + "'", double46 == 16.566666666666663d);
        org.junit.Assert.assertTrue(Double.isNaN(double49));
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 2168.222222222222d + "'", double60 == 2168.222222222222d);
        org.junit.Assert.assertTrue(Double.isNaN(double64));
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double74 + "' != '" + 2168.222222222222d + "'", double74 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + double75 + "' != '" + 2601.866666666667d + "'", double75 == 2601.866666666667d);
        org.junit.Assert.assertTrue(Double.isNaN(double79));
    }

    @Test
    public void test1302() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1302");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray8 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double9 = variance1.evaluate(doubleArray8);
        variance1.setBiasCorrected(true);
        boolean boolean12 = variance1.isBiasCorrected();
        double[] doubleArray19 = new double[] { (short) 0, 1.0d, 1L, 0.0d, (-1.0d), 10L };
        double double20 = variance1.evaluate(doubleArray19);
        double double21 = variance1.getResult();
        long long22 = variance1.getN();
        java.lang.Object obj23 = null;
        boolean boolean24 = variance1.equals(obj23);
        long long25 = variance1.getN();
        variance1.setBiasCorrected(true);
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 2168.222222222222d + "'", double9 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[0.0, 1.0, 1.0, 0.0, -1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 16.566666666666663d + "'", double20 == 16.566666666666663d);
        org.junit.Assert.assertTrue(Double.isNaN(double21));
        org.junit.Assert.assertTrue("'" + long22 + "' != '" + 0L + "'", long22 == 0L);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + long25 + "' != '" + 0L + "'", long25 == 0L);
    }

    @Test
    public void test1303() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1303");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray8 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double9 = variance1.evaluate(doubleArray8);
        variance1.setBiasCorrected(true);
        variance1.increment((double) (byte) 0);
        variance1.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance17 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray24 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double25 = variance17.evaluate(doubleArray24);
        variance17.setBiasCorrected(true);
        long long28 = variance17.getN();
        long long29 = variance17.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance31 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray38 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double39 = variance31.evaluate(doubleArray38);
        double[] doubleArray43 = new double[] { (byte) 1, (byte) 100, 1L };
        double double44 = variance31.evaluate(doubleArray43);
        double double46 = variance17.evaluate(doubleArray43, (double) 10.0f);
        long long47 = variance17.getN();
        double double48 = variance17.getResult();
        double double49 = variance17.getResult();
        double double50 = variance17.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance51 = new org.apache.commons.math.stat.descriptive.moment.Variance();
        long long52 = variance51.getN();
        variance51.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance56 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray63 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double64 = variance56.evaluate(doubleArray63);
        variance56.clear();
        variance56.setBiasCorrected(false);
        variance56.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance70 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray77 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double78 = variance70.evaluate(doubleArray77);
        variance70.setBiasCorrected(true);
        variance70.increment((double) (byte) 0);
        double[] doubleArray85 = new double[] { 'a', 100L };
        double double87 = variance70.evaluate(doubleArray85, 0.0d);
        double double88 = variance56.evaluate(doubleArray85);
        variance51.incrementAll(doubleArray85, 1, (int) (byte) 1);
        variance17.incrementAll(doubleArray85);
        // The following exception was thrown during execution in test generation
        try {
            variance1.incrementAll(doubleArray85, (int) ' ', (int) 'a');
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: begin + length > values.length");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 2168.222222222222d + "'", double9 == 2168.222222222222d);
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 2168.222222222222d + "'", double25 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + long28 + "' != '" + 0L + "'", long28 == 0L);
        org.junit.Assert.assertTrue("'" + long29 + "' != '" + 0L + "'", long29 == 0L);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 2168.222222222222d + "'", double39 == 2168.222222222222d);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[1.0, 100.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 2178.0d + "'", double44 == 2178.0d);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 3267.0d + "'", double46 == 3267.0d);
        org.junit.Assert.assertTrue("'" + long47 + "' != '" + 0L + "'", long47 == 0L);
        org.junit.Assert.assertTrue(Double.isNaN(double48));
        org.junit.Assert.assertTrue(Double.isNaN(double49));
        org.junit.Assert.assertTrue(Double.isNaN(double50));
        org.junit.Assert.assertTrue("'" + long52 + "' != '" + 0L + "'", long52 == 0L);
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 2168.222222222222d + "'", double64 == 2168.222222222222d);
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray77), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double78 + "' != '" + 2168.222222222222d + "'", double78 == 2168.222222222222d);
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray85), "[97.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double87 + "' != '" + 4.5d + "'", double87 == 4.5d);
        org.junit.Assert.assertTrue("'" + double88 + "' != '" + 2.25d + "'", double88 == 2.25d);
    }

    @Test
    public void test1304() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1304");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray8 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double9 = variance1.evaluate(doubleArray8);
        variance1.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance13 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray20 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double21 = variance13.evaluate(doubleArray20);
        variance1.incrementAll(doubleArray20);
        variance1.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance25 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray32 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double33 = variance25.evaluate(doubleArray32);
        double[] doubleArray37 = new double[] { (byte) 1, (byte) 100, 1L };
        double double38 = variance25.evaluate(doubleArray37);
        variance1.incrementAll(doubleArray37, (int) (byte) 0, (int) (byte) 1);
        long long42 = variance1.getN();
        variance1.clear();
        variance1.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance47 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray54 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double55 = variance47.evaluate(doubleArray54);
        variance47.clear();
        variance47.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance60 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance60.clear();
        double double62 = variance60.getResult();
        double[] doubleArray67 = new double[] { (-1), 2168.222222222222d, 16.566666666418314d, 10.0d };
        variance60.incrementAll(doubleArray67);
        boolean boolean69 = variance47.equals((java.lang.Object) doubleArray67);
        boolean boolean70 = variance1.equals((java.lang.Object) variance47);
        variance47.increment(23.333333333333332d);
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 2168.222222222222d + "'", double9 == 2168.222222222222d);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 2168.222222222222d + "'", double21 == 2168.222222222222d);
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 2168.222222222222d + "'", double33 == 2168.222222222222d);
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[1.0, 100.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 2178.0d + "'", double38 == 2178.0d);
        org.junit.Assert.assertTrue("'" + long42 + "' != '" + 1L + "'", long42 == 1L);
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 2168.222222222222d + "'", double55 == 2168.222222222222d);
        org.junit.Assert.assertTrue(Double.isNaN(double62));
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[-1.0, 2168.222222222222, 16.566666666418314, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
    }

    @Test
    public void test1305() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1305");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray8 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double9 = variance1.evaluate(doubleArray8);
        variance1.setBiasCorrected(true);
        boolean boolean12 = variance1.isBiasCorrected();
        double[] doubleArray19 = new double[] { (short) 0, 1.0d, 1L, 0.0d, (-1.0d), 10L };
        double double20 = variance1.evaluate(doubleArray19);
        double double21 = variance1.getResult();
        variance1.setBiasCorrected(true);
        boolean boolean24 = variance1.isBiasCorrected();
        variance1.setBiasCorrected(false);
        variance1.increment(2601.866666666667d);
        org.apache.commons.math.stat.descriptive.moment.Variance variance30 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray37 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double38 = variance30.evaluate(doubleArray37);
        variance30.setBiasCorrected(true);
        boolean boolean41 = variance30.isBiasCorrected();
        org.apache.commons.math.stat.descriptive.moment.Variance variance43 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray50 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double51 = variance43.evaluate(doubleArray50);
        variance43.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance55 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray62 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double63 = variance55.evaluate(doubleArray62);
        variance43.incrementAll(doubleArray62);
        variance43.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance67 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray74 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double75 = variance67.evaluate(doubleArray74);
        double[] doubleArray79 = new double[] { (byte) 1, (byte) 100, 1L };
        double double80 = variance67.evaluate(doubleArray79);
        variance43.incrementAll(doubleArray79, (int) (byte) 0, (int) (byte) 1);
        double double85 = variance30.evaluate(doubleArray79, (double) '4');
        double double87 = variance1.evaluate(doubleArray79, Double.NaN);
        boolean boolean88 = variance1.isBiasCorrected();
        double double89 = variance1.getResult();
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 2168.222222222222d + "'", double9 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[0.0, 1.0, 1.0, 0.0, -1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 16.566666666666663d + "'", double20 == 16.566666666666663d);
        org.junit.Assert.assertTrue(Double.isNaN(double21));
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 2168.222222222222d + "'", double38 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 2168.222222222222d + "'", double51 == 2168.222222222222d);
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 2168.222222222222d + "'", double63 == 2168.222222222222d);
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray74), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double75 + "' != '" + 2168.222222222222d + "'", double75 == 2168.222222222222d);
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray79), "[1.0, 100.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double80 + "' != '" + 2178.0d + "'", double80 == 2178.0d);
        org.junit.Assert.assertTrue("'" + double85 + "' != '" + 3267.0d + "'", double85 == 3267.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double87));
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertTrue("'" + double89 + "' != '" + 0.0d + "'", double89 == 0.0d);
    }

    @Test
    public void test1306() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1306");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment1 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance2 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment1);
        variance2.increment((double) 1.0f);
        variance2.setBiasCorrected(true);
        variance2.clear();
        variance2.setBiasCorrected(false);
    }

    @Test
    public void test1307() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1307");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray8 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double9 = variance1.evaluate(doubleArray8);
        variance1.clear();
        java.lang.Object obj11 = null;
        boolean boolean12 = variance1.equals(obj11);
        boolean boolean13 = variance1.isBiasCorrected();
        variance1.increment((double) (byte) 10);
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 2168.222222222222d + "'", double9 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
    }

    @Test
    public void test1308() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1308");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray8 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double9 = variance1.evaluate(doubleArray8);
        variance1.setBiasCorrected(true);
        long long12 = variance1.getN();
        variance1.clear();
        double double14 = variance1.getResult();
        long long15 = variance1.getN();
        long long16 = variance1.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance18 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance18.clear();
        double double20 = variance18.getResult();
        double[] doubleArray25 = new double[] { (-1), 2168.222222222222d, 16.566666666418314d, 10.0d };
        variance18.incrementAll(doubleArray25);
        org.apache.commons.math.stat.descriptive.moment.Variance variance28 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray35 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double36 = variance28.evaluate(doubleArray35);
        variance28.setBiasCorrected(true);
        boolean boolean39 = variance28.isBiasCorrected();
        double[] doubleArray46 = new double[] { (short) 0, 1.0d, 1L, 0.0d, (-1.0d), 10L };
        double double47 = variance28.evaluate(doubleArray46);
        double double48 = variance28.getResult();
        variance28.setBiasCorrected(true);
        boolean boolean51 = variance28.isBiasCorrected();
        variance28.setBiasCorrected(false);
        variance28.increment(2601.866666666667d);
        org.apache.commons.math.stat.descriptive.moment.Variance variance57 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray64 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double65 = variance57.evaluate(doubleArray64);
        variance57.clear();
        variance57.setBiasCorrected(true);
        double double69 = variance57.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance71 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray78 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double79 = variance71.evaluate(doubleArray78);
        double double80 = variance57.evaluate(doubleArray78);
        double double81 = variance28.evaluate(doubleArray78);
        double double82 = variance18.evaluate(doubleArray78);
        double double84 = variance1.evaluate(doubleArray78, (double) 6L);
        java.lang.Class<?> wildcardClass85 = variance1.getClass();
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 2168.222222222222d + "'", double9 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 0L + "'", long12 == 0L);
        org.junit.Assert.assertTrue(Double.isNaN(double14));
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 0L + "'", long15 == 0L);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 0L + "'", long16 == 0L);
        org.junit.Assert.assertTrue(Double.isNaN(double20));
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[-1.0, 2168.222222222222, 16.566666666418314, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 2168.222222222222d + "'", double36 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[0.0, 1.0, 1.0, 0.0, -1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 16.566666666666663d + "'", double47 == 16.566666666666663d);
        org.junit.Assert.assertTrue(Double.isNaN(double48));
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 2168.222222222222d + "'", double65 == 2168.222222222222d);
        org.junit.Assert.assertTrue(Double.isNaN(double69));
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray78), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double79 + "' != '" + 2168.222222222222d + "'", double79 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + double80 + "' != '" + 2601.866666666667d + "'", double80 == 2601.866666666667d);
        org.junit.Assert.assertTrue("'" + double81 + "' != '" + 2168.222222222222d + "'", double81 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + double82 + "' != '" + 2168.222222222222d + "'", double82 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + double84 + "' != '" + 2601.8666666666663d + "'", double84 == 2601.8666666666663d);
        org.junit.Assert.assertNotNull(wildcardClass85);
    }

    @Test
    public void test1309() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1309");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance1.clear();
        double double3 = variance1.getResult();
        variance1.increment((double) '4');
        double double6 = variance1.getResult();
        long long7 = variance1.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray16 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double17 = variance9.evaluate(doubleArray16);
        variance9.setBiasCorrected(true);
        boolean boolean20 = variance9.isBiasCorrected();
        double[] doubleArray27 = new double[] { (short) 0, 1.0d, 1L, 0.0d, (-1.0d), 10L };
        double double28 = variance9.evaluate(doubleArray27);
        double double29 = variance9.getResult();
        variance9.setBiasCorrected(true);
        boolean boolean32 = variance9.isBiasCorrected();
        variance9.setBiasCorrected(false);
        variance9.increment(2601.866666666667d);
        org.apache.commons.math.stat.descriptive.moment.Variance variance38 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray45 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double46 = variance38.evaluate(doubleArray45);
        variance38.clear();
        variance38.setBiasCorrected(true);
        double double50 = variance38.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance52 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray59 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double60 = variance52.evaluate(doubleArray59);
        double double61 = variance38.evaluate(doubleArray59);
        double double62 = variance9.evaluate(doubleArray59);
        double double64 = variance1.evaluate(doubleArray59, (double) 10);
        variance1.clear();
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 1L + "'", long7 == 1L);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 2168.222222222222d + "'", double17 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[0.0, 1.0, 1.0, 0.0, -1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 16.566666666666663d + "'", double28 == 16.566666666666663d);
        org.junit.Assert.assertTrue(Double.isNaN(double29));
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 2168.222222222222d + "'", double46 == 2168.222222222222d);
        org.junit.Assert.assertTrue(Double.isNaN(double50));
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 2168.222222222222d + "'", double60 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 2601.866666666667d + "'", double61 == 2601.866666666667d);
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 2168.222222222222d + "'", double62 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 2168.222222222222d + "'", double64 == 2168.222222222222d);
    }

    @Test
    public void test1310() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1310");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray8 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double9 = variance1.evaluate(doubleArray8);
        variance1.setBiasCorrected(true);
        long long12 = variance1.getN();
        long long13 = variance1.getN();
        boolean boolean14 = variance1.isBiasCorrected();
        org.apache.commons.math.stat.descriptive.moment.Variance variance16 = new org.apache.commons.math.stat.descriptive.moment.Variance(true);
        double double17 = variance16.getResult();
        double double18 = variance16.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance20 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray27 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double28 = variance20.evaluate(doubleArray27);
        variance20.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance32 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray39 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double40 = variance32.evaluate(doubleArray39);
        variance20.incrementAll(doubleArray39);
        variance20.clear();
        variance20.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance46 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray53 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double54 = variance46.evaluate(doubleArray53);
        variance46.setBiasCorrected(true);
        long long57 = variance46.getN();
        long long58 = variance46.getN();
        boolean boolean60 = variance46.equals((java.lang.Object) 16.566666666666663d);
        boolean boolean62 = variance46.equals((java.lang.Object) (short) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance64 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray71 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double72 = variance64.evaluate(doubleArray71);
        variance64.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance76 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray83 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double84 = variance76.evaluate(doubleArray83);
        variance64.incrementAll(doubleArray83);
        double double86 = variance46.evaluate(doubleArray83);
        double double88 = variance20.evaluate(doubleArray83, (double) (byte) 100);
        double double90 = variance16.evaluate(doubleArray83, (double) (-1));
        double double92 = variance1.evaluate(doubleArray83, 874596.4092824734d);
        long long93 = variance1.getN();
        variance1.increment((double) 7L);
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 2168.222222222222d + "'", double9 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 0L + "'", long12 == 0L);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 0L + "'", long13 == 0L);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double17));
        org.junit.Assert.assertTrue(Double.isNaN(double18));
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 2168.222222222222d + "'", double28 == 2168.222222222222d);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 2168.222222222222d + "'", double40 == 2168.222222222222d);
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray53), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 2168.222222222222d + "'", double54 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + long57 + "' != '" + 0L + "'", long57 == 0L);
        org.junit.Assert.assertTrue("'" + long58 + "' != '" + 0L + "'", long58 == 0L);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 2168.222222222222d + "'", double72 == 2168.222222222222d);
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray83), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double84 + "' != '" + 2168.222222222222d + "'", double84 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + double86 + "' != '" + 2601.866666666667d + "'", double86 == 2601.866666666667d);
        org.junit.Assert.assertTrue("'" + double88 + "' != '" + 2168.222222222222d + "'", double88 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + double90 + "' != '" + 2601.8666666666663d + "'", double90 == 2601.8666666666663d);
        org.junit.Assert.assertTrue("'" + double92 + "' != '" + 2601.86640625d + "'", double92 == 2601.86640625d);
        org.junit.Assert.assertTrue("'" + long93 + "' != '" + 0L + "'", long93 == 0L);
    }

    @Test
    public void test1311() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1311");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray8 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double9 = variance1.evaluate(doubleArray8);
        variance1.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance13 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray20 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double21 = variance13.evaluate(doubleArray20);
        variance1.incrementAll(doubleArray20);
        variance1.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance25 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray32 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double33 = variance25.evaluate(doubleArray32);
        double[] doubleArray37 = new double[] { (byte) 1, (byte) 100, 1L };
        double double38 = variance25.evaluate(doubleArray37);
        variance1.incrementAll(doubleArray37, (int) (byte) 0, (int) (byte) 1);
        long long42 = variance1.getN();
        boolean boolean44 = variance1.equals((java.lang.Object) (short) -1);
        double double45 = variance1.getResult();
        java.lang.Class<?> wildcardClass46 = variance1.getClass();
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 2168.222222222222d + "'", double9 == 2168.222222222222d);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 2168.222222222222d + "'", double21 == 2168.222222222222d);
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 2168.222222222222d + "'", double33 == 2168.222222222222d);
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[1.0, 100.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 2178.0d + "'", double38 == 2178.0d);
        org.junit.Assert.assertTrue("'" + long42 + "' != '" + 1L + "'", long42 == 1L);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 0.0d + "'", double45 == 0.0d);
        org.junit.Assert.assertNotNull(wildcardClass46);
    }

    @Test
    public void test1312() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1312");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray8 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double9 = variance1.evaluate(doubleArray8);
        variance1.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance13 = new org.apache.commons.math.stat.descriptive.moment.Variance(true);
        boolean boolean14 = variance1.equals((java.lang.Object) true);
        java.lang.Object obj15 = null;
        boolean boolean16 = variance1.equals(obj15);
        long long17 = variance1.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance19 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance19.clear();
        double double21 = variance19.getResult();
        variance19.setBiasCorrected(true);
        variance19.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance27 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray34 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double35 = variance27.evaluate(doubleArray34);
        variance27.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance39 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray46 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double47 = variance39.evaluate(doubleArray46);
        variance39.setBiasCorrected(true);
        boolean boolean50 = variance39.isBiasCorrected();
        double[] doubleArray57 = new double[] { (short) 0, 1.0d, 1L, 0.0d, (-1.0d), 10L };
        double double58 = variance39.evaluate(doubleArray57);
        double double61 = variance27.evaluate(doubleArray57, (int) (byte) 1, (int) (byte) 0);
        variance19.incrementAll(doubleArray57);
        variance1.incrementAll(doubleArray57);
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 2168.222222222222d + "'", double9 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + 0L + "'", long17 == 0L);
        org.junit.Assert.assertTrue(Double.isNaN(double21));
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 2168.222222222222d + "'", double35 == 2168.222222222222d);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 2168.222222222222d + "'", double47 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[0.0, 1.0, 1.0, 0.0, -1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 16.566666666666663d + "'", double58 == 16.566666666666663d);
        org.junit.Assert.assertTrue(Double.isNaN(double61));
    }

    @Test
    public void test1313() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1313");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray8 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double9 = variance1.evaluate(doubleArray8);
        variance1.setBiasCorrected(true);
        boolean boolean12 = variance1.isBiasCorrected();
        org.apache.commons.math.stat.descriptive.moment.Variance variance14 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray21 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double22 = variance14.evaluate(doubleArray21);
        variance14.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance26 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray33 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double34 = variance26.evaluate(doubleArray33);
        variance26.setBiasCorrected(true);
        boolean boolean37 = variance26.isBiasCorrected();
        double[] doubleArray44 = new double[] { (short) 0, 1.0d, 1L, 0.0d, (-1.0d), 10L };
        double double45 = variance26.evaluate(doubleArray44);
        double double48 = variance14.evaluate(doubleArray44, (int) (byte) 1, (int) (byte) 0);
        double double51 = variance1.evaluate(doubleArray44, (int) (byte) 1, 0);
        variance1.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment55 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance56 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment55);
        variance56.clear();
        double[] doubleArray58 = new double[] {};
        variance56.incrementAll(doubleArray58);
        variance56.increment(2178.0d);
        variance56.setBiasCorrected(false);
        boolean boolean64 = variance56.isBiasCorrected();
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean65 = variance1.equals((java.lang.Object) variance56);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 2168.222222222222d + "'", double9 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 2168.222222222222d + "'", double22 == 2168.222222222222d);
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 2168.222222222222d + "'", double34 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[0.0, 1.0, 1.0, 0.0, -1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 16.566666666666663d + "'", double45 == 16.566666666666663d);
        org.junit.Assert.assertTrue(Double.isNaN(double48));
        org.junit.Assert.assertTrue(Double.isNaN(double51));
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[]");
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
    }

    @Test
    public void test1314() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1314");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray8 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double9 = variance1.evaluate(doubleArray8);
        variance1.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance13 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray20 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double21 = variance13.evaluate(doubleArray20);
        variance13.setBiasCorrected(true);
        boolean boolean24 = variance13.isBiasCorrected();
        double[] doubleArray31 = new double[] { (short) 0, 1.0d, 1L, 0.0d, (-1.0d), 10L };
        double double32 = variance13.evaluate(doubleArray31);
        double double35 = variance1.evaluate(doubleArray31, (int) (byte) 1, (int) (byte) 0);
        org.apache.commons.math.stat.descriptive.moment.Variance variance37 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance39 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray46 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double47 = variance39.evaluate(doubleArray46);
        variance39.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance51 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray58 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double59 = variance51.evaluate(doubleArray58);
        variance51.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance63 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray70 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double71 = variance63.evaluate(doubleArray70);
        variance63.setBiasCorrected(true);
        boolean boolean74 = variance63.isBiasCorrected();
        double[] doubleArray81 = new double[] { (short) 0, 1.0d, 1L, 0.0d, (-1.0d), 10L };
        double double82 = variance63.evaluate(doubleArray81);
        double double85 = variance51.evaluate(doubleArray81, (int) (byte) 1, (int) (byte) 0);
        variance39.incrementAll(doubleArray81, (int) (byte) 1, 1);
        double double89 = variance37.evaluate(doubleArray81);
        double double90 = variance1.evaluate(doubleArray81);
        variance1.setBiasCorrected(true);
        java.lang.Class<?> wildcardClass93 = variance1.getClass();
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 2168.222222222222d + "'", double9 == 2168.222222222222d);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 2168.222222222222d + "'", double21 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[0.0, 1.0, 1.0, 0.0, -1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 16.566666666666663d + "'", double32 == 16.566666666666663d);
        org.junit.Assert.assertTrue(Double.isNaN(double35));
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 2168.222222222222d + "'", double47 == 2168.222222222222d);
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 2168.222222222222d + "'", double59 == 2168.222222222222d);
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + 2168.222222222222d + "'", double71 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray81), "[0.0, 1.0, 1.0, 0.0, -1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double82 + "' != '" + 16.566666666666663d + "'", double82 == 16.566666666666663d);
        org.junit.Assert.assertTrue(Double.isNaN(double85));
        org.junit.Assert.assertTrue("'" + double89 + "' != '" + 13.805555555555552d + "'", double89 == 13.805555555555552d);
        org.junit.Assert.assertTrue("'" + double90 + "' != '" + 16.566666666666663d + "'", double90 == 16.566666666666663d);
        org.junit.Assert.assertNotNull(wildcardClass93);
    }

    @Test
    public void test1315() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1315");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray8 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double9 = variance1.evaluate(doubleArray8);
        variance1.setBiasCorrected(true);
        boolean boolean12 = variance1.isBiasCorrected();
        double[] doubleArray19 = new double[] { (short) 0, 1.0d, 1L, 0.0d, (-1.0d), 10L };
        double double20 = variance1.evaluate(doubleArray19);
        double double21 = variance1.getResult();
        long long22 = variance1.getN();
        variance1.increment((double) '#');
        variance1.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance27 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray34 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double35 = variance27.evaluate(doubleArray34);
        long long36 = variance27.getN();
        variance27.increment((double) (byte) 1);
        variance27.increment((double) 6L);
        variance27.increment(2178.0d);
        org.apache.commons.math.stat.descriptive.moment.Variance variance44 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance44.clear();
        boolean boolean46 = variance44.isBiasCorrected();
        double double47 = variance44.getResult();
        boolean boolean48 = variance27.equals((java.lang.Object) variance44);
        long long49 = variance44.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance51 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance51.clear();
        double double53 = variance51.getResult();
        double[] doubleArray58 = new double[] { (-1), 2168.222222222222d, 16.566666666418314d, 10.0d };
        variance51.incrementAll(doubleArray58);
        double double61 = variance44.evaluate(doubleArray58, 100.0d);
        boolean boolean62 = variance1.equals((java.lang.Object) 100.0d);
        variance1.clear();
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 2168.222222222222d + "'", double9 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[0.0, 1.0, 1.0, 0.0, -1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 16.566666666666663d + "'", double20 == 16.566666666666663d);
        org.junit.Assert.assertTrue(Double.isNaN(double21));
        org.junit.Assert.assertTrue("'" + long22 + "' != '" + 0L + "'", long22 == 0L);
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 2168.222222222222d + "'", double35 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + long36 + "' != '" + 0L + "'", long36 == 0L);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double47));
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + long49 + "' != '" + 0L + "'", long49 == 0L);
        org.junit.Assert.assertTrue(Double.isNaN(double53));
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[-1.0, 2168.222222222222, 16.566666666418314, 10.0]");
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 874596.4092824734d + "'", double61 == 874596.4092824734d);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
    }

    @Test
    public void test1316() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1316");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray8 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double9 = variance1.evaluate(doubleArray8);
        long long10 = variance1.getN();
        variance1.increment((double) (byte) 1);
        double double13 = variance1.getResult();
        variance1.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance16 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray23 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double24 = variance16.evaluate(doubleArray23);
        double[] doubleArray28 = new double[] { (byte) 1, (byte) 100, 1L };
        double double29 = variance16.evaluate(doubleArray28);
        org.apache.commons.math.stat.descriptive.moment.Variance variance31 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray38 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double39 = variance31.evaluate(doubleArray38);
        variance31.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance43 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray50 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double51 = variance43.evaluate(doubleArray50);
        variance31.incrementAll(doubleArray50);
        variance16.incrementAll(doubleArray50);
        variance16.increment((double) (short) -1);
        org.apache.commons.math.stat.descriptive.moment.Variance variance57 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray64 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double65 = variance57.evaluate(doubleArray64);
        double[] doubleArray69 = new double[] { (byte) 1, (byte) 100, 1L };
        double double70 = variance57.evaluate(doubleArray69);
        org.apache.commons.math.stat.descriptive.moment.Variance variance72 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray79 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double80 = variance72.evaluate(doubleArray79);
        variance72.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance84 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray91 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double92 = variance84.evaluate(doubleArray91);
        variance72.incrementAll(doubleArray91);
        variance57.incrementAll(doubleArray91);
        double double97 = variance16.evaluate(doubleArray91, (int) (short) 0, 0);
        double double98 = variance1.evaluate(doubleArray91);
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 2168.222222222222d + "'", double9 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 0L + "'", long10 == 0L);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 2168.222222222222d + "'", double24 == 2168.222222222222d);
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[1.0, 100.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 2178.0d + "'", double29 == 2178.0d);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 2168.222222222222d + "'", double39 == 2168.222222222222d);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 2168.222222222222d + "'", double51 == 2168.222222222222d);
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 2168.222222222222d + "'", double65 == 2168.222222222222d);
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[1.0, 100.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + 2178.0d + "'", double70 == 2178.0d);
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray79), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double80 + "' != '" + 2168.222222222222d + "'", double80 == 2168.222222222222d);
        org.junit.Assert.assertNotNull(doubleArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray91), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double92 + "' != '" + 2168.222222222222d + "'", double92 == 2168.222222222222d);
        org.junit.Assert.assertTrue(Double.isNaN(double97));
        org.junit.Assert.assertTrue("'" + double98 + "' != '" + 2168.222222222222d + "'", double98 == 2168.222222222222d);
    }

    @Test
    public void test1317() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1317");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray8 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double9 = variance1.evaluate(doubleArray8);
        variance1.setBiasCorrected(true);
        boolean boolean12 = variance1.isBiasCorrected();
        org.apache.commons.math.stat.descriptive.moment.Variance variance14 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray21 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double22 = variance14.evaluate(doubleArray21);
        variance14.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance26 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray33 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double34 = variance26.evaluate(doubleArray33);
        variance26.setBiasCorrected(true);
        boolean boolean37 = variance26.isBiasCorrected();
        double[] doubleArray44 = new double[] { (short) 0, 1.0d, 1L, 0.0d, (-1.0d), 10L };
        double double45 = variance26.evaluate(doubleArray44);
        double double48 = variance14.evaluate(doubleArray44, (int) (byte) 1, (int) (byte) 0);
        double double51 = variance1.evaluate(doubleArray44, (int) (byte) 1, 0);
        org.apache.commons.math.stat.descriptive.moment.Variance variance53 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray60 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double61 = variance53.evaluate(doubleArray60);
        variance53.clear();
        variance53.setBiasCorrected(true);
        boolean boolean65 = variance1.equals((java.lang.Object) variance53);
        boolean boolean66 = variance53.isBiasCorrected();
        java.lang.Class<?> wildcardClass67 = variance53.getClass();
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 2168.222222222222d + "'", double9 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 2168.222222222222d + "'", double22 == 2168.222222222222d);
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 2168.222222222222d + "'", double34 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[0.0, 1.0, 1.0, 0.0, -1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 16.566666666666663d + "'", double45 == 16.566666666666663d);
        org.junit.Assert.assertTrue(Double.isNaN(double48));
        org.junit.Assert.assertTrue(Double.isNaN(double51));
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 2168.222222222222d + "'", double61 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(wildcardClass67);
    }

    @Test
    public void test1318() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1318");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray8 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double9 = variance1.evaluate(doubleArray8);
        variance1.setBiasCorrected(true);
        long long12 = variance1.getN();
        long long13 = variance1.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance15 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray22 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double23 = variance15.evaluate(doubleArray22);
        double[] doubleArray27 = new double[] { (byte) 1, (byte) 100, 1L };
        double double28 = variance15.evaluate(doubleArray27);
        double double30 = variance1.evaluate(doubleArray27, (double) 10.0f);
        long long31 = variance1.getN();
        double double32 = variance1.getResult();
        double double33 = variance1.getResult();
        double double34 = variance1.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance35 = new org.apache.commons.math.stat.descriptive.moment.Variance();
        long long36 = variance35.getN();
        variance35.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance40 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray47 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double48 = variance40.evaluate(doubleArray47);
        variance40.clear();
        variance40.setBiasCorrected(false);
        variance40.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance54 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray61 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double62 = variance54.evaluate(doubleArray61);
        variance54.setBiasCorrected(true);
        variance54.increment((double) (byte) 0);
        double[] doubleArray69 = new double[] { 'a', 100L };
        double double71 = variance54.evaluate(doubleArray69, 0.0d);
        double double72 = variance40.evaluate(doubleArray69);
        variance35.incrementAll(doubleArray69, 1, (int) (byte) 1);
        variance1.incrementAll(doubleArray69);
        variance1.clear();
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 2168.222222222222d + "'", double9 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 0L + "'", long12 == 0L);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 0L + "'", long13 == 0L);
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 2168.222222222222d + "'", double23 == 2168.222222222222d);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[1.0, 100.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 2178.0d + "'", double28 == 2178.0d);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 3267.0d + "'", double30 == 3267.0d);
        org.junit.Assert.assertTrue("'" + long31 + "' != '" + 0L + "'", long31 == 0L);
        org.junit.Assert.assertTrue(Double.isNaN(double32));
        org.junit.Assert.assertTrue(Double.isNaN(double33));
        org.junit.Assert.assertTrue(Double.isNaN(double34));
        org.junit.Assert.assertTrue("'" + long36 + "' != '" + 0L + "'", long36 == 0L);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 2168.222222222222d + "'", double48 == 2168.222222222222d);
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 2168.222222222222d + "'", double62 == 2168.222222222222d);
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[97.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + 4.5d + "'", double71 == 4.5d);
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 2.25d + "'", double72 == 2.25d);
    }

    @Test
    public void test1319() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1319");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray8 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double9 = variance1.evaluate(doubleArray8);
        variance1.setBiasCorrected(true);
        long long12 = variance1.getN();
        long long13 = variance1.getN();
        boolean boolean15 = variance1.equals((java.lang.Object) 16.566666666666663d);
        boolean boolean17 = variance1.equals((java.lang.Object) (short) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance19 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray26 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double27 = variance19.evaluate(doubleArray26);
        variance19.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance31 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray38 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double39 = variance31.evaluate(doubleArray38);
        variance19.incrementAll(doubleArray38);
        double double41 = variance1.evaluate(doubleArray38);
        long long42 = variance1.getN();
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 2168.222222222222d + "'", double9 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 0L + "'", long12 == 0L);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 0L + "'", long13 == 0L);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 2168.222222222222d + "'", double27 == 2168.222222222222d);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 2168.222222222222d + "'", double39 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 2601.866666666667d + "'", double41 == 2601.866666666667d);
        org.junit.Assert.assertTrue("'" + long42 + "' != '" + 0L + "'", long42 == 0L);
    }

    @Test
    public void test1320() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1320");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment1 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance2 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment1);
        double[] doubleArray3 = new double[] {};
        double double6 = variance2.evaluate(doubleArray3, 0, 0);
        boolean boolean8 = variance2.equals((java.lang.Object) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance10 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance10.clear();
        double double12 = variance10.getResult();
        double[] doubleArray17 = new double[] { (-1), 2168.222222222222d, 16.566666666418314d, 10.0d };
        variance10.incrementAll(doubleArray17);
        org.apache.commons.math.stat.descriptive.moment.Variance variance20 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray27 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double28 = variance20.evaluate(doubleArray27);
        variance20.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance32 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray39 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double40 = variance32.evaluate(doubleArray39);
        variance20.incrementAll(doubleArray39);
        variance20.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance44 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray51 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double52 = variance44.evaluate(doubleArray51);
        double[] doubleArray56 = new double[] { (byte) 1, (byte) 100, 1L };
        double double57 = variance44.evaluate(doubleArray56);
        variance20.incrementAll(doubleArray56, (int) (byte) 0, (int) (byte) 1);
        double double64 = variance10.evaluate(doubleArray56, (double) 'a', (int) (short) 1, (int) (short) 1);
        variance10.increment((double) (byte) -1);
        org.apache.commons.math.stat.descriptive.moment.Variance variance68 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray75 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double76 = variance68.evaluate(doubleArray75);
        double[] doubleArray80 = new double[] { (byte) 1, (byte) 100, 1L };
        double double81 = variance68.evaluate(doubleArray80);
        double double82 = variance10.evaluate(doubleArray80);
        // The following exception was thrown during execution in test generation
        try {
            double double86 = variance2.evaluate(doubleArray80, 3267.0d, (int) (byte) 100, (int) (short) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: begin + length > values.length");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double12));
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[-1.0, 2168.222222222222, 16.566666666418314, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 2168.222222222222d + "'", double28 == 2168.222222222222d);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 2168.222222222222d + "'", double40 == 2168.222222222222d);
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 2168.222222222222d + "'", double52 == 2168.222222222222d);
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[1.0, 100.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 2178.0d + "'", double57 == 2178.0d);
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 0.0d + "'", double64 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray75), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double76 + "' != '" + 2168.222222222222d + "'", double76 == 2168.222222222222d);
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray80), "[1.0, 100.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double81 + "' != '" + 2178.0d + "'", double81 == 2178.0d);
        org.junit.Assert.assertTrue("'" + double82 + "' != '" + 2178.0d + "'", double82 == 2178.0d);
    }

    @Test
    public void test1321() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1321");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance1.clear();
        boolean boolean3 = variance1.isBiasCorrected();
        long long4 = variance1.getN();
        variance1.setBiasCorrected(true);
        variance1.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance10 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance10.clear();
        long long12 = variance10.getN();
        double double13 = variance10.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance15 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray22 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double23 = variance15.evaluate(doubleArray22);
        variance15.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance27 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray34 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double35 = variance27.evaluate(doubleArray34);
        variance27.setBiasCorrected(true);
        boolean boolean38 = variance27.isBiasCorrected();
        double[] doubleArray45 = new double[] { (short) 0, 1.0d, 1L, 0.0d, (-1.0d), 10L };
        double double46 = variance27.evaluate(doubleArray45);
        double double49 = variance15.evaluate(doubleArray45, (int) (byte) 1, (int) (byte) 0);
        variance15.setBiasCorrected(true);
        variance15.setBiasCorrected(false);
        variance15.clear();
        boolean boolean55 = variance15.isBiasCorrected();
        org.apache.commons.math.stat.descriptive.moment.Variance variance57 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray64 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double65 = variance57.evaluate(doubleArray64);
        variance57.setBiasCorrected(true);
        long long68 = variance57.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance70 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray77 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double78 = variance70.evaluate(doubleArray77);
        variance70.clear();
        variance70.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance83 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance83.clear();
        double double85 = variance83.getResult();
        double[] doubleArray90 = new double[] { (-1), 2168.222222222222d, 16.566666666418314d, 10.0d };
        variance83.incrementAll(doubleArray90);
        boolean boolean92 = variance70.equals((java.lang.Object) doubleArray90);
        variance57.incrementAll(doubleArray90);
        variance15.incrementAll(doubleArray90);
        double double95 = variance10.evaluate(doubleArray90);
        variance1.incrementAll(doubleArray90);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 0L + "'", long4 == 0L);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 0L + "'", long12 == 0L);
        org.junit.Assert.assertTrue(Double.isNaN(double13));
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 2168.222222222222d + "'", double23 == 2168.222222222222d);
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 2168.222222222222d + "'", double35 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[0.0, 1.0, 1.0, 0.0, -1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 16.566666666666663d + "'", double46 == 16.566666666666663d);
        org.junit.Assert.assertTrue(Double.isNaN(double49));
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 2168.222222222222d + "'", double65 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + long68 + "' != '" + 0L + "'", long68 == 0L);
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray77), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double78 + "' != '" + 2168.222222222222d + "'", double78 == 2168.222222222222d);
        org.junit.Assert.assertTrue(Double.isNaN(double85));
        org.junit.Assert.assertNotNull(doubleArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray90), "[-1.0, 2168.222222222222, 16.566666666418314, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
        org.junit.Assert.assertTrue("'" + double95 + "' != '" + 874596.4092824734d + "'", double95 == 874596.4092824734d);
    }

    @Test
    public void test1322() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1322");
        org.apache.commons.math.stat.descriptive.moment.Variance variance0 = new org.apache.commons.math.stat.descriptive.moment.Variance();
        double double1 = variance0.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance3 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray10 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double11 = variance3.evaluate(doubleArray10);
        variance3.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance15 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray22 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double23 = variance15.evaluate(doubleArray22);
        variance3.incrementAll(doubleArray22);
        boolean boolean25 = variance0.equals((java.lang.Object) variance3);
        org.apache.commons.math.stat.descriptive.moment.Variance variance27 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray34 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double35 = variance27.evaluate(doubleArray34);
        variance27.clear();
        boolean boolean37 = variance3.equals((java.lang.Object) variance27);
        double double38 = variance3.getResult();
        org.junit.Assert.assertTrue(Double.isNaN(double1));
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 2168.222222222222d + "'", double11 == 2168.222222222222d);
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 2168.222222222222d + "'", double23 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 2168.222222222222d + "'", double35 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 2601.866666666667d + "'", double38 == 2601.866666666667d);
    }

    @Test
    public void test1323() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1323");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment1 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance2 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment1);
        variance2.clear();
        variance2.setBiasCorrected(false);
        boolean boolean6 = variance2.isBiasCorrected();
        variance2.clear();
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    }

    @Test
    public void test1324() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1324");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray8 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double9 = variance1.evaluate(doubleArray8);
        variance1.setBiasCorrected(true);
        boolean boolean12 = variance1.isBiasCorrected();
        org.apache.commons.math.stat.descriptive.moment.Variance variance14 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray21 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double22 = variance14.evaluate(doubleArray21);
        variance14.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance26 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray33 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double34 = variance26.evaluate(doubleArray33);
        variance26.setBiasCorrected(true);
        boolean boolean37 = variance26.isBiasCorrected();
        double[] doubleArray44 = new double[] { (short) 0, 1.0d, 1L, 0.0d, (-1.0d), 10L };
        double double45 = variance26.evaluate(doubleArray44);
        double double48 = variance14.evaluate(doubleArray44, (int) (byte) 1, (int) (byte) 0);
        double double51 = variance1.evaluate(doubleArray44, (int) (byte) 1, 0);
        variance1.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance55 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray62 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double63 = variance55.evaluate(doubleArray62);
        variance55.setBiasCorrected(true);
        boolean boolean66 = variance55.isBiasCorrected();
        double[] doubleArray73 = new double[] { (short) 0, 1.0d, 1L, 0.0d, (-1.0d), 10L };
        double double74 = variance55.evaluate(doubleArray73);
        double double75 = variance55.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance77 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance77.clear();
        double double79 = variance77.getResult();
        double[] doubleArray84 = new double[] { (-1), 2168.222222222222d, 16.566666666418314d, 10.0d };
        variance77.incrementAll(doubleArray84);
        double double86 = variance55.evaluate(doubleArray84);
        boolean boolean87 = variance1.equals((java.lang.Object) variance55);
        boolean boolean88 = variance1.isBiasCorrected();
        variance1.increment((double) (short) 100);
        boolean boolean91 = variance1.isBiasCorrected();
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 2168.222222222222d + "'", double9 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 2168.222222222222d + "'", double22 == 2168.222222222222d);
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 2168.222222222222d + "'", double34 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[0.0, 1.0, 1.0, 0.0, -1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 16.566666666666663d + "'", double45 == 16.566666666666663d);
        org.junit.Assert.assertTrue(Double.isNaN(double48));
        org.junit.Assert.assertTrue(Double.isNaN(double51));
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 2168.222222222222d + "'", double63 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[0.0, 1.0, 1.0, 0.0, -1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double74 + "' != '" + 16.566666666666663d + "'", double74 == 16.566666666666663d);
        org.junit.Assert.assertTrue(Double.isNaN(double75));
        org.junit.Assert.assertTrue(Double.isNaN(double79));
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray84), "[-1.0, 2168.222222222222, 16.566666666418314, 10.0]");
        org.junit.Assert.assertTrue("'" + double86 + "' != '" + 1166128.5457099646d + "'", double86 == 1166128.5457099646d);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + true + "'", boolean87 == true);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
    }

    @Test
    public void test1325() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1325");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance1.clear();
        double double3 = variance1.getResult();
        double[] doubleArray8 = new double[] { (-1), 2168.222222222222d, 16.566666666418314d, 10.0d };
        variance1.incrementAll(doubleArray8);
        org.apache.commons.math.stat.descriptive.moment.Variance variance11 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray18 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double19 = variance11.evaluate(doubleArray18);
        variance11.setBiasCorrected(true);
        boolean boolean22 = variance11.isBiasCorrected();
        double[] doubleArray29 = new double[] { (short) 0, 1.0d, 1L, 0.0d, (-1.0d), 10L };
        double double30 = variance11.evaluate(doubleArray29);
        double double31 = variance11.getResult();
        variance11.setBiasCorrected(true);
        boolean boolean34 = variance11.isBiasCorrected();
        variance11.setBiasCorrected(false);
        variance11.increment(2601.866666666667d);
        org.apache.commons.math.stat.descriptive.moment.Variance variance40 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray47 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double48 = variance40.evaluate(doubleArray47);
        variance40.clear();
        variance40.setBiasCorrected(true);
        double double52 = variance40.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance54 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray61 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double62 = variance54.evaluate(doubleArray61);
        double double63 = variance40.evaluate(doubleArray61);
        double double64 = variance11.evaluate(doubleArray61);
        double double65 = variance1.evaluate(doubleArray61);
        variance1.increment((double) 0.0f);
        double double68 = variance1.getResult();
        variance1.setBiasCorrected(false);
        double[] doubleArray71 = null;
        // The following exception was thrown during execution in test generation
        try {
            variance1.incrementAll(doubleArray71, (int) ' ', (int) 'a');
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: input value array is null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-1.0, 2168.222222222222, 16.566666666418314, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 2168.222222222222d + "'", double19 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[0.0, 1.0, 1.0, 0.0, -1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 16.566666666666663d + "'", double30 == 16.566666666666663d);
        org.junit.Assert.assertTrue(Double.isNaN(double31));
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 2168.222222222222d + "'", double48 == 2168.222222222222d);
        org.junit.Assert.assertTrue(Double.isNaN(double52));
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 2168.222222222222d + "'", double62 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 2601.866666666667d + "'", double63 == 2601.866666666667d);
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 2168.222222222222d + "'", double64 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 2168.222222222222d + "'", double65 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 0.0d + "'", double68 == 0.0d);
    }

    @Test
    public void test1326() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1326");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray8 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double9 = variance1.evaluate(doubleArray8);
        variance1.setBiasCorrected(true);
        boolean boolean12 = variance1.isBiasCorrected();
        double[] doubleArray19 = new double[] { (short) 0, 1.0d, 1L, 0.0d, (-1.0d), 10L };
        double double20 = variance1.evaluate(doubleArray19);
        double double21 = variance1.getResult();
        variance1.setBiasCorrected(true);
        long long24 = variance1.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance26 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray33 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double34 = variance26.evaluate(doubleArray33);
        variance26.setBiasCorrected(true);
        boolean boolean37 = variance26.isBiasCorrected();
        double[] doubleArray44 = new double[] { (short) 0, 1.0d, 1L, 0.0d, (-1.0d), 10L };
        double double45 = variance26.evaluate(doubleArray44);
        boolean boolean47 = variance26.equals((java.lang.Object) 10.0d);
        org.apache.commons.math.stat.descriptive.moment.Variance variance49 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray56 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double57 = variance49.evaluate(doubleArray56);
        variance49.setBiasCorrected(true);
        boolean boolean60 = variance49.isBiasCorrected();
        double[] doubleArray67 = new double[] { (short) 0, 1.0d, 1L, 0.0d, (-1.0d), 10L };
        double double68 = variance49.evaluate(doubleArray67);
        double double70 = variance26.evaluate(doubleArray67, (double) 0.0f);
        variance1.incrementAll(doubleArray67);
        long long72 = variance1.getN();
        variance1.increment((double) 10);
        variance1.setBiasCorrected(false);
        variance1.clear();
        long long78 = variance1.getN();
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 2168.222222222222d + "'", double9 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[0.0, 1.0, 1.0, 0.0, -1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 16.566666666666663d + "'", double20 == 16.566666666666663d);
        org.junit.Assert.assertTrue(Double.isNaN(double21));
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + 0L + "'", long24 == 0L);
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 2168.222222222222d + "'", double34 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[0.0, 1.0, 1.0, 0.0, -1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 16.566666666666663d + "'", double45 == 16.566666666666663d);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 2168.222222222222d + "'", double57 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[0.0, 1.0, 1.0, 0.0, -1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 16.566666666666663d + "'", double68 == 16.566666666666663d);
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + 16.566666666666666d + "'", double70 == 16.566666666666666d);
        org.junit.Assert.assertTrue("'" + long72 + "' != '" + 6L + "'", long72 == 6L);
        org.junit.Assert.assertTrue("'" + long78 + "' != '" + 0L + "'", long78 == 0L);
    }

    @Test
    public void test1327() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1327");
        org.apache.commons.math.stat.descriptive.moment.Variance variance0 = new org.apache.commons.math.stat.descriptive.moment.Variance();
        double double1 = variance0.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance3 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray10 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double11 = variance3.evaluate(doubleArray10);
        variance3.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance15 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray22 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double23 = variance15.evaluate(doubleArray22);
        variance3.incrementAll(doubleArray22);
        boolean boolean25 = variance0.equals((java.lang.Object) variance3);
        org.apache.commons.math.stat.descriptive.moment.Variance variance27 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray34 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double35 = variance27.evaluate(doubleArray34);
        variance27.clear();
        boolean boolean37 = variance3.equals((java.lang.Object) variance27);
        variance3.increment(13.805555555555552d);
        variance3.increment(10.0d);
        org.apache.commons.math.stat.descriptive.moment.Variance variance43 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray50 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double51 = variance43.evaluate(doubleArray50);
        double[] doubleArray55 = new double[] { (byte) 1, (byte) 100, 1L };
        double double56 = variance43.evaluate(doubleArray55);
        double double57 = variance3.evaluate(doubleArray55);
        boolean boolean58 = variance3.isBiasCorrected();
        org.junit.Assert.assertTrue(Double.isNaN(double1));
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 2168.222222222222d + "'", double11 == 2168.222222222222d);
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 2168.222222222222d + "'", double23 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 2168.222222222222d + "'", double35 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 2168.222222222222d + "'", double51 == 2168.222222222222d);
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[1.0, 100.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 2178.0d + "'", double56 == 2178.0d);
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 3267.0d + "'", double57 == 3267.0d);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
    }

    @Test
    public void test1328() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1328");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray8 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double9 = variance1.evaluate(doubleArray8);
        variance1.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance13 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray20 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double21 = variance13.evaluate(doubleArray20);
        variance1.incrementAll(doubleArray20);
        variance1.clear();
        boolean boolean24 = variance1.isBiasCorrected();
        variance1.increment(2601.866666666667d);
        org.apache.commons.math.stat.descriptive.moment.Variance variance28 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray35 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double36 = variance28.evaluate(doubleArray35);
        variance28.setBiasCorrected(true);
        boolean boolean39 = variance28.isBiasCorrected();
        java.lang.Class<?> wildcardClass40 = variance28.getClass();
        boolean boolean41 = variance1.equals((java.lang.Object) wildcardClass40);
        long long42 = variance1.getN();
        long long43 = variance1.getN();
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 2168.222222222222d + "'", double9 == 2168.222222222222d);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 2168.222222222222d + "'", double21 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 2168.222222222222d + "'", double36 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + long42 + "' != '" + 1L + "'", long42 == 1L);
        org.junit.Assert.assertTrue("'" + long43 + "' != '" + 1L + "'", long43 == 1L);
    }

    @Test
    public void test1329() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1329");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray8 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double9 = variance1.evaluate(doubleArray8);
        variance1.setBiasCorrected(true);
        boolean boolean12 = variance1.isBiasCorrected();
        org.apache.commons.math.stat.descriptive.moment.Variance variance14 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray21 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double22 = variance14.evaluate(doubleArray21);
        variance14.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance26 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray33 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double34 = variance26.evaluate(doubleArray33);
        variance14.incrementAll(doubleArray33);
        variance14.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance38 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray45 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double46 = variance38.evaluate(doubleArray45);
        double[] doubleArray50 = new double[] { (byte) 1, (byte) 100, 1L };
        double double51 = variance38.evaluate(doubleArray50);
        variance14.incrementAll(doubleArray50, (int) (byte) 0, (int) (byte) 1);
        double double56 = variance1.evaluate(doubleArray50, (double) '4');
        boolean boolean57 = variance1.isBiasCorrected();
        variance1.clear();
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 2168.222222222222d + "'", double9 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 2168.222222222222d + "'", double22 == 2168.222222222222d);
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 2168.222222222222d + "'", double34 == 2168.222222222222d);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 2168.222222222222d + "'", double46 == 2168.222222222222d);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[1.0, 100.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 2178.0d + "'", double51 == 2178.0d);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 3267.0d + "'", double56 == 3267.0d);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
    }

    @Test
    public void test1330() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1330");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance1.clear();
        double double3 = variance1.getResult();
        double[] doubleArray8 = new double[] { (-1), 2168.222222222222d, 16.566666666418314d, 10.0d };
        variance1.incrementAll(doubleArray8);
        org.apache.commons.math.stat.descriptive.moment.Variance variance11 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray18 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double19 = variance11.evaluate(doubleArray18);
        variance11.setBiasCorrected(true);
        long long22 = variance11.getN();
        double double23 = variance11.getResult();
        variance11.setBiasCorrected(true);
        boolean boolean26 = variance1.equals((java.lang.Object) variance11);
        double double27 = variance11.getResult();
        long long28 = variance11.getN();
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-1.0, 2168.222222222222, 16.566666666418314, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 2168.222222222222d + "'", double19 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + long22 + "' != '" + 0L + "'", long22 == 0L);
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double27));
        org.junit.Assert.assertTrue("'" + long28 + "' != '" + 0L + "'", long28 == 0L);
    }

    @Test
    public void test1331() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1331");
        org.apache.commons.math.stat.descriptive.moment.Variance variance0 = new org.apache.commons.math.stat.descriptive.moment.Variance();
        variance0.increment(1694.7000000000003d);
        double double3 = variance0.getResult();
        variance0.increment((double) 'a');
        org.apache.commons.math.stat.descriptive.moment.Variance variance7 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray14 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double15 = variance7.evaluate(doubleArray14);
        variance7.setBiasCorrected(true);
        variance7.increment((double) (byte) 0);
        variance7.clear();
        boolean boolean21 = variance7.isBiasCorrected();
        double double22 = variance7.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance24 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray31 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double32 = variance24.evaluate(doubleArray31);
        variance24.setBiasCorrected(true);
        long long35 = variance24.getN();
        long long36 = variance24.getN();
        double double37 = variance24.getResult();
        variance24.clear();
        variance24.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance42 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray49 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double50 = variance42.evaluate(doubleArray49);
        variance42.setBiasCorrected(true);
        boolean boolean53 = variance42.isBiasCorrected();
        double[] doubleArray60 = new double[] { (short) 0, 1.0d, 1L, 0.0d, (-1.0d), 10L };
        double double61 = variance42.evaluate(doubleArray60);
        double double62 = variance42.getResult();
        long long63 = variance42.getN();
        variance42.increment((double) '#');
        variance42.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance69 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray76 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double77 = variance69.evaluate(doubleArray76);
        variance69.setBiasCorrected(true);
        variance69.increment((double) (byte) 0);
        double[] doubleArray84 = new double[] { 'a', 100L };
        double double86 = variance69.evaluate(doubleArray84, 0.0d);
        variance42.incrementAll(doubleArray84);
        variance24.incrementAll(doubleArray84);
        double double89 = variance7.evaluate(doubleArray84);
        double double90 = variance0.evaluate(doubleArray84);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 0.0d + "'", double3 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 2168.222222222222d + "'", double15 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double22));
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 2168.222222222222d + "'", double32 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + long35 + "' != '" + 0L + "'", long35 == 0L);
        org.junit.Assert.assertTrue("'" + long36 + "' != '" + 0L + "'", long36 == 0L);
        org.junit.Assert.assertTrue(Double.isNaN(double37));
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 2168.222222222222d + "'", double50 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[0.0, 1.0, 1.0, 0.0, -1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 16.566666666666663d + "'", double61 == 16.566666666666663d);
        org.junit.Assert.assertTrue(Double.isNaN(double62));
        org.junit.Assert.assertTrue("'" + long63 + "' != '" + 0L + "'", long63 == 0L);
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double77 + "' != '" + 2168.222222222222d + "'", double77 == 2168.222222222222d);
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray84), "[97.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double86 + "' != '" + 4.5d + "'", double86 == 4.5d);
        org.junit.Assert.assertTrue("'" + double89 + "' != '" + 4.5d + "'", double89 == 4.5d);
        org.junit.Assert.assertTrue("'" + double90 + "' != '" + 4.5d + "'", double90 == 4.5d);
    }

    @Test
    public void test1332() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1332");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray8 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double9 = variance1.evaluate(doubleArray8);
        variance1.setBiasCorrected(true);
        boolean boolean12 = variance1.isBiasCorrected();
        double[] doubleArray19 = new double[] { (short) 0, 1.0d, 1L, 0.0d, (-1.0d), 10L };
        double double20 = variance1.evaluate(doubleArray19);
        boolean boolean22 = variance1.equals((java.lang.Object) 10.0d);
        boolean boolean23 = variance1.isBiasCorrected();
        org.apache.commons.math.stat.descriptive.moment.Variance variance25 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        boolean boolean26 = variance1.equals((java.lang.Object) false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance28 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray35 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double36 = variance28.evaluate(doubleArray35);
        variance28.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance40 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray47 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double48 = variance40.evaluate(doubleArray47);
        variance28.incrementAll(doubleArray47);
        double double51 = variance1.evaluate(doubleArray47, (double) 100.0f);
        long long52 = variance1.getN();
        long long53 = variance1.getN();
        variance1.setBiasCorrected(false);
        double double56 = variance1.getResult();
        variance1.setBiasCorrected(true);
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 2168.222222222222d + "'", double9 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[0.0, 1.0, 1.0, 0.0, -1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 16.566666666666663d + "'", double20 == 16.566666666666663d);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 2168.222222222222d + "'", double36 == 2168.222222222222d);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 2168.222222222222d + "'", double48 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 2601.8666666666663d + "'", double51 == 2601.8666666666663d);
        org.junit.Assert.assertTrue("'" + long52 + "' != '" + 0L + "'", long52 == 0L);
        org.junit.Assert.assertTrue("'" + long53 + "' != '" + 0L + "'", long53 == 0L);
        org.junit.Assert.assertTrue(Double.isNaN(double56));
    }

    @Test
    public void test1333() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1333");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray8 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double9 = variance1.evaluate(doubleArray8);
        variance1.setBiasCorrected(true);
        boolean boolean12 = variance1.isBiasCorrected();
        double[] doubleArray19 = new double[] { (short) 0, 1.0d, 1L, 0.0d, (-1.0d), 10L };
        double double20 = variance1.evaluate(doubleArray19);
        double double21 = variance1.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance23 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance23.clear();
        double double25 = variance23.getResult();
        double[] doubleArray30 = new double[] { (-1), 2168.222222222222d, 16.566666666418314d, 10.0d };
        variance23.incrementAll(doubleArray30);
        double double32 = variance1.evaluate(doubleArray30);
        double double33 = variance1.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance35 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance35.clear();
        boolean boolean37 = variance35.isBiasCorrected();
        long long38 = variance35.getN();
        variance35.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance42 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray49 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double50 = variance42.evaluate(doubleArray49);
        variance42.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance54 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray61 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double62 = variance54.evaluate(doubleArray61);
        variance54.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance66 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray73 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double74 = variance66.evaluate(doubleArray73);
        variance66.setBiasCorrected(true);
        boolean boolean77 = variance66.isBiasCorrected();
        double[] doubleArray84 = new double[] { (short) 0, 1.0d, 1L, 0.0d, (-1.0d), 10L };
        double double85 = variance66.evaluate(doubleArray84);
        double double88 = variance54.evaluate(doubleArray84, (int) (byte) 1, (int) (byte) 0);
        variance42.incrementAll(doubleArray84, (int) (byte) 1, 1);
        boolean boolean92 = variance35.equals((java.lang.Object) doubleArray84);
        boolean boolean93 = variance1.equals((java.lang.Object) variance35);
        variance1.increment((double) 10L);
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 2168.222222222222d + "'", double9 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[0.0, 1.0, 1.0, 0.0, -1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 16.566666666666663d + "'", double20 == 16.566666666666663d);
        org.junit.Assert.assertTrue(Double.isNaN(double21));
        org.junit.Assert.assertTrue(Double.isNaN(double25));
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[-1.0, 2168.222222222222, 16.566666666418314, 10.0]");
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 1166128.5457099646d + "'", double32 == 1166128.5457099646d);
        org.junit.Assert.assertTrue(Double.isNaN(double33));
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + long38 + "' != '" + 0L + "'", long38 == 0L);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 2168.222222222222d + "'", double50 == 2168.222222222222d);
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 2168.222222222222d + "'", double62 == 2168.222222222222d);
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double74 + "' != '" + 2168.222222222222d + "'", double74 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray84), "[0.0, 1.0, 1.0, 0.0, -1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double85 + "' != '" + 16.566666666666663d + "'", double85 == 16.566666666666663d);
        org.junit.Assert.assertTrue(Double.isNaN(double88));
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + true + "'", boolean93 == true);
    }

    @Test
    public void test1334() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1334");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray8 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double9 = variance1.evaluate(doubleArray8);
        long long10 = variance1.getN();
        variance1.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance13 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray20 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double21 = variance13.evaluate(doubleArray20);
        variance13.setBiasCorrected(true);
        boolean boolean24 = variance13.isBiasCorrected();
        double[] doubleArray31 = new double[] { (short) 0, 1.0d, 1L, 0.0d, (-1.0d), 10L };
        double double32 = variance13.evaluate(doubleArray31);
        double double33 = variance13.getResult();
        variance13.setBiasCorrected(true);
        long long36 = variance13.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance38 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray45 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double46 = variance38.evaluate(doubleArray45);
        variance38.setBiasCorrected(true);
        boolean boolean49 = variance38.isBiasCorrected();
        double[] doubleArray56 = new double[] { (short) 0, 1.0d, 1L, 0.0d, (-1.0d), 10L };
        double double57 = variance38.evaluate(doubleArray56);
        boolean boolean59 = variance38.equals((java.lang.Object) 10.0d);
        org.apache.commons.math.stat.descriptive.moment.Variance variance61 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray68 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double69 = variance61.evaluate(doubleArray68);
        variance61.setBiasCorrected(true);
        boolean boolean72 = variance61.isBiasCorrected();
        double[] doubleArray79 = new double[] { (short) 0, 1.0d, 1L, 0.0d, (-1.0d), 10L };
        double double80 = variance61.evaluate(doubleArray79);
        double double82 = variance38.evaluate(doubleArray79, (double) 0.0f);
        variance13.incrementAll(doubleArray79);
        double double85 = variance1.evaluate(doubleArray79, (double) ' ');
        double double86 = variance1.getResult();
        variance1.increment(2601.866666666667d);
        boolean boolean89 = variance1.isBiasCorrected();
        long long90 = variance1.getN();
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 2168.222222222222d + "'", double9 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 0L + "'", long10 == 0L);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 2168.222222222222d + "'", double21 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[0.0, 1.0, 1.0, 0.0, -1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 16.566666666666663d + "'", double32 == 16.566666666666663d);
        org.junit.Assert.assertTrue(Double.isNaN(double33));
        org.junit.Assert.assertTrue("'" + long36 + "' != '" + 0L + "'", long36 == 0L);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 2168.222222222222d + "'", double46 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[0.0, 1.0, 1.0, 0.0, -1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 16.566666666666663d + "'", double57 == 16.566666666666663d);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 2168.222222222222d + "'", double69 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray79), "[0.0, 1.0, 1.0, 0.0, -1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double80 + "' != '" + 16.566666666666663d + "'", double80 == 16.566666666666663d);
        org.junit.Assert.assertTrue("'" + double82 + "' != '" + 16.566666666666666d + "'", double82 == 16.566666666666666d);
        org.junit.Assert.assertTrue("'" + double85 + "' != '" + 13.805555555555506d + "'", double85 == 13.805555555555506d);
        org.junit.Assert.assertTrue(Double.isNaN(double86));
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertTrue("'" + long90 + "' != '" + 1L + "'", long90 == 1L);
    }

    @Test
    public void test1335() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1335");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray8 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double9 = variance1.evaluate(doubleArray8);
        variance1.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance13 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray20 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double21 = variance13.evaluate(doubleArray20);
        variance1.incrementAll(doubleArray20);
        variance1.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance25 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray32 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double33 = variance25.evaluate(doubleArray32);
        double[] doubleArray37 = new double[] { (byte) 1, (byte) 100, 1L };
        double double38 = variance25.evaluate(doubleArray37);
        variance1.incrementAll(doubleArray37, (int) (byte) 0, (int) (byte) 1);
        long long42 = variance1.getN();
        variance1.clear();
        long long44 = variance1.getN();
        boolean boolean46 = variance1.equals((java.lang.Object) (short) 10);
        variance1.clear();
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 2168.222222222222d + "'", double9 == 2168.222222222222d);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 2168.222222222222d + "'", double21 == 2168.222222222222d);
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 2168.222222222222d + "'", double33 == 2168.222222222222d);
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[1.0, 100.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 2178.0d + "'", double38 == 2178.0d);
        org.junit.Assert.assertTrue("'" + long42 + "' != '" + 1L + "'", long42 == 1L);
        org.junit.Assert.assertTrue("'" + long44 + "' != '" + 0L + "'", long44 == 0L);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
    }

    @Test
    public void test1336() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1336");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray8 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double9 = variance1.evaluate(doubleArray8);
        variance1.setBiasCorrected(true);
        boolean boolean12 = variance1.isBiasCorrected();
        double[] doubleArray19 = new double[] { (short) 0, 1.0d, 1L, 0.0d, (-1.0d), 10L };
        double double20 = variance1.evaluate(doubleArray19);
        boolean boolean22 = variance1.equals((java.lang.Object) 10.0d);
        boolean boolean23 = variance1.isBiasCorrected();
        org.apache.commons.math.stat.descriptive.moment.Variance variance25 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        boolean boolean26 = variance1.equals((java.lang.Object) false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance28 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray35 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double36 = variance28.evaluate(doubleArray35);
        variance28.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance40 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray47 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double48 = variance40.evaluate(doubleArray47);
        variance28.incrementAll(doubleArray47);
        double double51 = variance1.evaluate(doubleArray47, (double) 100.0f);
        long long52 = variance1.getN();
        variance1.increment((double) '4');
        boolean boolean55 = variance1.isBiasCorrected();
        boolean boolean56 = variance1.isBiasCorrected();
        variance1.clear();
        boolean boolean58 = variance1.isBiasCorrected();
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 2168.222222222222d + "'", double9 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[0.0, 1.0, 1.0, 0.0, -1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 16.566666666666663d + "'", double20 == 16.566666666666663d);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 2168.222222222222d + "'", double36 == 2168.222222222222d);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 2168.222222222222d + "'", double48 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 2601.8666666666663d + "'", double51 == 2601.8666666666663d);
        org.junit.Assert.assertTrue("'" + long52 + "' != '" + 0L + "'", long52 == 0L);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
    }

    @Test
    public void test1337() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1337");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray8 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double9 = variance1.evaluate(doubleArray8);
        variance1.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance13 = new org.apache.commons.math.stat.descriptive.moment.Variance(true);
        boolean boolean14 = variance1.equals((java.lang.Object) true);
        java.lang.Object obj15 = null;
        boolean boolean16 = variance1.equals(obj15);
        variance1.increment(677378.9558333334d);
        double double19 = variance1.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance20 = new org.apache.commons.math.stat.descriptive.moment.Variance();
        double double21 = variance20.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance23 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray30 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double31 = variance23.evaluate(doubleArray30);
        variance23.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance35 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray42 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double43 = variance35.evaluate(doubleArray42);
        variance23.incrementAll(doubleArray42);
        boolean boolean45 = variance20.equals((java.lang.Object) variance23);
        variance23.increment(Double.NaN);
        org.apache.commons.math.stat.descriptive.moment.Variance variance49 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray56 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double57 = variance49.evaluate(doubleArray56);
        variance49.setBiasCorrected(true);
        long long60 = variance49.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance62 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray69 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double70 = variance62.evaluate(doubleArray69);
        variance62.clear();
        variance62.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance75 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance75.clear();
        double double77 = variance75.getResult();
        double[] doubleArray82 = new double[] { (-1), 2168.222222222222d, 16.566666666418314d, 10.0d };
        variance75.incrementAll(doubleArray82);
        boolean boolean84 = variance62.equals((java.lang.Object) doubleArray82);
        variance49.incrementAll(doubleArray82);
        boolean boolean86 = variance23.equals((java.lang.Object) doubleArray82);
        double double88 = variance1.evaluate(doubleArray82, 874596.4092824734d);
        boolean boolean89 = variance1.isBiasCorrected();
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 2168.222222222222d + "'", double9 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.0d + "'", double19 == 0.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double21));
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 2168.222222222222d + "'", double31 == 2168.222222222222d);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 2168.222222222222d + "'", double43 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 2168.222222222222d + "'", double57 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + long60 + "' != '" + 0L + "'", long60 == 0L);
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + 2168.222222222222d + "'", double70 == 2168.222222222222d);
        org.junit.Assert.assertTrue(Double.isNaN(double77));
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray82), "[-1.0, 2168.222222222222, 16.566666666418314, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertTrue("'" + double88 + "' != '" + 1166128.545735677d + "'", double88 == 1166128.545735677d);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + true + "'", boolean89 == true);
    }

    @Test
    public void test1338() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1338");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray8 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double9 = variance1.evaluate(doubleArray8);
        variance1.setBiasCorrected(true);
        boolean boolean12 = variance1.isBiasCorrected();
        double[] doubleArray19 = new double[] { (short) 0, 1.0d, 1L, 0.0d, (-1.0d), 10L };
        double double20 = variance1.evaluate(doubleArray19);
        double double21 = variance1.getResult();
        variance1.setBiasCorrected(true);
        boolean boolean24 = variance1.isBiasCorrected();
        double double25 = variance1.getResult();
        double double26 = variance1.getResult();
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 2168.222222222222d + "'", double9 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[0.0, 1.0, 1.0, 0.0, -1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 16.566666666666663d + "'", double20 == 16.566666666666663d);
        org.junit.Assert.assertTrue(Double.isNaN(double21));
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double25));
        org.junit.Assert.assertTrue(Double.isNaN(double26));
    }

    @Test
    public void test1339() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1339");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance1.clear();
        double double3 = variance1.getResult();
        double[] doubleArray8 = new double[] { (-1), 2168.222222222222d, 16.566666666418314d, 10.0d };
        variance1.incrementAll(doubleArray8);
        double double10 = variance1.getResult();
        boolean boolean11 = variance1.isBiasCorrected();
        org.apache.commons.math.stat.descriptive.moment.Variance variance13 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray20 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double21 = variance13.evaluate(doubleArray20);
        variance13.setBiasCorrected(true);
        long long24 = variance13.getN();
        variance13.clear();
        double double26 = variance13.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance28 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray35 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double36 = variance28.evaluate(doubleArray35);
        variance28.setBiasCorrected(true);
        boolean boolean39 = variance28.isBiasCorrected();
        double[] doubleArray46 = new double[] { (short) 0, 1.0d, 1L, 0.0d, (-1.0d), 10L };
        double double47 = variance28.evaluate(doubleArray46);
        org.apache.commons.math.stat.descriptive.moment.Variance variance49 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray56 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double57 = variance49.evaluate(doubleArray56);
        variance49.setBiasCorrected(true);
        boolean boolean60 = variance49.isBiasCorrected();
        double[] doubleArray67 = new double[] { (short) 0, 1.0d, 1L, 0.0d, (-1.0d), 10L };
        double double68 = variance49.evaluate(doubleArray67);
        double double71 = variance28.evaluate(doubleArray67, (int) (byte) 1, 0);
        variance13.incrementAll(doubleArray67);
        variance1.incrementAll(doubleArray67);
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-1.0, 2168.222222222222, 16.566666666418314, 10.0]");
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 874596.4092824734d + "'", double10 == 874596.4092824734d);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 2168.222222222222d + "'", double21 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + 0L + "'", long24 == 0L);
        org.junit.Assert.assertTrue(Double.isNaN(double26));
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 2168.222222222222d + "'", double36 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[0.0, 1.0, 1.0, 0.0, -1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 16.566666666666663d + "'", double47 == 16.566666666666663d);
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 2168.222222222222d + "'", double57 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[0.0, 1.0, 1.0, 0.0, -1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 16.566666666666663d + "'", double68 == 16.566666666666663d);
        org.junit.Assert.assertTrue(Double.isNaN(double71));
    }

    @Test
    public void test1340() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1340");
        org.apache.commons.math.stat.descriptive.moment.Variance variance0 = new org.apache.commons.math.stat.descriptive.moment.Variance();
        double double1 = variance0.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance3 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray10 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double11 = variance3.evaluate(doubleArray10);
        variance3.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance15 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray22 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double23 = variance15.evaluate(doubleArray22);
        variance3.incrementAll(doubleArray22);
        boolean boolean25 = variance0.equals((java.lang.Object) variance3);
        double double26 = variance0.getResult();
        variance0.setBiasCorrected(true);
        org.junit.Assert.assertTrue(Double.isNaN(double1));
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 2168.222222222222d + "'", double11 == 2168.222222222222d);
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 2168.222222222222d + "'", double23 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double26));
    }

    @Test
    public void test1341() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1341");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(true);
        double double2 = variance1.getResult();
        boolean boolean3 = variance1.isBiasCorrected();
        variance1.clear();
        variance1.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance8 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray15 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double16 = variance8.evaluate(doubleArray15);
        variance8.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance20 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray27 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double28 = variance20.evaluate(doubleArray27);
        variance20.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance32 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray39 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double40 = variance32.evaluate(doubleArray39);
        variance32.setBiasCorrected(true);
        boolean boolean43 = variance32.isBiasCorrected();
        double[] doubleArray50 = new double[] { (short) 0, 1.0d, 1L, 0.0d, (-1.0d), 10L };
        double double51 = variance32.evaluate(doubleArray50);
        double double54 = variance20.evaluate(doubleArray50, (int) (byte) 1, (int) (byte) 0);
        variance8.incrementAll(doubleArray50, (int) (byte) 1, 1);
        double double58 = variance1.evaluate(doubleArray50);
        variance1.increment((double) (byte) 0);
        variance1.setBiasCorrected(true);
        org.junit.Assert.assertTrue(Double.isNaN(double2));
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 2168.222222222222d + "'", double16 == 2168.222222222222d);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 2168.222222222222d + "'", double28 == 2168.222222222222d);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 2168.222222222222d + "'", double40 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[0.0, 1.0, 1.0, 0.0, -1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 16.566666666666663d + "'", double51 == 16.566666666666663d);
        org.junit.Assert.assertTrue(Double.isNaN(double54));
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 16.566666666666663d + "'", double58 == 16.566666666666663d);
    }

    @Test
    public void test1342() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1342");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray8 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double9 = variance1.evaluate(doubleArray8);
        variance1.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance13 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray20 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double21 = variance13.evaluate(doubleArray20);
        variance1.incrementAll(doubleArray20);
        variance1.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance25 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray32 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double33 = variance25.evaluate(doubleArray32);
        double[] doubleArray37 = new double[] { (byte) 1, (byte) 100, 1L };
        double double38 = variance25.evaluate(doubleArray37);
        variance1.incrementAll(doubleArray37, (int) (byte) 0, (int) (byte) 1);
        long long42 = variance1.getN();
        boolean boolean43 = variance1.isBiasCorrected();
        org.apache.commons.math.stat.descriptive.moment.Variance variance45 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray52 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double53 = variance45.evaluate(doubleArray52);
        variance45.setBiasCorrected(true);
        long long56 = variance45.getN();
        long long57 = variance45.getN();
        boolean boolean59 = variance45.equals((java.lang.Object) 16.566666666666663d);
        boolean boolean61 = variance45.equals((java.lang.Object) (short) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance63 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray70 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double71 = variance63.evaluate(doubleArray70);
        variance63.setBiasCorrected(true);
        variance63.increment((double) (byte) 0);
        double[] doubleArray78 = new double[] { 'a', 100L };
        double double80 = variance63.evaluate(doubleArray78, 0.0d);
        double double81 = variance63.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance83 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance83.clear();
        double double85 = variance83.getResult();
        double[] doubleArray90 = new double[] { (-1), 2168.222222222222d, 16.566666666418314d, 10.0d };
        variance83.incrementAll(doubleArray90);
        variance63.incrementAll(doubleArray90, (int) (short) 1, 1);
        double double96 = variance45.evaluate(doubleArray90, 2112.5d);
        boolean boolean97 = variance1.equals((java.lang.Object) doubleArray90);
        boolean boolean98 = variance1.isBiasCorrected();
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 2168.222222222222d + "'", double9 == 2168.222222222222d);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 2168.222222222222d + "'", double21 == 2168.222222222222d);
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 2168.222222222222d + "'", double33 == 2168.222222222222d);
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[1.0, 100.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 2178.0d + "'", double38 == 2178.0d);
        org.junit.Assert.assertTrue("'" + long42 + "' != '" + 1L + "'", long42 == 1L);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 2168.222222222222d + "'", double53 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + long56 + "' != '" + 0L + "'", long56 == 0L);
        org.junit.Assert.assertTrue("'" + long57 + "' != '" + 0L + "'", long57 == 0L);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + 2168.222222222222d + "'", double71 == 2168.222222222222d);
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray78), "[97.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double80 + "' != '" + 4.5d + "'", double80 == 4.5d);
        org.junit.Assert.assertTrue("'" + double81 + "' != '" + 0.0d + "'", double81 == 0.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double85));
        org.junit.Assert.assertNotNull(doubleArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray90), "[-1.0, 2168.222222222222, 16.566666666418314, 10.0]");
        org.junit.Assert.assertTrue("'" + double96 + "' != '" + 1166128.545709965d + "'", double96 == 1166128.545709965d);
        org.junit.Assert.assertTrue("'" + boolean97 + "' != '" + false + "'", boolean97 == false);
        org.junit.Assert.assertTrue("'" + boolean98 + "' != '" + true + "'", boolean98 == true);
    }

    @Test
    public void test1343() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1343");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray8 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double9 = variance1.evaluate(doubleArray8);
        variance1.setBiasCorrected(true);
        boolean boolean12 = variance1.isBiasCorrected();
        double[] doubleArray19 = new double[] { (short) 0, 1.0d, 1L, 0.0d, (-1.0d), 10L };
        double double20 = variance1.evaluate(doubleArray19);
        double double21 = variance1.getResult();
        long long22 = variance1.getN();
        variance1.increment((double) '#');
        variance1.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance28 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray35 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double36 = variance28.evaluate(doubleArray35);
        variance28.setBiasCorrected(true);
        variance28.increment((double) (byte) 0);
        double[] doubleArray43 = new double[] { 'a', 100L };
        double double45 = variance28.evaluate(doubleArray43, 0.0d);
        variance1.incrementAll(doubleArray43);
        variance1.setBiasCorrected(true);
        variance1.clear();
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 2168.222222222222d + "'", double9 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[0.0, 1.0, 1.0, 0.0, -1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 16.566666666666663d + "'", double20 == 16.566666666666663d);
        org.junit.Assert.assertTrue(Double.isNaN(double21));
        org.junit.Assert.assertTrue("'" + long22 + "' != '" + 0L + "'", long22 == 0L);
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 2168.222222222222d + "'", double36 == 2168.222222222222d);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[97.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 4.5d + "'", double45 == 4.5d);
    }

    @Test
    public void test1344() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1344");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment0 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment0);
        variance1.setBiasCorrected(false);
        variance1.increment(10.0d);
        variance1.clear();
        variance1.clear();
        variance1.increment(1175056.0d);
    }

    @Test
    public void test1345() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1345");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment1 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance2 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment1);
        variance2.clear();
        double[] doubleArray4 = new double[] {};
        variance2.incrementAll(doubleArray4);
        variance2.increment((double) (byte) 10);
        variance2.setBiasCorrected(false);
        variance2.setBiasCorrected(false);
        variance2.clear();
        // The following exception was thrown during execution in test generation
        try {
            long long13 = variance2.getN();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[]");
    }

    @Test
    public void test1346() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1346");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment1 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance2 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment1);
        variance2.increment((double) 1.0f);
        variance2.clear();
        variance2.increment(2168.2220052083335d);
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray16 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double17 = variance9.evaluate(doubleArray16);
        variance9.setBiasCorrected(true);
        long long20 = variance9.getN();
        long long21 = variance9.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance23 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray30 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double31 = variance23.evaluate(doubleArray30);
        double[] doubleArray35 = new double[] { (byte) 1, (byte) 100, 1L };
        double double36 = variance23.evaluate(doubleArray35);
        double double38 = variance9.evaluate(doubleArray35, (double) 10.0f);
        org.apache.commons.math.stat.descriptive.moment.Variance variance40 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray47 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double48 = variance40.evaluate(doubleArray47);
        variance40.setBiasCorrected(true);
        long long51 = variance40.getN();
        long long52 = variance40.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance54 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray61 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double62 = variance54.evaluate(doubleArray61);
        double[] doubleArray66 = new double[] { (byte) 1, (byte) 100, 1L };
        double double67 = variance54.evaluate(doubleArray66);
        double double69 = variance40.evaluate(doubleArray66, (double) 10.0f);
        double double70 = variance9.evaluate(doubleArray66);
        org.apache.commons.math.stat.descriptive.moment.Variance variance72 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray79 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double80 = variance72.evaluate(doubleArray79);
        variance72.setBiasCorrected(true);
        boolean boolean83 = variance72.isBiasCorrected();
        double[] doubleArray90 = new double[] { (short) 0, 1.0d, 1L, 0.0d, (-1.0d), 10L };
        double double91 = variance72.evaluate(doubleArray90);
        double double93 = variance9.evaluate(doubleArray90, (double) 0.0f);
        // The following exception was thrown during execution in test generation
        try {
            variance2.incrementAll(doubleArray90, (int) (short) 10, (int) (short) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: begin + length > values.length");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 2168.222222222222d + "'", double17 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + long20 + "' != '" + 0L + "'", long20 == 0L);
        org.junit.Assert.assertTrue("'" + long21 + "' != '" + 0L + "'", long21 == 0L);
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 2168.222222222222d + "'", double31 == 2168.222222222222d);
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[1.0, 100.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 2178.0d + "'", double36 == 2178.0d);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 3267.0d + "'", double38 == 3267.0d);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 2168.222222222222d + "'", double48 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + long51 + "' != '" + 0L + "'", long51 == 0L);
        org.junit.Assert.assertTrue("'" + long52 + "' != '" + 0L + "'", long52 == 0L);
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 2168.222222222222d + "'", double62 == 2168.222222222222d);
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[1.0, 100.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 2178.0d + "'", double67 == 2178.0d);
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 3267.0d + "'", double69 == 3267.0d);
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + 3267.0d + "'", double70 == 3267.0d);
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray79), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double80 + "' != '" + 2168.222222222222d + "'", double80 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertNotNull(doubleArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray90), "[0.0, 1.0, 1.0, 0.0, -1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double91 + "' != '" + 16.566666666666663d + "'", double91 == 16.566666666666663d);
        org.junit.Assert.assertTrue("'" + double93 + "' != '" + 16.566666666666666d + "'", double93 == 16.566666666666666d);
    }

    @Test
    public void test1347() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1347");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(true);
        double double2 = variance1.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray11 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double12 = variance4.evaluate(doubleArray11);
        variance4.setBiasCorrected(true);
        boolean boolean15 = variance4.isBiasCorrected();
        double[] doubleArray22 = new double[] { (short) 0, 1.0d, 1L, 0.0d, (-1.0d), 10L };
        double double23 = variance4.evaluate(doubleArray22);
        boolean boolean25 = variance4.equals((java.lang.Object) 10.0d);
        boolean boolean26 = variance4.isBiasCorrected();
        org.apache.commons.math.stat.descriptive.moment.Variance variance28 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        boolean boolean29 = variance4.equals((java.lang.Object) false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance31 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray38 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double39 = variance31.evaluate(doubleArray38);
        variance31.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance43 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray50 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double51 = variance43.evaluate(doubleArray50);
        variance31.incrementAll(doubleArray50);
        double double54 = variance4.evaluate(doubleArray50, (double) 100.0f);
        long long55 = variance4.getN();
        long long56 = variance4.getN();
        variance4.setBiasCorrected(false);
        boolean boolean59 = variance1.equals((java.lang.Object) variance4);
        variance1.setBiasCorrected(false);
        long long62 = variance1.getN();
        org.junit.Assert.assertTrue(Double.isNaN(double2));
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 2168.222222222222d + "'", double12 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[0.0, 1.0, 1.0, 0.0, -1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 16.566666666666663d + "'", double23 == 16.566666666666663d);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 2168.222222222222d + "'", double39 == 2168.222222222222d);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 2168.222222222222d + "'", double51 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 2601.8666666666663d + "'", double54 == 2601.8666666666663d);
        org.junit.Assert.assertTrue("'" + long55 + "' != '" + 0L + "'", long55 == 0L);
        org.junit.Assert.assertTrue("'" + long56 + "' != '" + 0L + "'", long56 == 0L);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertTrue("'" + long62 + "' != '" + 0L + "'", long62 == 0L);
    }

    @Test
    public void test1348() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1348");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray8 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double9 = variance1.evaluate(doubleArray8);
        variance1.setBiasCorrected(true);
        boolean boolean12 = variance1.isBiasCorrected();
        double[] doubleArray19 = new double[] { (short) 0, 1.0d, 1L, 0.0d, (-1.0d), 10L };
        double double20 = variance1.evaluate(doubleArray19);
        org.apache.commons.math.stat.descriptive.moment.Variance variance22 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray29 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double30 = variance22.evaluate(doubleArray29);
        variance22.setBiasCorrected(true);
        boolean boolean33 = variance22.isBiasCorrected();
        double[] doubleArray40 = new double[] { (short) 0, 1.0d, 1L, 0.0d, (-1.0d), 10L };
        double double41 = variance22.evaluate(doubleArray40);
        double double44 = variance1.evaluate(doubleArray40, (int) (byte) 1, 0);
        variance1.setBiasCorrected(true);
        variance1.setBiasCorrected(true);
        double double49 = variance1.getResult();
        double double50 = variance1.getResult();
        double double51 = variance1.getResult();
        variance1.increment(3267.0d);
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 2168.222222222222d + "'", double9 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[0.0, 1.0, 1.0, 0.0, -1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 16.566666666666663d + "'", double20 == 16.566666666666663d);
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 2168.222222222222d + "'", double30 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[0.0, 1.0, 1.0, 0.0, -1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 16.566666666666663d + "'", double41 == 16.566666666666663d);
        org.junit.Assert.assertTrue(Double.isNaN(double44));
        org.junit.Assert.assertTrue(Double.isNaN(double49));
        org.junit.Assert.assertTrue(Double.isNaN(double50));
        org.junit.Assert.assertTrue(Double.isNaN(double51));
    }

    @Test
    public void test1349() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1349");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray8 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double9 = variance1.evaluate(doubleArray8);
        variance1.setBiasCorrected(true);
        variance1.increment((double) (byte) 0);
        double[] doubleArray16 = new double[] { 'a', 100L };
        double double18 = variance1.evaluate(doubleArray16, 0.0d);
        long long19 = variance1.getN();
        boolean boolean20 = variance1.isBiasCorrected();
        long long21 = variance1.getN();
        double double22 = variance1.getResult();
        double double23 = variance1.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance25 = new org.apache.commons.math.stat.descriptive.moment.Variance(true);
        double double26 = variance25.getResult();
        double double27 = variance25.getResult();
        variance25.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance30 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray37 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double38 = variance30.evaluate(doubleArray37);
        variance30.setBiasCorrected(true);
        long long41 = variance30.getN();
        long long42 = variance30.getN();
        boolean boolean43 = variance30.isBiasCorrected();
        org.apache.commons.math.stat.descriptive.moment.Variance variance45 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray52 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double53 = variance45.evaluate(doubleArray52);
        double[] doubleArray57 = new double[] { (byte) 1, (byte) 100, 1L };
        double double58 = variance45.evaluate(doubleArray57);
        variance30.incrementAll(doubleArray57, (int) (short) 1, 0);
        variance25.incrementAll(doubleArray57);
        double double63 = variance1.evaluate(doubleArray57);
        variance1.clear();
        variance1.clear();
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 2168.222222222222d + "'", double9 == 2168.222222222222d);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[97.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 4.5d + "'", double18 == 4.5d);
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + 1L + "'", long19 == 1L);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + long21 + "' != '" + 1L + "'", long21 == 1L);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 0.0d + "'", double22 == 0.0d);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double26));
        org.junit.Assert.assertTrue(Double.isNaN(double27));
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 2168.222222222222d + "'", double38 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + long41 + "' != '" + 0L + "'", long41 == 0L);
        org.junit.Assert.assertTrue("'" + long42 + "' != '" + 0L + "'", long42 == 0L);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 2168.222222222222d + "'", double53 == 2168.222222222222d);
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[1.0, 100.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 2178.0d + "'", double58 == 2178.0d);
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 3267.0d + "'", double63 == 3267.0d);
    }

    @Test
    public void test1350() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1350");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray8 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double9 = variance1.evaluate(doubleArray8);
        variance1.setBiasCorrected(true);
        boolean boolean12 = variance1.isBiasCorrected();
        double[] doubleArray19 = new double[] { (short) 0, 1.0d, 1L, 0.0d, (-1.0d), 10L };
        double double20 = variance1.evaluate(doubleArray19);
        org.apache.commons.math.stat.descriptive.moment.Variance variance22 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray29 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double30 = variance22.evaluate(doubleArray29);
        variance22.setBiasCorrected(true);
        boolean boolean33 = variance22.isBiasCorrected();
        double[] doubleArray40 = new double[] { (short) 0, 1.0d, 1L, 0.0d, (-1.0d), 10L };
        double double41 = variance22.evaluate(doubleArray40);
        double double44 = variance1.evaluate(doubleArray40, (int) (byte) 1, 0);
        variance1.setBiasCorrected(true);
        variance1.setBiasCorrected(true);
        double double49 = variance1.getResult();
        double double50 = variance1.getResult();
        variance1.setBiasCorrected(false);
        boolean boolean53 = variance1.isBiasCorrected();
        long long54 = variance1.getN();
        java.lang.Class<?> wildcardClass55 = variance1.getClass();
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 2168.222222222222d + "'", double9 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[0.0, 1.0, 1.0, 0.0, -1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 16.566666666666663d + "'", double20 == 16.566666666666663d);
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 2168.222222222222d + "'", double30 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[0.0, 1.0, 1.0, 0.0, -1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 16.566666666666663d + "'", double41 == 16.566666666666663d);
        org.junit.Assert.assertTrue(Double.isNaN(double44));
        org.junit.Assert.assertTrue(Double.isNaN(double49));
        org.junit.Assert.assertTrue(Double.isNaN(double50));
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + long54 + "' != '" + 0L + "'", long54 == 0L);
        org.junit.Assert.assertNotNull(wildcardClass55);
    }

    @Test
    public void test1351() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1351");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray8 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double9 = variance1.evaluate(doubleArray8);
        double[] doubleArray13 = new double[] { (byte) 1, (byte) 100, 1L };
        double double14 = variance1.evaluate(doubleArray13);
        variance1.increment((double) (byte) 100);
        double double17 = variance1.getResult();
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 2168.222222222222d + "'", double9 == 2168.222222222222d);
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[1.0, 100.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 2178.0d + "'", double14 == 2178.0d);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 0.0d + "'", double17 == 0.0d);
    }

    @Test
    public void test1352() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1352");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray8 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double9 = variance1.evaluate(doubleArray8);
        variance1.setBiasCorrected(true);
        boolean boolean12 = variance1.isBiasCorrected();
        double[] doubleArray19 = new double[] { (short) 0, 1.0d, 1L, 0.0d, (-1.0d), 10L };
        double double20 = variance1.evaluate(doubleArray19);
        double double21 = variance1.getResult();
        long long22 = variance1.getN();
        variance1.increment((double) '#');
        variance1.increment(100.0d);
        org.apache.commons.math.stat.descriptive.moment.Variance variance28 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray35 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double36 = variance28.evaluate(doubleArray35);
        variance28.setBiasCorrected(true);
        boolean boolean39 = variance28.isBiasCorrected();
        double[] doubleArray46 = new double[] { (short) 0, 1.0d, 1L, 0.0d, (-1.0d), 10L };
        double double47 = variance28.evaluate(doubleArray46);
        double double49 = variance1.evaluate(doubleArray46, (double) (byte) 100);
        long long50 = variance1.getN();
        double double51 = variance1.getResult();
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 2168.222222222222d + "'", double9 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[0.0, 1.0, 1.0, 0.0, -1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 16.566666666666663d + "'", double20 == 16.566666666666663d);
        org.junit.Assert.assertTrue(Double.isNaN(double21));
        org.junit.Assert.assertTrue("'" + long22 + "' != '" + 0L + "'", long22 == 0L);
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 2168.222222222222d + "'", double36 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[0.0, 1.0, 1.0, 0.0, -1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 16.566666666666663d + "'", double47 == 16.566666666666663d);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 16.566666666667153d + "'", double49 == 16.566666666667153d);
        org.junit.Assert.assertTrue("'" + long50 + "' != '" + 2L + "'", long50 == 2L);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 2112.5d + "'", double51 == 2112.5d);
    }

    @Test
    public void test1353() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1353");
        org.apache.commons.math.stat.descriptive.moment.Variance variance0 = new org.apache.commons.math.stat.descriptive.moment.Variance();
        long long1 = variance0.getN();
        variance0.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance5 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray12 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double13 = variance5.evaluate(doubleArray12);
        variance5.setBiasCorrected(true);
        boolean boolean16 = variance5.isBiasCorrected();
        org.apache.commons.math.stat.descriptive.moment.Variance variance18 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray25 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double26 = variance18.evaluate(doubleArray25);
        variance18.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance30 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray37 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double38 = variance30.evaluate(doubleArray37);
        variance30.setBiasCorrected(true);
        boolean boolean41 = variance30.isBiasCorrected();
        double[] doubleArray48 = new double[] { (short) 0, 1.0d, 1L, 0.0d, (-1.0d), 10L };
        double double49 = variance30.evaluate(doubleArray48);
        double double52 = variance18.evaluate(doubleArray48, (int) (byte) 1, (int) (byte) 0);
        double double55 = variance5.evaluate(doubleArray48, (int) (byte) 1, 0);
        double double57 = variance0.evaluate(doubleArray48, 16.56666666666667d);
        java.lang.Object obj58 = null;
        boolean boolean59 = variance0.equals(obj58);
        variance0.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance63 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray70 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double71 = variance63.evaluate(doubleArray70);
        variance63.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance75 = new org.apache.commons.math.stat.descriptive.moment.Variance(true);
        boolean boolean76 = variance63.equals((java.lang.Object) true);
        java.lang.Object obj77 = null;
        boolean boolean78 = variance63.equals(obj77);
        boolean boolean79 = variance0.equals(obj77);
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 2168.222222222222d + "'", double13 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 2168.222222222222d + "'", double26 == 2168.222222222222d);
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 2168.222222222222d + "'", double38 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[0.0, 1.0, 1.0, 0.0, -1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 16.566666666666663d + "'", double49 == 16.566666666666663d);
        org.junit.Assert.assertTrue(Double.isNaN(double52));
        org.junit.Assert.assertTrue(Double.isNaN(double55));
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 16.56666666666674d + "'", double57 == 16.56666666666674d);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + 2168.222222222222d + "'", double71 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
    }

    @Test
    public void test1354() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1354");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance1.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance5 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray12 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double13 = variance5.evaluate(doubleArray12);
        variance5.setBiasCorrected(true);
        boolean boolean16 = variance5.isBiasCorrected();
        double[] doubleArray23 = new double[] { (short) 0, 1.0d, 1L, 0.0d, (-1.0d), 10L };
        double double24 = variance5.evaluate(doubleArray23);
        double double25 = variance5.getResult();
        variance5.setBiasCorrected(true);
        boolean boolean28 = variance5.isBiasCorrected();
        variance5.setBiasCorrected(false);
        variance5.increment(2601.866666666667d);
        org.apache.commons.math.stat.descriptive.moment.Variance variance34 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray41 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double42 = variance34.evaluate(doubleArray41);
        variance34.setBiasCorrected(true);
        long long45 = variance34.getN();
        variance34.clear();
        double double47 = variance34.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance49 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray56 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double57 = variance49.evaluate(doubleArray56);
        variance49.setBiasCorrected(true);
        boolean boolean60 = variance49.isBiasCorrected();
        double[] doubleArray67 = new double[] { (short) 0, 1.0d, 1L, 0.0d, (-1.0d), 10L };
        double double68 = variance49.evaluate(doubleArray67);
        boolean boolean70 = variance49.equals((java.lang.Object) 10.0d);
        org.apache.commons.math.stat.descriptive.moment.Variance variance72 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray79 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double80 = variance72.evaluate(doubleArray79);
        variance72.setBiasCorrected(true);
        boolean boolean83 = variance72.isBiasCorrected();
        double[] doubleArray90 = new double[] { (short) 0, 1.0d, 1L, 0.0d, (-1.0d), 10L };
        double double91 = variance72.evaluate(doubleArray90);
        double double93 = variance49.evaluate(doubleArray90, (double) 0.0f);
        variance34.incrementAll(doubleArray90);
        double double95 = variance5.evaluate(doubleArray90);
        double double97 = variance1.evaluate(doubleArray90, 1.0d);
        java.lang.Class<?> wildcardClass98 = doubleArray90.getClass();
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 2168.222222222222d + "'", double13 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[0.0, 1.0, 1.0, 0.0, -1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 16.566666666666663d + "'", double24 == 16.566666666666663d);
        org.junit.Assert.assertTrue(Double.isNaN(double25));
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 2168.222222222222d + "'", double42 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + long45 + "' != '" + 0L + "'", long45 == 0L);
        org.junit.Assert.assertTrue(Double.isNaN(double47));
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 2168.222222222222d + "'", double57 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[0.0, 1.0, 1.0, 0.0, -1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 16.566666666666663d + "'", double68 == 16.566666666666663d);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray79), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double80 + "' != '" + 2168.222222222222d + "'", double80 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertNotNull(doubleArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray90), "[0.0, 1.0, 1.0, 0.0, -1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double91 + "' != '" + 16.566666666666663d + "'", double91 == 16.566666666666663d);
        org.junit.Assert.assertTrue("'" + double93 + "' != '" + 16.566666666666666d + "'", double93 == 16.566666666666666d);
        org.junit.Assert.assertTrue("'" + double95 + "' != '" + 13.805555555555552d + "'", double95 == 13.805555555555552d);
        org.junit.Assert.assertTrue("'" + double97 + "' != '" + 13.805555555555555d + "'", double97 == 13.805555555555555d);
        org.junit.Assert.assertNotNull(wildcardClass98);
    }

    @Test
    public void test1355() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1355");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray8 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double9 = variance1.evaluate(doubleArray8);
        variance1.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance13 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray20 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double21 = variance13.evaluate(doubleArray20);
        variance13.setBiasCorrected(true);
        boolean boolean24 = variance13.isBiasCorrected();
        double[] doubleArray31 = new double[] { (short) 0, 1.0d, 1L, 0.0d, (-1.0d), 10L };
        double double32 = variance13.evaluate(doubleArray31);
        double double35 = variance1.evaluate(doubleArray31, (int) (byte) 1, (int) (byte) 0);
        org.apache.commons.math.stat.descriptive.moment.Variance variance37 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance39 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray46 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double47 = variance39.evaluate(doubleArray46);
        variance39.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance51 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray58 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double59 = variance51.evaluate(doubleArray58);
        variance51.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance63 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray70 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double71 = variance63.evaluate(doubleArray70);
        variance63.setBiasCorrected(true);
        boolean boolean74 = variance63.isBiasCorrected();
        double[] doubleArray81 = new double[] { (short) 0, 1.0d, 1L, 0.0d, (-1.0d), 10L };
        double double82 = variance63.evaluate(doubleArray81);
        double double85 = variance51.evaluate(doubleArray81, (int) (byte) 1, (int) (byte) 0);
        variance39.incrementAll(doubleArray81, (int) (byte) 1, 1);
        double double89 = variance37.evaluate(doubleArray81);
        double double90 = variance1.evaluate(doubleArray81);
        double double91 = variance1.getResult();
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 2168.222222222222d + "'", double9 == 2168.222222222222d);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 2168.222222222222d + "'", double21 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[0.0, 1.0, 1.0, 0.0, -1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 16.566666666666663d + "'", double32 == 16.566666666666663d);
        org.junit.Assert.assertTrue(Double.isNaN(double35));
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 2168.222222222222d + "'", double47 == 2168.222222222222d);
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 2168.222222222222d + "'", double59 == 2168.222222222222d);
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + 2168.222222222222d + "'", double71 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray81), "[0.0, 1.0, 1.0, 0.0, -1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double82 + "' != '" + 16.566666666666663d + "'", double82 == 16.566666666666663d);
        org.junit.Assert.assertTrue(Double.isNaN(double85));
        org.junit.Assert.assertTrue("'" + double89 + "' != '" + 13.805555555555552d + "'", double89 == 13.805555555555552d);
        org.junit.Assert.assertTrue("'" + double90 + "' != '" + 16.566666666666663d + "'", double90 == 16.566666666666663d);
        org.junit.Assert.assertTrue(Double.isNaN(double91));
    }

    @Test
    public void test1356() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1356");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance1.clear();
        double double3 = variance1.getResult();
        double double4 = variance1.getResult();
        double double5 = variance1.getResult();
        variance1.increment((double) (short) 1);
        variance1.clear();
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertTrue(Double.isNaN(double4));
        org.junit.Assert.assertTrue(Double.isNaN(double5));
    }

    @Test
    public void test1357() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1357");
        org.apache.commons.math.stat.descriptive.moment.Variance variance0 = new org.apache.commons.math.stat.descriptive.moment.Variance();
        long long1 = variance0.getN();
        variance0.setBiasCorrected(true);
        variance0.increment(2178.0d);
        double double6 = variance0.getResult();
        variance0.increment((double) (short) 10);
        double double9 = variance0.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance11 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray18 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double19 = variance11.evaluate(doubleArray18);
        variance11.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance23 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray30 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double31 = variance23.evaluate(doubleArray30);
        variance11.incrementAll(doubleArray30);
        org.apache.commons.math.stat.descriptive.moment.Variance variance34 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray41 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double42 = variance34.evaluate(doubleArray41);
        variance34.setBiasCorrected(true);
        long long45 = variance34.getN();
        variance34.clear();
        double double47 = variance34.getResult();
        variance34.setBiasCorrected(true);
        boolean boolean50 = variance11.equals((java.lang.Object) variance34);
        org.apache.commons.math.stat.descriptive.moment.Variance variance52 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray59 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double60 = variance52.evaluate(doubleArray59);
        variance52.setBiasCorrected(true);
        long long63 = variance52.getN();
        long long64 = variance52.getN();
        boolean boolean65 = variance52.isBiasCorrected();
        org.apache.commons.math.stat.descriptive.moment.Variance variance67 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray74 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double75 = variance67.evaluate(doubleArray74);
        double[] doubleArray79 = new double[] { (byte) 1, (byte) 100, 1L };
        double double80 = variance67.evaluate(doubleArray79);
        variance52.incrementAll(doubleArray79, (int) (short) 1, 0);
        double double84 = variance11.evaluate(doubleArray79);
        // The following exception was thrown during execution in test generation
        try {
            double double88 = variance0.evaluate(doubleArray79, 677378.9558333334d, (int) (byte) 10, (int) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: length cannot be negative");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 2350112.0d + "'", double9 == 2350112.0d);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 2168.222222222222d + "'", double19 == 2168.222222222222d);
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 2168.222222222222d + "'", double31 == 2168.222222222222d);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 2168.222222222222d + "'", double42 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + long45 + "' != '" + 0L + "'", long45 == 0L);
        org.junit.Assert.assertTrue(Double.isNaN(double47));
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 2168.222222222222d + "'", double60 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + long63 + "' != '" + 0L + "'", long63 == 0L);
        org.junit.Assert.assertTrue("'" + long64 + "' != '" + 0L + "'", long64 == 0L);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray74), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double75 + "' != '" + 2168.222222222222d + "'", double75 == 2168.222222222222d);
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray79), "[1.0, 100.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double80 + "' != '" + 2178.0d + "'", double80 == 2178.0d);
        org.junit.Assert.assertTrue("'" + double84 + "' != '" + 3267.0d + "'", double84 == 3267.0d);
    }

    @Test
    public void test1358() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1358");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray8 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double9 = variance1.evaluate(doubleArray8);
        variance1.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance13 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray20 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double21 = variance13.evaluate(doubleArray20);
        variance1.incrementAll(doubleArray20);
        variance1.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance25 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray32 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double33 = variance25.evaluate(doubleArray32);
        double[] doubleArray37 = new double[] { (byte) 1, (byte) 100, 1L };
        double double38 = variance25.evaluate(doubleArray37);
        variance1.incrementAll(doubleArray37, (int) (byte) 0, (int) (byte) 1);
        long long42 = variance1.getN();
        variance1.clear();
        boolean boolean44 = variance1.isBiasCorrected();
        long long45 = variance1.getN();
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 2168.222222222222d + "'", double9 == 2168.222222222222d);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 2168.222222222222d + "'", double21 == 2168.222222222222d);
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 2168.222222222222d + "'", double33 == 2168.222222222222d);
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[1.0, 100.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 2178.0d + "'", double38 == 2178.0d);
        org.junit.Assert.assertTrue("'" + long42 + "' != '" + 1L + "'", long42 == 1L);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + long45 + "' != '" + 0L + "'", long45 == 0L);
    }

    @Test
    public void test1359() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1359");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray8 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double9 = variance1.evaluate(doubleArray8);
        variance1.setBiasCorrected(true);
        long long12 = variance1.getN();
        long long13 = variance1.getN();
        double double14 = variance1.getResult();
        variance1.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance17 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray24 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double25 = variance17.evaluate(doubleArray24);
        double[] doubleArray29 = new double[] { (byte) 1, (byte) 100, 1L };
        double double30 = variance17.evaluate(doubleArray29);
        org.apache.commons.math.stat.descriptive.moment.Variance variance32 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray39 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double40 = variance32.evaluate(doubleArray39);
        variance32.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance44 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray51 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double52 = variance44.evaluate(doubleArray51);
        variance32.incrementAll(doubleArray51);
        variance17.incrementAll(doubleArray51);
        double double55 = variance1.evaluate(doubleArray51);
        boolean boolean56 = variance1.isBiasCorrected();
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 2168.222222222222d + "'", double9 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 0L + "'", long12 == 0L);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 0L + "'", long13 == 0L);
        org.junit.Assert.assertTrue(Double.isNaN(double14));
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 2168.222222222222d + "'", double25 == 2168.222222222222d);
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[1.0, 100.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 2178.0d + "'", double30 == 2178.0d);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 2168.222222222222d + "'", double40 == 2168.222222222222d);
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 2168.222222222222d + "'", double52 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 2601.866666666667d + "'", double55 == 2601.866666666667d);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
    }

    @Test
    public void test1360() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1360");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray8 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double9 = variance1.evaluate(doubleArray8);
        variance1.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance13 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray20 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double21 = variance13.evaluate(doubleArray20);
        variance13.setBiasCorrected(true);
        boolean boolean24 = variance13.isBiasCorrected();
        double[] doubleArray31 = new double[] { (short) 0, 1.0d, 1L, 0.0d, (-1.0d), 10L };
        double double32 = variance13.evaluate(doubleArray31);
        org.apache.commons.math.stat.descriptive.moment.Variance variance34 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray41 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double42 = variance34.evaluate(doubleArray41);
        variance34.setBiasCorrected(true);
        boolean boolean45 = variance34.isBiasCorrected();
        double[] doubleArray52 = new double[] { (short) 0, 1.0d, 1L, 0.0d, (-1.0d), 10L };
        double double53 = variance34.evaluate(doubleArray52);
        double double56 = variance13.evaluate(doubleArray52, (int) (byte) 1, 0);
        double double58 = variance1.evaluate(doubleArray52, 2178.0d);
        variance1.increment(3267.0d);
        variance1.increment(13.805555555555506d);
        java.lang.Class<?> wildcardClass63 = variance1.getClass();
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 2168.222222222222d + "'", double9 == 2168.222222222222d);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 2168.222222222222d + "'", double21 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[0.0, 1.0, 1.0, 0.0, -1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 16.566666666666663d + "'", double32 == 16.566666666666663d);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 2168.222222222222d + "'", double42 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[0.0, 1.0, 1.0, 0.0, -1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 16.566666666666663d + "'", double53 == 16.566666666666663d);
        org.junit.Assert.assertTrue(Double.isNaN(double56));
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 16.566666666418314d + "'", double58 == 16.566666666418314d);
        org.junit.Assert.assertNotNull(wildcardClass63);
    }

    @Test
    public void test1361() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1361");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray8 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double9 = variance1.evaluate(doubleArray8);
        variance1.setBiasCorrected(true);
        variance1.increment((double) (byte) 0);
        double[] doubleArray16 = new double[] { 'a', 100L };
        double double18 = variance1.evaluate(doubleArray16, 0.0d);
        double double19 = variance1.getResult();
        double double20 = variance1.getResult();
        variance1.clear();
        variance1.increment((double) 100.0f);
        org.apache.commons.math.stat.descriptive.moment.Variance variance25 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray32 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double33 = variance25.evaluate(doubleArray32);
        variance25.setBiasCorrected(true);
        boolean boolean36 = variance25.isBiasCorrected();
        double[] doubleArray43 = new double[] { (short) 0, 1.0d, 1L, 0.0d, (-1.0d), 10L };
        double double44 = variance25.evaluate(doubleArray43);
        org.apache.commons.math.stat.descriptive.moment.Variance variance46 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray53 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double54 = variance46.evaluate(doubleArray53);
        variance46.setBiasCorrected(true);
        boolean boolean57 = variance46.isBiasCorrected();
        double[] doubleArray64 = new double[] { (short) 0, 1.0d, 1L, 0.0d, (-1.0d), 10L };
        double double65 = variance46.evaluate(doubleArray64);
        double double68 = variance25.evaluate(doubleArray64, (int) (byte) 1, 0);
        variance25.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance72 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance74 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray81 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double82 = variance74.evaluate(doubleArray81);
        variance74.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance86 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance86.clear();
        double double88 = variance86.getResult();
        double[] doubleArray93 = new double[] { (-1), 2168.222222222222d, 16.566666666418314d, 10.0d };
        variance86.incrementAll(doubleArray93);
        variance74.incrementAll(doubleArray93);
        double double96 = variance72.evaluate(doubleArray93);
        double double97 = variance25.evaluate(doubleArray93);
        double double98 = variance1.evaluate(doubleArray93);
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 2168.222222222222d + "'", double9 == 2168.222222222222d);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[97.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 4.5d + "'", double18 == 4.5d);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.0d + "'", double19 == 0.0d);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 0.0d + "'", double20 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 2168.222222222222d + "'", double33 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[0.0, 1.0, 1.0, 0.0, -1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 16.566666666666663d + "'", double44 == 16.566666666666663d);
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray53), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 2168.222222222222d + "'", double54 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[0.0, 1.0, 1.0, 0.0, -1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 16.566666666666663d + "'", double65 == 16.566666666666663d);
        org.junit.Assert.assertTrue(Double.isNaN(double68));
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray81), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double82 + "' != '" + 2168.222222222222d + "'", double82 == 2168.222222222222d);
        org.junit.Assert.assertTrue(Double.isNaN(double88));
        org.junit.Assert.assertNotNull(doubleArray93);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray93), "[-1.0, 2168.222222222222, 16.566666666418314, 10.0]");
        org.junit.Assert.assertTrue("'" + double96 + "' != '" + 874596.4092824734d + "'", double96 == 874596.4092824734d);
        org.junit.Assert.assertTrue("'" + double97 + "' != '" + 1166128.5457099646d + "'", double97 == 1166128.5457099646d);
        org.junit.Assert.assertTrue("'" + double98 + "' != '" + 1166128.5457099646d + "'", double98 == 1166128.5457099646d);
    }

    @Test
    public void test1362() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1362");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray8 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double9 = variance1.evaluate(doubleArray8);
        double[] doubleArray13 = new double[] { (byte) 1, (byte) 100, 1L };
        double double14 = variance1.evaluate(doubleArray13);
        org.apache.commons.math.stat.descriptive.moment.Variance variance16 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray23 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double24 = variance16.evaluate(doubleArray23);
        variance16.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance28 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray35 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double36 = variance28.evaluate(doubleArray35);
        variance16.incrementAll(doubleArray35);
        variance1.incrementAll(doubleArray35);
        variance1.increment((double) (short) -1);
        org.apache.commons.math.stat.descriptive.moment.Variance variance42 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray49 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double50 = variance42.evaluate(doubleArray49);
        double[] doubleArray54 = new double[] { (byte) 1, (byte) 100, 1L };
        double double55 = variance42.evaluate(doubleArray54);
        org.apache.commons.math.stat.descriptive.moment.Variance variance57 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray64 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double65 = variance57.evaluate(doubleArray64);
        variance57.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance69 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray76 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double77 = variance69.evaluate(doubleArray76);
        variance57.incrementAll(doubleArray76);
        variance42.incrementAll(doubleArray76);
        double double82 = variance1.evaluate(doubleArray76, (int) (short) 0, 0);
        java.lang.Class<?> wildcardClass83 = variance1.getClass();
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 2168.222222222222d + "'", double9 == 2168.222222222222d);
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[1.0, 100.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 2178.0d + "'", double14 == 2178.0d);
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 2168.222222222222d + "'", double24 == 2168.222222222222d);
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 2168.222222222222d + "'", double36 == 2168.222222222222d);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 2168.222222222222d + "'", double50 == 2168.222222222222d);
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[1.0, 100.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 2178.0d + "'", double55 == 2178.0d);
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 2168.222222222222d + "'", double65 == 2168.222222222222d);
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double77 + "' != '" + 2168.222222222222d + "'", double77 == 2168.222222222222d);
        org.junit.Assert.assertTrue(Double.isNaN(double82));
        org.junit.Assert.assertNotNull(wildcardClass83);
    }

    @Test
    public void test1363() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1363");
        org.apache.commons.math.stat.descriptive.moment.Variance variance0 = new org.apache.commons.math.stat.descriptive.moment.Variance();
        long long1 = variance0.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance3 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray10 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double11 = variance3.evaluate(doubleArray10);
        variance3.setBiasCorrected(true);
        boolean boolean14 = variance3.isBiasCorrected();
        double[] doubleArray21 = new double[] { (short) 0, 1.0d, 1L, 0.0d, (-1.0d), 10L };
        double double22 = variance3.evaluate(doubleArray21);
        boolean boolean24 = variance3.equals((java.lang.Object) 10.0d);
        boolean boolean25 = variance3.isBiasCorrected();
        org.apache.commons.math.stat.descriptive.moment.Variance variance27 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        boolean boolean28 = variance3.equals((java.lang.Object) false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance30 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray37 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double38 = variance30.evaluate(doubleArray37);
        variance30.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance42 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray49 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double50 = variance42.evaluate(doubleArray49);
        variance30.incrementAll(doubleArray49);
        double double53 = variance3.evaluate(doubleArray49, (double) 100.0f);
        variance0.incrementAll(doubleArray49, (int) (short) 1, (int) (byte) 0);
        variance0.increment(16.56666666666674d);
        double double59 = variance0.getResult();
        long long60 = variance0.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance62 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray69 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double70 = variance62.evaluate(doubleArray69);
        variance62.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance74 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray81 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double82 = variance74.evaluate(doubleArray81);
        variance62.incrementAll(doubleArray81);
        // The following exception was thrown during execution in test generation
        try {
            double double87 = variance0.evaluate(doubleArray81, 13.805555555555557d, (int) (byte) -1, 100);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: start position cannot be negative");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 2168.222222222222d + "'", double11 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[0.0, 1.0, 1.0, 0.0, -1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 16.566666666666663d + "'", double22 == 16.566666666666663d);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 2168.222222222222d + "'", double38 == 2168.222222222222d);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 2168.222222222222d + "'", double50 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 2601.8666666666663d + "'", double53 == 2601.8666666666663d);
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 0.0d + "'", double59 == 0.0d);
        org.junit.Assert.assertTrue("'" + long60 + "' != '" + 1L + "'", long60 == 1L);
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + 2168.222222222222d + "'", double70 == 2168.222222222222d);
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray81), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double82 + "' != '" + 2168.222222222222d + "'", double82 == 2168.222222222222d);
    }

    @Test
    public void test1364() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1364");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray8 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double9 = variance1.evaluate(doubleArray8);
        long long10 = variance1.getN();
        variance1.increment((double) (byte) 1);
        variance1.increment((double) 6L);
        variance1.increment(2178.0d);
        org.apache.commons.math.stat.descriptive.moment.Variance variance18 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance18.clear();
        boolean boolean20 = variance18.isBiasCorrected();
        double double21 = variance18.getResult();
        boolean boolean22 = variance1.equals((java.lang.Object) variance18);
        variance18.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance26 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray33 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double34 = variance26.evaluate(doubleArray33);
        variance26.setBiasCorrected(true);
        long long37 = variance26.getN();
        long long38 = variance26.getN();
        double double39 = variance26.getResult();
        variance26.clear();
        variance26.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance44 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray51 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double52 = variance44.evaluate(doubleArray51);
        variance44.setBiasCorrected(true);
        boolean boolean55 = variance44.isBiasCorrected();
        double[] doubleArray62 = new double[] { (short) 0, 1.0d, 1L, 0.0d, (-1.0d), 10L };
        double double63 = variance44.evaluate(doubleArray62);
        double double64 = variance44.getResult();
        long long65 = variance44.getN();
        variance44.increment((double) '#');
        variance44.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance71 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray78 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double79 = variance71.evaluate(doubleArray78);
        variance71.setBiasCorrected(true);
        variance71.increment((double) (byte) 0);
        double[] doubleArray86 = new double[] { 'a', 100L };
        double double88 = variance71.evaluate(doubleArray86, 0.0d);
        variance44.incrementAll(doubleArray86);
        variance26.incrementAll(doubleArray86);
        double double91 = variance18.evaluate(doubleArray86);
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 2168.222222222222d + "'", double9 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 0L + "'", long10 == 0L);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double21));
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 2168.222222222222d + "'", double34 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + long37 + "' != '" + 0L + "'", long37 == 0L);
        org.junit.Assert.assertTrue("'" + long38 + "' != '" + 0L + "'", long38 == 0L);
        org.junit.Assert.assertTrue(Double.isNaN(double39));
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 2168.222222222222d + "'", double52 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[0.0, 1.0, 1.0, 0.0, -1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 16.566666666666663d + "'", double63 == 16.566666666666663d);
        org.junit.Assert.assertTrue(Double.isNaN(double64));
        org.junit.Assert.assertTrue("'" + long65 + "' != '" + 0L + "'", long65 == 0L);
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray78), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double79 + "' != '" + 2168.222222222222d + "'", double79 == 2168.222222222222d);
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray86), "[97.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double88 + "' != '" + 4.5d + "'", double88 == 4.5d);
        org.junit.Assert.assertTrue("'" + double91 + "' != '" + 2.25d + "'", double91 == 2.25d);
    }

    @Test
    public void test1365() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1365");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray8 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double9 = variance1.evaluate(doubleArray8);
        variance1.setBiasCorrected(true);
        boolean boolean12 = variance1.isBiasCorrected();
        double[] doubleArray19 = new double[] { (short) 0, 1.0d, 1L, 0.0d, (-1.0d), 10L };
        double double20 = variance1.evaluate(doubleArray19);
        boolean boolean22 = variance1.equals((java.lang.Object) 10.0d);
        boolean boolean23 = variance1.isBiasCorrected();
        double double24 = variance1.getResult();
        variance1.increment(6.25d);
        double double27 = variance1.getResult();
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 2168.222222222222d + "'", double9 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[0.0, 1.0, 1.0, 0.0, -1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 16.566666666666663d + "'", double20 == 16.566666666666663d);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double24));
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 0.0d + "'", double27 == 0.0d);
    }

    @Test
    public void test1366() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1366");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray8 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double9 = variance1.evaluate(doubleArray8);
        variance1.setBiasCorrected(true);
        boolean boolean12 = variance1.isBiasCorrected();
        double[] doubleArray19 = new double[] { (short) 0, 1.0d, 1L, 0.0d, (-1.0d), 10L };
        double double20 = variance1.evaluate(doubleArray19);
        org.apache.commons.math.stat.descriptive.moment.Variance variance22 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray29 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double30 = variance22.evaluate(doubleArray29);
        variance22.setBiasCorrected(true);
        boolean boolean33 = variance22.isBiasCorrected();
        double[] doubleArray40 = new double[] { (short) 0, 1.0d, 1L, 0.0d, (-1.0d), 10L };
        double double41 = variance22.evaluate(doubleArray40);
        double double44 = variance1.evaluate(doubleArray40, (int) (byte) 1, 0);
        boolean boolean45 = variance1.isBiasCorrected();
        variance1.setBiasCorrected(true);
        variance1.setBiasCorrected(false);
        long long50 = variance1.getN();
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 2168.222222222222d + "'", double9 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[0.0, 1.0, 1.0, 0.0, -1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 16.566666666666663d + "'", double20 == 16.566666666666663d);
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 2168.222222222222d + "'", double30 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[0.0, 1.0, 1.0, 0.0, -1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 16.566666666666663d + "'", double41 == 16.566666666666663d);
        org.junit.Assert.assertTrue(Double.isNaN(double44));
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + long50 + "' != '" + 0L + "'", long50 == 0L);
    }

    @Test
    public void test1367() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1367");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance1.setBiasCorrected(false);
        long long4 = variance1.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance6 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray13 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double14 = variance6.evaluate(doubleArray13);
        variance6.setBiasCorrected(true);
        boolean boolean17 = variance6.isBiasCorrected();
        double[] doubleArray24 = new double[] { (short) 0, 1.0d, 1L, 0.0d, (-1.0d), 10L };
        double double25 = variance6.evaluate(doubleArray24);
        org.apache.commons.math.stat.descriptive.moment.Variance variance27 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray34 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double35 = variance27.evaluate(doubleArray34);
        variance27.setBiasCorrected(true);
        boolean boolean38 = variance27.isBiasCorrected();
        double[] doubleArray45 = new double[] { (short) 0, 1.0d, 1L, 0.0d, (-1.0d), 10L };
        double double46 = variance27.evaluate(doubleArray45);
        double double49 = variance6.evaluate(doubleArray45, (int) (byte) 1, 0);
        variance6.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance53 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray60 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double61 = variance53.evaluate(doubleArray60);
        variance53.setBiasCorrected(true);
        boolean boolean64 = variance53.isBiasCorrected();
        double[] doubleArray71 = new double[] { (short) 0, 1.0d, 1L, 0.0d, (-1.0d), 10L };
        double double72 = variance53.evaluate(doubleArray71);
        double double74 = variance6.evaluate(doubleArray71, 6.25d);
        boolean boolean75 = variance1.equals((java.lang.Object) variance6);
        variance6.setBiasCorrected(false);
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 0L + "'", long4 == 0L);
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 2168.222222222222d + "'", double14 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[0.0, 1.0, 1.0, 0.0, -1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 16.566666666666663d + "'", double25 == 16.566666666666663d);
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 2168.222222222222d + "'", double35 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[0.0, 1.0, 1.0, 0.0, -1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 16.566666666666663d + "'", double46 == 16.566666666666663d);
        org.junit.Assert.assertTrue(Double.isNaN(double49));
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 2168.222222222222d + "'", double61 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[0.0, 1.0, 1.0, 0.0, -1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 16.566666666666663d + "'", double72 == 16.566666666666663d);
        org.junit.Assert.assertTrue("'" + double74 + "' != '" + 16.566666666666666d + "'", double74 == 16.566666666666666d);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
    }

    @Test
    public void test1368() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1368");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment1 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance2 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment1);
        variance2.increment(0.0d);
        variance2.clear();
        variance2.setBiasCorrected(true);
        variance2.clear();
        // The following exception was thrown during execution in test generation
        try {
            double double9 = variance2.getResult();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test1369() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1369");
        org.apache.commons.math.stat.descriptive.moment.Variance variance0 = new org.apache.commons.math.stat.descriptive.moment.Variance();
        long long1 = variance0.getN();
        variance0.setBiasCorrected(true);
        variance0.increment(2178.0d);
        boolean boolean6 = variance0.isBiasCorrected();
        boolean boolean7 = variance0.isBiasCorrected();
        long long8 = variance0.getN();
        variance0.clear();
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 1L + "'", long8 == 1L);
    }

    @Test
    public void test1370() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1370");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray8 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double9 = variance1.evaluate(doubleArray8);
        variance1.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance12 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance12.clear();
        double double14 = variance12.getResult();
        double double15 = variance12.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance17 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray24 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double25 = variance17.evaluate(doubleArray24);
        double[] doubleArray29 = new double[] { (byte) 1, (byte) 100, 1L };
        double double30 = variance17.evaluate(doubleArray29);
        org.apache.commons.math.stat.descriptive.moment.Variance variance32 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray39 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double40 = variance32.evaluate(doubleArray39);
        variance32.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance44 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray51 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double52 = variance44.evaluate(doubleArray51);
        variance32.incrementAll(doubleArray51);
        variance17.incrementAll(doubleArray51);
        variance12.incrementAll(doubleArray51);
        boolean boolean56 = variance1.equals((java.lang.Object) variance12);
        boolean boolean57 = variance12.isBiasCorrected();
        double[] doubleArray58 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double61 = variance12.evaluate(doubleArray58, (int) (byte) 1, (int) '#');
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: input value array is null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 2168.222222222222d + "'", double9 == 2168.222222222222d);
        org.junit.Assert.assertTrue(Double.isNaN(double14));
        org.junit.Assert.assertTrue(Double.isNaN(double15));
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 2168.222222222222d + "'", double25 == 2168.222222222222d);
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[1.0, 100.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 2178.0d + "'", double30 == 2178.0d);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 2168.222222222222d + "'", double40 == 2168.222222222222d);
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 2168.222222222222d + "'", double52 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
    }

    @Test
    public void test1371() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1371");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray8 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double9 = variance1.evaluate(doubleArray8);
        variance1.setBiasCorrected(true);
        variance1.increment((double) (byte) 0);
        double[] doubleArray16 = new double[] { 'a', 100L };
        double double18 = variance1.evaluate(doubleArray16, 0.0d);
        double double19 = variance1.getResult();
        double double20 = variance1.getResult();
        variance1.clear();
        variance1.increment(2168.2222222222226d);
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 2168.222222222222d + "'", double9 == 2168.222222222222d);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[97.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 4.5d + "'", double18 == 4.5d);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.0d + "'", double19 == 0.0d);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 0.0d + "'", double20 == 0.0d);
    }

    @Test
    public void test1372() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1372");
        org.apache.commons.math.stat.descriptive.moment.Variance variance0 = new org.apache.commons.math.stat.descriptive.moment.Variance();
        boolean boolean1 = variance0.isBiasCorrected();
        variance0.increment((double) (short) 100);
        variance0.setBiasCorrected(true);
        double double6 = variance0.getResult();
        java.lang.Class<?> wildcardClass7 = variance0.getClass();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
        org.junit.Assert.assertNotNull(wildcardClass7);
    }

    @Test
    public void test1373() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1373");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray8 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double9 = variance1.evaluate(doubleArray8);
        variance1.setBiasCorrected(true);
        boolean boolean12 = variance1.isBiasCorrected();
        double[] doubleArray19 = new double[] { (short) 0, 1.0d, 1L, 0.0d, (-1.0d), 10L };
        double double20 = variance1.evaluate(doubleArray19);
        org.apache.commons.math.stat.descriptive.moment.Variance variance22 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray29 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double30 = variance22.evaluate(doubleArray29);
        variance22.setBiasCorrected(true);
        boolean boolean33 = variance22.isBiasCorrected();
        double[] doubleArray40 = new double[] { (short) 0, 1.0d, 1L, 0.0d, (-1.0d), 10L };
        double double41 = variance22.evaluate(doubleArray40);
        double double44 = variance1.evaluate(doubleArray40, (int) (byte) 1, 0);
        variance1.setBiasCorrected(true);
        variance1.setBiasCorrected(true);
        double double49 = variance1.getResult();
        double double50 = variance1.getResult();
        variance1.setBiasCorrected(false);
        boolean boolean53 = variance1.isBiasCorrected();
        long long54 = variance1.getN();
        variance1.clear();
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 2168.222222222222d + "'", double9 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[0.0, 1.0, 1.0, 0.0, -1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 16.566666666666663d + "'", double20 == 16.566666666666663d);
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 2168.222222222222d + "'", double30 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[0.0, 1.0, 1.0, 0.0, -1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 16.566666666666663d + "'", double41 == 16.566666666666663d);
        org.junit.Assert.assertTrue(Double.isNaN(double44));
        org.junit.Assert.assertTrue(Double.isNaN(double49));
        org.junit.Assert.assertTrue(Double.isNaN(double50));
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + long54 + "' != '" + 0L + "'", long54 == 0L);
    }

    @Test
    public void test1374() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1374");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance1.clear();
        double double3 = variance1.getResult();
        variance1.increment((double) '4');
        org.apache.commons.math.stat.descriptive.moment.Variance variance7 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray14 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double15 = variance7.evaluate(doubleArray14);
        long long16 = variance7.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance18 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray25 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double26 = variance18.evaluate(doubleArray25);
        variance18.setBiasCorrected(true);
        boolean boolean29 = variance18.isBiasCorrected();
        double[] doubleArray36 = new double[] { (short) 0, 1.0d, 1L, 0.0d, (-1.0d), 10L };
        double double37 = variance18.evaluate(doubleArray36);
        org.apache.commons.math.stat.descriptive.moment.Variance variance39 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray46 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double47 = variance39.evaluate(doubleArray46);
        variance39.setBiasCorrected(true);
        boolean boolean50 = variance39.isBiasCorrected();
        double[] doubleArray57 = new double[] { (short) 0, 1.0d, 1L, 0.0d, (-1.0d), 10L };
        double double58 = variance39.evaluate(doubleArray57);
        double double61 = variance18.evaluate(doubleArray57, (int) (byte) 1, 0);
        variance18.setBiasCorrected(true);
        variance18.setBiasCorrected(true);
        double double66 = variance18.getResult();
        boolean boolean67 = variance18.isBiasCorrected();
        boolean boolean68 = variance18.isBiasCorrected();
        org.apache.commons.math.stat.descriptive.moment.Variance variance70 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray77 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double78 = variance70.evaluate(doubleArray77);
        variance70.setBiasCorrected(true);
        boolean boolean81 = variance70.isBiasCorrected();
        double[] doubleArray88 = new double[] { (short) 0, 1.0d, 1L, 0.0d, (-1.0d), 10L };
        double double89 = variance70.evaluate(doubleArray88);
        double double90 = variance18.evaluate(doubleArray88);
        double double92 = variance7.evaluate(doubleArray88, 16.56666666666667d);
        variance1.incrementAll(doubleArray88, (int) (short) 1, 1);
        variance1.increment((double) (short) 1);
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 2168.222222222222d + "'", double15 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 0L + "'", long16 == 0L);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 2168.222222222222d + "'", double26 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[0.0, 1.0, 1.0, 0.0, -1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 16.566666666666663d + "'", double37 == 16.566666666666663d);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 2168.222222222222d + "'", double47 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[0.0, 1.0, 1.0, 0.0, -1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 16.566666666666663d + "'", double58 == 16.566666666666663d);
        org.junit.Assert.assertTrue(Double.isNaN(double61));
        org.junit.Assert.assertTrue(Double.isNaN(double66));
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray77), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double78 + "' != '" + 2168.222222222222d + "'", double78 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertNotNull(doubleArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray88), "[0.0, 1.0, 1.0, 0.0, -1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double89 + "' != '" + 16.566666666666663d + "'", double89 == 16.566666666666663d);
        org.junit.Assert.assertTrue("'" + double90 + "' != '" + 16.566666666666663d + "'", double90 == 16.566666666666663d);
        org.junit.Assert.assertTrue("'" + double92 + "' != '" + 13.80555555555562d + "'", double92 == 13.80555555555562d);
    }

    @Test
    public void test1375() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1375");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment1 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance2 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment1);
        variance2.increment(0.0d);
        variance2.clear();
        variance2.setBiasCorrected(true);
        variance2.clear();
        variance2.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance10 = new org.apache.commons.math.stat.descriptive.moment.Variance();
        double double11 = variance10.getResult();
        boolean boolean12 = variance10.isBiasCorrected();
        org.apache.commons.math.stat.descriptive.moment.Variance variance14 = new org.apache.commons.math.stat.descriptive.moment.Variance(true);
        double double15 = variance14.getResult();
        double double16 = variance14.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance18 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray25 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double26 = variance18.evaluate(doubleArray25);
        variance18.clear();
        variance18.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance31 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance31.clear();
        double double33 = variance31.getResult();
        double[] doubleArray38 = new double[] { (-1), 2168.222222222222d, 16.566666666418314d, 10.0d };
        variance31.incrementAll(doubleArray38);
        boolean boolean40 = variance18.equals((java.lang.Object) doubleArray38);
        double double42 = variance14.evaluate(doubleArray38, (double) (-1.0f));
        double double44 = variance10.evaluate(doubleArray38, (double) (-1L));
        variance10.increment(2.25d);
        org.apache.commons.math.stat.descriptive.moment.Variance variance48 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray55 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double56 = variance48.evaluate(doubleArray55);
        variance48.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance60 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray67 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double68 = variance60.evaluate(doubleArray67);
        variance48.incrementAll(doubleArray67);
        variance10.incrementAll(doubleArray67, (int) (byte) 1, 1);
        // The following exception was thrown during execution in test generation
        try {
            double double75 = variance2.evaluate(doubleArray67, 100, 1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: begin + length > values.length");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue(Double.isNaN(double11));
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double15));
        org.junit.Assert.assertTrue(Double.isNaN(double16));
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 2168.222222222222d + "'", double26 == 2168.222222222222d);
        org.junit.Assert.assertTrue(Double.isNaN(double33));
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[-1.0, 2168.222222222222, 16.566666666418314, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 1166128.5457099646d + "'", double42 == 1166128.5457099646d);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 1166128.5457099646d + "'", double44 == 1166128.5457099646d);
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 2168.222222222222d + "'", double56 == 2168.222222222222d);
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 2168.222222222222d + "'", double68 == 2168.222222222222d);
    }

    @Test
    public void test1376() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1376");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray8 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double9 = variance1.evaluate(doubleArray8);
        variance1.setBiasCorrected(true);
        long long12 = variance1.getN();
        long long13 = variance1.getN();
        double double14 = variance1.getResult();
        long long15 = variance1.getN();
        variance1.clear();
        long long17 = variance1.getN();
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 2168.222222222222d + "'", double9 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 0L + "'", long12 == 0L);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 0L + "'", long13 == 0L);
        org.junit.Assert.assertTrue(Double.isNaN(double14));
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 0L + "'", long15 == 0L);
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + 0L + "'", long17 == 0L);
    }

    @Test
    public void test1377() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1377");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment1 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance2 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment1);
        variance2.clear();
        double[] doubleArray4 = new double[] {};
        variance2.incrementAll(doubleArray4);
        variance2.increment(2178.0d);
        variance2.clear();
        variance2.increment((double) 100);
        variance2.increment(2168.222222223878d);
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[]");
    }

    @Test
    public void test1378() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1378");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray8 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double9 = variance1.evaluate(doubleArray8);
        variance1.setBiasCorrected(true);
        boolean boolean12 = variance1.isBiasCorrected();
        variance1.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance15 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray22 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double23 = variance15.evaluate(doubleArray22);
        variance15.setBiasCorrected(true);
        variance15.increment((double) (byte) 0);
        double[] doubleArray30 = new double[] { 'a', 100L };
        double double32 = variance15.evaluate(doubleArray30, 0.0d);
        double double33 = variance15.getResult();
        double double34 = variance15.getResult();
        variance15.clear();
        variance15.increment((double) 100.0f);
        boolean boolean38 = variance1.equals((java.lang.Object) 100.0f);
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 2168.222222222222d + "'", double9 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 2168.222222222222d + "'", double23 == 2168.222222222222d);
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[97.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 4.5d + "'", double32 == 4.5d);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 0.0d + "'", double33 == 0.0d);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 0.0d + "'", double34 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
    }

    @Test
    public void test1379() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1379");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment1 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance2 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment1);
        double[] doubleArray3 = new double[] {};
        double double6 = variance2.evaluate(doubleArray3, 0, 0);
        boolean boolean8 = variance2.equals((java.lang.Object) 10);
        variance2.increment(Double.NaN);
        boolean boolean11 = variance2.isBiasCorrected();
        variance2.clear();
        boolean boolean13 = variance2.isBiasCorrected();
        variance2.clear();
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
    }

    @Test
    public void test1380() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1380");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray8 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double9 = variance1.evaluate(doubleArray8);
        variance1.clear();
        variance1.setBiasCorrected(false);
        long long13 = variance1.getN();
        boolean boolean14 = variance1.isBiasCorrected();
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 2168.222222222222d + "'", double9 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 0L + "'", long13 == 0L);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
    }

    @Test
    public void test1381() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1381");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance1.clear();
        boolean boolean3 = variance1.isBiasCorrected();
        boolean boolean5 = variance1.equals((java.lang.Object) 1166128.5457099646d);
        org.apache.commons.math.stat.descriptive.moment.Variance variance7 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray14 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double15 = variance7.evaluate(doubleArray14);
        variance7.setBiasCorrected(true);
        boolean boolean18 = variance7.isBiasCorrected();
        double[] doubleArray25 = new double[] { (short) 0, 1.0d, 1L, 0.0d, (-1.0d), 10L };
        double double26 = variance7.evaluate(doubleArray25);
        org.apache.commons.math.stat.descriptive.moment.Variance variance28 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray35 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double36 = variance28.evaluate(doubleArray35);
        variance28.setBiasCorrected(true);
        boolean boolean39 = variance28.isBiasCorrected();
        double[] doubleArray46 = new double[] { (short) 0, 1.0d, 1L, 0.0d, (-1.0d), 10L };
        double double47 = variance28.evaluate(doubleArray46);
        double double50 = variance7.evaluate(doubleArray46, (int) (byte) 1, 0);
        variance7.setBiasCorrected(true);
        boolean boolean53 = variance1.equals((java.lang.Object) true);
        boolean boolean54 = variance1.isBiasCorrected();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 2168.222222222222d + "'", double15 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[0.0, 1.0, 1.0, 0.0, -1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 16.566666666666663d + "'", double26 == 16.566666666666663d);
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 2168.222222222222d + "'", double36 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[0.0, 1.0, 1.0, 0.0, -1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 16.566666666666663d + "'", double47 == 16.566666666666663d);
        org.junit.Assert.assertTrue(Double.isNaN(double50));
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
    }

    @Test
    public void test1382() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1382");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray8 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double9 = variance1.evaluate(doubleArray8);
        variance1.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance13 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray20 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double21 = variance13.evaluate(doubleArray20);
        variance1.incrementAll(doubleArray20);
        variance1.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance25 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray32 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double33 = variance25.evaluate(doubleArray32);
        double[] doubleArray37 = new double[] { (byte) 1, (byte) 100, 1L };
        double double38 = variance25.evaluate(doubleArray37);
        variance1.incrementAll(doubleArray37, (int) (byte) 0, (int) (byte) 1);
        double double42 = variance1.getResult();
        long long43 = variance1.getN();
        double[] doubleArray44 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double48 = variance1.evaluate(doubleArray44, 2168.222222223878d, (int) (short) 0, (int) (short) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: input value array is null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 2168.222222222222d + "'", double9 == 2168.222222222222d);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 2168.222222222222d + "'", double21 == 2168.222222222222d);
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 2168.222222222222d + "'", double33 == 2168.222222222222d);
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[1.0, 100.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 2178.0d + "'", double38 == 2178.0d);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 0.0d + "'", double42 == 0.0d);
        org.junit.Assert.assertTrue("'" + long43 + "' != '" + 1L + "'", long43 == 1L);
    }

    @Test
    public void test1383() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1383");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray8 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double9 = variance1.evaluate(doubleArray8);
        double[] doubleArray13 = new double[] { (byte) 1, (byte) 100, 1L };
        double double14 = variance1.evaluate(doubleArray13);
        variance1.increment((double) (byte) 100);
        org.apache.commons.math.stat.descriptive.moment.Variance variance18 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray25 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double26 = variance18.evaluate(doubleArray25);
        variance18.setBiasCorrected(true);
        boolean boolean29 = variance18.isBiasCorrected();
        double[] doubleArray36 = new double[] { (short) 0, 1.0d, 1L, 0.0d, (-1.0d), 10L };
        double double37 = variance18.evaluate(doubleArray36);
        org.apache.commons.math.stat.descriptive.moment.Variance variance39 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray46 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double47 = variance39.evaluate(doubleArray46);
        variance39.setBiasCorrected(true);
        boolean boolean50 = variance39.isBiasCorrected();
        double[] doubleArray57 = new double[] { (short) 0, 1.0d, 1L, 0.0d, (-1.0d), 10L };
        double double58 = variance39.evaluate(doubleArray57);
        double double61 = variance18.evaluate(doubleArray57, (int) (byte) 1, 0);
        variance18.setBiasCorrected(true);
        variance18.setBiasCorrected(true);
        double double66 = variance18.getResult();
        boolean boolean67 = variance18.isBiasCorrected();
        boolean boolean68 = variance18.isBiasCorrected();
        variance18.increment(0.0d);
        variance18.increment((double) 1.0f);
        boolean boolean73 = variance1.equals((java.lang.Object) variance18);
        long long74 = variance18.getN();
        variance18.increment(2168.2220052083335d);
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 2168.222222222222d + "'", double9 == 2168.222222222222d);
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[1.0, 100.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 2178.0d + "'", double14 == 2178.0d);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 2168.222222222222d + "'", double26 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[0.0, 1.0, 1.0, 0.0, -1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 16.566666666666663d + "'", double37 == 16.566666666666663d);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 2168.222222222222d + "'", double47 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[0.0, 1.0, 1.0, 0.0, -1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 16.566666666666663d + "'", double58 == 16.566666666666663d);
        org.junit.Assert.assertTrue(Double.isNaN(double61));
        org.junit.Assert.assertTrue(Double.isNaN(double66));
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertTrue("'" + long74 + "' != '" + 2L + "'", long74 == 2L);
    }

    @Test
    public void test1384() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1384");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment1 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance2 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment1);
        variance2.increment(100.0d);
        java.lang.Class<?> wildcardClass5 = variance2.getClass();
        org.junit.Assert.assertNotNull(wildcardClass5);
    }

    @Test
    public void test1385() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1385");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(true);
        double double2 = variance1.getResult();
        double double3 = variance1.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance5 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray12 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double13 = variance5.evaluate(doubleArray12);
        variance5.clear();
        variance5.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance18 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance18.clear();
        double double20 = variance18.getResult();
        double[] doubleArray25 = new double[] { (-1), 2168.222222222222d, 16.566666666418314d, 10.0d };
        variance18.incrementAll(doubleArray25);
        boolean boolean27 = variance5.equals((java.lang.Object) doubleArray25);
        double double29 = variance1.evaluate(doubleArray25, (double) (-1.0f));
        double double30 = variance1.getResult();
        boolean boolean31 = variance1.isBiasCorrected();
        org.apache.commons.math.stat.descriptive.moment.Variance variance33 = new org.apache.commons.math.stat.descriptive.moment.Variance(true);
        double double34 = variance33.getResult();
        boolean boolean35 = variance33.isBiasCorrected();
        variance33.clear();
        variance33.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance40 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray47 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double48 = variance40.evaluate(doubleArray47);
        variance40.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance52 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray59 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double60 = variance52.evaluate(doubleArray59);
        variance52.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance64 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray71 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double72 = variance64.evaluate(doubleArray71);
        variance64.setBiasCorrected(true);
        boolean boolean75 = variance64.isBiasCorrected();
        double[] doubleArray82 = new double[] { (short) 0, 1.0d, 1L, 0.0d, (-1.0d), 10L };
        double double83 = variance64.evaluate(doubleArray82);
        double double86 = variance52.evaluate(doubleArray82, (int) (byte) 1, (int) (byte) 0);
        variance40.incrementAll(doubleArray82, (int) (byte) 1, 1);
        double double90 = variance33.evaluate(doubleArray82);
        variance1.incrementAll(doubleArray82, (int) (byte) 0, (int) (short) 1);
        org.junit.Assert.assertTrue(Double.isNaN(double2));
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 2168.222222222222d + "'", double13 == 2168.222222222222d);
        org.junit.Assert.assertTrue(Double.isNaN(double20));
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[-1.0, 2168.222222222222, 16.566666666418314, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 1166128.5457099646d + "'", double29 == 1166128.5457099646d);
        org.junit.Assert.assertTrue(Double.isNaN(double30));
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double34));
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 2168.222222222222d + "'", double48 == 2168.222222222222d);
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 2168.222222222222d + "'", double60 == 2168.222222222222d);
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 2168.222222222222d + "'", double72 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray82), "[0.0, 1.0, 1.0, 0.0, -1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + 16.566666666666663d + "'", double83 == 16.566666666666663d);
        org.junit.Assert.assertTrue(Double.isNaN(double86));
        org.junit.Assert.assertTrue("'" + double90 + "' != '" + 16.566666666666663d + "'", double90 == 16.566666666666663d);
    }

    @Test
    public void test1386() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1386");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment1 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance2 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment1);
        variance2.increment((double) 1.0f);
        variance2.increment((double) 0L);
        boolean boolean7 = variance2.isBiasCorrected();
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
    }

    @Test
    public void test1387() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1387");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray8 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double9 = variance1.evaluate(doubleArray8);
        variance1.setBiasCorrected(true);
        long long12 = variance1.getN();
        long long13 = variance1.getN();
        boolean boolean15 = variance1.equals((java.lang.Object) 16.566666666666663d);
        boolean boolean17 = variance1.equals((java.lang.Object) (short) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance19 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray26 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double27 = variance19.evaluate(doubleArray26);
        variance19.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance31 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray38 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double39 = variance31.evaluate(doubleArray38);
        variance31.setBiasCorrected(true);
        boolean boolean42 = variance31.isBiasCorrected();
        double[] doubleArray49 = new double[] { (short) 0, 1.0d, 1L, 0.0d, (-1.0d), 10L };
        double double50 = variance31.evaluate(doubleArray49);
        org.apache.commons.math.stat.descriptive.moment.Variance variance52 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray59 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double60 = variance52.evaluate(doubleArray59);
        variance52.setBiasCorrected(true);
        boolean boolean63 = variance52.isBiasCorrected();
        double[] doubleArray70 = new double[] { (short) 0, 1.0d, 1L, 0.0d, (-1.0d), 10L };
        double double71 = variance52.evaluate(doubleArray70);
        double double74 = variance31.evaluate(doubleArray70, (int) (byte) 1, 0);
        double double76 = variance19.evaluate(doubleArray70, 2178.0d);
        double double77 = variance1.evaluate(doubleArray70);
        double double78 = variance1.getResult();
        long long79 = variance1.getN();
        java.lang.Class<?> wildcardClass80 = variance1.getClass();
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 2168.222222222222d + "'", double9 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 0L + "'", long12 == 0L);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 0L + "'", long13 == 0L);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 2168.222222222222d + "'", double27 == 2168.222222222222d);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 2168.222222222222d + "'", double39 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[0.0, 1.0, 1.0, 0.0, -1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 16.566666666666663d + "'", double50 == 16.566666666666663d);
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 2168.222222222222d + "'", double60 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[0.0, 1.0, 1.0, 0.0, -1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + 16.566666666666663d + "'", double71 == 16.566666666666663d);
        org.junit.Assert.assertTrue(Double.isNaN(double74));
        org.junit.Assert.assertTrue("'" + double76 + "' != '" + 16.566666666418314d + "'", double76 == 16.566666666418314d);
        org.junit.Assert.assertTrue("'" + double77 + "' != '" + 16.566666666666663d + "'", double77 == 16.566666666666663d);
        org.junit.Assert.assertTrue(Double.isNaN(double78));
        org.junit.Assert.assertTrue("'" + long79 + "' != '" + 0L + "'", long79 == 0L);
        org.junit.Assert.assertNotNull(wildcardClass80);
    }

    @Test
    public void test1388() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1388");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray8 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double9 = variance1.evaluate(doubleArray8);
        variance1.setBiasCorrected(true);
        long long12 = variance1.getN();
        long long13 = variance1.getN();
        boolean boolean15 = variance1.equals((java.lang.Object) 16.566666666666663d);
        boolean boolean17 = variance1.equals((java.lang.Object) (short) 10);
        boolean boolean18 = variance1.isBiasCorrected();
        org.apache.commons.math.stat.descriptive.moment.Variance variance19 = new org.apache.commons.math.stat.descriptive.moment.Variance();
        long long20 = variance19.getN();
        variance19.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance24 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray31 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double32 = variance24.evaluate(doubleArray31);
        variance24.clear();
        variance24.setBiasCorrected(false);
        variance24.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance38 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray45 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double46 = variance38.evaluate(doubleArray45);
        variance38.setBiasCorrected(true);
        variance38.increment((double) (byte) 0);
        double[] doubleArray53 = new double[] { 'a', 100L };
        double double55 = variance38.evaluate(doubleArray53, 0.0d);
        double double56 = variance24.evaluate(doubleArray53);
        variance19.incrementAll(doubleArray53, 1, (int) (byte) 1);
        // The following exception was thrown during execution in test generation
        try {
            double double62 = variance1.evaluate(doubleArray53, 100, 0);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: begin + length > values.length");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 2168.222222222222d + "'", double9 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 0L + "'", long12 == 0L);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 0L + "'", long13 == 0L);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + long20 + "' != '" + 0L + "'", long20 == 0L);
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 2168.222222222222d + "'", double32 == 2168.222222222222d);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 2168.222222222222d + "'", double46 == 2168.222222222222d);
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray53), "[97.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 4.5d + "'", double55 == 4.5d);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 2.25d + "'", double56 == 2.25d);
    }

    @Test
    public void test1389() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1389");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray8 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double9 = variance1.evaluate(doubleArray8);
        variance1.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance13 = new org.apache.commons.math.stat.descriptive.moment.Variance(true);
        boolean boolean14 = variance1.equals((java.lang.Object) true);
        double double15 = variance1.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance17 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray24 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double25 = variance17.evaluate(doubleArray24);
        variance17.setBiasCorrected(true);
        boolean boolean28 = variance17.isBiasCorrected();
        double[] doubleArray35 = new double[] { (short) 0, 1.0d, 1L, 0.0d, (-1.0d), 10L };
        double double36 = variance17.evaluate(doubleArray35);
        boolean boolean38 = variance17.equals((java.lang.Object) 10.0d);
        boolean boolean39 = variance17.isBiasCorrected();
        org.apache.commons.math.stat.descriptive.moment.Variance variance41 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        boolean boolean42 = variance17.equals((java.lang.Object) false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance44 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray51 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double52 = variance44.evaluate(doubleArray51);
        variance44.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance56 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray63 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double64 = variance56.evaluate(doubleArray63);
        variance44.incrementAll(doubleArray63);
        double double67 = variance17.evaluate(doubleArray63, (double) 100.0f);
        variance17.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance70 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray77 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double78 = variance70.evaluate(doubleArray77);
        variance70.setBiasCorrected(true);
        variance70.increment((double) (byte) 0);
        double[] doubleArray85 = new double[] { 'a', 100L };
        double double87 = variance70.evaluate(doubleArray85, 0.0d);
        variance17.incrementAll(doubleArray85);
        double double89 = variance1.evaluate(doubleArray85);
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 2168.222222222222d + "'", double9 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double15));
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 2168.222222222222d + "'", double25 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[0.0, 1.0, 1.0, 0.0, -1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 16.566666666666663d + "'", double36 == 16.566666666666663d);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 2168.222222222222d + "'", double52 == 2168.222222222222d);
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 2168.222222222222d + "'", double64 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 2601.8666666666663d + "'", double67 == 2601.8666666666663d);
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray77), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double78 + "' != '" + 2168.222222222222d + "'", double78 == 2168.222222222222d);
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray85), "[97.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double87 + "' != '" + 4.5d + "'", double87 == 4.5d);
        org.junit.Assert.assertTrue("'" + double89 + "' != '" + 4.5d + "'", double89 == 4.5d);
    }

    @Test
    public void test1390() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1390");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray8 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double9 = variance1.evaluate(doubleArray8);
        variance1.setBiasCorrected(true);
        long long12 = variance1.getN();
        variance1.clear();
        double double14 = variance1.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance16 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray23 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double24 = variance16.evaluate(doubleArray23);
        variance16.setBiasCorrected(true);
        boolean boolean27 = variance16.isBiasCorrected();
        double[] doubleArray34 = new double[] { (short) 0, 1.0d, 1L, 0.0d, (-1.0d), 10L };
        double double35 = variance16.evaluate(doubleArray34);
        boolean boolean37 = variance16.equals((java.lang.Object) 10.0d);
        org.apache.commons.math.stat.descriptive.moment.Variance variance39 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray46 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double47 = variance39.evaluate(doubleArray46);
        variance39.setBiasCorrected(true);
        boolean boolean50 = variance39.isBiasCorrected();
        double[] doubleArray57 = new double[] { (short) 0, 1.0d, 1L, 0.0d, (-1.0d), 10L };
        double double58 = variance39.evaluate(doubleArray57);
        double double60 = variance16.evaluate(doubleArray57, (double) 0.0f);
        variance1.incrementAll(doubleArray57);
        double double62 = variance1.getResult();
        double double63 = variance1.getResult();
        long long64 = variance1.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance66 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray73 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double74 = variance66.evaluate(doubleArray73);
        long long75 = variance66.getN();
        variance66.increment(874596.4092824734d);
        org.apache.commons.math.stat.descriptive.moment.Variance variance79 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance79.clear();
        double double81 = variance79.getResult();
        double[] doubleArray86 = new double[] { (-1), 2168.222222222222d, 16.566666666418314d, 10.0d };
        variance79.incrementAll(doubleArray86);
        variance66.incrementAll(doubleArray86, 0, (int) (byte) 1);
        double double92 = variance1.evaluate(doubleArray86, 0.0d);
        boolean boolean93 = variance1.isBiasCorrected();
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 2168.222222222222d + "'", double9 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 0L + "'", long12 == 0L);
        org.junit.Assert.assertTrue(Double.isNaN(double14));
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 2168.222222222222d + "'", double24 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[0.0, 1.0, 1.0, 0.0, -1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 16.566666666666663d + "'", double35 == 16.566666666666663d);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 2168.222222222222d + "'", double47 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[0.0, 1.0, 1.0, 0.0, -1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 16.566666666666663d + "'", double58 == 16.566666666666663d);
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 16.566666666666666d + "'", double60 == 16.566666666666666d);
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 16.56666666666667d + "'", double62 == 16.56666666666667d);
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 16.56666666666667d + "'", double63 == 16.56666666666667d);
        org.junit.Assert.assertTrue("'" + long64 + "' != '" + 6L + "'", long64 == 6L);
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double74 + "' != '" + 2168.222222222222d + "'", double74 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + long75 + "' != '" + 0L + "'", long75 == 0L);
        org.junit.Assert.assertTrue(Double.isNaN(double81));
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray86), "[-1.0, 2168.222222222222, 16.566666666418314, 10.0]");
        org.junit.Assert.assertTrue("'" + double92 + "' != '" + 1166128.5457099646d + "'", double92 == 1166128.5457099646d);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + true + "'", boolean93 == true);
    }

    @Test
    public void test1391() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1391");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment1 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance2 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment1);
        boolean boolean3 = variance2.isBiasCorrected();
        org.apache.commons.math.stat.descriptive.moment.Variance variance5 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray12 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double13 = variance5.evaluate(doubleArray12);
        variance5.setBiasCorrected(true);
        long long16 = variance5.getN();
        long long17 = variance5.getN();
        boolean boolean19 = variance5.equals((java.lang.Object) 16.566666666666663d);
        boolean boolean21 = variance5.equals((java.lang.Object) (short) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance23 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray30 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double31 = variance23.evaluate(doubleArray30);
        variance23.setBiasCorrected(true);
        variance23.increment((double) (byte) 0);
        double[] doubleArray38 = new double[] { 'a', 100L };
        double double40 = variance23.evaluate(doubleArray38, 0.0d);
        double double41 = variance23.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance43 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance43.clear();
        double double45 = variance43.getResult();
        double[] doubleArray50 = new double[] { (-1), 2168.222222222222d, 16.566666666418314d, 10.0d };
        variance43.incrementAll(doubleArray50);
        variance23.incrementAll(doubleArray50, (int) (short) 1, 1);
        double double56 = variance5.evaluate(doubleArray50, 2112.5d);
        // The following exception was thrown during execution in test generation
        try {
            double double59 = variance2.evaluate(doubleArray50, (int) (byte) 1, (int) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: length cannot be negative");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 2168.222222222222d + "'", double13 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 0L + "'", long16 == 0L);
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + 0L + "'", long17 == 0L);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 2168.222222222222d + "'", double31 == 2168.222222222222d);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[97.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 4.5d + "'", double40 == 4.5d);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.0d + "'", double41 == 0.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double45));
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[-1.0, 2168.222222222222, 16.566666666418314, 10.0]");
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 1166128.545709965d + "'", double56 == 1166128.545709965d);
    }

    @Test
    public void test1392() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1392");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(true);
        double double2 = variance1.getResult();
        double double3 = variance1.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance5 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray12 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double13 = variance5.evaluate(doubleArray12);
        variance5.clear();
        variance5.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance18 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance18.clear();
        double double20 = variance18.getResult();
        double[] doubleArray25 = new double[] { (-1), 2168.222222222222d, 16.566666666418314d, 10.0d };
        variance18.incrementAll(doubleArray25);
        boolean boolean27 = variance5.equals((java.lang.Object) doubleArray25);
        double double29 = variance1.evaluate(doubleArray25, (double) (-1.0f));
        long long30 = variance1.getN();
        variance1.clear();
        long long32 = variance1.getN();
        long long33 = variance1.getN();
        org.junit.Assert.assertTrue(Double.isNaN(double2));
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 2168.222222222222d + "'", double13 == 2168.222222222222d);
        org.junit.Assert.assertTrue(Double.isNaN(double20));
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[-1.0, 2168.222222222222, 16.566666666418314, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 1166128.5457099646d + "'", double29 == 1166128.5457099646d);
        org.junit.Assert.assertTrue("'" + long30 + "' != '" + 0L + "'", long30 == 0L);
        org.junit.Assert.assertTrue("'" + long32 + "' != '" + 0L + "'", long32 == 0L);
        org.junit.Assert.assertTrue("'" + long33 + "' != '" + 0L + "'", long33 == 0L);
    }

    @Test
    public void test1393() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1393");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray8 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double9 = variance1.evaluate(doubleArray8);
        variance1.setBiasCorrected(true);
        long long12 = variance1.getN();
        long long13 = variance1.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance15 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray22 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double23 = variance15.evaluate(doubleArray22);
        double[] doubleArray27 = new double[] { (byte) 1, (byte) 100, 1L };
        double double28 = variance15.evaluate(doubleArray27);
        double double30 = variance1.evaluate(doubleArray27, (double) 10.0f);
        org.apache.commons.math.stat.descriptive.moment.Variance variance32 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance32.clear();
        boolean boolean34 = variance32.isBiasCorrected();
        org.apache.commons.math.stat.descriptive.moment.Variance variance36 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray43 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double44 = variance36.evaluate(doubleArray43);
        variance36.setBiasCorrected(true);
        long long47 = variance36.getN();
        long long48 = variance36.getN();
        double double49 = variance36.getResult();
        variance36.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance52 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray59 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double60 = variance52.evaluate(doubleArray59);
        double[] doubleArray64 = new double[] { (byte) 1, (byte) 100, 1L };
        double double65 = variance52.evaluate(doubleArray64);
        org.apache.commons.math.stat.descriptive.moment.Variance variance67 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray74 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double75 = variance67.evaluate(doubleArray74);
        variance67.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance79 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray86 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double87 = variance79.evaluate(doubleArray86);
        variance67.incrementAll(doubleArray86);
        variance52.incrementAll(doubleArray86);
        double double90 = variance36.evaluate(doubleArray86);
        double double91 = variance32.evaluate(doubleArray86);
        double double92 = variance1.evaluate(doubleArray86);
        long long93 = variance1.getN();
        double double94 = variance1.getResult();
        variance1.setBiasCorrected(false);
        variance1.clear();
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 2168.222222222222d + "'", double9 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 0L + "'", long12 == 0L);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 0L + "'", long13 == 0L);
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 2168.222222222222d + "'", double23 == 2168.222222222222d);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[1.0, 100.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 2178.0d + "'", double28 == 2178.0d);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 3267.0d + "'", double30 == 3267.0d);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 2168.222222222222d + "'", double44 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + long47 + "' != '" + 0L + "'", long47 == 0L);
        org.junit.Assert.assertTrue("'" + long48 + "' != '" + 0L + "'", long48 == 0L);
        org.junit.Assert.assertTrue(Double.isNaN(double49));
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 2168.222222222222d + "'", double60 == 2168.222222222222d);
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[1.0, 100.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 2178.0d + "'", double65 == 2178.0d);
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray74), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double75 + "' != '" + 2168.222222222222d + "'", double75 == 2168.222222222222d);
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray86), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double87 + "' != '" + 2168.222222222222d + "'", double87 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + double90 + "' != '" + 2601.866666666667d + "'", double90 == 2601.866666666667d);
        org.junit.Assert.assertTrue("'" + double91 + "' != '" + 2168.222222222222d + "'", double91 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + double92 + "' != '" + 2601.866666666667d + "'", double92 == 2601.866666666667d);
        org.junit.Assert.assertTrue("'" + long93 + "' != '" + 0L + "'", long93 == 0L);
        org.junit.Assert.assertTrue(Double.isNaN(double94));
    }

    @Test
    public void test1394() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1394");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment1 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance2 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment1);
        variance2.increment((double) (byte) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance6 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray13 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double14 = variance6.evaluate(doubleArray13);
        variance6.setBiasCorrected(true);
        long long17 = variance6.getN();
        variance6.increment(6.25d);
        variance6.setBiasCorrected(true);
        java.lang.Class<?> wildcardClass22 = variance6.getClass();
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean23 = variance2.equals((java.lang.Object) variance6);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 2168.222222222222d + "'", double14 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + 0L + "'", long17 == 0L);
        org.junit.Assert.assertNotNull(wildcardClass22);
    }

    @Test
    public void test1395() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1395");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance1.clear();
        double double3 = variance1.getResult();
        variance1.increment((double) '4');
        double double6 = variance1.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance8 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray15 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double16 = variance8.evaluate(doubleArray15);
        variance8.setBiasCorrected(true);
        long long19 = variance8.getN();
        long long20 = variance8.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance22 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray29 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double30 = variance22.evaluate(doubleArray29);
        double[] doubleArray34 = new double[] { (byte) 1, (byte) 100, 1L };
        double double35 = variance22.evaluate(doubleArray34);
        double double37 = variance8.evaluate(doubleArray34, (double) 10.0f);
        org.apache.commons.math.stat.descriptive.moment.Variance variance39 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray46 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double47 = variance39.evaluate(doubleArray46);
        variance39.setBiasCorrected(true);
        long long50 = variance39.getN();
        long long51 = variance39.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance53 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray60 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double61 = variance53.evaluate(doubleArray60);
        double[] doubleArray65 = new double[] { (byte) 1, (byte) 100, 1L };
        double double66 = variance53.evaluate(doubleArray65);
        double double68 = variance39.evaluate(doubleArray65, (double) 10.0f);
        double double69 = variance8.evaluate(doubleArray65);
        // The following exception was thrown during execution in test generation
        try {
            double double72 = variance1.evaluate(doubleArray65, (int) '#', (int) (short) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: begin + length > values.length");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 2168.222222222222d + "'", double16 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + 0L + "'", long19 == 0L);
        org.junit.Assert.assertTrue("'" + long20 + "' != '" + 0L + "'", long20 == 0L);
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 2168.222222222222d + "'", double30 == 2168.222222222222d);
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[1.0, 100.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 2178.0d + "'", double35 == 2178.0d);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 3267.0d + "'", double37 == 3267.0d);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 2168.222222222222d + "'", double47 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + long50 + "' != '" + 0L + "'", long50 == 0L);
        org.junit.Assert.assertTrue("'" + long51 + "' != '" + 0L + "'", long51 == 0L);
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 2168.222222222222d + "'", double61 == 2168.222222222222d);
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[1.0, 100.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 2178.0d + "'", double66 == 2178.0d);
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 3267.0d + "'", double68 == 3267.0d);
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 3267.0d + "'", double69 == 3267.0d);
    }

    @Test
    public void test1396() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1396");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance1.clear();
        double double3 = variance1.getResult();
        double[] doubleArray8 = new double[] { (-1), 2168.222222222222d, 16.566666666418314d, 10.0d };
        variance1.incrementAll(doubleArray8);
        double double10 = variance1.getResult();
        variance1.increment((double) (short) 100);
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-1.0, 2168.222222222222, 16.566666666418314, 10.0]");
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 874596.4092824734d + "'", double10 == 874596.4092824734d);
    }

    @Test
    public void test1397() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1397");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray8 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double9 = variance1.evaluate(doubleArray8);
        variance1.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance13 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray20 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double21 = variance13.evaluate(doubleArray20);
        variance13.setBiasCorrected(true);
        boolean boolean24 = variance13.isBiasCorrected();
        double[] doubleArray31 = new double[] { (short) 0, 1.0d, 1L, 0.0d, (-1.0d), 10L };
        double double32 = variance13.evaluate(doubleArray31);
        double double35 = variance1.evaluate(doubleArray31, (int) (byte) 1, (int) (byte) 0);
        org.apache.commons.math.stat.descriptive.moment.Variance variance37 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance39 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray46 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double47 = variance39.evaluate(doubleArray46);
        variance39.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance51 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray58 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double59 = variance51.evaluate(doubleArray58);
        variance51.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance63 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray70 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double71 = variance63.evaluate(doubleArray70);
        variance63.setBiasCorrected(true);
        boolean boolean74 = variance63.isBiasCorrected();
        double[] doubleArray81 = new double[] { (short) 0, 1.0d, 1L, 0.0d, (-1.0d), 10L };
        double double82 = variance63.evaluate(doubleArray81);
        double double85 = variance51.evaluate(doubleArray81, (int) (byte) 1, (int) (byte) 0);
        variance39.incrementAll(doubleArray81, (int) (byte) 1, 1);
        double double89 = variance37.evaluate(doubleArray81);
        double double90 = variance1.evaluate(doubleArray81);
        boolean boolean91 = variance1.isBiasCorrected();
        boolean boolean92 = variance1.isBiasCorrected();
        variance1.increment(677378.9558333334d);
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 2168.222222222222d + "'", double9 == 2168.222222222222d);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 2168.222222222222d + "'", double21 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[0.0, 1.0, 1.0, 0.0, -1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 16.566666666666663d + "'", double32 == 16.566666666666663d);
        org.junit.Assert.assertTrue(Double.isNaN(double35));
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 2168.222222222222d + "'", double47 == 2168.222222222222d);
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 2168.222222222222d + "'", double59 == 2168.222222222222d);
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + 2168.222222222222d + "'", double71 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray81), "[0.0, 1.0, 1.0, 0.0, -1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double82 + "' != '" + 16.566666666666663d + "'", double82 == 16.566666666666663d);
        org.junit.Assert.assertTrue(Double.isNaN(double85));
        org.junit.Assert.assertTrue("'" + double89 + "' != '" + 13.805555555555552d + "'", double89 == 13.805555555555552d);
        org.junit.Assert.assertTrue("'" + double90 + "' != '" + 16.566666666666663d + "'", double90 == 16.566666666666663d);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + true + "'", boolean91 == true);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + true + "'", boolean92 == true);
    }

    @Test
    public void test1398() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1398");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray8 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double9 = variance1.evaluate(doubleArray8);
        variance1.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance13 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance13.clear();
        double double15 = variance13.getResult();
        double[] doubleArray20 = new double[] { (-1), 2168.222222222222d, 16.566666666418314d, 10.0d };
        variance13.incrementAll(doubleArray20);
        variance1.incrementAll(doubleArray20);
        variance1.increment(16.566666666666674d);
        variance1.setBiasCorrected(false);
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 2168.222222222222d + "'", double9 == 2168.222222222222d);
        org.junit.Assert.assertTrue(Double.isNaN(double15));
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[-1.0, 2168.222222222222, 16.566666666418314, 10.0]");
    }

    @Test
    public void test1399() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1399");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray8 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double9 = variance1.evaluate(doubleArray8);
        variance1.setBiasCorrected(true);
        long long12 = variance1.getN();
        variance1.clear();
        double double14 = variance1.getResult();
        variance1.setBiasCorrected(true);
        boolean boolean17 = variance1.isBiasCorrected();
        org.apache.commons.math.stat.descriptive.moment.Variance variance19 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance19.setBiasCorrected(false);
        long long22 = variance19.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance24 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray31 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double32 = variance24.evaluate(doubleArray31);
        variance24.setBiasCorrected(true);
        boolean boolean35 = variance24.isBiasCorrected();
        double[] doubleArray42 = new double[] { (short) 0, 1.0d, 1L, 0.0d, (-1.0d), 10L };
        double double43 = variance24.evaluate(doubleArray42);
        org.apache.commons.math.stat.descriptive.moment.Variance variance45 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray52 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double53 = variance45.evaluate(doubleArray52);
        variance45.setBiasCorrected(true);
        boolean boolean56 = variance45.isBiasCorrected();
        double[] doubleArray63 = new double[] { (short) 0, 1.0d, 1L, 0.0d, (-1.0d), 10L };
        double double64 = variance45.evaluate(doubleArray63);
        double double67 = variance24.evaluate(doubleArray63, (int) (byte) 1, 0);
        variance24.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance71 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray78 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double79 = variance71.evaluate(doubleArray78);
        variance71.setBiasCorrected(true);
        boolean boolean82 = variance71.isBiasCorrected();
        double[] doubleArray89 = new double[] { (short) 0, 1.0d, 1L, 0.0d, (-1.0d), 10L };
        double double90 = variance71.evaluate(doubleArray89);
        double double92 = variance24.evaluate(doubleArray89, 6.25d);
        boolean boolean93 = variance19.equals((java.lang.Object) variance24);
        boolean boolean94 = variance1.equals((java.lang.Object) boolean93);
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 2168.222222222222d + "'", double9 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 0L + "'", long12 == 0L);
        org.junit.Assert.assertTrue(Double.isNaN(double14));
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + long22 + "' != '" + 0L + "'", long22 == 0L);
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 2168.222222222222d + "'", double32 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[0.0, 1.0, 1.0, 0.0, -1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 16.566666666666663d + "'", double43 == 16.566666666666663d);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 2168.222222222222d + "'", double53 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[0.0, 1.0, 1.0, 0.0, -1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 16.566666666666663d + "'", double64 == 16.566666666666663d);
        org.junit.Assert.assertTrue(Double.isNaN(double67));
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray78), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double79 + "' != '" + 2168.222222222222d + "'", double79 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertNotNull(doubleArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray89), "[0.0, 1.0, 1.0, 0.0, -1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double90 + "' != '" + 16.566666666666663d + "'", double90 == 16.566666666666663d);
        org.junit.Assert.assertTrue("'" + double92 + "' != '" + 16.566666666666666d + "'", double92 == 16.566666666666666d);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + true + "'", boolean93 == true);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + false + "'", boolean94 == false);
    }

    @Test
    public void test1400() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1400");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray8 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double9 = variance1.evaluate(doubleArray8);
        long long10 = variance1.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance12 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray19 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double20 = variance12.evaluate(doubleArray19);
        variance12.setBiasCorrected(true);
        boolean boolean23 = variance12.isBiasCorrected();
        double[] doubleArray30 = new double[] { (short) 0, 1.0d, 1L, 0.0d, (-1.0d), 10L };
        double double31 = variance12.evaluate(doubleArray30);
        org.apache.commons.math.stat.descriptive.moment.Variance variance33 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray40 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double41 = variance33.evaluate(doubleArray40);
        variance33.setBiasCorrected(true);
        boolean boolean44 = variance33.isBiasCorrected();
        double[] doubleArray51 = new double[] { (short) 0, 1.0d, 1L, 0.0d, (-1.0d), 10L };
        double double52 = variance33.evaluate(doubleArray51);
        double double55 = variance12.evaluate(doubleArray51, (int) (byte) 1, 0);
        variance12.setBiasCorrected(true);
        variance12.setBiasCorrected(true);
        double double60 = variance12.getResult();
        boolean boolean61 = variance12.isBiasCorrected();
        boolean boolean62 = variance12.isBiasCorrected();
        org.apache.commons.math.stat.descriptive.moment.Variance variance64 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray71 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double72 = variance64.evaluate(doubleArray71);
        variance64.setBiasCorrected(true);
        boolean boolean75 = variance64.isBiasCorrected();
        double[] doubleArray82 = new double[] { (short) 0, 1.0d, 1L, 0.0d, (-1.0d), 10L };
        double double83 = variance64.evaluate(doubleArray82);
        double double84 = variance12.evaluate(doubleArray82);
        double double86 = variance1.evaluate(doubleArray82, 16.56666666666667d);
        long long87 = variance1.getN();
        boolean boolean89 = variance1.equals((java.lang.Object) 1175056.0d);
        variance1.setBiasCorrected(false);
        double double92 = variance1.getResult();
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 2168.222222222222d + "'", double9 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 0L + "'", long10 == 0L);
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 2168.222222222222d + "'", double20 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[0.0, 1.0, 1.0, 0.0, -1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 16.566666666666663d + "'", double31 == 16.566666666666663d);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 2168.222222222222d + "'", double41 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[0.0, 1.0, 1.0, 0.0, -1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 16.566666666666663d + "'", double52 == 16.566666666666663d);
        org.junit.Assert.assertTrue(Double.isNaN(double55));
        org.junit.Assert.assertTrue(Double.isNaN(double60));
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 2168.222222222222d + "'", double72 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray82), "[0.0, 1.0, 1.0, 0.0, -1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + 16.566666666666663d + "'", double83 == 16.566666666666663d);
        org.junit.Assert.assertTrue("'" + double84 + "' != '" + 16.566666666666663d + "'", double84 == 16.566666666666663d);
        org.junit.Assert.assertTrue("'" + double86 + "' != '" + 13.80555555555562d + "'", double86 == 13.80555555555562d);
        org.junit.Assert.assertTrue("'" + long87 + "' != '" + 0L + "'", long87 == 0L);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double92));
    }

    @Test
    public void test1401() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1401");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray8 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double9 = variance1.evaluate(doubleArray8);
        double[] doubleArray13 = new double[] { (byte) 1, (byte) 100, 1L };
        double double14 = variance1.evaluate(doubleArray13);
        org.apache.commons.math.stat.descriptive.moment.Variance variance16 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray23 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double24 = variance16.evaluate(doubleArray23);
        variance16.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance28 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray35 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double36 = variance28.evaluate(doubleArray35);
        variance16.incrementAll(doubleArray35);
        variance1.incrementAll(doubleArray35);
        long long39 = variance1.getN();
        long long40 = variance1.getN();
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 2168.222222222222d + "'", double9 == 2168.222222222222d);
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[1.0, 100.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 2178.0d + "'", double14 == 2178.0d);
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 2168.222222222222d + "'", double24 == 2168.222222222222d);
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 2168.222222222222d + "'", double36 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + long39 + "' != '" + 6L + "'", long39 == 6L);
        org.junit.Assert.assertTrue("'" + long40 + "' != '" + 6L + "'", long40 == 6L);
    }

    @Test
    public void test1402() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1402");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray8 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double9 = variance1.evaluate(doubleArray8);
        variance1.setBiasCorrected(true);
        boolean boolean12 = variance1.isBiasCorrected();
        org.apache.commons.math.stat.descriptive.moment.Variance variance14 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray21 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double22 = variance14.evaluate(doubleArray21);
        variance14.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance26 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray33 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double34 = variance26.evaluate(doubleArray33);
        variance26.setBiasCorrected(true);
        boolean boolean37 = variance26.isBiasCorrected();
        double[] doubleArray44 = new double[] { (short) 0, 1.0d, 1L, 0.0d, (-1.0d), 10L };
        double double45 = variance26.evaluate(doubleArray44);
        double double48 = variance14.evaluate(doubleArray44, (int) (byte) 1, (int) (byte) 0);
        double double51 = variance1.evaluate(doubleArray44, (int) (byte) 1, 0);
        variance1.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance55 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray62 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double63 = variance55.evaluate(doubleArray62);
        variance55.setBiasCorrected(true);
        boolean boolean66 = variance55.isBiasCorrected();
        double[] doubleArray73 = new double[] { (short) 0, 1.0d, 1L, 0.0d, (-1.0d), 10L };
        double double74 = variance55.evaluate(doubleArray73);
        double double75 = variance55.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance77 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance77.clear();
        double double79 = variance77.getResult();
        double[] doubleArray84 = new double[] { (-1), 2168.222222222222d, 16.566666666418314d, 10.0d };
        variance77.incrementAll(doubleArray84);
        double double86 = variance55.evaluate(doubleArray84);
        boolean boolean87 = variance1.equals((java.lang.Object) variance55);
        variance55.setBiasCorrected(false);
        boolean boolean90 = variance55.isBiasCorrected();
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 2168.222222222222d + "'", double9 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 2168.222222222222d + "'", double22 == 2168.222222222222d);
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 2168.222222222222d + "'", double34 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[0.0, 1.0, 1.0, 0.0, -1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 16.566666666666663d + "'", double45 == 16.566666666666663d);
        org.junit.Assert.assertTrue(Double.isNaN(double48));
        org.junit.Assert.assertTrue(Double.isNaN(double51));
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 2168.222222222222d + "'", double63 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[0.0, 1.0, 1.0, 0.0, -1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double74 + "' != '" + 16.566666666666663d + "'", double74 == 16.566666666666663d);
        org.junit.Assert.assertTrue(Double.isNaN(double75));
        org.junit.Assert.assertTrue(Double.isNaN(double79));
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray84), "[-1.0, 2168.222222222222, 16.566666666418314, 10.0]");
        org.junit.Assert.assertTrue("'" + double86 + "' != '" + 1166128.5457099646d + "'", double86 == 1166128.5457099646d);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + true + "'", boolean87 == true);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
    }

    @Test
    public void test1403() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1403");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray8 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double9 = variance1.evaluate(doubleArray8);
        long long10 = variance1.getN();
        variance1.increment(874596.4092824734d);
        variance1.increment((double) (byte) 100);
        boolean boolean15 = variance1.isBiasCorrected();
        long long16 = variance1.getN();
        variance1.setBiasCorrected(false);
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 2168.222222222222d + "'", double9 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 0L + "'", long10 == 0L);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 2L + "'", long16 == 2L);
    }

    @Test
    public void test1404() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1404");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment1 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance2 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment1);
        boolean boolean3 = variance2.isBiasCorrected();
        boolean boolean4 = variance2.isBiasCorrected();
        org.apache.commons.math.stat.descriptive.moment.Variance variance6 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray13 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double14 = variance6.evaluate(doubleArray13);
        variance6.setBiasCorrected(true);
        boolean boolean17 = variance6.isBiasCorrected();
        double double18 = variance6.getResult();
        double double19 = variance6.getResult();
        long long20 = variance6.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance22 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray29 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double30 = variance22.evaluate(doubleArray29);
        variance22.setBiasCorrected(true);
        long long33 = variance22.getN();
        double double34 = variance22.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance36 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray43 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double44 = variance36.evaluate(doubleArray43);
        variance36.setBiasCorrected(true);
        long long47 = variance36.getN();
        long long48 = variance36.getN();
        double double49 = variance36.getResult();
        variance36.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance52 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray59 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double60 = variance52.evaluate(doubleArray59);
        double[] doubleArray64 = new double[] { (byte) 1, (byte) 100, 1L };
        double double65 = variance52.evaluate(doubleArray64);
        org.apache.commons.math.stat.descriptive.moment.Variance variance67 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray74 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double75 = variance67.evaluate(doubleArray74);
        variance67.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance79 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray86 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double87 = variance79.evaluate(doubleArray86);
        variance67.incrementAll(doubleArray86);
        variance52.incrementAll(doubleArray86);
        double double90 = variance36.evaluate(doubleArray86);
        double double91 = variance22.evaluate(doubleArray86);
        variance6.incrementAll(doubleArray86);
        // The following exception was thrown during execution in test generation
        try {
            double double96 = variance2.evaluate(doubleArray86, (double) 100, (int) (byte) 0, (-1));
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: length cannot be negative");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 2168.222222222222d + "'", double14 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double18));
        org.junit.Assert.assertTrue(Double.isNaN(double19));
        org.junit.Assert.assertTrue("'" + long20 + "' != '" + 0L + "'", long20 == 0L);
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 2168.222222222222d + "'", double30 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + long33 + "' != '" + 0L + "'", long33 == 0L);
        org.junit.Assert.assertTrue(Double.isNaN(double34));
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 2168.222222222222d + "'", double44 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + long47 + "' != '" + 0L + "'", long47 == 0L);
        org.junit.Assert.assertTrue("'" + long48 + "' != '" + 0L + "'", long48 == 0L);
        org.junit.Assert.assertTrue(Double.isNaN(double49));
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 2168.222222222222d + "'", double60 == 2168.222222222222d);
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[1.0, 100.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 2178.0d + "'", double65 == 2178.0d);
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray74), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double75 + "' != '" + 2168.222222222222d + "'", double75 == 2168.222222222222d);
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray86), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double87 + "' != '" + 2168.222222222222d + "'", double87 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + double90 + "' != '" + 2601.866666666667d + "'", double90 == 2601.866666666667d);
        org.junit.Assert.assertTrue("'" + double91 + "' != '" + 2601.866666666667d + "'", double91 == 2601.866666666667d);
    }

    @Test
    public void test1405() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1405");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray8 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double9 = variance1.evaluate(doubleArray8);
        variance1.setBiasCorrected(true);
        boolean boolean12 = variance1.isBiasCorrected();
        double[] doubleArray19 = new double[] { (short) 0, 1.0d, 1L, 0.0d, (-1.0d), 10L };
        double double20 = variance1.evaluate(doubleArray19);
        org.apache.commons.math.stat.descriptive.moment.Variance variance22 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray29 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double30 = variance22.evaluate(doubleArray29);
        variance22.setBiasCorrected(true);
        boolean boolean33 = variance22.isBiasCorrected();
        double[] doubleArray40 = new double[] { (short) 0, 1.0d, 1L, 0.0d, (-1.0d), 10L };
        double double41 = variance22.evaluate(doubleArray40);
        double double44 = variance1.evaluate(doubleArray40, (int) (byte) 1, 0);
        boolean boolean45 = variance1.isBiasCorrected();
        variance1.setBiasCorrected(true);
        variance1.increment(13.80555555555562d);
        boolean boolean50 = variance1.isBiasCorrected();
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 2168.222222222222d + "'", double9 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[0.0, 1.0, 1.0, 0.0, -1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 16.566666666666663d + "'", double20 == 16.566666666666663d);
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 2168.222222222222d + "'", double30 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[0.0, 1.0, 1.0, 0.0, -1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 16.566666666666663d + "'", double41 == 16.566666666666663d);
        org.junit.Assert.assertTrue(Double.isNaN(double44));
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
    }

    @Test
    public void test1406() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1406");
        org.apache.commons.math.stat.descriptive.moment.Variance variance0 = new org.apache.commons.math.stat.descriptive.moment.Variance();
        long long1 = variance0.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance3 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray10 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double11 = variance3.evaluate(doubleArray10);
        variance3.setBiasCorrected(true);
        long long14 = variance3.getN();
        boolean boolean15 = variance0.equals((java.lang.Object) long14);
        double double16 = variance0.getResult();
        double double17 = variance0.getResult();
        variance0.clear();
        variance0.clear();
        boolean boolean20 = variance0.isBiasCorrected();
        long long21 = variance0.getN();
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 2168.222222222222d + "'", double11 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 0L + "'", long14 == 0L);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double16));
        org.junit.Assert.assertTrue(Double.isNaN(double17));
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + long21 + "' != '" + 0L + "'", long21 == 0L);
    }

    @Test
    public void test1407() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1407");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray8 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double9 = variance1.evaluate(doubleArray8);
        variance1.setBiasCorrected(true);
        long long12 = variance1.getN();
        double double13 = variance1.getResult();
        boolean boolean14 = variance1.isBiasCorrected();
        long long15 = variance1.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance17 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray24 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double25 = variance17.evaluate(doubleArray24);
        variance17.setBiasCorrected(true);
        variance17.increment((double) (byte) 0);
        variance17.clear();
        boolean boolean31 = variance17.isBiasCorrected();
        double double32 = variance17.getResult();
        double double33 = variance17.getResult();
        long long34 = variance17.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance36 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray43 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double44 = variance36.evaluate(doubleArray43);
        variance36.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance48 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray55 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double56 = variance48.evaluate(doubleArray55);
        variance48.setBiasCorrected(true);
        boolean boolean59 = variance48.isBiasCorrected();
        double[] doubleArray66 = new double[] { (short) 0, 1.0d, 1L, 0.0d, (-1.0d), 10L };
        double double67 = variance48.evaluate(doubleArray66);
        org.apache.commons.math.stat.descriptive.moment.Variance variance69 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray76 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double77 = variance69.evaluate(doubleArray76);
        variance69.setBiasCorrected(true);
        boolean boolean80 = variance69.isBiasCorrected();
        double[] doubleArray87 = new double[] { (short) 0, 1.0d, 1L, 0.0d, (-1.0d), 10L };
        double double88 = variance69.evaluate(doubleArray87);
        double double91 = variance48.evaluate(doubleArray87, (int) (byte) 1, 0);
        double double93 = variance36.evaluate(doubleArray87, 2178.0d);
        variance17.incrementAll(doubleArray87);
        // The following exception was thrown during execution in test generation
        try {
            variance1.incrementAll(doubleArray87, (int) '4', 10);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: begin + length > values.length");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 2168.222222222222d + "'", double9 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 0L + "'", long12 == 0L);
        org.junit.Assert.assertTrue(Double.isNaN(double13));
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 0L + "'", long15 == 0L);
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 2168.222222222222d + "'", double25 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double32));
        org.junit.Assert.assertTrue(Double.isNaN(double33));
        org.junit.Assert.assertTrue("'" + long34 + "' != '" + 0L + "'", long34 == 0L);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 2168.222222222222d + "'", double44 == 2168.222222222222d);
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 2168.222222222222d + "'", double56 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[0.0, 1.0, 1.0, 0.0, -1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 16.566666666666663d + "'", double67 == 16.566666666666663d);
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double77 + "' != '" + 2168.222222222222d + "'", double77 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertNotNull(doubleArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray87), "[0.0, 1.0, 1.0, 0.0, -1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double88 + "' != '" + 16.566666666666663d + "'", double88 == 16.566666666666663d);
        org.junit.Assert.assertTrue(Double.isNaN(double91));
        org.junit.Assert.assertTrue("'" + double93 + "' != '" + 16.566666666418314d + "'", double93 == 16.566666666418314d);
    }

    @Test
    public void test1408() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1408");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray8 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double9 = variance1.evaluate(doubleArray8);
        variance1.setBiasCorrected(true);
        long long12 = variance1.getN();
        long long13 = variance1.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance15 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray22 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double23 = variance15.evaluate(doubleArray22);
        double[] doubleArray27 = new double[] { (byte) 1, (byte) 100, 1L };
        double double28 = variance15.evaluate(doubleArray27);
        double double30 = variance1.evaluate(doubleArray27, (double) 10.0f);
        org.apache.commons.math.stat.descriptive.moment.Variance variance32 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance32.clear();
        boolean boolean34 = variance32.isBiasCorrected();
        org.apache.commons.math.stat.descriptive.moment.Variance variance36 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray43 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double44 = variance36.evaluate(doubleArray43);
        variance36.setBiasCorrected(true);
        long long47 = variance36.getN();
        long long48 = variance36.getN();
        double double49 = variance36.getResult();
        variance36.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance52 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray59 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double60 = variance52.evaluate(doubleArray59);
        double[] doubleArray64 = new double[] { (byte) 1, (byte) 100, 1L };
        double double65 = variance52.evaluate(doubleArray64);
        org.apache.commons.math.stat.descriptive.moment.Variance variance67 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray74 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double75 = variance67.evaluate(doubleArray74);
        variance67.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance79 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray86 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double87 = variance79.evaluate(doubleArray86);
        variance67.incrementAll(doubleArray86);
        variance52.incrementAll(doubleArray86);
        double double90 = variance36.evaluate(doubleArray86);
        double double91 = variance32.evaluate(doubleArray86);
        double double92 = variance1.evaluate(doubleArray86);
        long long93 = variance1.getN();
        double double94 = variance1.getResult();
        double double95 = variance1.getResult();
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 2168.222222222222d + "'", double9 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 0L + "'", long12 == 0L);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 0L + "'", long13 == 0L);
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 2168.222222222222d + "'", double23 == 2168.222222222222d);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[1.0, 100.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 2178.0d + "'", double28 == 2178.0d);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 3267.0d + "'", double30 == 3267.0d);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 2168.222222222222d + "'", double44 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + long47 + "' != '" + 0L + "'", long47 == 0L);
        org.junit.Assert.assertTrue("'" + long48 + "' != '" + 0L + "'", long48 == 0L);
        org.junit.Assert.assertTrue(Double.isNaN(double49));
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 2168.222222222222d + "'", double60 == 2168.222222222222d);
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[1.0, 100.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 2178.0d + "'", double65 == 2178.0d);
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray74), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double75 + "' != '" + 2168.222222222222d + "'", double75 == 2168.222222222222d);
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray86), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double87 + "' != '" + 2168.222222222222d + "'", double87 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + double90 + "' != '" + 2601.866666666667d + "'", double90 == 2601.866666666667d);
        org.junit.Assert.assertTrue("'" + double91 + "' != '" + 2168.222222222222d + "'", double91 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + double92 + "' != '" + 2601.866666666667d + "'", double92 == 2601.866666666667d);
        org.junit.Assert.assertTrue("'" + long93 + "' != '" + 0L + "'", long93 == 0L);
        org.junit.Assert.assertTrue(Double.isNaN(double94));
        org.junit.Assert.assertTrue(Double.isNaN(double95));
    }

    @Test
    public void test1409() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1409");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray8 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double9 = variance1.evaluate(doubleArray8);
        variance1.setBiasCorrected(true);
        long long12 = variance1.getN();
        long long13 = variance1.getN();
        boolean boolean15 = variance1.equals((java.lang.Object) 16.566666666666663d);
        boolean boolean17 = variance1.equals((java.lang.Object) (short) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance19 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray26 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double27 = variance19.evaluate(doubleArray26);
        variance19.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance31 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray38 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double39 = variance31.evaluate(doubleArray38);
        variance19.incrementAll(doubleArray38);
        double double41 = variance1.evaluate(doubleArray38);
        double double42 = variance1.getResult();
        variance1.increment(16.56666666666667d);
        java.lang.Class<?> wildcardClass45 = variance1.getClass();
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 2168.222222222222d + "'", double9 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 0L + "'", long12 == 0L);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 0L + "'", long13 == 0L);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 2168.222222222222d + "'", double27 == 2168.222222222222d);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 2168.222222222222d + "'", double39 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 2601.866666666667d + "'", double41 == 2601.866666666667d);
        org.junit.Assert.assertTrue(Double.isNaN(double42));
        org.junit.Assert.assertNotNull(wildcardClass45);
    }

    @Test
    public void test1410() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1410");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray8 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double9 = variance1.evaluate(doubleArray8);
        variance1.setBiasCorrected(true);
        long long12 = variance1.getN();
        long long13 = variance1.getN();
        boolean boolean14 = variance1.isBiasCorrected();
        org.apache.commons.math.stat.descriptive.moment.Variance variance16 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray23 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double24 = variance16.evaluate(doubleArray23);
        variance16.setBiasCorrected(true);
        boolean boolean27 = variance16.isBiasCorrected();
        double[] doubleArray34 = new double[] { (short) 0, 1.0d, 1L, 0.0d, (-1.0d), 10L };
        double double35 = variance16.evaluate(doubleArray34);
        boolean boolean37 = variance16.equals((java.lang.Object) 10.0d);
        boolean boolean38 = variance16.isBiasCorrected();
        org.apache.commons.math.stat.descriptive.moment.Variance variance40 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        boolean boolean41 = variance16.equals((java.lang.Object) false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance43 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray50 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double51 = variance43.evaluate(doubleArray50);
        variance43.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance55 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray62 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double63 = variance55.evaluate(doubleArray62);
        variance43.incrementAll(doubleArray62);
        double double66 = variance16.evaluate(doubleArray62, (double) 100.0f);
        variance16.clear();
        boolean boolean68 = variance16.isBiasCorrected();
        org.apache.commons.math.stat.descriptive.moment.Variance variance70 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray77 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double78 = variance70.evaluate(doubleArray77);
        variance70.setBiasCorrected(true);
        long long81 = variance70.getN();
        variance70.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance84 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray91 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double92 = variance84.evaluate(doubleArray91);
        double double93 = variance70.evaluate(doubleArray91);
        double double94 = variance16.evaluate(doubleArray91);
        double double96 = variance1.evaluate(doubleArray91, (double) 100L);
        variance1.setBiasCorrected(true);
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 2168.222222222222d + "'", double9 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 0L + "'", long12 == 0L);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 0L + "'", long13 == 0L);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 2168.222222222222d + "'", double24 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[0.0, 1.0, 1.0, 0.0, -1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 16.566666666666663d + "'", double35 == 16.566666666666663d);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 2168.222222222222d + "'", double51 == 2168.222222222222d);
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 2168.222222222222d + "'", double63 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 2601.8666666666663d + "'", double66 == 2601.8666666666663d);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray77), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double78 + "' != '" + 2168.222222222222d + "'", double78 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + long81 + "' != '" + 0L + "'", long81 == 0L);
        org.junit.Assert.assertNotNull(doubleArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray91), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double92 + "' != '" + 2168.222222222222d + "'", double92 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + double93 + "' != '" + 2601.866666666667d + "'", double93 == 2601.866666666667d);
        org.junit.Assert.assertTrue("'" + double94 + "' != '" + 2601.866666666667d + "'", double94 == 2601.866666666667d);
        org.junit.Assert.assertTrue("'" + double96 + "' != '" + 2601.8666666666663d + "'", double96 == 2601.8666666666663d);
    }

    @Test
    public void test1411() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1411");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment1 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance2 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment1);
        variance2.increment((double) 1.0f);
        variance2.setBiasCorrected(false);
    }

    @Test
    public void test1412() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1412");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray8 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double9 = variance1.evaluate(doubleArray8);
        variance1.setBiasCorrected(true);
        boolean boolean12 = variance1.isBiasCorrected();
        double[] doubleArray19 = new double[] { (short) 0, 1.0d, 1L, 0.0d, (-1.0d), 10L };
        double double20 = variance1.evaluate(doubleArray19);
        double double21 = variance1.getResult();
        long long22 = variance1.getN();
        variance1.setBiasCorrected(false);
        variance1.setBiasCorrected(false);
        double[] doubleArray27 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double28 = variance1.evaluate(doubleArray27);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: input values array is null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 2168.222222222222d + "'", double9 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[0.0, 1.0, 1.0, 0.0, -1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 16.566666666666663d + "'", double20 == 16.566666666666663d);
        org.junit.Assert.assertTrue(Double.isNaN(double21));
        org.junit.Assert.assertTrue("'" + long22 + "' != '" + 0L + "'", long22 == 0L);
    }

    @Test
    public void test1413() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1413");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray8 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double9 = variance1.evaluate(doubleArray8);
        variance1.setBiasCorrected(true);
        boolean boolean12 = variance1.isBiasCorrected();
        double[] doubleArray19 = new double[] { (short) 0, 1.0d, 1L, 0.0d, (-1.0d), 10L };
        double double20 = variance1.evaluate(doubleArray19);
        boolean boolean22 = variance1.equals((java.lang.Object) 10.0d);
        boolean boolean23 = variance1.isBiasCorrected();
        double double24 = variance1.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance26 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray33 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double34 = variance26.evaluate(doubleArray33);
        variance26.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance38 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray45 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double46 = variance38.evaluate(doubleArray45);
        variance38.setBiasCorrected(true);
        boolean boolean49 = variance38.isBiasCorrected();
        double[] doubleArray56 = new double[] { (short) 0, 1.0d, 1L, 0.0d, (-1.0d), 10L };
        double double57 = variance38.evaluate(doubleArray56);
        double double60 = variance26.evaluate(doubleArray56, (int) (byte) 1, (int) (byte) 0);
        double double61 = variance1.evaluate(doubleArray56);
        boolean boolean62 = variance1.isBiasCorrected();
        org.apache.commons.math.stat.descriptive.moment.Variance variance64 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance64.clear();
        boolean boolean66 = variance64.isBiasCorrected();
        boolean boolean68 = variance64.equals((java.lang.Object) 1166128.5457099646d);
        variance64.clear();
        double double70 = variance64.getResult();
        variance64.increment((double) 10L);
        boolean boolean73 = variance1.equals((java.lang.Object) variance64);
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 2168.222222222222d + "'", double9 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[0.0, 1.0, 1.0, 0.0, -1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 16.566666666666663d + "'", double20 == 16.566666666666663d);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double24));
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 2168.222222222222d + "'", double34 == 2168.222222222222d);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 2168.222222222222d + "'", double46 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[0.0, 1.0, 1.0, 0.0, -1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 16.566666666666663d + "'", double57 == 16.566666666666663d);
        org.junit.Assert.assertTrue(Double.isNaN(double60));
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 16.566666666666663d + "'", double61 == 16.566666666666663d);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double70));
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
    }

    @Test
    public void test1414() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1414");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray8 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double9 = variance1.evaluate(doubleArray8);
        variance1.setBiasCorrected(true);
        variance1.increment((double) (byte) 0);
        variance1.clear();
        boolean boolean15 = variance1.isBiasCorrected();
        long long16 = variance1.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance18 = new org.apache.commons.math.stat.descriptive.moment.Variance(true);
        double double19 = variance18.getResult();
        double double20 = variance18.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance22 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray29 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double30 = variance22.evaluate(doubleArray29);
        variance22.clear();
        variance22.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance35 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance35.clear();
        double double37 = variance35.getResult();
        double[] doubleArray42 = new double[] { (-1), 2168.222222222222d, 16.566666666418314d, 10.0d };
        variance35.incrementAll(doubleArray42);
        boolean boolean44 = variance22.equals((java.lang.Object) doubleArray42);
        double double46 = variance18.evaluate(doubleArray42, (double) (-1.0f));
        long long47 = variance18.getN();
        variance18.clear();
        variance18.clear();
        double double50 = variance18.getResult();
        long long51 = variance18.getN();
        boolean boolean52 = variance1.equals((java.lang.Object) variance18);
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 2168.222222222222d + "'", double9 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 0L + "'", long16 == 0L);
        org.junit.Assert.assertTrue(Double.isNaN(double19));
        org.junit.Assert.assertTrue(Double.isNaN(double20));
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 2168.222222222222d + "'", double30 == 2168.222222222222d);
        org.junit.Assert.assertTrue(Double.isNaN(double37));
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[-1.0, 2168.222222222222, 16.566666666418314, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 1166128.5457099646d + "'", double46 == 1166128.5457099646d);
        org.junit.Assert.assertTrue("'" + long47 + "' != '" + 0L + "'", long47 == 0L);
        org.junit.Assert.assertTrue(Double.isNaN(double50));
        org.junit.Assert.assertTrue("'" + long51 + "' != '" + 0L + "'", long51 == 0L);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
    }

    @Test
    public void test1415() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1415");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray8 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double9 = variance1.evaluate(doubleArray8);
        variance1.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance13 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray20 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double21 = variance13.evaluate(doubleArray20);
        variance1.incrementAll(doubleArray20);
        variance1.clear();
        variance1.setBiasCorrected(false);
        long long26 = variance1.getN();
        variance1.clear();
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 2168.222222222222d + "'", double9 == 2168.222222222222d);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 2168.222222222222d + "'", double21 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + long26 + "' != '" + 0L + "'", long26 == 0L);
    }

    @Test
    public void test1416() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1416");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance1.setBiasCorrected(false);
        variance1.clear();
        double double5 = variance1.getResult();
        org.junit.Assert.assertTrue(Double.isNaN(double5));
    }

    @Test
    public void test1417() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1417");
        org.apache.commons.math.stat.descriptive.moment.Variance variance0 = new org.apache.commons.math.stat.descriptive.moment.Variance();
        variance0.increment(1694.7000000000003d);
        double double3 = variance0.getResult();
        variance0.setBiasCorrected(false);
        boolean boolean6 = variance0.isBiasCorrected();
        long long7 = variance0.getN();
        double double8 = variance0.getResult();
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 0.0d + "'", double3 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 1L + "'", long7 == 1L);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
    }

    @Test
    public void test1418() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1418");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray8 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double9 = variance1.evaluate(doubleArray8);
        variance1.setBiasCorrected(true);
        boolean boolean12 = variance1.isBiasCorrected();
        org.apache.commons.math.stat.descriptive.moment.Variance variance14 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray21 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double22 = variance14.evaluate(doubleArray21);
        variance14.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance26 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray33 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double34 = variance26.evaluate(doubleArray33);
        variance26.setBiasCorrected(true);
        boolean boolean37 = variance26.isBiasCorrected();
        double[] doubleArray44 = new double[] { (short) 0, 1.0d, 1L, 0.0d, (-1.0d), 10L };
        double double45 = variance26.evaluate(doubleArray44);
        double double48 = variance14.evaluate(doubleArray44, (int) (byte) 1, (int) (byte) 0);
        double double51 = variance1.evaluate(doubleArray44, (int) (byte) 1, 0);
        variance1.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance55 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray62 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double63 = variance55.evaluate(doubleArray62);
        variance55.setBiasCorrected(true);
        boolean boolean66 = variance55.isBiasCorrected();
        double[] doubleArray73 = new double[] { (short) 0, 1.0d, 1L, 0.0d, (-1.0d), 10L };
        double double74 = variance55.evaluate(doubleArray73);
        double double75 = variance55.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance77 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance77.clear();
        double double79 = variance77.getResult();
        double[] doubleArray84 = new double[] { (-1), 2168.222222222222d, 16.566666666418314d, 10.0d };
        variance77.incrementAll(doubleArray84);
        double double86 = variance55.evaluate(doubleArray84);
        boolean boolean87 = variance1.equals((java.lang.Object) variance55);
        variance55.setBiasCorrected(false);
        variance55.clear();
        variance55.setBiasCorrected(true);
        variance55.clear();
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 2168.222222222222d + "'", double9 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 2168.222222222222d + "'", double22 == 2168.222222222222d);
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 2168.222222222222d + "'", double34 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[0.0, 1.0, 1.0, 0.0, -1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 16.566666666666663d + "'", double45 == 16.566666666666663d);
        org.junit.Assert.assertTrue(Double.isNaN(double48));
        org.junit.Assert.assertTrue(Double.isNaN(double51));
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 2168.222222222222d + "'", double63 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[0.0, 1.0, 1.0, 0.0, -1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double74 + "' != '" + 16.566666666666663d + "'", double74 == 16.566666666666663d);
        org.junit.Assert.assertTrue(Double.isNaN(double75));
        org.junit.Assert.assertTrue(Double.isNaN(double79));
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray84), "[-1.0, 2168.222222222222, 16.566666666418314, 10.0]");
        org.junit.Assert.assertTrue("'" + double86 + "' != '" + 1166128.5457099646d + "'", double86 == 1166128.5457099646d);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + true + "'", boolean87 == true);
    }

    @Test
    public void test1419() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1419");
        org.apache.commons.math.stat.descriptive.moment.Variance variance0 = new org.apache.commons.math.stat.descriptive.moment.Variance();
        double double1 = variance0.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance3 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray10 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double11 = variance3.evaluate(doubleArray10);
        variance3.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance15 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray22 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double23 = variance15.evaluate(doubleArray22);
        variance3.incrementAll(doubleArray22);
        boolean boolean25 = variance0.equals((java.lang.Object) variance3);
        org.apache.commons.math.stat.descriptive.moment.Variance variance27 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray34 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double35 = variance27.evaluate(doubleArray34);
        variance27.clear();
        variance27.setBiasCorrected(false);
        variance27.clear();
        boolean boolean41 = variance27.equals((java.lang.Object) 10.0d);
        org.apache.commons.math.stat.descriptive.moment.Variance variance43 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray50 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double51 = variance43.evaluate(doubleArray50);
        variance43.setBiasCorrected(true);
        long long54 = variance43.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance56 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray63 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double64 = variance56.evaluate(doubleArray63);
        variance56.clear();
        variance56.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance69 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance69.clear();
        double double71 = variance69.getResult();
        double[] doubleArray76 = new double[] { (-1), 2168.222222222222d, 16.566666666418314d, 10.0d };
        variance69.incrementAll(doubleArray76);
        boolean boolean78 = variance56.equals((java.lang.Object) doubleArray76);
        variance43.incrementAll(doubleArray76);
        variance27.incrementAll(doubleArray76);
        // The following exception was thrown during execution in test generation
        try {
            double double84 = variance0.evaluate(doubleArray76, 13.80555555555562d, (-1), (int) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: start position cannot be negative");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue(Double.isNaN(double1));
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 2168.222222222222d + "'", double11 == 2168.222222222222d);
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 2168.222222222222d + "'", double23 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 2168.222222222222d + "'", double35 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 2168.222222222222d + "'", double51 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + long54 + "' != '" + 0L + "'", long54 == 0L);
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 2168.222222222222d + "'", double64 == 2168.222222222222d);
        org.junit.Assert.assertTrue(Double.isNaN(double71));
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[-1.0, 2168.222222222222, 16.566666666418314, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
    }

    @Test
    public void test1420() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1420");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray8 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double9 = variance1.evaluate(doubleArray8);
        variance1.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance13 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray20 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double21 = variance13.evaluate(doubleArray20);
        variance1.incrementAll(doubleArray20);
        variance1.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance25 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray32 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double33 = variance25.evaluate(doubleArray32);
        double[] doubleArray37 = new double[] { (byte) 1, (byte) 100, 1L };
        double double38 = variance25.evaluate(doubleArray37);
        variance1.incrementAll(doubleArray37, (int) (byte) 0, (int) (byte) 1);
        long long42 = variance1.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance44 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray51 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double52 = variance44.evaluate(doubleArray51);
        variance44.setBiasCorrected(true);
        boolean boolean55 = variance44.isBiasCorrected();
        double[] doubleArray62 = new double[] { (short) 0, 1.0d, 1L, 0.0d, (-1.0d), 10L };
        double double63 = variance44.evaluate(doubleArray62);
        boolean boolean65 = variance44.equals((java.lang.Object) 10.0d);
        boolean boolean66 = variance44.isBiasCorrected();
        org.apache.commons.math.stat.descriptive.moment.Variance variance68 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        boolean boolean69 = variance44.equals((java.lang.Object) false);
        variance44.setBiasCorrected(true);
        boolean boolean72 = variance1.equals((java.lang.Object) variance44);
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 2168.222222222222d + "'", double9 == 2168.222222222222d);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 2168.222222222222d + "'", double21 == 2168.222222222222d);
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 2168.222222222222d + "'", double33 == 2168.222222222222d);
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[1.0, 100.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 2178.0d + "'", double38 == 2178.0d);
        org.junit.Assert.assertTrue("'" + long42 + "' != '" + 1L + "'", long42 == 1L);
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 2168.222222222222d + "'", double52 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[0.0, 1.0, 1.0, 0.0, -1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 16.566666666666663d + "'", double63 == 16.566666666666663d);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
    }

    @Test
    public void test1421() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1421");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray8 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double9 = variance1.evaluate(doubleArray8);
        variance1.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance13 = new org.apache.commons.math.stat.descriptive.moment.Variance(true);
        boolean boolean14 = variance1.equals((java.lang.Object) true);
        java.lang.Object obj15 = null;
        boolean boolean16 = variance1.equals(obj15);
        variance1.increment(677378.9558333334d);
        double double19 = variance1.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance20 = new org.apache.commons.math.stat.descriptive.moment.Variance();
        double double21 = variance20.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance23 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray30 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double31 = variance23.evaluate(doubleArray30);
        variance23.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance35 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray42 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double43 = variance35.evaluate(doubleArray42);
        variance23.incrementAll(doubleArray42);
        boolean boolean45 = variance20.equals((java.lang.Object) variance23);
        variance23.increment(Double.NaN);
        org.apache.commons.math.stat.descriptive.moment.Variance variance49 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray56 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double57 = variance49.evaluate(doubleArray56);
        variance49.setBiasCorrected(true);
        long long60 = variance49.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance62 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray69 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double70 = variance62.evaluate(doubleArray69);
        variance62.clear();
        variance62.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance75 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance75.clear();
        double double77 = variance75.getResult();
        double[] doubleArray82 = new double[] { (-1), 2168.222222222222d, 16.566666666418314d, 10.0d };
        variance75.incrementAll(doubleArray82);
        boolean boolean84 = variance62.equals((java.lang.Object) doubleArray82);
        variance49.incrementAll(doubleArray82);
        boolean boolean86 = variance23.equals((java.lang.Object) doubleArray82);
        double double88 = variance1.evaluate(doubleArray82, 874596.4092824734d);
        variance1.setBiasCorrected(false);
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 2168.222222222222d + "'", double9 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.0d + "'", double19 == 0.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double21));
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 2168.222222222222d + "'", double31 == 2168.222222222222d);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 2168.222222222222d + "'", double43 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 2168.222222222222d + "'", double57 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + long60 + "' != '" + 0L + "'", long60 == 0L);
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + 2168.222222222222d + "'", double70 == 2168.222222222222d);
        org.junit.Assert.assertTrue(Double.isNaN(double77));
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray82), "[-1.0, 2168.222222222222, 16.566666666418314, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertTrue("'" + double88 + "' != '" + 1166128.545735677d + "'", double88 == 1166128.545735677d);
    }

    @Test
    public void test1422() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1422");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray8 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double9 = variance1.evaluate(doubleArray8);
        variance1.setBiasCorrected(true);
        long long12 = variance1.getN();
        variance1.clear();
        long long14 = variance1.getN();
        boolean boolean15 = variance1.isBiasCorrected();
        variance1.increment(0.0d);
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 2168.222222222222d + "'", double9 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 0L + "'", long12 == 0L);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 0L + "'", long14 == 0L);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
    }

    @Test
    public void test1423() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1423");
        org.apache.commons.math.stat.descriptive.moment.Variance variance0 = new org.apache.commons.math.stat.descriptive.moment.Variance();
        double double1 = variance0.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance3 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray10 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double11 = variance3.evaluate(doubleArray10);
        variance3.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance15 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray22 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double23 = variance15.evaluate(doubleArray22);
        variance3.incrementAll(doubleArray22);
        boolean boolean25 = variance0.equals((java.lang.Object) variance3);
        org.apache.commons.math.stat.descriptive.moment.Variance variance27 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray34 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double35 = variance27.evaluate(doubleArray34);
        variance27.clear();
        boolean boolean37 = variance3.equals((java.lang.Object) variance27);
        variance27.clear();
        double double39 = variance27.getResult();
        org.junit.Assert.assertTrue(Double.isNaN(double1));
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 2168.222222222222d + "'", double11 == 2168.222222222222d);
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 2168.222222222222d + "'", double23 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 2168.222222222222d + "'", double35 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double39));
    }

    @Test
    public void test1424() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1424");
        org.apache.commons.math.stat.descriptive.moment.Variance variance0 = new org.apache.commons.math.stat.descriptive.moment.Variance();
        long long1 = variance0.getN();
        boolean boolean2 = variance0.isBiasCorrected();
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray11 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double12 = variance4.evaluate(doubleArray11);
        variance4.setBiasCorrected(true);
        boolean boolean15 = variance4.isBiasCorrected();
        double[] doubleArray22 = new double[] { (short) 0, 1.0d, 1L, 0.0d, (-1.0d), 10L };
        double double23 = variance4.evaluate(doubleArray22);
        boolean boolean25 = variance4.equals((java.lang.Object) 10.0d);
        boolean boolean26 = variance4.isBiasCorrected();
        org.apache.commons.math.stat.descriptive.moment.Variance variance28 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        boolean boolean29 = variance4.equals((java.lang.Object) false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance31 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray38 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double39 = variance31.evaluate(doubleArray38);
        variance31.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance43 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray50 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double51 = variance43.evaluate(doubleArray50);
        variance31.incrementAll(doubleArray50);
        double double54 = variance4.evaluate(doubleArray50, (double) 100.0f);
        variance4.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance57 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray64 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double65 = variance57.evaluate(doubleArray64);
        variance57.setBiasCorrected(true);
        variance57.increment((double) (byte) 0);
        double[] doubleArray72 = new double[] { 'a', 100L };
        double double74 = variance57.evaluate(doubleArray72, 0.0d);
        variance4.incrementAll(doubleArray72);
        double double76 = variance0.evaluate(doubleArray72);
        variance0.increment(3267.0d);
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 2168.222222222222d + "'", double12 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[0.0, 1.0, 1.0, 0.0, -1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 16.566666666666663d + "'", double23 == 16.566666666666663d);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 2168.222222222222d + "'", double39 == 2168.222222222222d);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 2168.222222222222d + "'", double51 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 2601.8666666666663d + "'", double54 == 2601.8666666666663d);
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 2168.222222222222d + "'", double65 == 2168.222222222222d);
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray72), "[97.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double74 + "' != '" + 4.5d + "'", double74 == 4.5d);
        org.junit.Assert.assertTrue("'" + double76 + "' != '" + 4.5d + "'", double76 == 4.5d);
    }

    @Test
    public void test1425() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1425");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray8 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double9 = variance1.evaluate(doubleArray8);
        variance1.clear();
        variance1.setBiasCorrected(true);
        double double13 = variance1.getResult();
        variance1.clear();
        double double15 = variance1.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance17 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray24 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double25 = variance17.evaluate(doubleArray24);
        variance17.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance29 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance29.clear();
        double double31 = variance29.getResult();
        double[] doubleArray36 = new double[] { (-1), 2168.222222222222d, 16.566666666418314d, 10.0d };
        variance29.incrementAll(doubleArray36);
        variance17.incrementAll(doubleArray36);
        variance1.incrementAll(doubleArray36);
        variance1.setBiasCorrected(false);
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 2168.222222222222d + "'", double9 == 2168.222222222222d);
        org.junit.Assert.assertTrue(Double.isNaN(double13));
        org.junit.Assert.assertTrue(Double.isNaN(double15));
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 2168.222222222222d + "'", double25 == 2168.222222222222d);
        org.junit.Assert.assertTrue(Double.isNaN(double31));
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[-1.0, 2168.222222222222, 16.566666666418314, 10.0]");
    }

    @Test
    public void test1426() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1426");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance1.setBiasCorrected(false);
        variance1.clear();
        boolean boolean5 = variance1.isBiasCorrected();
        variance1.setBiasCorrected(false);
        variance1.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance11 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray18 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double19 = variance11.evaluate(doubleArray18);
        variance11.setBiasCorrected(true);
        boolean boolean22 = variance11.isBiasCorrected();
        double[] doubleArray29 = new double[] { (short) 0, 1.0d, 1L, 0.0d, (-1.0d), 10L };
        double double30 = variance11.evaluate(doubleArray29);
        boolean boolean32 = variance11.equals((java.lang.Object) 10.0d);
        boolean boolean33 = variance11.isBiasCorrected();
        org.apache.commons.math.stat.descriptive.moment.Variance variance35 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        boolean boolean36 = variance11.equals((java.lang.Object) false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance38 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray45 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double46 = variance38.evaluate(doubleArray45);
        variance38.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance50 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray57 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double58 = variance50.evaluate(doubleArray57);
        variance38.incrementAll(doubleArray57);
        double double61 = variance11.evaluate(doubleArray57, (double) 100.0f);
        long long62 = variance11.getN();
        long long63 = variance11.getN();
        variance11.setBiasCorrected(false);
        boolean boolean66 = variance11.isBiasCorrected();
        org.apache.commons.math.stat.descriptive.moment.Variance variance68 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray75 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double76 = variance68.evaluate(doubleArray75);
        variance68.setBiasCorrected(true);
        boolean boolean79 = variance68.isBiasCorrected();
        double[] doubleArray86 = new double[] { (short) 0, 1.0d, 1L, 0.0d, (-1.0d), 10L };
        double double87 = variance68.evaluate(doubleArray86);
        double double88 = variance11.evaluate(doubleArray86);
        double double90 = variance1.evaluate(doubleArray86, 6.25d);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 2168.222222222222d + "'", double19 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[0.0, 1.0, 1.0, 0.0, -1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 16.566666666666663d + "'", double30 == 16.566666666666663d);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 2168.222222222222d + "'", double46 == 2168.222222222222d);
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 2168.222222222222d + "'", double58 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 2601.8666666666663d + "'", double61 == 2601.8666666666663d);
        org.junit.Assert.assertTrue("'" + long62 + "' != '" + 0L + "'", long62 == 0L);
        org.junit.Assert.assertTrue("'" + long63 + "' != '" + 0L + "'", long63 == 0L);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray75), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double76 + "' != '" + 2168.222222222222d + "'", double76 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray86), "[0.0, 1.0, 1.0, 0.0, -1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double87 + "' != '" + 16.566666666666663d + "'", double87 == 16.566666666666663d);
        org.junit.Assert.assertTrue("'" + double88 + "' != '" + 13.805555555555552d + "'", double88 == 13.805555555555552d);
        org.junit.Assert.assertTrue("'" + double90 + "' != '" + 13.805555555555555d + "'", double90 == 13.805555555555555d);
    }

    @Test
    public void test1427() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1427");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray8 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double9 = variance1.evaluate(doubleArray8);
        variance1.setBiasCorrected(true);
        long long12 = variance1.getN();
        long long13 = variance1.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance15 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray22 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double23 = variance15.evaluate(doubleArray22);
        double[] doubleArray27 = new double[] { (byte) 1, (byte) 100, 1L };
        double double28 = variance15.evaluate(doubleArray27);
        double double30 = variance1.evaluate(doubleArray27, (double) 10.0f);
        long long31 = variance1.getN();
        double double32 = variance1.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance34 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray41 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double42 = variance34.evaluate(doubleArray41);
        variance34.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance46 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray53 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double54 = variance46.evaluate(doubleArray53);
        variance46.setBiasCorrected(true);
        boolean boolean57 = variance46.isBiasCorrected();
        double[] doubleArray64 = new double[] { (short) 0, 1.0d, 1L, 0.0d, (-1.0d), 10L };
        double double65 = variance46.evaluate(doubleArray64);
        double double68 = variance34.evaluate(doubleArray64, (int) (byte) 1, (int) (byte) 0);
        variance34.setBiasCorrected(true);
        variance34.setBiasCorrected(false);
        double double73 = variance34.getResult();
        boolean boolean74 = variance1.equals((java.lang.Object) variance34);
        boolean boolean75 = variance34.isBiasCorrected();
        long long76 = variance34.getN();
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 2168.222222222222d + "'", double9 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 0L + "'", long12 == 0L);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 0L + "'", long13 == 0L);
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 2168.222222222222d + "'", double23 == 2168.222222222222d);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[1.0, 100.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 2178.0d + "'", double28 == 2178.0d);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 3267.0d + "'", double30 == 3267.0d);
        org.junit.Assert.assertTrue("'" + long31 + "' != '" + 0L + "'", long31 == 0L);
        org.junit.Assert.assertTrue(Double.isNaN(double32));
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 2168.222222222222d + "'", double42 == 2168.222222222222d);
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray53), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 2168.222222222222d + "'", double54 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[0.0, 1.0, 1.0, 0.0, -1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 16.566666666666663d + "'", double65 == 16.566666666666663d);
        org.junit.Assert.assertTrue(Double.isNaN(double68));
        org.junit.Assert.assertTrue(Double.isNaN(double73));
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertTrue("'" + long76 + "' != '" + 0L + "'", long76 == 0L);
    }

    @Test
    public void test1428() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1428");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray8 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double9 = variance1.evaluate(doubleArray8);
        variance1.setBiasCorrected(true);
        boolean boolean12 = variance1.isBiasCorrected();
        double[] doubleArray19 = new double[] { (short) 0, 1.0d, 1L, 0.0d, (-1.0d), 10L };
        double double20 = variance1.evaluate(doubleArray19);
        boolean boolean22 = variance1.equals((java.lang.Object) 10.0d);
        boolean boolean23 = variance1.isBiasCorrected();
        double double24 = variance1.getResult();
        double double25 = variance1.getResult();
        long long26 = variance1.getN();
        long long27 = variance1.getN();
        variance1.clear();
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 2168.222222222222d + "'", double9 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[0.0, 1.0, 1.0, 0.0, -1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 16.566666666666663d + "'", double20 == 16.566666666666663d);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double24));
        org.junit.Assert.assertTrue(Double.isNaN(double25));
        org.junit.Assert.assertTrue("'" + long26 + "' != '" + 0L + "'", long26 == 0L);
        org.junit.Assert.assertTrue("'" + long27 + "' != '" + 0L + "'", long27 == 0L);
    }

    @Test
    public void test1429() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1429");
        org.apache.commons.math.stat.descriptive.moment.Variance variance0 = new org.apache.commons.math.stat.descriptive.moment.Variance();
        long long1 = variance0.getN();
        variance0.setBiasCorrected(true);
        variance0.increment(2178.0d);
        boolean boolean6 = variance0.isBiasCorrected();
        boolean boolean7 = variance0.isBiasCorrected();
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray16 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double17 = variance9.evaluate(doubleArray16);
        variance9.setBiasCorrected(true);
        boolean boolean20 = variance9.isBiasCorrected();
        double[] doubleArray27 = new double[] { (short) 0, 1.0d, 1L, 0.0d, (-1.0d), 10L };
        double double28 = variance9.evaluate(doubleArray27);
        boolean boolean30 = variance9.equals((java.lang.Object) 10.0d);
        boolean boolean31 = variance9.isBiasCorrected();
        org.apache.commons.math.stat.descriptive.moment.Variance variance33 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        boolean boolean34 = variance9.equals((java.lang.Object) false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance36 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray43 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double44 = variance36.evaluate(doubleArray43);
        variance36.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance48 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray55 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double56 = variance48.evaluate(doubleArray55);
        variance36.incrementAll(doubleArray55);
        double double59 = variance9.evaluate(doubleArray55, (double) 100.0f);
        variance9.clear();
        boolean boolean61 = variance9.isBiasCorrected();
        double double62 = variance9.getResult();
        java.lang.Class<?> wildcardClass63 = variance9.getClass();
        boolean boolean64 = variance0.equals((java.lang.Object) variance9);
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 2168.222222222222d + "'", double17 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[0.0, 1.0, 1.0, 0.0, -1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 16.566666666666663d + "'", double28 == 16.566666666666663d);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 2168.222222222222d + "'", double44 == 2168.222222222222d);
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 2168.222222222222d + "'", double56 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 2601.8666666666663d + "'", double59 == 2601.8666666666663d);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double62));
        org.junit.Assert.assertNotNull(wildcardClass63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
    }

    @Test
    public void test1430() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1430");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance1.setBiasCorrected(false);
        long long4 = variance1.getN();
        variance1.increment((double) 0.0f);
        org.apache.commons.math.stat.descriptive.moment.Variance variance8 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray15 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double16 = variance8.evaluate(doubleArray15);
        variance8.clear();
        variance8.setBiasCorrected(false);
        variance8.clear();
        boolean boolean22 = variance8.equals((java.lang.Object) 10.0d);
        org.apache.commons.math.stat.descriptive.moment.Variance variance24 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray31 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double32 = variance24.evaluate(doubleArray31);
        variance24.setBiasCorrected(true);
        long long35 = variance24.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance37 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray44 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double45 = variance37.evaluate(doubleArray44);
        variance37.clear();
        variance37.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance50 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance50.clear();
        double double52 = variance50.getResult();
        double[] doubleArray57 = new double[] { (-1), 2168.222222222222d, 16.566666666418314d, 10.0d };
        variance50.incrementAll(doubleArray57);
        boolean boolean59 = variance37.equals((java.lang.Object) doubleArray57);
        variance24.incrementAll(doubleArray57);
        variance8.incrementAll(doubleArray57);
        // The following exception was thrown during execution in test generation
        try {
            variance1.incrementAll(doubleArray57, (int) (short) 100, (int) ' ');
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: begin + length > values.length");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 0L + "'", long4 == 0L);
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 2168.222222222222d + "'", double16 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 2168.222222222222d + "'", double32 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + long35 + "' != '" + 0L + "'", long35 == 0L);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 2168.222222222222d + "'", double45 == 2168.222222222222d);
        org.junit.Assert.assertTrue(Double.isNaN(double52));
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[-1.0, 2168.222222222222, 16.566666666418314, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
    }

    @Test
    public void test1431() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1431");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray8 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double9 = variance1.evaluate(doubleArray8);
        variance1.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance13 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray20 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double21 = variance13.evaluate(doubleArray20);
        variance13.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance25 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray32 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double33 = variance25.evaluate(doubleArray32);
        variance25.setBiasCorrected(true);
        boolean boolean36 = variance25.isBiasCorrected();
        double[] doubleArray43 = new double[] { (short) 0, 1.0d, 1L, 0.0d, (-1.0d), 10L };
        double double44 = variance25.evaluate(doubleArray43);
        double double47 = variance13.evaluate(doubleArray43, (int) (byte) 1, (int) (byte) 0);
        variance1.incrementAll(doubleArray43, (int) (byte) 1, 1);
        long long51 = variance1.getN();
        double double52 = variance1.getResult();
        double double53 = variance1.getResult();
        variance1.increment(0.0d);
        variance1.setBiasCorrected(false);
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 2168.222222222222d + "'", double9 == 2168.222222222222d);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 2168.222222222222d + "'", double21 == 2168.222222222222d);
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 2168.222222222222d + "'", double33 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[0.0, 1.0, 1.0, 0.0, -1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 16.566666666666663d + "'", double44 == 16.566666666666663d);
        org.junit.Assert.assertTrue(Double.isNaN(double47));
        org.junit.Assert.assertTrue("'" + long51 + "' != '" + 1L + "'", long51 == 1L);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 0.0d + "'", double52 == 0.0d);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 0.0d + "'", double53 == 0.0d);
    }

    @Test
    public void test1432() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1432");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray8 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double9 = variance1.evaluate(doubleArray8);
        variance1.setBiasCorrected(true);
        long long12 = variance1.getN();
        long long13 = variance1.getN();
        boolean boolean14 = variance1.isBiasCorrected();
        org.apache.commons.math.stat.descriptive.moment.Variance variance16 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray23 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double24 = variance16.evaluate(doubleArray23);
        variance16.setBiasCorrected(true);
        boolean boolean27 = variance16.isBiasCorrected();
        double[] doubleArray34 = new double[] { (short) 0, 1.0d, 1L, 0.0d, (-1.0d), 10L };
        double double35 = variance16.evaluate(doubleArray34);
        boolean boolean37 = variance16.equals((java.lang.Object) 10.0d);
        org.apache.commons.math.stat.descriptive.moment.Variance variance39 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray46 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double47 = variance39.evaluate(doubleArray46);
        variance39.setBiasCorrected(true);
        boolean boolean50 = variance39.isBiasCorrected();
        double[] doubleArray57 = new double[] { (short) 0, 1.0d, 1L, 0.0d, (-1.0d), 10L };
        double double58 = variance39.evaluate(doubleArray57);
        double double60 = variance16.evaluate(doubleArray57, (double) 0.0f);
        variance1.incrementAll(doubleArray57);
        variance1.increment((double) 0.0f);
        variance1.increment(1166128.5457099646d);
        boolean boolean66 = variance1.isBiasCorrected();
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 2168.222222222222d + "'", double9 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 0L + "'", long12 == 0L);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 0L + "'", long13 == 0L);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 2168.222222222222d + "'", double24 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[0.0, 1.0, 1.0, 0.0, -1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 16.566666666666663d + "'", double35 == 16.566666666666663d);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 2168.222222222222d + "'", double47 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[0.0, 1.0, 1.0, 0.0, -1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 16.566666666666663d + "'", double58 == 16.566666666666663d);
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 16.566666666666666d + "'", double60 == 16.566666666666666d);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
    }

    @Test
    public void test1433() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1433");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray8 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double9 = variance1.evaluate(doubleArray8);
        variance1.setBiasCorrected(true);
        boolean boolean12 = variance1.isBiasCorrected();
        double[] doubleArray19 = new double[] { (short) 0, 1.0d, 1L, 0.0d, (-1.0d), 10L };
        double double20 = variance1.evaluate(doubleArray19);
        double double21 = variance1.getResult();
        long long22 = variance1.getN();
        variance1.increment((double) '#');
        variance1.increment(100.0d);
        org.apache.commons.math.stat.descriptive.moment.Variance variance28 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray35 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double36 = variance28.evaluate(doubleArray35);
        variance28.setBiasCorrected(true);
        boolean boolean39 = variance28.isBiasCorrected();
        double[] doubleArray46 = new double[] { (short) 0, 1.0d, 1L, 0.0d, (-1.0d), 10L };
        double double47 = variance28.evaluate(doubleArray46);
        double double49 = variance1.evaluate(doubleArray46, (double) (byte) 100);
        boolean boolean50 = variance1.isBiasCorrected();
        long long51 = variance1.getN();
        double double52 = variance1.getResult();
        variance1.clear();
        variance1.increment((double) 4L);
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 2168.222222222222d + "'", double9 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[0.0, 1.0, 1.0, 0.0, -1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 16.566666666666663d + "'", double20 == 16.566666666666663d);
        org.junit.Assert.assertTrue(Double.isNaN(double21));
        org.junit.Assert.assertTrue("'" + long22 + "' != '" + 0L + "'", long22 == 0L);
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 2168.222222222222d + "'", double36 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[0.0, 1.0, 1.0, 0.0, -1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 16.566666666666663d + "'", double47 == 16.566666666666663d);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 16.566666666667153d + "'", double49 == 16.566666666667153d);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertTrue("'" + long51 + "' != '" + 2L + "'", long51 == 2L);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 2112.5d + "'", double52 == 2112.5d);
    }

    @Test
    public void test1434() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1434");
        org.apache.commons.math.stat.descriptive.moment.Variance variance0 = new org.apache.commons.math.stat.descriptive.moment.Variance();
        double double1 = variance0.getResult();
        boolean boolean2 = variance0.isBiasCorrected();
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true);
        double double5 = variance4.getResult();
        double double6 = variance4.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance8 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray15 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double16 = variance8.evaluate(doubleArray15);
        variance8.clear();
        variance8.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance21 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance21.clear();
        double double23 = variance21.getResult();
        double[] doubleArray28 = new double[] { (-1), 2168.222222222222d, 16.566666666418314d, 10.0d };
        variance21.incrementAll(doubleArray28);
        boolean boolean30 = variance8.equals((java.lang.Object) doubleArray28);
        double double32 = variance4.evaluate(doubleArray28, (double) (-1.0f));
        double double34 = variance0.evaluate(doubleArray28, (double) (-1L));
        variance0.increment(2.25d);
        long long37 = variance0.getN();
        boolean boolean38 = variance0.isBiasCorrected();
        long long39 = variance0.getN();
        variance0.increment(23.333333333333332d);
        org.junit.Assert.assertTrue(Double.isNaN(double1));
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 2168.222222222222d + "'", double16 == 2168.222222222222d);
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[-1.0, 2168.222222222222, 16.566666666418314, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 1166128.5457099646d + "'", double32 == 1166128.5457099646d);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 1166128.5457099646d + "'", double34 == 1166128.5457099646d);
        org.junit.Assert.assertTrue("'" + long37 + "' != '" + 1L + "'", long37 == 1L);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + long39 + "' != '" + 1L + "'", long39 == 1L);
    }

    @Test
    public void test1435() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1435");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray8 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double9 = variance1.evaluate(doubleArray8);
        variance1.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance13 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance13.clear();
        double double15 = variance13.getResult();
        double[] doubleArray20 = new double[] { (-1), 2168.222222222222d, 16.566666666418314d, 10.0d };
        variance13.incrementAll(doubleArray20);
        variance1.incrementAll(doubleArray20);
        boolean boolean23 = variance1.isBiasCorrected();
        variance1.clear();
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 2168.222222222222d + "'", double9 == 2168.222222222222d);
        org.junit.Assert.assertTrue(Double.isNaN(double15));
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[-1.0, 2168.222222222222, 16.566666666418314, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
    }

    @Test
    public void test1436() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1436");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance1.clear();
        double double3 = variance1.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance5 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray12 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double13 = variance5.evaluate(doubleArray12);
        variance5.setBiasCorrected(true);
        boolean boolean16 = variance5.isBiasCorrected();
        double[] doubleArray23 = new double[] { (short) 0, 1.0d, 1L, 0.0d, (-1.0d), 10L };
        double double24 = variance5.evaluate(doubleArray23);
        double double25 = variance5.getResult();
        variance5.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance29 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray36 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double37 = variance29.evaluate(doubleArray36);
        variance29.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance41 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray48 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double49 = variance41.evaluate(doubleArray48);
        variance41.setBiasCorrected(true);
        boolean boolean52 = variance41.isBiasCorrected();
        double[] doubleArray59 = new double[] { (short) 0, 1.0d, 1L, 0.0d, (-1.0d), 10L };
        double double60 = variance41.evaluate(doubleArray59);
        org.apache.commons.math.stat.descriptive.moment.Variance variance62 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray69 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double70 = variance62.evaluate(doubleArray69);
        variance62.setBiasCorrected(true);
        boolean boolean73 = variance62.isBiasCorrected();
        double[] doubleArray80 = new double[] { (short) 0, 1.0d, 1L, 0.0d, (-1.0d), 10L };
        double double81 = variance62.evaluate(doubleArray80);
        double double84 = variance41.evaluate(doubleArray80, (int) (byte) 1, 0);
        double double86 = variance29.evaluate(doubleArray80, 2178.0d);
        boolean boolean87 = variance5.equals((java.lang.Object) doubleArray80);
        double double89 = variance1.evaluate(doubleArray80, (double) '#');
        long long90 = variance1.getN();
        boolean boolean91 = variance1.isBiasCorrected();
        variance1.increment(13.805555555555552d);
        variance1.clear();
        java.lang.Class<?> wildcardClass95 = variance1.getClass();
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 2168.222222222222d + "'", double13 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[0.0, 1.0, 1.0, 0.0, -1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 16.566666666666663d + "'", double24 == 16.566666666666663d);
        org.junit.Assert.assertTrue(Double.isNaN(double25));
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 2168.222222222222d + "'", double37 == 2168.222222222222d);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 2168.222222222222d + "'", double49 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[0.0, 1.0, 1.0, 0.0, -1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 16.566666666666663d + "'", double60 == 16.566666666666663d);
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + 2168.222222222222d + "'", double70 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray80), "[0.0, 1.0, 1.0, 0.0, -1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double81 + "' != '" + 16.566666666666663d + "'", double81 == 16.566666666666663d);
        org.junit.Assert.assertTrue(Double.isNaN(double84));
        org.junit.Assert.assertTrue("'" + double86 + "' != '" + 16.566666666418314d + "'", double86 == 16.566666666418314d);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertTrue("'" + double89 + "' != '" + 13.805555555555506d + "'", double89 == 13.805555555555506d);
        org.junit.Assert.assertTrue("'" + long90 + "' != '" + 0L + "'", long90 == 0L);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
        org.junit.Assert.assertNotNull(wildcardClass95);
    }

    @Test
    public void test1437() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1437");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray8 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double9 = variance1.evaluate(doubleArray8);
        variance1.setBiasCorrected(true);
        boolean boolean12 = variance1.isBiasCorrected();
        org.apache.commons.math.stat.descriptive.moment.Variance variance14 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray21 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double22 = variance14.evaluate(doubleArray21);
        variance14.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance26 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray33 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double34 = variance26.evaluate(doubleArray33);
        variance26.setBiasCorrected(true);
        boolean boolean37 = variance26.isBiasCorrected();
        double[] doubleArray44 = new double[] { (short) 0, 1.0d, 1L, 0.0d, (-1.0d), 10L };
        double double45 = variance26.evaluate(doubleArray44);
        double double48 = variance14.evaluate(doubleArray44, (int) (byte) 1, (int) (byte) 0);
        double double51 = variance1.evaluate(doubleArray44, (int) (byte) 1, 0);
        org.apache.commons.math.stat.descriptive.moment.Variance variance53 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray60 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double61 = variance53.evaluate(doubleArray60);
        variance53.clear();
        variance53.setBiasCorrected(true);
        boolean boolean65 = variance1.equals((java.lang.Object) variance53);
        variance53.setBiasCorrected(true);
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 2168.222222222222d + "'", double9 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 2168.222222222222d + "'", double22 == 2168.222222222222d);
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 2168.222222222222d + "'", double34 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[0.0, 1.0, 1.0, 0.0, -1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 16.566666666666663d + "'", double45 == 16.566666666666663d);
        org.junit.Assert.assertTrue(Double.isNaN(double48));
        org.junit.Assert.assertTrue(Double.isNaN(double51));
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 2168.222222222222d + "'", double61 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
    }

    @Test
    public void test1438() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1438");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray8 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double9 = variance1.evaluate(doubleArray8);
        variance1.setBiasCorrected(true);
        variance1.increment((double) (byte) 0);
        double[] doubleArray16 = new double[] { 'a', 100L };
        double double18 = variance1.evaluate(doubleArray16, 0.0d);
        double double19 = variance1.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance21 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance21.clear();
        double double23 = variance21.getResult();
        double[] doubleArray28 = new double[] { (-1), 2168.222222222222d, 16.566666666418314d, 10.0d };
        variance21.incrementAll(doubleArray28);
        variance1.incrementAll(doubleArray28, (int) (short) 1, 1);
        boolean boolean33 = variance1.isBiasCorrected();
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 2168.222222222222d + "'", double9 == 2168.222222222222d);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[97.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 4.5d + "'", double18 == 4.5d);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.0d + "'", double19 == 0.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[-1.0, 2168.222222222222, 16.566666666418314, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
    }

    @Test
    public void test1439() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1439");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray8 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double9 = variance1.evaluate(doubleArray8);
        variance1.setBiasCorrected(true);
        boolean boolean12 = variance1.isBiasCorrected();
        double[] doubleArray19 = new double[] { (short) 0, 1.0d, 1L, 0.0d, (-1.0d), 10L };
        double double20 = variance1.evaluate(doubleArray19);
        double double21 = variance1.getResult();
        long long22 = variance1.getN();
        variance1.increment((double) '#');
        variance1.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance28 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray35 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double36 = variance28.evaluate(doubleArray35);
        variance28.setBiasCorrected(true);
        variance28.increment((double) (byte) 0);
        double[] doubleArray43 = new double[] { 'a', 100L };
        double double45 = variance28.evaluate(doubleArray43, 0.0d);
        variance1.incrementAll(doubleArray43);
        org.apache.commons.math.stat.descriptive.moment.Variance variance48 = new org.apache.commons.math.stat.descriptive.moment.Variance(true);
        double double49 = variance48.getResult();
        double double50 = variance48.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance52 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray59 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double60 = variance52.evaluate(doubleArray59);
        variance52.setBiasCorrected(true);
        long long63 = variance52.getN();
        variance52.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance66 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray73 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double74 = variance66.evaluate(doubleArray73);
        double double75 = variance52.evaluate(doubleArray73);
        variance48.incrementAll(doubleArray73);
        double double77 = variance1.evaluate(doubleArray73);
        long long78 = variance1.getN();
        variance1.increment(16.56666666666667d);
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 2168.222222222222d + "'", double9 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[0.0, 1.0, 1.0, 0.0, -1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 16.566666666666663d + "'", double20 == 16.566666666666663d);
        org.junit.Assert.assertTrue(Double.isNaN(double21));
        org.junit.Assert.assertTrue("'" + long22 + "' != '" + 0L + "'", long22 == 0L);
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 2168.222222222222d + "'", double36 == 2168.222222222222d);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[97.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 4.5d + "'", double45 == 4.5d);
        org.junit.Assert.assertTrue(Double.isNaN(double49));
        org.junit.Assert.assertTrue(Double.isNaN(double50));
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 2168.222222222222d + "'", double60 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + long63 + "' != '" + 0L + "'", long63 == 0L);
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double74 + "' != '" + 2168.222222222222d + "'", double74 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + double75 + "' != '" + 2601.866666666667d + "'", double75 == 2601.866666666667d);
        org.junit.Assert.assertTrue("'" + double77 + "' != '" + 2168.222222222222d + "'", double77 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + long78 + "' != '" + 0L + "'", long78 == 0L);
    }

    @Test
    public void test1440() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1440");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment1 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance2 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment1);
        variance2.clear();
        double[] doubleArray4 = new double[] {};
        variance2.incrementAll(doubleArray4);
        variance2.increment(2178.0d);
        variance2.clear();
        variance2.clear();
        boolean boolean10 = variance2.isBiasCorrected();
        boolean boolean11 = variance2.isBiasCorrected();
        org.apache.commons.math.stat.descriptive.moment.Variance variance13 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray20 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double21 = variance13.evaluate(doubleArray20);
        variance13.setBiasCorrected(true);
        boolean boolean24 = variance13.isBiasCorrected();
        double[] doubleArray31 = new double[] { (short) 0, 1.0d, 1L, 0.0d, (-1.0d), 10L };
        double double32 = variance13.evaluate(doubleArray31);
        double double33 = variance13.getResult();
        long long34 = variance13.getN();
        variance13.increment((double) '#');
        variance13.increment(100.0d);
        org.apache.commons.math.stat.descriptive.moment.Variance variance40 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray47 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double48 = variance40.evaluate(doubleArray47);
        variance40.setBiasCorrected(true);
        boolean boolean51 = variance40.isBiasCorrected();
        double[] doubleArray58 = new double[] { (short) 0, 1.0d, 1L, 0.0d, (-1.0d), 10L };
        double double59 = variance40.evaluate(doubleArray58);
        double double61 = variance13.evaluate(doubleArray58, (double) (byte) 100);
        boolean boolean62 = variance13.isBiasCorrected();
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean63 = variance2.equals((java.lang.Object) variance13);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[]");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 2168.222222222222d + "'", double21 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[0.0, 1.0, 1.0, 0.0, -1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 16.566666666666663d + "'", double32 == 16.566666666666663d);
        org.junit.Assert.assertTrue(Double.isNaN(double33));
        org.junit.Assert.assertTrue("'" + long34 + "' != '" + 0L + "'", long34 == 0L);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 2168.222222222222d + "'", double48 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[0.0, 1.0, 1.0, 0.0, -1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 16.566666666666663d + "'", double59 == 16.566666666666663d);
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 16.566666666667153d + "'", double61 == 16.566666666667153d);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
    }

    @Test
    public void test1441() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1441");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray8 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double9 = variance1.evaluate(doubleArray8);
        variance1.setBiasCorrected(true);
        variance1.increment((double) (byte) 0);
        variance1.setBiasCorrected(true);
        variance1.increment(2094.2678571428573d);
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 2168.222222222222d + "'", double9 == 2168.222222222222d);
    }

    @Test
    public void test1442() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1442");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance3 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray10 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double11 = variance3.evaluate(doubleArray10);
        variance3.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance15 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray22 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double23 = variance15.evaluate(doubleArray22);
        variance15.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance27 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray34 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double35 = variance27.evaluate(doubleArray34);
        variance27.setBiasCorrected(true);
        boolean boolean38 = variance27.isBiasCorrected();
        double[] doubleArray45 = new double[] { (short) 0, 1.0d, 1L, 0.0d, (-1.0d), 10L };
        double double46 = variance27.evaluate(doubleArray45);
        double double49 = variance15.evaluate(doubleArray45, (int) (byte) 1, (int) (byte) 0);
        variance3.incrementAll(doubleArray45, (int) (byte) 1, 1);
        double double53 = variance1.evaluate(doubleArray45);
        double double54 = variance1.getResult();
        variance1.increment(2601.866666666667d);
        variance1.increment((double) (byte) -1);
        variance1.increment(0.0d);
        org.apache.commons.math.stat.descriptive.moment.Variance variance62 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray69 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double70 = variance62.evaluate(doubleArray69);
        long long71 = variance62.getN();
        variance62.increment(874596.4092824734d);
        org.apache.commons.math.stat.descriptive.moment.Variance variance75 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance75.clear();
        double double77 = variance75.getResult();
        double[] doubleArray82 = new double[] { (-1), 2168.222222222222d, 16.566666666418314d, 10.0d };
        variance75.incrementAll(doubleArray82);
        variance62.incrementAll(doubleArray82, 0, (int) (byte) 1);
        // The following exception was thrown during execution in test generation
        try {
            variance1.incrementAll(doubleArray82, (int) '#', (int) (short) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: begin + length > values.length");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 2168.222222222222d + "'", double11 == 2168.222222222222d);
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 2168.222222222222d + "'", double23 == 2168.222222222222d);
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 2168.222222222222d + "'", double35 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[0.0, 1.0, 1.0, 0.0, -1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 16.566666666666663d + "'", double46 == 16.566666666666663d);
        org.junit.Assert.assertTrue(Double.isNaN(double49));
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 13.805555555555552d + "'", double53 == 13.805555555555552d);
        org.junit.Assert.assertTrue(Double.isNaN(double54));
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + 2168.222222222222d + "'", double70 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + long71 + "' != '" + 0L + "'", long71 == 0L);
        org.junit.Assert.assertTrue(Double.isNaN(double77));
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray82), "[-1.0, 2168.222222222222, 16.566666666418314, 10.0]");
    }

    @Test
    public void test1443() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1443");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray8 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double9 = variance1.evaluate(doubleArray8);
        variance1.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance13 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance13.clear();
        double double15 = variance13.getResult();
        double[] doubleArray20 = new double[] { (-1), 2168.222222222222d, 16.566666666418314d, 10.0d };
        variance13.incrementAll(doubleArray20);
        variance1.incrementAll(doubleArray20);
        variance1.clear();
        long long24 = variance1.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance26 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray33 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double34 = variance26.evaluate(doubleArray33);
        variance26.setBiasCorrected(true);
        variance26.increment((double) (byte) 0);
        double[] doubleArray41 = new double[] { 'a', 100L };
        double double43 = variance26.evaluate(doubleArray41, 0.0d);
        double double44 = variance26.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance46 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance46.clear();
        double double48 = variance46.getResult();
        double[] doubleArray53 = new double[] { (-1), 2168.222222222222d, 16.566666666418314d, 10.0d };
        variance46.incrementAll(doubleArray53);
        variance26.incrementAll(doubleArray53, (int) (short) 1, 1);
        variance1.incrementAll(doubleArray53);
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 2168.222222222222d + "'", double9 == 2168.222222222222d);
        org.junit.Assert.assertTrue(Double.isNaN(double15));
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[-1.0, 2168.222222222222, 16.566666666418314, 10.0]");
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + 0L + "'", long24 == 0L);
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 2168.222222222222d + "'", double34 == 2168.222222222222d);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[97.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 4.5d + "'", double43 == 4.5d);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 0.0d + "'", double44 == 0.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double48));
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray53), "[-1.0, 2168.222222222222, 16.566666666418314, 10.0]");
    }

    @Test
    public void test1444() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1444");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray8 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double9 = variance1.evaluate(doubleArray8);
        variance1.setBiasCorrected(true);
        boolean boolean12 = variance1.isBiasCorrected();
        org.apache.commons.math.stat.descriptive.moment.Variance variance14 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray21 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double22 = variance14.evaluate(doubleArray21);
        variance14.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance26 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray33 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double34 = variance26.evaluate(doubleArray33);
        variance26.setBiasCorrected(true);
        boolean boolean37 = variance26.isBiasCorrected();
        double[] doubleArray44 = new double[] { (short) 0, 1.0d, 1L, 0.0d, (-1.0d), 10L };
        double double45 = variance26.evaluate(doubleArray44);
        double double48 = variance14.evaluate(doubleArray44, (int) (byte) 1, (int) (byte) 0);
        double double51 = variance1.evaluate(doubleArray44, (int) (byte) 1, 0);
        org.apache.commons.math.stat.descriptive.moment.Variance variance53 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray60 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double61 = variance53.evaluate(doubleArray60);
        variance53.clear();
        variance53.setBiasCorrected(true);
        boolean boolean65 = variance1.equals((java.lang.Object) variance53);
        boolean boolean66 = variance53.isBiasCorrected();
        variance53.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance69 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray76 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double77 = variance69.evaluate(doubleArray76);
        // The following exception was thrown during execution in test generation
        try {
            double double80 = variance53.evaluate(doubleArray76, (int) '4', (int) ' ');
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: begin + length > values.length");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 2168.222222222222d + "'", double9 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 2168.222222222222d + "'", double22 == 2168.222222222222d);
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 2168.222222222222d + "'", double34 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[0.0, 1.0, 1.0, 0.0, -1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 16.566666666666663d + "'", double45 == 16.566666666666663d);
        org.junit.Assert.assertTrue(Double.isNaN(double48));
        org.junit.Assert.assertTrue(Double.isNaN(double51));
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 2168.222222222222d + "'", double61 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double77 + "' != '" + 2168.222222222222d + "'", double77 == 2168.222222222222d);
    }

    @Test
    public void test1445() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1445");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance1.clear();
        long long3 = variance1.getN();
        double double4 = variance1.getResult();
        double double5 = variance1.getResult();
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 0L + "'", long3 == 0L);
        org.junit.Assert.assertTrue(Double.isNaN(double4));
        org.junit.Assert.assertTrue(Double.isNaN(double5));
    }

    @Test
    public void test1446() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1446");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment1 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance2 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment1);
        variance2.setBiasCorrected(true);
        variance2.clear();
        // The following exception was thrown during execution in test generation
        try {
            long long6 = variance2.getN();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test1447() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1447");
        org.apache.commons.math.stat.descriptive.moment.Variance variance0 = new org.apache.commons.math.stat.descriptive.moment.Variance();
        long long1 = variance0.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance3 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray10 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double11 = variance3.evaluate(doubleArray10);
        variance3.setBiasCorrected(true);
        boolean boolean14 = variance3.isBiasCorrected();
        double[] doubleArray21 = new double[] { (short) 0, 1.0d, 1L, 0.0d, (-1.0d), 10L };
        double double22 = variance3.evaluate(doubleArray21);
        boolean boolean24 = variance3.equals((java.lang.Object) 10.0d);
        boolean boolean25 = variance3.isBiasCorrected();
        org.apache.commons.math.stat.descriptive.moment.Variance variance27 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        boolean boolean28 = variance3.equals((java.lang.Object) false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance30 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray37 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double38 = variance30.evaluate(doubleArray37);
        variance30.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance42 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray49 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double50 = variance42.evaluate(doubleArray49);
        variance30.incrementAll(doubleArray49);
        double double53 = variance3.evaluate(doubleArray49, (double) 100.0f);
        variance0.incrementAll(doubleArray49, (int) (short) 1, (int) (byte) 0);
        variance0.clear();
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 2168.222222222222d + "'", double11 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[0.0, 1.0, 1.0, 0.0, -1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 16.566666666666663d + "'", double22 == 16.566666666666663d);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 2168.222222222222d + "'", double38 == 2168.222222222222d);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 2168.222222222222d + "'", double50 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 2601.8666666666663d + "'", double53 == 2601.8666666666663d);
    }

    @Test
    public void test1448() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1448");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray8 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double9 = variance1.evaluate(doubleArray8);
        variance1.setBiasCorrected(true);
        boolean boolean12 = variance1.isBiasCorrected();
        double[] doubleArray19 = new double[] { (short) 0, 1.0d, 1L, 0.0d, (-1.0d), 10L };
        double double20 = variance1.evaluate(doubleArray19);
        double double21 = variance1.getResult();
        long long22 = variance1.getN();
        java.lang.Object obj23 = null;
        boolean boolean24 = variance1.equals(obj23);
        long long25 = variance1.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance27 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray34 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double35 = variance27.evaluate(doubleArray34);
        variance27.setBiasCorrected(true);
        boolean boolean38 = variance27.isBiasCorrected();
        double[] doubleArray45 = new double[] { (short) 0, 1.0d, 1L, 0.0d, (-1.0d), 10L };
        double double46 = variance27.evaluate(doubleArray45);
        double double47 = variance27.getResult();
        variance27.setBiasCorrected(true);
        long long50 = variance27.getN();
        variance27.setBiasCorrected(true);
        boolean boolean53 = variance1.equals((java.lang.Object) variance27);
        boolean boolean54 = variance1.isBiasCorrected();
        double double55 = variance1.getResult();
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 2168.222222222222d + "'", double9 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[0.0, 1.0, 1.0, 0.0, -1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 16.566666666666663d + "'", double20 == 16.566666666666663d);
        org.junit.Assert.assertTrue(Double.isNaN(double21));
        org.junit.Assert.assertTrue("'" + long22 + "' != '" + 0L + "'", long22 == 0L);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + long25 + "' != '" + 0L + "'", long25 == 0L);
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 2168.222222222222d + "'", double35 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[0.0, 1.0, 1.0, 0.0, -1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 16.566666666666663d + "'", double46 == 16.566666666666663d);
        org.junit.Assert.assertTrue(Double.isNaN(double47));
        org.junit.Assert.assertTrue("'" + long50 + "' != '" + 0L + "'", long50 == 0L);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double55));
    }

    @Test
    public void test1449() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1449");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment1 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance2 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment1);
        double[] doubleArray3 = new double[] {};
        double double6 = variance2.evaluate(doubleArray3, 0, 0);
        variance2.setBiasCorrected(true);
        variance2.clear();
        variance2.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance13 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance13.clear();
        boolean boolean15 = variance13.isBiasCorrected();
        boolean boolean17 = variance13.equals((java.lang.Object) 1166128.5457099646d);
        org.apache.commons.math.stat.descriptive.moment.Variance variance19 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray26 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double27 = variance19.evaluate(doubleArray26);
        org.apache.commons.math.stat.descriptive.moment.Variance variance29 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray36 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double37 = variance29.evaluate(doubleArray36);
        variance29.setBiasCorrected(true);
        boolean boolean40 = variance29.isBiasCorrected();
        double[] doubleArray47 = new double[] { (short) 0, 1.0d, 1L, 0.0d, (-1.0d), 10L };
        double double48 = variance29.evaluate(doubleArray47);
        org.apache.commons.math.stat.descriptive.moment.Variance variance50 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray57 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double58 = variance50.evaluate(doubleArray57);
        variance50.setBiasCorrected(true);
        boolean boolean61 = variance50.isBiasCorrected();
        double[] doubleArray68 = new double[] { (short) 0, 1.0d, 1L, 0.0d, (-1.0d), 10L };
        double double69 = variance50.evaluate(doubleArray68);
        double double72 = variance29.evaluate(doubleArray68, (int) (byte) 1, 0);
        variance29.setBiasCorrected(true);
        boolean boolean75 = variance19.equals((java.lang.Object) true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance77 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray84 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double85 = variance77.evaluate(doubleArray84);
        double double87 = variance19.evaluate(doubleArray84, 874596.4092824734d);
        double double89 = variance13.evaluate(doubleArray84, (double) 100L);
        // The following exception was thrown during execution in test generation
        try {
            double double92 = variance2.evaluate(doubleArray84, (int) (short) -1, 0);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: start position cannot be negative");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 2168.222222222222d + "'", double27 == 2168.222222222222d);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 2168.222222222222d + "'", double37 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[0.0, 1.0, 1.0, 0.0, -1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 16.566666666666663d + "'", double48 == 16.566666666666663d);
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 2168.222222222222d + "'", double58 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[0.0, 1.0, 1.0, 0.0, -1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 16.566666666666663d + "'", double69 == 16.566666666666663d);
        org.junit.Assert.assertTrue(Double.isNaN(double72));
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray84), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double85 + "' != '" + 2168.222222222222d + "'", double85 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + double87 + "' != '" + 2168.2220052083335d + "'", double87 == 2168.2220052083335d);
        org.junit.Assert.assertTrue("'" + double89 + "' != '" + 2168.222222222222d + "'", double89 == 2168.222222222222d);
    }

    @Test
    public void test1450() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1450");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray8 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double9 = variance1.evaluate(doubleArray8);
        long long10 = variance1.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance12 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray19 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double20 = variance12.evaluate(doubleArray19);
        variance12.setBiasCorrected(true);
        boolean boolean23 = variance12.isBiasCorrected();
        double[] doubleArray30 = new double[] { (short) 0, 1.0d, 1L, 0.0d, (-1.0d), 10L };
        double double31 = variance12.evaluate(doubleArray30);
        org.apache.commons.math.stat.descriptive.moment.Variance variance33 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray40 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double41 = variance33.evaluate(doubleArray40);
        variance33.setBiasCorrected(true);
        boolean boolean44 = variance33.isBiasCorrected();
        double[] doubleArray51 = new double[] { (short) 0, 1.0d, 1L, 0.0d, (-1.0d), 10L };
        double double52 = variance33.evaluate(doubleArray51);
        double double55 = variance12.evaluate(doubleArray51, (int) (byte) 1, 0);
        variance12.setBiasCorrected(true);
        variance12.setBiasCorrected(true);
        double double60 = variance12.getResult();
        boolean boolean61 = variance12.isBiasCorrected();
        boolean boolean62 = variance12.isBiasCorrected();
        org.apache.commons.math.stat.descriptive.moment.Variance variance64 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray71 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double72 = variance64.evaluate(doubleArray71);
        variance64.setBiasCorrected(true);
        boolean boolean75 = variance64.isBiasCorrected();
        double[] doubleArray82 = new double[] { (short) 0, 1.0d, 1L, 0.0d, (-1.0d), 10L };
        double double83 = variance64.evaluate(doubleArray82);
        double double84 = variance12.evaluate(doubleArray82);
        double double86 = variance1.evaluate(doubleArray82, 16.56666666666667d);
        long long87 = variance1.getN();
        boolean boolean89 = variance1.equals((java.lang.Object) 1175056.0d);
        double double90 = variance1.getResult();
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 2168.222222222222d + "'", double9 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 0L + "'", long10 == 0L);
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 2168.222222222222d + "'", double20 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[0.0, 1.0, 1.0, 0.0, -1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 16.566666666666663d + "'", double31 == 16.566666666666663d);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 2168.222222222222d + "'", double41 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[0.0, 1.0, 1.0, 0.0, -1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 16.566666666666663d + "'", double52 == 16.566666666666663d);
        org.junit.Assert.assertTrue(Double.isNaN(double55));
        org.junit.Assert.assertTrue(Double.isNaN(double60));
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 2168.222222222222d + "'", double72 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray82), "[0.0, 1.0, 1.0, 0.0, -1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + 16.566666666666663d + "'", double83 == 16.566666666666663d);
        org.junit.Assert.assertTrue("'" + double84 + "' != '" + 16.566666666666663d + "'", double84 == 16.566666666666663d);
        org.junit.Assert.assertTrue("'" + double86 + "' != '" + 13.80555555555562d + "'", double86 == 13.80555555555562d);
        org.junit.Assert.assertTrue("'" + long87 + "' != '" + 0L + "'", long87 == 0L);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double90));
    }

    @Test
    public void test1451() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1451");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray8 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double9 = variance1.evaluate(doubleArray8);
        variance1.setBiasCorrected(true);
        boolean boolean12 = variance1.isBiasCorrected();
        double[] doubleArray19 = new double[] { (short) 0, 1.0d, 1L, 0.0d, (-1.0d), 10L };
        double double20 = variance1.evaluate(doubleArray19);
        boolean boolean22 = variance1.equals((java.lang.Object) 10.0d);
        boolean boolean23 = variance1.isBiasCorrected();
        org.apache.commons.math.stat.descriptive.moment.Variance variance25 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        boolean boolean26 = variance1.equals((java.lang.Object) false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance28 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray35 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double36 = variance28.evaluate(doubleArray35);
        variance28.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance40 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray47 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double48 = variance40.evaluate(doubleArray47);
        variance28.incrementAll(doubleArray47);
        double double51 = variance1.evaluate(doubleArray47, (double) 100.0f);
        variance1.clear();
        variance1.setBiasCorrected(false);
        variance1.clear();
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 2168.222222222222d + "'", double9 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[0.0, 1.0, 1.0, 0.0, -1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 16.566666666666663d + "'", double20 == 16.566666666666663d);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 2168.222222222222d + "'", double36 == 2168.222222222222d);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 2168.222222222222d + "'", double48 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 2601.8666666666663d + "'", double51 == 2601.8666666666663d);
    }

    @Test
    public void test1452() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1452");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray8 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double9 = variance1.evaluate(doubleArray8);
        variance1.setBiasCorrected(true);
        long long12 = variance1.getN();
        long long13 = variance1.getN();
        boolean boolean15 = variance1.equals((java.lang.Object) 16.566666666666663d);
        boolean boolean17 = variance1.equals((java.lang.Object) (short) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance19 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray26 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double27 = variance19.evaluate(doubleArray26);
        variance19.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance31 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray38 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double39 = variance31.evaluate(doubleArray38);
        variance31.setBiasCorrected(true);
        boolean boolean42 = variance31.isBiasCorrected();
        double[] doubleArray49 = new double[] { (short) 0, 1.0d, 1L, 0.0d, (-1.0d), 10L };
        double double50 = variance31.evaluate(doubleArray49);
        org.apache.commons.math.stat.descriptive.moment.Variance variance52 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray59 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double60 = variance52.evaluate(doubleArray59);
        variance52.setBiasCorrected(true);
        boolean boolean63 = variance52.isBiasCorrected();
        double[] doubleArray70 = new double[] { (short) 0, 1.0d, 1L, 0.0d, (-1.0d), 10L };
        double double71 = variance52.evaluate(doubleArray70);
        double double74 = variance31.evaluate(doubleArray70, (int) (byte) 1, 0);
        double double76 = variance19.evaluate(doubleArray70, 2178.0d);
        double double77 = variance1.evaluate(doubleArray70);
        double double78 = variance1.getResult();
        boolean boolean79 = variance1.isBiasCorrected();
        java.lang.Class<?> wildcardClass80 = variance1.getClass();
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 2168.222222222222d + "'", double9 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 0L + "'", long12 == 0L);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 0L + "'", long13 == 0L);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 2168.222222222222d + "'", double27 == 2168.222222222222d);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 2168.222222222222d + "'", double39 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[0.0, 1.0, 1.0, 0.0, -1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 16.566666666666663d + "'", double50 == 16.566666666666663d);
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 2168.222222222222d + "'", double60 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[0.0, 1.0, 1.0, 0.0, -1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + 16.566666666666663d + "'", double71 == 16.566666666666663d);
        org.junit.Assert.assertTrue(Double.isNaN(double74));
        org.junit.Assert.assertTrue("'" + double76 + "' != '" + 16.566666666418314d + "'", double76 == 16.566666666418314d);
        org.junit.Assert.assertTrue("'" + double77 + "' != '" + 16.566666666666663d + "'", double77 == 16.566666666666663d);
        org.junit.Assert.assertTrue(Double.isNaN(double78));
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertNotNull(wildcardClass80);
    }

    @Test
    public void test1453() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1453");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance1.clear();
        double double3 = variance1.getResult();
        double[] doubleArray8 = new double[] { (-1), 2168.222222222222d, 16.566666666418314d, 10.0d };
        variance1.incrementAll(doubleArray8);
        org.apache.commons.math.stat.descriptive.moment.Variance variance11 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray18 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double19 = variance11.evaluate(doubleArray18);
        variance11.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance23 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray30 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double31 = variance23.evaluate(doubleArray30);
        variance11.incrementAll(doubleArray30);
        variance11.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance35 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray42 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double43 = variance35.evaluate(doubleArray42);
        double[] doubleArray47 = new double[] { (byte) 1, (byte) 100, 1L };
        double double48 = variance35.evaluate(doubleArray47);
        variance11.incrementAll(doubleArray47, (int) (byte) 0, (int) (byte) 1);
        double double55 = variance1.evaluate(doubleArray47, (double) 'a', (int) (short) 1, (int) (short) 1);
        boolean boolean56 = variance1.isBiasCorrected();
        long long57 = variance1.getN();
        variance1.setBiasCorrected(false);
        java.lang.Class<?> wildcardClass60 = variance1.getClass();
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-1.0, 2168.222222222222, 16.566666666418314, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 2168.222222222222d + "'", double19 == 2168.222222222222d);
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 2168.222222222222d + "'", double31 == 2168.222222222222d);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 2168.222222222222d + "'", double43 == 2168.222222222222d);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[1.0, 100.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 2178.0d + "'", double48 == 2178.0d);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 0.0d + "'", double55 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + long57 + "' != '" + 4L + "'", long57 == 4L);
        org.junit.Assert.assertNotNull(wildcardClass60);
    }

    @Test
    public void test1454() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1454");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance1.clear();
        double double3 = variance1.getResult();
        double double4 = variance1.getResult();
        variance1.setBiasCorrected(true);
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertTrue(Double.isNaN(double4));
    }

    @Test
    public void test1455() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1455");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance1.clear();
        double double3 = variance1.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance5 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray12 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double13 = variance5.evaluate(doubleArray12);
        variance5.setBiasCorrected(true);
        boolean boolean16 = variance5.isBiasCorrected();
        double[] doubleArray23 = new double[] { (short) 0, 1.0d, 1L, 0.0d, (-1.0d), 10L };
        double double24 = variance5.evaluate(doubleArray23);
        double double25 = variance5.getResult();
        variance5.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance29 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray36 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double37 = variance29.evaluate(doubleArray36);
        variance29.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance41 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray48 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double49 = variance41.evaluate(doubleArray48);
        variance41.setBiasCorrected(true);
        boolean boolean52 = variance41.isBiasCorrected();
        double[] doubleArray59 = new double[] { (short) 0, 1.0d, 1L, 0.0d, (-1.0d), 10L };
        double double60 = variance41.evaluate(doubleArray59);
        org.apache.commons.math.stat.descriptive.moment.Variance variance62 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray69 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double70 = variance62.evaluate(doubleArray69);
        variance62.setBiasCorrected(true);
        boolean boolean73 = variance62.isBiasCorrected();
        double[] doubleArray80 = new double[] { (short) 0, 1.0d, 1L, 0.0d, (-1.0d), 10L };
        double double81 = variance62.evaluate(doubleArray80);
        double double84 = variance41.evaluate(doubleArray80, (int) (byte) 1, 0);
        double double86 = variance29.evaluate(doubleArray80, 2178.0d);
        boolean boolean87 = variance5.equals((java.lang.Object) doubleArray80);
        double double89 = variance1.evaluate(doubleArray80, (double) '#');
        long long90 = variance1.getN();
        boolean boolean91 = variance1.isBiasCorrected();
        variance1.setBiasCorrected(false);
        long long94 = variance1.getN();
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 2168.222222222222d + "'", double13 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[0.0, 1.0, 1.0, 0.0, -1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 16.566666666666663d + "'", double24 == 16.566666666666663d);
        org.junit.Assert.assertTrue(Double.isNaN(double25));
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 2168.222222222222d + "'", double37 == 2168.222222222222d);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 2168.222222222222d + "'", double49 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[0.0, 1.0, 1.0, 0.0, -1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 16.566666666666663d + "'", double60 == 16.566666666666663d);
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + 2168.222222222222d + "'", double70 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray80), "[0.0, 1.0, 1.0, 0.0, -1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double81 + "' != '" + 16.566666666666663d + "'", double81 == 16.566666666666663d);
        org.junit.Assert.assertTrue(Double.isNaN(double84));
        org.junit.Assert.assertTrue("'" + double86 + "' != '" + 16.566666666418314d + "'", double86 == 16.566666666418314d);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertTrue("'" + double89 + "' != '" + 13.805555555555506d + "'", double89 == 13.805555555555506d);
        org.junit.Assert.assertTrue("'" + long90 + "' != '" + 0L + "'", long90 == 0L);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
        org.junit.Assert.assertTrue("'" + long94 + "' != '" + 0L + "'", long94 == 0L);
    }

    @Test
    public void test1456() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1456");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray8 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double9 = variance1.evaluate(doubleArray8);
        variance1.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance13 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray20 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double21 = variance13.evaluate(doubleArray20);
        variance13.setBiasCorrected(true);
        boolean boolean24 = variance13.isBiasCorrected();
        double[] doubleArray31 = new double[] { (short) 0, 1.0d, 1L, 0.0d, (-1.0d), 10L };
        double double32 = variance13.evaluate(doubleArray31);
        double double35 = variance1.evaluate(doubleArray31, (int) (byte) 1, (int) (byte) 0);
        variance1.setBiasCorrected(true);
        variance1.setBiasCorrected(false);
        variance1.clear();
        boolean boolean41 = variance1.isBiasCorrected();
        variance1.clear();
        variance1.setBiasCorrected(true);
        boolean boolean45 = variance1.isBiasCorrected();
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 2168.222222222222d + "'", double9 == 2168.222222222222d);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 2168.222222222222d + "'", double21 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[0.0, 1.0, 1.0, 0.0, -1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 16.566666666666663d + "'", double32 == 16.566666666666663d);
        org.junit.Assert.assertTrue(Double.isNaN(double35));
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
    }

    @Test
    public void test1457() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1457");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray8 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double9 = variance1.evaluate(doubleArray8);
        double[] doubleArray13 = new double[] { (byte) 1, (byte) 100, 1L };
        double double14 = variance1.evaluate(doubleArray13);
        org.apache.commons.math.stat.descriptive.moment.Variance variance16 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray23 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double24 = variance16.evaluate(doubleArray23);
        variance16.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance28 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray35 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double36 = variance28.evaluate(doubleArray35);
        variance16.incrementAll(doubleArray35);
        variance1.incrementAll(doubleArray35);
        long long39 = variance1.getN();
        boolean boolean40 = variance1.isBiasCorrected();
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 2168.222222222222d + "'", double9 == 2168.222222222222d);
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[1.0, 100.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 2178.0d + "'", double14 == 2178.0d);
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 2168.222222222222d + "'", double24 == 2168.222222222222d);
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 2168.222222222222d + "'", double36 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + long39 + "' != '" + 6L + "'", long39 == 6L);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
    }

    @Test
    public void test1458() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1458");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray8 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double9 = variance1.evaluate(doubleArray8);
        double[] doubleArray13 = new double[] { (byte) 1, (byte) 100, 1L };
        double double14 = variance1.evaluate(doubleArray13);
        org.apache.commons.math.stat.descriptive.moment.Variance variance16 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray23 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double24 = variance16.evaluate(doubleArray23);
        variance16.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance28 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray35 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double36 = variance28.evaluate(doubleArray35);
        variance16.incrementAll(doubleArray35);
        variance1.incrementAll(doubleArray35);
        boolean boolean39 = variance1.isBiasCorrected();
        boolean boolean40 = variance1.isBiasCorrected();
        long long41 = variance1.getN();
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 2168.222222222222d + "'", double9 == 2168.222222222222d);
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[1.0, 100.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 2178.0d + "'", double14 == 2178.0d);
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 2168.222222222222d + "'", double24 == 2168.222222222222d);
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 2168.222222222222d + "'", double36 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + long41 + "' != '" + 6L + "'", long41 == 6L);
    }

    @Test
    public void test1459() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1459");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray8 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double9 = variance1.evaluate(doubleArray8);
        variance1.setBiasCorrected(true);
        long long12 = variance1.getN();
        long long13 = variance1.getN();
        boolean boolean14 = variance1.isBiasCorrected();
        org.apache.commons.math.stat.descriptive.moment.Variance variance16 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray23 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double24 = variance16.evaluate(doubleArray23);
        variance16.setBiasCorrected(true);
        boolean boolean27 = variance16.isBiasCorrected();
        double[] doubleArray34 = new double[] { (short) 0, 1.0d, 1L, 0.0d, (-1.0d), 10L };
        double double35 = variance16.evaluate(doubleArray34);
        boolean boolean37 = variance16.equals((java.lang.Object) 10.0d);
        org.apache.commons.math.stat.descriptive.moment.Variance variance39 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray46 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double47 = variance39.evaluate(doubleArray46);
        variance39.setBiasCorrected(true);
        boolean boolean50 = variance39.isBiasCorrected();
        double[] doubleArray57 = new double[] { (short) 0, 1.0d, 1L, 0.0d, (-1.0d), 10L };
        double double58 = variance39.evaluate(doubleArray57);
        double double60 = variance16.evaluate(doubleArray57, (double) 0.0f);
        variance1.incrementAll(doubleArray57);
        variance1.increment((double) 0.0f);
        variance1.increment((double) (byte) 10);
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 2168.222222222222d + "'", double9 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 0L + "'", long12 == 0L);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 0L + "'", long13 == 0L);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 2168.222222222222d + "'", double24 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[0.0, 1.0, 1.0, 0.0, -1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 16.566666666666663d + "'", double35 == 16.566666666666663d);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 2168.222222222222d + "'", double47 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[0.0, 1.0, 1.0, 0.0, -1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 16.566666666666663d + "'", double58 == 16.566666666666663d);
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 16.566666666666666d + "'", double60 == 16.566666666666666d);
    }

    @Test
    public void test1460() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1460");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment1 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance2 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment1);
        double[] doubleArray3 = new double[] {};
        double double6 = variance2.evaluate(doubleArray3, 0, 0);
        boolean boolean8 = variance2.equals((java.lang.Object) 10);
        variance2.increment(Double.NaN);
        variance2.clear();
        variance2.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance14 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray21 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double22 = variance14.evaluate(doubleArray21);
        variance14.setBiasCorrected(true);
        variance14.increment((double) (byte) 0);
        double[] doubleArray29 = new double[] { 'a', 100L };
        double double31 = variance14.evaluate(doubleArray29, 0.0d);
        long long32 = variance14.getN();
        boolean boolean33 = variance14.isBiasCorrected();
        long long34 = variance14.getN();
        double double35 = variance14.getResult();
        double double36 = variance14.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance38 = new org.apache.commons.math.stat.descriptive.moment.Variance(true);
        double double39 = variance38.getResult();
        double double40 = variance38.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance42 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray49 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double50 = variance42.evaluate(doubleArray49);
        variance42.clear();
        variance42.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance55 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance55.clear();
        double double57 = variance55.getResult();
        double[] doubleArray62 = new double[] { (-1), 2168.222222222222d, 16.566666666418314d, 10.0d };
        variance55.incrementAll(doubleArray62);
        boolean boolean64 = variance42.equals((java.lang.Object) doubleArray62);
        double double66 = variance38.evaluate(doubleArray62, (double) (-1.0f));
        double double68 = variance14.evaluate(doubleArray62, 16.566666666666666d);
        // The following exception was thrown during execution in test generation
        try {
            double double71 = variance2.evaluate(doubleArray62, 10, (int) (byte) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: begin + length > values.length");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 2168.222222222222d + "'", double22 == 2168.222222222222d);
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[97.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 4.5d + "'", double31 == 4.5d);
        org.junit.Assert.assertTrue("'" + long32 + "' != '" + 1L + "'", long32 == 1L);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + long34 + "' != '" + 1L + "'", long34 == 1L);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 0.0d + "'", double35 == 0.0d);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 0.0d + "'", double36 == 0.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double39));
        org.junit.Assert.assertTrue(Double.isNaN(double40));
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 2168.222222222222d + "'", double50 == 2168.222222222222d);
        org.junit.Assert.assertTrue(Double.isNaN(double57));
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[-1.0, 2168.222222222222, 16.566666666418314, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 1166128.5457099646d + "'", double66 == 1166128.5457099646d);
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 1166128.5457099646d + "'", double68 == 1166128.5457099646d);
    }

    @Test
    public void test1461() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1461");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance1.clear();
        double double3 = variance1.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance5 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray12 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double13 = variance5.evaluate(doubleArray12);
        variance5.setBiasCorrected(true);
        boolean boolean16 = variance5.isBiasCorrected();
        double[] doubleArray23 = new double[] { (short) 0, 1.0d, 1L, 0.0d, (-1.0d), 10L };
        double double24 = variance5.evaluate(doubleArray23);
        double double25 = variance5.getResult();
        variance5.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance29 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray36 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double37 = variance29.evaluate(doubleArray36);
        variance29.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance41 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray48 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double49 = variance41.evaluate(doubleArray48);
        variance41.setBiasCorrected(true);
        boolean boolean52 = variance41.isBiasCorrected();
        double[] doubleArray59 = new double[] { (short) 0, 1.0d, 1L, 0.0d, (-1.0d), 10L };
        double double60 = variance41.evaluate(doubleArray59);
        org.apache.commons.math.stat.descriptive.moment.Variance variance62 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray69 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double70 = variance62.evaluate(doubleArray69);
        variance62.setBiasCorrected(true);
        boolean boolean73 = variance62.isBiasCorrected();
        double[] doubleArray80 = new double[] { (short) 0, 1.0d, 1L, 0.0d, (-1.0d), 10L };
        double double81 = variance62.evaluate(doubleArray80);
        double double84 = variance41.evaluate(doubleArray80, (int) (byte) 1, 0);
        double double86 = variance29.evaluate(doubleArray80, 2178.0d);
        boolean boolean87 = variance5.equals((java.lang.Object) doubleArray80);
        double double89 = variance1.evaluate(doubleArray80, (double) '#');
        boolean boolean90 = variance1.isBiasCorrected();
        double double91 = variance1.getResult();
        long long92 = variance1.getN();
        variance1.setBiasCorrected(false);
        boolean boolean95 = variance1.isBiasCorrected();
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 2168.222222222222d + "'", double13 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[0.0, 1.0, 1.0, 0.0, -1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 16.566666666666663d + "'", double24 == 16.566666666666663d);
        org.junit.Assert.assertTrue(Double.isNaN(double25));
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 2168.222222222222d + "'", double37 == 2168.222222222222d);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 2168.222222222222d + "'", double49 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[0.0, 1.0, 1.0, 0.0, -1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 16.566666666666663d + "'", double60 == 16.566666666666663d);
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + 2168.222222222222d + "'", double70 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray80), "[0.0, 1.0, 1.0, 0.0, -1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double81 + "' != '" + 16.566666666666663d + "'", double81 == 16.566666666666663d);
        org.junit.Assert.assertTrue(Double.isNaN(double84));
        org.junit.Assert.assertTrue("'" + double86 + "' != '" + 16.566666666418314d + "'", double86 == 16.566666666418314d);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertTrue("'" + double89 + "' != '" + 13.805555555555506d + "'", double89 == 13.805555555555506d);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double91));
        org.junit.Assert.assertTrue("'" + long92 + "' != '" + 0L + "'", long92 == 0L);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + false + "'", boolean95 == false);
    }

    @Test
    public void test1462() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1462");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray8 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double9 = variance1.evaluate(doubleArray8);
        variance1.setBiasCorrected(true);
        long long12 = variance1.getN();
        long long13 = variance1.getN();
        boolean boolean15 = variance1.equals((java.lang.Object) 16.566666666666663d);
        boolean boolean17 = variance1.equals((java.lang.Object) (short) 10);
        long long18 = variance1.getN();
        variance1.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance21 = new org.apache.commons.math.stat.descriptive.moment.Variance();
        long long22 = variance21.getN();
        variance21.setBiasCorrected(true);
        variance21.increment(2178.0d);
        double double27 = variance21.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance29 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray36 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double37 = variance29.evaluate(doubleArray36);
        variance29.clear();
        variance29.setBiasCorrected(true);
        double double41 = variance29.getResult();
        variance29.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance44 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray51 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double52 = variance44.evaluate(doubleArray51);
        variance44.setBiasCorrected(true);
        boolean boolean55 = variance44.isBiasCorrected();
        double[] doubleArray62 = new double[] { (short) 0, 1.0d, 1L, 0.0d, (-1.0d), 10L };
        double double63 = variance44.evaluate(doubleArray62);
        double double64 = variance44.getResult();
        variance44.setBiasCorrected(true);
        double double67 = variance44.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance69 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray76 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double77 = variance69.evaluate(doubleArray76);
        variance69.clear();
        variance69.setBiasCorrected(true);
        double double81 = variance69.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance83 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray90 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double91 = variance83.evaluate(doubleArray90);
        double double92 = variance69.evaluate(doubleArray90);
        double double94 = variance44.evaluate(doubleArray90, (double) 100);
        double double95 = variance29.evaluate(doubleArray90);
        double double96 = variance21.evaluate(doubleArray90);
        boolean boolean97 = variance1.equals((java.lang.Object) double96);
        double double98 = variance1.getResult();
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 2168.222222222222d + "'", double9 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 0L + "'", long12 == 0L);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 0L + "'", long13 == 0L);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 0L + "'", long18 == 0L);
        org.junit.Assert.assertTrue("'" + long22 + "' != '" + 0L + "'", long22 == 0L);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 0.0d + "'", double27 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 2168.222222222222d + "'", double37 == 2168.222222222222d);
        org.junit.Assert.assertTrue(Double.isNaN(double41));
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 2168.222222222222d + "'", double52 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[0.0, 1.0, 1.0, 0.0, -1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 16.566666666666663d + "'", double63 == 16.566666666666663d);
        org.junit.Assert.assertTrue(Double.isNaN(double64));
        org.junit.Assert.assertTrue(Double.isNaN(double67));
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double77 + "' != '" + 2168.222222222222d + "'", double77 == 2168.222222222222d);
        org.junit.Assert.assertTrue(Double.isNaN(double81));
        org.junit.Assert.assertNotNull(doubleArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray90), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double91 + "' != '" + 2168.222222222222d + "'", double91 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + double92 + "' != '" + 2601.866666666667d + "'", double92 == 2601.866666666667d);
        org.junit.Assert.assertTrue("'" + double94 + "' != '" + 2601.8666666666663d + "'", double94 == 2601.8666666666663d);
        org.junit.Assert.assertTrue("'" + double95 + "' != '" + 2601.866666666667d + "'", double95 == 2601.866666666667d);
        org.junit.Assert.assertTrue("'" + double96 + "' != '" + 2601.866666666667d + "'", double96 == 2601.866666666667d);
        org.junit.Assert.assertTrue("'" + boolean97 + "' != '" + false + "'", boolean97 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double98));
    }

    @Test
    public void test1463() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1463");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment1 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance2 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment1);
        double[] doubleArray3 = new double[] {};
        double double6 = variance2.evaluate(doubleArray3, 0, 0);
        boolean boolean8 = variance2.equals((java.lang.Object) 10.0f);
        boolean boolean9 = variance2.isBiasCorrected();
        variance2.clear();
        // The following exception was thrown during execution in test generation
        try {
            double double11 = variance2.getResult();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
    }

    @Test
    public void test1464() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1464");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray8 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double9 = variance1.evaluate(doubleArray8);
        variance1.setBiasCorrected(true);
        long long12 = variance1.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance14 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray21 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double22 = variance14.evaluate(doubleArray21);
        variance14.setBiasCorrected(true);
        boolean boolean25 = variance14.isBiasCorrected();
        double[] doubleArray32 = new double[] { (short) 0, 1.0d, 1L, 0.0d, (-1.0d), 10L };
        double double33 = variance14.evaluate(doubleArray32);
        org.apache.commons.math.stat.descriptive.moment.Variance variance35 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray42 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double43 = variance35.evaluate(doubleArray42);
        variance35.setBiasCorrected(true);
        boolean boolean46 = variance35.isBiasCorrected();
        double[] doubleArray53 = new double[] { (short) 0, 1.0d, 1L, 0.0d, (-1.0d), 10L };
        double double54 = variance35.evaluate(doubleArray53);
        double double57 = variance14.evaluate(doubleArray53, (int) (byte) 1, 0);
        variance14.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance61 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray68 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double69 = variance61.evaluate(doubleArray68);
        variance61.setBiasCorrected(true);
        boolean boolean72 = variance61.isBiasCorrected();
        double[] doubleArray79 = new double[] { (short) 0, 1.0d, 1L, 0.0d, (-1.0d), 10L };
        double double80 = variance61.evaluate(doubleArray79);
        double double82 = variance14.evaluate(doubleArray79, 6.25d);
        variance1.incrementAll(doubleArray79);
        boolean boolean84 = variance1.isBiasCorrected();
        variance1.increment(1175056.0d);
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 2168.222222222222d + "'", double9 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 0L + "'", long12 == 0L);
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 2168.222222222222d + "'", double22 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[0.0, 1.0, 1.0, 0.0, -1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 16.566666666666663d + "'", double33 == 16.566666666666663d);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 2168.222222222222d + "'", double43 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray53), "[0.0, 1.0, 1.0, 0.0, -1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 16.566666666666663d + "'", double54 == 16.566666666666663d);
        org.junit.Assert.assertTrue(Double.isNaN(double57));
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 2168.222222222222d + "'", double69 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray79), "[0.0, 1.0, 1.0, 0.0, -1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double80 + "' != '" + 16.566666666666663d + "'", double80 == 16.566666666666663d);
        org.junit.Assert.assertTrue("'" + double82 + "' != '" + 16.566666666666666d + "'", double82 == 16.566666666666666d);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
    }

    @Test
    public void test1465() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1465");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray8 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double9 = variance1.evaluate(doubleArray8);
        variance1.setBiasCorrected(true);
        boolean boolean12 = variance1.isBiasCorrected();
        double double13 = variance1.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance15 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray22 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double23 = variance15.evaluate(doubleArray22);
        long long24 = variance15.getN();
        variance15.increment((double) (byte) 1);
        variance15.increment((double) 6L);
        double double29 = variance15.getResult();
        variance15.clear();
        boolean boolean31 = variance15.isBiasCorrected();
        org.apache.commons.math.stat.descriptive.moment.Variance variance33 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray40 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double41 = variance33.evaluate(doubleArray40);
        variance33.setBiasCorrected(true);
        variance33.increment((double) (byte) 0);
        double[] doubleArray48 = new double[] { 'a', 100L };
        double double50 = variance33.evaluate(doubleArray48, 0.0d);
        long long51 = variance33.getN();
        boolean boolean52 = variance33.isBiasCorrected();
        long long53 = variance33.getN();
        double double54 = variance33.getResult();
        double double55 = variance33.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance57 = new org.apache.commons.math.stat.descriptive.moment.Variance(true);
        double double58 = variance57.getResult();
        double double59 = variance57.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance61 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray68 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double69 = variance61.evaluate(doubleArray68);
        variance61.clear();
        variance61.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance74 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance74.clear();
        double double76 = variance74.getResult();
        double[] doubleArray81 = new double[] { (-1), 2168.222222222222d, 16.566666666418314d, 10.0d };
        variance74.incrementAll(doubleArray81);
        boolean boolean83 = variance61.equals((java.lang.Object) doubleArray81);
        double double85 = variance57.evaluate(doubleArray81, (double) (-1.0f));
        double double87 = variance33.evaluate(doubleArray81, 16.566666666666666d);
        double double88 = variance15.evaluate(doubleArray81);
        variance1.incrementAll(doubleArray81);
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 2168.222222222222d + "'", double9 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double13));
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 2168.222222222222d + "'", double23 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + 0L + "'", long24 == 0L);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 6.25d + "'", double29 == 6.25d);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 2168.222222222222d + "'", double41 == 2168.222222222222d);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[97.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 4.5d + "'", double50 == 4.5d);
        org.junit.Assert.assertTrue("'" + long51 + "' != '" + 1L + "'", long51 == 1L);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertTrue("'" + long53 + "' != '" + 1L + "'", long53 == 1L);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 0.0d + "'", double54 == 0.0d);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 0.0d + "'", double55 == 0.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double58));
        org.junit.Assert.assertTrue(Double.isNaN(double59));
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 2168.222222222222d + "'", double69 == 2168.222222222222d);
        org.junit.Assert.assertTrue(Double.isNaN(double76));
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray81), "[-1.0, 2168.222222222222, 16.566666666418314, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertTrue("'" + double85 + "' != '" + 1166128.5457099646d + "'", double85 == 1166128.5457099646d);
        org.junit.Assert.assertTrue("'" + double87 + "' != '" + 1166128.5457099646d + "'", double87 == 1166128.5457099646d);
        org.junit.Assert.assertTrue("'" + double88 + "' != '" + 874596.4092824734d + "'", double88 == 874596.4092824734d);
    }

    @Test
    public void test1466() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1466");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray8 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double9 = variance1.evaluate(doubleArray8);
        variance1.clear();
        variance1.setBiasCorrected(true);
        double double13 = variance1.getResult();
        variance1.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance16 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray23 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double24 = variance16.evaluate(doubleArray23);
        variance16.setBiasCorrected(true);
        boolean boolean27 = variance16.isBiasCorrected();
        double[] doubleArray34 = new double[] { (short) 0, 1.0d, 1L, 0.0d, (-1.0d), 10L };
        double double35 = variance16.evaluate(doubleArray34);
        double double36 = variance16.getResult();
        variance16.setBiasCorrected(true);
        double double39 = variance16.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance41 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray48 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double49 = variance41.evaluate(doubleArray48);
        variance41.clear();
        variance41.setBiasCorrected(true);
        double double53 = variance41.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance55 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray62 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double63 = variance55.evaluate(doubleArray62);
        double double64 = variance41.evaluate(doubleArray62);
        double double66 = variance16.evaluate(doubleArray62, (double) 100);
        double double67 = variance1.evaluate(doubleArray62);
        double double68 = variance1.getResult();
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 2168.222222222222d + "'", double9 == 2168.222222222222d);
        org.junit.Assert.assertTrue(Double.isNaN(double13));
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 2168.222222222222d + "'", double24 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[0.0, 1.0, 1.0, 0.0, -1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 16.566666666666663d + "'", double35 == 16.566666666666663d);
        org.junit.Assert.assertTrue(Double.isNaN(double36));
        org.junit.Assert.assertTrue(Double.isNaN(double39));
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 2168.222222222222d + "'", double49 == 2168.222222222222d);
        org.junit.Assert.assertTrue(Double.isNaN(double53));
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 2168.222222222222d + "'", double63 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 2601.866666666667d + "'", double64 == 2601.866666666667d);
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 2601.8666666666663d + "'", double66 == 2601.8666666666663d);
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 2601.866666666667d + "'", double67 == 2601.866666666667d);
        org.junit.Assert.assertTrue(Double.isNaN(double68));
    }

    @Test
    public void test1467() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1467");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray8 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double9 = variance1.evaluate(doubleArray8);
        variance1.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance13 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray20 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double21 = variance13.evaluate(doubleArray20);
        variance13.setBiasCorrected(true);
        boolean boolean24 = variance13.isBiasCorrected();
        double[] doubleArray31 = new double[] { (short) 0, 1.0d, 1L, 0.0d, (-1.0d), 10L };
        double double32 = variance13.evaluate(doubleArray31);
        double double35 = variance1.evaluate(doubleArray31, (int) (byte) 1, (int) (byte) 0);
        org.apache.commons.math.stat.descriptive.moment.Variance variance37 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance39 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray46 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double47 = variance39.evaluate(doubleArray46);
        variance39.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance51 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray58 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double59 = variance51.evaluate(doubleArray58);
        variance51.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance63 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray70 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double71 = variance63.evaluate(doubleArray70);
        variance63.setBiasCorrected(true);
        boolean boolean74 = variance63.isBiasCorrected();
        double[] doubleArray81 = new double[] { (short) 0, 1.0d, 1L, 0.0d, (-1.0d), 10L };
        double double82 = variance63.evaluate(doubleArray81);
        double double85 = variance51.evaluate(doubleArray81, (int) (byte) 1, (int) (byte) 0);
        variance39.incrementAll(doubleArray81, (int) (byte) 1, 1);
        double double89 = variance37.evaluate(doubleArray81);
        double double90 = variance1.evaluate(doubleArray81);
        boolean boolean91 = variance1.isBiasCorrected();
        boolean boolean92 = variance1.isBiasCorrected();
        variance1.increment(16.566666666418314d);
        variance1.setBiasCorrected(true);
        java.lang.Class<?> wildcardClass97 = variance1.getClass();
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 2168.222222222222d + "'", double9 == 2168.222222222222d);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 2168.222222222222d + "'", double21 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[0.0, 1.0, 1.0, 0.0, -1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 16.566666666666663d + "'", double32 == 16.566666666666663d);
        org.junit.Assert.assertTrue(Double.isNaN(double35));
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 2168.222222222222d + "'", double47 == 2168.222222222222d);
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 2168.222222222222d + "'", double59 == 2168.222222222222d);
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + 2168.222222222222d + "'", double71 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray81), "[0.0, 1.0, 1.0, 0.0, -1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double82 + "' != '" + 16.566666666666663d + "'", double82 == 16.566666666666663d);
        org.junit.Assert.assertTrue(Double.isNaN(double85));
        org.junit.Assert.assertTrue("'" + double89 + "' != '" + 13.805555555555552d + "'", double89 == 13.805555555555552d);
        org.junit.Assert.assertTrue("'" + double90 + "' != '" + 16.566666666666663d + "'", double90 == 16.566666666666663d);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + true + "'", boolean91 == true);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + true + "'", boolean92 == true);
        org.junit.Assert.assertNotNull(wildcardClass97);
    }

    @Test
    public void test1468() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1468");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray8 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double9 = variance1.evaluate(doubleArray8);
        variance1.setBiasCorrected(true);
        boolean boolean12 = variance1.isBiasCorrected();
        double[] doubleArray19 = new double[] { (short) 0, 1.0d, 1L, 0.0d, (-1.0d), 10L };
        double double20 = variance1.evaluate(doubleArray19);
        org.apache.commons.math.stat.descriptive.moment.Variance variance22 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray29 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double30 = variance22.evaluate(doubleArray29);
        variance22.setBiasCorrected(true);
        boolean boolean33 = variance22.isBiasCorrected();
        double[] doubleArray40 = new double[] { (short) 0, 1.0d, 1L, 0.0d, (-1.0d), 10L };
        double double41 = variance22.evaluate(doubleArray40);
        double double44 = variance1.evaluate(doubleArray40, (int) (byte) 1, 0);
        boolean boolean45 = variance1.isBiasCorrected();
        variance1.setBiasCorrected(true);
        variance1.increment(13.80555555555562d);
        long long50 = variance1.getN();
        boolean boolean51 = variance1.isBiasCorrected();
        org.apache.commons.math.stat.descriptive.moment.Variance variance53 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray60 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double61 = variance53.evaluate(doubleArray60);
        variance53.setBiasCorrected(true);
        long long64 = variance53.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance66 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray73 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double74 = variance66.evaluate(doubleArray73);
        variance66.clear();
        variance66.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance79 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance79.clear();
        double double81 = variance79.getResult();
        double[] doubleArray86 = new double[] { (-1), 2168.222222222222d, 16.566666666418314d, 10.0d };
        variance79.incrementAll(doubleArray86);
        boolean boolean88 = variance66.equals((java.lang.Object) doubleArray86);
        variance53.incrementAll(doubleArray86);
        double double92 = variance1.evaluate(doubleArray86, 0, (int) (byte) 0);
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 2168.222222222222d + "'", double9 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[0.0, 1.0, 1.0, 0.0, -1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 16.566666666666663d + "'", double20 == 16.566666666666663d);
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 2168.222222222222d + "'", double30 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[0.0, 1.0, 1.0, 0.0, -1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 16.566666666666663d + "'", double41 == 16.566666666666663d);
        org.junit.Assert.assertTrue(Double.isNaN(double44));
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + long50 + "' != '" + 1L + "'", long50 == 1L);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 2168.222222222222d + "'", double61 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + long64 + "' != '" + 0L + "'", long64 == 0L);
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double74 + "' != '" + 2168.222222222222d + "'", double74 == 2168.222222222222d);
        org.junit.Assert.assertTrue(Double.isNaN(double81));
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray86), "[-1.0, 2168.222222222222, 16.566666666418314, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double92));
    }

    @Test
    public void test1469() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1469");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray8 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double9 = variance1.evaluate(doubleArray8);
        double double10 = variance1.getResult();
        double double11 = variance1.getResult();
        double[] doubleArray12 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double15 = variance1.evaluate(doubleArray12, (int) (short) 0, (int) 'a');
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: input value array is null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 2168.222222222222d + "'", double9 == 2168.222222222222d);
        org.junit.Assert.assertTrue(Double.isNaN(double10));
        org.junit.Assert.assertTrue(Double.isNaN(double11));
    }

    @Test
    public void test1470() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1470");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray8 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double9 = variance1.evaluate(doubleArray8);
        variance1.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance13 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray20 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double21 = variance13.evaluate(doubleArray20);
        variance13.setBiasCorrected(true);
        boolean boolean24 = variance13.isBiasCorrected();
        double[] doubleArray31 = new double[] { (short) 0, 1.0d, 1L, 0.0d, (-1.0d), 10L };
        double double32 = variance13.evaluate(doubleArray31);
        double double35 = variance1.evaluate(doubleArray31, (int) (byte) 1, (int) (byte) 0);
        org.apache.commons.math.stat.descriptive.moment.Variance variance37 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance39 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray46 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double47 = variance39.evaluate(doubleArray46);
        variance39.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance51 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray58 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double59 = variance51.evaluate(doubleArray58);
        variance51.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance63 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray70 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double71 = variance63.evaluate(doubleArray70);
        variance63.setBiasCorrected(true);
        boolean boolean74 = variance63.isBiasCorrected();
        double[] doubleArray81 = new double[] { (short) 0, 1.0d, 1L, 0.0d, (-1.0d), 10L };
        double double82 = variance63.evaluate(doubleArray81);
        double double85 = variance51.evaluate(doubleArray81, (int) (byte) 1, (int) (byte) 0);
        variance39.incrementAll(doubleArray81, (int) (byte) 1, 1);
        double double89 = variance37.evaluate(doubleArray81);
        double double90 = variance1.evaluate(doubleArray81);
        long long91 = variance1.getN();
        variance1.clear();
        boolean boolean93 = variance1.isBiasCorrected();
        variance1.increment(2601.8666666666672d);
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 2168.222222222222d + "'", double9 == 2168.222222222222d);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 2168.222222222222d + "'", double21 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[0.0, 1.0, 1.0, 0.0, -1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 16.566666666666663d + "'", double32 == 16.566666666666663d);
        org.junit.Assert.assertTrue(Double.isNaN(double35));
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 2168.222222222222d + "'", double47 == 2168.222222222222d);
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 2168.222222222222d + "'", double59 == 2168.222222222222d);
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + 2168.222222222222d + "'", double71 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray81), "[0.0, 1.0, 1.0, 0.0, -1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double82 + "' != '" + 16.566666666666663d + "'", double82 == 16.566666666666663d);
        org.junit.Assert.assertTrue(Double.isNaN(double85));
        org.junit.Assert.assertTrue("'" + double89 + "' != '" + 13.805555555555552d + "'", double89 == 13.805555555555552d);
        org.junit.Assert.assertTrue("'" + double90 + "' != '" + 16.566666666666663d + "'", double90 == 16.566666666666663d);
        org.junit.Assert.assertTrue("'" + long91 + "' != '" + 0L + "'", long91 == 0L);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + true + "'", boolean93 == true);
    }

    @Test
    public void test1471() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1471");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray8 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double9 = variance1.evaluate(doubleArray8);
        variance1.setBiasCorrected(true);
        long long12 = variance1.getN();
        long long13 = variance1.getN();
        variance1.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance17 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray24 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double25 = variance17.evaluate(doubleArray24);
        variance17.setBiasCorrected(true);
        long long28 = variance17.getN();
        long long29 = variance17.getN();
        boolean boolean30 = variance17.isBiasCorrected();
        long long31 = variance17.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance33 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray40 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double41 = variance33.evaluate(doubleArray40);
        variance33.setBiasCorrected(true);
        long long44 = variance33.getN();
        variance33.clear();
        double double46 = variance33.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance48 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray55 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double56 = variance48.evaluate(doubleArray55);
        variance48.setBiasCorrected(true);
        boolean boolean59 = variance48.isBiasCorrected();
        double[] doubleArray66 = new double[] { (short) 0, 1.0d, 1L, 0.0d, (-1.0d), 10L };
        double double67 = variance48.evaluate(doubleArray66);
        boolean boolean69 = variance48.equals((java.lang.Object) 10.0d);
        org.apache.commons.math.stat.descriptive.moment.Variance variance71 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray78 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double79 = variance71.evaluate(doubleArray78);
        variance71.setBiasCorrected(true);
        boolean boolean82 = variance71.isBiasCorrected();
        double[] doubleArray89 = new double[] { (short) 0, 1.0d, 1L, 0.0d, (-1.0d), 10L };
        double double90 = variance71.evaluate(doubleArray89);
        double double92 = variance48.evaluate(doubleArray89, (double) 0.0f);
        variance33.incrementAll(doubleArray89);
        double double94 = variance17.evaluate(doubleArray89);
        // The following exception was thrown during execution in test generation
        try {
            double double98 = variance1.evaluate(doubleArray89, 2168.222222223878d, (int) (byte) -1, (int) (short) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: start position cannot be negative");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 2168.222222222222d + "'", double9 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 0L + "'", long12 == 0L);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 0L + "'", long13 == 0L);
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 2168.222222222222d + "'", double25 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + long28 + "' != '" + 0L + "'", long28 == 0L);
        org.junit.Assert.assertTrue("'" + long29 + "' != '" + 0L + "'", long29 == 0L);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + long31 + "' != '" + 0L + "'", long31 == 0L);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 2168.222222222222d + "'", double41 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + long44 + "' != '" + 0L + "'", long44 == 0L);
        org.junit.Assert.assertTrue(Double.isNaN(double46));
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 2168.222222222222d + "'", double56 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[0.0, 1.0, 1.0, 0.0, -1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 16.566666666666663d + "'", double67 == 16.566666666666663d);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray78), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double79 + "' != '" + 2168.222222222222d + "'", double79 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertNotNull(doubleArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray89), "[0.0, 1.0, 1.0, 0.0, -1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double90 + "' != '" + 16.566666666666663d + "'", double90 == 16.566666666666663d);
        org.junit.Assert.assertTrue("'" + double92 + "' != '" + 16.566666666666666d + "'", double92 == 16.566666666666666d);
        org.junit.Assert.assertTrue("'" + double94 + "' != '" + 16.566666666666663d + "'", double94 == 16.566666666666663d);
    }

    @Test
    public void test1472() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1472");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray8 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double9 = variance1.evaluate(doubleArray8);
        variance1.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance13 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray20 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double21 = variance13.evaluate(doubleArray20);
        variance13.setBiasCorrected(true);
        boolean boolean24 = variance13.isBiasCorrected();
        double[] doubleArray31 = new double[] { (short) 0, 1.0d, 1L, 0.0d, (-1.0d), 10L };
        double double32 = variance13.evaluate(doubleArray31);
        double double35 = variance1.evaluate(doubleArray31, (int) (byte) 1, (int) (byte) 0);
        variance1.setBiasCorrected(true);
        variance1.setBiasCorrected(false);
        double double40 = variance1.getResult();
        variance1.clear();
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 2168.222222222222d + "'", double9 == 2168.222222222222d);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 2168.222222222222d + "'", double21 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[0.0, 1.0, 1.0, 0.0, -1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 16.566666666666663d + "'", double32 == 16.566666666666663d);
        org.junit.Assert.assertTrue(Double.isNaN(double35));
        org.junit.Assert.assertTrue(Double.isNaN(double40));
    }

    @Test
    public void test1473() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1473");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray8 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double9 = variance1.evaluate(doubleArray8);
        variance1.setBiasCorrected(true);
        boolean boolean12 = variance1.isBiasCorrected();
        double[] doubleArray19 = new double[] { (short) 0, 1.0d, 1L, 0.0d, (-1.0d), 10L };
        double double20 = variance1.evaluate(doubleArray19);
        boolean boolean22 = variance1.equals((java.lang.Object) 10.0d);
        boolean boolean23 = variance1.isBiasCorrected();
        org.apache.commons.math.stat.descriptive.moment.Variance variance25 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        boolean boolean26 = variance1.equals((java.lang.Object) false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance28 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray35 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double36 = variance28.evaluate(doubleArray35);
        variance28.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance40 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray47 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double48 = variance40.evaluate(doubleArray47);
        variance28.incrementAll(doubleArray47);
        double double51 = variance1.evaluate(doubleArray47, (double) 100.0f);
        long long52 = variance1.getN();
        long long53 = variance1.getN();
        variance1.setBiasCorrected(false);
        variance1.setBiasCorrected(false);
        long long58 = variance1.getN();
        java.lang.Class<?> wildcardClass59 = variance1.getClass();
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 2168.222222222222d + "'", double9 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[0.0, 1.0, 1.0, 0.0, -1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 16.566666666666663d + "'", double20 == 16.566666666666663d);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 2168.222222222222d + "'", double36 == 2168.222222222222d);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 2168.222222222222d + "'", double48 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 2601.8666666666663d + "'", double51 == 2601.8666666666663d);
        org.junit.Assert.assertTrue("'" + long52 + "' != '" + 0L + "'", long52 == 0L);
        org.junit.Assert.assertTrue("'" + long53 + "' != '" + 0L + "'", long53 == 0L);
        org.junit.Assert.assertTrue("'" + long58 + "' != '" + 0L + "'", long58 == 0L);
        org.junit.Assert.assertNotNull(wildcardClass59);
    }

    @Test
    public void test1474() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1474");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray8 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double9 = variance1.evaluate(doubleArray8);
        long long10 = variance1.getN();
        boolean boolean12 = variance1.equals((java.lang.Object) (byte) 0);
        org.apache.commons.math.stat.descriptive.moment.Variance variance14 = new org.apache.commons.math.stat.descriptive.moment.Variance(true);
        double double15 = variance14.getResult();
        double double16 = variance14.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance18 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray25 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double26 = variance18.evaluate(doubleArray25);
        variance18.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance30 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray37 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double38 = variance30.evaluate(doubleArray37);
        variance18.incrementAll(doubleArray37);
        variance18.clear();
        variance18.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance44 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray51 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double52 = variance44.evaluate(doubleArray51);
        variance44.setBiasCorrected(true);
        long long55 = variance44.getN();
        long long56 = variance44.getN();
        boolean boolean58 = variance44.equals((java.lang.Object) 16.566666666666663d);
        boolean boolean60 = variance44.equals((java.lang.Object) (short) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance62 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray69 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double70 = variance62.evaluate(doubleArray69);
        variance62.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance74 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray81 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double82 = variance74.evaluate(doubleArray81);
        variance62.incrementAll(doubleArray81);
        double double84 = variance44.evaluate(doubleArray81);
        double double86 = variance18.evaluate(doubleArray81, (double) (byte) 100);
        double double88 = variance14.evaluate(doubleArray81, (double) (-1));
        // The following exception was thrown during execution in test generation
        try {
            double double91 = variance1.evaluate(doubleArray81, 0, (int) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: length cannot be negative");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 2168.222222222222d + "'", double9 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 0L + "'", long10 == 0L);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double15));
        org.junit.Assert.assertTrue(Double.isNaN(double16));
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 2168.222222222222d + "'", double26 == 2168.222222222222d);
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 2168.222222222222d + "'", double38 == 2168.222222222222d);
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 2168.222222222222d + "'", double52 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + long55 + "' != '" + 0L + "'", long55 == 0L);
        org.junit.Assert.assertTrue("'" + long56 + "' != '" + 0L + "'", long56 == 0L);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + 2168.222222222222d + "'", double70 == 2168.222222222222d);
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray81), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double82 + "' != '" + 2168.222222222222d + "'", double82 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + double84 + "' != '" + 2601.866666666667d + "'", double84 == 2601.866666666667d);
        org.junit.Assert.assertTrue("'" + double86 + "' != '" + 2168.222222222222d + "'", double86 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + double88 + "' != '" + 2601.8666666666663d + "'", double88 == 2601.8666666666663d);
    }

    @Test
    public void test1475() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1475");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance1.setBiasCorrected(false);
        long long4 = variance1.getN();
        variance1.increment((double) 0.0f);
        long long7 = variance1.getN();
        variance1.setBiasCorrected(false);
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 0L + "'", long4 == 0L);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 1L + "'", long7 == 1L);
    }

    @Test
    public void test1476() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1476");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray8 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double9 = variance1.evaluate(doubleArray8);
        variance1.setBiasCorrected(true);
        boolean boolean12 = variance1.isBiasCorrected();
        double[] doubleArray19 = new double[] { (short) 0, 1.0d, 1L, 0.0d, (-1.0d), 10L };
        double double20 = variance1.evaluate(doubleArray19);
        boolean boolean22 = variance1.equals((java.lang.Object) 10.0d);
        boolean boolean23 = variance1.isBiasCorrected();
        double double24 = variance1.getResult();
        double double25 = variance1.getResult();
        long long26 = variance1.getN();
        long long27 = variance1.getN();
        long long28 = variance1.getN();
        variance1.clear();
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 2168.222222222222d + "'", double9 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[0.0, 1.0, 1.0, 0.0, -1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 16.566666666666663d + "'", double20 == 16.566666666666663d);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double24));
        org.junit.Assert.assertTrue(Double.isNaN(double25));
        org.junit.Assert.assertTrue("'" + long26 + "' != '" + 0L + "'", long26 == 0L);
        org.junit.Assert.assertTrue("'" + long27 + "' != '" + 0L + "'", long27 == 0L);
        org.junit.Assert.assertTrue("'" + long28 + "' != '" + 0L + "'", long28 == 0L);
    }

    @Test
    public void test1477() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1477");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray8 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double9 = variance1.evaluate(doubleArray8);
        long long10 = variance1.getN();
        variance1.increment((double) (byte) 1);
        variance1.increment((double) 6L);
        double double15 = variance1.getResult();
        variance1.clear();
        boolean boolean17 = variance1.isBiasCorrected();
        org.apache.commons.math.stat.descriptive.moment.Variance variance19 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray26 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double27 = variance19.evaluate(doubleArray26);
        variance19.setBiasCorrected(true);
        boolean boolean30 = variance19.isBiasCorrected();
        double[] doubleArray37 = new double[] { (short) 0, 1.0d, 1L, 0.0d, (-1.0d), 10L };
        double double38 = variance19.evaluate(doubleArray37);
        boolean boolean40 = variance19.equals((java.lang.Object) 10.0d);
        boolean boolean41 = variance19.isBiasCorrected();
        org.apache.commons.math.stat.descriptive.moment.Variance variance43 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        boolean boolean44 = variance19.equals((java.lang.Object) false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance46 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray53 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double54 = variance46.evaluate(doubleArray53);
        variance46.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance58 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray65 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double66 = variance58.evaluate(doubleArray65);
        variance46.incrementAll(doubleArray65);
        double double69 = variance19.evaluate(doubleArray65, (double) 100.0f);
        variance19.clear();
        boolean boolean71 = variance19.isBiasCorrected();
        org.apache.commons.math.stat.descriptive.moment.Variance variance73 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray80 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double81 = variance73.evaluate(doubleArray80);
        variance73.setBiasCorrected(true);
        long long84 = variance73.getN();
        variance73.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance87 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray94 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double95 = variance87.evaluate(doubleArray94);
        double double96 = variance73.evaluate(doubleArray94);
        double double97 = variance19.evaluate(doubleArray94);
        variance1.incrementAll(doubleArray94);
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 2168.222222222222d + "'", double9 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 0L + "'", long10 == 0L);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 6.25d + "'", double15 == 6.25d);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 2168.222222222222d + "'", double27 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[0.0, 1.0, 1.0, 0.0, -1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 16.566666666666663d + "'", double38 == 16.566666666666663d);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray53), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 2168.222222222222d + "'", double54 == 2168.222222222222d);
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 2168.222222222222d + "'", double66 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 2601.8666666666663d + "'", double69 == 2601.8666666666663d);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray80), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double81 + "' != '" + 2168.222222222222d + "'", double81 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + long84 + "' != '" + 0L + "'", long84 == 0L);
        org.junit.Assert.assertNotNull(doubleArray94);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray94), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double95 + "' != '" + 2168.222222222222d + "'", double95 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + double96 + "' != '" + 2601.866666666667d + "'", double96 == 2601.866666666667d);
        org.junit.Assert.assertTrue("'" + double97 + "' != '" + 2601.866666666667d + "'", double97 == 2601.866666666667d);
    }

    @Test
    public void test1478() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1478");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance1.clear();
        double double3 = variance1.getResult();
        double[] doubleArray8 = new double[] { (-1), 2168.222222222222d, 16.566666666418314d, 10.0d };
        variance1.incrementAll(doubleArray8);
        org.apache.commons.math.stat.descriptive.moment.Variance variance11 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray18 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double19 = variance11.evaluate(doubleArray18);
        variance11.setBiasCorrected(true);
        boolean boolean22 = variance11.isBiasCorrected();
        double[] doubleArray29 = new double[] { (short) 0, 1.0d, 1L, 0.0d, (-1.0d), 10L };
        double double30 = variance11.evaluate(doubleArray29);
        double double31 = variance11.getResult();
        variance11.setBiasCorrected(true);
        boolean boolean34 = variance11.isBiasCorrected();
        variance11.setBiasCorrected(false);
        variance11.increment(2601.866666666667d);
        org.apache.commons.math.stat.descriptive.moment.Variance variance40 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray47 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double48 = variance40.evaluate(doubleArray47);
        variance40.clear();
        variance40.setBiasCorrected(true);
        double double52 = variance40.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance54 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray61 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double62 = variance54.evaluate(doubleArray61);
        double double63 = variance40.evaluate(doubleArray61);
        double double64 = variance11.evaluate(doubleArray61);
        double double65 = variance1.evaluate(doubleArray61);
        variance1.increment((double) 0.0f);
        double double68 = variance1.getResult();
        variance1.setBiasCorrected(false);
        double[] doubleArray71 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double73 = variance1.evaluate(doubleArray71, 16.566666666666663d);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-1.0, 2168.222222222222, 16.566666666418314, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 2168.222222222222d + "'", double19 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[0.0, 1.0, 1.0, 0.0, -1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 16.566666666666663d + "'", double30 == 16.566666666666663d);
        org.junit.Assert.assertTrue(Double.isNaN(double31));
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 2168.222222222222d + "'", double48 == 2168.222222222222d);
        org.junit.Assert.assertTrue(Double.isNaN(double52));
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 2168.222222222222d + "'", double62 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 2601.866666666667d + "'", double63 == 2601.866666666667d);
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 2168.222222222222d + "'", double64 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 2168.222222222222d + "'", double65 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 0.0d + "'", double68 == 0.0d);
    }

    @Test
    public void test1479() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1479");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray8 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double9 = variance1.evaluate(doubleArray8);
        variance1.setBiasCorrected(true);
        variance1.increment((double) (byte) 0);
        double[] doubleArray16 = new double[] { 'a', 100L };
        double double18 = variance1.evaluate(doubleArray16, 0.0d);
        long long19 = variance1.getN();
        boolean boolean20 = variance1.isBiasCorrected();
        long long21 = variance1.getN();
        boolean boolean22 = variance1.isBiasCorrected();
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 2168.222222222222d + "'", double9 == 2168.222222222222d);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[97.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 4.5d + "'", double18 == 4.5d);
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + 1L + "'", long19 == 1L);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + long21 + "' != '" + 1L + "'", long21 == 1L);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
    }

    @Test
    public void test1480() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1480");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(true);
        double double2 = variance1.getResult();
        double double3 = variance1.getResult();
        variance1.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance7 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray14 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double15 = variance7.evaluate(doubleArray14);
        variance7.setBiasCorrected(true);
        long long18 = variance7.getN();
        long long19 = variance7.getN();
        boolean boolean21 = variance7.equals((java.lang.Object) 16.566666666666663d);
        boolean boolean23 = variance7.equals((java.lang.Object) (short) 10);
        boolean boolean24 = variance7.isBiasCorrected();
        variance7.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance27 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray34 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double35 = variance27.evaluate(doubleArray34);
        long long36 = variance27.getN();
        variance27.increment(874596.4092824734d);
        org.apache.commons.math.stat.descriptive.moment.Variance variance40 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance40.clear();
        double double42 = variance40.getResult();
        double[] doubleArray47 = new double[] { (-1), 2168.222222222222d, 16.566666666418314d, 10.0d };
        variance40.incrementAll(doubleArray47);
        variance27.incrementAll(doubleArray47, 0, (int) (byte) 1);
        double double53 = variance7.evaluate(doubleArray47, 2178.0d);
        double double55 = variance1.evaluate(doubleArray47, 2.25d);
        org.junit.Assert.assertTrue(Double.isNaN(double2));
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 2168.222222222222d + "'", double15 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 0L + "'", long18 == 0L);
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + 0L + "'", long19 == 0L);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 2168.222222222222d + "'", double35 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + long36 + "' != '" + 0L + "'", long36 == 0L);
        org.junit.Assert.assertTrue(Double.isNaN(double42));
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[-1.0, 2168.222222222222, 16.566666666418314, 10.0]");
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 1166128.5457099646d + "'", double53 == 1166128.5457099646d);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 874596.4092824734d + "'", double55 == 874596.4092824734d);
    }

    @Test
    public void test1481() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1481");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray8 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double9 = variance1.evaluate(doubleArray8);
        variance1.setBiasCorrected(true);
        boolean boolean12 = variance1.isBiasCorrected();
        double[] doubleArray19 = new double[] { (short) 0, 1.0d, 1L, 0.0d, (-1.0d), 10L };
        double double20 = variance1.evaluate(doubleArray19);
        double double21 = variance1.getResult();
        long long22 = variance1.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance24 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray31 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double32 = variance24.evaluate(doubleArray31);
        variance24.setBiasCorrected(true);
        long long35 = variance24.getN();
        variance24.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance38 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray45 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double46 = variance38.evaluate(doubleArray45);
        double double47 = variance24.evaluate(doubleArray45);
        double double48 = variance1.evaluate(doubleArray45);
        org.apache.commons.math.stat.descriptive.moment.Variance variance50 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray57 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double58 = variance50.evaluate(doubleArray57);
        variance50.clear();
        variance50.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance63 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance63.clear();
        double double65 = variance63.getResult();
        double[] doubleArray70 = new double[] { (-1), 2168.222222222222d, 16.566666666418314d, 10.0d };
        variance63.incrementAll(doubleArray70);
        boolean boolean72 = variance50.equals((java.lang.Object) doubleArray70);
        double double74 = variance1.evaluate(doubleArray70, (double) 0L);
        double double75 = variance1.getResult();
        double double76 = variance1.getResult();
        variance1.increment(23.333333333333332d);
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 2168.222222222222d + "'", double9 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[0.0, 1.0, 1.0, 0.0, -1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 16.566666666666663d + "'", double20 == 16.566666666666663d);
        org.junit.Assert.assertTrue(Double.isNaN(double21));
        org.junit.Assert.assertTrue("'" + long22 + "' != '" + 0L + "'", long22 == 0L);
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 2168.222222222222d + "'", double32 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + long35 + "' != '" + 0L + "'", long35 == 0L);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 2168.222222222222d + "'", double46 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 2601.866666666667d + "'", double47 == 2601.866666666667d);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 2601.866666666667d + "'", double48 == 2601.866666666667d);
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 2168.222222222222d + "'", double58 == 2168.222222222222d);
        org.junit.Assert.assertTrue(Double.isNaN(double65));
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[-1.0, 2168.222222222222, 16.566666666418314, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertTrue("'" + double74 + "' != '" + 1166128.5457099646d + "'", double74 == 1166128.5457099646d);
        org.junit.Assert.assertTrue(Double.isNaN(double75));
        org.junit.Assert.assertTrue(Double.isNaN(double76));
    }

    @Test
    public void test1482() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1482");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray8 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double9 = variance1.evaluate(doubleArray8);
        variance1.setBiasCorrected(true);
        variance1.increment((double) (byte) 0);
        double[] doubleArray16 = new double[] { 'a', 100L };
        double double18 = variance1.evaluate(doubleArray16, 0.0d);
        long long19 = variance1.getN();
        boolean boolean20 = variance1.isBiasCorrected();
        long long21 = variance1.getN();
        double double22 = variance1.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance24 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray31 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double32 = variance24.evaluate(doubleArray31);
        variance24.clear();
        variance24.setBiasCorrected(false);
        variance24.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance38 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray45 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double46 = variance38.evaluate(doubleArray45);
        variance38.setBiasCorrected(true);
        variance38.increment((double) (byte) 0);
        double[] doubleArray53 = new double[] { 'a', 100L };
        double double55 = variance38.evaluate(doubleArray53, 0.0d);
        double double56 = variance24.evaluate(doubleArray53);
        // The following exception was thrown during execution in test generation
        try {
            double double60 = variance1.evaluate(doubleArray53, 13.80555555555562d, (int) (short) 10, 0);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: begin + length > values.length");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 2168.222222222222d + "'", double9 == 2168.222222222222d);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[97.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 4.5d + "'", double18 == 4.5d);
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + 1L + "'", long19 == 1L);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + long21 + "' != '" + 1L + "'", long21 == 1L);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 0.0d + "'", double22 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 2168.222222222222d + "'", double32 == 2168.222222222222d);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 2168.222222222222d + "'", double46 == 2168.222222222222d);
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray53), "[97.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 4.5d + "'", double55 == 4.5d);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 2.25d + "'", double56 == 2.25d);
    }

    @Test
    public void test1483() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1483");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray8 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double9 = variance1.evaluate(doubleArray8);
        variance1.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance13 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray20 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double21 = variance13.evaluate(doubleArray20);
        variance13.setBiasCorrected(true);
        boolean boolean24 = variance13.isBiasCorrected();
        double[] doubleArray31 = new double[] { (short) 0, 1.0d, 1L, 0.0d, (-1.0d), 10L };
        double double32 = variance13.evaluate(doubleArray31);
        double double35 = variance1.evaluate(doubleArray31, (int) (byte) 1, (int) (byte) 0);
        variance1.setBiasCorrected(true);
        variance1.setBiasCorrected(false);
        variance1.clear();
        variance1.setBiasCorrected(false);
        variance1.setBiasCorrected(false);
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 2168.222222222222d + "'", double9 == 2168.222222222222d);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 2168.222222222222d + "'", double21 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[0.0, 1.0, 1.0, 0.0, -1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 16.566666666666663d + "'", double32 == 16.566666666666663d);
        org.junit.Assert.assertTrue(Double.isNaN(double35));
    }

    @Test
    public void test1484() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1484");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray8 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double9 = variance1.evaluate(doubleArray8);
        long long10 = variance1.getN();
        boolean boolean12 = variance1.equals((java.lang.Object) (byte) 0);
        long long13 = variance1.getN();
        variance1.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance16 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray23 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double24 = variance16.evaluate(doubleArray23);
        variance16.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance28 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance28.clear();
        double double30 = variance28.getResult();
        double[] doubleArray35 = new double[] { (-1), 2168.222222222222d, 16.566666666418314d, 10.0d };
        variance28.incrementAll(doubleArray35);
        variance16.incrementAll(doubleArray35);
        org.apache.commons.math.stat.descriptive.moment.Variance variance38 = new org.apache.commons.math.stat.descriptive.moment.Variance();
        long long39 = variance38.getN();
        variance38.setBiasCorrected(true);
        variance38.increment(2178.0d);
        boolean boolean44 = variance38.isBiasCorrected();
        org.apache.commons.math.stat.descriptive.moment.Variance variance46 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray53 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double54 = variance46.evaluate(doubleArray53);
        variance46.setBiasCorrected(true);
        boolean boolean57 = variance46.isBiasCorrected();
        double[] doubleArray64 = new double[] { (short) 0, 1.0d, 1L, 0.0d, (-1.0d), 10L };
        double double65 = variance46.evaluate(doubleArray64);
        double double66 = variance46.getResult();
        long long67 = variance46.getN();
        variance46.increment((double) '#');
        variance46.increment(100.0d);
        org.apache.commons.math.stat.descriptive.moment.Variance variance73 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray80 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double81 = variance73.evaluate(doubleArray80);
        variance73.setBiasCorrected(true);
        boolean boolean84 = variance73.isBiasCorrected();
        double[] doubleArray91 = new double[] { (short) 0, 1.0d, 1L, 0.0d, (-1.0d), 10L };
        double double92 = variance73.evaluate(doubleArray91);
        double double94 = variance46.evaluate(doubleArray91, (double) (byte) 100);
        double double95 = variance38.evaluate(doubleArray91);
        double double96 = variance16.evaluate(doubleArray91);
        double double98 = variance1.evaluate(doubleArray91, (double) '#');
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 2168.222222222222d + "'", double9 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 0L + "'", long10 == 0L);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 0L + "'", long13 == 0L);
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 2168.222222222222d + "'", double24 == 2168.222222222222d);
        org.junit.Assert.assertTrue(Double.isNaN(double30));
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[-1.0, 2168.222222222222, 16.566666666418314, 10.0]");
        org.junit.Assert.assertTrue("'" + long39 + "' != '" + 0L + "'", long39 == 0L);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray53), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 2168.222222222222d + "'", double54 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[0.0, 1.0, 1.0, 0.0, -1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 16.566666666666663d + "'", double65 == 16.566666666666663d);
        org.junit.Assert.assertTrue(Double.isNaN(double66));
        org.junit.Assert.assertTrue("'" + long67 + "' != '" + 0L + "'", long67 == 0L);
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray80), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double81 + "' != '" + 2168.222222222222d + "'", double81 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertNotNull(doubleArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray91), "[0.0, 1.0, 1.0, 0.0, -1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double92 + "' != '" + 16.566666666666663d + "'", double92 == 16.566666666666663d);
        org.junit.Assert.assertTrue("'" + double94 + "' != '" + 16.566666666667153d + "'", double94 == 16.566666666667153d);
        org.junit.Assert.assertTrue("'" + double95 + "' != '" + 16.566666666666663d + "'", double95 == 16.566666666666663d);
        org.junit.Assert.assertTrue("'" + double96 + "' != '" + 16.566666666666663d + "'", double96 == 16.566666666666663d);
        org.junit.Assert.assertTrue("'" + double98 + "' != '" + 13.805555555555506d + "'", double98 == 13.805555555555506d);
    }

    @Test
    public void test1485() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1485");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray8 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double9 = variance1.evaluate(doubleArray8);
        variance1.setBiasCorrected(true);
        boolean boolean12 = variance1.isBiasCorrected();
        double[] doubleArray19 = new double[] { (short) 0, 1.0d, 1L, 0.0d, (-1.0d), 10L };
        double double20 = variance1.evaluate(doubleArray19);
        org.apache.commons.math.stat.descriptive.moment.Variance variance22 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray29 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double30 = variance22.evaluate(doubleArray29);
        variance22.setBiasCorrected(true);
        boolean boolean33 = variance22.isBiasCorrected();
        double[] doubleArray40 = new double[] { (short) 0, 1.0d, 1L, 0.0d, (-1.0d), 10L };
        double double41 = variance22.evaluate(doubleArray40);
        double double44 = variance1.evaluate(doubleArray40, (int) (byte) 1, 0);
        boolean boolean45 = variance1.isBiasCorrected();
        variance1.setBiasCorrected(true);
        variance1.increment(13.80555555555562d);
        double double50 = variance1.getResult();
        variance1.clear();
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 2168.222222222222d + "'", double9 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[0.0, 1.0, 1.0, 0.0, -1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 16.566666666666663d + "'", double20 == 16.566666666666663d);
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 2168.222222222222d + "'", double30 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[0.0, 1.0, 1.0, 0.0, -1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 16.566666666666663d + "'", double41 == 16.566666666666663d);
        org.junit.Assert.assertTrue(Double.isNaN(double44));
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 0.0d + "'", double50 == 0.0d);
    }

    @Test
    public void test1486() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1486");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray8 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double9 = variance1.evaluate(doubleArray8);
        variance1.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance13 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray20 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double21 = variance13.evaluate(doubleArray20);
        variance13.setBiasCorrected(true);
        boolean boolean24 = variance13.isBiasCorrected();
        double[] doubleArray31 = new double[] { (short) 0, 1.0d, 1L, 0.0d, (-1.0d), 10L };
        double double32 = variance13.evaluate(doubleArray31);
        double double35 = variance1.evaluate(doubleArray31, (int) (byte) 1, (int) (byte) 0);
        org.apache.commons.math.stat.descriptive.moment.Variance variance37 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance39 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray46 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double47 = variance39.evaluate(doubleArray46);
        variance39.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance51 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray58 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double59 = variance51.evaluate(doubleArray58);
        variance51.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance63 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray70 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double71 = variance63.evaluate(doubleArray70);
        variance63.setBiasCorrected(true);
        boolean boolean74 = variance63.isBiasCorrected();
        double[] doubleArray81 = new double[] { (short) 0, 1.0d, 1L, 0.0d, (-1.0d), 10L };
        double double82 = variance63.evaluate(doubleArray81);
        double double85 = variance51.evaluate(doubleArray81, (int) (byte) 1, (int) (byte) 0);
        variance39.incrementAll(doubleArray81, (int) (byte) 1, 1);
        double double89 = variance37.evaluate(doubleArray81);
        double double90 = variance1.evaluate(doubleArray81);
        boolean boolean91 = variance1.isBiasCorrected();
        variance1.setBiasCorrected(true);
        variance1.setBiasCorrected(false);
        variance1.clear();
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 2168.222222222222d + "'", double9 == 2168.222222222222d);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 2168.222222222222d + "'", double21 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[0.0, 1.0, 1.0, 0.0, -1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 16.566666666666663d + "'", double32 == 16.566666666666663d);
        org.junit.Assert.assertTrue(Double.isNaN(double35));
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 2168.222222222222d + "'", double47 == 2168.222222222222d);
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 2168.222222222222d + "'", double59 == 2168.222222222222d);
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + 2168.222222222222d + "'", double71 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray81), "[0.0, 1.0, 1.0, 0.0, -1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double82 + "' != '" + 16.566666666666663d + "'", double82 == 16.566666666666663d);
        org.junit.Assert.assertTrue(Double.isNaN(double85));
        org.junit.Assert.assertTrue("'" + double89 + "' != '" + 13.805555555555552d + "'", double89 == 13.805555555555552d);
        org.junit.Assert.assertTrue("'" + double90 + "' != '" + 16.566666666666663d + "'", double90 == 16.566666666666663d);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + true + "'", boolean91 == true);
    }

    @Test
    public void test1487() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1487");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray8 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double9 = variance1.evaluate(doubleArray8);
        variance1.setBiasCorrected(true);
        variance1.increment((double) (byte) 0);
        variance1.setBiasCorrected(true);
        double double16 = variance1.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance18 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray25 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double26 = variance18.evaluate(doubleArray25);
        variance18.setBiasCorrected(true);
        boolean boolean29 = variance18.isBiasCorrected();
        org.apache.commons.math.stat.descriptive.moment.Variance variance31 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray38 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double39 = variance31.evaluate(doubleArray38);
        variance31.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance43 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray50 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double51 = variance43.evaluate(doubleArray50);
        variance31.incrementAll(doubleArray50);
        variance31.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance55 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray62 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double63 = variance55.evaluate(doubleArray62);
        double[] doubleArray67 = new double[] { (byte) 1, (byte) 100, 1L };
        double double68 = variance55.evaluate(doubleArray67);
        variance31.incrementAll(doubleArray67, (int) (byte) 0, (int) (byte) 1);
        double double73 = variance18.evaluate(doubleArray67, (double) '4');
        variance1.incrementAll(doubleArray67);
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 2168.222222222222d + "'", double9 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.0d + "'", double16 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 2168.222222222222d + "'", double26 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 2168.222222222222d + "'", double39 == 2168.222222222222d);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 2168.222222222222d + "'", double51 == 2168.222222222222d);
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 2168.222222222222d + "'", double63 == 2168.222222222222d);
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[1.0, 100.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 2178.0d + "'", double68 == 2178.0d);
        org.junit.Assert.assertTrue("'" + double73 + "' != '" + 3267.0d + "'", double73 == 3267.0d);
    }

    @Test
    public void test1488() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1488");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray8 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double9 = variance1.evaluate(doubleArray8);
        double[] doubleArray13 = new double[] { (byte) 1, (byte) 100, 1L };
        double double14 = variance1.evaluate(doubleArray13);
        variance1.increment((double) (byte) 100);
        org.apache.commons.math.stat.descriptive.moment.Variance variance18 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray25 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double26 = variance18.evaluate(doubleArray25);
        variance18.setBiasCorrected(true);
        boolean boolean29 = variance18.isBiasCorrected();
        double[] doubleArray36 = new double[] { (short) 0, 1.0d, 1L, 0.0d, (-1.0d), 10L };
        double double37 = variance18.evaluate(doubleArray36);
        org.apache.commons.math.stat.descriptive.moment.Variance variance39 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray46 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double47 = variance39.evaluate(doubleArray46);
        variance39.setBiasCorrected(true);
        boolean boolean50 = variance39.isBiasCorrected();
        double[] doubleArray57 = new double[] { (short) 0, 1.0d, 1L, 0.0d, (-1.0d), 10L };
        double double58 = variance39.evaluate(doubleArray57);
        double double61 = variance18.evaluate(doubleArray57, (int) (byte) 1, 0);
        variance18.setBiasCorrected(true);
        variance18.setBiasCorrected(true);
        double double66 = variance18.getResult();
        boolean boolean67 = variance18.isBiasCorrected();
        boolean boolean68 = variance18.isBiasCorrected();
        variance18.increment(0.0d);
        variance18.increment((double) 1.0f);
        boolean boolean73 = variance1.equals((java.lang.Object) variance18);
        long long74 = variance18.getN();
        boolean boolean75 = variance18.isBiasCorrected();
        variance18.increment((double) (byte) 0);
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 2168.222222222222d + "'", double9 == 2168.222222222222d);
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[1.0, 100.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 2178.0d + "'", double14 == 2178.0d);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 2168.222222222222d + "'", double26 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[0.0, 1.0, 1.0, 0.0, -1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 16.566666666666663d + "'", double37 == 16.566666666666663d);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 2168.222222222222d + "'", double47 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[0.0, 1.0, 1.0, 0.0, -1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 16.566666666666663d + "'", double58 == 16.566666666666663d);
        org.junit.Assert.assertTrue(Double.isNaN(double61));
        org.junit.Assert.assertTrue(Double.isNaN(double66));
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertTrue("'" + long74 + "' != '" + 2L + "'", long74 == 2L);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
    }

    @Test
    public void test1489() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1489");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray8 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double9 = variance1.evaluate(doubleArray8);
        variance1.setBiasCorrected(true);
        boolean boolean12 = variance1.isBiasCorrected();
        org.apache.commons.math.stat.descriptive.moment.Variance variance14 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray21 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double22 = variance14.evaluate(doubleArray21);
        variance14.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance26 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray33 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double34 = variance26.evaluate(doubleArray33);
        variance26.setBiasCorrected(true);
        boolean boolean37 = variance26.isBiasCorrected();
        double[] doubleArray44 = new double[] { (short) 0, 1.0d, 1L, 0.0d, (-1.0d), 10L };
        double double45 = variance26.evaluate(doubleArray44);
        double double48 = variance14.evaluate(doubleArray44, (int) (byte) 1, (int) (byte) 0);
        double double51 = variance1.evaluate(doubleArray44, (int) (byte) 1, 0);
        org.apache.commons.math.stat.descriptive.moment.Variance variance53 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray60 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double61 = variance53.evaluate(doubleArray60);
        variance53.clear();
        variance53.setBiasCorrected(true);
        boolean boolean65 = variance1.equals((java.lang.Object) variance53);
        java.lang.Class<?> wildcardClass66 = variance53.getClass();
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 2168.222222222222d + "'", double9 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 2168.222222222222d + "'", double22 == 2168.222222222222d);
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 2168.222222222222d + "'", double34 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[0.0, 1.0, 1.0, 0.0, -1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 16.566666666666663d + "'", double45 == 16.566666666666663d);
        org.junit.Assert.assertTrue(Double.isNaN(double48));
        org.junit.Assert.assertTrue(Double.isNaN(double51));
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 2168.222222222222d + "'", double61 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(wildcardClass66);
    }

    @Test
    public void test1490() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1490");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray8 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double9 = variance1.evaluate(doubleArray8);
        variance1.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance13 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray20 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double21 = variance13.evaluate(doubleArray20);
        variance13.setBiasCorrected(true);
        boolean boolean24 = variance13.isBiasCorrected();
        double[] doubleArray31 = new double[] { (short) 0, 1.0d, 1L, 0.0d, (-1.0d), 10L };
        double double32 = variance13.evaluate(doubleArray31);
        org.apache.commons.math.stat.descriptive.moment.Variance variance34 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray41 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double42 = variance34.evaluate(doubleArray41);
        variance34.setBiasCorrected(true);
        boolean boolean45 = variance34.isBiasCorrected();
        double[] doubleArray52 = new double[] { (short) 0, 1.0d, 1L, 0.0d, (-1.0d), 10L };
        double double53 = variance34.evaluate(doubleArray52);
        double double56 = variance13.evaluate(doubleArray52, (int) (byte) 1, 0);
        double double58 = variance1.evaluate(doubleArray52, 2178.0d);
        variance1.increment(3267.0d);
        boolean boolean61 = variance1.isBiasCorrected();
        double double62 = variance1.getResult();
        double double63 = variance1.getResult();
        long long64 = variance1.getN();
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 2168.222222222222d + "'", double9 == 2168.222222222222d);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 2168.222222222222d + "'", double21 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[0.0, 1.0, 1.0, 0.0, -1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 16.566666666666663d + "'", double32 == 16.566666666666663d);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 2168.222222222222d + "'", double42 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[0.0, 1.0, 1.0, 0.0, -1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 16.566666666666663d + "'", double53 == 16.566666666666663d);
        org.junit.Assert.assertTrue(Double.isNaN(double56));
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 16.566666666418314d + "'", double58 == 16.566666666418314d);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 0.0d + "'", double62 == 0.0d);
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 0.0d + "'", double63 == 0.0d);
        org.junit.Assert.assertTrue("'" + long64 + "' != '" + 1L + "'", long64 == 1L);
    }

    @Test
    public void test1491() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1491");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment1 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance2 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment1);
        variance2.clear();
        variance2.setBiasCorrected(false);
        boolean boolean6 = variance2.isBiasCorrected();
        variance2.increment(13.805555555555552d);
        boolean boolean9 = variance2.isBiasCorrected();
        variance2.increment((double) 3L);
        variance2.setBiasCorrected(false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
    }

    @Test
    public void test1492() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1492");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray8 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double9 = variance1.evaluate(doubleArray8);
        variance1.setBiasCorrected(true);
        long long12 = variance1.getN();
        long long13 = variance1.getN();
        double double14 = variance1.getResult();
        variance1.increment((double) 0);
        double double17 = variance1.getResult();
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 2168.222222222222d + "'", double9 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 0L + "'", long12 == 0L);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 0L + "'", long13 == 0L);
        org.junit.Assert.assertTrue(Double.isNaN(double14));
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 0.0d + "'", double17 == 0.0d);
    }

    @Test
    public void test1493() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1493");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray8 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double9 = variance1.evaluate(doubleArray8);
        variance1.setBiasCorrected(true);
        long long12 = variance1.getN();
        variance1.clear();
        boolean boolean14 = variance1.isBiasCorrected();
        org.apache.commons.math.stat.descriptive.moment.Variance variance16 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray23 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double24 = variance16.evaluate(doubleArray23);
        long long25 = variance16.getN();
        variance16.increment((double) (byte) 1);
        variance16.increment((double) 6L);
        variance16.increment(2178.0d);
        org.apache.commons.math.stat.descriptive.moment.Variance variance32 = new org.apache.commons.math.stat.descriptive.moment.Variance();
        long long33 = variance32.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance35 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray42 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double43 = variance35.evaluate(doubleArray42);
        variance35.setBiasCorrected(true);
        boolean boolean46 = variance35.isBiasCorrected();
        double[] doubleArray53 = new double[] { (short) 0, 1.0d, 1L, 0.0d, (-1.0d), 10L };
        double double54 = variance35.evaluate(doubleArray53);
        boolean boolean56 = variance35.equals((java.lang.Object) 10.0d);
        boolean boolean57 = variance35.isBiasCorrected();
        org.apache.commons.math.stat.descriptive.moment.Variance variance59 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        boolean boolean60 = variance35.equals((java.lang.Object) false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance62 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray69 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double70 = variance62.evaluate(doubleArray69);
        variance62.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance74 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray81 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double82 = variance74.evaluate(doubleArray81);
        variance62.incrementAll(doubleArray81);
        double double85 = variance35.evaluate(doubleArray81, (double) 100.0f);
        variance32.incrementAll(doubleArray81, (int) (short) 1, (int) (byte) 0);
        variance16.incrementAll(doubleArray81);
        double double91 = variance1.evaluate(doubleArray81, (double) 10L);
        variance1.setBiasCorrected(false);
        variance1.increment(10.0d);
        variance1.increment((double) 12L);
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 2168.222222222222d + "'", double9 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 0L + "'", long12 == 0L);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 2168.222222222222d + "'", double24 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + long25 + "' != '" + 0L + "'", long25 == 0L);
        org.junit.Assert.assertTrue("'" + long33 + "' != '" + 0L + "'", long33 == 0L);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 2168.222222222222d + "'", double43 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray53), "[0.0, 1.0, 1.0, 0.0, -1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 16.566666666666663d + "'", double54 == 16.566666666666663d);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + 2168.222222222222d + "'", double70 == 2168.222222222222d);
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray81), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double82 + "' != '" + 2168.222222222222d + "'", double82 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + double85 + "' != '" + 2601.8666666666663d + "'", double85 == 2601.8666666666663d);
        org.junit.Assert.assertTrue("'" + double91 + "' != '" + 2601.866666666667d + "'", double91 == 2601.866666666667d);
    }

    @Test
    public void test1494() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1494");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray8 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double9 = variance1.evaluate(doubleArray8);
        double[] doubleArray13 = new double[] { (byte) 1, (byte) 100, 1L };
        double double14 = variance1.evaluate(doubleArray13);
        long long15 = variance1.getN();
        variance1.setBiasCorrected(true);
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 2168.222222222222d + "'", double9 == 2168.222222222222d);
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[1.0, 100.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 2178.0d + "'", double14 == 2178.0d);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 0L + "'", long15 == 0L);
    }

    @Test
    public void test1495() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1495");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance1.clear();
        boolean boolean3 = variance1.isBiasCorrected();
        boolean boolean5 = variance1.equals((java.lang.Object) 1166128.5457099646d);
        org.apache.commons.math.stat.descriptive.moment.Variance variance7 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray14 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double15 = variance7.evaluate(doubleArray14);
        variance7.setBiasCorrected(true);
        boolean boolean18 = variance7.isBiasCorrected();
        double[] doubleArray25 = new double[] { (short) 0, 1.0d, 1L, 0.0d, (-1.0d), 10L };
        double double26 = variance7.evaluate(doubleArray25);
        org.apache.commons.math.stat.descriptive.moment.Variance variance28 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray35 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double36 = variance28.evaluate(doubleArray35);
        variance28.setBiasCorrected(true);
        boolean boolean39 = variance28.isBiasCorrected();
        double[] doubleArray46 = new double[] { (short) 0, 1.0d, 1L, 0.0d, (-1.0d), 10L };
        double double47 = variance28.evaluate(doubleArray46);
        double double50 = variance7.evaluate(doubleArray46, (int) (byte) 1, 0);
        variance7.setBiasCorrected(true);
        boolean boolean53 = variance1.equals((java.lang.Object) true);
        long long54 = variance1.getN();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 2168.222222222222d + "'", double15 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[0.0, 1.0, 1.0, 0.0, -1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 16.566666666666663d + "'", double26 == 16.566666666666663d);
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 2168.222222222222d + "'", double36 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[0.0, 1.0, 1.0, 0.0, -1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 16.566666666666663d + "'", double47 == 16.566666666666663d);
        org.junit.Assert.assertTrue(Double.isNaN(double50));
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + long54 + "' != '" + 0L + "'", long54 == 0L);
    }

    @Test
    public void test1496() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1496");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment0 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment0);
        boolean boolean2 = variance1.isBiasCorrected();
        variance1.setBiasCorrected(false);
        variance1.setBiasCorrected(true);
        variance1.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray16 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double17 = variance9.evaluate(doubleArray16);
        variance9.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance21 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray28 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double29 = variance21.evaluate(doubleArray28);
        variance9.incrementAll(doubleArray28);
        variance9.clear();
        variance9.setBiasCorrected(false);
        variance9.setBiasCorrected(false);
        variance9.setBiasCorrected(true);
        variance9.increment(3267.0000000018626d);
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean40 = variance1.equals((java.lang.Object) variance9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 2168.222222222222d + "'", double17 == 2168.222222222222d);
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 2168.222222222222d + "'", double29 == 2168.222222222222d);
    }

    @Test
    public void test1497() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1497");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray8 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double9 = variance1.evaluate(doubleArray8);
        variance1.setBiasCorrected(true);
        long long12 = variance1.getN();
        variance1.clear();
        double double14 = variance1.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance16 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray23 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double24 = variance16.evaluate(doubleArray23);
        variance16.setBiasCorrected(true);
        boolean boolean27 = variance16.isBiasCorrected();
        double[] doubleArray34 = new double[] { (short) 0, 1.0d, 1L, 0.0d, (-1.0d), 10L };
        double double35 = variance16.evaluate(doubleArray34);
        boolean boolean37 = variance16.equals((java.lang.Object) 10.0d);
        org.apache.commons.math.stat.descriptive.moment.Variance variance39 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray46 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double47 = variance39.evaluate(doubleArray46);
        variance39.setBiasCorrected(true);
        boolean boolean50 = variance39.isBiasCorrected();
        double[] doubleArray57 = new double[] { (short) 0, 1.0d, 1L, 0.0d, (-1.0d), 10L };
        double double58 = variance39.evaluate(doubleArray57);
        double double60 = variance16.evaluate(doubleArray57, (double) 0.0f);
        variance1.incrementAll(doubleArray57);
        double double62 = variance1.getResult();
        double double63 = variance1.getResult();
        long long64 = variance1.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance66 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray73 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double74 = variance66.evaluate(doubleArray73);
        long long75 = variance66.getN();
        variance66.increment(874596.4092824734d);
        org.apache.commons.math.stat.descriptive.moment.Variance variance79 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance79.clear();
        double double81 = variance79.getResult();
        double[] doubleArray86 = new double[] { (-1), 2168.222222222222d, 16.566666666418314d, 10.0d };
        variance79.incrementAll(doubleArray86);
        variance66.incrementAll(doubleArray86, 0, (int) (byte) 1);
        double double92 = variance1.evaluate(doubleArray86, 0.0d);
        variance1.clear();
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 2168.222222222222d + "'", double9 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 0L + "'", long12 == 0L);
        org.junit.Assert.assertTrue(Double.isNaN(double14));
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 2168.222222222222d + "'", double24 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[0.0, 1.0, 1.0, 0.0, -1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 16.566666666666663d + "'", double35 == 16.566666666666663d);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 2168.222222222222d + "'", double47 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[0.0, 1.0, 1.0, 0.0, -1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 16.566666666666663d + "'", double58 == 16.566666666666663d);
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 16.566666666666666d + "'", double60 == 16.566666666666666d);
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 16.56666666666667d + "'", double62 == 16.56666666666667d);
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 16.56666666666667d + "'", double63 == 16.56666666666667d);
        org.junit.Assert.assertTrue("'" + long64 + "' != '" + 6L + "'", long64 == 6L);
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double74 + "' != '" + 2168.222222222222d + "'", double74 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + long75 + "' != '" + 0L + "'", long75 == 0L);
        org.junit.Assert.assertTrue(Double.isNaN(double81));
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray86), "[-1.0, 2168.222222222222, 16.566666666418314, 10.0]");
        org.junit.Assert.assertTrue("'" + double92 + "' != '" + 1166128.5457099646d + "'", double92 == 1166128.5457099646d);
    }

    @Test
    public void test1498() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1498");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance1.clear();
        double double3 = variance1.getResult();
        double[] doubleArray8 = new double[] { (-1), 2168.222222222222d, 16.566666666418314d, 10.0d };
        variance1.incrementAll(doubleArray8);
        org.apache.commons.math.stat.descriptive.moment.Variance variance11 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray18 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double19 = variance11.evaluate(doubleArray18);
        variance11.setBiasCorrected(true);
        boolean boolean22 = variance11.isBiasCorrected();
        double[] doubleArray29 = new double[] { (short) 0, 1.0d, 1L, 0.0d, (-1.0d), 10L };
        double double30 = variance11.evaluate(doubleArray29);
        double double31 = variance11.getResult();
        variance11.setBiasCorrected(true);
        boolean boolean34 = variance11.isBiasCorrected();
        variance11.setBiasCorrected(false);
        variance11.increment(2601.866666666667d);
        org.apache.commons.math.stat.descriptive.moment.Variance variance40 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray47 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double48 = variance40.evaluate(doubleArray47);
        variance40.clear();
        variance40.setBiasCorrected(true);
        double double52 = variance40.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance54 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray61 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double62 = variance54.evaluate(doubleArray61);
        double double63 = variance40.evaluate(doubleArray61);
        double double64 = variance11.evaluate(doubleArray61);
        double double65 = variance1.evaluate(doubleArray61);
        variance1.increment((double) 0.0f);
        double double68 = variance1.getResult();
        variance1.setBiasCorrected(false);
        boolean boolean71 = variance1.isBiasCorrected();
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-1.0, 2168.222222222222, 16.566666666418314, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 2168.222222222222d + "'", double19 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[0.0, 1.0, 1.0, 0.0, -1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 16.566666666666663d + "'", double30 == 16.566666666666663d);
        org.junit.Assert.assertTrue(Double.isNaN(double31));
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 2168.222222222222d + "'", double48 == 2168.222222222222d);
        org.junit.Assert.assertTrue(Double.isNaN(double52));
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 2168.222222222222d + "'", double62 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 2601.866666666667d + "'", double63 == 2601.866666666667d);
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 2168.222222222222d + "'", double64 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 2168.222222222222d + "'", double65 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 0.0d + "'", double68 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
    }

    @Test
    public void test1499() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1499");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance1.clear();
        double double3 = variance1.getResult();
        double[] doubleArray8 = new double[] { (-1), 2168.222222222222d, 16.566666666418314d, 10.0d };
        variance1.incrementAll(doubleArray8);
        org.apache.commons.math.stat.descriptive.moment.Variance variance11 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray18 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double19 = variance11.evaluate(doubleArray18);
        variance11.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance23 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray30 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double31 = variance23.evaluate(doubleArray30);
        variance11.incrementAll(doubleArray30);
        variance11.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance35 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray42 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double43 = variance35.evaluate(doubleArray42);
        double[] doubleArray47 = new double[] { (byte) 1, (byte) 100, 1L };
        double double48 = variance35.evaluate(doubleArray47);
        variance11.incrementAll(doubleArray47, (int) (byte) 0, (int) (byte) 1);
        double double55 = variance1.evaluate(doubleArray47, (double) 'a', (int) (short) 1, (int) (short) 1);
        boolean boolean56 = variance1.isBiasCorrected();
        variance1.setBiasCorrected(false);
        long long59 = variance1.getN();
        variance1.setBiasCorrected(false);
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-1.0, 2168.222222222222, 16.566666666418314, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 2168.222222222222d + "'", double19 == 2168.222222222222d);
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 2168.222222222222d + "'", double31 == 2168.222222222222d);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 2168.222222222222d + "'", double43 == 2168.222222222222d);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[1.0, 100.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 2178.0d + "'", double48 == 2178.0d);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 0.0d + "'", double55 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + long59 + "' != '" + 4L + "'", long59 == 4L);
    }

    @Test
    public void test1500() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1500");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray8 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double9 = variance1.evaluate(doubleArray8);
        long long10 = variance1.getN();
        variance1.increment((double) (byte) 1);
        variance1.increment((double) 6L);
        double double15 = variance1.getResult();
        variance1.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance18 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray25 = new double[] { (byte) -1, (short) 100, 'a', 0, 1, (-1.0d) };
        double double26 = variance18.evaluate(doubleArray25);
        variance18.setBiasCorrected(true);
        boolean boolean29 = variance18.isBiasCorrected();
        double[] doubleArray36 = new double[] { (short) 0, 1.0d, 1L, 0.0d, (-1.0d), 10L };
        double double37 = variance18.evaluate(doubleArray36);
        double double38 = variance1.evaluate(doubleArray36);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment40 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance41 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment40);
        double[] doubleArray42 = new double[] {};
        double double45 = variance41.evaluate(doubleArray42, 0, 0);
        boolean boolean47 = variance41.equals((java.lang.Object) 10.0f);
        boolean boolean48 = variance41.isBiasCorrected();
        variance41.clear();
        double[] doubleArray55 = new double[] { 10.0f, 10.0f, 1, 'a', (byte) 1 };
        double double56 = variance41.evaluate(doubleArray55);
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean57 = variance1.equals((java.lang.Object) variance41);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 2168.222222222222d + "'", double9 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 0L + "'", long10 == 0L);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 6.25d + "'", double15 == 6.25d);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[-1.0, 100.0, 97.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 2168.222222222222d + "'", double26 == 2168.222222222222d);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[0.0, 1.0, 1.0, 0.0, -1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 16.566666666666663d + "'", double37 == 16.566666666666663d);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 13.805555555555552d + "'", double38 == 13.805555555555552d);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double45));
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[10.0, 10.0, 1.0, 97.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 1694.7000000000003d + "'", double56 == 1694.7000000000003d);
    }
}

