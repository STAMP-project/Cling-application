import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class RegressionTest3 {

    public static boolean debug = false;

    @Test
    public void test1501() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1501");
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException1 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray2 = cardanEulerSingularityException1.getArguments();
        java.lang.Object[] objArray3 = cardanEulerSingularityException1.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException5 = new org.apache.commons.math.geometry.CardanEulerSingularityException(true);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException7 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        cardanEulerSingularityException5.addSuppressed((java.lang.Throwable) cardanEulerSingularityException7);
        cardanEulerSingularityException1.addSuppressed((java.lang.Throwable) cardanEulerSingularityException5);
        java.lang.Object[] objArray10 = cardanEulerSingularityException1.getArguments();
        java.lang.Throwable[] throwableArray11 = cardanEulerSingularityException1.getSuppressed();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException13 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray14 = cardanEulerSingularityException13.getArguments();
        java.lang.Object[] objArray15 = cardanEulerSingularityException13.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException17 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray18 = cardanEulerSingularityException17.getArguments();
        cardanEulerSingularityException13.addSuppressed((java.lang.Throwable) cardanEulerSingularityException17);
        java.lang.Throwable[] throwableArray20 = cardanEulerSingularityException17.getSuppressed();
        java.lang.String str21 = cardanEulerSingularityException17.getPattern();
        java.lang.Throwable[] throwableArray22 = cardanEulerSingularityException17.getSuppressed();
        java.lang.String str23 = cardanEulerSingularityException17.getPattern();
        cardanEulerSingularityException1.addSuppressed((java.lang.Throwable) cardanEulerSingularityException17);
        java.lang.String str25 = cardanEulerSingularityException1.toString();
        org.junit.Assert.assertNotNull(objArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray2), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray2), "[]");
        org.junit.Assert.assertNotNull(objArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray3), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray3), "[]");
        org.junit.Assert.assertNotNull(objArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray10), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray10), "[]");
        org.junit.Assert.assertNotNull(throwableArray11);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[]");
        org.junit.Assert.assertNotNull(objArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray15), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray15), "[]");
        org.junit.Assert.assertNotNull(objArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray18), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray18), "[]");
        org.junit.Assert.assertNotNull(throwableArray20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "Euler angles singularity" + "'", str21, "Euler angles singularity");
        org.junit.Assert.assertNotNull(throwableArray22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "Euler angles singularity" + "'", str23, "Euler angles singularity");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "org.apache.commons.math.geometry.CardanEulerSingularityException: Euler angles singularity" + "'", str25, "org.apache.commons.math.geometry.CardanEulerSingularityException: Euler angles singularity");
    }

    @Test
    public void test1502() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1502");
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException1 = new org.apache.commons.math.geometry.CardanEulerSingularityException(true);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException3 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        cardanEulerSingularityException1.addSuppressed((java.lang.Throwable) cardanEulerSingularityException3);
        java.lang.Throwable[] throwableArray5 = cardanEulerSingularityException1.getSuppressed();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException7 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray8 = cardanEulerSingularityException7.getArguments();
        java.lang.Throwable[] throwableArray9 = cardanEulerSingularityException7.getSuppressed();
        java.lang.Object[] objArray10 = cardanEulerSingularityException7.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException12 = new org.apache.commons.math.geometry.CardanEulerSingularityException(true);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException14 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        cardanEulerSingularityException12.addSuppressed((java.lang.Throwable) cardanEulerSingularityException14);
        java.lang.String str16 = cardanEulerSingularityException14.getPattern();
        java.lang.Throwable[] throwableArray17 = cardanEulerSingularityException14.getSuppressed();
        java.lang.String str18 = cardanEulerSingularityException14.getPattern();
        java.lang.Throwable[] throwableArray19 = cardanEulerSingularityException14.getSuppressed();
        java.lang.String str20 = cardanEulerSingularityException14.getPattern();
        cardanEulerSingularityException7.addSuppressed((java.lang.Throwable) cardanEulerSingularityException14);
        cardanEulerSingularityException1.addSuppressed((java.lang.Throwable) cardanEulerSingularityException14);
        java.lang.String str23 = cardanEulerSingularityException1.getPattern();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException25 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray26 = cardanEulerSingularityException25.getArguments();
        java.lang.String str27 = cardanEulerSingularityException25.getPattern();
        java.lang.Object[] objArray28 = cardanEulerSingularityException25.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException30 = new org.apache.commons.math.geometry.CardanEulerSingularityException(true);
        java.lang.Object[] objArray31 = cardanEulerSingularityException30.getArguments();
        java.lang.Object[] objArray32 = cardanEulerSingularityException30.getArguments();
        java.lang.String str33 = cardanEulerSingularityException30.getPattern();
        java.lang.String str34 = cardanEulerSingularityException30.getPattern();
        cardanEulerSingularityException25.addSuppressed((java.lang.Throwable) cardanEulerSingularityException30);
        java.lang.Throwable[] throwableArray36 = cardanEulerSingularityException30.getSuppressed();
        java.lang.Object[] objArray37 = cardanEulerSingularityException30.getArguments();
        cardanEulerSingularityException1.addSuppressed((java.lang.Throwable) cardanEulerSingularityException30);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException40 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray41 = cardanEulerSingularityException40.getArguments();
        java.lang.Object[] objArray42 = cardanEulerSingularityException40.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException44 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray45 = cardanEulerSingularityException44.getArguments();
        cardanEulerSingularityException40.addSuppressed((java.lang.Throwable) cardanEulerSingularityException44);
        java.lang.Throwable[] throwableArray47 = cardanEulerSingularityException44.getSuppressed();
        java.lang.Object[] objArray48 = cardanEulerSingularityException44.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException50 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray51 = cardanEulerSingularityException50.getArguments();
        java.lang.Object[] objArray52 = cardanEulerSingularityException50.getArguments();
        java.lang.Object[] objArray53 = cardanEulerSingularityException50.getArguments();
        cardanEulerSingularityException44.addSuppressed((java.lang.Throwable) cardanEulerSingularityException50);
        java.lang.Object[] objArray55 = cardanEulerSingularityException50.getArguments();
        java.lang.Throwable[] throwableArray56 = cardanEulerSingularityException50.getSuppressed();
        java.lang.Throwable[] throwableArray57 = cardanEulerSingularityException50.getSuppressed();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException59 = new org.apache.commons.math.geometry.CardanEulerSingularityException(true);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException61 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        cardanEulerSingularityException59.addSuppressed((java.lang.Throwable) cardanEulerSingularityException61);
        java.lang.Throwable[] throwableArray63 = cardanEulerSingularityException59.getSuppressed();
        java.lang.Throwable[] throwableArray64 = cardanEulerSingularityException59.getSuppressed();
        cardanEulerSingularityException50.addSuppressed((java.lang.Throwable) cardanEulerSingularityException59);
        java.lang.Throwable[] throwableArray66 = cardanEulerSingularityException59.getSuppressed();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException68 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray69 = cardanEulerSingularityException68.getArguments();
        java.lang.Object[] objArray70 = cardanEulerSingularityException68.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException72 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray73 = cardanEulerSingularityException72.getArguments();
        cardanEulerSingularityException68.addSuppressed((java.lang.Throwable) cardanEulerSingularityException72);
        java.lang.Throwable[] throwableArray75 = cardanEulerSingularityException72.getSuppressed();
        java.lang.Object[] objArray76 = cardanEulerSingularityException72.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException78 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray79 = cardanEulerSingularityException78.getArguments();
        java.lang.Object[] objArray80 = cardanEulerSingularityException78.getArguments();
        java.lang.Object[] objArray81 = cardanEulerSingularityException78.getArguments();
        cardanEulerSingularityException72.addSuppressed((java.lang.Throwable) cardanEulerSingularityException78);
        java.lang.Object[] objArray83 = cardanEulerSingularityException78.getArguments();
        java.lang.Throwable[] throwableArray84 = cardanEulerSingularityException78.getSuppressed();
        java.lang.Throwable[] throwableArray85 = cardanEulerSingularityException78.getSuppressed();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException87 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray88 = cardanEulerSingularityException87.getArguments();
        java.lang.Object[] objArray89 = cardanEulerSingularityException87.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException91 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray92 = cardanEulerSingularityException91.getArguments();
        cardanEulerSingularityException87.addSuppressed((java.lang.Throwable) cardanEulerSingularityException91);
        java.lang.Throwable[] throwableArray94 = cardanEulerSingularityException91.getSuppressed();
        cardanEulerSingularityException78.addSuppressed((java.lang.Throwable) cardanEulerSingularityException91);
        java.lang.Throwable[] throwableArray96 = cardanEulerSingularityException78.getSuppressed();
        cardanEulerSingularityException59.addSuppressed((java.lang.Throwable) cardanEulerSingularityException78);
        cardanEulerSingularityException30.addSuppressed((java.lang.Throwable) cardanEulerSingularityException59);
        java.lang.String str99 = cardanEulerSingularityException30.toString();
        org.junit.Assert.assertNotNull(throwableArray5);
        org.junit.Assert.assertNotNull(objArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray8), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray8), "[]");
        org.junit.Assert.assertNotNull(throwableArray9);
        org.junit.Assert.assertNotNull(objArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray10), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray10), "[]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "Euler angles singularity" + "'", str16, "Euler angles singularity");
        org.junit.Assert.assertNotNull(throwableArray17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "Euler angles singularity" + "'", str18, "Euler angles singularity");
        org.junit.Assert.assertNotNull(throwableArray19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "Euler angles singularity" + "'", str20, "Euler angles singularity");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "Cardan angles singularity" + "'", str23, "Cardan angles singularity");
        org.junit.Assert.assertNotNull(objArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray26), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray26), "[]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "Euler angles singularity" + "'", str27, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray28), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray28), "[]");
        org.junit.Assert.assertNotNull(objArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray31), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray31), "[]");
        org.junit.Assert.assertNotNull(objArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray32), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray32), "[]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "Cardan angles singularity" + "'", str33, "Cardan angles singularity");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "Cardan angles singularity" + "'", str34, "Cardan angles singularity");
        org.junit.Assert.assertNotNull(throwableArray36);
        org.junit.Assert.assertNotNull(objArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray37), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray37), "[]");
        org.junit.Assert.assertNotNull(objArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray41), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray41), "[]");
        org.junit.Assert.assertNotNull(objArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray42), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray42), "[]");
        org.junit.Assert.assertNotNull(objArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray45), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray45), "[]");
        org.junit.Assert.assertNotNull(throwableArray47);
        org.junit.Assert.assertNotNull(objArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray48), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray48), "[]");
        org.junit.Assert.assertNotNull(objArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray51), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray51), "[]");
        org.junit.Assert.assertNotNull(objArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray52), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray52), "[]");
        org.junit.Assert.assertNotNull(objArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray53), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray53), "[]");
        org.junit.Assert.assertNotNull(objArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray55), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray55), "[]");
        org.junit.Assert.assertNotNull(throwableArray56);
        org.junit.Assert.assertNotNull(throwableArray57);
        org.junit.Assert.assertNotNull(throwableArray63);
        org.junit.Assert.assertNotNull(throwableArray64);
        org.junit.Assert.assertNotNull(throwableArray66);
        org.junit.Assert.assertNotNull(objArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray69), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray69), "[]");
        org.junit.Assert.assertNotNull(objArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray70), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray70), "[]");
        org.junit.Assert.assertNotNull(objArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray73), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray73), "[]");
        org.junit.Assert.assertNotNull(throwableArray75);
        org.junit.Assert.assertNotNull(objArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray76), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray76), "[]");
        org.junit.Assert.assertNotNull(objArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray79), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray79), "[]");
        org.junit.Assert.assertNotNull(objArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray80), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray80), "[]");
        org.junit.Assert.assertNotNull(objArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray81), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray81), "[]");
        org.junit.Assert.assertNotNull(objArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray83), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray83), "[]");
        org.junit.Assert.assertNotNull(throwableArray84);
        org.junit.Assert.assertNotNull(throwableArray85);
        org.junit.Assert.assertNotNull(objArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray88), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray88), "[]");
        org.junit.Assert.assertNotNull(objArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray89), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray89), "[]");
        org.junit.Assert.assertNotNull(objArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray92), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray92), "[]");
        org.junit.Assert.assertNotNull(throwableArray94);
        org.junit.Assert.assertNotNull(throwableArray96);
        org.junit.Assert.assertEquals("'" + str99 + "' != '" + "org.apache.commons.math.geometry.CardanEulerSingularityException: Cardan angles singularity" + "'", str99, "org.apache.commons.math.geometry.CardanEulerSingularityException: Cardan angles singularity");
    }

    @Test
    public void test1503() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1503");
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException1 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.String str2 = cardanEulerSingularityException1.getPattern();
        java.lang.Object[] objArray3 = cardanEulerSingularityException1.getArguments();
        java.lang.String str4 = cardanEulerSingularityException1.getPattern();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException6 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.String str7 = cardanEulerSingularityException6.getPattern();
        java.lang.Throwable[] throwableArray8 = cardanEulerSingularityException6.getSuppressed();
        cardanEulerSingularityException1.addSuppressed((java.lang.Throwable) cardanEulerSingularityException6);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException11 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.String str12 = cardanEulerSingularityException11.getPattern();
        java.lang.Object[] objArray13 = cardanEulerSingularityException11.getArguments();
        java.lang.String str14 = cardanEulerSingularityException11.getPattern();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException16 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.String str17 = cardanEulerSingularityException16.getPattern();
        java.lang.Throwable[] throwableArray18 = cardanEulerSingularityException16.getSuppressed();
        cardanEulerSingularityException11.addSuppressed((java.lang.Throwable) cardanEulerSingularityException16);
        cardanEulerSingularityException1.addSuppressed((java.lang.Throwable) cardanEulerSingularityException11);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException22 = new org.apache.commons.math.geometry.CardanEulerSingularityException(true);
        cardanEulerSingularityException1.addSuppressed((java.lang.Throwable) cardanEulerSingularityException22);
        java.lang.Object[] objArray24 = cardanEulerSingularityException1.getArguments();
        java.lang.Throwable[] throwableArray25 = cardanEulerSingularityException1.getSuppressed();
        java.lang.String str26 = cardanEulerSingularityException1.getPattern();
        java.lang.String str27 = cardanEulerSingularityException1.getPattern();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException29 = new org.apache.commons.math.geometry.CardanEulerSingularityException(true);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException31 = new org.apache.commons.math.geometry.CardanEulerSingularityException(true);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException33 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        cardanEulerSingularityException31.addSuppressed((java.lang.Throwable) cardanEulerSingularityException33);
        java.lang.String str35 = cardanEulerSingularityException33.getPattern();
        java.lang.String str36 = cardanEulerSingularityException33.getPattern();
        cardanEulerSingularityException29.addSuppressed((java.lang.Throwable) cardanEulerSingularityException33);
        java.lang.Object[] objArray38 = cardanEulerSingularityException33.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException40 = new org.apache.commons.math.geometry.CardanEulerSingularityException(true);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException42 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        cardanEulerSingularityException40.addSuppressed((java.lang.Throwable) cardanEulerSingularityException42);
        java.lang.Throwable[] throwableArray44 = cardanEulerSingularityException40.getSuppressed();
        java.lang.Throwable[] throwableArray45 = cardanEulerSingularityException40.getSuppressed();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException47 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.String str48 = cardanEulerSingularityException47.getPattern();
        cardanEulerSingularityException40.addSuppressed((java.lang.Throwable) cardanEulerSingularityException47);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException51 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray52 = cardanEulerSingularityException51.getArguments();
        java.lang.Throwable[] throwableArray53 = cardanEulerSingularityException51.getSuppressed();
        java.lang.String str54 = cardanEulerSingularityException51.getPattern();
        java.lang.Throwable[] throwableArray55 = cardanEulerSingularityException51.getSuppressed();
        java.lang.String str56 = cardanEulerSingularityException51.getPattern();
        java.lang.Throwable[] throwableArray57 = cardanEulerSingularityException51.getSuppressed();
        cardanEulerSingularityException40.addSuppressed((java.lang.Throwable) cardanEulerSingularityException51);
        cardanEulerSingularityException33.addSuppressed((java.lang.Throwable) cardanEulerSingularityException40);
        cardanEulerSingularityException1.addSuppressed((java.lang.Throwable) cardanEulerSingularityException33);
        java.lang.Object[] objArray61 = cardanEulerSingularityException33.getArguments();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "Euler angles singularity" + "'", str2, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray3), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray3), "[]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Euler angles singularity" + "'", str4, "Euler angles singularity");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Euler angles singularity" + "'", str7, "Euler angles singularity");
        org.junit.Assert.assertNotNull(throwableArray8);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Euler angles singularity" + "'", str12, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray13), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray13), "[]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "Euler angles singularity" + "'", str14, "Euler angles singularity");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "Euler angles singularity" + "'", str17, "Euler angles singularity");
        org.junit.Assert.assertNotNull(throwableArray18);
        org.junit.Assert.assertNotNull(objArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray24), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray24), "[]");
        org.junit.Assert.assertNotNull(throwableArray25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "Euler angles singularity" + "'", str26, "Euler angles singularity");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "Euler angles singularity" + "'", str27, "Euler angles singularity");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "Euler angles singularity" + "'", str35, "Euler angles singularity");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "Euler angles singularity" + "'", str36, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray38), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray38), "[]");
        org.junit.Assert.assertNotNull(throwableArray44);
        org.junit.Assert.assertNotNull(throwableArray45);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "Euler angles singularity" + "'", str48, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray52), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray52), "[]");
        org.junit.Assert.assertNotNull(throwableArray53);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "Euler angles singularity" + "'", str54, "Euler angles singularity");
        org.junit.Assert.assertNotNull(throwableArray55);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "Euler angles singularity" + "'", str56, "Euler angles singularity");
        org.junit.Assert.assertNotNull(throwableArray57);
        org.junit.Assert.assertNotNull(objArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray61), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray61), "[]");
    }

    @Test
    public void test1504() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1504");
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException1 = new org.apache.commons.math.geometry.CardanEulerSingularityException(true);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException3 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        cardanEulerSingularityException1.addSuppressed((java.lang.Throwable) cardanEulerSingularityException3);
        java.lang.Throwable[] throwableArray5 = cardanEulerSingularityException1.getSuppressed();
        java.lang.Throwable[] throwableArray6 = cardanEulerSingularityException1.getSuppressed();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException8 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.String str9 = cardanEulerSingularityException8.getPattern();
        java.lang.Object[] objArray10 = cardanEulerSingularityException8.getArguments();
        java.lang.String str11 = cardanEulerSingularityException8.getPattern();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException13 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.String str14 = cardanEulerSingularityException13.getPattern();
        java.lang.Throwable[] throwableArray15 = cardanEulerSingularityException13.getSuppressed();
        cardanEulerSingularityException8.addSuppressed((java.lang.Throwable) cardanEulerSingularityException13);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException18 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.String str19 = cardanEulerSingularityException18.getPattern();
        java.lang.Object[] objArray20 = cardanEulerSingularityException18.getArguments();
        java.lang.String str21 = cardanEulerSingularityException18.getPattern();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException23 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.String str24 = cardanEulerSingularityException23.getPattern();
        java.lang.Throwable[] throwableArray25 = cardanEulerSingularityException23.getSuppressed();
        cardanEulerSingularityException18.addSuppressed((java.lang.Throwable) cardanEulerSingularityException23);
        cardanEulerSingularityException8.addSuppressed((java.lang.Throwable) cardanEulerSingularityException18);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException29 = new org.apache.commons.math.geometry.CardanEulerSingularityException(true);
        cardanEulerSingularityException8.addSuppressed((java.lang.Throwable) cardanEulerSingularityException29);
        cardanEulerSingularityException1.addSuppressed((java.lang.Throwable) cardanEulerSingularityException8);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException33 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray34 = cardanEulerSingularityException33.getArguments();
        java.lang.String str35 = cardanEulerSingularityException33.getPattern();
        java.lang.Object[] objArray36 = cardanEulerSingularityException33.getArguments();
        java.lang.Object[] objArray37 = cardanEulerSingularityException33.getArguments();
        java.lang.Object[] objArray38 = cardanEulerSingularityException33.getArguments();
        cardanEulerSingularityException1.addSuppressed((java.lang.Throwable) cardanEulerSingularityException33);
        java.lang.String str40 = cardanEulerSingularityException1.getPattern();
        org.junit.Assert.assertNotNull(throwableArray5);
        org.junit.Assert.assertNotNull(throwableArray6);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Euler angles singularity" + "'", str9, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray10), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray10), "[]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Euler angles singularity" + "'", str11, "Euler angles singularity");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "Euler angles singularity" + "'", str14, "Euler angles singularity");
        org.junit.Assert.assertNotNull(throwableArray15);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "Euler angles singularity" + "'", str19, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray20), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray20), "[]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "Euler angles singularity" + "'", str21, "Euler angles singularity");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "Euler angles singularity" + "'", str24, "Euler angles singularity");
        org.junit.Assert.assertNotNull(throwableArray25);
        org.junit.Assert.assertNotNull(objArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray34), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray34), "[]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "Euler angles singularity" + "'", str35, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray36), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray36), "[]");
        org.junit.Assert.assertNotNull(objArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray37), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray37), "[]");
        org.junit.Assert.assertNotNull(objArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray38), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray38), "[]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "Cardan angles singularity" + "'", str40, "Cardan angles singularity");
    }

    @Test
    public void test1505() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1505");
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException1 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.String str2 = cardanEulerSingularityException1.getPattern();
        java.lang.Object[] objArray3 = cardanEulerSingularityException1.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException5 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.String str6 = cardanEulerSingularityException5.getPattern();
        java.lang.Throwable[] throwableArray7 = cardanEulerSingularityException5.getSuppressed();
        cardanEulerSingularityException1.addSuppressed((java.lang.Throwable) cardanEulerSingularityException5);
        java.lang.String str9 = cardanEulerSingularityException1.getPattern();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException11 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray12 = cardanEulerSingularityException11.getArguments();
        java.lang.Object[] objArray13 = cardanEulerSingularityException11.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException15 = new org.apache.commons.math.geometry.CardanEulerSingularityException(true);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException17 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        cardanEulerSingularityException15.addSuppressed((java.lang.Throwable) cardanEulerSingularityException17);
        cardanEulerSingularityException11.addSuppressed((java.lang.Throwable) cardanEulerSingularityException15);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException21 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray22 = cardanEulerSingularityException21.getArguments();
        java.lang.String str23 = cardanEulerSingularityException21.getPattern();
        java.lang.Object[] objArray24 = cardanEulerSingularityException21.getArguments();
        java.lang.Object[] objArray25 = cardanEulerSingularityException21.getArguments();
        cardanEulerSingularityException15.addSuppressed((java.lang.Throwable) cardanEulerSingularityException21);
        java.lang.String str27 = cardanEulerSingularityException15.getPattern();
        cardanEulerSingularityException1.addSuppressed((java.lang.Throwable) cardanEulerSingularityException15);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException30 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray31 = cardanEulerSingularityException30.getArguments();
        java.lang.Object[] objArray32 = cardanEulerSingularityException30.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException34 = new org.apache.commons.math.geometry.CardanEulerSingularityException(true);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException36 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        cardanEulerSingularityException34.addSuppressed((java.lang.Throwable) cardanEulerSingularityException36);
        cardanEulerSingularityException30.addSuppressed((java.lang.Throwable) cardanEulerSingularityException34);
        java.lang.Object[] objArray39 = cardanEulerSingularityException30.getArguments();
        java.lang.Throwable[] throwableArray40 = cardanEulerSingularityException30.getSuppressed();
        cardanEulerSingularityException15.addSuppressed((java.lang.Throwable) cardanEulerSingularityException30);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException43 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray44 = cardanEulerSingularityException43.getArguments();
        java.lang.Throwable[] throwableArray45 = cardanEulerSingularityException43.getSuppressed();
        java.lang.String str46 = cardanEulerSingularityException43.getPattern();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException48 = new org.apache.commons.math.geometry.CardanEulerSingularityException(true);
        java.lang.String str49 = cardanEulerSingularityException48.getPattern();
        cardanEulerSingularityException43.addSuppressed((java.lang.Throwable) cardanEulerSingularityException48);
        java.lang.Object[] objArray51 = cardanEulerSingularityException48.getArguments();
        java.lang.Throwable[] throwableArray52 = cardanEulerSingularityException48.getSuppressed();
        cardanEulerSingularityException30.addSuppressed((java.lang.Throwable) cardanEulerSingularityException48);
        java.lang.String str54 = cardanEulerSingularityException48.toString();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "Euler angles singularity" + "'", str2, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray3), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray3), "[]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "Euler angles singularity" + "'", str6, "Euler angles singularity");
        org.junit.Assert.assertNotNull(throwableArray7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Euler angles singularity" + "'", str9, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray12), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray12), "[]");
        org.junit.Assert.assertNotNull(objArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray13), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray13), "[]");
        org.junit.Assert.assertNotNull(objArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray22), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray22), "[]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "Euler angles singularity" + "'", str23, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray24), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray24), "[]");
        org.junit.Assert.assertNotNull(objArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray25), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray25), "[]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "Cardan angles singularity" + "'", str27, "Cardan angles singularity");
        org.junit.Assert.assertNotNull(objArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray31), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray31), "[]");
        org.junit.Assert.assertNotNull(objArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray32), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray32), "[]");
        org.junit.Assert.assertNotNull(objArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray39), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray39), "[]");
        org.junit.Assert.assertNotNull(throwableArray40);
        org.junit.Assert.assertNotNull(objArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray44), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray44), "[]");
        org.junit.Assert.assertNotNull(throwableArray45);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "Euler angles singularity" + "'", str46, "Euler angles singularity");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "Cardan angles singularity" + "'", str49, "Cardan angles singularity");
        org.junit.Assert.assertNotNull(objArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray51), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray51), "[]");
        org.junit.Assert.assertNotNull(throwableArray52);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "org.apache.commons.math.geometry.CardanEulerSingularityException: Cardan angles singularity" + "'", str54, "org.apache.commons.math.geometry.CardanEulerSingularityException: Cardan angles singularity");
    }

    @Test
    public void test1506() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1506");
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException1 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray2 = cardanEulerSingularityException1.getArguments();
        java.lang.Object[] objArray3 = cardanEulerSingularityException1.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException5 = new org.apache.commons.math.geometry.CardanEulerSingularityException(true);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException7 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        cardanEulerSingularityException5.addSuppressed((java.lang.Throwable) cardanEulerSingularityException7);
        cardanEulerSingularityException1.addSuppressed((java.lang.Throwable) cardanEulerSingularityException5);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException11 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray12 = cardanEulerSingularityException11.getArguments();
        java.lang.String str13 = cardanEulerSingularityException11.getPattern();
        java.lang.Object[] objArray14 = cardanEulerSingularityException11.getArguments();
        java.lang.Object[] objArray15 = cardanEulerSingularityException11.getArguments();
        cardanEulerSingularityException5.addSuppressed((java.lang.Throwable) cardanEulerSingularityException11);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException18 = new org.apache.commons.math.geometry.CardanEulerSingularityException(true);
        java.lang.Object[] objArray19 = cardanEulerSingularityException18.getArguments();
        java.lang.Throwable[] throwableArray20 = cardanEulerSingularityException18.getSuppressed();
        java.lang.String str21 = cardanEulerSingularityException18.getPattern();
        java.lang.Object[] objArray22 = cardanEulerSingularityException18.getArguments();
        java.lang.Throwable[] throwableArray23 = cardanEulerSingularityException18.getSuppressed();
        cardanEulerSingularityException5.addSuppressed((java.lang.Throwable) cardanEulerSingularityException18);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException26 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray27 = cardanEulerSingularityException26.getArguments();
        java.lang.Throwable[] throwableArray28 = cardanEulerSingularityException26.getSuppressed();
        java.lang.String str29 = cardanEulerSingularityException26.getPattern();
        java.lang.String str30 = cardanEulerSingularityException26.getPattern();
        cardanEulerSingularityException5.addSuppressed((java.lang.Throwable) cardanEulerSingularityException26);
        java.lang.Object[] objArray32 = cardanEulerSingularityException5.getArguments();
        org.junit.Assert.assertNotNull(objArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray2), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray2), "[]");
        org.junit.Assert.assertNotNull(objArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray3), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray3), "[]");
        org.junit.Assert.assertNotNull(objArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray12), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray12), "[]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Euler angles singularity" + "'", str13, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[]");
        org.junit.Assert.assertNotNull(objArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray15), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray15), "[]");
        org.junit.Assert.assertNotNull(objArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray19), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray19), "[]");
        org.junit.Assert.assertNotNull(throwableArray20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "Cardan angles singularity" + "'", str21, "Cardan angles singularity");
        org.junit.Assert.assertNotNull(objArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray22), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray22), "[]");
        org.junit.Assert.assertNotNull(throwableArray23);
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray27), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray27), "[]");
        org.junit.Assert.assertNotNull(throwableArray28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "Euler angles singularity" + "'", str29, "Euler angles singularity");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "Euler angles singularity" + "'", str30, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray32), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray32), "[]");
    }

    @Test
    public void test1507() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1507");
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException1 = new org.apache.commons.math.geometry.CardanEulerSingularityException(true);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException3 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        cardanEulerSingularityException1.addSuppressed((java.lang.Throwable) cardanEulerSingularityException3);
        java.lang.String str5 = cardanEulerSingularityException3.getPattern();
        java.lang.Throwable[] throwableArray6 = cardanEulerSingularityException3.getSuppressed();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException8 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.String str9 = cardanEulerSingularityException8.getPattern();
        java.lang.Object[] objArray10 = cardanEulerSingularityException8.getArguments();
        java.lang.String str11 = cardanEulerSingularityException8.getPattern();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException13 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.String str14 = cardanEulerSingularityException13.getPattern();
        java.lang.Throwable[] throwableArray15 = cardanEulerSingularityException13.getSuppressed();
        cardanEulerSingularityException8.addSuppressed((java.lang.Throwable) cardanEulerSingularityException13);
        cardanEulerSingularityException3.addSuppressed((java.lang.Throwable) cardanEulerSingularityException13);
        java.lang.Object[] objArray18 = cardanEulerSingularityException13.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException20 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray21 = cardanEulerSingularityException20.getArguments();
        java.lang.Object[] objArray22 = cardanEulerSingularityException20.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException24 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray25 = cardanEulerSingularityException24.getArguments();
        cardanEulerSingularityException20.addSuppressed((java.lang.Throwable) cardanEulerSingularityException24);
        java.lang.Throwable[] throwableArray27 = cardanEulerSingularityException20.getSuppressed();
        java.lang.String str28 = cardanEulerSingularityException20.getPattern();
        java.lang.Object[] objArray29 = cardanEulerSingularityException20.getArguments();
        java.lang.Object[] objArray30 = cardanEulerSingularityException20.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException32 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray33 = cardanEulerSingularityException32.getArguments();
        java.lang.String str34 = cardanEulerSingularityException32.getPattern();
        java.lang.Object[] objArray35 = cardanEulerSingularityException32.getArguments();
        cardanEulerSingularityException20.addSuppressed((java.lang.Throwable) cardanEulerSingularityException32);
        cardanEulerSingularityException13.addSuppressed((java.lang.Throwable) cardanEulerSingularityException32);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException39 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray40 = cardanEulerSingularityException39.getArguments();
        java.lang.String str41 = cardanEulerSingularityException39.getPattern();
        java.lang.Object[] objArray42 = cardanEulerSingularityException39.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException44 = new org.apache.commons.math.geometry.CardanEulerSingularityException(true);
        java.lang.Object[] objArray45 = cardanEulerSingularityException44.getArguments();
        java.lang.Object[] objArray46 = cardanEulerSingularityException44.getArguments();
        java.lang.String str47 = cardanEulerSingularityException44.getPattern();
        java.lang.String str48 = cardanEulerSingularityException44.getPattern();
        cardanEulerSingularityException39.addSuppressed((java.lang.Throwable) cardanEulerSingularityException44);
        java.lang.Throwable[] throwableArray50 = cardanEulerSingularityException44.getSuppressed();
        java.lang.Object[] objArray51 = cardanEulerSingularityException44.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException53 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.String str54 = cardanEulerSingularityException53.getPattern();
        java.lang.Object[] objArray55 = cardanEulerSingularityException53.getArguments();
        java.lang.String str56 = cardanEulerSingularityException53.getPattern();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException58 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.String str59 = cardanEulerSingularityException58.getPattern();
        java.lang.Throwable[] throwableArray60 = cardanEulerSingularityException58.getSuppressed();
        cardanEulerSingularityException53.addSuppressed((java.lang.Throwable) cardanEulerSingularityException58);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException63 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.String str64 = cardanEulerSingularityException63.getPattern();
        java.lang.Object[] objArray65 = cardanEulerSingularityException63.getArguments();
        java.lang.String str66 = cardanEulerSingularityException63.getPattern();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException68 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.String str69 = cardanEulerSingularityException68.getPattern();
        java.lang.Throwable[] throwableArray70 = cardanEulerSingularityException68.getSuppressed();
        cardanEulerSingularityException63.addSuppressed((java.lang.Throwable) cardanEulerSingularityException68);
        cardanEulerSingularityException53.addSuppressed((java.lang.Throwable) cardanEulerSingularityException63);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException74 = new org.apache.commons.math.geometry.CardanEulerSingularityException(true);
        cardanEulerSingularityException53.addSuppressed((java.lang.Throwable) cardanEulerSingularityException74);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException77 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray78 = cardanEulerSingularityException77.getArguments();
        java.lang.Object[] objArray79 = cardanEulerSingularityException77.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException81 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray82 = cardanEulerSingularityException81.getArguments();
        cardanEulerSingularityException77.addSuppressed((java.lang.Throwable) cardanEulerSingularityException81);
        java.lang.Object[] objArray84 = cardanEulerSingularityException81.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException86 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray87 = cardanEulerSingularityException86.getArguments();
        java.lang.Throwable[] throwableArray88 = cardanEulerSingularityException86.getSuppressed();
        java.lang.String str89 = cardanEulerSingularityException86.getPattern();
        cardanEulerSingularityException81.addSuppressed((java.lang.Throwable) cardanEulerSingularityException86);
        java.lang.Object[] objArray91 = cardanEulerSingularityException86.getArguments();
        cardanEulerSingularityException53.addSuppressed((java.lang.Throwable) cardanEulerSingularityException86);
        java.lang.Object[] objArray93 = cardanEulerSingularityException53.getArguments();
        cardanEulerSingularityException44.addSuppressed((java.lang.Throwable) cardanEulerSingularityException53);
        java.lang.String str95 = cardanEulerSingularityException44.getPattern();
        cardanEulerSingularityException13.addSuppressed((java.lang.Throwable) cardanEulerSingularityException44);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Euler angles singularity" + "'", str5, "Euler angles singularity");
        org.junit.Assert.assertNotNull(throwableArray6);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Euler angles singularity" + "'", str9, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray10), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray10), "[]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Euler angles singularity" + "'", str11, "Euler angles singularity");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "Euler angles singularity" + "'", str14, "Euler angles singularity");
        org.junit.Assert.assertNotNull(throwableArray15);
        org.junit.Assert.assertNotNull(objArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray18), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray18), "[]");
        org.junit.Assert.assertNotNull(objArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray21), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray21), "[]");
        org.junit.Assert.assertNotNull(objArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray22), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray22), "[]");
        org.junit.Assert.assertNotNull(objArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray25), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray25), "[]");
        org.junit.Assert.assertNotNull(throwableArray27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "Euler angles singularity" + "'", str28, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray29), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray29), "[]");
        org.junit.Assert.assertNotNull(objArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray30), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray30), "[]");
        org.junit.Assert.assertNotNull(objArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray33), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray33), "[]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "Euler angles singularity" + "'", str34, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray35), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray35), "[]");
        org.junit.Assert.assertNotNull(objArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray40), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray40), "[]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "Euler angles singularity" + "'", str41, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray42), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray42), "[]");
        org.junit.Assert.assertNotNull(objArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray45), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray45), "[]");
        org.junit.Assert.assertNotNull(objArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray46), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray46), "[]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "Cardan angles singularity" + "'", str47, "Cardan angles singularity");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "Cardan angles singularity" + "'", str48, "Cardan angles singularity");
        org.junit.Assert.assertNotNull(throwableArray50);
        org.junit.Assert.assertNotNull(objArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray51), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray51), "[]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "Euler angles singularity" + "'", str54, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray55), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray55), "[]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "Euler angles singularity" + "'", str56, "Euler angles singularity");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "Euler angles singularity" + "'", str59, "Euler angles singularity");
        org.junit.Assert.assertNotNull(throwableArray60);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "Euler angles singularity" + "'", str64, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray65), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray65), "[]");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "Euler angles singularity" + "'", str66, "Euler angles singularity");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "Euler angles singularity" + "'", str69, "Euler angles singularity");
        org.junit.Assert.assertNotNull(throwableArray70);
        org.junit.Assert.assertNotNull(objArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray78), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray78), "[]");
        org.junit.Assert.assertNotNull(objArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray79), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray79), "[]");
        org.junit.Assert.assertNotNull(objArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray82), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray82), "[]");
        org.junit.Assert.assertNotNull(objArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray84), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray84), "[]");
        org.junit.Assert.assertNotNull(objArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray87), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray87), "[]");
        org.junit.Assert.assertNotNull(throwableArray88);
        org.junit.Assert.assertEquals("'" + str89 + "' != '" + "Euler angles singularity" + "'", str89, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray91), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray91), "[]");
        org.junit.Assert.assertNotNull(objArray93);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray93), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray93), "[]");
        org.junit.Assert.assertEquals("'" + str95 + "' != '" + "Cardan angles singularity" + "'", str95, "Cardan angles singularity");
    }

    @Test
    public void test1508() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1508");
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException1 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray2 = cardanEulerSingularityException1.getArguments();
        java.lang.Object[] objArray3 = cardanEulerSingularityException1.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException5 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.String str6 = cardanEulerSingularityException5.getPattern();
        java.lang.Object[] objArray7 = cardanEulerSingularityException5.getArguments();
        java.lang.String str8 = cardanEulerSingularityException5.getPattern();
        java.lang.String str9 = cardanEulerSingularityException5.getPattern();
        java.lang.Object[] objArray10 = cardanEulerSingularityException5.getArguments();
        cardanEulerSingularityException1.addSuppressed((java.lang.Throwable) cardanEulerSingularityException5);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException13 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray14 = cardanEulerSingularityException13.getArguments();
        java.lang.String str15 = cardanEulerSingularityException13.getPattern();
        java.lang.Object[] objArray16 = cardanEulerSingularityException13.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException18 = new org.apache.commons.math.geometry.CardanEulerSingularityException(true);
        java.lang.Object[] objArray19 = cardanEulerSingularityException18.getArguments();
        java.lang.Object[] objArray20 = cardanEulerSingularityException18.getArguments();
        cardanEulerSingularityException13.addSuppressed((java.lang.Throwable) cardanEulerSingularityException18);
        java.lang.String str22 = cardanEulerSingularityException13.getPattern();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException24 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray25 = cardanEulerSingularityException24.getArguments();
        java.lang.Object[] objArray26 = cardanEulerSingularityException24.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException28 = new org.apache.commons.math.geometry.CardanEulerSingularityException(true);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException30 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        cardanEulerSingularityException28.addSuppressed((java.lang.Throwable) cardanEulerSingularityException30);
        cardanEulerSingularityException24.addSuppressed((java.lang.Throwable) cardanEulerSingularityException28);
        java.lang.String str33 = cardanEulerSingularityException24.getPattern();
        cardanEulerSingularityException13.addSuppressed((java.lang.Throwable) cardanEulerSingularityException24);
        java.lang.Object[] objArray35 = cardanEulerSingularityException13.getArguments();
        java.lang.Throwable[] throwableArray36 = cardanEulerSingularityException13.getSuppressed();
        java.lang.Throwable[] throwableArray37 = cardanEulerSingularityException13.getSuppressed();
        cardanEulerSingularityException1.addSuppressed((java.lang.Throwable) cardanEulerSingularityException13);
        java.lang.Throwable[] throwableArray39 = cardanEulerSingularityException13.getSuppressed();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException41 = new org.apache.commons.math.geometry.CardanEulerSingularityException(true);
        java.lang.Object[] objArray42 = cardanEulerSingularityException41.getArguments();
        java.lang.Throwable[] throwableArray43 = cardanEulerSingularityException41.getSuppressed();
        java.lang.Throwable[] throwableArray44 = cardanEulerSingularityException41.getSuppressed();
        java.lang.Throwable[] throwableArray45 = cardanEulerSingularityException41.getSuppressed();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException47 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray48 = cardanEulerSingularityException47.getArguments();
        java.lang.Object[] objArray49 = cardanEulerSingularityException47.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException51 = new org.apache.commons.math.geometry.CardanEulerSingularityException(true);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException53 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        cardanEulerSingularityException51.addSuppressed((java.lang.Throwable) cardanEulerSingularityException53);
        cardanEulerSingularityException47.addSuppressed((java.lang.Throwable) cardanEulerSingularityException51);
        cardanEulerSingularityException41.addSuppressed((java.lang.Throwable) cardanEulerSingularityException47);
        java.lang.Object[] objArray57 = cardanEulerSingularityException41.getArguments();
        java.lang.String str58 = cardanEulerSingularityException41.getPattern();
        cardanEulerSingularityException13.addSuppressed((java.lang.Throwable) cardanEulerSingularityException41);
        java.lang.Class<?> wildcardClass60 = cardanEulerSingularityException13.getClass();
        org.junit.Assert.assertNotNull(objArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray2), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray2), "[]");
        org.junit.Assert.assertNotNull(objArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray3), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray3), "[]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "Euler angles singularity" + "'", str6, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray7), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray7), "[]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Euler angles singularity" + "'", str8, "Euler angles singularity");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Euler angles singularity" + "'", str9, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray10), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray10), "[]");
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Euler angles singularity" + "'", str15, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray16), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray16), "[]");
        org.junit.Assert.assertNotNull(objArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray19), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray19), "[]");
        org.junit.Assert.assertNotNull(objArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray20), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray20), "[]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "Euler angles singularity" + "'", str22, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray25), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray25), "[]");
        org.junit.Assert.assertNotNull(objArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray26), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray26), "[]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "Euler angles singularity" + "'", str33, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray35), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray35), "[]");
        org.junit.Assert.assertNotNull(throwableArray36);
        org.junit.Assert.assertNotNull(throwableArray37);
        org.junit.Assert.assertNotNull(throwableArray39);
        org.junit.Assert.assertNotNull(objArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray42), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray42), "[]");
        org.junit.Assert.assertNotNull(throwableArray43);
        org.junit.Assert.assertNotNull(throwableArray44);
        org.junit.Assert.assertNotNull(throwableArray45);
        org.junit.Assert.assertNotNull(objArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray48), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray48), "[]");
        org.junit.Assert.assertNotNull(objArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray49), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray49), "[]");
        org.junit.Assert.assertNotNull(objArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray57), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray57), "[]");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "Cardan angles singularity" + "'", str58, "Cardan angles singularity");
        org.junit.Assert.assertNotNull(wildcardClass60);
    }

    @Test
    public void test1509() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1509");
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException1 = new org.apache.commons.math.geometry.CardanEulerSingularityException(true);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException3 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        cardanEulerSingularityException1.addSuppressed((java.lang.Throwable) cardanEulerSingularityException3);
        java.lang.Throwable[] throwableArray5 = cardanEulerSingularityException1.getSuppressed();
        java.lang.Throwable[] throwableArray6 = cardanEulerSingularityException1.getSuppressed();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException8 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.String str9 = cardanEulerSingularityException8.getPattern();
        java.lang.Object[] objArray10 = cardanEulerSingularityException8.getArguments();
        java.lang.String str11 = cardanEulerSingularityException8.getPattern();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException13 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.String str14 = cardanEulerSingularityException13.getPattern();
        java.lang.Throwable[] throwableArray15 = cardanEulerSingularityException13.getSuppressed();
        cardanEulerSingularityException8.addSuppressed((java.lang.Throwable) cardanEulerSingularityException13);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException18 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.String str19 = cardanEulerSingularityException18.getPattern();
        java.lang.Object[] objArray20 = cardanEulerSingularityException18.getArguments();
        java.lang.String str21 = cardanEulerSingularityException18.getPattern();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException23 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.String str24 = cardanEulerSingularityException23.getPattern();
        java.lang.Throwable[] throwableArray25 = cardanEulerSingularityException23.getSuppressed();
        cardanEulerSingularityException18.addSuppressed((java.lang.Throwable) cardanEulerSingularityException23);
        cardanEulerSingularityException8.addSuppressed((java.lang.Throwable) cardanEulerSingularityException18);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException29 = new org.apache.commons.math.geometry.CardanEulerSingularityException(true);
        cardanEulerSingularityException8.addSuppressed((java.lang.Throwable) cardanEulerSingularityException29);
        cardanEulerSingularityException1.addSuppressed((java.lang.Throwable) cardanEulerSingularityException8);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException33 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray34 = cardanEulerSingularityException33.getArguments();
        java.lang.Object[] objArray35 = cardanEulerSingularityException33.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException37 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray38 = cardanEulerSingularityException37.getArguments();
        cardanEulerSingularityException33.addSuppressed((java.lang.Throwable) cardanEulerSingularityException37);
        java.lang.Throwable[] throwableArray40 = cardanEulerSingularityException37.getSuppressed();
        java.lang.String str41 = cardanEulerSingularityException37.getPattern();
        java.lang.Throwable[] throwableArray42 = cardanEulerSingularityException37.getSuppressed();
        java.lang.Throwable[] throwableArray43 = cardanEulerSingularityException37.getSuppressed();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException45 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray46 = cardanEulerSingularityException45.getArguments();
        java.lang.Object[] objArray47 = cardanEulerSingularityException45.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException49 = new org.apache.commons.math.geometry.CardanEulerSingularityException(true);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException51 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        cardanEulerSingularityException49.addSuppressed((java.lang.Throwable) cardanEulerSingularityException51);
        cardanEulerSingularityException45.addSuppressed((java.lang.Throwable) cardanEulerSingularityException49);
        java.lang.Object[] objArray54 = cardanEulerSingularityException45.getArguments();
        cardanEulerSingularityException37.addSuppressed((java.lang.Throwable) cardanEulerSingularityException45);
        cardanEulerSingularityException1.addSuppressed((java.lang.Throwable) cardanEulerSingularityException45);
        org.junit.Assert.assertNotNull(throwableArray5);
        org.junit.Assert.assertNotNull(throwableArray6);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Euler angles singularity" + "'", str9, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray10), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray10), "[]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Euler angles singularity" + "'", str11, "Euler angles singularity");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "Euler angles singularity" + "'", str14, "Euler angles singularity");
        org.junit.Assert.assertNotNull(throwableArray15);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "Euler angles singularity" + "'", str19, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray20), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray20), "[]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "Euler angles singularity" + "'", str21, "Euler angles singularity");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "Euler angles singularity" + "'", str24, "Euler angles singularity");
        org.junit.Assert.assertNotNull(throwableArray25);
        org.junit.Assert.assertNotNull(objArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray34), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray34), "[]");
        org.junit.Assert.assertNotNull(objArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray35), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray35), "[]");
        org.junit.Assert.assertNotNull(objArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray38), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray38), "[]");
        org.junit.Assert.assertNotNull(throwableArray40);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "Euler angles singularity" + "'", str41, "Euler angles singularity");
        org.junit.Assert.assertNotNull(throwableArray42);
        org.junit.Assert.assertNotNull(throwableArray43);
        org.junit.Assert.assertNotNull(objArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray46), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray46), "[]");
        org.junit.Assert.assertNotNull(objArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray47), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray47), "[]");
        org.junit.Assert.assertNotNull(objArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray54), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray54), "[]");
    }

    @Test
    public void test1510() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1510");
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException1 = new org.apache.commons.math.geometry.CardanEulerSingularityException(true);
        java.lang.Object[] objArray2 = cardanEulerSingularityException1.getArguments();
        java.lang.Object[] objArray3 = cardanEulerSingularityException1.getArguments();
        java.lang.String str4 = cardanEulerSingularityException1.getPattern();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException6 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray7 = cardanEulerSingularityException6.getArguments();
        java.lang.Object[] objArray8 = cardanEulerSingularityException6.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException10 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray11 = cardanEulerSingularityException10.getArguments();
        cardanEulerSingularityException6.addSuppressed((java.lang.Throwable) cardanEulerSingularityException10);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException14 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray15 = cardanEulerSingularityException14.getArguments();
        java.lang.Object[] objArray16 = cardanEulerSingularityException14.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException18 = new org.apache.commons.math.geometry.CardanEulerSingularityException(true);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException20 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        cardanEulerSingularityException18.addSuppressed((java.lang.Throwable) cardanEulerSingularityException20);
        cardanEulerSingularityException14.addSuppressed((java.lang.Throwable) cardanEulerSingularityException18);
        java.lang.Throwable[] throwableArray23 = cardanEulerSingularityException14.getSuppressed();
        cardanEulerSingularityException10.addSuppressed((java.lang.Throwable) cardanEulerSingularityException14);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException26 = new org.apache.commons.math.geometry.CardanEulerSingularityException(true);
        java.lang.Object[] objArray27 = cardanEulerSingularityException26.getArguments();
        java.lang.Object[] objArray28 = cardanEulerSingularityException26.getArguments();
        cardanEulerSingularityException14.addSuppressed((java.lang.Throwable) cardanEulerSingularityException26);
        cardanEulerSingularityException1.addSuppressed((java.lang.Throwable) cardanEulerSingularityException14);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException32 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray33 = cardanEulerSingularityException32.getArguments();
        java.lang.Object[] objArray34 = cardanEulerSingularityException32.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException36 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray37 = cardanEulerSingularityException36.getArguments();
        cardanEulerSingularityException32.addSuppressed((java.lang.Throwable) cardanEulerSingularityException36);
        java.lang.Throwable[] throwableArray39 = cardanEulerSingularityException32.getSuppressed();
        java.lang.String str40 = cardanEulerSingularityException32.getPattern();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException42 = new org.apache.commons.math.geometry.CardanEulerSingularityException(true);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException44 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        cardanEulerSingularityException42.addSuppressed((java.lang.Throwable) cardanEulerSingularityException44);
        java.lang.String str46 = cardanEulerSingularityException44.getPattern();
        java.lang.Object[] objArray47 = cardanEulerSingularityException44.getArguments();
        java.lang.Object[] objArray48 = cardanEulerSingularityException44.getArguments();
        cardanEulerSingularityException32.addSuppressed((java.lang.Throwable) cardanEulerSingularityException44);
        java.lang.Throwable[] throwableArray50 = cardanEulerSingularityException32.getSuppressed();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException52 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.String str53 = cardanEulerSingularityException52.getPattern();
        java.lang.Object[] objArray54 = cardanEulerSingularityException52.getArguments();
        java.lang.String str55 = cardanEulerSingularityException52.getPattern();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException57 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.String str58 = cardanEulerSingularityException57.getPattern();
        java.lang.Throwable[] throwableArray59 = cardanEulerSingularityException57.getSuppressed();
        cardanEulerSingularityException52.addSuppressed((java.lang.Throwable) cardanEulerSingularityException57);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException62 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.String str63 = cardanEulerSingularityException62.getPattern();
        java.lang.Object[] objArray64 = cardanEulerSingularityException62.getArguments();
        java.lang.String str65 = cardanEulerSingularityException62.getPattern();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException67 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.String str68 = cardanEulerSingularityException67.getPattern();
        java.lang.Throwable[] throwableArray69 = cardanEulerSingularityException67.getSuppressed();
        cardanEulerSingularityException62.addSuppressed((java.lang.Throwable) cardanEulerSingularityException67);
        cardanEulerSingularityException52.addSuppressed((java.lang.Throwable) cardanEulerSingularityException62);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException73 = new org.apache.commons.math.geometry.CardanEulerSingularityException(true);
        cardanEulerSingularityException52.addSuppressed((java.lang.Throwable) cardanEulerSingularityException73);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException76 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray77 = cardanEulerSingularityException76.getArguments();
        java.lang.Object[] objArray78 = cardanEulerSingularityException76.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException80 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray81 = cardanEulerSingularityException80.getArguments();
        cardanEulerSingularityException76.addSuppressed((java.lang.Throwable) cardanEulerSingularityException80);
        java.lang.Object[] objArray83 = cardanEulerSingularityException80.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException85 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray86 = cardanEulerSingularityException85.getArguments();
        java.lang.Throwable[] throwableArray87 = cardanEulerSingularityException85.getSuppressed();
        java.lang.String str88 = cardanEulerSingularityException85.getPattern();
        cardanEulerSingularityException80.addSuppressed((java.lang.Throwable) cardanEulerSingularityException85);
        java.lang.Object[] objArray90 = cardanEulerSingularityException85.getArguments();
        cardanEulerSingularityException52.addSuppressed((java.lang.Throwable) cardanEulerSingularityException85);
        cardanEulerSingularityException32.addSuppressed((java.lang.Throwable) cardanEulerSingularityException52);
        java.lang.Throwable[] throwableArray93 = cardanEulerSingularityException52.getSuppressed();
        cardanEulerSingularityException1.addSuppressed((java.lang.Throwable) cardanEulerSingularityException52);
        org.junit.Assert.assertNotNull(objArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray2), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray2), "[]");
        org.junit.Assert.assertNotNull(objArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray3), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray3), "[]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Cardan angles singularity" + "'", str4, "Cardan angles singularity");
        org.junit.Assert.assertNotNull(objArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray7), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray7), "[]");
        org.junit.Assert.assertNotNull(objArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray8), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray8), "[]");
        org.junit.Assert.assertNotNull(objArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray11), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray11), "[]");
        org.junit.Assert.assertNotNull(objArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray15), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray15), "[]");
        org.junit.Assert.assertNotNull(objArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray16), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray16), "[]");
        org.junit.Assert.assertNotNull(throwableArray23);
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray27), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray27), "[]");
        org.junit.Assert.assertNotNull(objArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray28), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray28), "[]");
        org.junit.Assert.assertNotNull(objArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray33), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray33), "[]");
        org.junit.Assert.assertNotNull(objArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray34), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray34), "[]");
        org.junit.Assert.assertNotNull(objArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray37), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray37), "[]");
        org.junit.Assert.assertNotNull(throwableArray39);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "Euler angles singularity" + "'", str40, "Euler angles singularity");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "Euler angles singularity" + "'", str46, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray47), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray47), "[]");
        org.junit.Assert.assertNotNull(objArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray48), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray48), "[]");
        org.junit.Assert.assertNotNull(throwableArray50);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "Euler angles singularity" + "'", str53, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray54), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray54), "[]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "Euler angles singularity" + "'", str55, "Euler angles singularity");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "Euler angles singularity" + "'", str58, "Euler angles singularity");
        org.junit.Assert.assertNotNull(throwableArray59);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "Euler angles singularity" + "'", str63, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray64), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray64), "[]");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "Euler angles singularity" + "'", str65, "Euler angles singularity");
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "Euler angles singularity" + "'", str68, "Euler angles singularity");
        org.junit.Assert.assertNotNull(throwableArray69);
        org.junit.Assert.assertNotNull(objArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray77), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray77), "[]");
        org.junit.Assert.assertNotNull(objArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray78), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray78), "[]");
        org.junit.Assert.assertNotNull(objArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray81), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray81), "[]");
        org.junit.Assert.assertNotNull(objArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray83), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray83), "[]");
        org.junit.Assert.assertNotNull(objArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray86), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray86), "[]");
        org.junit.Assert.assertNotNull(throwableArray87);
        org.junit.Assert.assertEquals("'" + str88 + "' != '" + "Euler angles singularity" + "'", str88, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray90), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray90), "[]");
        org.junit.Assert.assertNotNull(throwableArray93);
    }

    @Test
    public void test1511() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1511");
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException1 = new org.apache.commons.math.geometry.CardanEulerSingularityException(true);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException3 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        cardanEulerSingularityException1.addSuppressed((java.lang.Throwable) cardanEulerSingularityException3);
        java.lang.Throwable[] throwableArray5 = cardanEulerSingularityException1.getSuppressed();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException7 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray8 = cardanEulerSingularityException7.getArguments();
        java.lang.Throwable[] throwableArray9 = cardanEulerSingularityException7.getSuppressed();
        java.lang.Object[] objArray10 = cardanEulerSingularityException7.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException12 = new org.apache.commons.math.geometry.CardanEulerSingularityException(true);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException14 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        cardanEulerSingularityException12.addSuppressed((java.lang.Throwable) cardanEulerSingularityException14);
        java.lang.String str16 = cardanEulerSingularityException14.getPattern();
        java.lang.Throwable[] throwableArray17 = cardanEulerSingularityException14.getSuppressed();
        java.lang.String str18 = cardanEulerSingularityException14.getPattern();
        java.lang.Throwable[] throwableArray19 = cardanEulerSingularityException14.getSuppressed();
        java.lang.String str20 = cardanEulerSingularityException14.getPattern();
        cardanEulerSingularityException7.addSuppressed((java.lang.Throwable) cardanEulerSingularityException14);
        cardanEulerSingularityException1.addSuppressed((java.lang.Throwable) cardanEulerSingularityException14);
        java.lang.String str23 = cardanEulerSingularityException14.getPattern();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException25 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray26 = cardanEulerSingularityException25.getArguments();
        java.lang.String str27 = cardanEulerSingularityException25.getPattern();
        java.lang.Object[] objArray28 = cardanEulerSingularityException25.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException30 = new org.apache.commons.math.geometry.CardanEulerSingularityException(true);
        java.lang.Object[] objArray31 = cardanEulerSingularityException30.getArguments();
        java.lang.Object[] objArray32 = cardanEulerSingularityException30.getArguments();
        java.lang.String str33 = cardanEulerSingularityException30.getPattern();
        java.lang.String str34 = cardanEulerSingularityException30.getPattern();
        cardanEulerSingularityException25.addSuppressed((java.lang.Throwable) cardanEulerSingularityException30);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException37 = new org.apache.commons.math.geometry.CardanEulerSingularityException(true);
        java.lang.Object[] objArray38 = cardanEulerSingularityException37.getArguments();
        java.lang.Throwable[] throwableArray39 = cardanEulerSingularityException37.getSuppressed();
        java.lang.Throwable[] throwableArray40 = cardanEulerSingularityException37.getSuppressed();
        java.lang.Throwable[] throwableArray41 = cardanEulerSingularityException37.getSuppressed();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException43 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray44 = cardanEulerSingularityException43.getArguments();
        java.lang.Object[] objArray45 = cardanEulerSingularityException43.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException47 = new org.apache.commons.math.geometry.CardanEulerSingularityException(true);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException49 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        cardanEulerSingularityException47.addSuppressed((java.lang.Throwable) cardanEulerSingularityException49);
        cardanEulerSingularityException43.addSuppressed((java.lang.Throwable) cardanEulerSingularityException47);
        cardanEulerSingularityException37.addSuppressed((java.lang.Throwable) cardanEulerSingularityException43);
        java.lang.Throwable[] throwableArray53 = cardanEulerSingularityException37.getSuppressed();
        cardanEulerSingularityException30.addSuppressed((java.lang.Throwable) cardanEulerSingularityException37);
        java.lang.String str55 = cardanEulerSingularityException37.getPattern();
        cardanEulerSingularityException14.addSuppressed((java.lang.Throwable) cardanEulerSingularityException37);
        java.lang.String str57 = cardanEulerSingularityException14.getPattern();
        java.lang.Throwable[] throwableArray58 = cardanEulerSingularityException14.getSuppressed();
        java.lang.Object[] objArray59 = cardanEulerSingularityException14.getArguments();
        org.junit.Assert.assertNotNull(throwableArray5);
        org.junit.Assert.assertNotNull(objArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray8), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray8), "[]");
        org.junit.Assert.assertNotNull(throwableArray9);
        org.junit.Assert.assertNotNull(objArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray10), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray10), "[]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "Euler angles singularity" + "'", str16, "Euler angles singularity");
        org.junit.Assert.assertNotNull(throwableArray17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "Euler angles singularity" + "'", str18, "Euler angles singularity");
        org.junit.Assert.assertNotNull(throwableArray19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "Euler angles singularity" + "'", str20, "Euler angles singularity");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "Euler angles singularity" + "'", str23, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray26), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray26), "[]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "Euler angles singularity" + "'", str27, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray28), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray28), "[]");
        org.junit.Assert.assertNotNull(objArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray31), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray31), "[]");
        org.junit.Assert.assertNotNull(objArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray32), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray32), "[]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "Cardan angles singularity" + "'", str33, "Cardan angles singularity");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "Cardan angles singularity" + "'", str34, "Cardan angles singularity");
        org.junit.Assert.assertNotNull(objArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray38), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray38), "[]");
        org.junit.Assert.assertNotNull(throwableArray39);
        org.junit.Assert.assertNotNull(throwableArray40);
        org.junit.Assert.assertNotNull(throwableArray41);
        org.junit.Assert.assertNotNull(objArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray44), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray44), "[]");
        org.junit.Assert.assertNotNull(objArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray45), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray45), "[]");
        org.junit.Assert.assertNotNull(throwableArray53);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "Cardan angles singularity" + "'", str55, "Cardan angles singularity");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "Euler angles singularity" + "'", str57, "Euler angles singularity");
        org.junit.Assert.assertNotNull(throwableArray58);
        org.junit.Assert.assertNotNull(objArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray59), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray59), "[]");
    }

    @Test
    public void test1512() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1512");
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException1 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray2 = cardanEulerSingularityException1.getArguments();
        java.lang.String str3 = cardanEulerSingularityException1.getPattern();
        java.lang.Object[] objArray4 = cardanEulerSingularityException1.getArguments();
        java.lang.Object[] objArray5 = cardanEulerSingularityException1.getArguments();
        java.lang.String str6 = cardanEulerSingularityException1.getPattern();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException8 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        cardanEulerSingularityException1.addSuppressed((java.lang.Throwable) cardanEulerSingularityException8);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException11 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray12 = cardanEulerSingularityException11.getArguments();
        java.lang.String str13 = cardanEulerSingularityException11.getPattern();
        java.lang.Object[] objArray14 = cardanEulerSingularityException11.getArguments();
        java.lang.Object[] objArray15 = cardanEulerSingularityException11.getArguments();
        java.lang.String str16 = cardanEulerSingularityException11.getPattern();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException18 = new org.apache.commons.math.geometry.CardanEulerSingularityException(true);
        java.lang.Object[] objArray19 = cardanEulerSingularityException18.getArguments();
        java.lang.Throwable[] throwableArray20 = cardanEulerSingularityException18.getSuppressed();
        java.lang.Throwable[] throwableArray21 = cardanEulerSingularityException18.getSuppressed();
        cardanEulerSingularityException11.addSuppressed((java.lang.Throwable) cardanEulerSingularityException18);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException24 = new org.apache.commons.math.geometry.CardanEulerSingularityException(true);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException26 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        cardanEulerSingularityException24.addSuppressed((java.lang.Throwable) cardanEulerSingularityException26);
        java.lang.String str28 = cardanEulerSingularityException26.getPattern();
        java.lang.Throwable[] throwableArray29 = cardanEulerSingularityException26.getSuppressed();
        java.lang.String str30 = cardanEulerSingularityException26.getPattern();
        java.lang.Throwable[] throwableArray31 = cardanEulerSingularityException26.getSuppressed();
        cardanEulerSingularityException18.addSuppressed((java.lang.Throwable) cardanEulerSingularityException26);
        cardanEulerSingularityException8.addSuppressed((java.lang.Throwable) cardanEulerSingularityException18);
        java.lang.Throwable[] throwableArray34 = cardanEulerSingularityException18.getSuppressed();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException36 = new org.apache.commons.math.geometry.CardanEulerSingularityException(true);
        java.lang.Object[] objArray37 = cardanEulerSingularityException36.getArguments();
        java.lang.Object[] objArray38 = cardanEulerSingularityException36.getArguments();
        java.lang.String str39 = cardanEulerSingularityException36.getPattern();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException41 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray42 = cardanEulerSingularityException41.getArguments();
        java.lang.Object[] objArray43 = cardanEulerSingularityException41.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException45 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray46 = cardanEulerSingularityException45.getArguments();
        cardanEulerSingularityException41.addSuppressed((java.lang.Throwable) cardanEulerSingularityException45);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException49 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray50 = cardanEulerSingularityException49.getArguments();
        java.lang.Object[] objArray51 = cardanEulerSingularityException49.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException53 = new org.apache.commons.math.geometry.CardanEulerSingularityException(true);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException55 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        cardanEulerSingularityException53.addSuppressed((java.lang.Throwable) cardanEulerSingularityException55);
        cardanEulerSingularityException49.addSuppressed((java.lang.Throwable) cardanEulerSingularityException53);
        java.lang.Throwable[] throwableArray58 = cardanEulerSingularityException49.getSuppressed();
        cardanEulerSingularityException45.addSuppressed((java.lang.Throwable) cardanEulerSingularityException49);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException61 = new org.apache.commons.math.geometry.CardanEulerSingularityException(true);
        java.lang.Object[] objArray62 = cardanEulerSingularityException61.getArguments();
        java.lang.Object[] objArray63 = cardanEulerSingularityException61.getArguments();
        cardanEulerSingularityException49.addSuppressed((java.lang.Throwable) cardanEulerSingularityException61);
        cardanEulerSingularityException36.addSuppressed((java.lang.Throwable) cardanEulerSingularityException49);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException67 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.String str68 = cardanEulerSingularityException67.getPattern();
        java.lang.Object[] objArray69 = cardanEulerSingularityException67.getArguments();
        java.lang.String str70 = cardanEulerSingularityException67.getPattern();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException72 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.String str73 = cardanEulerSingularityException72.getPattern();
        java.lang.Throwable[] throwableArray74 = cardanEulerSingularityException72.getSuppressed();
        cardanEulerSingularityException67.addSuppressed((java.lang.Throwable) cardanEulerSingularityException72);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException77 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.String str78 = cardanEulerSingularityException77.getPattern();
        java.lang.Object[] objArray79 = cardanEulerSingularityException77.getArguments();
        java.lang.String str80 = cardanEulerSingularityException77.getPattern();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException82 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.String str83 = cardanEulerSingularityException82.getPattern();
        java.lang.Throwable[] throwableArray84 = cardanEulerSingularityException82.getSuppressed();
        cardanEulerSingularityException77.addSuppressed((java.lang.Throwable) cardanEulerSingularityException82);
        cardanEulerSingularityException67.addSuppressed((java.lang.Throwable) cardanEulerSingularityException77);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException88 = new org.apache.commons.math.geometry.CardanEulerSingularityException(true);
        cardanEulerSingularityException67.addSuppressed((java.lang.Throwable) cardanEulerSingularityException88);
        java.lang.String str90 = cardanEulerSingularityException88.getPattern();
        cardanEulerSingularityException36.addSuppressed((java.lang.Throwable) cardanEulerSingularityException88);
        cardanEulerSingularityException18.addSuppressed((java.lang.Throwable) cardanEulerSingularityException88);
        java.lang.String str93 = cardanEulerSingularityException88.toString();
        org.junit.Assert.assertNotNull(objArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray2), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray2), "[]");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Euler angles singularity" + "'", str3, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray4), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray4), "[]");
        org.junit.Assert.assertNotNull(objArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray5), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray5), "[]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "Euler angles singularity" + "'", str6, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray12), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray12), "[]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Euler angles singularity" + "'", str13, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[]");
        org.junit.Assert.assertNotNull(objArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray15), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray15), "[]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "Euler angles singularity" + "'", str16, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray19), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray19), "[]");
        org.junit.Assert.assertNotNull(throwableArray20);
        org.junit.Assert.assertNotNull(throwableArray21);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "Euler angles singularity" + "'", str28, "Euler angles singularity");
        org.junit.Assert.assertNotNull(throwableArray29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "Euler angles singularity" + "'", str30, "Euler angles singularity");
        org.junit.Assert.assertNotNull(throwableArray31);
        org.junit.Assert.assertNotNull(throwableArray34);
        org.junit.Assert.assertNotNull(objArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray37), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray37), "[]");
        org.junit.Assert.assertNotNull(objArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray38), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray38), "[]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "Cardan angles singularity" + "'", str39, "Cardan angles singularity");
        org.junit.Assert.assertNotNull(objArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray42), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray42), "[]");
        org.junit.Assert.assertNotNull(objArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray43), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray43), "[]");
        org.junit.Assert.assertNotNull(objArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray46), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray46), "[]");
        org.junit.Assert.assertNotNull(objArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray50), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray50), "[]");
        org.junit.Assert.assertNotNull(objArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray51), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray51), "[]");
        org.junit.Assert.assertNotNull(throwableArray58);
        org.junit.Assert.assertNotNull(objArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray62), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray62), "[]");
        org.junit.Assert.assertNotNull(objArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray63), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray63), "[]");
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "Euler angles singularity" + "'", str68, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray69), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray69), "[]");
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "Euler angles singularity" + "'", str70, "Euler angles singularity");
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "Euler angles singularity" + "'", str73, "Euler angles singularity");
        org.junit.Assert.assertNotNull(throwableArray74);
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "Euler angles singularity" + "'", str78, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray79), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray79), "[]");
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "Euler angles singularity" + "'", str80, "Euler angles singularity");
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "Euler angles singularity" + "'", str83, "Euler angles singularity");
        org.junit.Assert.assertNotNull(throwableArray84);
        org.junit.Assert.assertEquals("'" + str90 + "' != '" + "Cardan angles singularity" + "'", str90, "Cardan angles singularity");
        org.junit.Assert.assertEquals("'" + str93 + "' != '" + "org.apache.commons.math.geometry.CardanEulerSingularityException: Cardan angles singularity" + "'", str93, "org.apache.commons.math.geometry.CardanEulerSingularityException: Cardan angles singularity");
    }

    @Test
    public void test1513() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1513");
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException1 = new org.apache.commons.math.geometry.CardanEulerSingularityException(true);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException3 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        cardanEulerSingularityException1.addSuppressed((java.lang.Throwable) cardanEulerSingularityException3);
        java.lang.Throwable[] throwableArray5 = cardanEulerSingularityException1.getSuppressed();
        java.lang.Throwable[] throwableArray6 = cardanEulerSingularityException1.getSuppressed();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException8 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.String str9 = cardanEulerSingularityException8.getPattern();
        java.lang.Object[] objArray10 = cardanEulerSingularityException8.getArguments();
        java.lang.String str11 = cardanEulerSingularityException8.getPattern();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException13 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.String str14 = cardanEulerSingularityException13.getPattern();
        java.lang.Throwable[] throwableArray15 = cardanEulerSingularityException13.getSuppressed();
        cardanEulerSingularityException8.addSuppressed((java.lang.Throwable) cardanEulerSingularityException13);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException18 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.String str19 = cardanEulerSingularityException18.getPattern();
        java.lang.Object[] objArray20 = cardanEulerSingularityException18.getArguments();
        java.lang.String str21 = cardanEulerSingularityException18.getPattern();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException23 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.String str24 = cardanEulerSingularityException23.getPattern();
        java.lang.Throwable[] throwableArray25 = cardanEulerSingularityException23.getSuppressed();
        cardanEulerSingularityException18.addSuppressed((java.lang.Throwable) cardanEulerSingularityException23);
        cardanEulerSingularityException8.addSuppressed((java.lang.Throwable) cardanEulerSingularityException18);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException29 = new org.apache.commons.math.geometry.CardanEulerSingularityException(true);
        cardanEulerSingularityException8.addSuppressed((java.lang.Throwable) cardanEulerSingularityException29);
        cardanEulerSingularityException1.addSuppressed((java.lang.Throwable) cardanEulerSingularityException8);
        java.lang.Throwable[] throwableArray32 = cardanEulerSingularityException1.getSuppressed();
        java.lang.Throwable[] throwableArray33 = cardanEulerSingularityException1.getSuppressed();
        java.lang.Class<?> wildcardClass34 = cardanEulerSingularityException1.getClass();
        org.junit.Assert.assertNotNull(throwableArray5);
        org.junit.Assert.assertNotNull(throwableArray6);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Euler angles singularity" + "'", str9, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray10), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray10), "[]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Euler angles singularity" + "'", str11, "Euler angles singularity");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "Euler angles singularity" + "'", str14, "Euler angles singularity");
        org.junit.Assert.assertNotNull(throwableArray15);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "Euler angles singularity" + "'", str19, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray20), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray20), "[]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "Euler angles singularity" + "'", str21, "Euler angles singularity");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "Euler angles singularity" + "'", str24, "Euler angles singularity");
        org.junit.Assert.assertNotNull(throwableArray25);
        org.junit.Assert.assertNotNull(throwableArray32);
        org.junit.Assert.assertNotNull(throwableArray33);
        org.junit.Assert.assertNotNull(wildcardClass34);
    }

    @Test
    public void test1514() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1514");
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException1 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray2 = cardanEulerSingularityException1.getArguments();
        java.lang.Object[] objArray3 = cardanEulerSingularityException1.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException5 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray6 = cardanEulerSingularityException5.getArguments();
        cardanEulerSingularityException1.addSuppressed((java.lang.Throwable) cardanEulerSingularityException5);
        java.lang.Object[] objArray8 = cardanEulerSingularityException5.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException10 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray11 = cardanEulerSingularityException10.getArguments();
        java.lang.Throwable[] throwableArray12 = cardanEulerSingularityException10.getSuppressed();
        java.lang.String str13 = cardanEulerSingularityException10.getPattern();
        cardanEulerSingularityException5.addSuppressed((java.lang.Throwable) cardanEulerSingularityException10);
        java.lang.Object[] objArray15 = cardanEulerSingularityException5.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException17 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.String str18 = cardanEulerSingularityException17.getPattern();
        java.lang.Object[] objArray19 = cardanEulerSingularityException17.getArguments();
        java.lang.String str20 = cardanEulerSingularityException17.getPattern();
        cardanEulerSingularityException5.addSuppressed((java.lang.Throwable) cardanEulerSingularityException17);
        java.lang.String str22 = cardanEulerSingularityException5.getPattern();
        java.lang.Object[] objArray23 = cardanEulerSingularityException5.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException25 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.String str26 = cardanEulerSingularityException25.getPattern();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException28 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.String str29 = cardanEulerSingularityException28.getPattern();
        java.lang.Throwable[] throwableArray30 = cardanEulerSingularityException28.getSuppressed();
        cardanEulerSingularityException25.addSuppressed((java.lang.Throwable) cardanEulerSingularityException28);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException33 = new org.apache.commons.math.geometry.CardanEulerSingularityException(true);
        java.lang.String str34 = cardanEulerSingularityException33.getPattern();
        cardanEulerSingularityException25.addSuppressed((java.lang.Throwable) cardanEulerSingularityException33);
        java.lang.String str36 = cardanEulerSingularityException25.getPattern();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException38 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray39 = cardanEulerSingularityException38.getArguments();
        java.lang.Object[] objArray40 = cardanEulerSingularityException38.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException42 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray43 = cardanEulerSingularityException42.getArguments();
        cardanEulerSingularityException38.addSuppressed((java.lang.Throwable) cardanEulerSingularityException42);
        java.lang.Throwable[] throwableArray45 = cardanEulerSingularityException38.getSuppressed();
        java.lang.String str46 = cardanEulerSingularityException38.getPattern();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException48 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray49 = cardanEulerSingularityException48.getArguments();
        java.lang.String str50 = cardanEulerSingularityException48.getPattern();
        java.lang.Object[] objArray51 = cardanEulerSingularityException48.getArguments();
        java.lang.Object[] objArray52 = cardanEulerSingularityException48.getArguments();
        java.lang.String str53 = cardanEulerSingularityException48.getPattern();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException55 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        cardanEulerSingularityException48.addSuppressed((java.lang.Throwable) cardanEulerSingularityException55);
        cardanEulerSingularityException38.addSuppressed((java.lang.Throwable) cardanEulerSingularityException55);
        cardanEulerSingularityException25.addSuppressed((java.lang.Throwable) cardanEulerSingularityException38);
        java.lang.String str59 = cardanEulerSingularityException38.getPattern();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException61 = new org.apache.commons.math.geometry.CardanEulerSingularityException(true);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException63 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        cardanEulerSingularityException61.addSuppressed((java.lang.Throwable) cardanEulerSingularityException63);
        java.lang.Object[] objArray65 = cardanEulerSingularityException61.getArguments();
        cardanEulerSingularityException38.addSuppressed((java.lang.Throwable) cardanEulerSingularityException61);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException68 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray69 = cardanEulerSingularityException68.getArguments();
        java.lang.Object[] objArray70 = cardanEulerSingularityException68.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException72 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray73 = cardanEulerSingularityException72.getArguments();
        cardanEulerSingularityException68.addSuppressed((java.lang.Throwable) cardanEulerSingularityException72);
        java.lang.Throwable[] throwableArray75 = cardanEulerSingularityException72.getSuppressed();
        java.lang.String str76 = cardanEulerSingularityException72.getPattern();
        java.lang.Throwable[] throwableArray77 = cardanEulerSingularityException72.getSuppressed();
        java.lang.Throwable[] throwableArray78 = cardanEulerSingularityException72.getSuppressed();
        cardanEulerSingularityException61.addSuppressed((java.lang.Throwable) cardanEulerSingularityException72);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException81 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.String str82 = cardanEulerSingularityException81.getPattern();
        java.lang.Object[] objArray83 = cardanEulerSingularityException81.getArguments();
        java.lang.String str84 = cardanEulerSingularityException81.getPattern();
        java.lang.Throwable[] throwableArray85 = cardanEulerSingularityException81.getSuppressed();
        java.lang.Throwable[] throwableArray86 = cardanEulerSingularityException81.getSuppressed();
        java.lang.String str87 = cardanEulerSingularityException81.getPattern();
        java.lang.Object[] objArray88 = cardanEulerSingularityException81.getArguments();
        cardanEulerSingularityException72.addSuppressed((java.lang.Throwable) cardanEulerSingularityException81);
        cardanEulerSingularityException5.addSuppressed((java.lang.Throwable) cardanEulerSingularityException81);
        org.junit.Assert.assertNotNull(objArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray2), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray2), "[]");
        org.junit.Assert.assertNotNull(objArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray3), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray3), "[]");
        org.junit.Assert.assertNotNull(objArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray6), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray6), "[]");
        org.junit.Assert.assertNotNull(objArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray8), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray8), "[]");
        org.junit.Assert.assertNotNull(objArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray11), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray11), "[]");
        org.junit.Assert.assertNotNull(throwableArray12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Euler angles singularity" + "'", str13, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray15), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray15), "[]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "Euler angles singularity" + "'", str18, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray19), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray19), "[]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "Euler angles singularity" + "'", str20, "Euler angles singularity");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "Euler angles singularity" + "'", str22, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray23), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray23), "[]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "Euler angles singularity" + "'", str26, "Euler angles singularity");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "Euler angles singularity" + "'", str29, "Euler angles singularity");
        org.junit.Assert.assertNotNull(throwableArray30);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "Cardan angles singularity" + "'", str34, "Cardan angles singularity");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "Euler angles singularity" + "'", str36, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray39), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray39), "[]");
        org.junit.Assert.assertNotNull(objArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray40), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray40), "[]");
        org.junit.Assert.assertNotNull(objArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray43), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray43), "[]");
        org.junit.Assert.assertNotNull(throwableArray45);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "Euler angles singularity" + "'", str46, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray49), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray49), "[]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "Euler angles singularity" + "'", str50, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray51), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray51), "[]");
        org.junit.Assert.assertNotNull(objArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray52), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray52), "[]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "Euler angles singularity" + "'", str53, "Euler angles singularity");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "Euler angles singularity" + "'", str59, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray65), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray65), "[]");
        org.junit.Assert.assertNotNull(objArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray69), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray69), "[]");
        org.junit.Assert.assertNotNull(objArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray70), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray70), "[]");
        org.junit.Assert.assertNotNull(objArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray73), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray73), "[]");
        org.junit.Assert.assertNotNull(throwableArray75);
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "Euler angles singularity" + "'", str76, "Euler angles singularity");
        org.junit.Assert.assertNotNull(throwableArray77);
        org.junit.Assert.assertNotNull(throwableArray78);
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "Euler angles singularity" + "'", str82, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray83), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray83), "[]");
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "Euler angles singularity" + "'", str84, "Euler angles singularity");
        org.junit.Assert.assertNotNull(throwableArray85);
        org.junit.Assert.assertNotNull(throwableArray86);
        org.junit.Assert.assertEquals("'" + str87 + "' != '" + "Euler angles singularity" + "'", str87, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray88), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray88), "[]");
    }

    @Test
    public void test1515() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1515");
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException1 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.String str2 = cardanEulerSingularityException1.getPattern();
        java.lang.Object[] objArray3 = cardanEulerSingularityException1.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException5 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.String str6 = cardanEulerSingularityException5.getPattern();
        java.lang.Throwable[] throwableArray7 = cardanEulerSingularityException5.getSuppressed();
        cardanEulerSingularityException1.addSuppressed((java.lang.Throwable) cardanEulerSingularityException5);
        java.lang.String str9 = cardanEulerSingularityException1.getPattern();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException11 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray12 = cardanEulerSingularityException11.getArguments();
        java.lang.Object[] objArray13 = cardanEulerSingularityException11.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException15 = new org.apache.commons.math.geometry.CardanEulerSingularityException(true);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException17 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        cardanEulerSingularityException15.addSuppressed((java.lang.Throwable) cardanEulerSingularityException17);
        cardanEulerSingularityException11.addSuppressed((java.lang.Throwable) cardanEulerSingularityException15);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException21 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray22 = cardanEulerSingularityException21.getArguments();
        java.lang.String str23 = cardanEulerSingularityException21.getPattern();
        java.lang.Object[] objArray24 = cardanEulerSingularityException21.getArguments();
        java.lang.Object[] objArray25 = cardanEulerSingularityException21.getArguments();
        cardanEulerSingularityException15.addSuppressed((java.lang.Throwable) cardanEulerSingularityException21);
        java.lang.String str27 = cardanEulerSingularityException15.getPattern();
        cardanEulerSingularityException1.addSuppressed((java.lang.Throwable) cardanEulerSingularityException15);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException30 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray31 = cardanEulerSingularityException30.getArguments();
        java.lang.Object[] objArray32 = cardanEulerSingularityException30.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException34 = new org.apache.commons.math.geometry.CardanEulerSingularityException(true);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException36 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        cardanEulerSingularityException34.addSuppressed((java.lang.Throwable) cardanEulerSingularityException36);
        cardanEulerSingularityException30.addSuppressed((java.lang.Throwable) cardanEulerSingularityException34);
        java.lang.Object[] objArray39 = cardanEulerSingularityException30.getArguments();
        java.lang.Throwable[] throwableArray40 = cardanEulerSingularityException30.getSuppressed();
        cardanEulerSingularityException15.addSuppressed((java.lang.Throwable) cardanEulerSingularityException30);
        java.lang.String str42 = cardanEulerSingularityException15.getPattern();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "Euler angles singularity" + "'", str2, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray3), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray3), "[]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "Euler angles singularity" + "'", str6, "Euler angles singularity");
        org.junit.Assert.assertNotNull(throwableArray7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Euler angles singularity" + "'", str9, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray12), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray12), "[]");
        org.junit.Assert.assertNotNull(objArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray13), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray13), "[]");
        org.junit.Assert.assertNotNull(objArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray22), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray22), "[]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "Euler angles singularity" + "'", str23, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray24), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray24), "[]");
        org.junit.Assert.assertNotNull(objArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray25), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray25), "[]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "Cardan angles singularity" + "'", str27, "Cardan angles singularity");
        org.junit.Assert.assertNotNull(objArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray31), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray31), "[]");
        org.junit.Assert.assertNotNull(objArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray32), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray32), "[]");
        org.junit.Assert.assertNotNull(objArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray39), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray39), "[]");
        org.junit.Assert.assertNotNull(throwableArray40);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "Cardan angles singularity" + "'", str42, "Cardan angles singularity");
    }

    @Test
    public void test1516() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1516");
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException1 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray2 = cardanEulerSingularityException1.getArguments();
        java.lang.Object[] objArray3 = cardanEulerSingularityException1.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException5 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray6 = cardanEulerSingularityException5.getArguments();
        cardanEulerSingularityException1.addSuppressed((java.lang.Throwable) cardanEulerSingularityException5);
        java.lang.Throwable[] throwableArray8 = cardanEulerSingularityException1.getSuppressed();
        java.lang.String str9 = cardanEulerSingularityException1.getPattern();
        java.lang.Object[] objArray10 = cardanEulerSingularityException1.getArguments();
        java.lang.Object[] objArray11 = cardanEulerSingularityException1.getArguments();
        java.lang.Throwable[] throwableArray12 = cardanEulerSingularityException1.getSuppressed();
        java.lang.Object[] objArray13 = cardanEulerSingularityException1.getArguments();
        org.junit.Assert.assertNotNull(objArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray2), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray2), "[]");
        org.junit.Assert.assertNotNull(objArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray3), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray3), "[]");
        org.junit.Assert.assertNotNull(objArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray6), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray6), "[]");
        org.junit.Assert.assertNotNull(throwableArray8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Euler angles singularity" + "'", str9, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray10), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray10), "[]");
        org.junit.Assert.assertNotNull(objArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray11), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray11), "[]");
        org.junit.Assert.assertNotNull(throwableArray12);
        org.junit.Assert.assertNotNull(objArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray13), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray13), "[]");
    }

    @Test
    public void test1517() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1517");
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException1 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray2 = cardanEulerSingularityException1.getArguments();
        java.lang.Object[] objArray3 = cardanEulerSingularityException1.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException5 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray6 = cardanEulerSingularityException5.getArguments();
        cardanEulerSingularityException1.addSuppressed((java.lang.Throwable) cardanEulerSingularityException5);
        java.lang.Object[] objArray8 = cardanEulerSingularityException5.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException10 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray11 = cardanEulerSingularityException10.getArguments();
        java.lang.Throwable[] throwableArray12 = cardanEulerSingularityException10.getSuppressed();
        java.lang.String str13 = cardanEulerSingularityException10.getPattern();
        cardanEulerSingularityException5.addSuppressed((java.lang.Throwable) cardanEulerSingularityException10);
        java.lang.Object[] objArray15 = cardanEulerSingularityException5.getArguments();
        java.lang.Object[] objArray16 = cardanEulerSingularityException5.getArguments();
        java.lang.String str17 = cardanEulerSingularityException5.getPattern();
        java.lang.Throwable[] throwableArray18 = cardanEulerSingularityException5.getSuppressed();
        java.lang.Throwable[] throwableArray19 = cardanEulerSingularityException5.getSuppressed();
        java.lang.Class<?> wildcardClass20 = cardanEulerSingularityException5.getClass();
        org.junit.Assert.assertNotNull(objArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray2), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray2), "[]");
        org.junit.Assert.assertNotNull(objArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray3), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray3), "[]");
        org.junit.Assert.assertNotNull(objArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray6), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray6), "[]");
        org.junit.Assert.assertNotNull(objArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray8), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray8), "[]");
        org.junit.Assert.assertNotNull(objArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray11), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray11), "[]");
        org.junit.Assert.assertNotNull(throwableArray12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Euler angles singularity" + "'", str13, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray15), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray15), "[]");
        org.junit.Assert.assertNotNull(objArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray16), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray16), "[]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "Euler angles singularity" + "'", str17, "Euler angles singularity");
        org.junit.Assert.assertNotNull(throwableArray18);
        org.junit.Assert.assertNotNull(throwableArray19);
        org.junit.Assert.assertNotNull(wildcardClass20);
    }

    @Test
    public void test1518() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1518");
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException1 = new org.apache.commons.math.geometry.CardanEulerSingularityException(true);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException3 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        cardanEulerSingularityException1.addSuppressed((java.lang.Throwable) cardanEulerSingularityException3);
        java.lang.Throwable[] throwableArray5 = cardanEulerSingularityException1.getSuppressed();
        java.lang.Throwable[] throwableArray6 = cardanEulerSingularityException1.getSuppressed();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException8 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.String str9 = cardanEulerSingularityException8.getPattern();
        java.lang.Object[] objArray10 = cardanEulerSingularityException8.getArguments();
        java.lang.String str11 = cardanEulerSingularityException8.getPattern();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException13 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.String str14 = cardanEulerSingularityException13.getPattern();
        java.lang.Throwable[] throwableArray15 = cardanEulerSingularityException13.getSuppressed();
        cardanEulerSingularityException8.addSuppressed((java.lang.Throwable) cardanEulerSingularityException13);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException18 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.String str19 = cardanEulerSingularityException18.getPattern();
        java.lang.Object[] objArray20 = cardanEulerSingularityException18.getArguments();
        java.lang.String str21 = cardanEulerSingularityException18.getPattern();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException23 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.String str24 = cardanEulerSingularityException23.getPattern();
        java.lang.Throwable[] throwableArray25 = cardanEulerSingularityException23.getSuppressed();
        cardanEulerSingularityException18.addSuppressed((java.lang.Throwable) cardanEulerSingularityException23);
        cardanEulerSingularityException8.addSuppressed((java.lang.Throwable) cardanEulerSingularityException18);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException29 = new org.apache.commons.math.geometry.CardanEulerSingularityException(true);
        cardanEulerSingularityException8.addSuppressed((java.lang.Throwable) cardanEulerSingularityException29);
        cardanEulerSingularityException1.addSuppressed((java.lang.Throwable) cardanEulerSingularityException8);
        java.lang.Object[] objArray32 = cardanEulerSingularityException1.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException34 = new org.apache.commons.math.geometry.CardanEulerSingularityException(true);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException36 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        cardanEulerSingularityException34.addSuppressed((java.lang.Throwable) cardanEulerSingularityException36);
        java.lang.String str38 = cardanEulerSingularityException36.getPattern();
        java.lang.Object[] objArray39 = cardanEulerSingularityException36.getArguments();
        java.lang.Object[] objArray40 = cardanEulerSingularityException36.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException42 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray43 = cardanEulerSingularityException42.getArguments();
        java.lang.String str44 = cardanEulerSingularityException42.getPattern();
        java.lang.Object[] objArray45 = cardanEulerSingularityException42.getArguments();
        java.lang.Object[] objArray46 = cardanEulerSingularityException42.getArguments();
        java.lang.String str47 = cardanEulerSingularityException42.getPattern();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException49 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        cardanEulerSingularityException42.addSuppressed((java.lang.Throwable) cardanEulerSingularityException49);
        cardanEulerSingularityException36.addSuppressed((java.lang.Throwable) cardanEulerSingularityException49);
        cardanEulerSingularityException1.addSuppressed((java.lang.Throwable) cardanEulerSingularityException49);
        java.lang.Object[] objArray53 = cardanEulerSingularityException1.getArguments();
        java.lang.Throwable throwable54 = null;
        // The following exception was thrown during execution in test generation
        try {
            cardanEulerSingularityException1.addSuppressed(throwable54);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot suppress a null exception.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(throwableArray5);
        org.junit.Assert.assertNotNull(throwableArray6);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Euler angles singularity" + "'", str9, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray10), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray10), "[]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Euler angles singularity" + "'", str11, "Euler angles singularity");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "Euler angles singularity" + "'", str14, "Euler angles singularity");
        org.junit.Assert.assertNotNull(throwableArray15);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "Euler angles singularity" + "'", str19, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray20), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray20), "[]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "Euler angles singularity" + "'", str21, "Euler angles singularity");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "Euler angles singularity" + "'", str24, "Euler angles singularity");
        org.junit.Assert.assertNotNull(throwableArray25);
        org.junit.Assert.assertNotNull(objArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray32), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray32), "[]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "Euler angles singularity" + "'", str38, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray39), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray39), "[]");
        org.junit.Assert.assertNotNull(objArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray40), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray40), "[]");
        org.junit.Assert.assertNotNull(objArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray43), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray43), "[]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "Euler angles singularity" + "'", str44, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray45), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray45), "[]");
        org.junit.Assert.assertNotNull(objArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray46), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray46), "[]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "Euler angles singularity" + "'", str47, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray53), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray53), "[]");
    }

    @Test
    public void test1519() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1519");
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException1 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray2 = cardanEulerSingularityException1.getArguments();
        java.lang.String str3 = cardanEulerSingularityException1.getPattern();
        java.lang.Object[] objArray4 = cardanEulerSingularityException1.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException6 = new org.apache.commons.math.geometry.CardanEulerSingularityException(true);
        java.lang.Object[] objArray7 = cardanEulerSingularityException6.getArguments();
        java.lang.Throwable[] throwableArray8 = cardanEulerSingularityException6.getSuppressed();
        java.lang.Throwable[] throwableArray9 = cardanEulerSingularityException6.getSuppressed();
        java.lang.Throwable[] throwableArray10 = cardanEulerSingularityException6.getSuppressed();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException12 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray13 = cardanEulerSingularityException12.getArguments();
        java.lang.Object[] objArray14 = cardanEulerSingularityException12.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException16 = new org.apache.commons.math.geometry.CardanEulerSingularityException(true);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException18 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        cardanEulerSingularityException16.addSuppressed((java.lang.Throwable) cardanEulerSingularityException18);
        cardanEulerSingularityException12.addSuppressed((java.lang.Throwable) cardanEulerSingularityException16);
        cardanEulerSingularityException6.addSuppressed((java.lang.Throwable) cardanEulerSingularityException12);
        cardanEulerSingularityException1.addSuppressed((java.lang.Throwable) cardanEulerSingularityException6);
        java.lang.Object[] objArray23 = cardanEulerSingularityException1.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException25 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.String str26 = cardanEulerSingularityException25.getPattern();
        java.lang.Object[] objArray27 = cardanEulerSingularityException25.getArguments();
        java.lang.String str28 = cardanEulerSingularityException25.getPattern();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException30 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.String str31 = cardanEulerSingularityException30.getPattern();
        java.lang.Throwable[] throwableArray32 = cardanEulerSingularityException30.getSuppressed();
        cardanEulerSingularityException25.addSuppressed((java.lang.Throwable) cardanEulerSingularityException30);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException35 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.String str36 = cardanEulerSingularityException35.getPattern();
        java.lang.Object[] objArray37 = cardanEulerSingularityException35.getArguments();
        java.lang.String str38 = cardanEulerSingularityException35.getPattern();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException40 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.String str41 = cardanEulerSingularityException40.getPattern();
        java.lang.Throwable[] throwableArray42 = cardanEulerSingularityException40.getSuppressed();
        cardanEulerSingularityException35.addSuppressed((java.lang.Throwable) cardanEulerSingularityException40);
        cardanEulerSingularityException25.addSuppressed((java.lang.Throwable) cardanEulerSingularityException35);
        java.lang.String str45 = cardanEulerSingularityException25.getPattern();
        java.lang.String str46 = cardanEulerSingularityException25.getPattern();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException48 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray49 = cardanEulerSingularityException48.getArguments();
        java.lang.String str50 = cardanEulerSingularityException48.getPattern();
        java.lang.Object[] objArray51 = cardanEulerSingularityException48.getArguments();
        java.lang.Object[] objArray52 = cardanEulerSingularityException48.getArguments();
        java.lang.String str53 = cardanEulerSingularityException48.getPattern();
        cardanEulerSingularityException25.addSuppressed((java.lang.Throwable) cardanEulerSingularityException48);
        cardanEulerSingularityException1.addSuppressed((java.lang.Throwable) cardanEulerSingularityException25);
        java.lang.Object[] objArray56 = cardanEulerSingularityException25.getArguments();
        org.junit.Assert.assertNotNull(objArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray2), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray2), "[]");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Euler angles singularity" + "'", str3, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray4), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray4), "[]");
        org.junit.Assert.assertNotNull(objArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray7), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray7), "[]");
        org.junit.Assert.assertNotNull(throwableArray8);
        org.junit.Assert.assertNotNull(throwableArray9);
        org.junit.Assert.assertNotNull(throwableArray10);
        org.junit.Assert.assertNotNull(objArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray13), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray13), "[]");
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[]");
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray23), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray23), "[]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "Euler angles singularity" + "'", str26, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray27), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray27), "[]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "Euler angles singularity" + "'", str28, "Euler angles singularity");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "Euler angles singularity" + "'", str31, "Euler angles singularity");
        org.junit.Assert.assertNotNull(throwableArray32);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "Euler angles singularity" + "'", str36, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray37), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray37), "[]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "Euler angles singularity" + "'", str38, "Euler angles singularity");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "Euler angles singularity" + "'", str41, "Euler angles singularity");
        org.junit.Assert.assertNotNull(throwableArray42);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "Euler angles singularity" + "'", str45, "Euler angles singularity");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "Euler angles singularity" + "'", str46, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray49), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray49), "[]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "Euler angles singularity" + "'", str50, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray51), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray51), "[]");
        org.junit.Assert.assertNotNull(objArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray52), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray52), "[]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "Euler angles singularity" + "'", str53, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray56), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray56), "[]");
    }

    @Test
    public void test1520() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1520");
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException1 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray2 = cardanEulerSingularityException1.getArguments();
        java.lang.String str3 = cardanEulerSingularityException1.getPattern();
        java.lang.Object[] objArray4 = cardanEulerSingularityException1.getArguments();
        java.lang.Object[] objArray5 = cardanEulerSingularityException1.getArguments();
        java.lang.String str6 = cardanEulerSingularityException1.getPattern();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException8 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        cardanEulerSingularityException1.addSuppressed((java.lang.Throwable) cardanEulerSingularityException8);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException11 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray12 = cardanEulerSingularityException11.getArguments();
        java.lang.String str13 = cardanEulerSingularityException11.getPattern();
        java.lang.Object[] objArray14 = cardanEulerSingularityException11.getArguments();
        java.lang.Object[] objArray15 = cardanEulerSingularityException11.getArguments();
        java.lang.String str16 = cardanEulerSingularityException11.getPattern();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException18 = new org.apache.commons.math.geometry.CardanEulerSingularityException(true);
        java.lang.Object[] objArray19 = cardanEulerSingularityException18.getArguments();
        java.lang.Throwable[] throwableArray20 = cardanEulerSingularityException18.getSuppressed();
        java.lang.Throwable[] throwableArray21 = cardanEulerSingularityException18.getSuppressed();
        cardanEulerSingularityException11.addSuppressed((java.lang.Throwable) cardanEulerSingularityException18);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException24 = new org.apache.commons.math.geometry.CardanEulerSingularityException(true);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException26 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        cardanEulerSingularityException24.addSuppressed((java.lang.Throwable) cardanEulerSingularityException26);
        java.lang.String str28 = cardanEulerSingularityException26.getPattern();
        java.lang.Throwable[] throwableArray29 = cardanEulerSingularityException26.getSuppressed();
        java.lang.String str30 = cardanEulerSingularityException26.getPattern();
        java.lang.Throwable[] throwableArray31 = cardanEulerSingularityException26.getSuppressed();
        cardanEulerSingularityException18.addSuppressed((java.lang.Throwable) cardanEulerSingularityException26);
        cardanEulerSingularityException8.addSuppressed((java.lang.Throwable) cardanEulerSingularityException18);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException35 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray36 = cardanEulerSingularityException35.getArguments();
        java.lang.Object[] objArray37 = cardanEulerSingularityException35.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException39 = new org.apache.commons.math.geometry.CardanEulerSingularityException(true);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException41 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        cardanEulerSingularityException39.addSuppressed((java.lang.Throwable) cardanEulerSingularityException41);
        cardanEulerSingularityException35.addSuppressed((java.lang.Throwable) cardanEulerSingularityException39);
        cardanEulerSingularityException8.addSuppressed((java.lang.Throwable) cardanEulerSingularityException35);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException46 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray47 = cardanEulerSingularityException46.getArguments();
        java.lang.Throwable[] throwableArray48 = cardanEulerSingularityException46.getSuppressed();
        java.lang.String str49 = cardanEulerSingularityException46.getPattern();
        java.lang.Throwable[] throwableArray50 = cardanEulerSingularityException46.getSuppressed();
        java.lang.String str51 = cardanEulerSingularityException46.getPattern();
        java.lang.String str52 = cardanEulerSingularityException46.getPattern();
        java.lang.String str53 = cardanEulerSingularityException46.getPattern();
        java.lang.Object[] objArray54 = cardanEulerSingularityException46.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException56 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.String str57 = cardanEulerSingularityException56.getPattern();
        java.lang.Object[] objArray58 = cardanEulerSingularityException56.getArguments();
        java.lang.String str59 = cardanEulerSingularityException56.getPattern();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException61 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.String str62 = cardanEulerSingularityException61.getPattern();
        java.lang.Throwable[] throwableArray63 = cardanEulerSingularityException61.getSuppressed();
        cardanEulerSingularityException56.addSuppressed((java.lang.Throwable) cardanEulerSingularityException61);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException66 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.String str67 = cardanEulerSingularityException66.getPattern();
        java.lang.Object[] objArray68 = cardanEulerSingularityException66.getArguments();
        java.lang.String str69 = cardanEulerSingularityException66.getPattern();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException71 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.String str72 = cardanEulerSingularityException71.getPattern();
        java.lang.Throwable[] throwableArray73 = cardanEulerSingularityException71.getSuppressed();
        cardanEulerSingularityException66.addSuppressed((java.lang.Throwable) cardanEulerSingularityException71);
        cardanEulerSingularityException56.addSuppressed((java.lang.Throwable) cardanEulerSingularityException66);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException77 = new org.apache.commons.math.geometry.CardanEulerSingularityException(true);
        cardanEulerSingularityException56.addSuppressed((java.lang.Throwable) cardanEulerSingularityException77);
        java.lang.Object[] objArray79 = cardanEulerSingularityException56.getArguments();
        cardanEulerSingularityException46.addSuppressed((java.lang.Throwable) cardanEulerSingularityException56);
        cardanEulerSingularityException35.addSuppressed((java.lang.Throwable) cardanEulerSingularityException46);
        java.lang.String str82 = cardanEulerSingularityException35.getPattern();
        org.junit.Assert.assertNotNull(objArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray2), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray2), "[]");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Euler angles singularity" + "'", str3, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray4), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray4), "[]");
        org.junit.Assert.assertNotNull(objArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray5), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray5), "[]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "Euler angles singularity" + "'", str6, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray12), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray12), "[]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Euler angles singularity" + "'", str13, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[]");
        org.junit.Assert.assertNotNull(objArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray15), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray15), "[]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "Euler angles singularity" + "'", str16, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray19), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray19), "[]");
        org.junit.Assert.assertNotNull(throwableArray20);
        org.junit.Assert.assertNotNull(throwableArray21);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "Euler angles singularity" + "'", str28, "Euler angles singularity");
        org.junit.Assert.assertNotNull(throwableArray29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "Euler angles singularity" + "'", str30, "Euler angles singularity");
        org.junit.Assert.assertNotNull(throwableArray31);
        org.junit.Assert.assertNotNull(objArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray36), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray36), "[]");
        org.junit.Assert.assertNotNull(objArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray37), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray37), "[]");
        org.junit.Assert.assertNotNull(objArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray47), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray47), "[]");
        org.junit.Assert.assertNotNull(throwableArray48);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "Euler angles singularity" + "'", str49, "Euler angles singularity");
        org.junit.Assert.assertNotNull(throwableArray50);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "Euler angles singularity" + "'", str51, "Euler angles singularity");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "Euler angles singularity" + "'", str52, "Euler angles singularity");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "Euler angles singularity" + "'", str53, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray54), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray54), "[]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "Euler angles singularity" + "'", str57, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray58), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray58), "[]");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "Euler angles singularity" + "'", str59, "Euler angles singularity");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "Euler angles singularity" + "'", str62, "Euler angles singularity");
        org.junit.Assert.assertNotNull(throwableArray63);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "Euler angles singularity" + "'", str67, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray68), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray68), "[]");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "Euler angles singularity" + "'", str69, "Euler angles singularity");
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "Euler angles singularity" + "'", str72, "Euler angles singularity");
        org.junit.Assert.assertNotNull(throwableArray73);
        org.junit.Assert.assertNotNull(objArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray79), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray79), "[]");
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "Euler angles singularity" + "'", str82, "Euler angles singularity");
    }

    @Test
    public void test1521() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1521");
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException1 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray2 = cardanEulerSingularityException1.getArguments();
        java.lang.String str3 = cardanEulerSingularityException1.getPattern();
        java.lang.Object[] objArray4 = cardanEulerSingularityException1.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException6 = new org.apache.commons.math.geometry.CardanEulerSingularityException(true);
        java.lang.Object[] objArray7 = cardanEulerSingularityException6.getArguments();
        java.lang.Throwable[] throwableArray8 = cardanEulerSingularityException6.getSuppressed();
        java.lang.Throwable[] throwableArray9 = cardanEulerSingularityException6.getSuppressed();
        java.lang.Throwable[] throwableArray10 = cardanEulerSingularityException6.getSuppressed();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException12 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray13 = cardanEulerSingularityException12.getArguments();
        java.lang.Object[] objArray14 = cardanEulerSingularityException12.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException16 = new org.apache.commons.math.geometry.CardanEulerSingularityException(true);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException18 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        cardanEulerSingularityException16.addSuppressed((java.lang.Throwable) cardanEulerSingularityException18);
        cardanEulerSingularityException12.addSuppressed((java.lang.Throwable) cardanEulerSingularityException16);
        cardanEulerSingularityException6.addSuppressed((java.lang.Throwable) cardanEulerSingularityException12);
        cardanEulerSingularityException1.addSuppressed((java.lang.Throwable) cardanEulerSingularityException6);
        java.lang.Throwable[] throwableArray23 = cardanEulerSingularityException1.getSuppressed();
        java.lang.Object[] objArray24 = cardanEulerSingularityException1.getArguments();
        java.lang.String str25 = cardanEulerSingularityException1.getPattern();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException27 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray28 = cardanEulerSingularityException27.getArguments();
        java.lang.Object[] objArray29 = cardanEulerSingularityException27.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException31 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray32 = cardanEulerSingularityException31.getArguments();
        cardanEulerSingularityException27.addSuppressed((java.lang.Throwable) cardanEulerSingularityException31);
        java.lang.Object[] objArray34 = cardanEulerSingularityException31.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException36 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray37 = cardanEulerSingularityException36.getArguments();
        java.lang.Throwable[] throwableArray38 = cardanEulerSingularityException36.getSuppressed();
        java.lang.String str39 = cardanEulerSingularityException36.getPattern();
        cardanEulerSingularityException31.addSuppressed((java.lang.Throwable) cardanEulerSingularityException36);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException42 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray43 = cardanEulerSingularityException42.getArguments();
        java.lang.Object[] objArray44 = cardanEulerSingularityException42.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException46 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray47 = cardanEulerSingularityException46.getArguments();
        cardanEulerSingularityException42.addSuppressed((java.lang.Throwable) cardanEulerSingularityException46);
        java.lang.Throwable[] throwableArray49 = cardanEulerSingularityException42.getSuppressed();
        java.lang.String str50 = cardanEulerSingularityException42.getPattern();
        cardanEulerSingularityException31.addSuppressed((java.lang.Throwable) cardanEulerSingularityException42);
        java.lang.String str52 = cardanEulerSingularityException42.getPattern();
        cardanEulerSingularityException1.addSuppressed((java.lang.Throwable) cardanEulerSingularityException42);
        java.lang.String str54 = cardanEulerSingularityException42.toString();
        org.junit.Assert.assertNotNull(objArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray2), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray2), "[]");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Euler angles singularity" + "'", str3, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray4), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray4), "[]");
        org.junit.Assert.assertNotNull(objArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray7), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray7), "[]");
        org.junit.Assert.assertNotNull(throwableArray8);
        org.junit.Assert.assertNotNull(throwableArray9);
        org.junit.Assert.assertNotNull(throwableArray10);
        org.junit.Assert.assertNotNull(objArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray13), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray13), "[]");
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[]");
        org.junit.Assert.assertNotNull(throwableArray23);
        org.junit.Assert.assertNotNull(objArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray24), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray24), "[]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "Euler angles singularity" + "'", str25, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray28), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray28), "[]");
        org.junit.Assert.assertNotNull(objArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray29), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray29), "[]");
        org.junit.Assert.assertNotNull(objArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray32), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray32), "[]");
        org.junit.Assert.assertNotNull(objArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray34), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray34), "[]");
        org.junit.Assert.assertNotNull(objArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray37), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray37), "[]");
        org.junit.Assert.assertNotNull(throwableArray38);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "Euler angles singularity" + "'", str39, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray43), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray43), "[]");
        org.junit.Assert.assertNotNull(objArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray44), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray44), "[]");
        org.junit.Assert.assertNotNull(objArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray47), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray47), "[]");
        org.junit.Assert.assertNotNull(throwableArray49);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "Euler angles singularity" + "'", str50, "Euler angles singularity");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "Euler angles singularity" + "'", str52, "Euler angles singularity");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "org.apache.commons.math.geometry.CardanEulerSingularityException: Euler angles singularity" + "'", str54, "org.apache.commons.math.geometry.CardanEulerSingularityException: Euler angles singularity");
    }

    @Test
    public void test1522() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1522");
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException1 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray2 = cardanEulerSingularityException1.getArguments();
        java.lang.String str3 = cardanEulerSingularityException1.getPattern();
        java.lang.Object[] objArray4 = cardanEulerSingularityException1.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException6 = new org.apache.commons.math.geometry.CardanEulerSingularityException(true);
        java.lang.Object[] objArray7 = cardanEulerSingularityException6.getArguments();
        java.lang.Object[] objArray8 = cardanEulerSingularityException6.getArguments();
        java.lang.String str9 = cardanEulerSingularityException6.getPattern();
        java.lang.String str10 = cardanEulerSingularityException6.getPattern();
        cardanEulerSingularityException1.addSuppressed((java.lang.Throwable) cardanEulerSingularityException6);
        java.lang.Throwable[] throwableArray12 = cardanEulerSingularityException6.getSuppressed();
        java.lang.Object[] objArray13 = cardanEulerSingularityException6.getArguments();
        java.lang.String str14 = cardanEulerSingularityException6.getPattern();
        java.lang.String str15 = cardanEulerSingularityException6.getPattern();
        java.lang.Throwable[] throwableArray16 = cardanEulerSingularityException6.getSuppressed();
        java.lang.String str17 = cardanEulerSingularityException6.toString();
        org.junit.Assert.assertNotNull(objArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray2), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray2), "[]");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Euler angles singularity" + "'", str3, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray4), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray4), "[]");
        org.junit.Assert.assertNotNull(objArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray7), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray7), "[]");
        org.junit.Assert.assertNotNull(objArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray8), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray8), "[]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Cardan angles singularity" + "'", str9, "Cardan angles singularity");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Cardan angles singularity" + "'", str10, "Cardan angles singularity");
        org.junit.Assert.assertNotNull(throwableArray12);
        org.junit.Assert.assertNotNull(objArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray13), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray13), "[]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "Cardan angles singularity" + "'", str14, "Cardan angles singularity");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Cardan angles singularity" + "'", str15, "Cardan angles singularity");
        org.junit.Assert.assertNotNull(throwableArray16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "org.apache.commons.math.geometry.CardanEulerSingularityException: Cardan angles singularity" + "'", str17, "org.apache.commons.math.geometry.CardanEulerSingularityException: Cardan angles singularity");
    }

    @Test
    public void test1523() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1523");
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException1 = new org.apache.commons.math.geometry.CardanEulerSingularityException(true);
        java.lang.Object[] objArray2 = cardanEulerSingularityException1.getArguments();
        java.lang.Throwable[] throwableArray3 = cardanEulerSingularityException1.getSuppressed();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException5 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray6 = cardanEulerSingularityException5.getArguments();
        java.lang.String str7 = cardanEulerSingularityException5.getPattern();
        java.lang.Object[] objArray8 = cardanEulerSingularityException5.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException10 = new org.apache.commons.math.geometry.CardanEulerSingularityException(true);
        java.lang.Object[] objArray11 = cardanEulerSingularityException10.getArguments();
        java.lang.Object[] objArray12 = cardanEulerSingularityException10.getArguments();
        java.lang.String str13 = cardanEulerSingularityException10.getPattern();
        java.lang.String str14 = cardanEulerSingularityException10.getPattern();
        cardanEulerSingularityException5.addSuppressed((java.lang.Throwable) cardanEulerSingularityException10);
        java.lang.Object[] objArray16 = cardanEulerSingularityException10.getArguments();
        cardanEulerSingularityException1.addSuppressed((java.lang.Throwable) cardanEulerSingularityException10);
        java.lang.String str18 = cardanEulerSingularityException10.getPattern();
        org.junit.Assert.assertNotNull(objArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray2), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray2), "[]");
        org.junit.Assert.assertNotNull(throwableArray3);
        org.junit.Assert.assertNotNull(objArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray6), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray6), "[]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Euler angles singularity" + "'", str7, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray8), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray8), "[]");
        org.junit.Assert.assertNotNull(objArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray11), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray11), "[]");
        org.junit.Assert.assertNotNull(objArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray12), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray12), "[]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Cardan angles singularity" + "'", str13, "Cardan angles singularity");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "Cardan angles singularity" + "'", str14, "Cardan angles singularity");
        org.junit.Assert.assertNotNull(objArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray16), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray16), "[]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "Cardan angles singularity" + "'", str18, "Cardan angles singularity");
    }

    @Test
    public void test1524() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1524");
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException1 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray2 = cardanEulerSingularityException1.getArguments();
        java.lang.Object[] objArray3 = cardanEulerSingularityException1.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException5 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray6 = cardanEulerSingularityException5.getArguments();
        cardanEulerSingularityException1.addSuppressed((java.lang.Throwable) cardanEulerSingularityException5);
        java.lang.Object[] objArray8 = cardanEulerSingularityException5.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException10 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray11 = cardanEulerSingularityException10.getArguments();
        java.lang.Throwable[] throwableArray12 = cardanEulerSingularityException10.getSuppressed();
        java.lang.String str13 = cardanEulerSingularityException10.getPattern();
        cardanEulerSingularityException5.addSuppressed((java.lang.Throwable) cardanEulerSingularityException10);
        java.lang.Object[] objArray15 = cardanEulerSingularityException5.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException17 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.String str18 = cardanEulerSingularityException17.getPattern();
        java.lang.Object[] objArray19 = cardanEulerSingularityException17.getArguments();
        java.lang.String str20 = cardanEulerSingularityException17.getPattern();
        cardanEulerSingularityException5.addSuppressed((java.lang.Throwable) cardanEulerSingularityException17);
        java.lang.String str22 = cardanEulerSingularityException17.getPattern();
        java.lang.String str23 = cardanEulerSingularityException17.getPattern();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException25 = new org.apache.commons.math.geometry.CardanEulerSingularityException(true);
        java.lang.Object[] objArray26 = cardanEulerSingularityException25.getArguments();
        java.lang.Throwable[] throwableArray27 = cardanEulerSingularityException25.getSuppressed();
        java.lang.String str28 = cardanEulerSingularityException25.getPattern();
        java.lang.Object[] objArray29 = cardanEulerSingularityException25.getArguments();
        java.lang.Throwable[] throwableArray30 = cardanEulerSingularityException25.getSuppressed();
        java.lang.Object[] objArray31 = cardanEulerSingularityException25.getArguments();
        java.lang.Throwable[] throwableArray32 = cardanEulerSingularityException25.getSuppressed();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException34 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray35 = cardanEulerSingularityException34.getArguments();
        java.lang.Object[] objArray36 = cardanEulerSingularityException34.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException38 = new org.apache.commons.math.geometry.CardanEulerSingularityException(true);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException40 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        cardanEulerSingularityException38.addSuppressed((java.lang.Throwable) cardanEulerSingularityException40);
        cardanEulerSingularityException34.addSuppressed((java.lang.Throwable) cardanEulerSingularityException38);
        java.lang.String str43 = cardanEulerSingularityException34.getPattern();
        java.lang.String str44 = cardanEulerSingularityException34.getPattern();
        java.lang.Throwable[] throwableArray45 = cardanEulerSingularityException34.getSuppressed();
        cardanEulerSingularityException25.addSuppressed((java.lang.Throwable) cardanEulerSingularityException34);
        cardanEulerSingularityException17.addSuppressed((java.lang.Throwable) cardanEulerSingularityException25);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException49 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray50 = cardanEulerSingularityException49.getArguments();
        java.lang.String str51 = cardanEulerSingularityException49.getPattern();
        java.lang.Object[] objArray52 = cardanEulerSingularityException49.getArguments();
        java.lang.Object[] objArray53 = cardanEulerSingularityException49.getArguments();
        java.lang.String str54 = cardanEulerSingularityException49.getPattern();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException56 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        cardanEulerSingularityException49.addSuppressed((java.lang.Throwable) cardanEulerSingularityException56);
        java.lang.String str58 = cardanEulerSingularityException49.getPattern();
        cardanEulerSingularityException17.addSuppressed((java.lang.Throwable) cardanEulerSingularityException49);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException61 = new org.apache.commons.math.geometry.CardanEulerSingularityException(true);
        java.lang.Object[] objArray62 = cardanEulerSingularityException61.getArguments();
        java.lang.Throwable[] throwableArray63 = cardanEulerSingularityException61.getSuppressed();
        cardanEulerSingularityException49.addSuppressed((java.lang.Throwable) cardanEulerSingularityException61);
        org.junit.Assert.assertNotNull(objArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray2), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray2), "[]");
        org.junit.Assert.assertNotNull(objArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray3), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray3), "[]");
        org.junit.Assert.assertNotNull(objArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray6), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray6), "[]");
        org.junit.Assert.assertNotNull(objArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray8), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray8), "[]");
        org.junit.Assert.assertNotNull(objArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray11), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray11), "[]");
        org.junit.Assert.assertNotNull(throwableArray12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Euler angles singularity" + "'", str13, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray15), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray15), "[]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "Euler angles singularity" + "'", str18, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray19), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray19), "[]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "Euler angles singularity" + "'", str20, "Euler angles singularity");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "Euler angles singularity" + "'", str22, "Euler angles singularity");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "Euler angles singularity" + "'", str23, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray26), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray26), "[]");
        org.junit.Assert.assertNotNull(throwableArray27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "Cardan angles singularity" + "'", str28, "Cardan angles singularity");
        org.junit.Assert.assertNotNull(objArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray29), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray29), "[]");
        org.junit.Assert.assertNotNull(throwableArray30);
        org.junit.Assert.assertNotNull(objArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray31), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray31), "[]");
        org.junit.Assert.assertNotNull(throwableArray32);
        org.junit.Assert.assertNotNull(objArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray35), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray35), "[]");
        org.junit.Assert.assertNotNull(objArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray36), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray36), "[]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "Euler angles singularity" + "'", str43, "Euler angles singularity");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "Euler angles singularity" + "'", str44, "Euler angles singularity");
        org.junit.Assert.assertNotNull(throwableArray45);
        org.junit.Assert.assertNotNull(objArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray50), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray50), "[]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "Euler angles singularity" + "'", str51, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray52), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray52), "[]");
        org.junit.Assert.assertNotNull(objArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray53), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray53), "[]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "Euler angles singularity" + "'", str54, "Euler angles singularity");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "Euler angles singularity" + "'", str58, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray62), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray62), "[]");
        org.junit.Assert.assertNotNull(throwableArray63);
    }

    @Test
    public void test1525() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1525");
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException1 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray2 = cardanEulerSingularityException1.getArguments();
        java.lang.Object[] objArray3 = cardanEulerSingularityException1.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException5 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray6 = cardanEulerSingularityException5.getArguments();
        cardanEulerSingularityException1.addSuppressed((java.lang.Throwable) cardanEulerSingularityException5);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException9 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray10 = cardanEulerSingularityException9.getArguments();
        java.lang.Object[] objArray11 = cardanEulerSingularityException9.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException13 = new org.apache.commons.math.geometry.CardanEulerSingularityException(true);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException15 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        cardanEulerSingularityException13.addSuppressed((java.lang.Throwable) cardanEulerSingularityException15);
        cardanEulerSingularityException9.addSuppressed((java.lang.Throwable) cardanEulerSingularityException13);
        java.lang.Throwable[] throwableArray18 = cardanEulerSingularityException9.getSuppressed();
        cardanEulerSingularityException5.addSuppressed((java.lang.Throwable) cardanEulerSingularityException9);
        java.lang.Throwable[] throwableArray20 = cardanEulerSingularityException5.getSuppressed();
        java.lang.Throwable[] throwableArray21 = cardanEulerSingularityException5.getSuppressed();
        java.lang.String str22 = cardanEulerSingularityException5.getPattern();
        java.lang.String str23 = cardanEulerSingularityException5.getPattern();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException25 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray26 = cardanEulerSingularityException25.getArguments();
        java.lang.Object[] objArray27 = cardanEulerSingularityException25.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException29 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray30 = cardanEulerSingularityException29.getArguments();
        cardanEulerSingularityException25.addSuppressed((java.lang.Throwable) cardanEulerSingularityException29);
        java.lang.Object[] objArray32 = cardanEulerSingularityException29.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException34 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray35 = cardanEulerSingularityException34.getArguments();
        java.lang.Throwable[] throwableArray36 = cardanEulerSingularityException34.getSuppressed();
        java.lang.String str37 = cardanEulerSingularityException34.getPattern();
        cardanEulerSingularityException29.addSuppressed((java.lang.Throwable) cardanEulerSingularityException34);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException40 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray41 = cardanEulerSingularityException40.getArguments();
        java.lang.Object[] objArray42 = cardanEulerSingularityException40.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException44 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray45 = cardanEulerSingularityException44.getArguments();
        cardanEulerSingularityException40.addSuppressed((java.lang.Throwable) cardanEulerSingularityException44);
        java.lang.Throwable[] throwableArray47 = cardanEulerSingularityException40.getSuppressed();
        java.lang.String str48 = cardanEulerSingularityException40.getPattern();
        cardanEulerSingularityException29.addSuppressed((java.lang.Throwable) cardanEulerSingularityException40);
        cardanEulerSingularityException5.addSuppressed((java.lang.Throwable) cardanEulerSingularityException29);
        java.lang.Class<?> wildcardClass51 = cardanEulerSingularityException29.getClass();
        org.junit.Assert.assertNotNull(objArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray2), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray2), "[]");
        org.junit.Assert.assertNotNull(objArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray3), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray3), "[]");
        org.junit.Assert.assertNotNull(objArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray6), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray6), "[]");
        org.junit.Assert.assertNotNull(objArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray10), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray10), "[]");
        org.junit.Assert.assertNotNull(objArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray11), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray11), "[]");
        org.junit.Assert.assertNotNull(throwableArray18);
        org.junit.Assert.assertNotNull(throwableArray20);
        org.junit.Assert.assertNotNull(throwableArray21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "Euler angles singularity" + "'", str22, "Euler angles singularity");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "Euler angles singularity" + "'", str23, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray26), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray26), "[]");
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray27), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray27), "[]");
        org.junit.Assert.assertNotNull(objArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray30), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray30), "[]");
        org.junit.Assert.assertNotNull(objArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray32), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray32), "[]");
        org.junit.Assert.assertNotNull(objArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray35), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray35), "[]");
        org.junit.Assert.assertNotNull(throwableArray36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "Euler angles singularity" + "'", str37, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray41), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray41), "[]");
        org.junit.Assert.assertNotNull(objArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray42), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray42), "[]");
        org.junit.Assert.assertNotNull(objArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray45), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray45), "[]");
        org.junit.Assert.assertNotNull(throwableArray47);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "Euler angles singularity" + "'", str48, "Euler angles singularity");
        org.junit.Assert.assertNotNull(wildcardClass51);
    }

    @Test
    public void test1526() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1526");
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException1 = new org.apache.commons.math.geometry.CardanEulerSingularityException(true);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException3 = new org.apache.commons.math.geometry.CardanEulerSingularityException(true);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException5 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        cardanEulerSingularityException3.addSuppressed((java.lang.Throwable) cardanEulerSingularityException5);
        java.lang.String str7 = cardanEulerSingularityException5.getPattern();
        java.lang.String str8 = cardanEulerSingularityException5.getPattern();
        cardanEulerSingularityException1.addSuppressed((java.lang.Throwable) cardanEulerSingularityException5);
        java.lang.Object[] objArray10 = cardanEulerSingularityException1.getArguments();
        java.lang.Class<?> wildcardClass11 = cardanEulerSingularityException1.getClass();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Euler angles singularity" + "'", str7, "Euler angles singularity");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Euler angles singularity" + "'", str8, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray10), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray10), "[]");
        org.junit.Assert.assertNotNull(wildcardClass11);
    }

    @Test
    public void test1527() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1527");
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException1 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray2 = cardanEulerSingularityException1.getArguments();
        java.lang.String str3 = cardanEulerSingularityException1.getPattern();
        java.lang.Object[] objArray4 = cardanEulerSingularityException1.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException6 = new org.apache.commons.math.geometry.CardanEulerSingularityException(true);
        java.lang.Object[] objArray7 = cardanEulerSingularityException6.getArguments();
        java.lang.Object[] objArray8 = cardanEulerSingularityException6.getArguments();
        java.lang.String str9 = cardanEulerSingularityException6.getPattern();
        java.lang.String str10 = cardanEulerSingularityException6.getPattern();
        cardanEulerSingularityException1.addSuppressed((java.lang.Throwable) cardanEulerSingularityException6);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException13 = new org.apache.commons.math.geometry.CardanEulerSingularityException(true);
        java.lang.Object[] objArray14 = cardanEulerSingularityException13.getArguments();
        java.lang.Throwable[] throwableArray15 = cardanEulerSingularityException13.getSuppressed();
        java.lang.Throwable[] throwableArray16 = cardanEulerSingularityException13.getSuppressed();
        java.lang.Throwable[] throwableArray17 = cardanEulerSingularityException13.getSuppressed();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException19 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray20 = cardanEulerSingularityException19.getArguments();
        java.lang.Object[] objArray21 = cardanEulerSingularityException19.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException23 = new org.apache.commons.math.geometry.CardanEulerSingularityException(true);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException25 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        cardanEulerSingularityException23.addSuppressed((java.lang.Throwable) cardanEulerSingularityException25);
        cardanEulerSingularityException19.addSuppressed((java.lang.Throwable) cardanEulerSingularityException23);
        cardanEulerSingularityException13.addSuppressed((java.lang.Throwable) cardanEulerSingularityException19);
        java.lang.Throwable[] throwableArray29 = cardanEulerSingularityException13.getSuppressed();
        cardanEulerSingularityException6.addSuppressed((java.lang.Throwable) cardanEulerSingularityException13);
        java.lang.Throwable[] throwableArray31 = cardanEulerSingularityException6.getSuppressed();
        java.lang.String str32 = cardanEulerSingularityException6.getPattern();
        java.lang.String str33 = cardanEulerSingularityException6.toString();
        org.junit.Assert.assertNotNull(objArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray2), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray2), "[]");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Euler angles singularity" + "'", str3, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray4), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray4), "[]");
        org.junit.Assert.assertNotNull(objArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray7), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray7), "[]");
        org.junit.Assert.assertNotNull(objArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray8), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray8), "[]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Cardan angles singularity" + "'", str9, "Cardan angles singularity");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Cardan angles singularity" + "'", str10, "Cardan angles singularity");
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[]");
        org.junit.Assert.assertNotNull(throwableArray15);
        org.junit.Assert.assertNotNull(throwableArray16);
        org.junit.Assert.assertNotNull(throwableArray17);
        org.junit.Assert.assertNotNull(objArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray20), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray20), "[]");
        org.junit.Assert.assertNotNull(objArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray21), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray21), "[]");
        org.junit.Assert.assertNotNull(throwableArray29);
        org.junit.Assert.assertNotNull(throwableArray31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "Cardan angles singularity" + "'", str32, "Cardan angles singularity");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "org.apache.commons.math.geometry.CardanEulerSingularityException: Cardan angles singularity" + "'", str33, "org.apache.commons.math.geometry.CardanEulerSingularityException: Cardan angles singularity");
    }

    @Test
    public void test1528() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1528");
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException1 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray2 = cardanEulerSingularityException1.getArguments();
        java.lang.Object[] objArray3 = cardanEulerSingularityException1.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException5 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray6 = cardanEulerSingularityException5.getArguments();
        cardanEulerSingularityException1.addSuppressed((java.lang.Throwable) cardanEulerSingularityException5);
        java.lang.String str8 = cardanEulerSingularityException1.getPattern();
        java.lang.Object[] objArray9 = cardanEulerSingularityException1.getArguments();
        java.lang.String str10 = cardanEulerSingularityException1.getPattern();
        java.lang.String str11 = cardanEulerSingularityException1.getPattern();
        org.junit.Assert.assertNotNull(objArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray2), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray2), "[]");
        org.junit.Assert.assertNotNull(objArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray3), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray3), "[]");
        org.junit.Assert.assertNotNull(objArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray6), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray6), "[]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Euler angles singularity" + "'", str8, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray9), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray9), "[]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Euler angles singularity" + "'", str10, "Euler angles singularity");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Euler angles singularity" + "'", str11, "Euler angles singularity");
    }

    @Test
    public void test1529() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1529");
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException1 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray2 = cardanEulerSingularityException1.getArguments();
        java.lang.String str3 = cardanEulerSingularityException1.getPattern();
        java.lang.Object[] objArray4 = cardanEulerSingularityException1.getArguments();
        java.lang.Object[] objArray5 = cardanEulerSingularityException1.getArguments();
        java.lang.String str6 = cardanEulerSingularityException1.getPattern();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException8 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        cardanEulerSingularityException1.addSuppressed((java.lang.Throwable) cardanEulerSingularityException8);
        java.lang.String str10 = cardanEulerSingularityException1.getPattern();
        java.lang.String str11 = cardanEulerSingularityException1.getPattern();
        java.lang.Object[] objArray12 = cardanEulerSingularityException1.getArguments();
        java.lang.String str13 = cardanEulerSingularityException1.getPattern();
        org.junit.Assert.assertNotNull(objArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray2), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray2), "[]");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Euler angles singularity" + "'", str3, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray4), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray4), "[]");
        org.junit.Assert.assertNotNull(objArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray5), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray5), "[]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "Euler angles singularity" + "'", str6, "Euler angles singularity");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Euler angles singularity" + "'", str10, "Euler angles singularity");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Euler angles singularity" + "'", str11, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray12), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray12), "[]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Euler angles singularity" + "'", str13, "Euler angles singularity");
    }

    @Test
    public void test1530() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1530");
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException1 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray2 = cardanEulerSingularityException1.getArguments();
        java.lang.String str3 = cardanEulerSingularityException1.getPattern();
        java.lang.Object[] objArray4 = cardanEulerSingularityException1.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException6 = new org.apache.commons.math.geometry.CardanEulerSingularityException(true);
        java.lang.Object[] objArray7 = cardanEulerSingularityException6.getArguments();
        java.lang.Object[] objArray8 = cardanEulerSingularityException6.getArguments();
        java.lang.String str9 = cardanEulerSingularityException6.getPattern();
        java.lang.String str10 = cardanEulerSingularityException6.getPattern();
        cardanEulerSingularityException1.addSuppressed((java.lang.Throwable) cardanEulerSingularityException6);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException13 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray14 = cardanEulerSingularityException13.getArguments();
        java.lang.String str15 = cardanEulerSingularityException13.getPattern();
        java.lang.Object[] objArray16 = cardanEulerSingularityException13.getArguments();
        java.lang.Object[] objArray17 = cardanEulerSingularityException13.getArguments();
        java.lang.String str18 = cardanEulerSingularityException13.getPattern();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException20 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        cardanEulerSingularityException13.addSuppressed((java.lang.Throwable) cardanEulerSingularityException20);
        java.lang.String str22 = cardanEulerSingularityException13.getPattern();
        java.lang.String str23 = cardanEulerSingularityException13.getPattern();
        cardanEulerSingularityException1.addSuppressed((java.lang.Throwable) cardanEulerSingularityException13);
        java.lang.Throwable[] throwableArray25 = cardanEulerSingularityException1.getSuppressed();
        java.lang.Throwable[] throwableArray26 = cardanEulerSingularityException1.getSuppressed();
        java.lang.String str27 = cardanEulerSingularityException1.getPattern();
        java.lang.Throwable[] throwableArray28 = cardanEulerSingularityException1.getSuppressed();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException30 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray31 = cardanEulerSingularityException30.getArguments();
        java.lang.String str32 = cardanEulerSingularityException30.getPattern();
        java.lang.Object[] objArray33 = cardanEulerSingularityException30.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException35 = new org.apache.commons.math.geometry.CardanEulerSingularityException(true);
        java.lang.Object[] objArray36 = cardanEulerSingularityException35.getArguments();
        java.lang.Throwable[] throwableArray37 = cardanEulerSingularityException35.getSuppressed();
        java.lang.Throwable[] throwableArray38 = cardanEulerSingularityException35.getSuppressed();
        java.lang.Throwable[] throwableArray39 = cardanEulerSingularityException35.getSuppressed();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException41 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray42 = cardanEulerSingularityException41.getArguments();
        java.lang.Object[] objArray43 = cardanEulerSingularityException41.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException45 = new org.apache.commons.math.geometry.CardanEulerSingularityException(true);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException47 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        cardanEulerSingularityException45.addSuppressed((java.lang.Throwable) cardanEulerSingularityException47);
        cardanEulerSingularityException41.addSuppressed((java.lang.Throwable) cardanEulerSingularityException45);
        cardanEulerSingularityException35.addSuppressed((java.lang.Throwable) cardanEulerSingularityException41);
        cardanEulerSingularityException30.addSuppressed((java.lang.Throwable) cardanEulerSingularityException35);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException53 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray54 = cardanEulerSingularityException53.getArguments();
        java.lang.Object[] objArray55 = cardanEulerSingularityException53.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException57 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray58 = cardanEulerSingularityException57.getArguments();
        cardanEulerSingularityException53.addSuppressed((java.lang.Throwable) cardanEulerSingularityException57);
        java.lang.Object[] objArray60 = cardanEulerSingularityException57.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException62 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray63 = cardanEulerSingularityException62.getArguments();
        java.lang.Throwable[] throwableArray64 = cardanEulerSingularityException62.getSuppressed();
        java.lang.String str65 = cardanEulerSingularityException62.getPattern();
        cardanEulerSingularityException57.addSuppressed((java.lang.Throwable) cardanEulerSingularityException62);
        java.lang.Object[] objArray67 = cardanEulerSingularityException57.getArguments();
        java.lang.Throwable[] throwableArray68 = cardanEulerSingularityException57.getSuppressed();
        java.lang.Object[] objArray69 = cardanEulerSingularityException57.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException71 = new org.apache.commons.math.geometry.CardanEulerSingularityException(true);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException73 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        cardanEulerSingularityException71.addSuppressed((java.lang.Throwable) cardanEulerSingularityException73);
        java.lang.Throwable[] throwableArray75 = cardanEulerSingularityException71.getSuppressed();
        cardanEulerSingularityException57.addSuppressed((java.lang.Throwable) cardanEulerSingularityException71);
        cardanEulerSingularityException35.addSuppressed((java.lang.Throwable) cardanEulerSingularityException57);
        java.lang.Object[] objArray78 = cardanEulerSingularityException57.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException80 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray81 = cardanEulerSingularityException80.getArguments();
        java.lang.String str82 = cardanEulerSingularityException80.getPattern();
        java.lang.Object[] objArray83 = cardanEulerSingularityException80.getArguments();
        java.lang.Object[] objArray84 = cardanEulerSingularityException80.getArguments();
        java.lang.String str85 = cardanEulerSingularityException80.getPattern();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException87 = new org.apache.commons.math.geometry.CardanEulerSingularityException(true);
        java.lang.Object[] objArray88 = cardanEulerSingularityException87.getArguments();
        java.lang.Throwable[] throwableArray89 = cardanEulerSingularityException87.getSuppressed();
        java.lang.Throwable[] throwableArray90 = cardanEulerSingularityException87.getSuppressed();
        cardanEulerSingularityException80.addSuppressed((java.lang.Throwable) cardanEulerSingularityException87);
        java.lang.Object[] objArray92 = cardanEulerSingularityException80.getArguments();
        cardanEulerSingularityException57.addSuppressed((java.lang.Throwable) cardanEulerSingularityException80);
        java.lang.Object[] objArray94 = cardanEulerSingularityException80.getArguments();
        java.lang.String str95 = cardanEulerSingularityException80.getPattern();
        cardanEulerSingularityException1.addSuppressed((java.lang.Throwable) cardanEulerSingularityException80);
        java.lang.String str97 = cardanEulerSingularityException80.toString();
        org.junit.Assert.assertNotNull(objArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray2), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray2), "[]");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Euler angles singularity" + "'", str3, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray4), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray4), "[]");
        org.junit.Assert.assertNotNull(objArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray7), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray7), "[]");
        org.junit.Assert.assertNotNull(objArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray8), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray8), "[]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Cardan angles singularity" + "'", str9, "Cardan angles singularity");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Cardan angles singularity" + "'", str10, "Cardan angles singularity");
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Euler angles singularity" + "'", str15, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray16), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray16), "[]");
        org.junit.Assert.assertNotNull(objArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray17), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray17), "[]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "Euler angles singularity" + "'", str18, "Euler angles singularity");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "Euler angles singularity" + "'", str22, "Euler angles singularity");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "Euler angles singularity" + "'", str23, "Euler angles singularity");
        org.junit.Assert.assertNotNull(throwableArray25);
        org.junit.Assert.assertNotNull(throwableArray26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "Euler angles singularity" + "'", str27, "Euler angles singularity");
        org.junit.Assert.assertNotNull(throwableArray28);
        org.junit.Assert.assertNotNull(objArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray31), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray31), "[]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "Euler angles singularity" + "'", str32, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray33), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray33), "[]");
        org.junit.Assert.assertNotNull(objArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray36), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray36), "[]");
        org.junit.Assert.assertNotNull(throwableArray37);
        org.junit.Assert.assertNotNull(throwableArray38);
        org.junit.Assert.assertNotNull(throwableArray39);
        org.junit.Assert.assertNotNull(objArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray42), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray42), "[]");
        org.junit.Assert.assertNotNull(objArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray43), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray43), "[]");
        org.junit.Assert.assertNotNull(objArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray54), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray54), "[]");
        org.junit.Assert.assertNotNull(objArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray55), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray55), "[]");
        org.junit.Assert.assertNotNull(objArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray58), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray58), "[]");
        org.junit.Assert.assertNotNull(objArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray60), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray60), "[]");
        org.junit.Assert.assertNotNull(objArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray63), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray63), "[]");
        org.junit.Assert.assertNotNull(throwableArray64);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "Euler angles singularity" + "'", str65, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray67), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray67), "[]");
        org.junit.Assert.assertNotNull(throwableArray68);
        org.junit.Assert.assertNotNull(objArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray69), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray69), "[]");
        org.junit.Assert.assertNotNull(throwableArray75);
        org.junit.Assert.assertNotNull(objArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray78), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray78), "[]");
        org.junit.Assert.assertNotNull(objArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray81), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray81), "[]");
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "Euler angles singularity" + "'", str82, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray83), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray83), "[]");
        org.junit.Assert.assertNotNull(objArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray84), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray84), "[]");
        org.junit.Assert.assertEquals("'" + str85 + "' != '" + "Euler angles singularity" + "'", str85, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray88), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray88), "[]");
        org.junit.Assert.assertNotNull(throwableArray89);
        org.junit.Assert.assertNotNull(throwableArray90);
        org.junit.Assert.assertNotNull(objArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray92), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray92), "[]");
        org.junit.Assert.assertNotNull(objArray94);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray94), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray94), "[]");
        org.junit.Assert.assertEquals("'" + str95 + "' != '" + "Euler angles singularity" + "'", str95, "Euler angles singularity");
        org.junit.Assert.assertEquals("'" + str97 + "' != '" + "org.apache.commons.math.geometry.CardanEulerSingularityException: Euler angles singularity" + "'", str97, "org.apache.commons.math.geometry.CardanEulerSingularityException: Euler angles singularity");
    }

    @Test
    public void test1531() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1531");
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException1 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray2 = cardanEulerSingularityException1.getArguments();
        java.lang.Object[] objArray3 = cardanEulerSingularityException1.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException5 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray6 = cardanEulerSingularityException5.getArguments();
        cardanEulerSingularityException1.addSuppressed((java.lang.Throwable) cardanEulerSingularityException5);
        java.lang.Object[] objArray8 = cardanEulerSingularityException5.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException10 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray11 = cardanEulerSingularityException10.getArguments();
        java.lang.Throwable[] throwableArray12 = cardanEulerSingularityException10.getSuppressed();
        java.lang.String str13 = cardanEulerSingularityException10.getPattern();
        cardanEulerSingularityException5.addSuppressed((java.lang.Throwable) cardanEulerSingularityException10);
        java.lang.Object[] objArray15 = cardanEulerSingularityException5.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException17 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.String str18 = cardanEulerSingularityException17.getPattern();
        java.lang.Object[] objArray19 = cardanEulerSingularityException17.getArguments();
        java.lang.String str20 = cardanEulerSingularityException17.getPattern();
        cardanEulerSingularityException5.addSuppressed((java.lang.Throwable) cardanEulerSingularityException17);
        java.lang.Object[] objArray22 = cardanEulerSingularityException5.getArguments();
        java.lang.Object[] objArray23 = cardanEulerSingularityException5.getArguments();
        java.lang.String str24 = cardanEulerSingularityException5.getPattern();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException26 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray27 = cardanEulerSingularityException26.getArguments();
        java.lang.Object[] objArray28 = cardanEulerSingularityException26.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException30 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray31 = cardanEulerSingularityException30.getArguments();
        cardanEulerSingularityException26.addSuppressed((java.lang.Throwable) cardanEulerSingularityException30);
        java.lang.Object[] objArray33 = cardanEulerSingularityException30.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException35 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray36 = cardanEulerSingularityException35.getArguments();
        java.lang.Throwable[] throwableArray37 = cardanEulerSingularityException35.getSuppressed();
        java.lang.String str38 = cardanEulerSingularityException35.getPattern();
        cardanEulerSingularityException30.addSuppressed((java.lang.Throwable) cardanEulerSingularityException35);
        java.lang.Object[] objArray40 = cardanEulerSingularityException30.getArguments();
        java.lang.Throwable[] throwableArray41 = cardanEulerSingularityException30.getSuppressed();
        java.lang.Object[] objArray42 = cardanEulerSingularityException30.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException44 = new org.apache.commons.math.geometry.CardanEulerSingularityException(true);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException46 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        cardanEulerSingularityException44.addSuppressed((java.lang.Throwable) cardanEulerSingularityException46);
        java.lang.Throwable[] throwableArray48 = cardanEulerSingularityException44.getSuppressed();
        cardanEulerSingularityException30.addSuppressed((java.lang.Throwable) cardanEulerSingularityException44);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException51 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray52 = cardanEulerSingularityException51.getArguments();
        java.lang.Object[] objArray53 = cardanEulerSingularityException51.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException55 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray56 = cardanEulerSingularityException55.getArguments();
        cardanEulerSingularityException51.addSuppressed((java.lang.Throwable) cardanEulerSingularityException55);
        java.lang.Throwable[] throwableArray58 = cardanEulerSingularityException55.getSuppressed();
        java.lang.Object[] objArray59 = cardanEulerSingularityException55.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException61 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray62 = cardanEulerSingularityException61.getArguments();
        java.lang.Object[] objArray63 = cardanEulerSingularityException61.getArguments();
        java.lang.Object[] objArray64 = cardanEulerSingularityException61.getArguments();
        cardanEulerSingularityException55.addSuppressed((java.lang.Throwable) cardanEulerSingularityException61);
        cardanEulerSingularityException44.addSuppressed((java.lang.Throwable) cardanEulerSingularityException61);
        cardanEulerSingularityException5.addSuppressed((java.lang.Throwable) cardanEulerSingularityException61);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException69 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray70 = cardanEulerSingularityException69.getArguments();
        java.lang.Object[] objArray71 = cardanEulerSingularityException69.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException73 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray74 = cardanEulerSingularityException73.getArguments();
        cardanEulerSingularityException69.addSuppressed((java.lang.Throwable) cardanEulerSingularityException73);
        java.lang.Object[] objArray76 = cardanEulerSingularityException73.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException78 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray79 = cardanEulerSingularityException78.getArguments();
        java.lang.Throwable[] throwableArray80 = cardanEulerSingularityException78.getSuppressed();
        java.lang.String str81 = cardanEulerSingularityException78.getPattern();
        cardanEulerSingularityException73.addSuppressed((java.lang.Throwable) cardanEulerSingularityException78);
        java.lang.Object[] objArray83 = cardanEulerSingularityException73.getArguments();
        java.lang.Object[] objArray84 = cardanEulerSingularityException73.getArguments();
        java.lang.Throwable[] throwableArray85 = cardanEulerSingularityException73.getSuppressed();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException87 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray88 = cardanEulerSingularityException87.getArguments();
        java.lang.Throwable[] throwableArray89 = cardanEulerSingularityException87.getSuppressed();
        java.lang.String str90 = cardanEulerSingularityException87.getPattern();
        java.lang.Throwable[] throwableArray91 = cardanEulerSingularityException87.getSuppressed();
        java.lang.Throwable[] throwableArray92 = cardanEulerSingularityException87.getSuppressed();
        java.lang.Object[] objArray93 = cardanEulerSingularityException87.getArguments();
        cardanEulerSingularityException73.addSuppressed((java.lang.Throwable) cardanEulerSingularityException87);
        java.lang.Throwable[] throwableArray95 = cardanEulerSingularityException73.getSuppressed();
        cardanEulerSingularityException61.addSuppressed((java.lang.Throwable) cardanEulerSingularityException73);
        java.lang.String str97 = cardanEulerSingularityException61.toString();
        org.junit.Assert.assertNotNull(objArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray2), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray2), "[]");
        org.junit.Assert.assertNotNull(objArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray3), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray3), "[]");
        org.junit.Assert.assertNotNull(objArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray6), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray6), "[]");
        org.junit.Assert.assertNotNull(objArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray8), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray8), "[]");
        org.junit.Assert.assertNotNull(objArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray11), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray11), "[]");
        org.junit.Assert.assertNotNull(throwableArray12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Euler angles singularity" + "'", str13, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray15), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray15), "[]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "Euler angles singularity" + "'", str18, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray19), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray19), "[]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "Euler angles singularity" + "'", str20, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray22), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray22), "[]");
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray23), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray23), "[]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "Euler angles singularity" + "'", str24, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray27), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray27), "[]");
        org.junit.Assert.assertNotNull(objArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray28), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray28), "[]");
        org.junit.Assert.assertNotNull(objArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray31), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray31), "[]");
        org.junit.Assert.assertNotNull(objArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray33), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray33), "[]");
        org.junit.Assert.assertNotNull(objArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray36), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray36), "[]");
        org.junit.Assert.assertNotNull(throwableArray37);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "Euler angles singularity" + "'", str38, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray40), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray40), "[]");
        org.junit.Assert.assertNotNull(throwableArray41);
        org.junit.Assert.assertNotNull(objArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray42), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray42), "[]");
        org.junit.Assert.assertNotNull(throwableArray48);
        org.junit.Assert.assertNotNull(objArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray52), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray52), "[]");
        org.junit.Assert.assertNotNull(objArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray53), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray53), "[]");
        org.junit.Assert.assertNotNull(objArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray56), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray56), "[]");
        org.junit.Assert.assertNotNull(throwableArray58);
        org.junit.Assert.assertNotNull(objArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray59), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray59), "[]");
        org.junit.Assert.assertNotNull(objArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray62), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray62), "[]");
        org.junit.Assert.assertNotNull(objArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray63), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray63), "[]");
        org.junit.Assert.assertNotNull(objArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray64), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray64), "[]");
        org.junit.Assert.assertNotNull(objArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray70), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray70), "[]");
        org.junit.Assert.assertNotNull(objArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray71), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray71), "[]");
        org.junit.Assert.assertNotNull(objArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray74), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray74), "[]");
        org.junit.Assert.assertNotNull(objArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray76), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray76), "[]");
        org.junit.Assert.assertNotNull(objArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray79), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray79), "[]");
        org.junit.Assert.assertNotNull(throwableArray80);
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "Euler angles singularity" + "'", str81, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray83), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray83), "[]");
        org.junit.Assert.assertNotNull(objArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray84), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray84), "[]");
        org.junit.Assert.assertNotNull(throwableArray85);
        org.junit.Assert.assertNotNull(objArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray88), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray88), "[]");
        org.junit.Assert.assertNotNull(throwableArray89);
        org.junit.Assert.assertEquals("'" + str90 + "' != '" + "Euler angles singularity" + "'", str90, "Euler angles singularity");
        org.junit.Assert.assertNotNull(throwableArray91);
        org.junit.Assert.assertNotNull(throwableArray92);
        org.junit.Assert.assertNotNull(objArray93);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray93), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray93), "[]");
        org.junit.Assert.assertNotNull(throwableArray95);
        org.junit.Assert.assertEquals("'" + str97 + "' != '" + "org.apache.commons.math.geometry.CardanEulerSingularityException: Euler angles singularity" + "'", str97, "org.apache.commons.math.geometry.CardanEulerSingularityException: Euler angles singularity");
    }

    @Test
    public void test1532() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1532");
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException1 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray2 = cardanEulerSingularityException1.getArguments();
        java.lang.String str3 = cardanEulerSingularityException1.getPattern();
        java.lang.Object[] objArray4 = cardanEulerSingularityException1.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException6 = new org.apache.commons.math.geometry.CardanEulerSingularityException(true);
        java.lang.Object[] objArray7 = cardanEulerSingularityException6.getArguments();
        java.lang.Object[] objArray8 = cardanEulerSingularityException6.getArguments();
        java.lang.String str9 = cardanEulerSingularityException6.getPattern();
        java.lang.String str10 = cardanEulerSingularityException6.getPattern();
        cardanEulerSingularityException1.addSuppressed((java.lang.Throwable) cardanEulerSingularityException6);
        java.lang.String str12 = cardanEulerSingularityException6.getPattern();
        java.lang.Object[] objArray13 = cardanEulerSingularityException6.getArguments();
        java.lang.String str14 = cardanEulerSingularityException6.toString();
        org.junit.Assert.assertNotNull(objArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray2), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray2), "[]");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Euler angles singularity" + "'", str3, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray4), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray4), "[]");
        org.junit.Assert.assertNotNull(objArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray7), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray7), "[]");
        org.junit.Assert.assertNotNull(objArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray8), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray8), "[]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Cardan angles singularity" + "'", str9, "Cardan angles singularity");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Cardan angles singularity" + "'", str10, "Cardan angles singularity");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Cardan angles singularity" + "'", str12, "Cardan angles singularity");
        org.junit.Assert.assertNotNull(objArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray13), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray13), "[]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "org.apache.commons.math.geometry.CardanEulerSingularityException: Cardan angles singularity" + "'", str14, "org.apache.commons.math.geometry.CardanEulerSingularityException: Cardan angles singularity");
    }

    @Test
    public void test1533() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1533");
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException1 = new org.apache.commons.math.geometry.CardanEulerSingularityException(true);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException3 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        cardanEulerSingularityException1.addSuppressed((java.lang.Throwable) cardanEulerSingularityException3);
        java.lang.Throwable[] throwableArray5 = cardanEulerSingularityException1.getSuppressed();
        java.lang.Throwable[] throwableArray6 = cardanEulerSingularityException1.getSuppressed();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException8 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.String str9 = cardanEulerSingularityException8.getPattern();
        cardanEulerSingularityException1.addSuppressed((java.lang.Throwable) cardanEulerSingularityException8);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException12 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray13 = cardanEulerSingularityException12.getArguments();
        java.lang.Throwable[] throwableArray14 = cardanEulerSingularityException12.getSuppressed();
        java.lang.String str15 = cardanEulerSingularityException12.getPattern();
        java.lang.Throwable[] throwableArray16 = cardanEulerSingularityException12.getSuppressed();
        java.lang.String str17 = cardanEulerSingularityException12.getPattern();
        java.lang.Throwable[] throwableArray18 = cardanEulerSingularityException12.getSuppressed();
        cardanEulerSingularityException1.addSuppressed((java.lang.Throwable) cardanEulerSingularityException12);
        java.lang.String str20 = cardanEulerSingularityException12.toString();
        org.junit.Assert.assertNotNull(throwableArray5);
        org.junit.Assert.assertNotNull(throwableArray6);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Euler angles singularity" + "'", str9, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray13), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray13), "[]");
        org.junit.Assert.assertNotNull(throwableArray14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Euler angles singularity" + "'", str15, "Euler angles singularity");
        org.junit.Assert.assertNotNull(throwableArray16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "Euler angles singularity" + "'", str17, "Euler angles singularity");
        org.junit.Assert.assertNotNull(throwableArray18);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "org.apache.commons.math.geometry.CardanEulerSingularityException: Euler angles singularity" + "'", str20, "org.apache.commons.math.geometry.CardanEulerSingularityException: Euler angles singularity");
    }

    @Test
    public void test1534() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1534");
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException1 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.String str2 = cardanEulerSingularityException1.getPattern();
        java.lang.Object[] objArray3 = cardanEulerSingularityException1.getArguments();
        java.lang.String str4 = cardanEulerSingularityException1.getPattern();
        java.lang.Throwable[] throwableArray5 = cardanEulerSingularityException1.getSuppressed();
        java.lang.Object[] objArray6 = cardanEulerSingularityException1.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException8 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.String str9 = cardanEulerSingularityException8.getPattern();
        java.lang.Object[] objArray10 = cardanEulerSingularityException8.getArguments();
        java.lang.String str11 = cardanEulerSingularityException8.getPattern();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException13 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.String str14 = cardanEulerSingularityException13.getPattern();
        java.lang.Throwable[] throwableArray15 = cardanEulerSingularityException13.getSuppressed();
        cardanEulerSingularityException8.addSuppressed((java.lang.Throwable) cardanEulerSingularityException13);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException18 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.String str19 = cardanEulerSingularityException18.getPattern();
        java.lang.Object[] objArray20 = cardanEulerSingularityException18.getArguments();
        java.lang.String str21 = cardanEulerSingularityException18.getPattern();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException23 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.String str24 = cardanEulerSingularityException23.getPattern();
        java.lang.Throwable[] throwableArray25 = cardanEulerSingularityException23.getSuppressed();
        cardanEulerSingularityException18.addSuppressed((java.lang.Throwable) cardanEulerSingularityException23);
        cardanEulerSingularityException8.addSuppressed((java.lang.Throwable) cardanEulerSingularityException18);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException29 = new org.apache.commons.math.geometry.CardanEulerSingularityException(true);
        cardanEulerSingularityException8.addSuppressed((java.lang.Throwable) cardanEulerSingularityException29);
        java.lang.Object[] objArray31 = cardanEulerSingularityException8.getArguments();
        cardanEulerSingularityException1.addSuppressed((java.lang.Throwable) cardanEulerSingularityException8);
        java.lang.Object[] objArray33 = cardanEulerSingularityException8.getArguments();
        java.lang.String str34 = cardanEulerSingularityException8.toString();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "Euler angles singularity" + "'", str2, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray3), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray3), "[]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Euler angles singularity" + "'", str4, "Euler angles singularity");
        org.junit.Assert.assertNotNull(throwableArray5);
        org.junit.Assert.assertNotNull(objArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray6), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray6), "[]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Euler angles singularity" + "'", str9, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray10), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray10), "[]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Euler angles singularity" + "'", str11, "Euler angles singularity");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "Euler angles singularity" + "'", str14, "Euler angles singularity");
        org.junit.Assert.assertNotNull(throwableArray15);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "Euler angles singularity" + "'", str19, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray20), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray20), "[]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "Euler angles singularity" + "'", str21, "Euler angles singularity");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "Euler angles singularity" + "'", str24, "Euler angles singularity");
        org.junit.Assert.assertNotNull(throwableArray25);
        org.junit.Assert.assertNotNull(objArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray31), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray31), "[]");
        org.junit.Assert.assertNotNull(objArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray33), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray33), "[]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "org.apache.commons.math.geometry.CardanEulerSingularityException: Euler angles singularity" + "'", str34, "org.apache.commons.math.geometry.CardanEulerSingularityException: Euler angles singularity");
    }

    @Test
    public void test1535() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1535");
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException1 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray2 = cardanEulerSingularityException1.getArguments();
        java.lang.Object[] objArray3 = cardanEulerSingularityException1.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException5 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray6 = cardanEulerSingularityException5.getArguments();
        cardanEulerSingularityException1.addSuppressed((java.lang.Throwable) cardanEulerSingularityException5);
        java.lang.Object[] objArray8 = cardanEulerSingularityException5.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException10 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray11 = cardanEulerSingularityException10.getArguments();
        java.lang.Throwable[] throwableArray12 = cardanEulerSingularityException10.getSuppressed();
        java.lang.String str13 = cardanEulerSingularityException10.getPattern();
        cardanEulerSingularityException5.addSuppressed((java.lang.Throwable) cardanEulerSingularityException10);
        java.lang.Object[] objArray15 = cardanEulerSingularityException5.getArguments();
        java.lang.Throwable[] throwableArray16 = cardanEulerSingularityException5.getSuppressed();
        java.lang.String str17 = cardanEulerSingularityException5.getPattern();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException19 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray20 = cardanEulerSingularityException19.getArguments();
        java.lang.String str21 = cardanEulerSingularityException19.getPattern();
        java.lang.Object[] objArray22 = cardanEulerSingularityException19.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException24 = new org.apache.commons.math.geometry.CardanEulerSingularityException(true);
        java.lang.Object[] objArray25 = cardanEulerSingularityException24.getArguments();
        java.lang.Throwable[] throwableArray26 = cardanEulerSingularityException24.getSuppressed();
        java.lang.Throwable[] throwableArray27 = cardanEulerSingularityException24.getSuppressed();
        java.lang.Throwable[] throwableArray28 = cardanEulerSingularityException24.getSuppressed();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException30 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray31 = cardanEulerSingularityException30.getArguments();
        java.lang.Object[] objArray32 = cardanEulerSingularityException30.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException34 = new org.apache.commons.math.geometry.CardanEulerSingularityException(true);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException36 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        cardanEulerSingularityException34.addSuppressed((java.lang.Throwable) cardanEulerSingularityException36);
        cardanEulerSingularityException30.addSuppressed((java.lang.Throwable) cardanEulerSingularityException34);
        cardanEulerSingularityException24.addSuppressed((java.lang.Throwable) cardanEulerSingularityException30);
        cardanEulerSingularityException19.addSuppressed((java.lang.Throwable) cardanEulerSingularityException24);
        java.lang.Object[] objArray41 = cardanEulerSingularityException19.getArguments();
        cardanEulerSingularityException5.addSuppressed((java.lang.Throwable) cardanEulerSingularityException19);
        java.lang.String str43 = cardanEulerSingularityException5.toString();
        org.junit.Assert.assertNotNull(objArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray2), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray2), "[]");
        org.junit.Assert.assertNotNull(objArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray3), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray3), "[]");
        org.junit.Assert.assertNotNull(objArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray6), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray6), "[]");
        org.junit.Assert.assertNotNull(objArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray8), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray8), "[]");
        org.junit.Assert.assertNotNull(objArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray11), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray11), "[]");
        org.junit.Assert.assertNotNull(throwableArray12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Euler angles singularity" + "'", str13, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray15), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray15), "[]");
        org.junit.Assert.assertNotNull(throwableArray16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "Euler angles singularity" + "'", str17, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray20), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray20), "[]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "Euler angles singularity" + "'", str21, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray22), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray22), "[]");
        org.junit.Assert.assertNotNull(objArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray25), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray25), "[]");
        org.junit.Assert.assertNotNull(throwableArray26);
        org.junit.Assert.assertNotNull(throwableArray27);
        org.junit.Assert.assertNotNull(throwableArray28);
        org.junit.Assert.assertNotNull(objArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray31), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray31), "[]");
        org.junit.Assert.assertNotNull(objArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray32), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray32), "[]");
        org.junit.Assert.assertNotNull(objArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray41), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray41), "[]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "org.apache.commons.math.geometry.CardanEulerSingularityException: Euler angles singularity" + "'", str43, "org.apache.commons.math.geometry.CardanEulerSingularityException: Euler angles singularity");
    }

    @Test
    public void test1536() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1536");
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException1 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray2 = cardanEulerSingularityException1.getArguments();
        java.lang.Object[] objArray3 = cardanEulerSingularityException1.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException5 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray6 = cardanEulerSingularityException5.getArguments();
        cardanEulerSingularityException1.addSuppressed((java.lang.Throwable) cardanEulerSingularityException5);
        java.lang.Object[] objArray8 = cardanEulerSingularityException5.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException10 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray11 = cardanEulerSingularityException10.getArguments();
        java.lang.Throwable[] throwableArray12 = cardanEulerSingularityException10.getSuppressed();
        java.lang.String str13 = cardanEulerSingularityException10.getPattern();
        java.lang.Throwable[] throwableArray14 = cardanEulerSingularityException10.getSuppressed();
        java.lang.Throwable[] throwableArray15 = cardanEulerSingularityException10.getSuppressed();
        cardanEulerSingularityException5.addSuppressed((java.lang.Throwable) cardanEulerSingularityException10);
        org.junit.Assert.assertNotNull(objArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray2), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray2), "[]");
        org.junit.Assert.assertNotNull(objArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray3), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray3), "[]");
        org.junit.Assert.assertNotNull(objArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray6), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray6), "[]");
        org.junit.Assert.assertNotNull(objArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray8), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray8), "[]");
        org.junit.Assert.assertNotNull(objArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray11), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray11), "[]");
        org.junit.Assert.assertNotNull(throwableArray12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Euler angles singularity" + "'", str13, "Euler angles singularity");
        org.junit.Assert.assertNotNull(throwableArray14);
        org.junit.Assert.assertNotNull(throwableArray15);
    }

    @Test
    public void test1537() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1537");
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException1 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray2 = cardanEulerSingularityException1.getArguments();
        java.lang.Object[] objArray3 = cardanEulerSingularityException1.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException5 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray6 = cardanEulerSingularityException5.getArguments();
        cardanEulerSingularityException1.addSuppressed((java.lang.Throwable) cardanEulerSingularityException5);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException9 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray10 = cardanEulerSingularityException9.getArguments();
        java.lang.Object[] objArray11 = cardanEulerSingularityException9.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException13 = new org.apache.commons.math.geometry.CardanEulerSingularityException(true);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException15 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        cardanEulerSingularityException13.addSuppressed((java.lang.Throwable) cardanEulerSingularityException15);
        cardanEulerSingularityException9.addSuppressed((java.lang.Throwable) cardanEulerSingularityException13);
        java.lang.Throwable[] throwableArray18 = cardanEulerSingularityException9.getSuppressed();
        cardanEulerSingularityException5.addSuppressed((java.lang.Throwable) cardanEulerSingularityException9);
        java.lang.Throwable[] throwableArray20 = cardanEulerSingularityException5.getSuppressed();
        java.lang.Throwable[] throwableArray21 = cardanEulerSingularityException5.getSuppressed();
        java.lang.String str22 = cardanEulerSingularityException5.getPattern();
        java.lang.String str23 = cardanEulerSingularityException5.getPattern();
        java.lang.Object[] objArray24 = cardanEulerSingularityException5.getArguments();
        java.lang.String str25 = cardanEulerSingularityException5.getPattern();
        java.lang.Object[] objArray26 = cardanEulerSingularityException5.getArguments();
        java.lang.Throwable[] throwableArray27 = cardanEulerSingularityException5.getSuppressed();
        org.junit.Assert.assertNotNull(objArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray2), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray2), "[]");
        org.junit.Assert.assertNotNull(objArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray3), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray3), "[]");
        org.junit.Assert.assertNotNull(objArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray6), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray6), "[]");
        org.junit.Assert.assertNotNull(objArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray10), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray10), "[]");
        org.junit.Assert.assertNotNull(objArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray11), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray11), "[]");
        org.junit.Assert.assertNotNull(throwableArray18);
        org.junit.Assert.assertNotNull(throwableArray20);
        org.junit.Assert.assertNotNull(throwableArray21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "Euler angles singularity" + "'", str22, "Euler angles singularity");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "Euler angles singularity" + "'", str23, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray24), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray24), "[]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "Euler angles singularity" + "'", str25, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray26), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray26), "[]");
        org.junit.Assert.assertNotNull(throwableArray27);
    }

    @Test
    public void test1538() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1538");
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException1 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray2 = cardanEulerSingularityException1.getArguments();
        java.lang.String str3 = cardanEulerSingularityException1.getPattern();
        java.lang.Object[] objArray4 = cardanEulerSingularityException1.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException6 = new org.apache.commons.math.geometry.CardanEulerSingularityException(true);
        java.lang.Object[] objArray7 = cardanEulerSingularityException6.getArguments();
        java.lang.Object[] objArray8 = cardanEulerSingularityException6.getArguments();
        java.lang.String str9 = cardanEulerSingularityException6.getPattern();
        java.lang.String str10 = cardanEulerSingularityException6.getPattern();
        cardanEulerSingularityException1.addSuppressed((java.lang.Throwable) cardanEulerSingularityException6);
        java.lang.Throwable[] throwableArray12 = cardanEulerSingularityException6.getSuppressed();
        java.lang.Object[] objArray13 = cardanEulerSingularityException6.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException15 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.String str16 = cardanEulerSingularityException15.getPattern();
        java.lang.Object[] objArray17 = cardanEulerSingularityException15.getArguments();
        java.lang.String str18 = cardanEulerSingularityException15.getPattern();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException20 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.String str21 = cardanEulerSingularityException20.getPattern();
        java.lang.Throwable[] throwableArray22 = cardanEulerSingularityException20.getSuppressed();
        cardanEulerSingularityException15.addSuppressed((java.lang.Throwable) cardanEulerSingularityException20);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException25 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.String str26 = cardanEulerSingularityException25.getPattern();
        java.lang.Object[] objArray27 = cardanEulerSingularityException25.getArguments();
        java.lang.String str28 = cardanEulerSingularityException25.getPattern();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException30 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.String str31 = cardanEulerSingularityException30.getPattern();
        java.lang.Throwable[] throwableArray32 = cardanEulerSingularityException30.getSuppressed();
        cardanEulerSingularityException25.addSuppressed((java.lang.Throwable) cardanEulerSingularityException30);
        cardanEulerSingularityException15.addSuppressed((java.lang.Throwable) cardanEulerSingularityException25);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException36 = new org.apache.commons.math.geometry.CardanEulerSingularityException(true);
        cardanEulerSingularityException15.addSuppressed((java.lang.Throwable) cardanEulerSingularityException36);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException39 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray40 = cardanEulerSingularityException39.getArguments();
        java.lang.Object[] objArray41 = cardanEulerSingularityException39.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException43 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray44 = cardanEulerSingularityException43.getArguments();
        cardanEulerSingularityException39.addSuppressed((java.lang.Throwable) cardanEulerSingularityException43);
        java.lang.Object[] objArray46 = cardanEulerSingularityException43.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException48 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray49 = cardanEulerSingularityException48.getArguments();
        java.lang.Throwable[] throwableArray50 = cardanEulerSingularityException48.getSuppressed();
        java.lang.String str51 = cardanEulerSingularityException48.getPattern();
        cardanEulerSingularityException43.addSuppressed((java.lang.Throwable) cardanEulerSingularityException48);
        java.lang.Object[] objArray53 = cardanEulerSingularityException48.getArguments();
        cardanEulerSingularityException15.addSuppressed((java.lang.Throwable) cardanEulerSingularityException48);
        java.lang.Object[] objArray55 = cardanEulerSingularityException15.getArguments();
        cardanEulerSingularityException6.addSuppressed((java.lang.Throwable) cardanEulerSingularityException15);
        java.lang.Throwable[] throwableArray57 = cardanEulerSingularityException6.getSuppressed();
        java.lang.Throwable[] throwableArray58 = cardanEulerSingularityException6.getSuppressed();
        org.junit.Assert.assertNotNull(objArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray2), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray2), "[]");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Euler angles singularity" + "'", str3, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray4), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray4), "[]");
        org.junit.Assert.assertNotNull(objArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray7), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray7), "[]");
        org.junit.Assert.assertNotNull(objArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray8), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray8), "[]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Cardan angles singularity" + "'", str9, "Cardan angles singularity");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Cardan angles singularity" + "'", str10, "Cardan angles singularity");
        org.junit.Assert.assertNotNull(throwableArray12);
        org.junit.Assert.assertNotNull(objArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray13), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray13), "[]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "Euler angles singularity" + "'", str16, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray17), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray17), "[]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "Euler angles singularity" + "'", str18, "Euler angles singularity");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "Euler angles singularity" + "'", str21, "Euler angles singularity");
        org.junit.Assert.assertNotNull(throwableArray22);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "Euler angles singularity" + "'", str26, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray27), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray27), "[]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "Euler angles singularity" + "'", str28, "Euler angles singularity");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "Euler angles singularity" + "'", str31, "Euler angles singularity");
        org.junit.Assert.assertNotNull(throwableArray32);
        org.junit.Assert.assertNotNull(objArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray40), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray40), "[]");
        org.junit.Assert.assertNotNull(objArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray41), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray41), "[]");
        org.junit.Assert.assertNotNull(objArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray44), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray44), "[]");
        org.junit.Assert.assertNotNull(objArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray46), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray46), "[]");
        org.junit.Assert.assertNotNull(objArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray49), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray49), "[]");
        org.junit.Assert.assertNotNull(throwableArray50);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "Euler angles singularity" + "'", str51, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray53), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray53), "[]");
        org.junit.Assert.assertNotNull(objArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray55), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray55), "[]");
        org.junit.Assert.assertNotNull(throwableArray57);
        org.junit.Assert.assertNotNull(throwableArray58);
    }

    @Test
    public void test1539() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1539");
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException1 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.String str2 = cardanEulerSingularityException1.getPattern();
        java.lang.Object[] objArray3 = cardanEulerSingularityException1.getArguments();
        java.lang.String str4 = cardanEulerSingularityException1.getPattern();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException6 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.String str7 = cardanEulerSingularityException6.getPattern();
        java.lang.Throwable[] throwableArray8 = cardanEulerSingularityException6.getSuppressed();
        cardanEulerSingularityException1.addSuppressed((java.lang.Throwable) cardanEulerSingularityException6);
        java.lang.String str10 = cardanEulerSingularityException1.getPattern();
        java.lang.Object[] objArray11 = cardanEulerSingularityException1.getArguments();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "Euler angles singularity" + "'", str2, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray3), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray3), "[]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Euler angles singularity" + "'", str4, "Euler angles singularity");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Euler angles singularity" + "'", str7, "Euler angles singularity");
        org.junit.Assert.assertNotNull(throwableArray8);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Euler angles singularity" + "'", str10, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray11), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray11), "[]");
    }

    @Test
    public void test1540() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1540");
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException1 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray2 = cardanEulerSingularityException1.getArguments();
        java.lang.String str3 = cardanEulerSingularityException1.getPattern();
        java.lang.Object[] objArray4 = cardanEulerSingularityException1.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException6 = new org.apache.commons.math.geometry.CardanEulerSingularityException(true);
        java.lang.Object[] objArray7 = cardanEulerSingularityException6.getArguments();
        java.lang.Object[] objArray8 = cardanEulerSingularityException6.getArguments();
        java.lang.String str9 = cardanEulerSingularityException6.getPattern();
        java.lang.String str10 = cardanEulerSingularityException6.getPattern();
        cardanEulerSingularityException1.addSuppressed((java.lang.Throwable) cardanEulerSingularityException6);
        java.lang.Throwable[] throwableArray12 = cardanEulerSingularityException6.getSuppressed();
        java.lang.Object[] objArray13 = cardanEulerSingularityException6.getArguments();
        java.lang.String str14 = cardanEulerSingularityException6.getPattern();
        java.lang.Throwable[] throwableArray15 = cardanEulerSingularityException6.getSuppressed();
        java.lang.String str16 = cardanEulerSingularityException6.getPattern();
        java.lang.Object[] objArray17 = cardanEulerSingularityException6.getArguments();
        org.junit.Assert.assertNotNull(objArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray2), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray2), "[]");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Euler angles singularity" + "'", str3, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray4), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray4), "[]");
        org.junit.Assert.assertNotNull(objArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray7), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray7), "[]");
        org.junit.Assert.assertNotNull(objArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray8), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray8), "[]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Cardan angles singularity" + "'", str9, "Cardan angles singularity");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Cardan angles singularity" + "'", str10, "Cardan angles singularity");
        org.junit.Assert.assertNotNull(throwableArray12);
        org.junit.Assert.assertNotNull(objArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray13), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray13), "[]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "Cardan angles singularity" + "'", str14, "Cardan angles singularity");
        org.junit.Assert.assertNotNull(throwableArray15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "Cardan angles singularity" + "'", str16, "Cardan angles singularity");
        org.junit.Assert.assertNotNull(objArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray17), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray17), "[]");
    }

    @Test
    public void test1541() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1541");
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException1 = new org.apache.commons.math.geometry.CardanEulerSingularityException(true);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException3 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray4 = cardanEulerSingularityException3.getArguments();
        java.lang.String str5 = cardanEulerSingularityException3.getPattern();
        java.lang.Object[] objArray6 = cardanEulerSingularityException3.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException8 = new org.apache.commons.math.geometry.CardanEulerSingularityException(true);
        java.lang.Object[] objArray9 = cardanEulerSingularityException8.getArguments();
        java.lang.Throwable[] throwableArray10 = cardanEulerSingularityException8.getSuppressed();
        java.lang.Throwable[] throwableArray11 = cardanEulerSingularityException8.getSuppressed();
        java.lang.Throwable[] throwableArray12 = cardanEulerSingularityException8.getSuppressed();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException14 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray15 = cardanEulerSingularityException14.getArguments();
        java.lang.Object[] objArray16 = cardanEulerSingularityException14.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException18 = new org.apache.commons.math.geometry.CardanEulerSingularityException(true);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException20 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        cardanEulerSingularityException18.addSuppressed((java.lang.Throwable) cardanEulerSingularityException20);
        cardanEulerSingularityException14.addSuppressed((java.lang.Throwable) cardanEulerSingularityException18);
        cardanEulerSingularityException8.addSuppressed((java.lang.Throwable) cardanEulerSingularityException14);
        cardanEulerSingularityException3.addSuppressed((java.lang.Throwable) cardanEulerSingularityException8);
        java.lang.Object[] objArray25 = cardanEulerSingularityException3.getArguments();
        cardanEulerSingularityException1.addSuppressed((java.lang.Throwable) cardanEulerSingularityException3);
        java.lang.Throwable[] throwableArray27 = cardanEulerSingularityException1.getSuppressed();
        java.lang.Class<?> wildcardClass28 = cardanEulerSingularityException1.getClass();
        org.junit.Assert.assertNotNull(objArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray4), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray4), "[]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Euler angles singularity" + "'", str5, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray6), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray6), "[]");
        org.junit.Assert.assertNotNull(objArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray9), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray9), "[]");
        org.junit.Assert.assertNotNull(throwableArray10);
        org.junit.Assert.assertNotNull(throwableArray11);
        org.junit.Assert.assertNotNull(throwableArray12);
        org.junit.Assert.assertNotNull(objArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray15), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray15), "[]");
        org.junit.Assert.assertNotNull(objArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray16), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray16), "[]");
        org.junit.Assert.assertNotNull(objArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray25), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray25), "[]");
        org.junit.Assert.assertNotNull(throwableArray27);
        org.junit.Assert.assertNotNull(wildcardClass28);
    }

    @Test
    public void test1542() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1542");
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException1 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray2 = cardanEulerSingularityException1.getArguments();
        java.lang.Object[] objArray3 = cardanEulerSingularityException1.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException5 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray6 = cardanEulerSingularityException5.getArguments();
        cardanEulerSingularityException1.addSuppressed((java.lang.Throwable) cardanEulerSingularityException5);
        java.lang.Throwable[] throwableArray8 = cardanEulerSingularityException1.getSuppressed();
        java.lang.String str9 = cardanEulerSingularityException1.getPattern();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException11 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray12 = cardanEulerSingularityException11.getArguments();
        java.lang.Object[] objArray13 = cardanEulerSingularityException11.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException15 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray16 = cardanEulerSingularityException15.getArguments();
        cardanEulerSingularityException11.addSuppressed((java.lang.Throwable) cardanEulerSingularityException15);
        java.lang.String str18 = cardanEulerSingularityException15.getPattern();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException20 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray21 = cardanEulerSingularityException20.getArguments();
        java.lang.Object[] objArray22 = cardanEulerSingularityException20.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException24 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray25 = cardanEulerSingularityException24.getArguments();
        java.lang.Object[] objArray26 = cardanEulerSingularityException24.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException28 = new org.apache.commons.math.geometry.CardanEulerSingularityException(true);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException30 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        cardanEulerSingularityException28.addSuppressed((java.lang.Throwable) cardanEulerSingularityException30);
        cardanEulerSingularityException24.addSuppressed((java.lang.Throwable) cardanEulerSingularityException28);
        java.lang.Object[] objArray33 = cardanEulerSingularityException28.getArguments();
        java.lang.Throwable[] throwableArray34 = cardanEulerSingularityException28.getSuppressed();
        cardanEulerSingularityException20.addSuppressed((java.lang.Throwable) cardanEulerSingularityException28);
        cardanEulerSingularityException15.addSuppressed((java.lang.Throwable) cardanEulerSingularityException20);
        java.lang.String str37 = cardanEulerSingularityException20.getPattern();
        java.lang.Object[] objArray38 = cardanEulerSingularityException20.getArguments();
        cardanEulerSingularityException1.addSuppressed((java.lang.Throwable) cardanEulerSingularityException20);
        java.lang.String str40 = cardanEulerSingularityException1.getPattern();
        org.junit.Assert.assertNotNull(objArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray2), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray2), "[]");
        org.junit.Assert.assertNotNull(objArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray3), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray3), "[]");
        org.junit.Assert.assertNotNull(objArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray6), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray6), "[]");
        org.junit.Assert.assertNotNull(throwableArray8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Euler angles singularity" + "'", str9, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray12), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray12), "[]");
        org.junit.Assert.assertNotNull(objArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray13), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray13), "[]");
        org.junit.Assert.assertNotNull(objArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray16), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray16), "[]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "Euler angles singularity" + "'", str18, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray21), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray21), "[]");
        org.junit.Assert.assertNotNull(objArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray22), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray22), "[]");
        org.junit.Assert.assertNotNull(objArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray25), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray25), "[]");
        org.junit.Assert.assertNotNull(objArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray26), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray26), "[]");
        org.junit.Assert.assertNotNull(objArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray33), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray33), "[]");
        org.junit.Assert.assertNotNull(throwableArray34);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "Euler angles singularity" + "'", str37, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray38), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray38), "[]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "Euler angles singularity" + "'", str40, "Euler angles singularity");
    }

    @Test
    public void test1543() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1543");
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException1 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray2 = cardanEulerSingularityException1.getArguments();
        java.lang.Object[] objArray3 = cardanEulerSingularityException1.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException5 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray6 = cardanEulerSingularityException5.getArguments();
        cardanEulerSingularityException1.addSuppressed((java.lang.Throwable) cardanEulerSingularityException5);
        java.lang.Object[] objArray8 = cardanEulerSingularityException5.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException10 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray11 = cardanEulerSingularityException10.getArguments();
        java.lang.Throwable[] throwableArray12 = cardanEulerSingularityException10.getSuppressed();
        java.lang.String str13 = cardanEulerSingularityException10.getPattern();
        cardanEulerSingularityException5.addSuppressed((java.lang.Throwable) cardanEulerSingularityException10);
        java.lang.Object[] objArray15 = cardanEulerSingularityException5.getArguments();
        java.lang.Object[] objArray16 = cardanEulerSingularityException5.getArguments();
        java.lang.Throwable[] throwableArray17 = cardanEulerSingularityException5.getSuppressed();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException19 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray20 = cardanEulerSingularityException19.getArguments();
        java.lang.Throwable[] throwableArray21 = cardanEulerSingularityException19.getSuppressed();
        java.lang.String str22 = cardanEulerSingularityException19.getPattern();
        java.lang.Throwable[] throwableArray23 = cardanEulerSingularityException19.getSuppressed();
        java.lang.Throwable[] throwableArray24 = cardanEulerSingularityException19.getSuppressed();
        java.lang.Object[] objArray25 = cardanEulerSingularityException19.getArguments();
        cardanEulerSingularityException5.addSuppressed((java.lang.Throwable) cardanEulerSingularityException19);
        java.lang.String str27 = cardanEulerSingularityException19.getPattern();
        java.lang.String str28 = cardanEulerSingularityException19.toString();
        org.junit.Assert.assertNotNull(objArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray2), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray2), "[]");
        org.junit.Assert.assertNotNull(objArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray3), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray3), "[]");
        org.junit.Assert.assertNotNull(objArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray6), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray6), "[]");
        org.junit.Assert.assertNotNull(objArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray8), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray8), "[]");
        org.junit.Assert.assertNotNull(objArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray11), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray11), "[]");
        org.junit.Assert.assertNotNull(throwableArray12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Euler angles singularity" + "'", str13, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray15), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray15), "[]");
        org.junit.Assert.assertNotNull(objArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray16), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray16), "[]");
        org.junit.Assert.assertNotNull(throwableArray17);
        org.junit.Assert.assertNotNull(objArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray20), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray20), "[]");
        org.junit.Assert.assertNotNull(throwableArray21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "Euler angles singularity" + "'", str22, "Euler angles singularity");
        org.junit.Assert.assertNotNull(throwableArray23);
        org.junit.Assert.assertNotNull(throwableArray24);
        org.junit.Assert.assertNotNull(objArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray25), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray25), "[]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "Euler angles singularity" + "'", str27, "Euler angles singularity");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "org.apache.commons.math.geometry.CardanEulerSingularityException: Euler angles singularity" + "'", str28, "org.apache.commons.math.geometry.CardanEulerSingularityException: Euler angles singularity");
    }

    @Test
    public void test1544() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1544");
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException1 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray2 = cardanEulerSingularityException1.getArguments();
        java.lang.Object[] objArray3 = cardanEulerSingularityException1.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException5 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray6 = cardanEulerSingularityException5.getArguments();
        cardanEulerSingularityException1.addSuppressed((java.lang.Throwable) cardanEulerSingularityException5);
        java.lang.Object[] objArray8 = cardanEulerSingularityException5.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException10 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray11 = cardanEulerSingularityException10.getArguments();
        java.lang.Throwable[] throwableArray12 = cardanEulerSingularityException10.getSuppressed();
        java.lang.String str13 = cardanEulerSingularityException10.getPattern();
        cardanEulerSingularityException5.addSuppressed((java.lang.Throwable) cardanEulerSingularityException10);
        java.lang.Object[] objArray15 = cardanEulerSingularityException5.getArguments();
        java.lang.Throwable[] throwableArray16 = cardanEulerSingularityException5.getSuppressed();
        java.lang.Object[] objArray17 = cardanEulerSingularityException5.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException19 = new org.apache.commons.math.geometry.CardanEulerSingularityException(true);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException21 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        cardanEulerSingularityException19.addSuppressed((java.lang.Throwable) cardanEulerSingularityException21);
        java.lang.Throwable[] throwableArray23 = cardanEulerSingularityException19.getSuppressed();
        cardanEulerSingularityException5.addSuppressed((java.lang.Throwable) cardanEulerSingularityException19);
        java.lang.String str25 = cardanEulerSingularityException5.getPattern();
        java.lang.Throwable[] throwableArray26 = cardanEulerSingularityException5.getSuppressed();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException28 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray29 = cardanEulerSingularityException28.getArguments();
        java.lang.Object[] objArray30 = cardanEulerSingularityException28.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException32 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray33 = cardanEulerSingularityException32.getArguments();
        cardanEulerSingularityException28.addSuppressed((java.lang.Throwable) cardanEulerSingularityException32);
        java.lang.Throwable[] throwableArray35 = cardanEulerSingularityException28.getSuppressed();
        java.lang.String str36 = cardanEulerSingularityException28.getPattern();
        java.lang.String str37 = cardanEulerSingularityException28.getPattern();
        java.lang.Throwable[] throwableArray38 = cardanEulerSingularityException28.getSuppressed();
        cardanEulerSingularityException5.addSuppressed((java.lang.Throwable) cardanEulerSingularityException28);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException41 = new org.apache.commons.math.geometry.CardanEulerSingularityException(true);
        java.lang.Object[] objArray42 = cardanEulerSingularityException41.getArguments();
        java.lang.Object[] objArray43 = cardanEulerSingularityException41.getArguments();
        java.lang.Object[] objArray44 = cardanEulerSingularityException41.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException46 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray47 = cardanEulerSingularityException46.getArguments();
        java.lang.Object[] objArray48 = cardanEulerSingularityException46.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException50 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray51 = cardanEulerSingularityException50.getArguments();
        java.lang.Object[] objArray52 = cardanEulerSingularityException50.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException54 = new org.apache.commons.math.geometry.CardanEulerSingularityException(true);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException56 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        cardanEulerSingularityException54.addSuppressed((java.lang.Throwable) cardanEulerSingularityException56);
        cardanEulerSingularityException50.addSuppressed((java.lang.Throwable) cardanEulerSingularityException54);
        java.lang.Object[] objArray59 = cardanEulerSingularityException54.getArguments();
        java.lang.Throwable[] throwableArray60 = cardanEulerSingularityException54.getSuppressed();
        cardanEulerSingularityException46.addSuppressed((java.lang.Throwable) cardanEulerSingularityException54);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException63 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray64 = cardanEulerSingularityException63.getArguments();
        java.lang.Object[] objArray65 = cardanEulerSingularityException63.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException67 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray68 = cardanEulerSingularityException67.getArguments();
        cardanEulerSingularityException63.addSuppressed((java.lang.Throwable) cardanEulerSingularityException67);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException71 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray72 = cardanEulerSingularityException71.getArguments();
        java.lang.Object[] objArray73 = cardanEulerSingularityException71.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException75 = new org.apache.commons.math.geometry.CardanEulerSingularityException(true);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException77 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        cardanEulerSingularityException75.addSuppressed((java.lang.Throwable) cardanEulerSingularityException77);
        cardanEulerSingularityException71.addSuppressed((java.lang.Throwable) cardanEulerSingularityException75);
        java.lang.Throwable[] throwableArray80 = cardanEulerSingularityException71.getSuppressed();
        cardanEulerSingularityException67.addSuppressed((java.lang.Throwable) cardanEulerSingularityException71);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException83 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.String str84 = cardanEulerSingularityException83.getPattern();
        java.lang.Throwable[] throwableArray85 = cardanEulerSingularityException83.getSuppressed();
        cardanEulerSingularityException67.addSuppressed((java.lang.Throwable) cardanEulerSingularityException83);
        cardanEulerSingularityException46.addSuppressed((java.lang.Throwable) cardanEulerSingularityException83);
        cardanEulerSingularityException41.addSuppressed((java.lang.Throwable) cardanEulerSingularityException46);
        java.lang.Object[] objArray89 = cardanEulerSingularityException41.getArguments();
        cardanEulerSingularityException28.addSuppressed((java.lang.Throwable) cardanEulerSingularityException41);
        java.lang.Throwable[] throwableArray91 = cardanEulerSingularityException41.getSuppressed();
        org.junit.Assert.assertNotNull(objArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray2), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray2), "[]");
        org.junit.Assert.assertNotNull(objArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray3), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray3), "[]");
        org.junit.Assert.assertNotNull(objArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray6), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray6), "[]");
        org.junit.Assert.assertNotNull(objArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray8), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray8), "[]");
        org.junit.Assert.assertNotNull(objArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray11), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray11), "[]");
        org.junit.Assert.assertNotNull(throwableArray12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Euler angles singularity" + "'", str13, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray15), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray15), "[]");
        org.junit.Assert.assertNotNull(throwableArray16);
        org.junit.Assert.assertNotNull(objArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray17), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray17), "[]");
        org.junit.Assert.assertNotNull(throwableArray23);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "Euler angles singularity" + "'", str25, "Euler angles singularity");
        org.junit.Assert.assertNotNull(throwableArray26);
        org.junit.Assert.assertNotNull(objArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray29), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray29), "[]");
        org.junit.Assert.assertNotNull(objArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray30), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray30), "[]");
        org.junit.Assert.assertNotNull(objArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray33), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray33), "[]");
        org.junit.Assert.assertNotNull(throwableArray35);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "Euler angles singularity" + "'", str36, "Euler angles singularity");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "Euler angles singularity" + "'", str37, "Euler angles singularity");
        org.junit.Assert.assertNotNull(throwableArray38);
        org.junit.Assert.assertNotNull(objArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray42), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray42), "[]");
        org.junit.Assert.assertNotNull(objArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray43), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray43), "[]");
        org.junit.Assert.assertNotNull(objArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray44), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray44), "[]");
        org.junit.Assert.assertNotNull(objArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray47), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray47), "[]");
        org.junit.Assert.assertNotNull(objArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray48), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray48), "[]");
        org.junit.Assert.assertNotNull(objArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray51), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray51), "[]");
        org.junit.Assert.assertNotNull(objArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray52), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray52), "[]");
        org.junit.Assert.assertNotNull(objArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray59), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray59), "[]");
        org.junit.Assert.assertNotNull(throwableArray60);
        org.junit.Assert.assertNotNull(objArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray64), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray64), "[]");
        org.junit.Assert.assertNotNull(objArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray65), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray65), "[]");
        org.junit.Assert.assertNotNull(objArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray68), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray68), "[]");
        org.junit.Assert.assertNotNull(objArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray72), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray72), "[]");
        org.junit.Assert.assertNotNull(objArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray73), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray73), "[]");
        org.junit.Assert.assertNotNull(throwableArray80);
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "Euler angles singularity" + "'", str84, "Euler angles singularity");
        org.junit.Assert.assertNotNull(throwableArray85);
        org.junit.Assert.assertNotNull(objArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray89), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray89), "[]");
        org.junit.Assert.assertNotNull(throwableArray91);
    }

    @Test
    public void test1545() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1545");
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException1 = new org.apache.commons.math.geometry.CardanEulerSingularityException(true);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException3 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        cardanEulerSingularityException1.addSuppressed((java.lang.Throwable) cardanEulerSingularityException3);
        java.lang.String str5 = cardanEulerSingularityException3.getPattern();
        java.lang.Throwable[] throwableArray6 = cardanEulerSingularityException3.getSuppressed();
        java.lang.String str7 = cardanEulerSingularityException3.getPattern();
        java.lang.Throwable[] throwableArray8 = cardanEulerSingularityException3.getSuppressed();
        java.lang.String str9 = cardanEulerSingularityException3.getPattern();
        java.lang.String str10 = cardanEulerSingularityException3.getPattern();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException12 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray13 = cardanEulerSingularityException12.getArguments();
        java.lang.Object[] objArray14 = cardanEulerSingularityException12.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException16 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray17 = cardanEulerSingularityException16.getArguments();
        cardanEulerSingularityException12.addSuppressed((java.lang.Throwable) cardanEulerSingularityException16);
        java.lang.Object[] objArray19 = cardanEulerSingularityException16.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException21 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray22 = cardanEulerSingularityException21.getArguments();
        java.lang.Throwable[] throwableArray23 = cardanEulerSingularityException21.getSuppressed();
        java.lang.String str24 = cardanEulerSingularityException21.getPattern();
        cardanEulerSingularityException16.addSuppressed((java.lang.Throwable) cardanEulerSingularityException21);
        java.lang.Object[] objArray26 = cardanEulerSingularityException16.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException28 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.String str29 = cardanEulerSingularityException28.getPattern();
        java.lang.Object[] objArray30 = cardanEulerSingularityException28.getArguments();
        java.lang.String str31 = cardanEulerSingularityException28.getPattern();
        cardanEulerSingularityException16.addSuppressed((java.lang.Throwable) cardanEulerSingularityException28);
        cardanEulerSingularityException3.addSuppressed((java.lang.Throwable) cardanEulerSingularityException28);
        java.lang.Throwable[] throwableArray34 = cardanEulerSingularityException3.getSuppressed();
        java.lang.Object[] objArray35 = cardanEulerSingularityException3.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException37 = new org.apache.commons.math.geometry.CardanEulerSingularityException(true);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException39 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        cardanEulerSingularityException37.addSuppressed((java.lang.Throwable) cardanEulerSingularityException39);
        java.lang.String str41 = cardanEulerSingularityException39.getPattern();
        java.lang.String str42 = cardanEulerSingularityException39.getPattern();
        cardanEulerSingularityException3.addSuppressed((java.lang.Throwable) cardanEulerSingularityException39);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Euler angles singularity" + "'", str5, "Euler angles singularity");
        org.junit.Assert.assertNotNull(throwableArray6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Euler angles singularity" + "'", str7, "Euler angles singularity");
        org.junit.Assert.assertNotNull(throwableArray8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Euler angles singularity" + "'", str9, "Euler angles singularity");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Euler angles singularity" + "'", str10, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray13), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray13), "[]");
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[]");
        org.junit.Assert.assertNotNull(objArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray17), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray17), "[]");
        org.junit.Assert.assertNotNull(objArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray19), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray19), "[]");
        org.junit.Assert.assertNotNull(objArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray22), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray22), "[]");
        org.junit.Assert.assertNotNull(throwableArray23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "Euler angles singularity" + "'", str24, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray26), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray26), "[]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "Euler angles singularity" + "'", str29, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray30), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray30), "[]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "Euler angles singularity" + "'", str31, "Euler angles singularity");
        org.junit.Assert.assertNotNull(throwableArray34);
        org.junit.Assert.assertNotNull(objArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray35), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray35), "[]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "Euler angles singularity" + "'", str41, "Euler angles singularity");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "Euler angles singularity" + "'", str42, "Euler angles singularity");
    }

    @Test
    public void test1546() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1546");
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException1 = new org.apache.commons.math.geometry.CardanEulerSingularityException(true);
        java.lang.Object[] objArray2 = cardanEulerSingularityException1.getArguments();
        java.lang.Throwable[] throwableArray3 = cardanEulerSingularityException1.getSuppressed();
        java.lang.String str4 = cardanEulerSingularityException1.getPattern();
        java.lang.String str5 = cardanEulerSingularityException1.getPattern();
        java.lang.Throwable[] throwableArray6 = cardanEulerSingularityException1.getSuppressed();
        java.lang.Object[] objArray7 = cardanEulerSingularityException1.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException9 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.String str10 = cardanEulerSingularityException9.getPattern();
        java.lang.Object[] objArray11 = cardanEulerSingularityException9.getArguments();
        java.lang.String str12 = cardanEulerSingularityException9.getPattern();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException14 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.String str15 = cardanEulerSingularityException14.getPattern();
        java.lang.Throwable[] throwableArray16 = cardanEulerSingularityException14.getSuppressed();
        cardanEulerSingularityException9.addSuppressed((java.lang.Throwable) cardanEulerSingularityException14);
        java.lang.String str18 = cardanEulerSingularityException9.getPattern();
        java.lang.String str19 = cardanEulerSingularityException9.getPattern();
        java.lang.Throwable[] throwableArray20 = cardanEulerSingularityException9.getSuppressed();
        cardanEulerSingularityException1.addSuppressed((java.lang.Throwable) cardanEulerSingularityException9);
        java.lang.Throwable[] throwableArray22 = cardanEulerSingularityException1.getSuppressed();
        java.lang.String str23 = cardanEulerSingularityException1.getPattern();
        java.lang.Object[] objArray24 = cardanEulerSingularityException1.getArguments();
        org.junit.Assert.assertNotNull(objArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray2), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray2), "[]");
        org.junit.Assert.assertNotNull(throwableArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Cardan angles singularity" + "'", str4, "Cardan angles singularity");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Cardan angles singularity" + "'", str5, "Cardan angles singularity");
        org.junit.Assert.assertNotNull(throwableArray6);
        org.junit.Assert.assertNotNull(objArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray7), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray7), "[]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Euler angles singularity" + "'", str10, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray11), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray11), "[]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Euler angles singularity" + "'", str12, "Euler angles singularity");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Euler angles singularity" + "'", str15, "Euler angles singularity");
        org.junit.Assert.assertNotNull(throwableArray16);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "Euler angles singularity" + "'", str18, "Euler angles singularity");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "Euler angles singularity" + "'", str19, "Euler angles singularity");
        org.junit.Assert.assertNotNull(throwableArray20);
        org.junit.Assert.assertNotNull(throwableArray22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "Cardan angles singularity" + "'", str23, "Cardan angles singularity");
        org.junit.Assert.assertNotNull(objArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray24), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray24), "[]");
    }

    @Test
    public void test1547() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1547");
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException1 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray2 = cardanEulerSingularityException1.getArguments();
        java.lang.Object[] objArray3 = cardanEulerSingularityException1.getArguments();
        java.lang.Object[] objArray4 = cardanEulerSingularityException1.getArguments();
        java.lang.Object[] objArray5 = cardanEulerSingularityException1.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException7 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray8 = cardanEulerSingularityException7.getArguments();
        java.lang.String str9 = cardanEulerSingularityException7.getPattern();
        java.lang.Object[] objArray10 = cardanEulerSingularityException7.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException12 = new org.apache.commons.math.geometry.CardanEulerSingularityException(true);
        java.lang.Object[] objArray13 = cardanEulerSingularityException12.getArguments();
        java.lang.Throwable[] throwableArray14 = cardanEulerSingularityException12.getSuppressed();
        java.lang.Throwable[] throwableArray15 = cardanEulerSingularityException12.getSuppressed();
        java.lang.Throwable[] throwableArray16 = cardanEulerSingularityException12.getSuppressed();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException18 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray19 = cardanEulerSingularityException18.getArguments();
        java.lang.Object[] objArray20 = cardanEulerSingularityException18.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException22 = new org.apache.commons.math.geometry.CardanEulerSingularityException(true);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException24 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        cardanEulerSingularityException22.addSuppressed((java.lang.Throwable) cardanEulerSingularityException24);
        cardanEulerSingularityException18.addSuppressed((java.lang.Throwable) cardanEulerSingularityException22);
        cardanEulerSingularityException12.addSuppressed((java.lang.Throwable) cardanEulerSingularityException18);
        cardanEulerSingularityException7.addSuppressed((java.lang.Throwable) cardanEulerSingularityException12);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException30 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray31 = cardanEulerSingularityException30.getArguments();
        java.lang.Object[] objArray32 = cardanEulerSingularityException30.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException34 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray35 = cardanEulerSingularityException34.getArguments();
        cardanEulerSingularityException30.addSuppressed((java.lang.Throwable) cardanEulerSingularityException34);
        java.lang.Object[] objArray37 = cardanEulerSingularityException34.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException39 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray40 = cardanEulerSingularityException39.getArguments();
        java.lang.Throwable[] throwableArray41 = cardanEulerSingularityException39.getSuppressed();
        java.lang.String str42 = cardanEulerSingularityException39.getPattern();
        cardanEulerSingularityException34.addSuppressed((java.lang.Throwable) cardanEulerSingularityException39);
        java.lang.Object[] objArray44 = cardanEulerSingularityException34.getArguments();
        java.lang.Throwable[] throwableArray45 = cardanEulerSingularityException34.getSuppressed();
        java.lang.Object[] objArray46 = cardanEulerSingularityException34.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException48 = new org.apache.commons.math.geometry.CardanEulerSingularityException(true);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException50 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        cardanEulerSingularityException48.addSuppressed((java.lang.Throwable) cardanEulerSingularityException50);
        java.lang.Throwable[] throwableArray52 = cardanEulerSingularityException48.getSuppressed();
        cardanEulerSingularityException34.addSuppressed((java.lang.Throwable) cardanEulerSingularityException48);
        cardanEulerSingularityException12.addSuppressed((java.lang.Throwable) cardanEulerSingularityException34);
        cardanEulerSingularityException1.addSuppressed((java.lang.Throwable) cardanEulerSingularityException34);
        java.lang.String str56 = cardanEulerSingularityException34.getPattern();
        org.junit.Assert.assertNotNull(objArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray2), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray2), "[]");
        org.junit.Assert.assertNotNull(objArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray3), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray3), "[]");
        org.junit.Assert.assertNotNull(objArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray4), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray4), "[]");
        org.junit.Assert.assertNotNull(objArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray5), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray5), "[]");
        org.junit.Assert.assertNotNull(objArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray8), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray8), "[]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Euler angles singularity" + "'", str9, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray10), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray10), "[]");
        org.junit.Assert.assertNotNull(objArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray13), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray13), "[]");
        org.junit.Assert.assertNotNull(throwableArray14);
        org.junit.Assert.assertNotNull(throwableArray15);
        org.junit.Assert.assertNotNull(throwableArray16);
        org.junit.Assert.assertNotNull(objArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray19), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray19), "[]");
        org.junit.Assert.assertNotNull(objArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray20), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray20), "[]");
        org.junit.Assert.assertNotNull(objArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray31), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray31), "[]");
        org.junit.Assert.assertNotNull(objArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray32), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray32), "[]");
        org.junit.Assert.assertNotNull(objArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray35), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray35), "[]");
        org.junit.Assert.assertNotNull(objArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray37), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray37), "[]");
        org.junit.Assert.assertNotNull(objArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray40), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray40), "[]");
        org.junit.Assert.assertNotNull(throwableArray41);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "Euler angles singularity" + "'", str42, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray44), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray44), "[]");
        org.junit.Assert.assertNotNull(throwableArray45);
        org.junit.Assert.assertNotNull(objArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray46), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray46), "[]");
        org.junit.Assert.assertNotNull(throwableArray52);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "Euler angles singularity" + "'", str56, "Euler angles singularity");
    }

    @Test
    public void test1548() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1548");
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException1 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray2 = cardanEulerSingularityException1.getArguments();
        java.lang.String str3 = cardanEulerSingularityException1.getPattern();
        java.lang.Object[] objArray4 = cardanEulerSingularityException1.getArguments();
        java.lang.Object[] objArray5 = cardanEulerSingularityException1.getArguments();
        java.lang.String str6 = cardanEulerSingularityException1.getPattern();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException8 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        cardanEulerSingularityException1.addSuppressed((java.lang.Throwable) cardanEulerSingularityException8);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException11 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray12 = cardanEulerSingularityException11.getArguments();
        java.lang.String str13 = cardanEulerSingularityException11.getPattern();
        java.lang.Object[] objArray14 = cardanEulerSingularityException11.getArguments();
        java.lang.Object[] objArray15 = cardanEulerSingularityException11.getArguments();
        java.lang.String str16 = cardanEulerSingularityException11.getPattern();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException18 = new org.apache.commons.math.geometry.CardanEulerSingularityException(true);
        java.lang.Object[] objArray19 = cardanEulerSingularityException18.getArguments();
        java.lang.Throwable[] throwableArray20 = cardanEulerSingularityException18.getSuppressed();
        java.lang.Throwable[] throwableArray21 = cardanEulerSingularityException18.getSuppressed();
        cardanEulerSingularityException11.addSuppressed((java.lang.Throwable) cardanEulerSingularityException18);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException24 = new org.apache.commons.math.geometry.CardanEulerSingularityException(true);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException26 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        cardanEulerSingularityException24.addSuppressed((java.lang.Throwable) cardanEulerSingularityException26);
        java.lang.String str28 = cardanEulerSingularityException26.getPattern();
        java.lang.Throwable[] throwableArray29 = cardanEulerSingularityException26.getSuppressed();
        java.lang.String str30 = cardanEulerSingularityException26.getPattern();
        java.lang.Throwable[] throwableArray31 = cardanEulerSingularityException26.getSuppressed();
        cardanEulerSingularityException18.addSuppressed((java.lang.Throwable) cardanEulerSingularityException26);
        cardanEulerSingularityException8.addSuppressed((java.lang.Throwable) cardanEulerSingularityException18);
        java.lang.Throwable[] throwableArray34 = cardanEulerSingularityException18.getSuppressed();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException36 = new org.apache.commons.math.geometry.CardanEulerSingularityException(true);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException38 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        cardanEulerSingularityException36.addSuppressed((java.lang.Throwable) cardanEulerSingularityException38);
        java.lang.Throwable[] throwableArray40 = cardanEulerSingularityException36.getSuppressed();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException42 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray43 = cardanEulerSingularityException42.getArguments();
        java.lang.Throwable[] throwableArray44 = cardanEulerSingularityException42.getSuppressed();
        java.lang.Object[] objArray45 = cardanEulerSingularityException42.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException47 = new org.apache.commons.math.geometry.CardanEulerSingularityException(true);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException49 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        cardanEulerSingularityException47.addSuppressed((java.lang.Throwable) cardanEulerSingularityException49);
        java.lang.String str51 = cardanEulerSingularityException49.getPattern();
        java.lang.Throwable[] throwableArray52 = cardanEulerSingularityException49.getSuppressed();
        java.lang.String str53 = cardanEulerSingularityException49.getPattern();
        java.lang.Throwable[] throwableArray54 = cardanEulerSingularityException49.getSuppressed();
        java.lang.String str55 = cardanEulerSingularityException49.getPattern();
        cardanEulerSingularityException42.addSuppressed((java.lang.Throwable) cardanEulerSingularityException49);
        cardanEulerSingularityException36.addSuppressed((java.lang.Throwable) cardanEulerSingularityException49);
        java.lang.String str58 = cardanEulerSingularityException49.getPattern();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException60 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray61 = cardanEulerSingularityException60.getArguments();
        java.lang.String str62 = cardanEulerSingularityException60.getPattern();
        java.lang.Object[] objArray63 = cardanEulerSingularityException60.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException65 = new org.apache.commons.math.geometry.CardanEulerSingularityException(true);
        java.lang.Object[] objArray66 = cardanEulerSingularityException65.getArguments();
        java.lang.Object[] objArray67 = cardanEulerSingularityException65.getArguments();
        java.lang.String str68 = cardanEulerSingularityException65.getPattern();
        java.lang.String str69 = cardanEulerSingularityException65.getPattern();
        cardanEulerSingularityException60.addSuppressed((java.lang.Throwable) cardanEulerSingularityException65);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException72 = new org.apache.commons.math.geometry.CardanEulerSingularityException(true);
        java.lang.Object[] objArray73 = cardanEulerSingularityException72.getArguments();
        java.lang.Throwable[] throwableArray74 = cardanEulerSingularityException72.getSuppressed();
        java.lang.Throwable[] throwableArray75 = cardanEulerSingularityException72.getSuppressed();
        java.lang.Throwable[] throwableArray76 = cardanEulerSingularityException72.getSuppressed();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException78 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray79 = cardanEulerSingularityException78.getArguments();
        java.lang.Object[] objArray80 = cardanEulerSingularityException78.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException82 = new org.apache.commons.math.geometry.CardanEulerSingularityException(true);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException84 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        cardanEulerSingularityException82.addSuppressed((java.lang.Throwable) cardanEulerSingularityException84);
        cardanEulerSingularityException78.addSuppressed((java.lang.Throwable) cardanEulerSingularityException82);
        cardanEulerSingularityException72.addSuppressed((java.lang.Throwable) cardanEulerSingularityException78);
        java.lang.Throwable[] throwableArray88 = cardanEulerSingularityException72.getSuppressed();
        cardanEulerSingularityException65.addSuppressed((java.lang.Throwable) cardanEulerSingularityException72);
        java.lang.String str90 = cardanEulerSingularityException72.getPattern();
        cardanEulerSingularityException49.addSuppressed((java.lang.Throwable) cardanEulerSingularityException72);
        cardanEulerSingularityException18.addSuppressed((java.lang.Throwable) cardanEulerSingularityException49);
        java.lang.Object[] objArray93 = cardanEulerSingularityException18.getArguments();
        java.lang.Throwable[] throwableArray94 = cardanEulerSingularityException18.getSuppressed();
        java.lang.Class<?> wildcardClass95 = throwableArray94.getClass();
        org.junit.Assert.assertNotNull(objArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray2), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray2), "[]");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Euler angles singularity" + "'", str3, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray4), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray4), "[]");
        org.junit.Assert.assertNotNull(objArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray5), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray5), "[]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "Euler angles singularity" + "'", str6, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray12), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray12), "[]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Euler angles singularity" + "'", str13, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[]");
        org.junit.Assert.assertNotNull(objArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray15), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray15), "[]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "Euler angles singularity" + "'", str16, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray19), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray19), "[]");
        org.junit.Assert.assertNotNull(throwableArray20);
        org.junit.Assert.assertNotNull(throwableArray21);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "Euler angles singularity" + "'", str28, "Euler angles singularity");
        org.junit.Assert.assertNotNull(throwableArray29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "Euler angles singularity" + "'", str30, "Euler angles singularity");
        org.junit.Assert.assertNotNull(throwableArray31);
        org.junit.Assert.assertNotNull(throwableArray34);
        org.junit.Assert.assertNotNull(throwableArray40);
        org.junit.Assert.assertNotNull(objArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray43), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray43), "[]");
        org.junit.Assert.assertNotNull(throwableArray44);
        org.junit.Assert.assertNotNull(objArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray45), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray45), "[]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "Euler angles singularity" + "'", str51, "Euler angles singularity");
        org.junit.Assert.assertNotNull(throwableArray52);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "Euler angles singularity" + "'", str53, "Euler angles singularity");
        org.junit.Assert.assertNotNull(throwableArray54);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "Euler angles singularity" + "'", str55, "Euler angles singularity");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "Euler angles singularity" + "'", str58, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray61), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray61), "[]");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "Euler angles singularity" + "'", str62, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray63), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray63), "[]");
        org.junit.Assert.assertNotNull(objArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray66), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray66), "[]");
        org.junit.Assert.assertNotNull(objArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray67), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray67), "[]");
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "Cardan angles singularity" + "'", str68, "Cardan angles singularity");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "Cardan angles singularity" + "'", str69, "Cardan angles singularity");
        org.junit.Assert.assertNotNull(objArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray73), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray73), "[]");
        org.junit.Assert.assertNotNull(throwableArray74);
        org.junit.Assert.assertNotNull(throwableArray75);
        org.junit.Assert.assertNotNull(throwableArray76);
        org.junit.Assert.assertNotNull(objArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray79), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray79), "[]");
        org.junit.Assert.assertNotNull(objArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray80), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray80), "[]");
        org.junit.Assert.assertNotNull(throwableArray88);
        org.junit.Assert.assertEquals("'" + str90 + "' != '" + "Cardan angles singularity" + "'", str90, "Cardan angles singularity");
        org.junit.Assert.assertNotNull(objArray93);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray93), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray93), "[]");
        org.junit.Assert.assertNotNull(throwableArray94);
        org.junit.Assert.assertNotNull(wildcardClass95);
    }

    @Test
    public void test1549() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1549");
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException1 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray2 = cardanEulerSingularityException1.getArguments();
        java.lang.String str3 = cardanEulerSingularityException1.getPattern();
        java.lang.Object[] objArray4 = cardanEulerSingularityException1.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException6 = new org.apache.commons.math.geometry.CardanEulerSingularityException(true);
        java.lang.Object[] objArray7 = cardanEulerSingularityException6.getArguments();
        java.lang.Object[] objArray8 = cardanEulerSingularityException6.getArguments();
        cardanEulerSingularityException1.addSuppressed((java.lang.Throwable) cardanEulerSingularityException6);
        java.lang.String str10 = cardanEulerSingularityException1.getPattern();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException12 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray13 = cardanEulerSingularityException12.getArguments();
        java.lang.Object[] objArray14 = cardanEulerSingularityException12.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException16 = new org.apache.commons.math.geometry.CardanEulerSingularityException(true);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException18 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        cardanEulerSingularityException16.addSuppressed((java.lang.Throwable) cardanEulerSingularityException18);
        cardanEulerSingularityException12.addSuppressed((java.lang.Throwable) cardanEulerSingularityException16);
        java.lang.String str21 = cardanEulerSingularityException12.getPattern();
        cardanEulerSingularityException1.addSuppressed((java.lang.Throwable) cardanEulerSingularityException12);
        java.lang.Object[] objArray23 = cardanEulerSingularityException1.getArguments();
        java.lang.Throwable[] throwableArray24 = cardanEulerSingularityException1.getSuppressed();
        java.lang.Throwable[] throwableArray25 = cardanEulerSingularityException1.getSuppressed();
        java.lang.Object[] objArray26 = cardanEulerSingularityException1.getArguments();
        org.junit.Assert.assertNotNull(objArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray2), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray2), "[]");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Euler angles singularity" + "'", str3, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray4), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray4), "[]");
        org.junit.Assert.assertNotNull(objArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray7), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray7), "[]");
        org.junit.Assert.assertNotNull(objArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray8), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray8), "[]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Euler angles singularity" + "'", str10, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray13), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray13), "[]");
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "Euler angles singularity" + "'", str21, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray23), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray23), "[]");
        org.junit.Assert.assertNotNull(throwableArray24);
        org.junit.Assert.assertNotNull(throwableArray25);
        org.junit.Assert.assertNotNull(objArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray26), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray26), "[]");
    }

    @Test
    public void test1550() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1550");
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException1 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray2 = cardanEulerSingularityException1.getArguments();
        java.lang.String str3 = cardanEulerSingularityException1.getPattern();
        java.lang.Object[] objArray4 = cardanEulerSingularityException1.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException6 = new org.apache.commons.math.geometry.CardanEulerSingularityException(true);
        java.lang.Object[] objArray7 = cardanEulerSingularityException6.getArguments();
        java.lang.Object[] objArray8 = cardanEulerSingularityException6.getArguments();
        cardanEulerSingularityException1.addSuppressed((java.lang.Throwable) cardanEulerSingularityException6);
        java.lang.String str10 = cardanEulerSingularityException1.getPattern();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException12 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray13 = cardanEulerSingularityException12.getArguments();
        java.lang.Object[] objArray14 = cardanEulerSingularityException12.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException16 = new org.apache.commons.math.geometry.CardanEulerSingularityException(true);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException18 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        cardanEulerSingularityException16.addSuppressed((java.lang.Throwable) cardanEulerSingularityException18);
        cardanEulerSingularityException12.addSuppressed((java.lang.Throwable) cardanEulerSingularityException16);
        java.lang.String str21 = cardanEulerSingularityException12.getPattern();
        cardanEulerSingularityException1.addSuppressed((java.lang.Throwable) cardanEulerSingularityException12);
        java.lang.Object[] objArray23 = cardanEulerSingularityException1.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException25 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.String str26 = cardanEulerSingularityException25.getPattern();
        java.lang.Object[] objArray27 = cardanEulerSingularityException25.getArguments();
        java.lang.String str28 = cardanEulerSingularityException25.getPattern();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException30 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.String str31 = cardanEulerSingularityException30.getPattern();
        java.lang.Throwable[] throwableArray32 = cardanEulerSingularityException30.getSuppressed();
        cardanEulerSingularityException25.addSuppressed((java.lang.Throwable) cardanEulerSingularityException30);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException35 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.String str36 = cardanEulerSingularityException35.getPattern();
        java.lang.Object[] objArray37 = cardanEulerSingularityException35.getArguments();
        java.lang.String str38 = cardanEulerSingularityException35.getPattern();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException40 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.String str41 = cardanEulerSingularityException40.getPattern();
        java.lang.Throwable[] throwableArray42 = cardanEulerSingularityException40.getSuppressed();
        cardanEulerSingularityException35.addSuppressed((java.lang.Throwable) cardanEulerSingularityException40);
        cardanEulerSingularityException25.addSuppressed((java.lang.Throwable) cardanEulerSingularityException35);
        java.lang.Object[] objArray45 = cardanEulerSingularityException35.getArguments();
        cardanEulerSingularityException1.addSuppressed((java.lang.Throwable) cardanEulerSingularityException35);
        java.lang.Throwable[] throwableArray47 = cardanEulerSingularityException1.getSuppressed();
        java.lang.Object[] objArray48 = cardanEulerSingularityException1.getArguments();
        java.lang.Class<?> wildcardClass49 = cardanEulerSingularityException1.getClass();
        org.junit.Assert.assertNotNull(objArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray2), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray2), "[]");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Euler angles singularity" + "'", str3, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray4), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray4), "[]");
        org.junit.Assert.assertNotNull(objArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray7), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray7), "[]");
        org.junit.Assert.assertNotNull(objArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray8), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray8), "[]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Euler angles singularity" + "'", str10, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray13), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray13), "[]");
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "Euler angles singularity" + "'", str21, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray23), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray23), "[]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "Euler angles singularity" + "'", str26, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray27), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray27), "[]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "Euler angles singularity" + "'", str28, "Euler angles singularity");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "Euler angles singularity" + "'", str31, "Euler angles singularity");
        org.junit.Assert.assertNotNull(throwableArray32);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "Euler angles singularity" + "'", str36, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray37), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray37), "[]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "Euler angles singularity" + "'", str38, "Euler angles singularity");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "Euler angles singularity" + "'", str41, "Euler angles singularity");
        org.junit.Assert.assertNotNull(throwableArray42);
        org.junit.Assert.assertNotNull(objArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray45), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray45), "[]");
        org.junit.Assert.assertNotNull(throwableArray47);
        org.junit.Assert.assertNotNull(objArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray48), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray48), "[]");
        org.junit.Assert.assertNotNull(wildcardClass49);
    }

    @Test
    public void test1551() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1551");
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException1 = new org.apache.commons.math.geometry.CardanEulerSingularityException(true);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException3 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        cardanEulerSingularityException1.addSuppressed((java.lang.Throwable) cardanEulerSingularityException3);
        java.lang.String str5 = cardanEulerSingularityException3.getPattern();
        java.lang.Throwable[] throwableArray6 = cardanEulerSingularityException3.getSuppressed();
        java.lang.String str7 = cardanEulerSingularityException3.getPattern();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException9 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray10 = cardanEulerSingularityException9.getArguments();
        java.lang.Object[] objArray11 = cardanEulerSingularityException9.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException13 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray14 = cardanEulerSingularityException13.getArguments();
        cardanEulerSingularityException9.addSuppressed((java.lang.Throwable) cardanEulerSingularityException13);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException17 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray18 = cardanEulerSingularityException17.getArguments();
        java.lang.Object[] objArray19 = cardanEulerSingularityException17.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException21 = new org.apache.commons.math.geometry.CardanEulerSingularityException(true);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException23 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        cardanEulerSingularityException21.addSuppressed((java.lang.Throwable) cardanEulerSingularityException23);
        cardanEulerSingularityException17.addSuppressed((java.lang.Throwable) cardanEulerSingularityException21);
        java.lang.Throwable[] throwableArray26 = cardanEulerSingularityException17.getSuppressed();
        cardanEulerSingularityException13.addSuppressed((java.lang.Throwable) cardanEulerSingularityException17);
        java.lang.Object[] objArray28 = cardanEulerSingularityException17.getArguments();
        cardanEulerSingularityException3.addSuppressed((java.lang.Throwable) cardanEulerSingularityException17);
        java.lang.Object[] objArray30 = cardanEulerSingularityException17.getArguments();
        java.lang.Object[] objArray31 = cardanEulerSingularityException17.getArguments();
        java.lang.Throwable[] throwableArray32 = cardanEulerSingularityException17.getSuppressed();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Euler angles singularity" + "'", str5, "Euler angles singularity");
        org.junit.Assert.assertNotNull(throwableArray6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Euler angles singularity" + "'", str7, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray10), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray10), "[]");
        org.junit.Assert.assertNotNull(objArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray11), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray11), "[]");
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[]");
        org.junit.Assert.assertNotNull(objArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray18), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray18), "[]");
        org.junit.Assert.assertNotNull(objArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray19), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray19), "[]");
        org.junit.Assert.assertNotNull(throwableArray26);
        org.junit.Assert.assertNotNull(objArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray28), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray28), "[]");
        org.junit.Assert.assertNotNull(objArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray30), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray30), "[]");
        org.junit.Assert.assertNotNull(objArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray31), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray31), "[]");
        org.junit.Assert.assertNotNull(throwableArray32);
    }

    @Test
    public void test1552() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1552");
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException1 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.String str2 = cardanEulerSingularityException1.getPattern();
        java.lang.Object[] objArray3 = cardanEulerSingularityException1.getArguments();
        java.lang.String str4 = cardanEulerSingularityException1.getPattern();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException6 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.String str7 = cardanEulerSingularityException6.getPattern();
        java.lang.Throwable[] throwableArray8 = cardanEulerSingularityException6.getSuppressed();
        cardanEulerSingularityException1.addSuppressed((java.lang.Throwable) cardanEulerSingularityException6);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException11 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.String str12 = cardanEulerSingularityException11.getPattern();
        java.lang.Object[] objArray13 = cardanEulerSingularityException11.getArguments();
        java.lang.String str14 = cardanEulerSingularityException11.getPattern();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException16 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.String str17 = cardanEulerSingularityException16.getPattern();
        java.lang.Throwable[] throwableArray18 = cardanEulerSingularityException16.getSuppressed();
        cardanEulerSingularityException11.addSuppressed((java.lang.Throwable) cardanEulerSingularityException16);
        cardanEulerSingularityException1.addSuppressed((java.lang.Throwable) cardanEulerSingularityException11);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException22 = new org.apache.commons.math.geometry.CardanEulerSingularityException(true);
        cardanEulerSingularityException1.addSuppressed((java.lang.Throwable) cardanEulerSingularityException22);
        java.lang.Object[] objArray24 = cardanEulerSingularityException1.getArguments();
        java.lang.Object[] objArray25 = cardanEulerSingularityException1.getArguments();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "Euler angles singularity" + "'", str2, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray3), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray3), "[]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Euler angles singularity" + "'", str4, "Euler angles singularity");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Euler angles singularity" + "'", str7, "Euler angles singularity");
        org.junit.Assert.assertNotNull(throwableArray8);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Euler angles singularity" + "'", str12, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray13), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray13), "[]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "Euler angles singularity" + "'", str14, "Euler angles singularity");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "Euler angles singularity" + "'", str17, "Euler angles singularity");
        org.junit.Assert.assertNotNull(throwableArray18);
        org.junit.Assert.assertNotNull(objArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray24), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray24), "[]");
        org.junit.Assert.assertNotNull(objArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray25), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray25), "[]");
    }

    @Test
    public void test1553() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1553");
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException1 = new org.apache.commons.math.geometry.CardanEulerSingularityException(true);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException3 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        cardanEulerSingularityException1.addSuppressed((java.lang.Throwable) cardanEulerSingularityException3);
        java.lang.Throwable[] throwableArray5 = cardanEulerSingularityException1.getSuppressed();
        java.lang.Throwable[] throwableArray6 = cardanEulerSingularityException1.getSuppressed();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException8 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.String str9 = cardanEulerSingularityException8.getPattern();
        java.lang.Object[] objArray10 = cardanEulerSingularityException8.getArguments();
        java.lang.String str11 = cardanEulerSingularityException8.getPattern();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException13 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.String str14 = cardanEulerSingularityException13.getPattern();
        java.lang.Throwable[] throwableArray15 = cardanEulerSingularityException13.getSuppressed();
        cardanEulerSingularityException8.addSuppressed((java.lang.Throwable) cardanEulerSingularityException13);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException18 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.String str19 = cardanEulerSingularityException18.getPattern();
        java.lang.Object[] objArray20 = cardanEulerSingularityException18.getArguments();
        java.lang.String str21 = cardanEulerSingularityException18.getPattern();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException23 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.String str24 = cardanEulerSingularityException23.getPattern();
        java.lang.Throwable[] throwableArray25 = cardanEulerSingularityException23.getSuppressed();
        cardanEulerSingularityException18.addSuppressed((java.lang.Throwable) cardanEulerSingularityException23);
        cardanEulerSingularityException8.addSuppressed((java.lang.Throwable) cardanEulerSingularityException18);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException29 = new org.apache.commons.math.geometry.CardanEulerSingularityException(true);
        cardanEulerSingularityException8.addSuppressed((java.lang.Throwable) cardanEulerSingularityException29);
        cardanEulerSingularityException1.addSuppressed((java.lang.Throwable) cardanEulerSingularityException8);
        java.lang.Throwable[] throwableArray32 = cardanEulerSingularityException8.getSuppressed();
        java.lang.Object[] objArray33 = cardanEulerSingularityException8.getArguments();
        java.lang.String str34 = cardanEulerSingularityException8.getPattern();
        java.lang.Throwable[] throwableArray35 = cardanEulerSingularityException8.getSuppressed();
        java.lang.Object[] objArray36 = cardanEulerSingularityException8.getArguments();
        org.junit.Assert.assertNotNull(throwableArray5);
        org.junit.Assert.assertNotNull(throwableArray6);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Euler angles singularity" + "'", str9, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray10), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray10), "[]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Euler angles singularity" + "'", str11, "Euler angles singularity");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "Euler angles singularity" + "'", str14, "Euler angles singularity");
        org.junit.Assert.assertNotNull(throwableArray15);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "Euler angles singularity" + "'", str19, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray20), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray20), "[]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "Euler angles singularity" + "'", str21, "Euler angles singularity");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "Euler angles singularity" + "'", str24, "Euler angles singularity");
        org.junit.Assert.assertNotNull(throwableArray25);
        org.junit.Assert.assertNotNull(throwableArray32);
        org.junit.Assert.assertNotNull(objArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray33), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray33), "[]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "Euler angles singularity" + "'", str34, "Euler angles singularity");
        org.junit.Assert.assertNotNull(throwableArray35);
        org.junit.Assert.assertNotNull(objArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray36), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray36), "[]");
    }

    @Test
    public void test1554() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1554");
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException1 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray2 = cardanEulerSingularityException1.getArguments();
        java.lang.String str3 = cardanEulerSingularityException1.getPattern();
        java.lang.Object[] objArray4 = cardanEulerSingularityException1.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException6 = new org.apache.commons.math.geometry.CardanEulerSingularityException(true);
        java.lang.Object[] objArray7 = cardanEulerSingularityException6.getArguments();
        java.lang.Throwable[] throwableArray8 = cardanEulerSingularityException6.getSuppressed();
        java.lang.Throwable[] throwableArray9 = cardanEulerSingularityException6.getSuppressed();
        java.lang.Throwable[] throwableArray10 = cardanEulerSingularityException6.getSuppressed();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException12 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray13 = cardanEulerSingularityException12.getArguments();
        java.lang.Object[] objArray14 = cardanEulerSingularityException12.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException16 = new org.apache.commons.math.geometry.CardanEulerSingularityException(true);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException18 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        cardanEulerSingularityException16.addSuppressed((java.lang.Throwable) cardanEulerSingularityException18);
        cardanEulerSingularityException12.addSuppressed((java.lang.Throwable) cardanEulerSingularityException16);
        cardanEulerSingularityException6.addSuppressed((java.lang.Throwable) cardanEulerSingularityException12);
        cardanEulerSingularityException1.addSuppressed((java.lang.Throwable) cardanEulerSingularityException6);
        java.lang.Throwable[] throwableArray23 = cardanEulerSingularityException1.getSuppressed();
        java.lang.Object[] objArray24 = cardanEulerSingularityException1.getArguments();
        java.lang.String str25 = cardanEulerSingularityException1.getPattern();
        java.lang.String str26 = cardanEulerSingularityException1.getPattern();
        org.junit.Assert.assertNotNull(objArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray2), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray2), "[]");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Euler angles singularity" + "'", str3, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray4), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray4), "[]");
        org.junit.Assert.assertNotNull(objArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray7), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray7), "[]");
        org.junit.Assert.assertNotNull(throwableArray8);
        org.junit.Assert.assertNotNull(throwableArray9);
        org.junit.Assert.assertNotNull(throwableArray10);
        org.junit.Assert.assertNotNull(objArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray13), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray13), "[]");
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[]");
        org.junit.Assert.assertNotNull(throwableArray23);
        org.junit.Assert.assertNotNull(objArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray24), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray24), "[]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "Euler angles singularity" + "'", str25, "Euler angles singularity");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "Euler angles singularity" + "'", str26, "Euler angles singularity");
    }

    @Test
    public void test1555() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1555");
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException1 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray2 = cardanEulerSingularityException1.getArguments();
        java.lang.Object[] objArray3 = cardanEulerSingularityException1.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException5 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray6 = cardanEulerSingularityException5.getArguments();
        cardanEulerSingularityException1.addSuppressed((java.lang.Throwable) cardanEulerSingularityException5);
        java.lang.Object[] objArray8 = cardanEulerSingularityException5.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException10 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray11 = cardanEulerSingularityException10.getArguments();
        java.lang.Throwable[] throwableArray12 = cardanEulerSingularityException10.getSuppressed();
        java.lang.String str13 = cardanEulerSingularityException10.getPattern();
        cardanEulerSingularityException5.addSuppressed((java.lang.Throwable) cardanEulerSingularityException10);
        java.lang.Object[] objArray15 = cardanEulerSingularityException5.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException17 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.String str18 = cardanEulerSingularityException17.getPattern();
        java.lang.Object[] objArray19 = cardanEulerSingularityException17.getArguments();
        java.lang.String str20 = cardanEulerSingularityException17.getPattern();
        cardanEulerSingularityException5.addSuppressed((java.lang.Throwable) cardanEulerSingularityException17);
        java.lang.Object[] objArray22 = cardanEulerSingularityException5.getArguments();
        java.lang.Object[] objArray23 = cardanEulerSingularityException5.getArguments();
        java.lang.String str24 = cardanEulerSingularityException5.getPattern();
        java.lang.Throwable[] throwableArray25 = cardanEulerSingularityException5.getSuppressed();
        java.lang.String str26 = cardanEulerSingularityException5.toString();
        org.junit.Assert.assertNotNull(objArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray2), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray2), "[]");
        org.junit.Assert.assertNotNull(objArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray3), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray3), "[]");
        org.junit.Assert.assertNotNull(objArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray6), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray6), "[]");
        org.junit.Assert.assertNotNull(objArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray8), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray8), "[]");
        org.junit.Assert.assertNotNull(objArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray11), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray11), "[]");
        org.junit.Assert.assertNotNull(throwableArray12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Euler angles singularity" + "'", str13, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray15), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray15), "[]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "Euler angles singularity" + "'", str18, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray19), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray19), "[]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "Euler angles singularity" + "'", str20, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray22), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray22), "[]");
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray23), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray23), "[]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "Euler angles singularity" + "'", str24, "Euler angles singularity");
        org.junit.Assert.assertNotNull(throwableArray25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "org.apache.commons.math.geometry.CardanEulerSingularityException: Euler angles singularity" + "'", str26, "org.apache.commons.math.geometry.CardanEulerSingularityException: Euler angles singularity");
    }

    @Test
    public void test1556() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1556");
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException1 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray2 = cardanEulerSingularityException1.getArguments();
        java.lang.Object[] objArray3 = cardanEulerSingularityException1.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException5 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray6 = cardanEulerSingularityException5.getArguments();
        cardanEulerSingularityException1.addSuppressed((java.lang.Throwable) cardanEulerSingularityException5);
        java.lang.Throwable[] throwableArray8 = cardanEulerSingularityException5.getSuppressed();
        java.lang.Object[] objArray9 = cardanEulerSingularityException5.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException11 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray12 = cardanEulerSingularityException11.getArguments();
        java.lang.Object[] objArray13 = cardanEulerSingularityException11.getArguments();
        java.lang.Object[] objArray14 = cardanEulerSingularityException11.getArguments();
        cardanEulerSingularityException5.addSuppressed((java.lang.Throwable) cardanEulerSingularityException11);
        java.lang.Object[] objArray16 = cardanEulerSingularityException11.getArguments();
        java.lang.Throwable[] throwableArray17 = cardanEulerSingularityException11.getSuppressed();
        java.lang.Throwable[] throwableArray18 = cardanEulerSingularityException11.getSuppressed();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException20 = new org.apache.commons.math.geometry.CardanEulerSingularityException(true);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException22 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        cardanEulerSingularityException20.addSuppressed((java.lang.Throwable) cardanEulerSingularityException22);
        java.lang.Throwable[] throwableArray24 = cardanEulerSingularityException20.getSuppressed();
        java.lang.Throwable[] throwableArray25 = cardanEulerSingularityException20.getSuppressed();
        cardanEulerSingularityException11.addSuppressed((java.lang.Throwable) cardanEulerSingularityException20);
        java.lang.Class<?> wildcardClass27 = cardanEulerSingularityException20.getClass();
        org.junit.Assert.assertNotNull(objArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray2), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray2), "[]");
        org.junit.Assert.assertNotNull(objArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray3), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray3), "[]");
        org.junit.Assert.assertNotNull(objArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray6), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray6), "[]");
        org.junit.Assert.assertNotNull(throwableArray8);
        org.junit.Assert.assertNotNull(objArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray9), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray9), "[]");
        org.junit.Assert.assertNotNull(objArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray12), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray12), "[]");
        org.junit.Assert.assertNotNull(objArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray13), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray13), "[]");
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[]");
        org.junit.Assert.assertNotNull(objArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray16), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray16), "[]");
        org.junit.Assert.assertNotNull(throwableArray17);
        org.junit.Assert.assertNotNull(throwableArray18);
        org.junit.Assert.assertNotNull(throwableArray24);
        org.junit.Assert.assertNotNull(throwableArray25);
        org.junit.Assert.assertNotNull(wildcardClass27);
    }

    @Test
    public void test1557() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1557");
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException1 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.String str2 = cardanEulerSingularityException1.getPattern();
        java.lang.Object[] objArray3 = cardanEulerSingularityException1.getArguments();
        java.lang.String str4 = cardanEulerSingularityException1.getPattern();
        java.lang.Throwable[] throwableArray5 = cardanEulerSingularityException1.getSuppressed();
        java.lang.Throwable[] throwableArray6 = cardanEulerSingularityException1.getSuppressed();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException8 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.String str9 = cardanEulerSingularityException8.getPattern();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException11 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.String str12 = cardanEulerSingularityException11.getPattern();
        java.lang.Throwable[] throwableArray13 = cardanEulerSingularityException11.getSuppressed();
        cardanEulerSingularityException8.addSuppressed((java.lang.Throwable) cardanEulerSingularityException11);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException16 = new org.apache.commons.math.geometry.CardanEulerSingularityException(true);
        java.lang.String str17 = cardanEulerSingularityException16.getPattern();
        cardanEulerSingularityException8.addSuppressed((java.lang.Throwable) cardanEulerSingularityException16);
        cardanEulerSingularityException1.addSuppressed((java.lang.Throwable) cardanEulerSingularityException16);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException21 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.String str22 = cardanEulerSingularityException21.getPattern();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException24 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.String str25 = cardanEulerSingularityException24.getPattern();
        java.lang.Throwable[] throwableArray26 = cardanEulerSingularityException24.getSuppressed();
        cardanEulerSingularityException21.addSuppressed((java.lang.Throwable) cardanEulerSingularityException24);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException29 = new org.apache.commons.math.geometry.CardanEulerSingularityException(true);
        java.lang.String str30 = cardanEulerSingularityException29.getPattern();
        cardanEulerSingularityException21.addSuppressed((java.lang.Throwable) cardanEulerSingularityException29);
        java.lang.String str32 = cardanEulerSingularityException21.getPattern();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException34 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray35 = cardanEulerSingularityException34.getArguments();
        java.lang.Object[] objArray36 = cardanEulerSingularityException34.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException38 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray39 = cardanEulerSingularityException38.getArguments();
        cardanEulerSingularityException34.addSuppressed((java.lang.Throwable) cardanEulerSingularityException38);
        java.lang.Throwable[] throwableArray41 = cardanEulerSingularityException34.getSuppressed();
        java.lang.String str42 = cardanEulerSingularityException34.getPattern();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException44 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray45 = cardanEulerSingularityException44.getArguments();
        java.lang.String str46 = cardanEulerSingularityException44.getPattern();
        java.lang.Object[] objArray47 = cardanEulerSingularityException44.getArguments();
        java.lang.Object[] objArray48 = cardanEulerSingularityException44.getArguments();
        java.lang.String str49 = cardanEulerSingularityException44.getPattern();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException51 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        cardanEulerSingularityException44.addSuppressed((java.lang.Throwable) cardanEulerSingularityException51);
        cardanEulerSingularityException34.addSuppressed((java.lang.Throwable) cardanEulerSingularityException51);
        cardanEulerSingularityException21.addSuppressed((java.lang.Throwable) cardanEulerSingularityException34);
        cardanEulerSingularityException16.addSuppressed((java.lang.Throwable) cardanEulerSingularityException21);
        java.lang.Object[] objArray56 = cardanEulerSingularityException21.getArguments();
        java.lang.String str57 = cardanEulerSingularityException21.toString();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "Euler angles singularity" + "'", str2, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray3), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray3), "[]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Euler angles singularity" + "'", str4, "Euler angles singularity");
        org.junit.Assert.assertNotNull(throwableArray5);
        org.junit.Assert.assertNotNull(throwableArray6);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Euler angles singularity" + "'", str9, "Euler angles singularity");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Euler angles singularity" + "'", str12, "Euler angles singularity");
        org.junit.Assert.assertNotNull(throwableArray13);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "Cardan angles singularity" + "'", str17, "Cardan angles singularity");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "Euler angles singularity" + "'", str22, "Euler angles singularity");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "Euler angles singularity" + "'", str25, "Euler angles singularity");
        org.junit.Assert.assertNotNull(throwableArray26);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "Cardan angles singularity" + "'", str30, "Cardan angles singularity");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "Euler angles singularity" + "'", str32, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray35), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray35), "[]");
        org.junit.Assert.assertNotNull(objArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray36), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray36), "[]");
        org.junit.Assert.assertNotNull(objArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray39), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray39), "[]");
        org.junit.Assert.assertNotNull(throwableArray41);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "Euler angles singularity" + "'", str42, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray45), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray45), "[]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "Euler angles singularity" + "'", str46, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray47), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray47), "[]");
        org.junit.Assert.assertNotNull(objArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray48), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray48), "[]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "Euler angles singularity" + "'", str49, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray56), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray56), "[]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "org.apache.commons.math.geometry.CardanEulerSingularityException: Euler angles singularity" + "'", str57, "org.apache.commons.math.geometry.CardanEulerSingularityException: Euler angles singularity");
    }

    @Test
    public void test1558() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1558");
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException1 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.String str2 = cardanEulerSingularityException1.getPattern();
        java.lang.Object[] objArray3 = cardanEulerSingularityException1.getArguments();
        java.lang.String str4 = cardanEulerSingularityException1.getPattern();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException6 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.String str7 = cardanEulerSingularityException6.getPattern();
        java.lang.Throwable[] throwableArray8 = cardanEulerSingularityException6.getSuppressed();
        cardanEulerSingularityException1.addSuppressed((java.lang.Throwable) cardanEulerSingularityException6);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException11 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.String str12 = cardanEulerSingularityException11.getPattern();
        java.lang.Object[] objArray13 = cardanEulerSingularityException11.getArguments();
        java.lang.String str14 = cardanEulerSingularityException11.getPattern();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException16 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.String str17 = cardanEulerSingularityException16.getPattern();
        java.lang.Throwable[] throwableArray18 = cardanEulerSingularityException16.getSuppressed();
        cardanEulerSingularityException11.addSuppressed((java.lang.Throwable) cardanEulerSingularityException16);
        cardanEulerSingularityException1.addSuppressed((java.lang.Throwable) cardanEulerSingularityException11);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException22 = new org.apache.commons.math.geometry.CardanEulerSingularityException(true);
        cardanEulerSingularityException1.addSuppressed((java.lang.Throwable) cardanEulerSingularityException22);
        java.lang.Object[] objArray24 = cardanEulerSingularityException1.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException26 = new org.apache.commons.math.geometry.CardanEulerSingularityException(true);
        java.lang.Object[] objArray27 = cardanEulerSingularityException26.getArguments();
        java.lang.Throwable[] throwableArray28 = cardanEulerSingularityException26.getSuppressed();
        java.lang.String str29 = cardanEulerSingularityException26.getPattern();
        java.lang.Object[] objArray30 = cardanEulerSingularityException26.getArguments();
        java.lang.Throwable[] throwableArray31 = cardanEulerSingularityException26.getSuppressed();
        java.lang.Object[] objArray32 = cardanEulerSingularityException26.getArguments();
        java.lang.Throwable[] throwableArray33 = cardanEulerSingularityException26.getSuppressed();
        cardanEulerSingularityException1.addSuppressed((java.lang.Throwable) cardanEulerSingularityException26);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException36 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.String str37 = cardanEulerSingularityException36.getPattern();
        java.lang.Object[] objArray38 = cardanEulerSingularityException36.getArguments();
        java.lang.String str39 = cardanEulerSingularityException36.getPattern();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException41 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.String str42 = cardanEulerSingularityException41.getPattern();
        java.lang.Throwable[] throwableArray43 = cardanEulerSingularityException41.getSuppressed();
        cardanEulerSingularityException36.addSuppressed((java.lang.Throwable) cardanEulerSingularityException41);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException46 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.String str47 = cardanEulerSingularityException46.getPattern();
        java.lang.Object[] objArray48 = cardanEulerSingularityException46.getArguments();
        java.lang.String str49 = cardanEulerSingularityException46.getPattern();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException51 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.String str52 = cardanEulerSingularityException51.getPattern();
        java.lang.Throwable[] throwableArray53 = cardanEulerSingularityException51.getSuppressed();
        cardanEulerSingularityException46.addSuppressed((java.lang.Throwable) cardanEulerSingularityException51);
        cardanEulerSingularityException36.addSuppressed((java.lang.Throwable) cardanEulerSingularityException46);
        cardanEulerSingularityException1.addSuppressed((java.lang.Throwable) cardanEulerSingularityException46);
        java.lang.Object[] objArray57 = cardanEulerSingularityException1.getArguments();
        java.lang.Object[] objArray58 = cardanEulerSingularityException1.getArguments();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "Euler angles singularity" + "'", str2, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray3), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray3), "[]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Euler angles singularity" + "'", str4, "Euler angles singularity");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Euler angles singularity" + "'", str7, "Euler angles singularity");
        org.junit.Assert.assertNotNull(throwableArray8);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Euler angles singularity" + "'", str12, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray13), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray13), "[]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "Euler angles singularity" + "'", str14, "Euler angles singularity");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "Euler angles singularity" + "'", str17, "Euler angles singularity");
        org.junit.Assert.assertNotNull(throwableArray18);
        org.junit.Assert.assertNotNull(objArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray24), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray24), "[]");
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray27), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray27), "[]");
        org.junit.Assert.assertNotNull(throwableArray28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "Cardan angles singularity" + "'", str29, "Cardan angles singularity");
        org.junit.Assert.assertNotNull(objArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray30), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray30), "[]");
        org.junit.Assert.assertNotNull(throwableArray31);
        org.junit.Assert.assertNotNull(objArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray32), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray32), "[]");
        org.junit.Assert.assertNotNull(throwableArray33);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "Euler angles singularity" + "'", str37, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray38), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray38), "[]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "Euler angles singularity" + "'", str39, "Euler angles singularity");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "Euler angles singularity" + "'", str42, "Euler angles singularity");
        org.junit.Assert.assertNotNull(throwableArray43);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "Euler angles singularity" + "'", str47, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray48), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray48), "[]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "Euler angles singularity" + "'", str49, "Euler angles singularity");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "Euler angles singularity" + "'", str52, "Euler angles singularity");
        org.junit.Assert.assertNotNull(throwableArray53);
        org.junit.Assert.assertNotNull(objArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray57), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray57), "[]");
        org.junit.Assert.assertNotNull(objArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray58), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray58), "[]");
    }

    @Test
    public void test1559() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1559");
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException1 = new org.apache.commons.math.geometry.CardanEulerSingularityException(true);
        java.lang.Object[] objArray2 = cardanEulerSingularityException1.getArguments();
        java.lang.Throwable[] throwableArray3 = cardanEulerSingularityException1.getSuppressed();
        java.lang.Throwable[] throwableArray4 = cardanEulerSingularityException1.getSuppressed();
        java.lang.Object[] objArray5 = cardanEulerSingularityException1.getArguments();
        java.lang.String str6 = cardanEulerSingularityException1.getPattern();
        java.lang.Object[] objArray7 = cardanEulerSingularityException1.getArguments();
        org.junit.Assert.assertNotNull(objArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray2), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray2), "[]");
        org.junit.Assert.assertNotNull(throwableArray3);
        org.junit.Assert.assertNotNull(throwableArray4);
        org.junit.Assert.assertNotNull(objArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray5), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray5), "[]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "Cardan angles singularity" + "'", str6, "Cardan angles singularity");
        org.junit.Assert.assertNotNull(objArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray7), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray7), "[]");
    }

    @Test
    public void test1560() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1560");
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException1 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray2 = cardanEulerSingularityException1.getArguments();
        java.lang.Object[] objArray3 = cardanEulerSingularityException1.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException5 = new org.apache.commons.math.geometry.CardanEulerSingularityException(true);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException7 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        cardanEulerSingularityException5.addSuppressed((java.lang.Throwable) cardanEulerSingularityException7);
        cardanEulerSingularityException1.addSuppressed((java.lang.Throwable) cardanEulerSingularityException5);
        java.lang.Object[] objArray10 = cardanEulerSingularityException5.getArguments();
        java.lang.Throwable[] throwableArray11 = cardanEulerSingularityException5.getSuppressed();
        java.lang.String str12 = cardanEulerSingularityException5.getPattern();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException14 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray15 = cardanEulerSingularityException14.getArguments();
        java.lang.Object[] objArray16 = cardanEulerSingularityException14.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException18 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray19 = cardanEulerSingularityException18.getArguments();
        cardanEulerSingularityException14.addSuppressed((java.lang.Throwable) cardanEulerSingularityException18);
        java.lang.Throwable[] throwableArray21 = cardanEulerSingularityException18.getSuppressed();
        java.lang.Object[] objArray22 = cardanEulerSingularityException18.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException24 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray25 = cardanEulerSingularityException24.getArguments();
        java.lang.Object[] objArray26 = cardanEulerSingularityException24.getArguments();
        java.lang.Object[] objArray27 = cardanEulerSingularityException24.getArguments();
        cardanEulerSingularityException18.addSuppressed((java.lang.Throwable) cardanEulerSingularityException24);
        java.lang.Object[] objArray29 = cardanEulerSingularityException24.getArguments();
        java.lang.Throwable[] throwableArray30 = cardanEulerSingularityException24.getSuppressed();
        cardanEulerSingularityException5.addSuppressed((java.lang.Throwable) cardanEulerSingularityException24);
        java.lang.Object[] objArray32 = cardanEulerSingularityException24.getArguments();
        java.lang.Object[] objArray33 = cardanEulerSingularityException24.getArguments();
        org.junit.Assert.assertNotNull(objArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray2), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray2), "[]");
        org.junit.Assert.assertNotNull(objArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray3), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray3), "[]");
        org.junit.Assert.assertNotNull(objArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray10), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray10), "[]");
        org.junit.Assert.assertNotNull(throwableArray11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Cardan angles singularity" + "'", str12, "Cardan angles singularity");
        org.junit.Assert.assertNotNull(objArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray15), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray15), "[]");
        org.junit.Assert.assertNotNull(objArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray16), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray16), "[]");
        org.junit.Assert.assertNotNull(objArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray19), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray19), "[]");
        org.junit.Assert.assertNotNull(throwableArray21);
        org.junit.Assert.assertNotNull(objArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray22), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray22), "[]");
        org.junit.Assert.assertNotNull(objArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray25), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray25), "[]");
        org.junit.Assert.assertNotNull(objArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray26), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray26), "[]");
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray27), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray27), "[]");
        org.junit.Assert.assertNotNull(objArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray29), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray29), "[]");
        org.junit.Assert.assertNotNull(throwableArray30);
        org.junit.Assert.assertNotNull(objArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray32), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray32), "[]");
        org.junit.Assert.assertNotNull(objArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray33), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray33), "[]");
    }

    @Test
    public void test1561() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1561");
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException1 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray2 = cardanEulerSingularityException1.getArguments();
        java.lang.Object[] objArray3 = cardanEulerSingularityException1.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException5 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray6 = cardanEulerSingularityException5.getArguments();
        cardanEulerSingularityException1.addSuppressed((java.lang.Throwable) cardanEulerSingularityException5);
        java.lang.String str8 = cardanEulerSingularityException1.getPattern();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException10 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray11 = cardanEulerSingularityException10.getArguments();
        java.lang.Object[] objArray12 = cardanEulerSingularityException10.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException14 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray15 = cardanEulerSingularityException14.getArguments();
        cardanEulerSingularityException10.addSuppressed((java.lang.Throwable) cardanEulerSingularityException14);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException18 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray19 = cardanEulerSingularityException18.getArguments();
        java.lang.Object[] objArray20 = cardanEulerSingularityException18.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException22 = new org.apache.commons.math.geometry.CardanEulerSingularityException(true);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException24 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        cardanEulerSingularityException22.addSuppressed((java.lang.Throwable) cardanEulerSingularityException24);
        cardanEulerSingularityException18.addSuppressed((java.lang.Throwable) cardanEulerSingularityException22);
        java.lang.Throwable[] throwableArray27 = cardanEulerSingularityException18.getSuppressed();
        cardanEulerSingularityException14.addSuppressed((java.lang.Throwable) cardanEulerSingularityException18);
        java.lang.String str29 = cardanEulerSingularityException18.getPattern();
        cardanEulerSingularityException1.addSuppressed((java.lang.Throwable) cardanEulerSingularityException18);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException32 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray33 = cardanEulerSingularityException32.getArguments();
        java.lang.Object[] objArray34 = cardanEulerSingularityException32.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException36 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray37 = cardanEulerSingularityException36.getArguments();
        cardanEulerSingularityException32.addSuppressed((java.lang.Throwable) cardanEulerSingularityException36);
        java.lang.Object[] objArray39 = cardanEulerSingularityException36.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException41 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray42 = cardanEulerSingularityException41.getArguments();
        java.lang.Throwable[] throwableArray43 = cardanEulerSingularityException41.getSuppressed();
        java.lang.String str44 = cardanEulerSingularityException41.getPattern();
        cardanEulerSingularityException36.addSuppressed((java.lang.Throwable) cardanEulerSingularityException41);
        java.lang.Object[] objArray46 = cardanEulerSingularityException36.getArguments();
        java.lang.Throwable[] throwableArray47 = cardanEulerSingularityException36.getSuppressed();
        cardanEulerSingularityException18.addSuppressed((java.lang.Throwable) cardanEulerSingularityException36);
        java.lang.Throwable[] throwableArray49 = cardanEulerSingularityException36.getSuppressed();
        java.lang.String str50 = cardanEulerSingularityException36.getPattern();
        org.junit.Assert.assertNotNull(objArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray2), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray2), "[]");
        org.junit.Assert.assertNotNull(objArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray3), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray3), "[]");
        org.junit.Assert.assertNotNull(objArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray6), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray6), "[]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Euler angles singularity" + "'", str8, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray11), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray11), "[]");
        org.junit.Assert.assertNotNull(objArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray12), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray12), "[]");
        org.junit.Assert.assertNotNull(objArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray15), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray15), "[]");
        org.junit.Assert.assertNotNull(objArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray19), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray19), "[]");
        org.junit.Assert.assertNotNull(objArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray20), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray20), "[]");
        org.junit.Assert.assertNotNull(throwableArray27);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "Euler angles singularity" + "'", str29, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray33), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray33), "[]");
        org.junit.Assert.assertNotNull(objArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray34), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray34), "[]");
        org.junit.Assert.assertNotNull(objArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray37), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray37), "[]");
        org.junit.Assert.assertNotNull(objArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray39), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray39), "[]");
        org.junit.Assert.assertNotNull(objArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray42), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray42), "[]");
        org.junit.Assert.assertNotNull(throwableArray43);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "Euler angles singularity" + "'", str44, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray46), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray46), "[]");
        org.junit.Assert.assertNotNull(throwableArray47);
        org.junit.Assert.assertNotNull(throwableArray49);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "Euler angles singularity" + "'", str50, "Euler angles singularity");
    }

    @Test
    public void test1562() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1562");
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException1 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray2 = cardanEulerSingularityException1.getArguments();
        java.lang.Object[] objArray3 = cardanEulerSingularityException1.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException5 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray6 = cardanEulerSingularityException5.getArguments();
        cardanEulerSingularityException1.addSuppressed((java.lang.Throwable) cardanEulerSingularityException5);
        java.lang.Throwable[] throwableArray8 = cardanEulerSingularityException1.getSuppressed();
        java.lang.String str9 = cardanEulerSingularityException1.getPattern();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException11 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray12 = cardanEulerSingularityException11.getArguments();
        java.lang.String str13 = cardanEulerSingularityException11.getPattern();
        java.lang.Object[] objArray14 = cardanEulerSingularityException11.getArguments();
        java.lang.Object[] objArray15 = cardanEulerSingularityException11.getArguments();
        java.lang.String str16 = cardanEulerSingularityException11.getPattern();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException18 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        cardanEulerSingularityException11.addSuppressed((java.lang.Throwable) cardanEulerSingularityException18);
        cardanEulerSingularityException1.addSuppressed((java.lang.Throwable) cardanEulerSingularityException18);
        java.lang.Object[] objArray21 = cardanEulerSingularityException18.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException23 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray24 = cardanEulerSingularityException23.getArguments();
        java.lang.Object[] objArray25 = cardanEulerSingularityException23.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException27 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray28 = cardanEulerSingularityException27.getArguments();
        cardanEulerSingularityException23.addSuppressed((java.lang.Throwable) cardanEulerSingularityException27);
        java.lang.Throwable[] throwableArray30 = cardanEulerSingularityException23.getSuppressed();
        java.lang.String str31 = cardanEulerSingularityException23.getPattern();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException33 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray34 = cardanEulerSingularityException33.getArguments();
        java.lang.String str35 = cardanEulerSingularityException33.getPattern();
        java.lang.Object[] objArray36 = cardanEulerSingularityException33.getArguments();
        java.lang.Object[] objArray37 = cardanEulerSingularityException33.getArguments();
        java.lang.String str38 = cardanEulerSingularityException33.getPattern();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException40 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        cardanEulerSingularityException33.addSuppressed((java.lang.Throwable) cardanEulerSingularityException40);
        cardanEulerSingularityException23.addSuppressed((java.lang.Throwable) cardanEulerSingularityException40);
        java.lang.Object[] objArray43 = cardanEulerSingularityException40.getArguments();
        cardanEulerSingularityException18.addSuppressed((java.lang.Throwable) cardanEulerSingularityException40);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException46 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray47 = cardanEulerSingularityException46.getArguments();
        java.lang.Object[] objArray48 = cardanEulerSingularityException46.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException50 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray51 = cardanEulerSingularityException50.getArguments();
        cardanEulerSingularityException46.addSuppressed((java.lang.Throwable) cardanEulerSingularityException50);
        java.lang.Throwable[] throwableArray53 = cardanEulerSingularityException50.getSuppressed();
        java.lang.Object[] objArray54 = cardanEulerSingularityException50.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException56 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray57 = cardanEulerSingularityException56.getArguments();
        java.lang.Object[] objArray58 = cardanEulerSingularityException56.getArguments();
        java.lang.Object[] objArray59 = cardanEulerSingularityException56.getArguments();
        cardanEulerSingularityException50.addSuppressed((java.lang.Throwable) cardanEulerSingularityException56);
        java.lang.Object[] objArray61 = cardanEulerSingularityException56.getArguments();
        java.lang.Throwable[] throwableArray62 = cardanEulerSingularityException56.getSuppressed();
        java.lang.Throwable[] throwableArray63 = cardanEulerSingularityException56.getSuppressed();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException65 = new org.apache.commons.math.geometry.CardanEulerSingularityException(true);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException67 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        cardanEulerSingularityException65.addSuppressed((java.lang.Throwable) cardanEulerSingularityException67);
        java.lang.Throwable[] throwableArray69 = cardanEulerSingularityException65.getSuppressed();
        java.lang.Throwable[] throwableArray70 = cardanEulerSingularityException65.getSuppressed();
        cardanEulerSingularityException56.addSuppressed((java.lang.Throwable) cardanEulerSingularityException65);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException73 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray74 = cardanEulerSingularityException73.getArguments();
        java.lang.Throwable[] throwableArray75 = cardanEulerSingularityException73.getSuppressed();
        java.lang.String str76 = cardanEulerSingularityException73.getPattern();
        java.lang.Throwable[] throwableArray77 = cardanEulerSingularityException73.getSuppressed();
        java.lang.String str78 = cardanEulerSingularityException73.getPattern();
        java.lang.String str79 = cardanEulerSingularityException73.getPattern();
        cardanEulerSingularityException56.addSuppressed((java.lang.Throwable) cardanEulerSingularityException73);
        cardanEulerSingularityException40.addSuppressed((java.lang.Throwable) cardanEulerSingularityException73);
        org.junit.Assert.assertNotNull(objArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray2), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray2), "[]");
        org.junit.Assert.assertNotNull(objArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray3), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray3), "[]");
        org.junit.Assert.assertNotNull(objArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray6), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray6), "[]");
        org.junit.Assert.assertNotNull(throwableArray8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Euler angles singularity" + "'", str9, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray12), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray12), "[]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Euler angles singularity" + "'", str13, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[]");
        org.junit.Assert.assertNotNull(objArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray15), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray15), "[]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "Euler angles singularity" + "'", str16, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray21), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray21), "[]");
        org.junit.Assert.assertNotNull(objArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray24), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray24), "[]");
        org.junit.Assert.assertNotNull(objArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray25), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray25), "[]");
        org.junit.Assert.assertNotNull(objArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray28), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray28), "[]");
        org.junit.Assert.assertNotNull(throwableArray30);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "Euler angles singularity" + "'", str31, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray34), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray34), "[]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "Euler angles singularity" + "'", str35, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray36), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray36), "[]");
        org.junit.Assert.assertNotNull(objArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray37), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray37), "[]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "Euler angles singularity" + "'", str38, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray43), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray43), "[]");
        org.junit.Assert.assertNotNull(objArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray47), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray47), "[]");
        org.junit.Assert.assertNotNull(objArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray48), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray48), "[]");
        org.junit.Assert.assertNotNull(objArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray51), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray51), "[]");
        org.junit.Assert.assertNotNull(throwableArray53);
        org.junit.Assert.assertNotNull(objArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray54), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray54), "[]");
        org.junit.Assert.assertNotNull(objArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray57), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray57), "[]");
        org.junit.Assert.assertNotNull(objArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray58), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray58), "[]");
        org.junit.Assert.assertNotNull(objArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray59), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray59), "[]");
        org.junit.Assert.assertNotNull(objArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray61), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray61), "[]");
        org.junit.Assert.assertNotNull(throwableArray62);
        org.junit.Assert.assertNotNull(throwableArray63);
        org.junit.Assert.assertNotNull(throwableArray69);
        org.junit.Assert.assertNotNull(throwableArray70);
        org.junit.Assert.assertNotNull(objArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray74), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray74), "[]");
        org.junit.Assert.assertNotNull(throwableArray75);
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "Euler angles singularity" + "'", str76, "Euler angles singularity");
        org.junit.Assert.assertNotNull(throwableArray77);
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "Euler angles singularity" + "'", str78, "Euler angles singularity");
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "Euler angles singularity" + "'", str79, "Euler angles singularity");
    }

    @Test
    public void test1563() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1563");
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException1 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray2 = cardanEulerSingularityException1.getArguments();
        java.lang.Object[] objArray3 = cardanEulerSingularityException1.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException5 = new org.apache.commons.math.geometry.CardanEulerSingularityException(true);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException7 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        cardanEulerSingularityException5.addSuppressed((java.lang.Throwable) cardanEulerSingularityException7);
        cardanEulerSingularityException1.addSuppressed((java.lang.Throwable) cardanEulerSingularityException5);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException11 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray12 = cardanEulerSingularityException11.getArguments();
        java.lang.String str13 = cardanEulerSingularityException11.getPattern();
        java.lang.Object[] objArray14 = cardanEulerSingularityException11.getArguments();
        java.lang.Object[] objArray15 = cardanEulerSingularityException11.getArguments();
        cardanEulerSingularityException5.addSuppressed((java.lang.Throwable) cardanEulerSingularityException11);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException18 = new org.apache.commons.math.geometry.CardanEulerSingularityException(true);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException20 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        cardanEulerSingularityException18.addSuppressed((java.lang.Throwable) cardanEulerSingularityException20);
        java.lang.String str22 = cardanEulerSingularityException20.getPattern();
        java.lang.Throwable[] throwableArray23 = cardanEulerSingularityException20.getSuppressed();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException25 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.String str26 = cardanEulerSingularityException25.getPattern();
        java.lang.Object[] objArray27 = cardanEulerSingularityException25.getArguments();
        java.lang.String str28 = cardanEulerSingularityException25.getPattern();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException30 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.String str31 = cardanEulerSingularityException30.getPattern();
        java.lang.Throwable[] throwableArray32 = cardanEulerSingularityException30.getSuppressed();
        cardanEulerSingularityException25.addSuppressed((java.lang.Throwable) cardanEulerSingularityException30);
        cardanEulerSingularityException20.addSuppressed((java.lang.Throwable) cardanEulerSingularityException30);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException36 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray37 = cardanEulerSingularityException36.getArguments();
        java.lang.String str38 = cardanEulerSingularityException36.getPattern();
        java.lang.Object[] objArray39 = cardanEulerSingularityException36.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException41 = new org.apache.commons.math.geometry.CardanEulerSingularityException(true);
        java.lang.Object[] objArray42 = cardanEulerSingularityException41.getArguments();
        java.lang.Object[] objArray43 = cardanEulerSingularityException41.getArguments();
        java.lang.String str44 = cardanEulerSingularityException41.getPattern();
        java.lang.String str45 = cardanEulerSingularityException41.getPattern();
        cardanEulerSingularityException36.addSuppressed((java.lang.Throwable) cardanEulerSingularityException41);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException48 = new org.apache.commons.math.geometry.CardanEulerSingularityException(true);
        java.lang.Object[] objArray49 = cardanEulerSingularityException48.getArguments();
        java.lang.Throwable[] throwableArray50 = cardanEulerSingularityException48.getSuppressed();
        java.lang.Throwable[] throwableArray51 = cardanEulerSingularityException48.getSuppressed();
        java.lang.Throwable[] throwableArray52 = cardanEulerSingularityException48.getSuppressed();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException54 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray55 = cardanEulerSingularityException54.getArguments();
        java.lang.Object[] objArray56 = cardanEulerSingularityException54.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException58 = new org.apache.commons.math.geometry.CardanEulerSingularityException(true);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException60 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        cardanEulerSingularityException58.addSuppressed((java.lang.Throwable) cardanEulerSingularityException60);
        cardanEulerSingularityException54.addSuppressed((java.lang.Throwable) cardanEulerSingularityException58);
        cardanEulerSingularityException48.addSuppressed((java.lang.Throwable) cardanEulerSingularityException54);
        java.lang.Throwable[] throwableArray64 = cardanEulerSingularityException48.getSuppressed();
        cardanEulerSingularityException41.addSuppressed((java.lang.Throwable) cardanEulerSingularityException48);
        cardanEulerSingularityException20.addSuppressed((java.lang.Throwable) cardanEulerSingularityException41);
        cardanEulerSingularityException5.addSuppressed((java.lang.Throwable) cardanEulerSingularityException41);
        java.lang.Class<?> wildcardClass68 = cardanEulerSingularityException41.getClass();
        org.junit.Assert.assertNotNull(objArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray2), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray2), "[]");
        org.junit.Assert.assertNotNull(objArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray3), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray3), "[]");
        org.junit.Assert.assertNotNull(objArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray12), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray12), "[]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Euler angles singularity" + "'", str13, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[]");
        org.junit.Assert.assertNotNull(objArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray15), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray15), "[]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "Euler angles singularity" + "'", str22, "Euler angles singularity");
        org.junit.Assert.assertNotNull(throwableArray23);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "Euler angles singularity" + "'", str26, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray27), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray27), "[]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "Euler angles singularity" + "'", str28, "Euler angles singularity");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "Euler angles singularity" + "'", str31, "Euler angles singularity");
        org.junit.Assert.assertNotNull(throwableArray32);
        org.junit.Assert.assertNotNull(objArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray37), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray37), "[]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "Euler angles singularity" + "'", str38, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray39), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray39), "[]");
        org.junit.Assert.assertNotNull(objArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray42), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray42), "[]");
        org.junit.Assert.assertNotNull(objArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray43), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray43), "[]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "Cardan angles singularity" + "'", str44, "Cardan angles singularity");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "Cardan angles singularity" + "'", str45, "Cardan angles singularity");
        org.junit.Assert.assertNotNull(objArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray49), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray49), "[]");
        org.junit.Assert.assertNotNull(throwableArray50);
        org.junit.Assert.assertNotNull(throwableArray51);
        org.junit.Assert.assertNotNull(throwableArray52);
        org.junit.Assert.assertNotNull(objArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray55), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray55), "[]");
        org.junit.Assert.assertNotNull(objArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray56), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray56), "[]");
        org.junit.Assert.assertNotNull(throwableArray64);
        org.junit.Assert.assertNotNull(wildcardClass68);
    }

    @Test
    public void test1564() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1564");
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException1 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray2 = cardanEulerSingularityException1.getArguments();
        java.lang.Object[] objArray3 = cardanEulerSingularityException1.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException5 = new org.apache.commons.math.geometry.CardanEulerSingularityException(true);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException7 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        cardanEulerSingularityException5.addSuppressed((java.lang.Throwable) cardanEulerSingularityException7);
        cardanEulerSingularityException1.addSuppressed((java.lang.Throwable) cardanEulerSingularityException5);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException11 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray12 = cardanEulerSingularityException11.getArguments();
        java.lang.String str13 = cardanEulerSingularityException11.getPattern();
        java.lang.Object[] objArray14 = cardanEulerSingularityException11.getArguments();
        java.lang.Object[] objArray15 = cardanEulerSingularityException11.getArguments();
        cardanEulerSingularityException5.addSuppressed((java.lang.Throwable) cardanEulerSingularityException11);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException18 = new org.apache.commons.math.geometry.CardanEulerSingularityException(true);
        java.lang.Object[] objArray19 = cardanEulerSingularityException18.getArguments();
        java.lang.Throwable[] throwableArray20 = cardanEulerSingularityException18.getSuppressed();
        java.lang.String str21 = cardanEulerSingularityException18.getPattern();
        java.lang.Object[] objArray22 = cardanEulerSingularityException18.getArguments();
        java.lang.Throwable[] throwableArray23 = cardanEulerSingularityException18.getSuppressed();
        cardanEulerSingularityException5.addSuppressed((java.lang.Throwable) cardanEulerSingularityException18);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException26 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray27 = cardanEulerSingularityException26.getArguments();
        java.lang.Throwable[] throwableArray28 = cardanEulerSingularityException26.getSuppressed();
        java.lang.String str29 = cardanEulerSingularityException26.getPattern();
        java.lang.String str30 = cardanEulerSingularityException26.getPattern();
        cardanEulerSingularityException5.addSuppressed((java.lang.Throwable) cardanEulerSingularityException26);
        java.lang.Throwable[] throwableArray32 = cardanEulerSingularityException26.getSuppressed();
        java.lang.Class<?> wildcardClass33 = throwableArray32.getClass();
        org.junit.Assert.assertNotNull(objArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray2), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray2), "[]");
        org.junit.Assert.assertNotNull(objArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray3), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray3), "[]");
        org.junit.Assert.assertNotNull(objArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray12), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray12), "[]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Euler angles singularity" + "'", str13, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[]");
        org.junit.Assert.assertNotNull(objArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray15), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray15), "[]");
        org.junit.Assert.assertNotNull(objArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray19), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray19), "[]");
        org.junit.Assert.assertNotNull(throwableArray20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "Cardan angles singularity" + "'", str21, "Cardan angles singularity");
        org.junit.Assert.assertNotNull(objArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray22), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray22), "[]");
        org.junit.Assert.assertNotNull(throwableArray23);
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray27), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray27), "[]");
        org.junit.Assert.assertNotNull(throwableArray28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "Euler angles singularity" + "'", str29, "Euler angles singularity");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "Euler angles singularity" + "'", str30, "Euler angles singularity");
        org.junit.Assert.assertNotNull(throwableArray32);
        org.junit.Assert.assertNotNull(wildcardClass33);
    }

    @Test
    public void test1565() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1565");
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException1 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray2 = cardanEulerSingularityException1.getArguments();
        java.lang.Object[] objArray3 = cardanEulerSingularityException1.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException5 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray6 = cardanEulerSingularityException5.getArguments();
        cardanEulerSingularityException1.addSuppressed((java.lang.Throwable) cardanEulerSingularityException5);
        java.lang.Throwable[] throwableArray8 = cardanEulerSingularityException5.getSuppressed();
        java.lang.Object[] objArray9 = cardanEulerSingularityException5.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException11 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray12 = cardanEulerSingularityException11.getArguments();
        java.lang.Object[] objArray13 = cardanEulerSingularityException11.getArguments();
        java.lang.Object[] objArray14 = cardanEulerSingularityException11.getArguments();
        cardanEulerSingularityException5.addSuppressed((java.lang.Throwable) cardanEulerSingularityException11);
        java.lang.Object[] objArray16 = cardanEulerSingularityException11.getArguments();
        java.lang.Throwable[] throwableArray17 = cardanEulerSingularityException11.getSuppressed();
        java.lang.Throwable[] throwableArray18 = cardanEulerSingularityException11.getSuppressed();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException20 = new org.apache.commons.math.geometry.CardanEulerSingularityException(true);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException22 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        cardanEulerSingularityException20.addSuppressed((java.lang.Throwable) cardanEulerSingularityException22);
        java.lang.Throwable[] throwableArray24 = cardanEulerSingularityException20.getSuppressed();
        java.lang.Throwable[] throwableArray25 = cardanEulerSingularityException20.getSuppressed();
        cardanEulerSingularityException11.addSuppressed((java.lang.Throwable) cardanEulerSingularityException20);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException28 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray29 = cardanEulerSingularityException28.getArguments();
        java.lang.Throwable[] throwableArray30 = cardanEulerSingularityException28.getSuppressed();
        java.lang.String str31 = cardanEulerSingularityException28.getPattern();
        java.lang.Throwable[] throwableArray32 = cardanEulerSingularityException28.getSuppressed();
        java.lang.String str33 = cardanEulerSingularityException28.getPattern();
        java.lang.String str34 = cardanEulerSingularityException28.getPattern();
        cardanEulerSingularityException11.addSuppressed((java.lang.Throwable) cardanEulerSingularityException28);
        java.lang.Object[] objArray36 = cardanEulerSingularityException28.getArguments();
        java.lang.Throwable[] throwableArray37 = cardanEulerSingularityException28.getSuppressed();
        org.junit.Assert.assertNotNull(objArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray2), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray2), "[]");
        org.junit.Assert.assertNotNull(objArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray3), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray3), "[]");
        org.junit.Assert.assertNotNull(objArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray6), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray6), "[]");
        org.junit.Assert.assertNotNull(throwableArray8);
        org.junit.Assert.assertNotNull(objArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray9), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray9), "[]");
        org.junit.Assert.assertNotNull(objArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray12), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray12), "[]");
        org.junit.Assert.assertNotNull(objArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray13), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray13), "[]");
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[]");
        org.junit.Assert.assertNotNull(objArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray16), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray16), "[]");
        org.junit.Assert.assertNotNull(throwableArray17);
        org.junit.Assert.assertNotNull(throwableArray18);
        org.junit.Assert.assertNotNull(throwableArray24);
        org.junit.Assert.assertNotNull(throwableArray25);
        org.junit.Assert.assertNotNull(objArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray29), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray29), "[]");
        org.junit.Assert.assertNotNull(throwableArray30);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "Euler angles singularity" + "'", str31, "Euler angles singularity");
        org.junit.Assert.assertNotNull(throwableArray32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "Euler angles singularity" + "'", str33, "Euler angles singularity");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "Euler angles singularity" + "'", str34, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray36), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray36), "[]");
        org.junit.Assert.assertNotNull(throwableArray37);
    }

    @Test
    public void test1566() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1566");
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException1 = new org.apache.commons.math.geometry.CardanEulerSingularityException(true);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException3 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        cardanEulerSingularityException1.addSuppressed((java.lang.Throwable) cardanEulerSingularityException3);
        java.lang.String str5 = cardanEulerSingularityException3.getPattern();
        java.lang.Throwable[] throwableArray6 = cardanEulerSingularityException3.getSuppressed();
        java.lang.String str7 = cardanEulerSingularityException3.getPattern();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException9 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray10 = cardanEulerSingularityException9.getArguments();
        java.lang.Object[] objArray11 = cardanEulerSingularityException9.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException13 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray14 = cardanEulerSingularityException13.getArguments();
        cardanEulerSingularityException9.addSuppressed((java.lang.Throwable) cardanEulerSingularityException13);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException17 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray18 = cardanEulerSingularityException17.getArguments();
        java.lang.Object[] objArray19 = cardanEulerSingularityException17.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException21 = new org.apache.commons.math.geometry.CardanEulerSingularityException(true);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException23 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        cardanEulerSingularityException21.addSuppressed((java.lang.Throwable) cardanEulerSingularityException23);
        cardanEulerSingularityException17.addSuppressed((java.lang.Throwable) cardanEulerSingularityException21);
        java.lang.Throwable[] throwableArray26 = cardanEulerSingularityException17.getSuppressed();
        cardanEulerSingularityException13.addSuppressed((java.lang.Throwable) cardanEulerSingularityException17);
        java.lang.Object[] objArray28 = cardanEulerSingularityException17.getArguments();
        cardanEulerSingularityException3.addSuppressed((java.lang.Throwable) cardanEulerSingularityException17);
        java.lang.Object[] objArray30 = cardanEulerSingularityException17.getArguments();
        java.lang.String str31 = cardanEulerSingularityException17.getPattern();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Euler angles singularity" + "'", str5, "Euler angles singularity");
        org.junit.Assert.assertNotNull(throwableArray6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Euler angles singularity" + "'", str7, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray10), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray10), "[]");
        org.junit.Assert.assertNotNull(objArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray11), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray11), "[]");
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[]");
        org.junit.Assert.assertNotNull(objArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray18), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray18), "[]");
        org.junit.Assert.assertNotNull(objArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray19), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray19), "[]");
        org.junit.Assert.assertNotNull(throwableArray26);
        org.junit.Assert.assertNotNull(objArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray28), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray28), "[]");
        org.junit.Assert.assertNotNull(objArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray30), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray30), "[]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "Euler angles singularity" + "'", str31, "Euler angles singularity");
    }

    @Test
    public void test1567() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1567");
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException1 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray2 = cardanEulerSingularityException1.getArguments();
        java.lang.String str3 = cardanEulerSingularityException1.getPattern();
        java.lang.Object[] objArray4 = cardanEulerSingularityException1.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException6 = new org.apache.commons.math.geometry.CardanEulerSingularityException(true);
        java.lang.Object[] objArray7 = cardanEulerSingularityException6.getArguments();
        java.lang.Object[] objArray8 = cardanEulerSingularityException6.getArguments();
        java.lang.String str9 = cardanEulerSingularityException6.getPattern();
        java.lang.String str10 = cardanEulerSingularityException6.getPattern();
        cardanEulerSingularityException1.addSuppressed((java.lang.Throwable) cardanEulerSingularityException6);
        java.lang.Object[] objArray12 = cardanEulerSingularityException6.getArguments();
        java.lang.Throwable[] throwableArray13 = cardanEulerSingularityException6.getSuppressed();
        java.lang.Class<?> wildcardClass14 = throwableArray13.getClass();
        org.junit.Assert.assertNotNull(objArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray2), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray2), "[]");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Euler angles singularity" + "'", str3, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray4), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray4), "[]");
        org.junit.Assert.assertNotNull(objArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray7), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray7), "[]");
        org.junit.Assert.assertNotNull(objArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray8), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray8), "[]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Cardan angles singularity" + "'", str9, "Cardan angles singularity");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Cardan angles singularity" + "'", str10, "Cardan angles singularity");
        org.junit.Assert.assertNotNull(objArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray12), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray12), "[]");
        org.junit.Assert.assertNotNull(throwableArray13);
        org.junit.Assert.assertNotNull(wildcardClass14);
    }

    @Test
    public void test1568() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1568");
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException1 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.String str2 = cardanEulerSingularityException1.getPattern();
        java.lang.Object[] objArray3 = cardanEulerSingularityException1.getArguments();
        java.lang.String str4 = cardanEulerSingularityException1.getPattern();
        java.lang.Throwable[] throwableArray5 = cardanEulerSingularityException1.getSuppressed();
        java.lang.Throwable[] throwableArray6 = cardanEulerSingularityException1.getSuppressed();
        java.lang.String str7 = cardanEulerSingularityException1.getPattern();
        java.lang.Object[] objArray8 = cardanEulerSingularityException1.getArguments();
        java.lang.String str9 = cardanEulerSingularityException1.toString();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "Euler angles singularity" + "'", str2, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray3), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray3), "[]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Euler angles singularity" + "'", str4, "Euler angles singularity");
        org.junit.Assert.assertNotNull(throwableArray5);
        org.junit.Assert.assertNotNull(throwableArray6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Euler angles singularity" + "'", str7, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray8), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray8), "[]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "org.apache.commons.math.geometry.CardanEulerSingularityException: Euler angles singularity" + "'", str9, "org.apache.commons.math.geometry.CardanEulerSingularityException: Euler angles singularity");
    }

    @Test
    public void test1569() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1569");
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException1 = new org.apache.commons.math.geometry.CardanEulerSingularityException(true);
        java.lang.Object[] objArray2 = cardanEulerSingularityException1.getArguments();
        java.lang.Throwable[] throwableArray3 = cardanEulerSingularityException1.getSuppressed();
        java.lang.Throwable[] throwableArray4 = cardanEulerSingularityException1.getSuppressed();
        java.lang.Throwable[] throwableArray5 = cardanEulerSingularityException1.getSuppressed();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException7 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray8 = cardanEulerSingularityException7.getArguments();
        java.lang.Object[] objArray9 = cardanEulerSingularityException7.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException11 = new org.apache.commons.math.geometry.CardanEulerSingularityException(true);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException13 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        cardanEulerSingularityException11.addSuppressed((java.lang.Throwable) cardanEulerSingularityException13);
        cardanEulerSingularityException7.addSuppressed((java.lang.Throwable) cardanEulerSingularityException11);
        cardanEulerSingularityException1.addSuppressed((java.lang.Throwable) cardanEulerSingularityException7);
        java.lang.Throwable[] throwableArray17 = cardanEulerSingularityException1.getSuppressed();
        java.lang.String str18 = cardanEulerSingularityException1.getPattern();
        java.lang.Throwable[] throwableArray19 = cardanEulerSingularityException1.getSuppressed();
        java.lang.Object[] objArray20 = cardanEulerSingularityException1.getArguments();
        java.lang.Object[] objArray21 = cardanEulerSingularityException1.getArguments();
        java.lang.String str22 = cardanEulerSingularityException1.toString();
        org.junit.Assert.assertNotNull(objArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray2), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray2), "[]");
        org.junit.Assert.assertNotNull(throwableArray3);
        org.junit.Assert.assertNotNull(throwableArray4);
        org.junit.Assert.assertNotNull(throwableArray5);
        org.junit.Assert.assertNotNull(objArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray8), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray8), "[]");
        org.junit.Assert.assertNotNull(objArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray9), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray9), "[]");
        org.junit.Assert.assertNotNull(throwableArray17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "Cardan angles singularity" + "'", str18, "Cardan angles singularity");
        org.junit.Assert.assertNotNull(throwableArray19);
        org.junit.Assert.assertNotNull(objArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray20), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray20), "[]");
        org.junit.Assert.assertNotNull(objArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray21), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray21), "[]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "org.apache.commons.math.geometry.CardanEulerSingularityException: Cardan angles singularity" + "'", str22, "org.apache.commons.math.geometry.CardanEulerSingularityException: Cardan angles singularity");
    }

    @Test
    public void test1570() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1570");
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException1 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray2 = cardanEulerSingularityException1.getArguments();
        java.lang.Object[] objArray3 = cardanEulerSingularityException1.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException5 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray6 = cardanEulerSingularityException5.getArguments();
        cardanEulerSingularityException1.addSuppressed((java.lang.Throwable) cardanEulerSingularityException5);
        java.lang.Object[] objArray8 = cardanEulerSingularityException5.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException10 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray11 = cardanEulerSingularityException10.getArguments();
        java.lang.Throwable[] throwableArray12 = cardanEulerSingularityException10.getSuppressed();
        java.lang.String str13 = cardanEulerSingularityException10.getPattern();
        cardanEulerSingularityException5.addSuppressed((java.lang.Throwable) cardanEulerSingularityException10);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException16 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray17 = cardanEulerSingularityException16.getArguments();
        java.lang.Object[] objArray18 = cardanEulerSingularityException16.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException20 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray21 = cardanEulerSingularityException20.getArguments();
        cardanEulerSingularityException16.addSuppressed((java.lang.Throwable) cardanEulerSingularityException20);
        java.lang.Throwable[] throwableArray23 = cardanEulerSingularityException16.getSuppressed();
        java.lang.String str24 = cardanEulerSingularityException16.getPattern();
        cardanEulerSingularityException5.addSuppressed((java.lang.Throwable) cardanEulerSingularityException16);
        java.lang.String str26 = cardanEulerSingularityException16.getPattern();
        java.lang.String str27 = cardanEulerSingularityException16.getPattern();
        java.lang.Throwable[] throwableArray28 = cardanEulerSingularityException16.getSuppressed();
        java.lang.Object[] objArray29 = cardanEulerSingularityException16.getArguments();
        org.junit.Assert.assertNotNull(objArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray2), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray2), "[]");
        org.junit.Assert.assertNotNull(objArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray3), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray3), "[]");
        org.junit.Assert.assertNotNull(objArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray6), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray6), "[]");
        org.junit.Assert.assertNotNull(objArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray8), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray8), "[]");
        org.junit.Assert.assertNotNull(objArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray11), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray11), "[]");
        org.junit.Assert.assertNotNull(throwableArray12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Euler angles singularity" + "'", str13, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray17), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray17), "[]");
        org.junit.Assert.assertNotNull(objArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray18), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray18), "[]");
        org.junit.Assert.assertNotNull(objArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray21), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray21), "[]");
        org.junit.Assert.assertNotNull(throwableArray23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "Euler angles singularity" + "'", str24, "Euler angles singularity");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "Euler angles singularity" + "'", str26, "Euler angles singularity");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "Euler angles singularity" + "'", str27, "Euler angles singularity");
        org.junit.Assert.assertNotNull(throwableArray28);
        org.junit.Assert.assertNotNull(objArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray29), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray29), "[]");
    }

    @Test
    public void test1571() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1571");
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException1 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.String str2 = cardanEulerSingularityException1.getPattern();
        java.lang.Object[] objArray3 = cardanEulerSingularityException1.getArguments();
        java.lang.String str4 = cardanEulerSingularityException1.getPattern();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException6 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.String str7 = cardanEulerSingularityException6.getPattern();
        java.lang.Throwable[] throwableArray8 = cardanEulerSingularityException6.getSuppressed();
        cardanEulerSingularityException1.addSuppressed((java.lang.Throwable) cardanEulerSingularityException6);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException11 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.String str12 = cardanEulerSingularityException11.getPattern();
        java.lang.Object[] objArray13 = cardanEulerSingularityException11.getArguments();
        java.lang.String str14 = cardanEulerSingularityException11.getPattern();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException16 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.String str17 = cardanEulerSingularityException16.getPattern();
        java.lang.Throwable[] throwableArray18 = cardanEulerSingularityException16.getSuppressed();
        cardanEulerSingularityException11.addSuppressed((java.lang.Throwable) cardanEulerSingularityException16);
        cardanEulerSingularityException1.addSuppressed((java.lang.Throwable) cardanEulerSingularityException11);
        java.lang.String str21 = cardanEulerSingularityException1.getPattern();
        java.lang.String str22 = cardanEulerSingularityException1.getPattern();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException24 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray25 = cardanEulerSingularityException24.getArguments();
        java.lang.String str26 = cardanEulerSingularityException24.getPattern();
        java.lang.Object[] objArray27 = cardanEulerSingularityException24.getArguments();
        java.lang.Object[] objArray28 = cardanEulerSingularityException24.getArguments();
        java.lang.String str29 = cardanEulerSingularityException24.getPattern();
        cardanEulerSingularityException1.addSuppressed((java.lang.Throwable) cardanEulerSingularityException24);
        java.lang.Object[] objArray31 = cardanEulerSingularityException24.getArguments();
        java.lang.Object[] objArray32 = cardanEulerSingularityException24.getArguments();
        java.lang.Object[] objArray33 = cardanEulerSingularityException24.getArguments();
        java.lang.String str34 = cardanEulerSingularityException24.getPattern();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "Euler angles singularity" + "'", str2, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray3), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray3), "[]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Euler angles singularity" + "'", str4, "Euler angles singularity");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Euler angles singularity" + "'", str7, "Euler angles singularity");
        org.junit.Assert.assertNotNull(throwableArray8);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Euler angles singularity" + "'", str12, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray13), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray13), "[]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "Euler angles singularity" + "'", str14, "Euler angles singularity");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "Euler angles singularity" + "'", str17, "Euler angles singularity");
        org.junit.Assert.assertNotNull(throwableArray18);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "Euler angles singularity" + "'", str21, "Euler angles singularity");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "Euler angles singularity" + "'", str22, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray25), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray25), "[]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "Euler angles singularity" + "'", str26, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray27), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray27), "[]");
        org.junit.Assert.assertNotNull(objArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray28), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray28), "[]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "Euler angles singularity" + "'", str29, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray31), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray31), "[]");
        org.junit.Assert.assertNotNull(objArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray32), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray32), "[]");
        org.junit.Assert.assertNotNull(objArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray33), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray33), "[]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "Euler angles singularity" + "'", str34, "Euler angles singularity");
    }

    @Test
    public void test1572() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1572");
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException1 = new org.apache.commons.math.geometry.CardanEulerSingularityException(true);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException3 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        cardanEulerSingularityException1.addSuppressed((java.lang.Throwable) cardanEulerSingularityException3);
        java.lang.String str5 = cardanEulerSingularityException3.getPattern();
        java.lang.Throwable[] throwableArray6 = cardanEulerSingularityException3.getSuppressed();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException8 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.String str9 = cardanEulerSingularityException8.getPattern();
        java.lang.Object[] objArray10 = cardanEulerSingularityException8.getArguments();
        java.lang.String str11 = cardanEulerSingularityException8.getPattern();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException13 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.String str14 = cardanEulerSingularityException13.getPattern();
        java.lang.Throwable[] throwableArray15 = cardanEulerSingularityException13.getSuppressed();
        cardanEulerSingularityException8.addSuppressed((java.lang.Throwable) cardanEulerSingularityException13);
        cardanEulerSingularityException3.addSuppressed((java.lang.Throwable) cardanEulerSingularityException13);
        java.lang.Throwable[] throwableArray18 = cardanEulerSingularityException3.getSuppressed();
        java.lang.Throwable[] throwableArray19 = cardanEulerSingularityException3.getSuppressed();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException21 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.String str22 = cardanEulerSingularityException21.getPattern();
        java.lang.Object[] objArray23 = cardanEulerSingularityException21.getArguments();
        java.lang.String str24 = cardanEulerSingularityException21.getPattern();
        java.lang.String str25 = cardanEulerSingularityException21.getPattern();
        java.lang.String str26 = cardanEulerSingularityException21.getPattern();
        cardanEulerSingularityException3.addSuppressed((java.lang.Throwable) cardanEulerSingularityException21);
        java.lang.String str28 = cardanEulerSingularityException3.getPattern();
        java.lang.Throwable[] throwableArray29 = cardanEulerSingularityException3.getSuppressed();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Euler angles singularity" + "'", str5, "Euler angles singularity");
        org.junit.Assert.assertNotNull(throwableArray6);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Euler angles singularity" + "'", str9, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray10), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray10), "[]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Euler angles singularity" + "'", str11, "Euler angles singularity");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "Euler angles singularity" + "'", str14, "Euler angles singularity");
        org.junit.Assert.assertNotNull(throwableArray15);
        org.junit.Assert.assertNotNull(throwableArray18);
        org.junit.Assert.assertNotNull(throwableArray19);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "Euler angles singularity" + "'", str22, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray23), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray23), "[]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "Euler angles singularity" + "'", str24, "Euler angles singularity");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "Euler angles singularity" + "'", str25, "Euler angles singularity");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "Euler angles singularity" + "'", str26, "Euler angles singularity");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "Euler angles singularity" + "'", str28, "Euler angles singularity");
        org.junit.Assert.assertNotNull(throwableArray29);
    }

    @Test
    public void test1573() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1573");
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException1 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray2 = cardanEulerSingularityException1.getArguments();
        java.lang.Object[] objArray3 = cardanEulerSingularityException1.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException5 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray6 = cardanEulerSingularityException5.getArguments();
        cardanEulerSingularityException1.addSuppressed((java.lang.Throwable) cardanEulerSingularityException5);
        java.lang.Object[] objArray8 = cardanEulerSingularityException5.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException10 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray11 = cardanEulerSingularityException10.getArguments();
        java.lang.Throwable[] throwableArray12 = cardanEulerSingularityException10.getSuppressed();
        java.lang.String str13 = cardanEulerSingularityException10.getPattern();
        cardanEulerSingularityException5.addSuppressed((java.lang.Throwable) cardanEulerSingularityException10);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException16 = new org.apache.commons.math.geometry.CardanEulerSingularityException(true);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException18 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        cardanEulerSingularityException16.addSuppressed((java.lang.Throwable) cardanEulerSingularityException18);
        java.lang.Throwable[] throwableArray20 = cardanEulerSingularityException16.getSuppressed();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException22 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray23 = cardanEulerSingularityException22.getArguments();
        java.lang.Throwable[] throwableArray24 = cardanEulerSingularityException22.getSuppressed();
        java.lang.Object[] objArray25 = cardanEulerSingularityException22.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException27 = new org.apache.commons.math.geometry.CardanEulerSingularityException(true);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException29 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        cardanEulerSingularityException27.addSuppressed((java.lang.Throwable) cardanEulerSingularityException29);
        java.lang.String str31 = cardanEulerSingularityException29.getPattern();
        java.lang.Throwable[] throwableArray32 = cardanEulerSingularityException29.getSuppressed();
        java.lang.String str33 = cardanEulerSingularityException29.getPattern();
        java.lang.Throwable[] throwableArray34 = cardanEulerSingularityException29.getSuppressed();
        java.lang.String str35 = cardanEulerSingularityException29.getPattern();
        cardanEulerSingularityException22.addSuppressed((java.lang.Throwable) cardanEulerSingularityException29);
        cardanEulerSingularityException16.addSuppressed((java.lang.Throwable) cardanEulerSingularityException29);
        java.lang.Throwable[] throwableArray38 = cardanEulerSingularityException29.getSuppressed();
        cardanEulerSingularityException5.addSuppressed((java.lang.Throwable) cardanEulerSingularityException29);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException41 = new org.apache.commons.math.geometry.CardanEulerSingularityException(true);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException43 = new org.apache.commons.math.geometry.CardanEulerSingularityException(true);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException45 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        cardanEulerSingularityException43.addSuppressed((java.lang.Throwable) cardanEulerSingularityException45);
        java.lang.String str47 = cardanEulerSingularityException45.getPattern();
        java.lang.String str48 = cardanEulerSingularityException45.getPattern();
        cardanEulerSingularityException41.addSuppressed((java.lang.Throwable) cardanEulerSingularityException45);
        java.lang.Object[] objArray50 = cardanEulerSingularityException45.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException52 = new org.apache.commons.math.geometry.CardanEulerSingularityException(true);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException54 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        cardanEulerSingularityException52.addSuppressed((java.lang.Throwable) cardanEulerSingularityException54);
        java.lang.Throwable[] throwableArray56 = cardanEulerSingularityException52.getSuppressed();
        java.lang.Throwable[] throwableArray57 = cardanEulerSingularityException52.getSuppressed();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException59 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.String str60 = cardanEulerSingularityException59.getPattern();
        cardanEulerSingularityException52.addSuppressed((java.lang.Throwable) cardanEulerSingularityException59);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException63 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray64 = cardanEulerSingularityException63.getArguments();
        java.lang.Throwable[] throwableArray65 = cardanEulerSingularityException63.getSuppressed();
        java.lang.String str66 = cardanEulerSingularityException63.getPattern();
        java.lang.Throwable[] throwableArray67 = cardanEulerSingularityException63.getSuppressed();
        java.lang.String str68 = cardanEulerSingularityException63.getPattern();
        java.lang.Throwable[] throwableArray69 = cardanEulerSingularityException63.getSuppressed();
        cardanEulerSingularityException52.addSuppressed((java.lang.Throwable) cardanEulerSingularityException63);
        cardanEulerSingularityException45.addSuppressed((java.lang.Throwable) cardanEulerSingularityException52);
        cardanEulerSingularityException5.addSuppressed((java.lang.Throwable) cardanEulerSingularityException52);
        java.lang.Throwable[] throwableArray73 = cardanEulerSingularityException52.getSuppressed();
        org.junit.Assert.assertNotNull(objArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray2), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray2), "[]");
        org.junit.Assert.assertNotNull(objArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray3), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray3), "[]");
        org.junit.Assert.assertNotNull(objArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray6), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray6), "[]");
        org.junit.Assert.assertNotNull(objArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray8), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray8), "[]");
        org.junit.Assert.assertNotNull(objArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray11), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray11), "[]");
        org.junit.Assert.assertNotNull(throwableArray12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Euler angles singularity" + "'", str13, "Euler angles singularity");
        org.junit.Assert.assertNotNull(throwableArray20);
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray23), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray23), "[]");
        org.junit.Assert.assertNotNull(throwableArray24);
        org.junit.Assert.assertNotNull(objArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray25), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray25), "[]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "Euler angles singularity" + "'", str31, "Euler angles singularity");
        org.junit.Assert.assertNotNull(throwableArray32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "Euler angles singularity" + "'", str33, "Euler angles singularity");
        org.junit.Assert.assertNotNull(throwableArray34);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "Euler angles singularity" + "'", str35, "Euler angles singularity");
        org.junit.Assert.assertNotNull(throwableArray38);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "Euler angles singularity" + "'", str47, "Euler angles singularity");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "Euler angles singularity" + "'", str48, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray50), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray50), "[]");
        org.junit.Assert.assertNotNull(throwableArray56);
        org.junit.Assert.assertNotNull(throwableArray57);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "Euler angles singularity" + "'", str60, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray64), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray64), "[]");
        org.junit.Assert.assertNotNull(throwableArray65);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "Euler angles singularity" + "'", str66, "Euler angles singularity");
        org.junit.Assert.assertNotNull(throwableArray67);
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "Euler angles singularity" + "'", str68, "Euler angles singularity");
        org.junit.Assert.assertNotNull(throwableArray69);
        org.junit.Assert.assertNotNull(throwableArray73);
    }

    @Test
    public void test1574() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1574");
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException1 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray2 = cardanEulerSingularityException1.getArguments();
        java.lang.String str3 = cardanEulerSingularityException1.getPattern();
        java.lang.Object[] objArray4 = cardanEulerSingularityException1.getArguments();
        java.lang.Object[] objArray5 = cardanEulerSingularityException1.getArguments();
        java.lang.String str6 = cardanEulerSingularityException1.getPattern();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException8 = new org.apache.commons.math.geometry.CardanEulerSingularityException(true);
        java.lang.Object[] objArray9 = cardanEulerSingularityException8.getArguments();
        java.lang.Throwable[] throwableArray10 = cardanEulerSingularityException8.getSuppressed();
        java.lang.Throwable[] throwableArray11 = cardanEulerSingularityException8.getSuppressed();
        cardanEulerSingularityException1.addSuppressed((java.lang.Throwable) cardanEulerSingularityException8);
        java.lang.Object[] objArray13 = cardanEulerSingularityException1.getArguments();
        java.lang.Object[] objArray14 = cardanEulerSingularityException1.getArguments();
        java.lang.String str15 = cardanEulerSingularityException1.getPattern();
        org.junit.Assert.assertNotNull(objArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray2), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray2), "[]");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Euler angles singularity" + "'", str3, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray4), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray4), "[]");
        org.junit.Assert.assertNotNull(objArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray5), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray5), "[]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "Euler angles singularity" + "'", str6, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray9), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray9), "[]");
        org.junit.Assert.assertNotNull(throwableArray10);
        org.junit.Assert.assertNotNull(throwableArray11);
        org.junit.Assert.assertNotNull(objArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray13), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray13), "[]");
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Euler angles singularity" + "'", str15, "Euler angles singularity");
    }

    @Test
    public void test1575() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1575");
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException1 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray2 = cardanEulerSingularityException1.getArguments();
        java.lang.String str3 = cardanEulerSingularityException1.getPattern();
        java.lang.Object[] objArray4 = cardanEulerSingularityException1.getArguments();
        java.lang.Object[] objArray5 = cardanEulerSingularityException1.getArguments();
        java.lang.String str6 = cardanEulerSingularityException1.getPattern();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException8 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        cardanEulerSingularityException1.addSuppressed((java.lang.Throwable) cardanEulerSingularityException8);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException11 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray12 = cardanEulerSingularityException11.getArguments();
        java.lang.String str13 = cardanEulerSingularityException11.getPattern();
        java.lang.Object[] objArray14 = cardanEulerSingularityException11.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException16 = new org.apache.commons.math.geometry.CardanEulerSingularityException(true);
        java.lang.Object[] objArray17 = cardanEulerSingularityException16.getArguments();
        java.lang.Object[] objArray18 = cardanEulerSingularityException16.getArguments();
        java.lang.String str19 = cardanEulerSingularityException16.getPattern();
        java.lang.String str20 = cardanEulerSingularityException16.getPattern();
        cardanEulerSingularityException11.addSuppressed((java.lang.Throwable) cardanEulerSingularityException16);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException23 = new org.apache.commons.math.geometry.CardanEulerSingularityException(true);
        java.lang.Object[] objArray24 = cardanEulerSingularityException23.getArguments();
        java.lang.Throwable[] throwableArray25 = cardanEulerSingularityException23.getSuppressed();
        java.lang.Throwable[] throwableArray26 = cardanEulerSingularityException23.getSuppressed();
        java.lang.Throwable[] throwableArray27 = cardanEulerSingularityException23.getSuppressed();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException29 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray30 = cardanEulerSingularityException29.getArguments();
        java.lang.Object[] objArray31 = cardanEulerSingularityException29.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException33 = new org.apache.commons.math.geometry.CardanEulerSingularityException(true);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException35 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        cardanEulerSingularityException33.addSuppressed((java.lang.Throwable) cardanEulerSingularityException35);
        cardanEulerSingularityException29.addSuppressed((java.lang.Throwable) cardanEulerSingularityException33);
        cardanEulerSingularityException23.addSuppressed((java.lang.Throwable) cardanEulerSingularityException29);
        java.lang.Throwable[] throwableArray39 = cardanEulerSingularityException23.getSuppressed();
        cardanEulerSingularityException16.addSuppressed((java.lang.Throwable) cardanEulerSingularityException23);
        java.lang.String str41 = cardanEulerSingularityException23.getPattern();
        cardanEulerSingularityException1.addSuppressed((java.lang.Throwable) cardanEulerSingularityException23);
        java.lang.String str43 = cardanEulerSingularityException23.getPattern();
        org.junit.Assert.assertNotNull(objArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray2), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray2), "[]");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Euler angles singularity" + "'", str3, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray4), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray4), "[]");
        org.junit.Assert.assertNotNull(objArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray5), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray5), "[]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "Euler angles singularity" + "'", str6, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray12), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray12), "[]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Euler angles singularity" + "'", str13, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[]");
        org.junit.Assert.assertNotNull(objArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray17), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray17), "[]");
        org.junit.Assert.assertNotNull(objArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray18), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray18), "[]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "Cardan angles singularity" + "'", str19, "Cardan angles singularity");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "Cardan angles singularity" + "'", str20, "Cardan angles singularity");
        org.junit.Assert.assertNotNull(objArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray24), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray24), "[]");
        org.junit.Assert.assertNotNull(throwableArray25);
        org.junit.Assert.assertNotNull(throwableArray26);
        org.junit.Assert.assertNotNull(throwableArray27);
        org.junit.Assert.assertNotNull(objArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray30), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray30), "[]");
        org.junit.Assert.assertNotNull(objArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray31), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray31), "[]");
        org.junit.Assert.assertNotNull(throwableArray39);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "Cardan angles singularity" + "'", str41, "Cardan angles singularity");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "Cardan angles singularity" + "'", str43, "Cardan angles singularity");
    }

    @Test
    public void test1576() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1576");
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException1 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray2 = cardanEulerSingularityException1.getArguments();
        java.lang.String str3 = cardanEulerSingularityException1.getPattern();
        java.lang.Object[] objArray4 = cardanEulerSingularityException1.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException6 = new org.apache.commons.math.geometry.CardanEulerSingularityException(true);
        java.lang.Object[] objArray7 = cardanEulerSingularityException6.getArguments();
        java.lang.Object[] objArray8 = cardanEulerSingularityException6.getArguments();
        cardanEulerSingularityException1.addSuppressed((java.lang.Throwable) cardanEulerSingularityException6);
        java.lang.String str10 = cardanEulerSingularityException1.getPattern();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException12 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray13 = cardanEulerSingularityException12.getArguments();
        java.lang.Object[] objArray14 = cardanEulerSingularityException12.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException16 = new org.apache.commons.math.geometry.CardanEulerSingularityException(true);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException18 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        cardanEulerSingularityException16.addSuppressed((java.lang.Throwable) cardanEulerSingularityException18);
        cardanEulerSingularityException12.addSuppressed((java.lang.Throwable) cardanEulerSingularityException16);
        java.lang.String str21 = cardanEulerSingularityException12.getPattern();
        cardanEulerSingularityException1.addSuppressed((java.lang.Throwable) cardanEulerSingularityException12);
        java.lang.Object[] objArray23 = cardanEulerSingularityException1.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException25 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.String str26 = cardanEulerSingularityException25.getPattern();
        java.lang.Object[] objArray27 = cardanEulerSingularityException25.getArguments();
        java.lang.String str28 = cardanEulerSingularityException25.getPattern();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException30 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.String str31 = cardanEulerSingularityException30.getPattern();
        java.lang.Throwable[] throwableArray32 = cardanEulerSingularityException30.getSuppressed();
        cardanEulerSingularityException25.addSuppressed((java.lang.Throwable) cardanEulerSingularityException30);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException35 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.String str36 = cardanEulerSingularityException35.getPattern();
        java.lang.Object[] objArray37 = cardanEulerSingularityException35.getArguments();
        java.lang.String str38 = cardanEulerSingularityException35.getPattern();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException40 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.String str41 = cardanEulerSingularityException40.getPattern();
        java.lang.Throwable[] throwableArray42 = cardanEulerSingularityException40.getSuppressed();
        cardanEulerSingularityException35.addSuppressed((java.lang.Throwable) cardanEulerSingularityException40);
        cardanEulerSingularityException25.addSuppressed((java.lang.Throwable) cardanEulerSingularityException35);
        java.lang.Object[] objArray45 = cardanEulerSingularityException35.getArguments();
        cardanEulerSingularityException1.addSuppressed((java.lang.Throwable) cardanEulerSingularityException35);
        java.lang.Throwable[] throwableArray47 = cardanEulerSingularityException1.getSuppressed();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException49 = new org.apache.commons.math.geometry.CardanEulerSingularityException(true);
        java.lang.String str50 = cardanEulerSingularityException49.getPattern();
        java.lang.String str51 = cardanEulerSingularityException49.getPattern();
        cardanEulerSingularityException1.addSuppressed((java.lang.Throwable) cardanEulerSingularityException49);
        java.lang.Object[] objArray53 = cardanEulerSingularityException49.getArguments();
        java.lang.String str54 = cardanEulerSingularityException49.getPattern();
        java.lang.String str55 = cardanEulerSingularityException49.toString();
        org.junit.Assert.assertNotNull(objArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray2), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray2), "[]");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Euler angles singularity" + "'", str3, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray4), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray4), "[]");
        org.junit.Assert.assertNotNull(objArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray7), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray7), "[]");
        org.junit.Assert.assertNotNull(objArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray8), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray8), "[]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Euler angles singularity" + "'", str10, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray13), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray13), "[]");
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "Euler angles singularity" + "'", str21, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray23), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray23), "[]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "Euler angles singularity" + "'", str26, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray27), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray27), "[]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "Euler angles singularity" + "'", str28, "Euler angles singularity");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "Euler angles singularity" + "'", str31, "Euler angles singularity");
        org.junit.Assert.assertNotNull(throwableArray32);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "Euler angles singularity" + "'", str36, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray37), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray37), "[]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "Euler angles singularity" + "'", str38, "Euler angles singularity");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "Euler angles singularity" + "'", str41, "Euler angles singularity");
        org.junit.Assert.assertNotNull(throwableArray42);
        org.junit.Assert.assertNotNull(objArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray45), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray45), "[]");
        org.junit.Assert.assertNotNull(throwableArray47);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "Cardan angles singularity" + "'", str50, "Cardan angles singularity");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "Cardan angles singularity" + "'", str51, "Cardan angles singularity");
        org.junit.Assert.assertNotNull(objArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray53), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray53), "[]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "Cardan angles singularity" + "'", str54, "Cardan angles singularity");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "org.apache.commons.math.geometry.CardanEulerSingularityException: Cardan angles singularity" + "'", str55, "org.apache.commons.math.geometry.CardanEulerSingularityException: Cardan angles singularity");
    }

    @Test
    public void test1577() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1577");
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException1 = new org.apache.commons.math.geometry.CardanEulerSingularityException(true);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException3 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        cardanEulerSingularityException1.addSuppressed((java.lang.Throwable) cardanEulerSingularityException3);
        java.lang.String str5 = cardanEulerSingularityException3.getPattern();
        java.lang.Throwable[] throwableArray6 = cardanEulerSingularityException3.getSuppressed();
        java.lang.String str7 = cardanEulerSingularityException3.getPattern();
        java.lang.Throwable[] throwableArray8 = cardanEulerSingularityException3.getSuppressed();
        java.lang.Throwable[] throwableArray9 = cardanEulerSingularityException3.getSuppressed();
        java.lang.String str10 = cardanEulerSingularityException3.getPattern();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException12 = new org.apache.commons.math.geometry.CardanEulerSingularityException(true);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException14 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        cardanEulerSingularityException12.addSuppressed((java.lang.Throwable) cardanEulerSingularityException14);
        java.lang.Throwable[] throwableArray16 = cardanEulerSingularityException12.getSuppressed();
        java.lang.Throwable[] throwableArray17 = cardanEulerSingularityException12.getSuppressed();
        java.lang.Throwable[] throwableArray18 = cardanEulerSingularityException12.getSuppressed();
        java.lang.String str19 = cardanEulerSingularityException12.getPattern();
        cardanEulerSingularityException3.addSuppressed((java.lang.Throwable) cardanEulerSingularityException12);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException22 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray23 = cardanEulerSingularityException22.getArguments();
        java.lang.String str24 = cardanEulerSingularityException22.getPattern();
        java.lang.Object[] objArray25 = cardanEulerSingularityException22.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException27 = new org.apache.commons.math.geometry.CardanEulerSingularityException(true);
        java.lang.Object[] objArray28 = cardanEulerSingularityException27.getArguments();
        java.lang.Object[] objArray29 = cardanEulerSingularityException27.getArguments();
        java.lang.String str30 = cardanEulerSingularityException27.getPattern();
        java.lang.String str31 = cardanEulerSingularityException27.getPattern();
        cardanEulerSingularityException22.addSuppressed((java.lang.Throwable) cardanEulerSingularityException27);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException34 = new org.apache.commons.math.geometry.CardanEulerSingularityException(true);
        java.lang.Object[] objArray35 = cardanEulerSingularityException34.getArguments();
        java.lang.Throwable[] throwableArray36 = cardanEulerSingularityException34.getSuppressed();
        java.lang.Throwable[] throwableArray37 = cardanEulerSingularityException34.getSuppressed();
        java.lang.Throwable[] throwableArray38 = cardanEulerSingularityException34.getSuppressed();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException40 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray41 = cardanEulerSingularityException40.getArguments();
        java.lang.Object[] objArray42 = cardanEulerSingularityException40.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException44 = new org.apache.commons.math.geometry.CardanEulerSingularityException(true);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException46 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        cardanEulerSingularityException44.addSuppressed((java.lang.Throwable) cardanEulerSingularityException46);
        cardanEulerSingularityException40.addSuppressed((java.lang.Throwable) cardanEulerSingularityException44);
        cardanEulerSingularityException34.addSuppressed((java.lang.Throwable) cardanEulerSingularityException40);
        java.lang.Throwable[] throwableArray50 = cardanEulerSingularityException34.getSuppressed();
        cardanEulerSingularityException27.addSuppressed((java.lang.Throwable) cardanEulerSingularityException34);
        java.lang.Throwable[] throwableArray52 = cardanEulerSingularityException34.getSuppressed();
        java.lang.Throwable[] throwableArray53 = cardanEulerSingularityException34.getSuppressed();
        cardanEulerSingularityException3.addSuppressed((java.lang.Throwable) cardanEulerSingularityException34);
        java.lang.String str55 = cardanEulerSingularityException34.toString();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Euler angles singularity" + "'", str5, "Euler angles singularity");
        org.junit.Assert.assertNotNull(throwableArray6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Euler angles singularity" + "'", str7, "Euler angles singularity");
        org.junit.Assert.assertNotNull(throwableArray8);
        org.junit.Assert.assertNotNull(throwableArray9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Euler angles singularity" + "'", str10, "Euler angles singularity");
        org.junit.Assert.assertNotNull(throwableArray16);
        org.junit.Assert.assertNotNull(throwableArray17);
        org.junit.Assert.assertNotNull(throwableArray18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "Cardan angles singularity" + "'", str19, "Cardan angles singularity");
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray23), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray23), "[]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "Euler angles singularity" + "'", str24, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray25), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray25), "[]");
        org.junit.Assert.assertNotNull(objArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray28), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray28), "[]");
        org.junit.Assert.assertNotNull(objArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray29), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray29), "[]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "Cardan angles singularity" + "'", str30, "Cardan angles singularity");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "Cardan angles singularity" + "'", str31, "Cardan angles singularity");
        org.junit.Assert.assertNotNull(objArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray35), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray35), "[]");
        org.junit.Assert.assertNotNull(throwableArray36);
        org.junit.Assert.assertNotNull(throwableArray37);
        org.junit.Assert.assertNotNull(throwableArray38);
        org.junit.Assert.assertNotNull(objArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray41), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray41), "[]");
        org.junit.Assert.assertNotNull(objArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray42), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray42), "[]");
        org.junit.Assert.assertNotNull(throwableArray50);
        org.junit.Assert.assertNotNull(throwableArray52);
        org.junit.Assert.assertNotNull(throwableArray53);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "org.apache.commons.math.geometry.CardanEulerSingularityException: Cardan angles singularity" + "'", str55, "org.apache.commons.math.geometry.CardanEulerSingularityException: Cardan angles singularity");
    }

    @Test
    public void test1578() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1578");
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException1 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray2 = cardanEulerSingularityException1.getArguments();
        java.lang.Object[] objArray3 = cardanEulerSingularityException1.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException5 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray6 = cardanEulerSingularityException5.getArguments();
        cardanEulerSingularityException1.addSuppressed((java.lang.Throwable) cardanEulerSingularityException5);
        java.lang.Object[] objArray8 = cardanEulerSingularityException5.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException10 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray11 = cardanEulerSingularityException10.getArguments();
        java.lang.Throwable[] throwableArray12 = cardanEulerSingularityException10.getSuppressed();
        java.lang.String str13 = cardanEulerSingularityException10.getPattern();
        cardanEulerSingularityException5.addSuppressed((java.lang.Throwable) cardanEulerSingularityException10);
        java.lang.Object[] objArray15 = cardanEulerSingularityException5.getArguments();
        java.lang.Throwable[] throwableArray16 = cardanEulerSingularityException5.getSuppressed();
        java.lang.String str17 = cardanEulerSingularityException5.getPattern();
        java.lang.Object[] objArray18 = cardanEulerSingularityException5.getArguments();
        org.junit.Assert.assertNotNull(objArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray2), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray2), "[]");
        org.junit.Assert.assertNotNull(objArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray3), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray3), "[]");
        org.junit.Assert.assertNotNull(objArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray6), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray6), "[]");
        org.junit.Assert.assertNotNull(objArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray8), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray8), "[]");
        org.junit.Assert.assertNotNull(objArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray11), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray11), "[]");
        org.junit.Assert.assertNotNull(throwableArray12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Euler angles singularity" + "'", str13, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray15), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray15), "[]");
        org.junit.Assert.assertNotNull(throwableArray16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "Euler angles singularity" + "'", str17, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray18), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray18), "[]");
    }

    @Test
    public void test1579() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1579");
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException1 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.String str2 = cardanEulerSingularityException1.getPattern();
        java.lang.Object[] objArray3 = cardanEulerSingularityException1.getArguments();
        java.lang.String str4 = cardanEulerSingularityException1.toString();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "Euler angles singularity" + "'", str2, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray3), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray3), "[]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "org.apache.commons.math.geometry.CardanEulerSingularityException: Euler angles singularity" + "'", str4, "org.apache.commons.math.geometry.CardanEulerSingularityException: Euler angles singularity");
    }

    @Test
    public void test1580() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1580");
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException1 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.String str2 = cardanEulerSingularityException1.getPattern();
        java.lang.Object[] objArray3 = cardanEulerSingularityException1.getArguments();
        java.lang.String str4 = cardanEulerSingularityException1.getPattern();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException6 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.String str7 = cardanEulerSingularityException6.getPattern();
        java.lang.Throwable[] throwableArray8 = cardanEulerSingularityException6.getSuppressed();
        cardanEulerSingularityException1.addSuppressed((java.lang.Throwable) cardanEulerSingularityException6);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException11 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.String str12 = cardanEulerSingularityException11.getPattern();
        java.lang.Object[] objArray13 = cardanEulerSingularityException11.getArguments();
        java.lang.String str14 = cardanEulerSingularityException11.getPattern();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException16 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.String str17 = cardanEulerSingularityException16.getPattern();
        java.lang.Throwable[] throwableArray18 = cardanEulerSingularityException16.getSuppressed();
        cardanEulerSingularityException11.addSuppressed((java.lang.Throwable) cardanEulerSingularityException16);
        cardanEulerSingularityException1.addSuppressed((java.lang.Throwable) cardanEulerSingularityException11);
        java.lang.String str21 = cardanEulerSingularityException1.getPattern();
        java.lang.String str22 = cardanEulerSingularityException1.getPattern();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException24 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray25 = cardanEulerSingularityException24.getArguments();
        java.lang.String str26 = cardanEulerSingularityException24.getPattern();
        java.lang.Object[] objArray27 = cardanEulerSingularityException24.getArguments();
        java.lang.Object[] objArray28 = cardanEulerSingularityException24.getArguments();
        java.lang.String str29 = cardanEulerSingularityException24.getPattern();
        cardanEulerSingularityException1.addSuppressed((java.lang.Throwable) cardanEulerSingularityException24);
        java.lang.Throwable[] throwableArray31 = cardanEulerSingularityException1.getSuppressed();
        java.lang.Throwable[] throwableArray32 = cardanEulerSingularityException1.getSuppressed();
        java.lang.String str33 = cardanEulerSingularityException1.getPattern();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "Euler angles singularity" + "'", str2, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray3), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray3), "[]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Euler angles singularity" + "'", str4, "Euler angles singularity");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Euler angles singularity" + "'", str7, "Euler angles singularity");
        org.junit.Assert.assertNotNull(throwableArray8);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Euler angles singularity" + "'", str12, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray13), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray13), "[]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "Euler angles singularity" + "'", str14, "Euler angles singularity");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "Euler angles singularity" + "'", str17, "Euler angles singularity");
        org.junit.Assert.assertNotNull(throwableArray18);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "Euler angles singularity" + "'", str21, "Euler angles singularity");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "Euler angles singularity" + "'", str22, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray25), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray25), "[]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "Euler angles singularity" + "'", str26, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray27), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray27), "[]");
        org.junit.Assert.assertNotNull(objArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray28), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray28), "[]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "Euler angles singularity" + "'", str29, "Euler angles singularity");
        org.junit.Assert.assertNotNull(throwableArray31);
        org.junit.Assert.assertNotNull(throwableArray32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "Euler angles singularity" + "'", str33, "Euler angles singularity");
    }

    @Test
    public void test1581() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1581");
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException1 = new org.apache.commons.math.geometry.CardanEulerSingularityException(true);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException3 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        cardanEulerSingularityException1.addSuppressed((java.lang.Throwable) cardanEulerSingularityException3);
        java.lang.String str5 = cardanEulerSingularityException3.getPattern();
        java.lang.Object[] objArray6 = cardanEulerSingularityException3.getArguments();
        java.lang.Object[] objArray7 = cardanEulerSingularityException3.getArguments();
        java.lang.Throwable[] throwableArray8 = cardanEulerSingularityException3.getSuppressed();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException10 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray11 = cardanEulerSingularityException10.getArguments();
        java.lang.String str12 = cardanEulerSingularityException10.getPattern();
        java.lang.Object[] objArray13 = cardanEulerSingularityException10.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException15 = new org.apache.commons.math.geometry.CardanEulerSingularityException(true);
        java.lang.Object[] objArray16 = cardanEulerSingularityException15.getArguments();
        java.lang.Object[] objArray17 = cardanEulerSingularityException15.getArguments();
        java.lang.String str18 = cardanEulerSingularityException15.getPattern();
        java.lang.String str19 = cardanEulerSingularityException15.getPattern();
        cardanEulerSingularityException10.addSuppressed((java.lang.Throwable) cardanEulerSingularityException15);
        java.lang.Object[] objArray21 = cardanEulerSingularityException10.getArguments();
        cardanEulerSingularityException3.addSuppressed((java.lang.Throwable) cardanEulerSingularityException10);
        java.lang.Object[] objArray23 = cardanEulerSingularityException10.getArguments();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Euler angles singularity" + "'", str5, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray6), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray6), "[]");
        org.junit.Assert.assertNotNull(objArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray7), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray7), "[]");
        org.junit.Assert.assertNotNull(throwableArray8);
        org.junit.Assert.assertNotNull(objArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray11), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray11), "[]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Euler angles singularity" + "'", str12, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray13), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray13), "[]");
        org.junit.Assert.assertNotNull(objArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray16), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray16), "[]");
        org.junit.Assert.assertNotNull(objArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray17), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray17), "[]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "Cardan angles singularity" + "'", str18, "Cardan angles singularity");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "Cardan angles singularity" + "'", str19, "Cardan angles singularity");
        org.junit.Assert.assertNotNull(objArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray21), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray21), "[]");
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray23), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray23), "[]");
    }

    @Test
    public void test1582() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1582");
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException1 = new org.apache.commons.math.geometry.CardanEulerSingularityException(true);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException3 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        cardanEulerSingularityException1.addSuppressed((java.lang.Throwable) cardanEulerSingularityException3);
        java.lang.String str5 = cardanEulerSingularityException3.getPattern();
        java.lang.Object[] objArray6 = cardanEulerSingularityException3.getArguments();
        java.lang.Object[] objArray7 = cardanEulerSingularityException3.getArguments();
        java.lang.Throwable[] throwableArray8 = cardanEulerSingularityException3.getSuppressed();
        java.lang.Object[] objArray9 = cardanEulerSingularityException3.getArguments();
        java.lang.Throwable[] throwableArray10 = cardanEulerSingularityException3.getSuppressed();
        java.lang.String str11 = cardanEulerSingularityException3.toString();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Euler angles singularity" + "'", str5, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray6), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray6), "[]");
        org.junit.Assert.assertNotNull(objArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray7), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray7), "[]");
        org.junit.Assert.assertNotNull(throwableArray8);
        org.junit.Assert.assertNotNull(objArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray9), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray9), "[]");
        org.junit.Assert.assertNotNull(throwableArray10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "org.apache.commons.math.geometry.CardanEulerSingularityException: Euler angles singularity" + "'", str11, "org.apache.commons.math.geometry.CardanEulerSingularityException: Euler angles singularity");
    }

    @Test
    public void test1583() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1583");
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException1 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.String str2 = cardanEulerSingularityException1.getPattern();
        java.lang.Object[] objArray3 = cardanEulerSingularityException1.getArguments();
        java.lang.String str4 = cardanEulerSingularityException1.getPattern();
        java.lang.String str5 = cardanEulerSingularityException1.getPattern();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException7 = new org.apache.commons.math.geometry.CardanEulerSingularityException(true);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException9 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        cardanEulerSingularityException7.addSuppressed((java.lang.Throwable) cardanEulerSingularityException9);
        java.lang.Throwable[] throwableArray11 = cardanEulerSingularityException7.getSuppressed();
        java.lang.Throwable[] throwableArray12 = cardanEulerSingularityException7.getSuppressed();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException14 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.String str15 = cardanEulerSingularityException14.getPattern();
        java.lang.Object[] objArray16 = cardanEulerSingularityException14.getArguments();
        java.lang.String str17 = cardanEulerSingularityException14.getPattern();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException19 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.String str20 = cardanEulerSingularityException19.getPattern();
        java.lang.Throwable[] throwableArray21 = cardanEulerSingularityException19.getSuppressed();
        cardanEulerSingularityException14.addSuppressed((java.lang.Throwable) cardanEulerSingularityException19);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException24 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.String str25 = cardanEulerSingularityException24.getPattern();
        java.lang.Object[] objArray26 = cardanEulerSingularityException24.getArguments();
        java.lang.String str27 = cardanEulerSingularityException24.getPattern();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException29 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.String str30 = cardanEulerSingularityException29.getPattern();
        java.lang.Throwable[] throwableArray31 = cardanEulerSingularityException29.getSuppressed();
        cardanEulerSingularityException24.addSuppressed((java.lang.Throwable) cardanEulerSingularityException29);
        cardanEulerSingularityException14.addSuppressed((java.lang.Throwable) cardanEulerSingularityException24);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException35 = new org.apache.commons.math.geometry.CardanEulerSingularityException(true);
        cardanEulerSingularityException14.addSuppressed((java.lang.Throwable) cardanEulerSingularityException35);
        cardanEulerSingularityException7.addSuppressed((java.lang.Throwable) cardanEulerSingularityException14);
        java.lang.Throwable[] throwableArray38 = cardanEulerSingularityException14.getSuppressed();
        java.lang.Object[] objArray39 = cardanEulerSingularityException14.getArguments();
        cardanEulerSingularityException1.addSuppressed((java.lang.Throwable) cardanEulerSingularityException14);
        java.lang.String str41 = cardanEulerSingularityException1.getPattern();
        java.lang.String str42 = cardanEulerSingularityException1.getPattern();
        java.lang.String str43 = cardanEulerSingularityException1.toString();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "Euler angles singularity" + "'", str2, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray3), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray3), "[]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Euler angles singularity" + "'", str4, "Euler angles singularity");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Euler angles singularity" + "'", str5, "Euler angles singularity");
        org.junit.Assert.assertNotNull(throwableArray11);
        org.junit.Assert.assertNotNull(throwableArray12);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Euler angles singularity" + "'", str15, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray16), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray16), "[]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "Euler angles singularity" + "'", str17, "Euler angles singularity");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "Euler angles singularity" + "'", str20, "Euler angles singularity");
        org.junit.Assert.assertNotNull(throwableArray21);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "Euler angles singularity" + "'", str25, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray26), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray26), "[]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "Euler angles singularity" + "'", str27, "Euler angles singularity");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "Euler angles singularity" + "'", str30, "Euler angles singularity");
        org.junit.Assert.assertNotNull(throwableArray31);
        org.junit.Assert.assertNotNull(throwableArray38);
        org.junit.Assert.assertNotNull(objArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray39), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray39), "[]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "Euler angles singularity" + "'", str41, "Euler angles singularity");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "Euler angles singularity" + "'", str42, "Euler angles singularity");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "org.apache.commons.math.geometry.CardanEulerSingularityException: Euler angles singularity" + "'", str43, "org.apache.commons.math.geometry.CardanEulerSingularityException: Euler angles singularity");
    }

    @Test
    public void test1584() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1584");
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException1 = new org.apache.commons.math.geometry.CardanEulerSingularityException(true);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException3 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        cardanEulerSingularityException1.addSuppressed((java.lang.Throwable) cardanEulerSingularityException3);
        java.lang.Throwable[] throwableArray5 = cardanEulerSingularityException1.getSuppressed();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException7 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray8 = cardanEulerSingularityException7.getArguments();
        java.lang.Throwable[] throwableArray9 = cardanEulerSingularityException7.getSuppressed();
        java.lang.Object[] objArray10 = cardanEulerSingularityException7.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException12 = new org.apache.commons.math.geometry.CardanEulerSingularityException(true);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException14 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        cardanEulerSingularityException12.addSuppressed((java.lang.Throwable) cardanEulerSingularityException14);
        java.lang.String str16 = cardanEulerSingularityException14.getPattern();
        java.lang.Throwable[] throwableArray17 = cardanEulerSingularityException14.getSuppressed();
        java.lang.String str18 = cardanEulerSingularityException14.getPattern();
        java.lang.Throwable[] throwableArray19 = cardanEulerSingularityException14.getSuppressed();
        java.lang.String str20 = cardanEulerSingularityException14.getPattern();
        cardanEulerSingularityException7.addSuppressed((java.lang.Throwable) cardanEulerSingularityException14);
        cardanEulerSingularityException1.addSuppressed((java.lang.Throwable) cardanEulerSingularityException14);
        java.lang.String str23 = cardanEulerSingularityException14.getPattern();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException25 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray26 = cardanEulerSingularityException25.getArguments();
        java.lang.String str27 = cardanEulerSingularityException25.getPattern();
        java.lang.Object[] objArray28 = cardanEulerSingularityException25.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException30 = new org.apache.commons.math.geometry.CardanEulerSingularityException(true);
        java.lang.Object[] objArray31 = cardanEulerSingularityException30.getArguments();
        java.lang.Object[] objArray32 = cardanEulerSingularityException30.getArguments();
        java.lang.String str33 = cardanEulerSingularityException30.getPattern();
        java.lang.String str34 = cardanEulerSingularityException30.getPattern();
        cardanEulerSingularityException25.addSuppressed((java.lang.Throwable) cardanEulerSingularityException30);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException37 = new org.apache.commons.math.geometry.CardanEulerSingularityException(true);
        java.lang.Object[] objArray38 = cardanEulerSingularityException37.getArguments();
        java.lang.Throwable[] throwableArray39 = cardanEulerSingularityException37.getSuppressed();
        java.lang.Throwable[] throwableArray40 = cardanEulerSingularityException37.getSuppressed();
        java.lang.Throwable[] throwableArray41 = cardanEulerSingularityException37.getSuppressed();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException43 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray44 = cardanEulerSingularityException43.getArguments();
        java.lang.Object[] objArray45 = cardanEulerSingularityException43.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException47 = new org.apache.commons.math.geometry.CardanEulerSingularityException(true);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException49 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        cardanEulerSingularityException47.addSuppressed((java.lang.Throwable) cardanEulerSingularityException49);
        cardanEulerSingularityException43.addSuppressed((java.lang.Throwable) cardanEulerSingularityException47);
        cardanEulerSingularityException37.addSuppressed((java.lang.Throwable) cardanEulerSingularityException43);
        java.lang.Throwable[] throwableArray53 = cardanEulerSingularityException37.getSuppressed();
        cardanEulerSingularityException30.addSuppressed((java.lang.Throwable) cardanEulerSingularityException37);
        java.lang.String str55 = cardanEulerSingularityException37.getPattern();
        cardanEulerSingularityException14.addSuppressed((java.lang.Throwable) cardanEulerSingularityException37);
        java.lang.String str57 = cardanEulerSingularityException14.getPattern();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException59 = new org.apache.commons.math.geometry.CardanEulerSingularityException(true);
        java.lang.Object[] objArray60 = cardanEulerSingularityException59.getArguments();
        java.lang.Throwable[] throwableArray61 = cardanEulerSingularityException59.getSuppressed();
        java.lang.String str62 = cardanEulerSingularityException59.getPattern();
        java.lang.Object[] objArray63 = cardanEulerSingularityException59.getArguments();
        java.lang.Throwable[] throwableArray64 = cardanEulerSingularityException59.getSuppressed();
        java.lang.Object[] objArray65 = cardanEulerSingularityException59.getArguments();
        cardanEulerSingularityException14.addSuppressed((java.lang.Throwable) cardanEulerSingularityException59);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException68 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray69 = cardanEulerSingularityException68.getArguments();
        java.lang.Object[] objArray70 = cardanEulerSingularityException68.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException72 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray73 = cardanEulerSingularityException72.getArguments();
        cardanEulerSingularityException68.addSuppressed((java.lang.Throwable) cardanEulerSingularityException72);
        java.lang.String str75 = cardanEulerSingularityException68.getPattern();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException77 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray78 = cardanEulerSingularityException77.getArguments();
        java.lang.String str79 = cardanEulerSingularityException77.getPattern();
        cardanEulerSingularityException68.addSuppressed((java.lang.Throwable) cardanEulerSingularityException77);
        java.lang.Throwable[] throwableArray81 = cardanEulerSingularityException77.getSuppressed();
        java.lang.Object[] objArray82 = cardanEulerSingularityException77.getArguments();
        cardanEulerSingularityException59.addSuppressed((java.lang.Throwable) cardanEulerSingularityException77);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException85 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray86 = cardanEulerSingularityException85.getArguments();
        java.lang.String str87 = cardanEulerSingularityException85.getPattern();
        java.lang.Object[] objArray88 = cardanEulerSingularityException85.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException90 = new org.apache.commons.math.geometry.CardanEulerSingularityException(true);
        java.lang.Object[] objArray91 = cardanEulerSingularityException90.getArguments();
        java.lang.Object[] objArray92 = cardanEulerSingularityException90.getArguments();
        cardanEulerSingularityException85.addSuppressed((java.lang.Throwable) cardanEulerSingularityException90);
        cardanEulerSingularityException59.addSuppressed((java.lang.Throwable) cardanEulerSingularityException85);
        java.lang.Object[] objArray95 = cardanEulerSingularityException59.getArguments();
        java.lang.Throwable[] throwableArray96 = cardanEulerSingularityException59.getSuppressed();
        java.lang.Object[] objArray97 = cardanEulerSingularityException59.getArguments();
        org.junit.Assert.assertNotNull(throwableArray5);
        org.junit.Assert.assertNotNull(objArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray8), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray8), "[]");
        org.junit.Assert.assertNotNull(throwableArray9);
        org.junit.Assert.assertNotNull(objArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray10), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray10), "[]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "Euler angles singularity" + "'", str16, "Euler angles singularity");
        org.junit.Assert.assertNotNull(throwableArray17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "Euler angles singularity" + "'", str18, "Euler angles singularity");
        org.junit.Assert.assertNotNull(throwableArray19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "Euler angles singularity" + "'", str20, "Euler angles singularity");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "Euler angles singularity" + "'", str23, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray26), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray26), "[]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "Euler angles singularity" + "'", str27, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray28), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray28), "[]");
        org.junit.Assert.assertNotNull(objArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray31), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray31), "[]");
        org.junit.Assert.assertNotNull(objArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray32), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray32), "[]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "Cardan angles singularity" + "'", str33, "Cardan angles singularity");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "Cardan angles singularity" + "'", str34, "Cardan angles singularity");
        org.junit.Assert.assertNotNull(objArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray38), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray38), "[]");
        org.junit.Assert.assertNotNull(throwableArray39);
        org.junit.Assert.assertNotNull(throwableArray40);
        org.junit.Assert.assertNotNull(throwableArray41);
        org.junit.Assert.assertNotNull(objArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray44), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray44), "[]");
        org.junit.Assert.assertNotNull(objArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray45), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray45), "[]");
        org.junit.Assert.assertNotNull(throwableArray53);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "Cardan angles singularity" + "'", str55, "Cardan angles singularity");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "Euler angles singularity" + "'", str57, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray60), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray60), "[]");
        org.junit.Assert.assertNotNull(throwableArray61);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "Cardan angles singularity" + "'", str62, "Cardan angles singularity");
        org.junit.Assert.assertNotNull(objArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray63), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray63), "[]");
        org.junit.Assert.assertNotNull(throwableArray64);
        org.junit.Assert.assertNotNull(objArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray65), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray65), "[]");
        org.junit.Assert.assertNotNull(objArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray69), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray69), "[]");
        org.junit.Assert.assertNotNull(objArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray70), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray70), "[]");
        org.junit.Assert.assertNotNull(objArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray73), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray73), "[]");
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "Euler angles singularity" + "'", str75, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray78), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray78), "[]");
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "Euler angles singularity" + "'", str79, "Euler angles singularity");
        org.junit.Assert.assertNotNull(throwableArray81);
        org.junit.Assert.assertNotNull(objArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray82), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray82), "[]");
        org.junit.Assert.assertNotNull(objArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray86), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray86), "[]");
        org.junit.Assert.assertEquals("'" + str87 + "' != '" + "Euler angles singularity" + "'", str87, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray88), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray88), "[]");
        org.junit.Assert.assertNotNull(objArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray91), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray91), "[]");
        org.junit.Assert.assertNotNull(objArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray92), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray92), "[]");
        org.junit.Assert.assertNotNull(objArray95);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray95), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray95), "[]");
        org.junit.Assert.assertNotNull(throwableArray96);
        org.junit.Assert.assertNotNull(objArray97);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray97), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray97), "[]");
    }

    @Test
    public void test1585() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1585");
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException1 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.String str2 = cardanEulerSingularityException1.getPattern();
        java.lang.Object[] objArray3 = cardanEulerSingularityException1.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException5 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.String str6 = cardanEulerSingularityException5.getPattern();
        java.lang.Throwable[] throwableArray7 = cardanEulerSingularityException5.getSuppressed();
        cardanEulerSingularityException1.addSuppressed((java.lang.Throwable) cardanEulerSingularityException5);
        java.lang.Throwable[] throwableArray9 = cardanEulerSingularityException1.getSuppressed();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "Euler angles singularity" + "'", str2, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray3), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray3), "[]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "Euler angles singularity" + "'", str6, "Euler angles singularity");
        org.junit.Assert.assertNotNull(throwableArray7);
        org.junit.Assert.assertNotNull(throwableArray9);
    }

    @Test
    public void test1586() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1586");
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException1 = new org.apache.commons.math.geometry.CardanEulerSingularityException(true);
        java.lang.Object[] objArray2 = cardanEulerSingularityException1.getArguments();
        java.lang.Object[] objArray3 = cardanEulerSingularityException1.getArguments();
        java.lang.String str4 = cardanEulerSingularityException1.getPattern();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException6 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray7 = cardanEulerSingularityException6.getArguments();
        java.lang.Object[] objArray8 = cardanEulerSingularityException6.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException10 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray11 = cardanEulerSingularityException10.getArguments();
        cardanEulerSingularityException6.addSuppressed((java.lang.Throwable) cardanEulerSingularityException10);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException14 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray15 = cardanEulerSingularityException14.getArguments();
        java.lang.Object[] objArray16 = cardanEulerSingularityException14.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException18 = new org.apache.commons.math.geometry.CardanEulerSingularityException(true);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException20 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        cardanEulerSingularityException18.addSuppressed((java.lang.Throwable) cardanEulerSingularityException20);
        cardanEulerSingularityException14.addSuppressed((java.lang.Throwable) cardanEulerSingularityException18);
        java.lang.Throwable[] throwableArray23 = cardanEulerSingularityException14.getSuppressed();
        cardanEulerSingularityException10.addSuppressed((java.lang.Throwable) cardanEulerSingularityException14);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException26 = new org.apache.commons.math.geometry.CardanEulerSingularityException(true);
        java.lang.Object[] objArray27 = cardanEulerSingularityException26.getArguments();
        java.lang.Object[] objArray28 = cardanEulerSingularityException26.getArguments();
        cardanEulerSingularityException14.addSuppressed((java.lang.Throwable) cardanEulerSingularityException26);
        cardanEulerSingularityException1.addSuppressed((java.lang.Throwable) cardanEulerSingularityException14);
        java.lang.String str31 = cardanEulerSingularityException1.getPattern();
        java.lang.Throwable[] throwableArray32 = cardanEulerSingularityException1.getSuppressed();
        java.lang.Class<?> wildcardClass33 = throwableArray32.getClass();
        org.junit.Assert.assertNotNull(objArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray2), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray2), "[]");
        org.junit.Assert.assertNotNull(objArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray3), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray3), "[]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Cardan angles singularity" + "'", str4, "Cardan angles singularity");
        org.junit.Assert.assertNotNull(objArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray7), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray7), "[]");
        org.junit.Assert.assertNotNull(objArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray8), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray8), "[]");
        org.junit.Assert.assertNotNull(objArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray11), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray11), "[]");
        org.junit.Assert.assertNotNull(objArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray15), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray15), "[]");
        org.junit.Assert.assertNotNull(objArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray16), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray16), "[]");
        org.junit.Assert.assertNotNull(throwableArray23);
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray27), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray27), "[]");
        org.junit.Assert.assertNotNull(objArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray28), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray28), "[]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "Cardan angles singularity" + "'", str31, "Cardan angles singularity");
        org.junit.Assert.assertNotNull(throwableArray32);
        org.junit.Assert.assertNotNull(wildcardClass33);
    }

    @Test
    public void test1587() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1587");
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException1 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray2 = cardanEulerSingularityException1.getArguments();
        java.lang.Object[] objArray3 = cardanEulerSingularityException1.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException5 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray6 = cardanEulerSingularityException5.getArguments();
        cardanEulerSingularityException1.addSuppressed((java.lang.Throwable) cardanEulerSingularityException5);
        java.lang.Object[] objArray8 = cardanEulerSingularityException5.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException10 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray11 = cardanEulerSingularityException10.getArguments();
        java.lang.Throwable[] throwableArray12 = cardanEulerSingularityException10.getSuppressed();
        java.lang.String str13 = cardanEulerSingularityException10.getPattern();
        cardanEulerSingularityException5.addSuppressed((java.lang.Throwable) cardanEulerSingularityException10);
        java.lang.Object[] objArray15 = cardanEulerSingularityException5.getArguments();
        java.lang.Throwable[] throwableArray16 = cardanEulerSingularityException5.getSuppressed();
        java.lang.Object[] objArray17 = cardanEulerSingularityException5.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException19 = new org.apache.commons.math.geometry.CardanEulerSingularityException(true);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException21 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        cardanEulerSingularityException19.addSuppressed((java.lang.Throwable) cardanEulerSingularityException21);
        java.lang.Throwable[] throwableArray23 = cardanEulerSingularityException19.getSuppressed();
        cardanEulerSingularityException5.addSuppressed((java.lang.Throwable) cardanEulerSingularityException19);
        java.lang.String str25 = cardanEulerSingularityException5.getPattern();
        java.lang.Throwable[] throwableArray26 = cardanEulerSingularityException5.getSuppressed();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException28 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray29 = cardanEulerSingularityException28.getArguments();
        java.lang.Object[] objArray30 = cardanEulerSingularityException28.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException32 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray33 = cardanEulerSingularityException32.getArguments();
        cardanEulerSingularityException28.addSuppressed((java.lang.Throwable) cardanEulerSingularityException32);
        java.lang.Throwable[] throwableArray35 = cardanEulerSingularityException28.getSuppressed();
        java.lang.String str36 = cardanEulerSingularityException28.getPattern();
        java.lang.String str37 = cardanEulerSingularityException28.getPattern();
        java.lang.Throwable[] throwableArray38 = cardanEulerSingularityException28.getSuppressed();
        cardanEulerSingularityException5.addSuppressed((java.lang.Throwable) cardanEulerSingularityException28);
        java.lang.String str40 = cardanEulerSingularityException5.getPattern();
        org.junit.Assert.assertNotNull(objArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray2), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray2), "[]");
        org.junit.Assert.assertNotNull(objArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray3), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray3), "[]");
        org.junit.Assert.assertNotNull(objArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray6), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray6), "[]");
        org.junit.Assert.assertNotNull(objArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray8), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray8), "[]");
        org.junit.Assert.assertNotNull(objArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray11), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray11), "[]");
        org.junit.Assert.assertNotNull(throwableArray12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Euler angles singularity" + "'", str13, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray15), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray15), "[]");
        org.junit.Assert.assertNotNull(throwableArray16);
        org.junit.Assert.assertNotNull(objArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray17), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray17), "[]");
        org.junit.Assert.assertNotNull(throwableArray23);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "Euler angles singularity" + "'", str25, "Euler angles singularity");
        org.junit.Assert.assertNotNull(throwableArray26);
        org.junit.Assert.assertNotNull(objArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray29), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray29), "[]");
        org.junit.Assert.assertNotNull(objArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray30), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray30), "[]");
        org.junit.Assert.assertNotNull(objArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray33), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray33), "[]");
        org.junit.Assert.assertNotNull(throwableArray35);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "Euler angles singularity" + "'", str36, "Euler angles singularity");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "Euler angles singularity" + "'", str37, "Euler angles singularity");
        org.junit.Assert.assertNotNull(throwableArray38);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "Euler angles singularity" + "'", str40, "Euler angles singularity");
    }

    @Test
    public void test1588() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1588");
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException1 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray2 = cardanEulerSingularityException1.getArguments();
        java.lang.Object[] objArray3 = cardanEulerSingularityException1.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException5 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray6 = cardanEulerSingularityException5.getArguments();
        cardanEulerSingularityException1.addSuppressed((java.lang.Throwable) cardanEulerSingularityException5);
        java.lang.Object[] objArray8 = cardanEulerSingularityException5.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException10 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray11 = cardanEulerSingularityException10.getArguments();
        java.lang.Throwable[] throwableArray12 = cardanEulerSingularityException10.getSuppressed();
        java.lang.String str13 = cardanEulerSingularityException10.getPattern();
        cardanEulerSingularityException5.addSuppressed((java.lang.Throwable) cardanEulerSingularityException10);
        java.lang.Object[] objArray15 = cardanEulerSingularityException5.getArguments();
        java.lang.String str16 = cardanEulerSingularityException5.getPattern();
        java.lang.String str17 = cardanEulerSingularityException5.getPattern();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException19 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.String str20 = cardanEulerSingularityException19.getPattern();
        java.lang.Object[] objArray21 = cardanEulerSingularityException19.getArguments();
        java.lang.String str22 = cardanEulerSingularityException19.getPattern();
        java.lang.String str23 = cardanEulerSingularityException19.getPattern();
        java.lang.Object[] objArray24 = cardanEulerSingularityException19.getArguments();
        cardanEulerSingularityException5.addSuppressed((java.lang.Throwable) cardanEulerSingularityException19);
        java.lang.Object[] objArray26 = cardanEulerSingularityException19.getArguments();
        java.lang.String str27 = cardanEulerSingularityException19.toString();
        org.junit.Assert.assertNotNull(objArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray2), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray2), "[]");
        org.junit.Assert.assertNotNull(objArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray3), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray3), "[]");
        org.junit.Assert.assertNotNull(objArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray6), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray6), "[]");
        org.junit.Assert.assertNotNull(objArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray8), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray8), "[]");
        org.junit.Assert.assertNotNull(objArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray11), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray11), "[]");
        org.junit.Assert.assertNotNull(throwableArray12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Euler angles singularity" + "'", str13, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray15), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray15), "[]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "Euler angles singularity" + "'", str16, "Euler angles singularity");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "Euler angles singularity" + "'", str17, "Euler angles singularity");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "Euler angles singularity" + "'", str20, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray21), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray21), "[]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "Euler angles singularity" + "'", str22, "Euler angles singularity");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "Euler angles singularity" + "'", str23, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray24), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray24), "[]");
        org.junit.Assert.assertNotNull(objArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray26), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray26), "[]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "org.apache.commons.math.geometry.CardanEulerSingularityException: Euler angles singularity" + "'", str27, "org.apache.commons.math.geometry.CardanEulerSingularityException: Euler angles singularity");
    }

    @Test
    public void test1589() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1589");
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException1 = new org.apache.commons.math.geometry.CardanEulerSingularityException(true);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException3 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        cardanEulerSingularityException1.addSuppressed((java.lang.Throwable) cardanEulerSingularityException3);
        java.lang.String str5 = cardanEulerSingularityException3.getPattern();
        java.lang.Throwable[] throwableArray6 = cardanEulerSingularityException3.getSuppressed();
        java.lang.String str7 = cardanEulerSingularityException3.getPattern();
        java.lang.Throwable[] throwableArray8 = cardanEulerSingularityException3.getSuppressed();
        java.lang.Throwable[] throwableArray9 = cardanEulerSingularityException3.getSuppressed();
        java.lang.Object[] objArray10 = cardanEulerSingularityException3.getArguments();
        java.lang.Throwable[] throwableArray11 = cardanEulerSingularityException3.getSuppressed();
        java.lang.String str12 = cardanEulerSingularityException3.getPattern();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Euler angles singularity" + "'", str5, "Euler angles singularity");
        org.junit.Assert.assertNotNull(throwableArray6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Euler angles singularity" + "'", str7, "Euler angles singularity");
        org.junit.Assert.assertNotNull(throwableArray8);
        org.junit.Assert.assertNotNull(throwableArray9);
        org.junit.Assert.assertNotNull(objArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray10), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray10), "[]");
        org.junit.Assert.assertNotNull(throwableArray11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Euler angles singularity" + "'", str12, "Euler angles singularity");
    }

    @Test
    public void test1590() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1590");
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException1 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray2 = cardanEulerSingularityException1.getArguments();
        java.lang.Object[] objArray3 = cardanEulerSingularityException1.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException5 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray6 = cardanEulerSingularityException5.getArguments();
        cardanEulerSingularityException1.addSuppressed((java.lang.Throwable) cardanEulerSingularityException5);
        java.lang.Object[] objArray8 = cardanEulerSingularityException5.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException10 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray11 = cardanEulerSingularityException10.getArguments();
        java.lang.Throwable[] throwableArray12 = cardanEulerSingularityException10.getSuppressed();
        java.lang.String str13 = cardanEulerSingularityException10.getPattern();
        cardanEulerSingularityException5.addSuppressed((java.lang.Throwable) cardanEulerSingularityException10);
        java.lang.Object[] objArray15 = cardanEulerSingularityException5.getArguments();
        java.lang.Throwable[] throwableArray16 = cardanEulerSingularityException5.getSuppressed();
        java.lang.Object[] objArray17 = cardanEulerSingularityException5.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException19 = new org.apache.commons.math.geometry.CardanEulerSingularityException(true);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException21 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        cardanEulerSingularityException19.addSuppressed((java.lang.Throwable) cardanEulerSingularityException21);
        java.lang.Throwable[] throwableArray23 = cardanEulerSingularityException19.getSuppressed();
        cardanEulerSingularityException5.addSuppressed((java.lang.Throwable) cardanEulerSingularityException19);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException26 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray27 = cardanEulerSingularityException26.getArguments();
        java.lang.Object[] objArray28 = cardanEulerSingularityException26.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException30 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray31 = cardanEulerSingularityException30.getArguments();
        cardanEulerSingularityException26.addSuppressed((java.lang.Throwable) cardanEulerSingularityException30);
        java.lang.Throwable[] throwableArray33 = cardanEulerSingularityException30.getSuppressed();
        java.lang.Object[] objArray34 = cardanEulerSingularityException30.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException36 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray37 = cardanEulerSingularityException36.getArguments();
        java.lang.Object[] objArray38 = cardanEulerSingularityException36.getArguments();
        java.lang.Object[] objArray39 = cardanEulerSingularityException36.getArguments();
        cardanEulerSingularityException30.addSuppressed((java.lang.Throwable) cardanEulerSingularityException36);
        cardanEulerSingularityException19.addSuppressed((java.lang.Throwable) cardanEulerSingularityException36);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException43 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.String str44 = cardanEulerSingularityException43.getPattern();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException46 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.String str47 = cardanEulerSingularityException46.getPattern();
        java.lang.Throwable[] throwableArray48 = cardanEulerSingularityException46.getSuppressed();
        cardanEulerSingularityException43.addSuppressed((java.lang.Throwable) cardanEulerSingularityException46);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException51 = new org.apache.commons.math.geometry.CardanEulerSingularityException(true);
        java.lang.String str52 = cardanEulerSingularityException51.getPattern();
        cardanEulerSingularityException43.addSuppressed((java.lang.Throwable) cardanEulerSingularityException51);
        java.lang.String str54 = cardanEulerSingularityException43.getPattern();
        cardanEulerSingularityException19.addSuppressed((java.lang.Throwable) cardanEulerSingularityException43);
        java.lang.String str56 = cardanEulerSingularityException19.getPattern();
        java.lang.String str57 = cardanEulerSingularityException19.getPattern();
        java.lang.Class<?> wildcardClass58 = cardanEulerSingularityException19.getClass();
        org.junit.Assert.assertNotNull(objArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray2), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray2), "[]");
        org.junit.Assert.assertNotNull(objArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray3), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray3), "[]");
        org.junit.Assert.assertNotNull(objArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray6), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray6), "[]");
        org.junit.Assert.assertNotNull(objArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray8), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray8), "[]");
        org.junit.Assert.assertNotNull(objArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray11), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray11), "[]");
        org.junit.Assert.assertNotNull(throwableArray12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Euler angles singularity" + "'", str13, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray15), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray15), "[]");
        org.junit.Assert.assertNotNull(throwableArray16);
        org.junit.Assert.assertNotNull(objArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray17), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray17), "[]");
        org.junit.Assert.assertNotNull(throwableArray23);
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray27), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray27), "[]");
        org.junit.Assert.assertNotNull(objArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray28), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray28), "[]");
        org.junit.Assert.assertNotNull(objArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray31), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray31), "[]");
        org.junit.Assert.assertNotNull(throwableArray33);
        org.junit.Assert.assertNotNull(objArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray34), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray34), "[]");
        org.junit.Assert.assertNotNull(objArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray37), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray37), "[]");
        org.junit.Assert.assertNotNull(objArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray38), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray38), "[]");
        org.junit.Assert.assertNotNull(objArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray39), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray39), "[]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "Euler angles singularity" + "'", str44, "Euler angles singularity");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "Euler angles singularity" + "'", str47, "Euler angles singularity");
        org.junit.Assert.assertNotNull(throwableArray48);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "Cardan angles singularity" + "'", str52, "Cardan angles singularity");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "Euler angles singularity" + "'", str54, "Euler angles singularity");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "Cardan angles singularity" + "'", str56, "Cardan angles singularity");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "Cardan angles singularity" + "'", str57, "Cardan angles singularity");
        org.junit.Assert.assertNotNull(wildcardClass58);
    }

    @Test
    public void test1591() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1591");
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException1 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.String str2 = cardanEulerSingularityException1.getPattern();
        java.lang.Object[] objArray3 = cardanEulerSingularityException1.getArguments();
        java.lang.String str4 = cardanEulerSingularityException1.getPattern();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException6 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.String str7 = cardanEulerSingularityException6.getPattern();
        java.lang.Throwable[] throwableArray8 = cardanEulerSingularityException6.getSuppressed();
        cardanEulerSingularityException1.addSuppressed((java.lang.Throwable) cardanEulerSingularityException6);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException11 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.String str12 = cardanEulerSingularityException11.getPattern();
        java.lang.Object[] objArray13 = cardanEulerSingularityException11.getArguments();
        java.lang.String str14 = cardanEulerSingularityException11.getPattern();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException16 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.String str17 = cardanEulerSingularityException16.getPattern();
        java.lang.Throwable[] throwableArray18 = cardanEulerSingularityException16.getSuppressed();
        cardanEulerSingularityException11.addSuppressed((java.lang.Throwable) cardanEulerSingularityException16);
        cardanEulerSingularityException1.addSuppressed((java.lang.Throwable) cardanEulerSingularityException11);
        java.lang.String str21 = cardanEulerSingularityException1.getPattern();
        java.lang.String str22 = cardanEulerSingularityException1.getPattern();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException24 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray25 = cardanEulerSingularityException24.getArguments();
        java.lang.String str26 = cardanEulerSingularityException24.getPattern();
        java.lang.Object[] objArray27 = cardanEulerSingularityException24.getArguments();
        java.lang.Object[] objArray28 = cardanEulerSingularityException24.getArguments();
        java.lang.String str29 = cardanEulerSingularityException24.getPattern();
        cardanEulerSingularityException1.addSuppressed((java.lang.Throwable) cardanEulerSingularityException24);
        java.lang.Object[] objArray31 = cardanEulerSingularityException24.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException33 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray34 = cardanEulerSingularityException33.getArguments();
        java.lang.Object[] objArray35 = cardanEulerSingularityException33.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException37 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray38 = cardanEulerSingularityException37.getArguments();
        cardanEulerSingularityException33.addSuppressed((java.lang.Throwable) cardanEulerSingularityException37);
        java.lang.Object[] objArray40 = cardanEulerSingularityException37.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException42 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray43 = cardanEulerSingularityException42.getArguments();
        java.lang.Throwable[] throwableArray44 = cardanEulerSingularityException42.getSuppressed();
        java.lang.String str45 = cardanEulerSingularityException42.getPattern();
        cardanEulerSingularityException37.addSuppressed((java.lang.Throwable) cardanEulerSingularityException42);
        java.lang.Object[] objArray47 = cardanEulerSingularityException37.getArguments();
        java.lang.Throwable[] throwableArray48 = cardanEulerSingularityException37.getSuppressed();
        java.lang.Object[] objArray49 = cardanEulerSingularityException37.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException51 = new org.apache.commons.math.geometry.CardanEulerSingularityException(true);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException53 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        cardanEulerSingularityException51.addSuppressed((java.lang.Throwable) cardanEulerSingularityException53);
        java.lang.Throwable[] throwableArray55 = cardanEulerSingularityException51.getSuppressed();
        cardanEulerSingularityException37.addSuppressed((java.lang.Throwable) cardanEulerSingularityException51);
        java.lang.String str57 = cardanEulerSingularityException37.getPattern();
        cardanEulerSingularityException24.addSuppressed((java.lang.Throwable) cardanEulerSingularityException37);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException60 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray61 = cardanEulerSingularityException60.getArguments();
        java.lang.Object[] objArray62 = cardanEulerSingularityException60.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException64 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray65 = cardanEulerSingularityException64.getArguments();
        cardanEulerSingularityException60.addSuppressed((java.lang.Throwable) cardanEulerSingularityException64);
        java.lang.Object[] objArray67 = cardanEulerSingularityException64.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException69 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray70 = cardanEulerSingularityException69.getArguments();
        java.lang.Throwable[] throwableArray71 = cardanEulerSingularityException69.getSuppressed();
        java.lang.String str72 = cardanEulerSingularityException69.getPattern();
        cardanEulerSingularityException64.addSuppressed((java.lang.Throwable) cardanEulerSingularityException69);
        java.lang.Object[] objArray74 = cardanEulerSingularityException64.getArguments();
        java.lang.Throwable[] throwableArray75 = cardanEulerSingularityException64.getSuppressed();
        java.lang.Object[] objArray76 = cardanEulerSingularityException64.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException78 = new org.apache.commons.math.geometry.CardanEulerSingularityException(true);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException80 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        cardanEulerSingularityException78.addSuppressed((java.lang.Throwable) cardanEulerSingularityException80);
        java.lang.Throwable[] throwableArray82 = cardanEulerSingularityException78.getSuppressed();
        cardanEulerSingularityException64.addSuppressed((java.lang.Throwable) cardanEulerSingularityException78);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException85 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.String str86 = cardanEulerSingularityException85.getPattern();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException88 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.String str89 = cardanEulerSingularityException88.getPattern();
        java.lang.Throwable[] throwableArray90 = cardanEulerSingularityException88.getSuppressed();
        cardanEulerSingularityException85.addSuppressed((java.lang.Throwable) cardanEulerSingularityException88);
        cardanEulerSingularityException78.addSuppressed((java.lang.Throwable) cardanEulerSingularityException85);
        cardanEulerSingularityException37.addSuppressed((java.lang.Throwable) cardanEulerSingularityException85);
        java.lang.String str94 = cardanEulerSingularityException37.toString();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "Euler angles singularity" + "'", str2, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray3), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray3), "[]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Euler angles singularity" + "'", str4, "Euler angles singularity");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Euler angles singularity" + "'", str7, "Euler angles singularity");
        org.junit.Assert.assertNotNull(throwableArray8);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Euler angles singularity" + "'", str12, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray13), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray13), "[]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "Euler angles singularity" + "'", str14, "Euler angles singularity");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "Euler angles singularity" + "'", str17, "Euler angles singularity");
        org.junit.Assert.assertNotNull(throwableArray18);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "Euler angles singularity" + "'", str21, "Euler angles singularity");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "Euler angles singularity" + "'", str22, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray25), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray25), "[]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "Euler angles singularity" + "'", str26, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray27), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray27), "[]");
        org.junit.Assert.assertNotNull(objArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray28), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray28), "[]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "Euler angles singularity" + "'", str29, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray31), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray31), "[]");
        org.junit.Assert.assertNotNull(objArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray34), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray34), "[]");
        org.junit.Assert.assertNotNull(objArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray35), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray35), "[]");
        org.junit.Assert.assertNotNull(objArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray38), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray38), "[]");
        org.junit.Assert.assertNotNull(objArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray40), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray40), "[]");
        org.junit.Assert.assertNotNull(objArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray43), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray43), "[]");
        org.junit.Assert.assertNotNull(throwableArray44);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "Euler angles singularity" + "'", str45, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray47), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray47), "[]");
        org.junit.Assert.assertNotNull(throwableArray48);
        org.junit.Assert.assertNotNull(objArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray49), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray49), "[]");
        org.junit.Assert.assertNotNull(throwableArray55);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "Euler angles singularity" + "'", str57, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray61), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray61), "[]");
        org.junit.Assert.assertNotNull(objArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray62), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray62), "[]");
        org.junit.Assert.assertNotNull(objArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray65), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray65), "[]");
        org.junit.Assert.assertNotNull(objArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray67), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray67), "[]");
        org.junit.Assert.assertNotNull(objArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray70), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray70), "[]");
        org.junit.Assert.assertNotNull(throwableArray71);
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "Euler angles singularity" + "'", str72, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray74), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray74), "[]");
        org.junit.Assert.assertNotNull(throwableArray75);
        org.junit.Assert.assertNotNull(objArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray76), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray76), "[]");
        org.junit.Assert.assertNotNull(throwableArray82);
        org.junit.Assert.assertEquals("'" + str86 + "' != '" + "Euler angles singularity" + "'", str86, "Euler angles singularity");
        org.junit.Assert.assertEquals("'" + str89 + "' != '" + "Euler angles singularity" + "'", str89, "Euler angles singularity");
        org.junit.Assert.assertNotNull(throwableArray90);
        org.junit.Assert.assertEquals("'" + str94 + "' != '" + "org.apache.commons.math.geometry.CardanEulerSingularityException: Euler angles singularity" + "'", str94, "org.apache.commons.math.geometry.CardanEulerSingularityException: Euler angles singularity");
    }

    @Test
    public void test1592() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1592");
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException1 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray2 = cardanEulerSingularityException1.getArguments();
        java.lang.Object[] objArray3 = cardanEulerSingularityException1.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException5 = new org.apache.commons.math.geometry.CardanEulerSingularityException(true);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException7 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        cardanEulerSingularityException5.addSuppressed((java.lang.Throwable) cardanEulerSingularityException7);
        cardanEulerSingularityException1.addSuppressed((java.lang.Throwable) cardanEulerSingularityException5);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException11 = new org.apache.commons.math.geometry.CardanEulerSingularityException(true);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException13 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        cardanEulerSingularityException11.addSuppressed((java.lang.Throwable) cardanEulerSingularityException13);
        java.lang.String str15 = cardanEulerSingularityException13.getPattern();
        java.lang.Throwable[] throwableArray16 = cardanEulerSingularityException13.getSuppressed();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException18 = new org.apache.commons.math.geometry.CardanEulerSingularityException(true);
        java.lang.String str19 = cardanEulerSingularityException18.getPattern();
        cardanEulerSingularityException13.addSuppressed((java.lang.Throwable) cardanEulerSingularityException18);
        cardanEulerSingularityException1.addSuppressed((java.lang.Throwable) cardanEulerSingularityException13);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException23 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.String str24 = cardanEulerSingularityException23.getPattern();
        java.lang.Object[] objArray25 = cardanEulerSingularityException23.getArguments();
        java.lang.String str26 = cardanEulerSingularityException23.getPattern();
        java.lang.String str27 = cardanEulerSingularityException23.getPattern();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException29 = new org.apache.commons.math.geometry.CardanEulerSingularityException(true);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException31 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        cardanEulerSingularityException29.addSuppressed((java.lang.Throwable) cardanEulerSingularityException31);
        java.lang.Throwable[] throwableArray33 = cardanEulerSingularityException29.getSuppressed();
        java.lang.Throwable[] throwableArray34 = cardanEulerSingularityException29.getSuppressed();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException36 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.String str37 = cardanEulerSingularityException36.getPattern();
        java.lang.Object[] objArray38 = cardanEulerSingularityException36.getArguments();
        java.lang.String str39 = cardanEulerSingularityException36.getPattern();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException41 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.String str42 = cardanEulerSingularityException41.getPattern();
        java.lang.Throwable[] throwableArray43 = cardanEulerSingularityException41.getSuppressed();
        cardanEulerSingularityException36.addSuppressed((java.lang.Throwable) cardanEulerSingularityException41);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException46 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.String str47 = cardanEulerSingularityException46.getPattern();
        java.lang.Object[] objArray48 = cardanEulerSingularityException46.getArguments();
        java.lang.String str49 = cardanEulerSingularityException46.getPattern();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException51 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.String str52 = cardanEulerSingularityException51.getPattern();
        java.lang.Throwable[] throwableArray53 = cardanEulerSingularityException51.getSuppressed();
        cardanEulerSingularityException46.addSuppressed((java.lang.Throwable) cardanEulerSingularityException51);
        cardanEulerSingularityException36.addSuppressed((java.lang.Throwable) cardanEulerSingularityException46);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException57 = new org.apache.commons.math.geometry.CardanEulerSingularityException(true);
        cardanEulerSingularityException36.addSuppressed((java.lang.Throwable) cardanEulerSingularityException57);
        cardanEulerSingularityException29.addSuppressed((java.lang.Throwable) cardanEulerSingularityException36);
        java.lang.Throwable[] throwableArray60 = cardanEulerSingularityException36.getSuppressed();
        java.lang.Object[] objArray61 = cardanEulerSingularityException36.getArguments();
        cardanEulerSingularityException23.addSuppressed((java.lang.Throwable) cardanEulerSingularityException36);
        java.lang.String str63 = cardanEulerSingularityException36.getPattern();
        cardanEulerSingularityException1.addSuppressed((java.lang.Throwable) cardanEulerSingularityException36);
        java.lang.String str65 = cardanEulerSingularityException1.toString();
        org.junit.Assert.assertNotNull(objArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray2), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray2), "[]");
        org.junit.Assert.assertNotNull(objArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray3), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray3), "[]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Euler angles singularity" + "'", str15, "Euler angles singularity");
        org.junit.Assert.assertNotNull(throwableArray16);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "Cardan angles singularity" + "'", str19, "Cardan angles singularity");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "Euler angles singularity" + "'", str24, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray25), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray25), "[]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "Euler angles singularity" + "'", str26, "Euler angles singularity");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "Euler angles singularity" + "'", str27, "Euler angles singularity");
        org.junit.Assert.assertNotNull(throwableArray33);
        org.junit.Assert.assertNotNull(throwableArray34);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "Euler angles singularity" + "'", str37, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray38), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray38), "[]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "Euler angles singularity" + "'", str39, "Euler angles singularity");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "Euler angles singularity" + "'", str42, "Euler angles singularity");
        org.junit.Assert.assertNotNull(throwableArray43);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "Euler angles singularity" + "'", str47, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray48), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray48), "[]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "Euler angles singularity" + "'", str49, "Euler angles singularity");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "Euler angles singularity" + "'", str52, "Euler angles singularity");
        org.junit.Assert.assertNotNull(throwableArray53);
        org.junit.Assert.assertNotNull(throwableArray60);
        org.junit.Assert.assertNotNull(objArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray61), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray61), "[]");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "Euler angles singularity" + "'", str63, "Euler angles singularity");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "org.apache.commons.math.geometry.CardanEulerSingularityException: Euler angles singularity" + "'", str65, "org.apache.commons.math.geometry.CardanEulerSingularityException: Euler angles singularity");
    }

    @Test
    public void test1593() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1593");
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException1 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray2 = cardanEulerSingularityException1.getArguments();
        java.lang.Object[] objArray3 = cardanEulerSingularityException1.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException5 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray6 = cardanEulerSingularityException5.getArguments();
        cardanEulerSingularityException1.addSuppressed((java.lang.Throwable) cardanEulerSingularityException5);
        java.lang.Object[] objArray8 = cardanEulerSingularityException5.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException10 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray11 = cardanEulerSingularityException10.getArguments();
        java.lang.Throwable[] throwableArray12 = cardanEulerSingularityException10.getSuppressed();
        java.lang.String str13 = cardanEulerSingularityException10.getPattern();
        cardanEulerSingularityException5.addSuppressed((java.lang.Throwable) cardanEulerSingularityException10);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException16 = new org.apache.commons.math.geometry.CardanEulerSingularityException(true);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException18 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        cardanEulerSingularityException16.addSuppressed((java.lang.Throwable) cardanEulerSingularityException18);
        java.lang.Throwable[] throwableArray20 = cardanEulerSingularityException16.getSuppressed();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException22 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray23 = cardanEulerSingularityException22.getArguments();
        java.lang.Throwable[] throwableArray24 = cardanEulerSingularityException22.getSuppressed();
        java.lang.Object[] objArray25 = cardanEulerSingularityException22.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException27 = new org.apache.commons.math.geometry.CardanEulerSingularityException(true);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException29 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        cardanEulerSingularityException27.addSuppressed((java.lang.Throwable) cardanEulerSingularityException29);
        java.lang.String str31 = cardanEulerSingularityException29.getPattern();
        java.lang.Throwable[] throwableArray32 = cardanEulerSingularityException29.getSuppressed();
        java.lang.String str33 = cardanEulerSingularityException29.getPattern();
        java.lang.Throwable[] throwableArray34 = cardanEulerSingularityException29.getSuppressed();
        java.lang.String str35 = cardanEulerSingularityException29.getPattern();
        cardanEulerSingularityException22.addSuppressed((java.lang.Throwable) cardanEulerSingularityException29);
        cardanEulerSingularityException16.addSuppressed((java.lang.Throwable) cardanEulerSingularityException29);
        java.lang.Throwable[] throwableArray38 = cardanEulerSingularityException29.getSuppressed();
        cardanEulerSingularityException5.addSuppressed((java.lang.Throwable) cardanEulerSingularityException29);
        java.lang.Object[] objArray40 = cardanEulerSingularityException5.getArguments();
        java.lang.Object[] objArray41 = cardanEulerSingularityException5.getArguments();
        org.junit.Assert.assertNotNull(objArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray2), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray2), "[]");
        org.junit.Assert.assertNotNull(objArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray3), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray3), "[]");
        org.junit.Assert.assertNotNull(objArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray6), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray6), "[]");
        org.junit.Assert.assertNotNull(objArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray8), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray8), "[]");
        org.junit.Assert.assertNotNull(objArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray11), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray11), "[]");
        org.junit.Assert.assertNotNull(throwableArray12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Euler angles singularity" + "'", str13, "Euler angles singularity");
        org.junit.Assert.assertNotNull(throwableArray20);
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray23), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray23), "[]");
        org.junit.Assert.assertNotNull(throwableArray24);
        org.junit.Assert.assertNotNull(objArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray25), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray25), "[]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "Euler angles singularity" + "'", str31, "Euler angles singularity");
        org.junit.Assert.assertNotNull(throwableArray32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "Euler angles singularity" + "'", str33, "Euler angles singularity");
        org.junit.Assert.assertNotNull(throwableArray34);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "Euler angles singularity" + "'", str35, "Euler angles singularity");
        org.junit.Assert.assertNotNull(throwableArray38);
        org.junit.Assert.assertNotNull(objArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray40), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray40), "[]");
        org.junit.Assert.assertNotNull(objArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray41), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray41), "[]");
    }

    @Test
    public void test1594() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1594");
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException1 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray2 = cardanEulerSingularityException1.getArguments();
        java.lang.Object[] objArray3 = cardanEulerSingularityException1.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException5 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray6 = cardanEulerSingularityException5.getArguments();
        cardanEulerSingularityException1.addSuppressed((java.lang.Throwable) cardanEulerSingularityException5);
        java.lang.Throwable[] throwableArray8 = cardanEulerSingularityException5.getSuppressed();
        java.lang.Object[] objArray9 = cardanEulerSingularityException5.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException11 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray12 = cardanEulerSingularityException11.getArguments();
        java.lang.Object[] objArray13 = cardanEulerSingularityException11.getArguments();
        java.lang.Object[] objArray14 = cardanEulerSingularityException11.getArguments();
        cardanEulerSingularityException5.addSuppressed((java.lang.Throwable) cardanEulerSingularityException11);
        java.lang.Object[] objArray16 = cardanEulerSingularityException11.getArguments();
        java.lang.Throwable[] throwableArray17 = cardanEulerSingularityException11.getSuppressed();
        java.lang.Throwable[] throwableArray18 = cardanEulerSingularityException11.getSuppressed();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException20 = new org.apache.commons.math.geometry.CardanEulerSingularityException(true);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException22 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        cardanEulerSingularityException20.addSuppressed((java.lang.Throwable) cardanEulerSingularityException22);
        java.lang.Throwable[] throwableArray24 = cardanEulerSingularityException20.getSuppressed();
        java.lang.Throwable[] throwableArray25 = cardanEulerSingularityException20.getSuppressed();
        cardanEulerSingularityException11.addSuppressed((java.lang.Throwable) cardanEulerSingularityException20);
        java.lang.Throwable[] throwableArray27 = cardanEulerSingularityException20.getSuppressed();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException29 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray30 = cardanEulerSingularityException29.getArguments();
        java.lang.Object[] objArray31 = cardanEulerSingularityException29.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException33 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray34 = cardanEulerSingularityException33.getArguments();
        cardanEulerSingularityException29.addSuppressed((java.lang.Throwable) cardanEulerSingularityException33);
        java.lang.Throwable[] throwableArray36 = cardanEulerSingularityException33.getSuppressed();
        java.lang.Object[] objArray37 = cardanEulerSingularityException33.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException39 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray40 = cardanEulerSingularityException39.getArguments();
        java.lang.Object[] objArray41 = cardanEulerSingularityException39.getArguments();
        java.lang.Object[] objArray42 = cardanEulerSingularityException39.getArguments();
        cardanEulerSingularityException33.addSuppressed((java.lang.Throwable) cardanEulerSingularityException39);
        java.lang.Object[] objArray44 = cardanEulerSingularityException39.getArguments();
        java.lang.Throwable[] throwableArray45 = cardanEulerSingularityException39.getSuppressed();
        java.lang.Throwable[] throwableArray46 = cardanEulerSingularityException39.getSuppressed();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException48 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray49 = cardanEulerSingularityException48.getArguments();
        java.lang.Object[] objArray50 = cardanEulerSingularityException48.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException52 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray53 = cardanEulerSingularityException52.getArguments();
        cardanEulerSingularityException48.addSuppressed((java.lang.Throwable) cardanEulerSingularityException52);
        java.lang.Throwable[] throwableArray55 = cardanEulerSingularityException52.getSuppressed();
        cardanEulerSingularityException39.addSuppressed((java.lang.Throwable) cardanEulerSingularityException52);
        java.lang.Throwable[] throwableArray57 = cardanEulerSingularityException39.getSuppressed();
        cardanEulerSingularityException20.addSuppressed((java.lang.Throwable) cardanEulerSingularityException39);
        java.lang.Object[] objArray59 = cardanEulerSingularityException39.getArguments();
        org.junit.Assert.assertNotNull(objArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray2), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray2), "[]");
        org.junit.Assert.assertNotNull(objArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray3), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray3), "[]");
        org.junit.Assert.assertNotNull(objArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray6), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray6), "[]");
        org.junit.Assert.assertNotNull(throwableArray8);
        org.junit.Assert.assertNotNull(objArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray9), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray9), "[]");
        org.junit.Assert.assertNotNull(objArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray12), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray12), "[]");
        org.junit.Assert.assertNotNull(objArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray13), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray13), "[]");
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[]");
        org.junit.Assert.assertNotNull(objArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray16), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray16), "[]");
        org.junit.Assert.assertNotNull(throwableArray17);
        org.junit.Assert.assertNotNull(throwableArray18);
        org.junit.Assert.assertNotNull(throwableArray24);
        org.junit.Assert.assertNotNull(throwableArray25);
        org.junit.Assert.assertNotNull(throwableArray27);
        org.junit.Assert.assertNotNull(objArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray30), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray30), "[]");
        org.junit.Assert.assertNotNull(objArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray31), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray31), "[]");
        org.junit.Assert.assertNotNull(objArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray34), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray34), "[]");
        org.junit.Assert.assertNotNull(throwableArray36);
        org.junit.Assert.assertNotNull(objArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray37), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray37), "[]");
        org.junit.Assert.assertNotNull(objArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray40), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray40), "[]");
        org.junit.Assert.assertNotNull(objArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray41), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray41), "[]");
        org.junit.Assert.assertNotNull(objArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray42), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray42), "[]");
        org.junit.Assert.assertNotNull(objArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray44), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray44), "[]");
        org.junit.Assert.assertNotNull(throwableArray45);
        org.junit.Assert.assertNotNull(throwableArray46);
        org.junit.Assert.assertNotNull(objArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray49), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray49), "[]");
        org.junit.Assert.assertNotNull(objArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray50), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray50), "[]");
        org.junit.Assert.assertNotNull(objArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray53), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray53), "[]");
        org.junit.Assert.assertNotNull(throwableArray55);
        org.junit.Assert.assertNotNull(throwableArray57);
        org.junit.Assert.assertNotNull(objArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray59), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray59), "[]");
    }

    @Test
    public void test1595() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1595");
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException1 = new org.apache.commons.math.geometry.CardanEulerSingularityException(true);
        java.lang.Object[] objArray2 = cardanEulerSingularityException1.getArguments();
        java.lang.Object[] objArray3 = cardanEulerSingularityException1.getArguments();
        java.lang.String str4 = cardanEulerSingularityException1.getPattern();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException6 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray7 = cardanEulerSingularityException6.getArguments();
        java.lang.Object[] objArray8 = cardanEulerSingularityException6.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException10 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray11 = cardanEulerSingularityException10.getArguments();
        cardanEulerSingularityException6.addSuppressed((java.lang.Throwable) cardanEulerSingularityException10);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException14 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray15 = cardanEulerSingularityException14.getArguments();
        java.lang.Object[] objArray16 = cardanEulerSingularityException14.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException18 = new org.apache.commons.math.geometry.CardanEulerSingularityException(true);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException20 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        cardanEulerSingularityException18.addSuppressed((java.lang.Throwable) cardanEulerSingularityException20);
        cardanEulerSingularityException14.addSuppressed((java.lang.Throwable) cardanEulerSingularityException18);
        java.lang.Throwable[] throwableArray23 = cardanEulerSingularityException14.getSuppressed();
        cardanEulerSingularityException10.addSuppressed((java.lang.Throwable) cardanEulerSingularityException14);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException26 = new org.apache.commons.math.geometry.CardanEulerSingularityException(true);
        java.lang.Object[] objArray27 = cardanEulerSingularityException26.getArguments();
        java.lang.Object[] objArray28 = cardanEulerSingularityException26.getArguments();
        cardanEulerSingularityException14.addSuppressed((java.lang.Throwable) cardanEulerSingularityException26);
        cardanEulerSingularityException1.addSuppressed((java.lang.Throwable) cardanEulerSingularityException14);
        java.lang.String str31 = cardanEulerSingularityException1.getPattern();
        java.lang.Class<?> wildcardClass32 = cardanEulerSingularityException1.getClass();
        org.junit.Assert.assertNotNull(objArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray2), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray2), "[]");
        org.junit.Assert.assertNotNull(objArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray3), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray3), "[]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Cardan angles singularity" + "'", str4, "Cardan angles singularity");
        org.junit.Assert.assertNotNull(objArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray7), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray7), "[]");
        org.junit.Assert.assertNotNull(objArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray8), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray8), "[]");
        org.junit.Assert.assertNotNull(objArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray11), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray11), "[]");
        org.junit.Assert.assertNotNull(objArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray15), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray15), "[]");
        org.junit.Assert.assertNotNull(objArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray16), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray16), "[]");
        org.junit.Assert.assertNotNull(throwableArray23);
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray27), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray27), "[]");
        org.junit.Assert.assertNotNull(objArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray28), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray28), "[]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "Cardan angles singularity" + "'", str31, "Cardan angles singularity");
        org.junit.Assert.assertNotNull(wildcardClass32);
    }

    @Test
    public void test1596() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1596");
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException1 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray2 = cardanEulerSingularityException1.getArguments();
        java.lang.Object[] objArray3 = cardanEulerSingularityException1.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException5 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray6 = cardanEulerSingularityException5.getArguments();
        cardanEulerSingularityException1.addSuppressed((java.lang.Throwable) cardanEulerSingularityException5);
        java.lang.Object[] objArray8 = cardanEulerSingularityException5.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException10 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray11 = cardanEulerSingularityException10.getArguments();
        java.lang.Throwable[] throwableArray12 = cardanEulerSingularityException10.getSuppressed();
        java.lang.String str13 = cardanEulerSingularityException10.getPattern();
        cardanEulerSingularityException5.addSuppressed((java.lang.Throwable) cardanEulerSingularityException10);
        java.lang.Object[] objArray15 = cardanEulerSingularityException5.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException17 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray18 = cardanEulerSingularityException17.getArguments();
        java.lang.Object[] objArray19 = cardanEulerSingularityException17.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException21 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray22 = cardanEulerSingularityException21.getArguments();
        cardanEulerSingularityException17.addSuppressed((java.lang.Throwable) cardanEulerSingularityException21);
        java.lang.Throwable[] throwableArray24 = cardanEulerSingularityException17.getSuppressed();
        java.lang.String str25 = cardanEulerSingularityException17.getPattern();
        java.lang.String str26 = cardanEulerSingularityException17.getPattern();
        java.lang.String str27 = cardanEulerSingularityException17.getPattern();
        cardanEulerSingularityException5.addSuppressed((java.lang.Throwable) cardanEulerSingularityException17);
        java.lang.Object[] objArray29 = cardanEulerSingularityException5.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException31 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray32 = cardanEulerSingularityException31.getArguments();
        java.lang.String str33 = cardanEulerSingularityException31.getPattern();
        java.lang.Object[] objArray34 = cardanEulerSingularityException31.getArguments();
        java.lang.Object[] objArray35 = cardanEulerSingularityException31.getArguments();
        java.lang.String str36 = cardanEulerSingularityException31.getPattern();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException38 = new org.apache.commons.math.geometry.CardanEulerSingularityException(true);
        java.lang.Object[] objArray39 = cardanEulerSingularityException38.getArguments();
        java.lang.Throwable[] throwableArray40 = cardanEulerSingularityException38.getSuppressed();
        java.lang.Throwable[] throwableArray41 = cardanEulerSingularityException38.getSuppressed();
        cardanEulerSingularityException31.addSuppressed((java.lang.Throwable) cardanEulerSingularityException38);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException44 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray45 = cardanEulerSingularityException44.getArguments();
        java.lang.Object[] objArray46 = cardanEulerSingularityException44.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException48 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray49 = cardanEulerSingularityException48.getArguments();
        cardanEulerSingularityException44.addSuppressed((java.lang.Throwable) cardanEulerSingularityException48);
        java.lang.Throwable[] throwableArray51 = cardanEulerSingularityException48.getSuppressed();
        java.lang.Object[] objArray52 = cardanEulerSingularityException48.getArguments();
        cardanEulerSingularityException31.addSuppressed((java.lang.Throwable) cardanEulerSingularityException48);
        java.lang.String str54 = cardanEulerSingularityException48.getPattern();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException56 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray57 = cardanEulerSingularityException56.getArguments();
        java.lang.String str58 = cardanEulerSingularityException56.getPattern();
        java.lang.Object[] objArray59 = cardanEulerSingularityException56.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException61 = new org.apache.commons.math.geometry.CardanEulerSingularityException(true);
        java.lang.Object[] objArray62 = cardanEulerSingularityException61.getArguments();
        java.lang.Object[] objArray63 = cardanEulerSingularityException61.getArguments();
        java.lang.String str64 = cardanEulerSingularityException61.getPattern();
        java.lang.String str65 = cardanEulerSingularityException61.getPattern();
        cardanEulerSingularityException56.addSuppressed((java.lang.Throwable) cardanEulerSingularityException61);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException68 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray69 = cardanEulerSingularityException68.getArguments();
        java.lang.String str70 = cardanEulerSingularityException68.getPattern();
        java.lang.Object[] objArray71 = cardanEulerSingularityException68.getArguments();
        java.lang.Object[] objArray72 = cardanEulerSingularityException68.getArguments();
        java.lang.String str73 = cardanEulerSingularityException68.getPattern();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException75 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        cardanEulerSingularityException68.addSuppressed((java.lang.Throwable) cardanEulerSingularityException75);
        java.lang.String str77 = cardanEulerSingularityException68.getPattern();
        java.lang.String str78 = cardanEulerSingularityException68.getPattern();
        cardanEulerSingularityException56.addSuppressed((java.lang.Throwable) cardanEulerSingularityException68);
        java.lang.Throwable[] throwableArray80 = cardanEulerSingularityException56.getSuppressed();
        java.lang.String str81 = cardanEulerSingularityException56.getPattern();
        cardanEulerSingularityException48.addSuppressed((java.lang.Throwable) cardanEulerSingularityException56);
        cardanEulerSingularityException5.addSuppressed((java.lang.Throwable) cardanEulerSingularityException48);
        java.lang.Throwable[] throwableArray84 = cardanEulerSingularityException5.getSuppressed();
        java.lang.String str85 = cardanEulerSingularityException5.getPattern();
        java.lang.String str86 = cardanEulerSingularityException5.getPattern();
        org.junit.Assert.assertNotNull(objArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray2), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray2), "[]");
        org.junit.Assert.assertNotNull(objArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray3), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray3), "[]");
        org.junit.Assert.assertNotNull(objArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray6), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray6), "[]");
        org.junit.Assert.assertNotNull(objArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray8), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray8), "[]");
        org.junit.Assert.assertNotNull(objArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray11), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray11), "[]");
        org.junit.Assert.assertNotNull(throwableArray12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Euler angles singularity" + "'", str13, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray15), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray15), "[]");
        org.junit.Assert.assertNotNull(objArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray18), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray18), "[]");
        org.junit.Assert.assertNotNull(objArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray19), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray19), "[]");
        org.junit.Assert.assertNotNull(objArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray22), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray22), "[]");
        org.junit.Assert.assertNotNull(throwableArray24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "Euler angles singularity" + "'", str25, "Euler angles singularity");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "Euler angles singularity" + "'", str26, "Euler angles singularity");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "Euler angles singularity" + "'", str27, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray29), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray29), "[]");
        org.junit.Assert.assertNotNull(objArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray32), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray32), "[]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "Euler angles singularity" + "'", str33, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray34), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray34), "[]");
        org.junit.Assert.assertNotNull(objArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray35), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray35), "[]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "Euler angles singularity" + "'", str36, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray39), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray39), "[]");
        org.junit.Assert.assertNotNull(throwableArray40);
        org.junit.Assert.assertNotNull(throwableArray41);
        org.junit.Assert.assertNotNull(objArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray45), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray45), "[]");
        org.junit.Assert.assertNotNull(objArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray46), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray46), "[]");
        org.junit.Assert.assertNotNull(objArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray49), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray49), "[]");
        org.junit.Assert.assertNotNull(throwableArray51);
        org.junit.Assert.assertNotNull(objArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray52), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray52), "[]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "Euler angles singularity" + "'", str54, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray57), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray57), "[]");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "Euler angles singularity" + "'", str58, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray59), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray59), "[]");
        org.junit.Assert.assertNotNull(objArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray62), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray62), "[]");
        org.junit.Assert.assertNotNull(objArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray63), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray63), "[]");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "Cardan angles singularity" + "'", str64, "Cardan angles singularity");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "Cardan angles singularity" + "'", str65, "Cardan angles singularity");
        org.junit.Assert.assertNotNull(objArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray69), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray69), "[]");
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "Euler angles singularity" + "'", str70, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray71), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray71), "[]");
        org.junit.Assert.assertNotNull(objArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray72), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray72), "[]");
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "Euler angles singularity" + "'", str73, "Euler angles singularity");
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "Euler angles singularity" + "'", str77, "Euler angles singularity");
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "Euler angles singularity" + "'", str78, "Euler angles singularity");
        org.junit.Assert.assertNotNull(throwableArray80);
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "Euler angles singularity" + "'", str81, "Euler angles singularity");
        org.junit.Assert.assertNotNull(throwableArray84);
        org.junit.Assert.assertEquals("'" + str85 + "' != '" + "Euler angles singularity" + "'", str85, "Euler angles singularity");
        org.junit.Assert.assertEquals("'" + str86 + "' != '" + "Euler angles singularity" + "'", str86, "Euler angles singularity");
    }

    @Test
    public void test1597() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1597");
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException1 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray2 = cardanEulerSingularityException1.getArguments();
        java.lang.Object[] objArray3 = cardanEulerSingularityException1.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException5 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray6 = cardanEulerSingularityException5.getArguments();
        cardanEulerSingularityException1.addSuppressed((java.lang.Throwable) cardanEulerSingularityException5);
        java.lang.Throwable[] throwableArray8 = cardanEulerSingularityException1.getSuppressed();
        java.lang.Object[] objArray9 = cardanEulerSingularityException1.getArguments();
        org.junit.Assert.assertNotNull(objArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray2), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray2), "[]");
        org.junit.Assert.assertNotNull(objArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray3), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray3), "[]");
        org.junit.Assert.assertNotNull(objArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray6), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray6), "[]");
        org.junit.Assert.assertNotNull(throwableArray8);
        org.junit.Assert.assertNotNull(objArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray9), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray9), "[]");
    }

    @Test
    public void test1598() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1598");
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException1 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray2 = cardanEulerSingularityException1.getArguments();
        java.lang.String str3 = cardanEulerSingularityException1.getPattern();
        java.lang.Object[] objArray4 = cardanEulerSingularityException1.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException6 = new org.apache.commons.math.geometry.CardanEulerSingularityException(true);
        java.lang.Object[] objArray7 = cardanEulerSingularityException6.getArguments();
        java.lang.Object[] objArray8 = cardanEulerSingularityException6.getArguments();
        java.lang.String str9 = cardanEulerSingularityException6.getPattern();
        java.lang.String str10 = cardanEulerSingularityException6.getPattern();
        cardanEulerSingularityException1.addSuppressed((java.lang.Throwable) cardanEulerSingularityException6);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException13 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray14 = cardanEulerSingularityException13.getArguments();
        java.lang.String str15 = cardanEulerSingularityException13.getPattern();
        java.lang.Object[] objArray16 = cardanEulerSingularityException13.getArguments();
        java.lang.Object[] objArray17 = cardanEulerSingularityException13.getArguments();
        java.lang.String str18 = cardanEulerSingularityException13.getPattern();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException20 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        cardanEulerSingularityException13.addSuppressed((java.lang.Throwable) cardanEulerSingularityException20);
        java.lang.String str22 = cardanEulerSingularityException13.getPattern();
        java.lang.String str23 = cardanEulerSingularityException13.getPattern();
        cardanEulerSingularityException1.addSuppressed((java.lang.Throwable) cardanEulerSingularityException13);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException26 = new org.apache.commons.math.geometry.CardanEulerSingularityException(true);
        java.lang.Object[] objArray27 = cardanEulerSingularityException26.getArguments();
        java.lang.Throwable[] throwableArray28 = cardanEulerSingularityException26.getSuppressed();
        java.lang.Throwable[] throwableArray29 = cardanEulerSingularityException26.getSuppressed();
        java.lang.Throwable[] throwableArray30 = cardanEulerSingularityException26.getSuppressed();
        cardanEulerSingularityException1.addSuppressed((java.lang.Throwable) cardanEulerSingularityException26);
        java.lang.Throwable[] throwableArray32 = cardanEulerSingularityException26.getSuppressed();
        org.junit.Assert.assertNotNull(objArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray2), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray2), "[]");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Euler angles singularity" + "'", str3, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray4), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray4), "[]");
        org.junit.Assert.assertNotNull(objArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray7), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray7), "[]");
        org.junit.Assert.assertNotNull(objArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray8), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray8), "[]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Cardan angles singularity" + "'", str9, "Cardan angles singularity");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Cardan angles singularity" + "'", str10, "Cardan angles singularity");
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Euler angles singularity" + "'", str15, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray16), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray16), "[]");
        org.junit.Assert.assertNotNull(objArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray17), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray17), "[]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "Euler angles singularity" + "'", str18, "Euler angles singularity");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "Euler angles singularity" + "'", str22, "Euler angles singularity");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "Euler angles singularity" + "'", str23, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray27), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray27), "[]");
        org.junit.Assert.assertNotNull(throwableArray28);
        org.junit.Assert.assertNotNull(throwableArray29);
        org.junit.Assert.assertNotNull(throwableArray30);
        org.junit.Assert.assertNotNull(throwableArray32);
    }

    @Test
    public void test1599() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1599");
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException1 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.String str2 = cardanEulerSingularityException1.getPattern();
        java.lang.Object[] objArray3 = cardanEulerSingularityException1.getArguments();
        java.lang.String str4 = cardanEulerSingularityException1.getPattern();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException6 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.String str7 = cardanEulerSingularityException6.getPattern();
        java.lang.Throwable[] throwableArray8 = cardanEulerSingularityException6.getSuppressed();
        cardanEulerSingularityException1.addSuppressed((java.lang.Throwable) cardanEulerSingularityException6);
        java.lang.String str10 = cardanEulerSingularityException1.toString();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "Euler angles singularity" + "'", str2, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray3), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray3), "[]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Euler angles singularity" + "'", str4, "Euler angles singularity");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Euler angles singularity" + "'", str7, "Euler angles singularity");
        org.junit.Assert.assertNotNull(throwableArray8);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "org.apache.commons.math.geometry.CardanEulerSingularityException: Euler angles singularity" + "'", str10, "org.apache.commons.math.geometry.CardanEulerSingularityException: Euler angles singularity");
    }

    @Test
    public void test1600() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1600");
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException1 = new org.apache.commons.math.geometry.CardanEulerSingularityException(true);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException3 = new org.apache.commons.math.geometry.CardanEulerSingularityException(true);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException5 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        cardanEulerSingularityException3.addSuppressed((java.lang.Throwable) cardanEulerSingularityException5);
        java.lang.String str7 = cardanEulerSingularityException5.getPattern();
        java.lang.String str8 = cardanEulerSingularityException5.getPattern();
        cardanEulerSingularityException1.addSuppressed((java.lang.Throwable) cardanEulerSingularityException5);
        java.lang.Throwable[] throwableArray10 = cardanEulerSingularityException5.getSuppressed();
        java.lang.String str11 = cardanEulerSingularityException5.getPattern();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Euler angles singularity" + "'", str7, "Euler angles singularity");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Euler angles singularity" + "'", str8, "Euler angles singularity");
        org.junit.Assert.assertNotNull(throwableArray10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Euler angles singularity" + "'", str11, "Euler angles singularity");
    }

    @Test
    public void test1601() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1601");
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException1 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray2 = cardanEulerSingularityException1.getArguments();
        java.lang.Throwable[] throwableArray3 = cardanEulerSingularityException1.getSuppressed();
        java.lang.String str4 = cardanEulerSingularityException1.getPattern();
        java.lang.Throwable[] throwableArray5 = cardanEulerSingularityException1.getSuppressed();
        java.lang.Throwable[] throwableArray6 = cardanEulerSingularityException1.getSuppressed();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException8 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.String str9 = cardanEulerSingularityException8.getPattern();
        java.lang.Object[] objArray10 = cardanEulerSingularityException8.getArguments();
        java.lang.String str11 = cardanEulerSingularityException8.getPattern();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException13 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.String str14 = cardanEulerSingularityException13.getPattern();
        java.lang.Throwable[] throwableArray15 = cardanEulerSingularityException13.getSuppressed();
        cardanEulerSingularityException8.addSuppressed((java.lang.Throwable) cardanEulerSingularityException13);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException18 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.String str19 = cardanEulerSingularityException18.getPattern();
        java.lang.Object[] objArray20 = cardanEulerSingularityException18.getArguments();
        java.lang.String str21 = cardanEulerSingularityException18.getPattern();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException23 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.String str24 = cardanEulerSingularityException23.getPattern();
        java.lang.Throwable[] throwableArray25 = cardanEulerSingularityException23.getSuppressed();
        cardanEulerSingularityException18.addSuppressed((java.lang.Throwable) cardanEulerSingularityException23);
        cardanEulerSingularityException8.addSuppressed((java.lang.Throwable) cardanEulerSingularityException18);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException29 = new org.apache.commons.math.geometry.CardanEulerSingularityException(true);
        cardanEulerSingularityException8.addSuppressed((java.lang.Throwable) cardanEulerSingularityException29);
        java.lang.Object[] objArray31 = cardanEulerSingularityException8.getArguments();
        java.lang.Throwable[] throwableArray32 = cardanEulerSingularityException8.getSuppressed();
        java.lang.String str33 = cardanEulerSingularityException8.getPattern();
        java.lang.String str34 = cardanEulerSingularityException8.getPattern();
        cardanEulerSingularityException1.addSuppressed((java.lang.Throwable) cardanEulerSingularityException8);
        java.lang.Throwable[] throwableArray36 = cardanEulerSingularityException8.getSuppressed();
        org.junit.Assert.assertNotNull(objArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray2), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray2), "[]");
        org.junit.Assert.assertNotNull(throwableArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Euler angles singularity" + "'", str4, "Euler angles singularity");
        org.junit.Assert.assertNotNull(throwableArray5);
        org.junit.Assert.assertNotNull(throwableArray6);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Euler angles singularity" + "'", str9, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray10), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray10), "[]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Euler angles singularity" + "'", str11, "Euler angles singularity");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "Euler angles singularity" + "'", str14, "Euler angles singularity");
        org.junit.Assert.assertNotNull(throwableArray15);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "Euler angles singularity" + "'", str19, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray20), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray20), "[]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "Euler angles singularity" + "'", str21, "Euler angles singularity");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "Euler angles singularity" + "'", str24, "Euler angles singularity");
        org.junit.Assert.assertNotNull(throwableArray25);
        org.junit.Assert.assertNotNull(objArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray31), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray31), "[]");
        org.junit.Assert.assertNotNull(throwableArray32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "Euler angles singularity" + "'", str33, "Euler angles singularity");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "Euler angles singularity" + "'", str34, "Euler angles singularity");
        org.junit.Assert.assertNotNull(throwableArray36);
    }

    @Test
    public void test1602() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1602");
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException1 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.String str2 = cardanEulerSingularityException1.getPattern();
        java.lang.Object[] objArray3 = cardanEulerSingularityException1.getArguments();
        java.lang.String str4 = cardanEulerSingularityException1.getPattern();
        java.lang.Throwable[] throwableArray5 = cardanEulerSingularityException1.getSuppressed();
        java.lang.Object[] objArray6 = cardanEulerSingularityException1.getArguments();
        java.lang.String str7 = cardanEulerSingularityException1.getPattern();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "Euler angles singularity" + "'", str2, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray3), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray3), "[]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Euler angles singularity" + "'", str4, "Euler angles singularity");
        org.junit.Assert.assertNotNull(throwableArray5);
        org.junit.Assert.assertNotNull(objArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray6), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray6), "[]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Euler angles singularity" + "'", str7, "Euler angles singularity");
    }

    @Test
    public void test1603() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1603");
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException1 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray2 = cardanEulerSingularityException1.getArguments();
        java.lang.Object[] objArray3 = cardanEulerSingularityException1.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException5 = new org.apache.commons.math.geometry.CardanEulerSingularityException(true);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException7 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        cardanEulerSingularityException5.addSuppressed((java.lang.Throwable) cardanEulerSingularityException7);
        cardanEulerSingularityException1.addSuppressed((java.lang.Throwable) cardanEulerSingularityException5);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException11 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray12 = cardanEulerSingularityException11.getArguments();
        java.lang.String str13 = cardanEulerSingularityException11.getPattern();
        java.lang.Object[] objArray14 = cardanEulerSingularityException11.getArguments();
        java.lang.Object[] objArray15 = cardanEulerSingularityException11.getArguments();
        cardanEulerSingularityException5.addSuppressed((java.lang.Throwable) cardanEulerSingularityException11);
        java.lang.String str17 = cardanEulerSingularityException5.getPattern();
        java.lang.Object[] objArray18 = cardanEulerSingularityException5.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException20 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray21 = cardanEulerSingularityException20.getArguments();
        java.lang.String str22 = cardanEulerSingularityException20.getPattern();
        java.lang.Object[] objArray23 = cardanEulerSingularityException20.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException25 = new org.apache.commons.math.geometry.CardanEulerSingularityException(true);
        java.lang.Object[] objArray26 = cardanEulerSingularityException25.getArguments();
        java.lang.Throwable[] throwableArray27 = cardanEulerSingularityException25.getSuppressed();
        java.lang.Throwable[] throwableArray28 = cardanEulerSingularityException25.getSuppressed();
        java.lang.Throwable[] throwableArray29 = cardanEulerSingularityException25.getSuppressed();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException31 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray32 = cardanEulerSingularityException31.getArguments();
        java.lang.Object[] objArray33 = cardanEulerSingularityException31.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException35 = new org.apache.commons.math.geometry.CardanEulerSingularityException(true);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException37 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        cardanEulerSingularityException35.addSuppressed((java.lang.Throwable) cardanEulerSingularityException37);
        cardanEulerSingularityException31.addSuppressed((java.lang.Throwable) cardanEulerSingularityException35);
        cardanEulerSingularityException25.addSuppressed((java.lang.Throwable) cardanEulerSingularityException31);
        cardanEulerSingularityException20.addSuppressed((java.lang.Throwable) cardanEulerSingularityException25);
        java.lang.Object[] objArray42 = cardanEulerSingularityException20.getArguments();
        java.lang.String str43 = cardanEulerSingularityException20.getPattern();
        cardanEulerSingularityException5.addSuppressed((java.lang.Throwable) cardanEulerSingularityException20);
        org.junit.Assert.assertNotNull(objArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray2), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray2), "[]");
        org.junit.Assert.assertNotNull(objArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray3), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray3), "[]");
        org.junit.Assert.assertNotNull(objArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray12), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray12), "[]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Euler angles singularity" + "'", str13, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[]");
        org.junit.Assert.assertNotNull(objArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray15), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray15), "[]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "Cardan angles singularity" + "'", str17, "Cardan angles singularity");
        org.junit.Assert.assertNotNull(objArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray18), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray18), "[]");
        org.junit.Assert.assertNotNull(objArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray21), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray21), "[]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "Euler angles singularity" + "'", str22, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray23), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray23), "[]");
        org.junit.Assert.assertNotNull(objArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray26), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray26), "[]");
        org.junit.Assert.assertNotNull(throwableArray27);
        org.junit.Assert.assertNotNull(throwableArray28);
        org.junit.Assert.assertNotNull(throwableArray29);
        org.junit.Assert.assertNotNull(objArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray32), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray32), "[]");
        org.junit.Assert.assertNotNull(objArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray33), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray33), "[]");
        org.junit.Assert.assertNotNull(objArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray42), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray42), "[]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "Euler angles singularity" + "'", str43, "Euler angles singularity");
    }

    @Test
    public void test1604() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1604");
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException1 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray2 = cardanEulerSingularityException1.getArguments();
        java.lang.Object[] objArray3 = cardanEulerSingularityException1.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException5 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray6 = cardanEulerSingularityException5.getArguments();
        cardanEulerSingularityException1.addSuppressed((java.lang.Throwable) cardanEulerSingularityException5);
        java.lang.Throwable[] throwableArray8 = cardanEulerSingularityException5.getSuppressed();
        java.lang.Object[] objArray9 = cardanEulerSingularityException5.getArguments();
        java.lang.Throwable[] throwableArray10 = cardanEulerSingularityException5.getSuppressed();
        java.lang.Object[] objArray11 = cardanEulerSingularityException5.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException13 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.String str14 = cardanEulerSingularityException13.getPattern();
        java.lang.Object[] objArray15 = cardanEulerSingularityException13.getArguments();
        java.lang.String str16 = cardanEulerSingularityException13.getPattern();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException18 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.String str19 = cardanEulerSingularityException18.getPattern();
        java.lang.Throwable[] throwableArray20 = cardanEulerSingularityException18.getSuppressed();
        cardanEulerSingularityException13.addSuppressed((java.lang.Throwable) cardanEulerSingularityException18);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException23 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.String str24 = cardanEulerSingularityException23.getPattern();
        java.lang.Object[] objArray25 = cardanEulerSingularityException23.getArguments();
        java.lang.String str26 = cardanEulerSingularityException23.getPattern();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException28 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.String str29 = cardanEulerSingularityException28.getPattern();
        java.lang.Throwable[] throwableArray30 = cardanEulerSingularityException28.getSuppressed();
        cardanEulerSingularityException23.addSuppressed((java.lang.Throwable) cardanEulerSingularityException28);
        cardanEulerSingularityException13.addSuppressed((java.lang.Throwable) cardanEulerSingularityException23);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException34 = new org.apache.commons.math.geometry.CardanEulerSingularityException(true);
        cardanEulerSingularityException13.addSuppressed((java.lang.Throwable) cardanEulerSingularityException34);
        java.lang.Object[] objArray36 = cardanEulerSingularityException13.getArguments();
        java.lang.Throwable[] throwableArray37 = cardanEulerSingularityException13.getSuppressed();
        java.lang.String str38 = cardanEulerSingularityException13.getPattern();
        cardanEulerSingularityException5.addSuppressed((java.lang.Throwable) cardanEulerSingularityException13);
        java.lang.Class<?> wildcardClass40 = cardanEulerSingularityException5.getClass();
        org.junit.Assert.assertNotNull(objArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray2), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray2), "[]");
        org.junit.Assert.assertNotNull(objArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray3), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray3), "[]");
        org.junit.Assert.assertNotNull(objArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray6), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray6), "[]");
        org.junit.Assert.assertNotNull(throwableArray8);
        org.junit.Assert.assertNotNull(objArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray9), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray9), "[]");
        org.junit.Assert.assertNotNull(throwableArray10);
        org.junit.Assert.assertNotNull(objArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray11), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray11), "[]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "Euler angles singularity" + "'", str14, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray15), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray15), "[]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "Euler angles singularity" + "'", str16, "Euler angles singularity");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "Euler angles singularity" + "'", str19, "Euler angles singularity");
        org.junit.Assert.assertNotNull(throwableArray20);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "Euler angles singularity" + "'", str24, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray25), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray25), "[]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "Euler angles singularity" + "'", str26, "Euler angles singularity");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "Euler angles singularity" + "'", str29, "Euler angles singularity");
        org.junit.Assert.assertNotNull(throwableArray30);
        org.junit.Assert.assertNotNull(objArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray36), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray36), "[]");
        org.junit.Assert.assertNotNull(throwableArray37);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "Euler angles singularity" + "'", str38, "Euler angles singularity");
        org.junit.Assert.assertNotNull(wildcardClass40);
    }

    @Test
    public void test1605() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1605");
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException1 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray2 = cardanEulerSingularityException1.getArguments();
        java.lang.Object[] objArray3 = cardanEulerSingularityException1.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException5 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray6 = cardanEulerSingularityException5.getArguments();
        cardanEulerSingularityException1.addSuppressed((java.lang.Throwable) cardanEulerSingularityException5);
        java.lang.Throwable[] throwableArray8 = cardanEulerSingularityException1.getSuppressed();
        java.lang.String str9 = cardanEulerSingularityException1.getPattern();
        java.lang.Object[] objArray10 = cardanEulerSingularityException1.getArguments();
        java.lang.String str11 = cardanEulerSingularityException1.getPattern();
        java.lang.Throwable[] throwableArray12 = cardanEulerSingularityException1.getSuppressed();
        java.lang.String str13 = cardanEulerSingularityException1.getPattern();
        org.junit.Assert.assertNotNull(objArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray2), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray2), "[]");
        org.junit.Assert.assertNotNull(objArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray3), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray3), "[]");
        org.junit.Assert.assertNotNull(objArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray6), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray6), "[]");
        org.junit.Assert.assertNotNull(throwableArray8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Euler angles singularity" + "'", str9, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray10), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray10), "[]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Euler angles singularity" + "'", str11, "Euler angles singularity");
        org.junit.Assert.assertNotNull(throwableArray12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Euler angles singularity" + "'", str13, "Euler angles singularity");
    }

    @Test
    public void test1606() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1606");
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException1 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray2 = cardanEulerSingularityException1.getArguments();
        java.lang.String str3 = cardanEulerSingularityException1.getPattern();
        java.lang.Object[] objArray4 = cardanEulerSingularityException1.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException6 = new org.apache.commons.math.geometry.CardanEulerSingularityException(true);
        java.lang.Object[] objArray7 = cardanEulerSingularityException6.getArguments();
        java.lang.Object[] objArray8 = cardanEulerSingularityException6.getArguments();
        cardanEulerSingularityException1.addSuppressed((java.lang.Throwable) cardanEulerSingularityException6);
        java.lang.String str10 = cardanEulerSingularityException1.getPattern();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException12 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray13 = cardanEulerSingularityException12.getArguments();
        java.lang.Object[] objArray14 = cardanEulerSingularityException12.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException16 = new org.apache.commons.math.geometry.CardanEulerSingularityException(true);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException18 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        cardanEulerSingularityException16.addSuppressed((java.lang.Throwable) cardanEulerSingularityException18);
        cardanEulerSingularityException12.addSuppressed((java.lang.Throwable) cardanEulerSingularityException16);
        java.lang.String str21 = cardanEulerSingularityException12.getPattern();
        cardanEulerSingularityException1.addSuppressed((java.lang.Throwable) cardanEulerSingularityException12);
        java.lang.Object[] objArray23 = cardanEulerSingularityException12.getArguments();
        java.lang.String str24 = cardanEulerSingularityException12.getPattern();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException26 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray27 = cardanEulerSingularityException26.getArguments();
        java.lang.String str28 = cardanEulerSingularityException26.getPattern();
        java.lang.Object[] objArray29 = cardanEulerSingularityException26.getArguments();
        java.lang.Object[] objArray30 = cardanEulerSingularityException26.getArguments();
        java.lang.String str31 = cardanEulerSingularityException26.getPattern();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException33 = new org.apache.commons.math.geometry.CardanEulerSingularityException(true);
        java.lang.Object[] objArray34 = cardanEulerSingularityException33.getArguments();
        java.lang.Throwable[] throwableArray35 = cardanEulerSingularityException33.getSuppressed();
        java.lang.Throwable[] throwableArray36 = cardanEulerSingularityException33.getSuppressed();
        cardanEulerSingularityException26.addSuppressed((java.lang.Throwable) cardanEulerSingularityException33);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException39 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray40 = cardanEulerSingularityException39.getArguments();
        java.lang.Object[] objArray41 = cardanEulerSingularityException39.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException43 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray44 = cardanEulerSingularityException43.getArguments();
        cardanEulerSingularityException39.addSuppressed((java.lang.Throwable) cardanEulerSingularityException43);
        java.lang.Throwable[] throwableArray46 = cardanEulerSingularityException43.getSuppressed();
        java.lang.Object[] objArray47 = cardanEulerSingularityException43.getArguments();
        cardanEulerSingularityException26.addSuppressed((java.lang.Throwable) cardanEulerSingularityException43);
        java.lang.String str49 = cardanEulerSingularityException43.getPattern();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException51 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray52 = cardanEulerSingularityException51.getArguments();
        java.lang.String str53 = cardanEulerSingularityException51.getPattern();
        java.lang.Object[] objArray54 = cardanEulerSingularityException51.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException56 = new org.apache.commons.math.geometry.CardanEulerSingularityException(true);
        java.lang.Object[] objArray57 = cardanEulerSingularityException56.getArguments();
        java.lang.Object[] objArray58 = cardanEulerSingularityException56.getArguments();
        java.lang.String str59 = cardanEulerSingularityException56.getPattern();
        java.lang.String str60 = cardanEulerSingularityException56.getPattern();
        cardanEulerSingularityException51.addSuppressed((java.lang.Throwable) cardanEulerSingularityException56);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException63 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray64 = cardanEulerSingularityException63.getArguments();
        java.lang.String str65 = cardanEulerSingularityException63.getPattern();
        java.lang.Object[] objArray66 = cardanEulerSingularityException63.getArguments();
        java.lang.Object[] objArray67 = cardanEulerSingularityException63.getArguments();
        java.lang.String str68 = cardanEulerSingularityException63.getPattern();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException70 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        cardanEulerSingularityException63.addSuppressed((java.lang.Throwable) cardanEulerSingularityException70);
        java.lang.String str72 = cardanEulerSingularityException63.getPattern();
        java.lang.String str73 = cardanEulerSingularityException63.getPattern();
        cardanEulerSingularityException51.addSuppressed((java.lang.Throwable) cardanEulerSingularityException63);
        java.lang.Throwable[] throwableArray75 = cardanEulerSingularityException51.getSuppressed();
        java.lang.String str76 = cardanEulerSingularityException51.getPattern();
        cardanEulerSingularityException43.addSuppressed((java.lang.Throwable) cardanEulerSingularityException51);
        java.lang.String str78 = cardanEulerSingularityException43.getPattern();
        cardanEulerSingularityException12.addSuppressed((java.lang.Throwable) cardanEulerSingularityException43);
        java.lang.String str80 = cardanEulerSingularityException12.getPattern();
        java.lang.String str81 = cardanEulerSingularityException12.toString();
        org.junit.Assert.assertNotNull(objArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray2), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray2), "[]");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Euler angles singularity" + "'", str3, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray4), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray4), "[]");
        org.junit.Assert.assertNotNull(objArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray7), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray7), "[]");
        org.junit.Assert.assertNotNull(objArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray8), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray8), "[]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Euler angles singularity" + "'", str10, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray13), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray13), "[]");
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "Euler angles singularity" + "'", str21, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray23), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray23), "[]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "Euler angles singularity" + "'", str24, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray27), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray27), "[]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "Euler angles singularity" + "'", str28, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray29), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray29), "[]");
        org.junit.Assert.assertNotNull(objArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray30), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray30), "[]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "Euler angles singularity" + "'", str31, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray34), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray34), "[]");
        org.junit.Assert.assertNotNull(throwableArray35);
        org.junit.Assert.assertNotNull(throwableArray36);
        org.junit.Assert.assertNotNull(objArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray40), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray40), "[]");
        org.junit.Assert.assertNotNull(objArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray41), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray41), "[]");
        org.junit.Assert.assertNotNull(objArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray44), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray44), "[]");
        org.junit.Assert.assertNotNull(throwableArray46);
        org.junit.Assert.assertNotNull(objArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray47), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray47), "[]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "Euler angles singularity" + "'", str49, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray52), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray52), "[]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "Euler angles singularity" + "'", str53, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray54), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray54), "[]");
        org.junit.Assert.assertNotNull(objArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray57), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray57), "[]");
        org.junit.Assert.assertNotNull(objArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray58), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray58), "[]");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "Cardan angles singularity" + "'", str59, "Cardan angles singularity");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "Cardan angles singularity" + "'", str60, "Cardan angles singularity");
        org.junit.Assert.assertNotNull(objArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray64), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray64), "[]");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "Euler angles singularity" + "'", str65, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray66), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray66), "[]");
        org.junit.Assert.assertNotNull(objArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray67), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray67), "[]");
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "Euler angles singularity" + "'", str68, "Euler angles singularity");
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "Euler angles singularity" + "'", str72, "Euler angles singularity");
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "Euler angles singularity" + "'", str73, "Euler angles singularity");
        org.junit.Assert.assertNotNull(throwableArray75);
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "Euler angles singularity" + "'", str76, "Euler angles singularity");
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "Euler angles singularity" + "'", str78, "Euler angles singularity");
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "Euler angles singularity" + "'", str80, "Euler angles singularity");
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "org.apache.commons.math.geometry.CardanEulerSingularityException: Euler angles singularity" + "'", str81, "org.apache.commons.math.geometry.CardanEulerSingularityException: Euler angles singularity");
    }

    @Test
    public void test1607() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1607");
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException1 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.String str2 = cardanEulerSingularityException1.getPattern();
        java.lang.Object[] objArray3 = cardanEulerSingularityException1.getArguments();
        java.lang.String str4 = cardanEulerSingularityException1.getPattern();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException6 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.String str7 = cardanEulerSingularityException6.getPattern();
        java.lang.Throwable[] throwableArray8 = cardanEulerSingularityException6.getSuppressed();
        cardanEulerSingularityException1.addSuppressed((java.lang.Throwable) cardanEulerSingularityException6);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException11 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.String str12 = cardanEulerSingularityException11.getPattern();
        java.lang.Object[] objArray13 = cardanEulerSingularityException11.getArguments();
        java.lang.String str14 = cardanEulerSingularityException11.getPattern();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException16 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.String str17 = cardanEulerSingularityException16.getPattern();
        java.lang.Throwable[] throwableArray18 = cardanEulerSingularityException16.getSuppressed();
        cardanEulerSingularityException11.addSuppressed((java.lang.Throwable) cardanEulerSingularityException16);
        cardanEulerSingularityException1.addSuppressed((java.lang.Throwable) cardanEulerSingularityException11);
        java.lang.String str21 = cardanEulerSingularityException1.getPattern();
        java.lang.String str22 = cardanEulerSingularityException1.getPattern();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException24 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray25 = cardanEulerSingularityException24.getArguments();
        java.lang.String str26 = cardanEulerSingularityException24.getPattern();
        java.lang.Object[] objArray27 = cardanEulerSingularityException24.getArguments();
        java.lang.Object[] objArray28 = cardanEulerSingularityException24.getArguments();
        java.lang.String str29 = cardanEulerSingularityException24.getPattern();
        cardanEulerSingularityException1.addSuppressed((java.lang.Throwable) cardanEulerSingularityException24);
        java.lang.Object[] objArray31 = cardanEulerSingularityException24.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException33 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray34 = cardanEulerSingularityException33.getArguments();
        java.lang.Object[] objArray35 = cardanEulerSingularityException33.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException37 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray38 = cardanEulerSingularityException37.getArguments();
        cardanEulerSingularityException33.addSuppressed((java.lang.Throwable) cardanEulerSingularityException37);
        java.lang.Object[] objArray40 = cardanEulerSingularityException37.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException42 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray43 = cardanEulerSingularityException42.getArguments();
        java.lang.Throwable[] throwableArray44 = cardanEulerSingularityException42.getSuppressed();
        java.lang.String str45 = cardanEulerSingularityException42.getPattern();
        cardanEulerSingularityException37.addSuppressed((java.lang.Throwable) cardanEulerSingularityException42);
        java.lang.Object[] objArray47 = cardanEulerSingularityException37.getArguments();
        java.lang.Throwable[] throwableArray48 = cardanEulerSingularityException37.getSuppressed();
        java.lang.Object[] objArray49 = cardanEulerSingularityException37.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException51 = new org.apache.commons.math.geometry.CardanEulerSingularityException(true);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException53 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        cardanEulerSingularityException51.addSuppressed((java.lang.Throwable) cardanEulerSingularityException53);
        java.lang.Throwable[] throwableArray55 = cardanEulerSingularityException51.getSuppressed();
        cardanEulerSingularityException37.addSuppressed((java.lang.Throwable) cardanEulerSingularityException51);
        java.lang.String str57 = cardanEulerSingularityException37.getPattern();
        cardanEulerSingularityException24.addSuppressed((java.lang.Throwable) cardanEulerSingularityException37);
        java.lang.Class<?> wildcardClass59 = cardanEulerSingularityException37.getClass();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "Euler angles singularity" + "'", str2, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray3), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray3), "[]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Euler angles singularity" + "'", str4, "Euler angles singularity");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Euler angles singularity" + "'", str7, "Euler angles singularity");
        org.junit.Assert.assertNotNull(throwableArray8);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Euler angles singularity" + "'", str12, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray13), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray13), "[]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "Euler angles singularity" + "'", str14, "Euler angles singularity");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "Euler angles singularity" + "'", str17, "Euler angles singularity");
        org.junit.Assert.assertNotNull(throwableArray18);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "Euler angles singularity" + "'", str21, "Euler angles singularity");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "Euler angles singularity" + "'", str22, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray25), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray25), "[]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "Euler angles singularity" + "'", str26, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray27), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray27), "[]");
        org.junit.Assert.assertNotNull(objArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray28), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray28), "[]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "Euler angles singularity" + "'", str29, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray31), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray31), "[]");
        org.junit.Assert.assertNotNull(objArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray34), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray34), "[]");
        org.junit.Assert.assertNotNull(objArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray35), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray35), "[]");
        org.junit.Assert.assertNotNull(objArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray38), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray38), "[]");
        org.junit.Assert.assertNotNull(objArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray40), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray40), "[]");
        org.junit.Assert.assertNotNull(objArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray43), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray43), "[]");
        org.junit.Assert.assertNotNull(throwableArray44);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "Euler angles singularity" + "'", str45, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray47), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray47), "[]");
        org.junit.Assert.assertNotNull(throwableArray48);
        org.junit.Assert.assertNotNull(objArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray49), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray49), "[]");
        org.junit.Assert.assertNotNull(throwableArray55);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "Euler angles singularity" + "'", str57, "Euler angles singularity");
        org.junit.Assert.assertNotNull(wildcardClass59);
    }

    @Test
    public void test1608() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1608");
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException1 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray2 = cardanEulerSingularityException1.getArguments();
        java.lang.Object[] objArray3 = cardanEulerSingularityException1.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException5 = new org.apache.commons.math.geometry.CardanEulerSingularityException(true);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException7 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        cardanEulerSingularityException5.addSuppressed((java.lang.Throwable) cardanEulerSingularityException7);
        cardanEulerSingularityException1.addSuppressed((java.lang.Throwable) cardanEulerSingularityException5);
        java.lang.Object[] objArray10 = cardanEulerSingularityException1.getArguments();
        java.lang.Throwable[] throwableArray11 = cardanEulerSingularityException1.getSuppressed();
        java.lang.Class<?> wildcardClass12 = cardanEulerSingularityException1.getClass();
        org.junit.Assert.assertNotNull(objArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray2), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray2), "[]");
        org.junit.Assert.assertNotNull(objArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray3), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray3), "[]");
        org.junit.Assert.assertNotNull(objArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray10), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray10), "[]");
        org.junit.Assert.assertNotNull(throwableArray11);
        org.junit.Assert.assertNotNull(wildcardClass12);
    }

    @Test
    public void test1609() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1609");
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException1 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray2 = cardanEulerSingularityException1.getArguments();
        java.lang.Object[] objArray3 = cardanEulerSingularityException1.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException5 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray6 = cardanEulerSingularityException5.getArguments();
        cardanEulerSingularityException1.addSuppressed((java.lang.Throwable) cardanEulerSingularityException5);
        java.lang.Throwable[] throwableArray8 = cardanEulerSingularityException1.getSuppressed();
        java.lang.String str9 = cardanEulerSingularityException1.getPattern();
        java.lang.Object[] objArray10 = cardanEulerSingularityException1.getArguments();
        java.lang.Object[] objArray11 = cardanEulerSingularityException1.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException13 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray14 = cardanEulerSingularityException13.getArguments();
        java.lang.Object[] objArray15 = cardanEulerSingularityException13.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException17 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray18 = cardanEulerSingularityException17.getArguments();
        cardanEulerSingularityException13.addSuppressed((java.lang.Throwable) cardanEulerSingularityException17);
        java.lang.Throwable[] throwableArray20 = cardanEulerSingularityException13.getSuppressed();
        java.lang.String str21 = cardanEulerSingularityException13.getPattern();
        java.lang.String str22 = cardanEulerSingularityException13.getPattern();
        java.lang.String str23 = cardanEulerSingularityException13.getPattern();
        java.lang.Throwable[] throwableArray24 = cardanEulerSingularityException13.getSuppressed();
        cardanEulerSingularityException1.addSuppressed((java.lang.Throwable) cardanEulerSingularityException13);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException27 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.String str28 = cardanEulerSingularityException27.getPattern();
        java.lang.Object[] objArray29 = cardanEulerSingularityException27.getArguments();
        java.lang.String str30 = cardanEulerSingularityException27.getPattern();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException32 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.String str33 = cardanEulerSingularityException32.getPattern();
        java.lang.Throwable[] throwableArray34 = cardanEulerSingularityException32.getSuppressed();
        cardanEulerSingularityException27.addSuppressed((java.lang.Throwable) cardanEulerSingularityException32);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException37 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.String str38 = cardanEulerSingularityException37.getPattern();
        java.lang.Object[] objArray39 = cardanEulerSingularityException37.getArguments();
        java.lang.String str40 = cardanEulerSingularityException37.getPattern();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException42 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.String str43 = cardanEulerSingularityException42.getPattern();
        java.lang.Throwable[] throwableArray44 = cardanEulerSingularityException42.getSuppressed();
        cardanEulerSingularityException37.addSuppressed((java.lang.Throwable) cardanEulerSingularityException42);
        cardanEulerSingularityException27.addSuppressed((java.lang.Throwable) cardanEulerSingularityException37);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException48 = new org.apache.commons.math.geometry.CardanEulerSingularityException(true);
        cardanEulerSingularityException27.addSuppressed((java.lang.Throwable) cardanEulerSingularityException48);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException51 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray52 = cardanEulerSingularityException51.getArguments();
        java.lang.Object[] objArray53 = cardanEulerSingularityException51.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException55 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray56 = cardanEulerSingularityException55.getArguments();
        cardanEulerSingularityException51.addSuppressed((java.lang.Throwable) cardanEulerSingularityException55);
        java.lang.Object[] objArray58 = cardanEulerSingularityException55.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException60 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray61 = cardanEulerSingularityException60.getArguments();
        java.lang.Throwable[] throwableArray62 = cardanEulerSingularityException60.getSuppressed();
        java.lang.String str63 = cardanEulerSingularityException60.getPattern();
        cardanEulerSingularityException55.addSuppressed((java.lang.Throwable) cardanEulerSingularityException60);
        java.lang.Object[] objArray65 = cardanEulerSingularityException60.getArguments();
        cardanEulerSingularityException27.addSuppressed((java.lang.Throwable) cardanEulerSingularityException60);
        java.lang.Object[] objArray67 = cardanEulerSingularityException27.getArguments();
        cardanEulerSingularityException1.addSuppressed((java.lang.Throwable) cardanEulerSingularityException27);
        org.junit.Assert.assertNotNull(objArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray2), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray2), "[]");
        org.junit.Assert.assertNotNull(objArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray3), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray3), "[]");
        org.junit.Assert.assertNotNull(objArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray6), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray6), "[]");
        org.junit.Assert.assertNotNull(throwableArray8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Euler angles singularity" + "'", str9, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray10), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray10), "[]");
        org.junit.Assert.assertNotNull(objArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray11), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray11), "[]");
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[]");
        org.junit.Assert.assertNotNull(objArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray15), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray15), "[]");
        org.junit.Assert.assertNotNull(objArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray18), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray18), "[]");
        org.junit.Assert.assertNotNull(throwableArray20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "Euler angles singularity" + "'", str21, "Euler angles singularity");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "Euler angles singularity" + "'", str22, "Euler angles singularity");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "Euler angles singularity" + "'", str23, "Euler angles singularity");
        org.junit.Assert.assertNotNull(throwableArray24);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "Euler angles singularity" + "'", str28, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray29), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray29), "[]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "Euler angles singularity" + "'", str30, "Euler angles singularity");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "Euler angles singularity" + "'", str33, "Euler angles singularity");
        org.junit.Assert.assertNotNull(throwableArray34);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "Euler angles singularity" + "'", str38, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray39), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray39), "[]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "Euler angles singularity" + "'", str40, "Euler angles singularity");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "Euler angles singularity" + "'", str43, "Euler angles singularity");
        org.junit.Assert.assertNotNull(throwableArray44);
        org.junit.Assert.assertNotNull(objArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray52), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray52), "[]");
        org.junit.Assert.assertNotNull(objArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray53), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray53), "[]");
        org.junit.Assert.assertNotNull(objArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray56), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray56), "[]");
        org.junit.Assert.assertNotNull(objArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray58), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray58), "[]");
        org.junit.Assert.assertNotNull(objArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray61), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray61), "[]");
        org.junit.Assert.assertNotNull(throwableArray62);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "Euler angles singularity" + "'", str63, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray65), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray65), "[]");
        org.junit.Assert.assertNotNull(objArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray67), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray67), "[]");
    }

    @Test
    public void test1610() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1610");
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException1 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.String str2 = cardanEulerSingularityException1.getPattern();
        java.lang.Object[] objArray3 = cardanEulerSingularityException1.getArguments();
        java.lang.String str4 = cardanEulerSingularityException1.getPattern();
        java.lang.Throwable[] throwableArray5 = cardanEulerSingularityException1.getSuppressed();
        java.lang.Throwable[] throwableArray6 = cardanEulerSingularityException1.getSuppressed();
        java.lang.String str7 = cardanEulerSingularityException1.getPattern();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException9 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray10 = cardanEulerSingularityException9.getArguments();
        java.lang.Object[] objArray11 = cardanEulerSingularityException9.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException13 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray14 = cardanEulerSingularityException13.getArguments();
        cardanEulerSingularityException9.addSuppressed((java.lang.Throwable) cardanEulerSingularityException13);
        java.lang.Object[] objArray16 = cardanEulerSingularityException13.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException18 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray19 = cardanEulerSingularityException18.getArguments();
        java.lang.Throwable[] throwableArray20 = cardanEulerSingularityException18.getSuppressed();
        java.lang.String str21 = cardanEulerSingularityException18.getPattern();
        cardanEulerSingularityException13.addSuppressed((java.lang.Throwable) cardanEulerSingularityException18);
        java.lang.Object[] objArray23 = cardanEulerSingularityException13.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException25 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.String str26 = cardanEulerSingularityException25.getPattern();
        java.lang.Object[] objArray27 = cardanEulerSingularityException25.getArguments();
        java.lang.String str28 = cardanEulerSingularityException25.getPattern();
        cardanEulerSingularityException13.addSuppressed((java.lang.Throwable) cardanEulerSingularityException25);
        java.lang.Object[] objArray30 = cardanEulerSingularityException13.getArguments();
        java.lang.String str31 = cardanEulerSingularityException13.getPattern();
        cardanEulerSingularityException1.addSuppressed((java.lang.Throwable) cardanEulerSingularityException13);
        java.lang.String str33 = cardanEulerSingularityException13.toString();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "Euler angles singularity" + "'", str2, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray3), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray3), "[]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Euler angles singularity" + "'", str4, "Euler angles singularity");
        org.junit.Assert.assertNotNull(throwableArray5);
        org.junit.Assert.assertNotNull(throwableArray6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Euler angles singularity" + "'", str7, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray10), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray10), "[]");
        org.junit.Assert.assertNotNull(objArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray11), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray11), "[]");
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[]");
        org.junit.Assert.assertNotNull(objArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray16), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray16), "[]");
        org.junit.Assert.assertNotNull(objArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray19), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray19), "[]");
        org.junit.Assert.assertNotNull(throwableArray20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "Euler angles singularity" + "'", str21, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray23), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray23), "[]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "Euler angles singularity" + "'", str26, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray27), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray27), "[]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "Euler angles singularity" + "'", str28, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray30), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray30), "[]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "Euler angles singularity" + "'", str31, "Euler angles singularity");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "org.apache.commons.math.geometry.CardanEulerSingularityException: Euler angles singularity" + "'", str33, "org.apache.commons.math.geometry.CardanEulerSingularityException: Euler angles singularity");
    }

    @Test
    public void test1611() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1611");
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException1 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.String str2 = cardanEulerSingularityException1.getPattern();
        java.lang.Object[] objArray3 = cardanEulerSingularityException1.getArguments();
        java.lang.String str4 = cardanEulerSingularityException1.getPattern();
        java.lang.String str5 = cardanEulerSingularityException1.getPattern();
        java.lang.String str6 = cardanEulerSingularityException1.getPattern();
        java.lang.Object[] objArray7 = cardanEulerSingularityException1.getArguments();
        java.lang.Throwable[] throwableArray8 = cardanEulerSingularityException1.getSuppressed();
        java.lang.Object[] objArray9 = cardanEulerSingularityException1.getArguments();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "Euler angles singularity" + "'", str2, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray3), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray3), "[]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Euler angles singularity" + "'", str4, "Euler angles singularity");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Euler angles singularity" + "'", str5, "Euler angles singularity");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "Euler angles singularity" + "'", str6, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray7), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray7), "[]");
        org.junit.Assert.assertNotNull(throwableArray8);
        org.junit.Assert.assertNotNull(objArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray9), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray9), "[]");
    }

    @Test
    public void test1612() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1612");
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException1 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray2 = cardanEulerSingularityException1.getArguments();
        java.lang.String str3 = cardanEulerSingularityException1.getPattern();
        java.lang.Object[] objArray4 = cardanEulerSingularityException1.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException6 = new org.apache.commons.math.geometry.CardanEulerSingularityException(true);
        java.lang.Object[] objArray7 = cardanEulerSingularityException6.getArguments();
        java.lang.Object[] objArray8 = cardanEulerSingularityException6.getArguments();
        java.lang.String str9 = cardanEulerSingularityException6.getPattern();
        java.lang.String str10 = cardanEulerSingularityException6.getPattern();
        cardanEulerSingularityException1.addSuppressed((java.lang.Throwable) cardanEulerSingularityException6);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException13 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray14 = cardanEulerSingularityException13.getArguments();
        java.lang.String str15 = cardanEulerSingularityException13.getPattern();
        java.lang.Object[] objArray16 = cardanEulerSingularityException13.getArguments();
        java.lang.Object[] objArray17 = cardanEulerSingularityException13.getArguments();
        java.lang.String str18 = cardanEulerSingularityException13.getPattern();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException20 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        cardanEulerSingularityException13.addSuppressed((java.lang.Throwable) cardanEulerSingularityException20);
        java.lang.String str22 = cardanEulerSingularityException13.getPattern();
        java.lang.String str23 = cardanEulerSingularityException13.getPattern();
        cardanEulerSingularityException1.addSuppressed((java.lang.Throwable) cardanEulerSingularityException13);
        java.lang.Throwable[] throwableArray25 = cardanEulerSingularityException1.getSuppressed();
        java.lang.Throwable[] throwableArray26 = cardanEulerSingularityException1.getSuppressed();
        java.lang.String str27 = cardanEulerSingularityException1.getPattern();
        java.lang.Throwable[] throwableArray28 = cardanEulerSingularityException1.getSuppressed();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException30 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray31 = cardanEulerSingularityException30.getArguments();
        java.lang.String str32 = cardanEulerSingularityException30.getPattern();
        java.lang.Object[] objArray33 = cardanEulerSingularityException30.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException35 = new org.apache.commons.math.geometry.CardanEulerSingularityException(true);
        java.lang.Object[] objArray36 = cardanEulerSingularityException35.getArguments();
        java.lang.Throwable[] throwableArray37 = cardanEulerSingularityException35.getSuppressed();
        java.lang.Throwable[] throwableArray38 = cardanEulerSingularityException35.getSuppressed();
        java.lang.Throwable[] throwableArray39 = cardanEulerSingularityException35.getSuppressed();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException41 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray42 = cardanEulerSingularityException41.getArguments();
        java.lang.Object[] objArray43 = cardanEulerSingularityException41.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException45 = new org.apache.commons.math.geometry.CardanEulerSingularityException(true);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException47 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        cardanEulerSingularityException45.addSuppressed((java.lang.Throwable) cardanEulerSingularityException47);
        cardanEulerSingularityException41.addSuppressed((java.lang.Throwable) cardanEulerSingularityException45);
        cardanEulerSingularityException35.addSuppressed((java.lang.Throwable) cardanEulerSingularityException41);
        cardanEulerSingularityException30.addSuppressed((java.lang.Throwable) cardanEulerSingularityException35);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException53 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray54 = cardanEulerSingularityException53.getArguments();
        java.lang.Object[] objArray55 = cardanEulerSingularityException53.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException57 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray58 = cardanEulerSingularityException57.getArguments();
        cardanEulerSingularityException53.addSuppressed((java.lang.Throwable) cardanEulerSingularityException57);
        java.lang.Object[] objArray60 = cardanEulerSingularityException57.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException62 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray63 = cardanEulerSingularityException62.getArguments();
        java.lang.Throwable[] throwableArray64 = cardanEulerSingularityException62.getSuppressed();
        java.lang.String str65 = cardanEulerSingularityException62.getPattern();
        cardanEulerSingularityException57.addSuppressed((java.lang.Throwable) cardanEulerSingularityException62);
        java.lang.Object[] objArray67 = cardanEulerSingularityException57.getArguments();
        java.lang.Throwable[] throwableArray68 = cardanEulerSingularityException57.getSuppressed();
        java.lang.Object[] objArray69 = cardanEulerSingularityException57.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException71 = new org.apache.commons.math.geometry.CardanEulerSingularityException(true);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException73 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        cardanEulerSingularityException71.addSuppressed((java.lang.Throwable) cardanEulerSingularityException73);
        java.lang.Throwable[] throwableArray75 = cardanEulerSingularityException71.getSuppressed();
        cardanEulerSingularityException57.addSuppressed((java.lang.Throwable) cardanEulerSingularityException71);
        cardanEulerSingularityException35.addSuppressed((java.lang.Throwable) cardanEulerSingularityException57);
        java.lang.Object[] objArray78 = cardanEulerSingularityException57.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException80 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray81 = cardanEulerSingularityException80.getArguments();
        java.lang.String str82 = cardanEulerSingularityException80.getPattern();
        java.lang.Object[] objArray83 = cardanEulerSingularityException80.getArguments();
        java.lang.Object[] objArray84 = cardanEulerSingularityException80.getArguments();
        java.lang.String str85 = cardanEulerSingularityException80.getPattern();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException87 = new org.apache.commons.math.geometry.CardanEulerSingularityException(true);
        java.lang.Object[] objArray88 = cardanEulerSingularityException87.getArguments();
        java.lang.Throwable[] throwableArray89 = cardanEulerSingularityException87.getSuppressed();
        java.lang.Throwable[] throwableArray90 = cardanEulerSingularityException87.getSuppressed();
        cardanEulerSingularityException80.addSuppressed((java.lang.Throwable) cardanEulerSingularityException87);
        java.lang.Object[] objArray92 = cardanEulerSingularityException80.getArguments();
        cardanEulerSingularityException57.addSuppressed((java.lang.Throwable) cardanEulerSingularityException80);
        java.lang.Object[] objArray94 = cardanEulerSingularityException80.getArguments();
        java.lang.String str95 = cardanEulerSingularityException80.getPattern();
        cardanEulerSingularityException1.addSuppressed((java.lang.Throwable) cardanEulerSingularityException80);
        java.lang.String str97 = cardanEulerSingularityException80.getPattern();
        java.lang.Throwable[] throwableArray98 = cardanEulerSingularityException80.getSuppressed();
        java.lang.String str99 = cardanEulerSingularityException80.getPattern();
        org.junit.Assert.assertNotNull(objArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray2), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray2), "[]");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Euler angles singularity" + "'", str3, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray4), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray4), "[]");
        org.junit.Assert.assertNotNull(objArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray7), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray7), "[]");
        org.junit.Assert.assertNotNull(objArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray8), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray8), "[]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Cardan angles singularity" + "'", str9, "Cardan angles singularity");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Cardan angles singularity" + "'", str10, "Cardan angles singularity");
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Euler angles singularity" + "'", str15, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray16), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray16), "[]");
        org.junit.Assert.assertNotNull(objArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray17), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray17), "[]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "Euler angles singularity" + "'", str18, "Euler angles singularity");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "Euler angles singularity" + "'", str22, "Euler angles singularity");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "Euler angles singularity" + "'", str23, "Euler angles singularity");
        org.junit.Assert.assertNotNull(throwableArray25);
        org.junit.Assert.assertNotNull(throwableArray26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "Euler angles singularity" + "'", str27, "Euler angles singularity");
        org.junit.Assert.assertNotNull(throwableArray28);
        org.junit.Assert.assertNotNull(objArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray31), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray31), "[]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "Euler angles singularity" + "'", str32, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray33), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray33), "[]");
        org.junit.Assert.assertNotNull(objArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray36), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray36), "[]");
        org.junit.Assert.assertNotNull(throwableArray37);
        org.junit.Assert.assertNotNull(throwableArray38);
        org.junit.Assert.assertNotNull(throwableArray39);
        org.junit.Assert.assertNotNull(objArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray42), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray42), "[]");
        org.junit.Assert.assertNotNull(objArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray43), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray43), "[]");
        org.junit.Assert.assertNotNull(objArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray54), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray54), "[]");
        org.junit.Assert.assertNotNull(objArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray55), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray55), "[]");
        org.junit.Assert.assertNotNull(objArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray58), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray58), "[]");
        org.junit.Assert.assertNotNull(objArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray60), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray60), "[]");
        org.junit.Assert.assertNotNull(objArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray63), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray63), "[]");
        org.junit.Assert.assertNotNull(throwableArray64);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "Euler angles singularity" + "'", str65, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray67), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray67), "[]");
        org.junit.Assert.assertNotNull(throwableArray68);
        org.junit.Assert.assertNotNull(objArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray69), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray69), "[]");
        org.junit.Assert.assertNotNull(throwableArray75);
        org.junit.Assert.assertNotNull(objArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray78), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray78), "[]");
        org.junit.Assert.assertNotNull(objArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray81), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray81), "[]");
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "Euler angles singularity" + "'", str82, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray83), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray83), "[]");
        org.junit.Assert.assertNotNull(objArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray84), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray84), "[]");
        org.junit.Assert.assertEquals("'" + str85 + "' != '" + "Euler angles singularity" + "'", str85, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray88), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray88), "[]");
        org.junit.Assert.assertNotNull(throwableArray89);
        org.junit.Assert.assertNotNull(throwableArray90);
        org.junit.Assert.assertNotNull(objArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray92), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray92), "[]");
        org.junit.Assert.assertNotNull(objArray94);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray94), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray94), "[]");
        org.junit.Assert.assertEquals("'" + str95 + "' != '" + "Euler angles singularity" + "'", str95, "Euler angles singularity");
        org.junit.Assert.assertEquals("'" + str97 + "' != '" + "Euler angles singularity" + "'", str97, "Euler angles singularity");
        org.junit.Assert.assertNotNull(throwableArray98);
        org.junit.Assert.assertEquals("'" + str99 + "' != '" + "Euler angles singularity" + "'", str99, "Euler angles singularity");
    }

    @Test
    public void test1613() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1613");
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException1 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray2 = cardanEulerSingularityException1.getArguments();
        java.lang.String str3 = cardanEulerSingularityException1.getPattern();
        java.lang.Object[] objArray4 = cardanEulerSingularityException1.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException6 = new org.apache.commons.math.geometry.CardanEulerSingularityException(true);
        java.lang.Object[] objArray7 = cardanEulerSingularityException6.getArguments();
        java.lang.Throwable[] throwableArray8 = cardanEulerSingularityException6.getSuppressed();
        java.lang.Throwable[] throwableArray9 = cardanEulerSingularityException6.getSuppressed();
        java.lang.Throwable[] throwableArray10 = cardanEulerSingularityException6.getSuppressed();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException12 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray13 = cardanEulerSingularityException12.getArguments();
        java.lang.Object[] objArray14 = cardanEulerSingularityException12.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException16 = new org.apache.commons.math.geometry.CardanEulerSingularityException(true);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException18 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        cardanEulerSingularityException16.addSuppressed((java.lang.Throwable) cardanEulerSingularityException18);
        cardanEulerSingularityException12.addSuppressed((java.lang.Throwable) cardanEulerSingularityException16);
        cardanEulerSingularityException6.addSuppressed((java.lang.Throwable) cardanEulerSingularityException12);
        cardanEulerSingularityException1.addSuppressed((java.lang.Throwable) cardanEulerSingularityException6);
        java.lang.Throwable[] throwableArray23 = cardanEulerSingularityException1.getSuppressed();
        java.lang.Throwable[] throwableArray24 = cardanEulerSingularityException1.getSuppressed();
        java.lang.Class<?> wildcardClass25 = throwableArray24.getClass();
        org.junit.Assert.assertNotNull(objArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray2), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray2), "[]");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Euler angles singularity" + "'", str3, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray4), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray4), "[]");
        org.junit.Assert.assertNotNull(objArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray7), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray7), "[]");
        org.junit.Assert.assertNotNull(throwableArray8);
        org.junit.Assert.assertNotNull(throwableArray9);
        org.junit.Assert.assertNotNull(throwableArray10);
        org.junit.Assert.assertNotNull(objArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray13), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray13), "[]");
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[]");
        org.junit.Assert.assertNotNull(throwableArray23);
        org.junit.Assert.assertNotNull(throwableArray24);
        org.junit.Assert.assertNotNull(wildcardClass25);
    }

    @Test
    public void test1614() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1614");
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException1 = new org.apache.commons.math.geometry.CardanEulerSingularityException(true);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException3 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        cardanEulerSingularityException1.addSuppressed((java.lang.Throwable) cardanEulerSingularityException3);
        java.lang.String str5 = cardanEulerSingularityException3.getPattern();
        java.lang.Throwable[] throwableArray6 = cardanEulerSingularityException3.getSuppressed();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException8 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.String str9 = cardanEulerSingularityException8.getPattern();
        java.lang.Object[] objArray10 = cardanEulerSingularityException8.getArguments();
        java.lang.String str11 = cardanEulerSingularityException8.getPattern();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException13 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.String str14 = cardanEulerSingularityException13.getPattern();
        java.lang.Throwable[] throwableArray15 = cardanEulerSingularityException13.getSuppressed();
        cardanEulerSingularityException8.addSuppressed((java.lang.Throwable) cardanEulerSingularityException13);
        cardanEulerSingularityException3.addSuppressed((java.lang.Throwable) cardanEulerSingularityException13);
        java.lang.Throwable[] throwableArray18 = cardanEulerSingularityException3.getSuppressed();
        java.lang.Object[] objArray19 = cardanEulerSingularityException3.getArguments();
        java.lang.Class<?> wildcardClass20 = cardanEulerSingularityException3.getClass();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Euler angles singularity" + "'", str5, "Euler angles singularity");
        org.junit.Assert.assertNotNull(throwableArray6);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Euler angles singularity" + "'", str9, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray10), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray10), "[]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Euler angles singularity" + "'", str11, "Euler angles singularity");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "Euler angles singularity" + "'", str14, "Euler angles singularity");
        org.junit.Assert.assertNotNull(throwableArray15);
        org.junit.Assert.assertNotNull(throwableArray18);
        org.junit.Assert.assertNotNull(objArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray19), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray19), "[]");
        org.junit.Assert.assertNotNull(wildcardClass20);
    }

    @Test
    public void test1615() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1615");
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException1 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray2 = cardanEulerSingularityException1.getArguments();
        java.lang.Object[] objArray3 = cardanEulerSingularityException1.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException5 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray6 = cardanEulerSingularityException5.getArguments();
        cardanEulerSingularityException1.addSuppressed((java.lang.Throwable) cardanEulerSingularityException5);
        java.lang.Throwable[] throwableArray8 = cardanEulerSingularityException1.getSuppressed();
        java.lang.String str9 = cardanEulerSingularityException1.getPattern();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException11 = new org.apache.commons.math.geometry.CardanEulerSingularityException(true);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException13 = new org.apache.commons.math.geometry.CardanEulerSingularityException(true);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException15 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        cardanEulerSingularityException13.addSuppressed((java.lang.Throwable) cardanEulerSingularityException15);
        java.lang.String str17 = cardanEulerSingularityException15.getPattern();
        java.lang.String str18 = cardanEulerSingularityException15.getPattern();
        cardanEulerSingularityException11.addSuppressed((java.lang.Throwable) cardanEulerSingularityException15);
        java.lang.Object[] objArray20 = cardanEulerSingularityException15.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException22 = new org.apache.commons.math.geometry.CardanEulerSingularityException(true);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException24 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        cardanEulerSingularityException22.addSuppressed((java.lang.Throwable) cardanEulerSingularityException24);
        java.lang.Throwable[] throwableArray26 = cardanEulerSingularityException22.getSuppressed();
        java.lang.Throwable[] throwableArray27 = cardanEulerSingularityException22.getSuppressed();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException29 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.String str30 = cardanEulerSingularityException29.getPattern();
        cardanEulerSingularityException22.addSuppressed((java.lang.Throwable) cardanEulerSingularityException29);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException33 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray34 = cardanEulerSingularityException33.getArguments();
        java.lang.Throwable[] throwableArray35 = cardanEulerSingularityException33.getSuppressed();
        java.lang.String str36 = cardanEulerSingularityException33.getPattern();
        java.lang.Throwable[] throwableArray37 = cardanEulerSingularityException33.getSuppressed();
        java.lang.String str38 = cardanEulerSingularityException33.getPattern();
        java.lang.Throwable[] throwableArray39 = cardanEulerSingularityException33.getSuppressed();
        cardanEulerSingularityException22.addSuppressed((java.lang.Throwable) cardanEulerSingularityException33);
        cardanEulerSingularityException15.addSuppressed((java.lang.Throwable) cardanEulerSingularityException22);
        cardanEulerSingularityException1.addSuppressed((java.lang.Throwable) cardanEulerSingularityException15);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException44 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.String str45 = cardanEulerSingularityException44.getPattern();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException47 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.String str48 = cardanEulerSingularityException47.getPattern();
        java.lang.Throwable[] throwableArray49 = cardanEulerSingularityException47.getSuppressed();
        cardanEulerSingularityException44.addSuppressed((java.lang.Throwable) cardanEulerSingularityException47);
        java.lang.Throwable[] throwableArray51 = cardanEulerSingularityException44.getSuppressed();
        java.lang.String str52 = cardanEulerSingularityException44.getPattern();
        cardanEulerSingularityException1.addSuppressed((java.lang.Throwable) cardanEulerSingularityException44);
        org.junit.Assert.assertNotNull(objArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray2), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray2), "[]");
        org.junit.Assert.assertNotNull(objArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray3), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray3), "[]");
        org.junit.Assert.assertNotNull(objArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray6), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray6), "[]");
        org.junit.Assert.assertNotNull(throwableArray8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Euler angles singularity" + "'", str9, "Euler angles singularity");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "Euler angles singularity" + "'", str17, "Euler angles singularity");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "Euler angles singularity" + "'", str18, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray20), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray20), "[]");
        org.junit.Assert.assertNotNull(throwableArray26);
        org.junit.Assert.assertNotNull(throwableArray27);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "Euler angles singularity" + "'", str30, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray34), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray34), "[]");
        org.junit.Assert.assertNotNull(throwableArray35);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "Euler angles singularity" + "'", str36, "Euler angles singularity");
        org.junit.Assert.assertNotNull(throwableArray37);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "Euler angles singularity" + "'", str38, "Euler angles singularity");
        org.junit.Assert.assertNotNull(throwableArray39);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "Euler angles singularity" + "'", str45, "Euler angles singularity");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "Euler angles singularity" + "'", str48, "Euler angles singularity");
        org.junit.Assert.assertNotNull(throwableArray49);
        org.junit.Assert.assertNotNull(throwableArray51);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "Euler angles singularity" + "'", str52, "Euler angles singularity");
    }

    @Test
    public void test1616() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1616");
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException1 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray2 = cardanEulerSingularityException1.getArguments();
        java.lang.Throwable[] throwableArray3 = cardanEulerSingularityException1.getSuppressed();
        java.lang.String str4 = cardanEulerSingularityException1.getPattern();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException6 = new org.apache.commons.math.geometry.CardanEulerSingularityException(true);
        java.lang.String str7 = cardanEulerSingularityException6.getPattern();
        cardanEulerSingularityException1.addSuppressed((java.lang.Throwable) cardanEulerSingularityException6);
        java.lang.String str9 = cardanEulerSingularityException6.getPattern();
        java.lang.Throwable[] throwableArray10 = cardanEulerSingularityException6.getSuppressed();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException12 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.String str13 = cardanEulerSingularityException12.getPattern();
        java.lang.Object[] objArray14 = cardanEulerSingularityException12.getArguments();
        java.lang.String str15 = cardanEulerSingularityException12.getPattern();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException17 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.String str18 = cardanEulerSingularityException17.getPattern();
        java.lang.Throwable[] throwableArray19 = cardanEulerSingularityException17.getSuppressed();
        cardanEulerSingularityException12.addSuppressed((java.lang.Throwable) cardanEulerSingularityException17);
        java.lang.Object[] objArray21 = cardanEulerSingularityException17.getArguments();
        cardanEulerSingularityException6.addSuppressed((java.lang.Throwable) cardanEulerSingularityException17);
        org.junit.Assert.assertNotNull(objArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray2), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray2), "[]");
        org.junit.Assert.assertNotNull(throwableArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Euler angles singularity" + "'", str4, "Euler angles singularity");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Cardan angles singularity" + "'", str7, "Cardan angles singularity");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Cardan angles singularity" + "'", str9, "Cardan angles singularity");
        org.junit.Assert.assertNotNull(throwableArray10);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Euler angles singularity" + "'", str13, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Euler angles singularity" + "'", str15, "Euler angles singularity");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "Euler angles singularity" + "'", str18, "Euler angles singularity");
        org.junit.Assert.assertNotNull(throwableArray19);
        org.junit.Assert.assertNotNull(objArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray21), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray21), "[]");
    }

    @Test
    public void test1617() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1617");
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException1 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray2 = cardanEulerSingularityException1.getArguments();
        java.lang.String str3 = cardanEulerSingularityException1.getPattern();
        java.lang.Object[] objArray4 = cardanEulerSingularityException1.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException6 = new org.apache.commons.math.geometry.CardanEulerSingularityException(true);
        java.lang.Object[] objArray7 = cardanEulerSingularityException6.getArguments();
        java.lang.Object[] objArray8 = cardanEulerSingularityException6.getArguments();
        java.lang.String str9 = cardanEulerSingularityException6.getPattern();
        java.lang.String str10 = cardanEulerSingularityException6.getPattern();
        cardanEulerSingularityException1.addSuppressed((java.lang.Throwable) cardanEulerSingularityException6);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException13 = new org.apache.commons.math.geometry.CardanEulerSingularityException(true);
        java.lang.Object[] objArray14 = cardanEulerSingularityException13.getArguments();
        java.lang.Throwable[] throwableArray15 = cardanEulerSingularityException13.getSuppressed();
        java.lang.Throwable[] throwableArray16 = cardanEulerSingularityException13.getSuppressed();
        java.lang.Throwable[] throwableArray17 = cardanEulerSingularityException13.getSuppressed();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException19 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray20 = cardanEulerSingularityException19.getArguments();
        java.lang.Object[] objArray21 = cardanEulerSingularityException19.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException23 = new org.apache.commons.math.geometry.CardanEulerSingularityException(true);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException25 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        cardanEulerSingularityException23.addSuppressed((java.lang.Throwable) cardanEulerSingularityException25);
        cardanEulerSingularityException19.addSuppressed((java.lang.Throwable) cardanEulerSingularityException23);
        cardanEulerSingularityException13.addSuppressed((java.lang.Throwable) cardanEulerSingularityException19);
        java.lang.Throwable[] throwableArray29 = cardanEulerSingularityException13.getSuppressed();
        cardanEulerSingularityException6.addSuppressed((java.lang.Throwable) cardanEulerSingularityException13);
        java.lang.Throwable[] throwableArray31 = cardanEulerSingularityException6.getSuppressed();
        java.lang.Object[] objArray32 = cardanEulerSingularityException6.getArguments();
        org.junit.Assert.assertNotNull(objArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray2), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray2), "[]");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Euler angles singularity" + "'", str3, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray4), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray4), "[]");
        org.junit.Assert.assertNotNull(objArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray7), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray7), "[]");
        org.junit.Assert.assertNotNull(objArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray8), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray8), "[]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Cardan angles singularity" + "'", str9, "Cardan angles singularity");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Cardan angles singularity" + "'", str10, "Cardan angles singularity");
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[]");
        org.junit.Assert.assertNotNull(throwableArray15);
        org.junit.Assert.assertNotNull(throwableArray16);
        org.junit.Assert.assertNotNull(throwableArray17);
        org.junit.Assert.assertNotNull(objArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray20), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray20), "[]");
        org.junit.Assert.assertNotNull(objArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray21), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray21), "[]");
        org.junit.Assert.assertNotNull(throwableArray29);
        org.junit.Assert.assertNotNull(throwableArray31);
        org.junit.Assert.assertNotNull(objArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray32), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray32), "[]");
    }

    @Test
    public void test1618() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1618");
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException1 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray2 = cardanEulerSingularityException1.getArguments();
        java.lang.String str3 = cardanEulerSingularityException1.getPattern();
        java.lang.Object[] objArray4 = cardanEulerSingularityException1.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException6 = new org.apache.commons.math.geometry.CardanEulerSingularityException(true);
        java.lang.Object[] objArray7 = cardanEulerSingularityException6.getArguments();
        java.lang.Throwable[] throwableArray8 = cardanEulerSingularityException6.getSuppressed();
        java.lang.Throwable[] throwableArray9 = cardanEulerSingularityException6.getSuppressed();
        java.lang.Throwable[] throwableArray10 = cardanEulerSingularityException6.getSuppressed();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException12 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray13 = cardanEulerSingularityException12.getArguments();
        java.lang.Object[] objArray14 = cardanEulerSingularityException12.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException16 = new org.apache.commons.math.geometry.CardanEulerSingularityException(true);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException18 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        cardanEulerSingularityException16.addSuppressed((java.lang.Throwable) cardanEulerSingularityException18);
        cardanEulerSingularityException12.addSuppressed((java.lang.Throwable) cardanEulerSingularityException16);
        cardanEulerSingularityException6.addSuppressed((java.lang.Throwable) cardanEulerSingularityException12);
        cardanEulerSingularityException1.addSuppressed((java.lang.Throwable) cardanEulerSingularityException6);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException24 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray25 = cardanEulerSingularityException24.getArguments();
        java.lang.Object[] objArray26 = cardanEulerSingularityException24.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException28 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray29 = cardanEulerSingularityException28.getArguments();
        cardanEulerSingularityException24.addSuppressed((java.lang.Throwable) cardanEulerSingularityException28);
        java.lang.Object[] objArray31 = cardanEulerSingularityException28.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException33 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray34 = cardanEulerSingularityException33.getArguments();
        java.lang.Throwable[] throwableArray35 = cardanEulerSingularityException33.getSuppressed();
        java.lang.String str36 = cardanEulerSingularityException33.getPattern();
        cardanEulerSingularityException28.addSuppressed((java.lang.Throwable) cardanEulerSingularityException33);
        java.lang.Object[] objArray38 = cardanEulerSingularityException28.getArguments();
        java.lang.Throwable[] throwableArray39 = cardanEulerSingularityException28.getSuppressed();
        java.lang.Object[] objArray40 = cardanEulerSingularityException28.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException42 = new org.apache.commons.math.geometry.CardanEulerSingularityException(true);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException44 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        cardanEulerSingularityException42.addSuppressed((java.lang.Throwable) cardanEulerSingularityException44);
        java.lang.Throwable[] throwableArray46 = cardanEulerSingularityException42.getSuppressed();
        cardanEulerSingularityException28.addSuppressed((java.lang.Throwable) cardanEulerSingularityException42);
        cardanEulerSingularityException6.addSuppressed((java.lang.Throwable) cardanEulerSingularityException28);
        java.lang.Object[] objArray49 = cardanEulerSingularityException28.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException51 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray52 = cardanEulerSingularityException51.getArguments();
        java.lang.Object[] objArray53 = cardanEulerSingularityException51.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException55 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray56 = cardanEulerSingularityException55.getArguments();
        cardanEulerSingularityException51.addSuppressed((java.lang.Throwable) cardanEulerSingularityException55);
        java.lang.Throwable[] throwableArray58 = cardanEulerSingularityException55.getSuppressed();
        java.lang.Object[] objArray59 = cardanEulerSingularityException55.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException61 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray62 = cardanEulerSingularityException61.getArguments();
        java.lang.Object[] objArray63 = cardanEulerSingularityException61.getArguments();
        java.lang.Object[] objArray64 = cardanEulerSingularityException61.getArguments();
        cardanEulerSingularityException55.addSuppressed((java.lang.Throwable) cardanEulerSingularityException61);
        java.lang.Object[] objArray66 = cardanEulerSingularityException61.getArguments();
        cardanEulerSingularityException28.addSuppressed((java.lang.Throwable) cardanEulerSingularityException61);
        java.lang.String str68 = cardanEulerSingularityException28.getPattern();
        java.lang.Object[] objArray69 = cardanEulerSingularityException28.getArguments();
        org.junit.Assert.assertNotNull(objArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray2), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray2), "[]");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Euler angles singularity" + "'", str3, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray4), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray4), "[]");
        org.junit.Assert.assertNotNull(objArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray7), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray7), "[]");
        org.junit.Assert.assertNotNull(throwableArray8);
        org.junit.Assert.assertNotNull(throwableArray9);
        org.junit.Assert.assertNotNull(throwableArray10);
        org.junit.Assert.assertNotNull(objArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray13), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray13), "[]");
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[]");
        org.junit.Assert.assertNotNull(objArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray25), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray25), "[]");
        org.junit.Assert.assertNotNull(objArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray26), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray26), "[]");
        org.junit.Assert.assertNotNull(objArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray29), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray29), "[]");
        org.junit.Assert.assertNotNull(objArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray31), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray31), "[]");
        org.junit.Assert.assertNotNull(objArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray34), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray34), "[]");
        org.junit.Assert.assertNotNull(throwableArray35);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "Euler angles singularity" + "'", str36, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray38), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray38), "[]");
        org.junit.Assert.assertNotNull(throwableArray39);
        org.junit.Assert.assertNotNull(objArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray40), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray40), "[]");
        org.junit.Assert.assertNotNull(throwableArray46);
        org.junit.Assert.assertNotNull(objArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray49), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray49), "[]");
        org.junit.Assert.assertNotNull(objArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray52), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray52), "[]");
        org.junit.Assert.assertNotNull(objArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray53), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray53), "[]");
        org.junit.Assert.assertNotNull(objArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray56), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray56), "[]");
        org.junit.Assert.assertNotNull(throwableArray58);
        org.junit.Assert.assertNotNull(objArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray59), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray59), "[]");
        org.junit.Assert.assertNotNull(objArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray62), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray62), "[]");
        org.junit.Assert.assertNotNull(objArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray63), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray63), "[]");
        org.junit.Assert.assertNotNull(objArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray64), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray64), "[]");
        org.junit.Assert.assertNotNull(objArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray66), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray66), "[]");
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "Euler angles singularity" + "'", str68, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray69), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray69), "[]");
    }

    @Test
    public void test1619() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1619");
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException1 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray2 = cardanEulerSingularityException1.getArguments();
        java.lang.Object[] objArray3 = cardanEulerSingularityException1.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException5 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray6 = cardanEulerSingularityException5.getArguments();
        cardanEulerSingularityException1.addSuppressed((java.lang.Throwable) cardanEulerSingularityException5);
        java.lang.Object[] objArray8 = cardanEulerSingularityException5.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException10 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray11 = cardanEulerSingularityException10.getArguments();
        java.lang.Throwable[] throwableArray12 = cardanEulerSingularityException10.getSuppressed();
        java.lang.String str13 = cardanEulerSingularityException10.getPattern();
        cardanEulerSingularityException5.addSuppressed((java.lang.Throwable) cardanEulerSingularityException10);
        java.lang.Object[] objArray15 = cardanEulerSingularityException5.getArguments();
        java.lang.Throwable[] throwableArray16 = cardanEulerSingularityException5.getSuppressed();
        java.lang.Object[] objArray17 = cardanEulerSingularityException5.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException19 = new org.apache.commons.math.geometry.CardanEulerSingularityException(true);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException21 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        cardanEulerSingularityException19.addSuppressed((java.lang.Throwable) cardanEulerSingularityException21);
        java.lang.Throwable[] throwableArray23 = cardanEulerSingularityException19.getSuppressed();
        cardanEulerSingularityException5.addSuppressed((java.lang.Throwable) cardanEulerSingularityException19);
        java.lang.Throwable[] throwableArray25 = cardanEulerSingularityException19.getSuppressed();
        org.junit.Assert.assertNotNull(objArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray2), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray2), "[]");
        org.junit.Assert.assertNotNull(objArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray3), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray3), "[]");
        org.junit.Assert.assertNotNull(objArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray6), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray6), "[]");
        org.junit.Assert.assertNotNull(objArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray8), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray8), "[]");
        org.junit.Assert.assertNotNull(objArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray11), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray11), "[]");
        org.junit.Assert.assertNotNull(throwableArray12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Euler angles singularity" + "'", str13, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray15), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray15), "[]");
        org.junit.Assert.assertNotNull(throwableArray16);
        org.junit.Assert.assertNotNull(objArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray17), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray17), "[]");
        org.junit.Assert.assertNotNull(throwableArray23);
        org.junit.Assert.assertNotNull(throwableArray25);
    }

    @Test
    public void test1620() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1620");
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException1 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray2 = cardanEulerSingularityException1.getArguments();
        java.lang.String str3 = cardanEulerSingularityException1.getPattern();
        java.lang.Object[] objArray4 = cardanEulerSingularityException1.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException6 = new org.apache.commons.math.geometry.CardanEulerSingularityException(true);
        java.lang.Object[] objArray7 = cardanEulerSingularityException6.getArguments();
        java.lang.Object[] objArray8 = cardanEulerSingularityException6.getArguments();
        cardanEulerSingularityException1.addSuppressed((java.lang.Throwable) cardanEulerSingularityException6);
        java.lang.String str10 = cardanEulerSingularityException1.getPattern();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException12 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray13 = cardanEulerSingularityException12.getArguments();
        java.lang.Object[] objArray14 = cardanEulerSingularityException12.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException16 = new org.apache.commons.math.geometry.CardanEulerSingularityException(true);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException18 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        cardanEulerSingularityException16.addSuppressed((java.lang.Throwable) cardanEulerSingularityException18);
        cardanEulerSingularityException12.addSuppressed((java.lang.Throwable) cardanEulerSingularityException16);
        java.lang.String str21 = cardanEulerSingularityException12.getPattern();
        cardanEulerSingularityException1.addSuppressed((java.lang.Throwable) cardanEulerSingularityException12);
        java.lang.Object[] objArray23 = cardanEulerSingularityException1.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException25 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.String str26 = cardanEulerSingularityException25.getPattern();
        java.lang.Object[] objArray27 = cardanEulerSingularityException25.getArguments();
        java.lang.String str28 = cardanEulerSingularityException25.getPattern();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException30 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.String str31 = cardanEulerSingularityException30.getPattern();
        java.lang.Throwable[] throwableArray32 = cardanEulerSingularityException30.getSuppressed();
        cardanEulerSingularityException25.addSuppressed((java.lang.Throwable) cardanEulerSingularityException30);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException35 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.String str36 = cardanEulerSingularityException35.getPattern();
        java.lang.Object[] objArray37 = cardanEulerSingularityException35.getArguments();
        java.lang.String str38 = cardanEulerSingularityException35.getPattern();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException40 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.String str41 = cardanEulerSingularityException40.getPattern();
        java.lang.Throwable[] throwableArray42 = cardanEulerSingularityException40.getSuppressed();
        cardanEulerSingularityException35.addSuppressed((java.lang.Throwable) cardanEulerSingularityException40);
        cardanEulerSingularityException25.addSuppressed((java.lang.Throwable) cardanEulerSingularityException35);
        java.lang.Object[] objArray45 = cardanEulerSingularityException35.getArguments();
        cardanEulerSingularityException1.addSuppressed((java.lang.Throwable) cardanEulerSingularityException35);
        java.lang.Throwable[] throwableArray47 = cardanEulerSingularityException1.getSuppressed();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException49 = new org.apache.commons.math.geometry.CardanEulerSingularityException(true);
        java.lang.String str50 = cardanEulerSingularityException49.getPattern();
        java.lang.String str51 = cardanEulerSingularityException49.getPattern();
        cardanEulerSingularityException1.addSuppressed((java.lang.Throwable) cardanEulerSingularityException49);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException54 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray55 = cardanEulerSingularityException54.getArguments();
        java.lang.Object[] objArray56 = cardanEulerSingularityException54.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException58 = new org.apache.commons.math.geometry.CardanEulerSingularityException(true);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException60 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        cardanEulerSingularityException58.addSuppressed((java.lang.Throwable) cardanEulerSingularityException60);
        cardanEulerSingularityException54.addSuppressed((java.lang.Throwable) cardanEulerSingularityException58);
        java.lang.Throwable[] throwableArray63 = cardanEulerSingularityException54.getSuppressed();
        cardanEulerSingularityException49.addSuppressed((java.lang.Throwable) cardanEulerSingularityException54);
        java.lang.Throwable[] throwableArray65 = cardanEulerSingularityException49.getSuppressed();
        org.junit.Assert.assertNotNull(objArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray2), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray2), "[]");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Euler angles singularity" + "'", str3, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray4), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray4), "[]");
        org.junit.Assert.assertNotNull(objArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray7), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray7), "[]");
        org.junit.Assert.assertNotNull(objArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray8), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray8), "[]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Euler angles singularity" + "'", str10, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray13), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray13), "[]");
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "Euler angles singularity" + "'", str21, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray23), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray23), "[]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "Euler angles singularity" + "'", str26, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray27), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray27), "[]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "Euler angles singularity" + "'", str28, "Euler angles singularity");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "Euler angles singularity" + "'", str31, "Euler angles singularity");
        org.junit.Assert.assertNotNull(throwableArray32);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "Euler angles singularity" + "'", str36, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray37), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray37), "[]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "Euler angles singularity" + "'", str38, "Euler angles singularity");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "Euler angles singularity" + "'", str41, "Euler angles singularity");
        org.junit.Assert.assertNotNull(throwableArray42);
        org.junit.Assert.assertNotNull(objArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray45), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray45), "[]");
        org.junit.Assert.assertNotNull(throwableArray47);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "Cardan angles singularity" + "'", str50, "Cardan angles singularity");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "Cardan angles singularity" + "'", str51, "Cardan angles singularity");
        org.junit.Assert.assertNotNull(objArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray55), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray55), "[]");
        org.junit.Assert.assertNotNull(objArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray56), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray56), "[]");
        org.junit.Assert.assertNotNull(throwableArray63);
        org.junit.Assert.assertNotNull(throwableArray65);
    }

    @Test
    public void test1621() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1621");
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException1 = new org.apache.commons.math.geometry.CardanEulerSingularityException(true);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException3 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        cardanEulerSingularityException1.addSuppressed((java.lang.Throwable) cardanEulerSingularityException3);
        java.lang.String str5 = cardanEulerSingularityException3.getPattern();
        java.lang.Throwable[] throwableArray6 = cardanEulerSingularityException3.getSuppressed();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException8 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.String str9 = cardanEulerSingularityException8.getPattern();
        java.lang.Object[] objArray10 = cardanEulerSingularityException8.getArguments();
        java.lang.String str11 = cardanEulerSingularityException8.getPattern();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException13 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.String str14 = cardanEulerSingularityException13.getPattern();
        java.lang.Throwable[] throwableArray15 = cardanEulerSingularityException13.getSuppressed();
        cardanEulerSingularityException8.addSuppressed((java.lang.Throwable) cardanEulerSingularityException13);
        cardanEulerSingularityException3.addSuppressed((java.lang.Throwable) cardanEulerSingularityException13);
        java.lang.String str18 = cardanEulerSingularityException13.toString();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Euler angles singularity" + "'", str5, "Euler angles singularity");
        org.junit.Assert.assertNotNull(throwableArray6);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Euler angles singularity" + "'", str9, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray10), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray10), "[]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Euler angles singularity" + "'", str11, "Euler angles singularity");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "Euler angles singularity" + "'", str14, "Euler angles singularity");
        org.junit.Assert.assertNotNull(throwableArray15);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "org.apache.commons.math.geometry.CardanEulerSingularityException: Euler angles singularity" + "'", str18, "org.apache.commons.math.geometry.CardanEulerSingularityException: Euler angles singularity");
    }

    @Test
    public void test1622() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1622");
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException1 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray2 = cardanEulerSingularityException1.getArguments();
        java.lang.Object[] objArray3 = cardanEulerSingularityException1.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException5 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray6 = cardanEulerSingularityException5.getArguments();
        cardanEulerSingularityException1.addSuppressed((java.lang.Throwable) cardanEulerSingularityException5);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException9 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray10 = cardanEulerSingularityException9.getArguments();
        java.lang.Object[] objArray11 = cardanEulerSingularityException9.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException13 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray14 = cardanEulerSingularityException13.getArguments();
        cardanEulerSingularityException9.addSuppressed((java.lang.Throwable) cardanEulerSingularityException13);
        java.lang.Throwable[] throwableArray16 = cardanEulerSingularityException13.getSuppressed();
        java.lang.Object[] objArray17 = cardanEulerSingularityException13.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException19 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray20 = cardanEulerSingularityException19.getArguments();
        java.lang.Object[] objArray21 = cardanEulerSingularityException19.getArguments();
        java.lang.Object[] objArray22 = cardanEulerSingularityException19.getArguments();
        cardanEulerSingularityException13.addSuppressed((java.lang.Throwable) cardanEulerSingularityException19);
        java.lang.String str24 = cardanEulerSingularityException13.getPattern();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException26 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray27 = cardanEulerSingularityException26.getArguments();
        java.lang.Object[] objArray28 = cardanEulerSingularityException26.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException30 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray31 = cardanEulerSingularityException30.getArguments();
        cardanEulerSingularityException26.addSuppressed((java.lang.Throwable) cardanEulerSingularityException30);
        java.lang.Object[] objArray33 = cardanEulerSingularityException30.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException35 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray36 = cardanEulerSingularityException35.getArguments();
        java.lang.Throwable[] throwableArray37 = cardanEulerSingularityException35.getSuppressed();
        java.lang.String str38 = cardanEulerSingularityException35.getPattern();
        cardanEulerSingularityException30.addSuppressed((java.lang.Throwable) cardanEulerSingularityException35);
        java.lang.Object[] objArray40 = cardanEulerSingularityException30.getArguments();
        java.lang.String str41 = cardanEulerSingularityException30.getPattern();
        java.lang.Object[] objArray42 = cardanEulerSingularityException30.getArguments();
        cardanEulerSingularityException13.addSuppressed((java.lang.Throwable) cardanEulerSingularityException30);
        cardanEulerSingularityException5.addSuppressed((java.lang.Throwable) cardanEulerSingularityException13);
        org.junit.Assert.assertNotNull(objArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray2), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray2), "[]");
        org.junit.Assert.assertNotNull(objArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray3), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray3), "[]");
        org.junit.Assert.assertNotNull(objArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray6), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray6), "[]");
        org.junit.Assert.assertNotNull(objArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray10), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray10), "[]");
        org.junit.Assert.assertNotNull(objArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray11), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray11), "[]");
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[]");
        org.junit.Assert.assertNotNull(throwableArray16);
        org.junit.Assert.assertNotNull(objArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray17), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray17), "[]");
        org.junit.Assert.assertNotNull(objArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray20), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray20), "[]");
        org.junit.Assert.assertNotNull(objArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray21), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray21), "[]");
        org.junit.Assert.assertNotNull(objArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray22), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray22), "[]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "Euler angles singularity" + "'", str24, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray27), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray27), "[]");
        org.junit.Assert.assertNotNull(objArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray28), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray28), "[]");
        org.junit.Assert.assertNotNull(objArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray31), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray31), "[]");
        org.junit.Assert.assertNotNull(objArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray33), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray33), "[]");
        org.junit.Assert.assertNotNull(objArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray36), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray36), "[]");
        org.junit.Assert.assertNotNull(throwableArray37);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "Euler angles singularity" + "'", str38, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray40), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray40), "[]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "Euler angles singularity" + "'", str41, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray42), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray42), "[]");
    }

    @Test
    public void test1623() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1623");
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException1 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray2 = cardanEulerSingularityException1.getArguments();
        java.lang.Object[] objArray3 = cardanEulerSingularityException1.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException5 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray6 = cardanEulerSingularityException5.getArguments();
        cardanEulerSingularityException1.addSuppressed((java.lang.Throwable) cardanEulerSingularityException5);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException9 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray10 = cardanEulerSingularityException9.getArguments();
        java.lang.String str11 = cardanEulerSingularityException9.getPattern();
        java.lang.Object[] objArray12 = cardanEulerSingularityException9.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException14 = new org.apache.commons.math.geometry.CardanEulerSingularityException(true);
        java.lang.Object[] objArray15 = cardanEulerSingularityException14.getArguments();
        java.lang.Object[] objArray16 = cardanEulerSingularityException14.getArguments();
        java.lang.String str17 = cardanEulerSingularityException14.getPattern();
        java.lang.String str18 = cardanEulerSingularityException14.getPattern();
        cardanEulerSingularityException9.addSuppressed((java.lang.Throwable) cardanEulerSingularityException14);
        java.lang.Throwable[] throwableArray20 = cardanEulerSingularityException14.getSuppressed();
        java.lang.Object[] objArray21 = cardanEulerSingularityException14.getArguments();
        java.lang.String str22 = cardanEulerSingularityException14.getPattern();
        java.lang.String str23 = cardanEulerSingularityException14.getPattern();
        cardanEulerSingularityException1.addSuppressed((java.lang.Throwable) cardanEulerSingularityException14);
        java.lang.Object[] objArray25 = cardanEulerSingularityException14.getArguments();
        org.junit.Assert.assertNotNull(objArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray2), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray2), "[]");
        org.junit.Assert.assertNotNull(objArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray3), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray3), "[]");
        org.junit.Assert.assertNotNull(objArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray6), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray6), "[]");
        org.junit.Assert.assertNotNull(objArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray10), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray10), "[]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Euler angles singularity" + "'", str11, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray12), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray12), "[]");
        org.junit.Assert.assertNotNull(objArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray15), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray15), "[]");
        org.junit.Assert.assertNotNull(objArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray16), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray16), "[]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "Cardan angles singularity" + "'", str17, "Cardan angles singularity");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "Cardan angles singularity" + "'", str18, "Cardan angles singularity");
        org.junit.Assert.assertNotNull(throwableArray20);
        org.junit.Assert.assertNotNull(objArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray21), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray21), "[]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "Cardan angles singularity" + "'", str22, "Cardan angles singularity");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "Cardan angles singularity" + "'", str23, "Cardan angles singularity");
        org.junit.Assert.assertNotNull(objArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray25), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray25), "[]");
    }

    @Test
    public void test1624() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1624");
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException1 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray2 = cardanEulerSingularityException1.getArguments();
        java.lang.Object[] objArray3 = cardanEulerSingularityException1.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException5 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray6 = cardanEulerSingularityException5.getArguments();
        cardanEulerSingularityException1.addSuppressed((java.lang.Throwable) cardanEulerSingularityException5);
        java.lang.Throwable[] throwableArray8 = cardanEulerSingularityException5.getSuppressed();
        java.lang.Object[] objArray9 = cardanEulerSingularityException5.getArguments();
        java.lang.Throwable[] throwableArray10 = cardanEulerSingularityException5.getSuppressed();
        java.lang.Object[] objArray11 = cardanEulerSingularityException5.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException13 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.String str14 = cardanEulerSingularityException13.getPattern();
        java.lang.Object[] objArray15 = cardanEulerSingularityException13.getArguments();
        java.lang.String str16 = cardanEulerSingularityException13.getPattern();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException18 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.String str19 = cardanEulerSingularityException18.getPattern();
        java.lang.Throwable[] throwableArray20 = cardanEulerSingularityException18.getSuppressed();
        cardanEulerSingularityException13.addSuppressed((java.lang.Throwable) cardanEulerSingularityException18);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException23 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.String str24 = cardanEulerSingularityException23.getPattern();
        java.lang.Object[] objArray25 = cardanEulerSingularityException23.getArguments();
        java.lang.String str26 = cardanEulerSingularityException23.getPattern();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException28 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.String str29 = cardanEulerSingularityException28.getPattern();
        java.lang.Throwable[] throwableArray30 = cardanEulerSingularityException28.getSuppressed();
        cardanEulerSingularityException23.addSuppressed((java.lang.Throwable) cardanEulerSingularityException28);
        cardanEulerSingularityException13.addSuppressed((java.lang.Throwable) cardanEulerSingularityException23);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException34 = new org.apache.commons.math.geometry.CardanEulerSingularityException(true);
        cardanEulerSingularityException13.addSuppressed((java.lang.Throwable) cardanEulerSingularityException34);
        java.lang.Object[] objArray36 = cardanEulerSingularityException13.getArguments();
        java.lang.Throwable[] throwableArray37 = cardanEulerSingularityException13.getSuppressed();
        java.lang.String str38 = cardanEulerSingularityException13.getPattern();
        cardanEulerSingularityException5.addSuppressed((java.lang.Throwable) cardanEulerSingularityException13);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException41 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.String str42 = cardanEulerSingularityException41.getPattern();
        java.lang.Object[] objArray43 = cardanEulerSingularityException41.getArguments();
        java.lang.String str44 = cardanEulerSingularityException41.getPattern();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException46 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.String str47 = cardanEulerSingularityException46.getPattern();
        java.lang.Throwable[] throwableArray48 = cardanEulerSingularityException46.getSuppressed();
        cardanEulerSingularityException41.addSuppressed((java.lang.Throwable) cardanEulerSingularityException46);
        cardanEulerSingularityException13.addSuppressed((java.lang.Throwable) cardanEulerSingularityException41);
        java.lang.Object[] objArray51 = cardanEulerSingularityException41.getArguments();
        java.lang.String str52 = cardanEulerSingularityException41.getPattern();
        java.lang.String str53 = cardanEulerSingularityException41.getPattern();
        org.junit.Assert.assertNotNull(objArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray2), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray2), "[]");
        org.junit.Assert.assertNotNull(objArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray3), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray3), "[]");
        org.junit.Assert.assertNotNull(objArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray6), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray6), "[]");
        org.junit.Assert.assertNotNull(throwableArray8);
        org.junit.Assert.assertNotNull(objArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray9), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray9), "[]");
        org.junit.Assert.assertNotNull(throwableArray10);
        org.junit.Assert.assertNotNull(objArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray11), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray11), "[]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "Euler angles singularity" + "'", str14, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray15), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray15), "[]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "Euler angles singularity" + "'", str16, "Euler angles singularity");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "Euler angles singularity" + "'", str19, "Euler angles singularity");
        org.junit.Assert.assertNotNull(throwableArray20);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "Euler angles singularity" + "'", str24, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray25), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray25), "[]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "Euler angles singularity" + "'", str26, "Euler angles singularity");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "Euler angles singularity" + "'", str29, "Euler angles singularity");
        org.junit.Assert.assertNotNull(throwableArray30);
        org.junit.Assert.assertNotNull(objArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray36), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray36), "[]");
        org.junit.Assert.assertNotNull(throwableArray37);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "Euler angles singularity" + "'", str38, "Euler angles singularity");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "Euler angles singularity" + "'", str42, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray43), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray43), "[]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "Euler angles singularity" + "'", str44, "Euler angles singularity");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "Euler angles singularity" + "'", str47, "Euler angles singularity");
        org.junit.Assert.assertNotNull(throwableArray48);
        org.junit.Assert.assertNotNull(objArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray51), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray51), "[]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "Euler angles singularity" + "'", str52, "Euler angles singularity");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "Euler angles singularity" + "'", str53, "Euler angles singularity");
    }

    @Test
    public void test1625() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1625");
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException1 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray2 = cardanEulerSingularityException1.getArguments();
        java.lang.Object[] objArray3 = cardanEulerSingularityException1.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException5 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.String str6 = cardanEulerSingularityException5.getPattern();
        java.lang.Object[] objArray7 = cardanEulerSingularityException5.getArguments();
        java.lang.String str8 = cardanEulerSingularityException5.getPattern();
        java.lang.String str9 = cardanEulerSingularityException5.getPattern();
        java.lang.Object[] objArray10 = cardanEulerSingularityException5.getArguments();
        cardanEulerSingularityException1.addSuppressed((java.lang.Throwable) cardanEulerSingularityException5);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException13 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray14 = cardanEulerSingularityException13.getArguments();
        java.lang.String str15 = cardanEulerSingularityException13.getPattern();
        java.lang.Object[] objArray16 = cardanEulerSingularityException13.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException18 = new org.apache.commons.math.geometry.CardanEulerSingularityException(true);
        java.lang.Object[] objArray19 = cardanEulerSingularityException18.getArguments();
        java.lang.Throwable[] throwableArray20 = cardanEulerSingularityException18.getSuppressed();
        java.lang.Throwable[] throwableArray21 = cardanEulerSingularityException18.getSuppressed();
        java.lang.Throwable[] throwableArray22 = cardanEulerSingularityException18.getSuppressed();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException24 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray25 = cardanEulerSingularityException24.getArguments();
        java.lang.Object[] objArray26 = cardanEulerSingularityException24.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException28 = new org.apache.commons.math.geometry.CardanEulerSingularityException(true);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException30 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        cardanEulerSingularityException28.addSuppressed((java.lang.Throwable) cardanEulerSingularityException30);
        cardanEulerSingularityException24.addSuppressed((java.lang.Throwable) cardanEulerSingularityException28);
        cardanEulerSingularityException18.addSuppressed((java.lang.Throwable) cardanEulerSingularityException24);
        cardanEulerSingularityException13.addSuppressed((java.lang.Throwable) cardanEulerSingularityException18);
        java.lang.Throwable[] throwableArray35 = cardanEulerSingularityException13.getSuppressed();
        java.lang.Throwable[] throwableArray36 = cardanEulerSingularityException13.getSuppressed();
        cardanEulerSingularityException1.addSuppressed((java.lang.Throwable) cardanEulerSingularityException13);
        java.lang.Object[] objArray38 = cardanEulerSingularityException1.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException40 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray41 = cardanEulerSingularityException40.getArguments();
        java.lang.Object[] objArray42 = cardanEulerSingularityException40.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException44 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray45 = cardanEulerSingularityException44.getArguments();
        cardanEulerSingularityException40.addSuppressed((java.lang.Throwable) cardanEulerSingularityException44);
        java.lang.Throwable[] throwableArray47 = cardanEulerSingularityException40.getSuppressed();
        java.lang.String str48 = cardanEulerSingularityException40.getPattern();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException50 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray51 = cardanEulerSingularityException50.getArguments();
        java.lang.String str52 = cardanEulerSingularityException50.getPattern();
        java.lang.Object[] objArray53 = cardanEulerSingularityException50.getArguments();
        java.lang.Object[] objArray54 = cardanEulerSingularityException50.getArguments();
        java.lang.String str55 = cardanEulerSingularityException50.getPattern();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException57 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        cardanEulerSingularityException50.addSuppressed((java.lang.Throwable) cardanEulerSingularityException57);
        cardanEulerSingularityException40.addSuppressed((java.lang.Throwable) cardanEulerSingularityException57);
        java.lang.Object[] objArray60 = cardanEulerSingularityException57.getArguments();
        java.lang.Object[] objArray61 = cardanEulerSingularityException57.getArguments();
        java.lang.Object[] objArray62 = cardanEulerSingularityException57.getArguments();
        java.lang.Throwable[] throwableArray63 = cardanEulerSingularityException57.getSuppressed();
        cardanEulerSingularityException1.addSuppressed((java.lang.Throwable) cardanEulerSingularityException57);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException66 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray67 = cardanEulerSingularityException66.getArguments();
        java.lang.String str68 = cardanEulerSingularityException66.getPattern();
        java.lang.Object[] objArray69 = cardanEulerSingularityException66.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException71 = new org.apache.commons.math.geometry.CardanEulerSingularityException(true);
        java.lang.Object[] objArray72 = cardanEulerSingularityException71.getArguments();
        java.lang.Object[] objArray73 = cardanEulerSingularityException71.getArguments();
        cardanEulerSingularityException66.addSuppressed((java.lang.Throwable) cardanEulerSingularityException71);
        java.lang.Object[] objArray75 = cardanEulerSingularityException71.getArguments();
        java.lang.Throwable[] throwableArray76 = cardanEulerSingularityException71.getSuppressed();
        java.lang.Throwable[] throwableArray77 = cardanEulerSingularityException71.getSuppressed();
        java.lang.String str78 = cardanEulerSingularityException71.getPattern();
        cardanEulerSingularityException1.addSuppressed((java.lang.Throwable) cardanEulerSingularityException71);
        java.lang.String str80 = cardanEulerSingularityException1.toString();
        org.junit.Assert.assertNotNull(objArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray2), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray2), "[]");
        org.junit.Assert.assertNotNull(objArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray3), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray3), "[]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "Euler angles singularity" + "'", str6, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray7), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray7), "[]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Euler angles singularity" + "'", str8, "Euler angles singularity");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Euler angles singularity" + "'", str9, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray10), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray10), "[]");
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Euler angles singularity" + "'", str15, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray16), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray16), "[]");
        org.junit.Assert.assertNotNull(objArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray19), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray19), "[]");
        org.junit.Assert.assertNotNull(throwableArray20);
        org.junit.Assert.assertNotNull(throwableArray21);
        org.junit.Assert.assertNotNull(throwableArray22);
        org.junit.Assert.assertNotNull(objArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray25), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray25), "[]");
        org.junit.Assert.assertNotNull(objArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray26), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray26), "[]");
        org.junit.Assert.assertNotNull(throwableArray35);
        org.junit.Assert.assertNotNull(throwableArray36);
        org.junit.Assert.assertNotNull(objArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray38), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray38), "[]");
        org.junit.Assert.assertNotNull(objArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray41), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray41), "[]");
        org.junit.Assert.assertNotNull(objArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray42), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray42), "[]");
        org.junit.Assert.assertNotNull(objArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray45), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray45), "[]");
        org.junit.Assert.assertNotNull(throwableArray47);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "Euler angles singularity" + "'", str48, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray51), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray51), "[]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "Euler angles singularity" + "'", str52, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray53), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray53), "[]");
        org.junit.Assert.assertNotNull(objArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray54), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray54), "[]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "Euler angles singularity" + "'", str55, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray60), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray60), "[]");
        org.junit.Assert.assertNotNull(objArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray61), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray61), "[]");
        org.junit.Assert.assertNotNull(objArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray62), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray62), "[]");
        org.junit.Assert.assertNotNull(throwableArray63);
        org.junit.Assert.assertNotNull(objArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray67), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray67), "[]");
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "Euler angles singularity" + "'", str68, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray69), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray69), "[]");
        org.junit.Assert.assertNotNull(objArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray72), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray72), "[]");
        org.junit.Assert.assertNotNull(objArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray73), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray73), "[]");
        org.junit.Assert.assertNotNull(objArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray75), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray75), "[]");
        org.junit.Assert.assertNotNull(throwableArray76);
        org.junit.Assert.assertNotNull(throwableArray77);
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "Cardan angles singularity" + "'", str78, "Cardan angles singularity");
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "org.apache.commons.math.geometry.CardanEulerSingularityException: Euler angles singularity" + "'", str80, "org.apache.commons.math.geometry.CardanEulerSingularityException: Euler angles singularity");
    }

    @Test
    public void test1626() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1626");
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException1 = new org.apache.commons.math.geometry.CardanEulerSingularityException(true);
        java.lang.Object[] objArray2 = cardanEulerSingularityException1.getArguments();
        java.lang.Object[] objArray3 = cardanEulerSingularityException1.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException5 = new org.apache.commons.math.geometry.CardanEulerSingularityException(true);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException7 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        cardanEulerSingularityException5.addSuppressed((java.lang.Throwable) cardanEulerSingularityException7);
        java.lang.String str9 = cardanEulerSingularityException7.getPattern();
        java.lang.String str10 = cardanEulerSingularityException7.getPattern();
        cardanEulerSingularityException1.addSuppressed((java.lang.Throwable) cardanEulerSingularityException7);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException13 = new org.apache.commons.math.geometry.CardanEulerSingularityException(true);
        java.lang.Object[] objArray14 = cardanEulerSingularityException13.getArguments();
        java.lang.Throwable[] throwableArray15 = cardanEulerSingularityException13.getSuppressed();
        java.lang.Throwable[] throwableArray16 = cardanEulerSingularityException13.getSuppressed();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException18 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray19 = cardanEulerSingularityException18.getArguments();
        java.lang.Object[] objArray20 = cardanEulerSingularityException18.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException22 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray23 = cardanEulerSingularityException22.getArguments();
        cardanEulerSingularityException18.addSuppressed((java.lang.Throwable) cardanEulerSingularityException22);
        java.lang.Object[] objArray25 = cardanEulerSingularityException22.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException27 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray28 = cardanEulerSingularityException27.getArguments();
        java.lang.Throwable[] throwableArray29 = cardanEulerSingularityException27.getSuppressed();
        java.lang.String str30 = cardanEulerSingularityException27.getPattern();
        cardanEulerSingularityException22.addSuppressed((java.lang.Throwable) cardanEulerSingularityException27);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException33 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray34 = cardanEulerSingularityException33.getArguments();
        java.lang.Object[] objArray35 = cardanEulerSingularityException33.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException37 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray38 = cardanEulerSingularityException37.getArguments();
        cardanEulerSingularityException33.addSuppressed((java.lang.Throwable) cardanEulerSingularityException37);
        java.lang.Throwable[] throwableArray40 = cardanEulerSingularityException33.getSuppressed();
        java.lang.String str41 = cardanEulerSingularityException33.getPattern();
        cardanEulerSingularityException22.addSuppressed((java.lang.Throwable) cardanEulerSingularityException33);
        cardanEulerSingularityException13.addSuppressed((java.lang.Throwable) cardanEulerSingularityException33);
        cardanEulerSingularityException7.addSuppressed((java.lang.Throwable) cardanEulerSingularityException13);
        java.lang.Object[] objArray45 = cardanEulerSingularityException13.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException47 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray48 = cardanEulerSingularityException47.getArguments();
        java.lang.Throwable[] throwableArray49 = cardanEulerSingularityException47.getSuppressed();
        java.lang.String str50 = cardanEulerSingularityException47.getPattern();
        java.lang.Throwable[] throwableArray51 = cardanEulerSingularityException47.getSuppressed();
        java.lang.String str52 = cardanEulerSingularityException47.getPattern();
        java.lang.Throwable[] throwableArray53 = cardanEulerSingularityException47.getSuppressed();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException55 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray56 = cardanEulerSingularityException55.getArguments();
        java.lang.String str57 = cardanEulerSingularityException55.getPattern();
        java.lang.Object[] objArray58 = cardanEulerSingularityException55.getArguments();
        java.lang.Object[] objArray59 = cardanEulerSingularityException55.getArguments();
        java.lang.String str60 = cardanEulerSingularityException55.getPattern();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException62 = new org.apache.commons.math.geometry.CardanEulerSingularityException(true);
        java.lang.Object[] objArray63 = cardanEulerSingularityException62.getArguments();
        java.lang.Throwable[] throwableArray64 = cardanEulerSingularityException62.getSuppressed();
        java.lang.Throwable[] throwableArray65 = cardanEulerSingularityException62.getSuppressed();
        cardanEulerSingularityException55.addSuppressed((java.lang.Throwable) cardanEulerSingularityException62);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException68 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray69 = cardanEulerSingularityException68.getArguments();
        java.lang.Object[] objArray70 = cardanEulerSingularityException68.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException72 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray73 = cardanEulerSingularityException72.getArguments();
        cardanEulerSingularityException68.addSuppressed((java.lang.Throwable) cardanEulerSingularityException72);
        java.lang.Throwable[] throwableArray75 = cardanEulerSingularityException72.getSuppressed();
        java.lang.Object[] objArray76 = cardanEulerSingularityException72.getArguments();
        cardanEulerSingularityException55.addSuppressed((java.lang.Throwable) cardanEulerSingularityException72);
        cardanEulerSingularityException47.addSuppressed((java.lang.Throwable) cardanEulerSingularityException72);
        java.lang.Object[] objArray79 = cardanEulerSingularityException72.getArguments();
        cardanEulerSingularityException13.addSuppressed((java.lang.Throwable) cardanEulerSingularityException72);
        org.junit.Assert.assertNotNull(objArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray2), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray2), "[]");
        org.junit.Assert.assertNotNull(objArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray3), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray3), "[]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Euler angles singularity" + "'", str9, "Euler angles singularity");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Euler angles singularity" + "'", str10, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[]");
        org.junit.Assert.assertNotNull(throwableArray15);
        org.junit.Assert.assertNotNull(throwableArray16);
        org.junit.Assert.assertNotNull(objArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray19), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray19), "[]");
        org.junit.Assert.assertNotNull(objArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray20), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray20), "[]");
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray23), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray23), "[]");
        org.junit.Assert.assertNotNull(objArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray25), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray25), "[]");
        org.junit.Assert.assertNotNull(objArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray28), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray28), "[]");
        org.junit.Assert.assertNotNull(throwableArray29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "Euler angles singularity" + "'", str30, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray34), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray34), "[]");
        org.junit.Assert.assertNotNull(objArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray35), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray35), "[]");
        org.junit.Assert.assertNotNull(objArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray38), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray38), "[]");
        org.junit.Assert.assertNotNull(throwableArray40);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "Euler angles singularity" + "'", str41, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray45), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray45), "[]");
        org.junit.Assert.assertNotNull(objArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray48), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray48), "[]");
        org.junit.Assert.assertNotNull(throwableArray49);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "Euler angles singularity" + "'", str50, "Euler angles singularity");
        org.junit.Assert.assertNotNull(throwableArray51);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "Euler angles singularity" + "'", str52, "Euler angles singularity");
        org.junit.Assert.assertNotNull(throwableArray53);
        org.junit.Assert.assertNotNull(objArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray56), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray56), "[]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "Euler angles singularity" + "'", str57, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray58), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray58), "[]");
        org.junit.Assert.assertNotNull(objArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray59), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray59), "[]");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "Euler angles singularity" + "'", str60, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray63), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray63), "[]");
        org.junit.Assert.assertNotNull(throwableArray64);
        org.junit.Assert.assertNotNull(throwableArray65);
        org.junit.Assert.assertNotNull(objArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray69), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray69), "[]");
        org.junit.Assert.assertNotNull(objArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray70), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray70), "[]");
        org.junit.Assert.assertNotNull(objArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray73), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray73), "[]");
        org.junit.Assert.assertNotNull(throwableArray75);
        org.junit.Assert.assertNotNull(objArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray76), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray76), "[]");
        org.junit.Assert.assertNotNull(objArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray79), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray79), "[]");
    }

    @Test
    public void test1627() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1627");
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException1 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray2 = cardanEulerSingularityException1.getArguments();
        java.lang.Object[] objArray3 = cardanEulerSingularityException1.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException5 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray6 = cardanEulerSingularityException5.getArguments();
        cardanEulerSingularityException1.addSuppressed((java.lang.Throwable) cardanEulerSingularityException5);
        java.lang.Object[] objArray8 = cardanEulerSingularityException5.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException10 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray11 = cardanEulerSingularityException10.getArguments();
        java.lang.Throwable[] throwableArray12 = cardanEulerSingularityException10.getSuppressed();
        java.lang.String str13 = cardanEulerSingularityException10.getPattern();
        cardanEulerSingularityException5.addSuppressed((java.lang.Throwable) cardanEulerSingularityException10);
        java.lang.Object[] objArray15 = cardanEulerSingularityException5.getArguments();
        java.lang.Throwable[] throwableArray16 = cardanEulerSingularityException5.getSuppressed();
        java.lang.Object[] objArray17 = cardanEulerSingularityException5.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException19 = new org.apache.commons.math.geometry.CardanEulerSingularityException(true);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException21 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        cardanEulerSingularityException19.addSuppressed((java.lang.Throwable) cardanEulerSingularityException21);
        java.lang.Throwable[] throwableArray23 = cardanEulerSingularityException19.getSuppressed();
        cardanEulerSingularityException5.addSuppressed((java.lang.Throwable) cardanEulerSingularityException19);
        java.lang.String str25 = cardanEulerSingularityException5.getPattern();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException27 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.String str28 = cardanEulerSingularityException27.getPattern();
        java.lang.Object[] objArray29 = cardanEulerSingularityException27.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException31 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray32 = cardanEulerSingularityException31.getArguments();
        java.lang.Object[] objArray33 = cardanEulerSingularityException31.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException35 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray36 = cardanEulerSingularityException35.getArguments();
        cardanEulerSingularityException31.addSuppressed((java.lang.Throwable) cardanEulerSingularityException35);
        java.lang.String str38 = cardanEulerSingularityException31.getPattern();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException40 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray41 = cardanEulerSingularityException40.getArguments();
        java.lang.String str42 = cardanEulerSingularityException40.getPattern();
        cardanEulerSingularityException31.addSuppressed((java.lang.Throwable) cardanEulerSingularityException40);
        java.lang.Throwable[] throwableArray44 = cardanEulerSingularityException40.getSuppressed();
        java.lang.Object[] objArray45 = cardanEulerSingularityException40.getArguments();
        cardanEulerSingularityException27.addSuppressed((java.lang.Throwable) cardanEulerSingularityException40);
        cardanEulerSingularityException5.addSuppressed((java.lang.Throwable) cardanEulerSingularityException27);
        java.lang.String str48 = cardanEulerSingularityException27.toString();
        org.junit.Assert.assertNotNull(objArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray2), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray2), "[]");
        org.junit.Assert.assertNotNull(objArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray3), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray3), "[]");
        org.junit.Assert.assertNotNull(objArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray6), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray6), "[]");
        org.junit.Assert.assertNotNull(objArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray8), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray8), "[]");
        org.junit.Assert.assertNotNull(objArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray11), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray11), "[]");
        org.junit.Assert.assertNotNull(throwableArray12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Euler angles singularity" + "'", str13, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray15), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray15), "[]");
        org.junit.Assert.assertNotNull(throwableArray16);
        org.junit.Assert.assertNotNull(objArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray17), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray17), "[]");
        org.junit.Assert.assertNotNull(throwableArray23);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "Euler angles singularity" + "'", str25, "Euler angles singularity");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "Euler angles singularity" + "'", str28, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray29), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray29), "[]");
        org.junit.Assert.assertNotNull(objArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray32), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray32), "[]");
        org.junit.Assert.assertNotNull(objArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray33), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray33), "[]");
        org.junit.Assert.assertNotNull(objArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray36), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray36), "[]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "Euler angles singularity" + "'", str38, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray41), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray41), "[]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "Euler angles singularity" + "'", str42, "Euler angles singularity");
        org.junit.Assert.assertNotNull(throwableArray44);
        org.junit.Assert.assertNotNull(objArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray45), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray45), "[]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "org.apache.commons.math.geometry.CardanEulerSingularityException: Euler angles singularity" + "'", str48, "org.apache.commons.math.geometry.CardanEulerSingularityException: Euler angles singularity");
    }

    @Test
    public void test1628() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1628");
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException1 = new org.apache.commons.math.geometry.CardanEulerSingularityException(true);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException3 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        cardanEulerSingularityException1.addSuppressed((java.lang.Throwable) cardanEulerSingularityException3);
        java.lang.String str5 = cardanEulerSingularityException3.getPattern();
        java.lang.String str6 = cardanEulerSingularityException3.getPattern();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException8 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray9 = cardanEulerSingularityException8.getArguments();
        java.lang.Object[] objArray10 = cardanEulerSingularityException8.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException12 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray13 = cardanEulerSingularityException12.getArguments();
        cardanEulerSingularityException8.addSuppressed((java.lang.Throwable) cardanEulerSingularityException12);
        java.lang.Throwable[] throwableArray15 = cardanEulerSingularityException8.getSuppressed();
        java.lang.String str16 = cardanEulerSingularityException8.getPattern();
        java.lang.Object[] objArray17 = cardanEulerSingularityException8.getArguments();
        java.lang.Object[] objArray18 = cardanEulerSingularityException8.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException20 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray21 = cardanEulerSingularityException20.getArguments();
        java.lang.Object[] objArray22 = cardanEulerSingularityException20.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException24 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray25 = cardanEulerSingularityException24.getArguments();
        cardanEulerSingularityException20.addSuppressed((java.lang.Throwable) cardanEulerSingularityException24);
        java.lang.Throwable[] throwableArray27 = cardanEulerSingularityException20.getSuppressed();
        java.lang.String str28 = cardanEulerSingularityException20.getPattern();
        java.lang.String str29 = cardanEulerSingularityException20.getPattern();
        java.lang.String str30 = cardanEulerSingularityException20.getPattern();
        java.lang.Throwable[] throwableArray31 = cardanEulerSingularityException20.getSuppressed();
        cardanEulerSingularityException8.addSuppressed((java.lang.Throwable) cardanEulerSingularityException20);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException34 = new org.apache.commons.math.geometry.CardanEulerSingularityException(true);
        java.lang.Object[] objArray35 = cardanEulerSingularityException34.getArguments();
        java.lang.Object[] objArray36 = cardanEulerSingularityException34.getArguments();
        java.lang.Object[] objArray37 = cardanEulerSingularityException34.getArguments();
        java.lang.String str38 = cardanEulerSingularityException34.getPattern();
        cardanEulerSingularityException20.addSuppressed((java.lang.Throwable) cardanEulerSingularityException34);
        cardanEulerSingularityException3.addSuppressed((java.lang.Throwable) cardanEulerSingularityException34);
        java.lang.String str41 = cardanEulerSingularityException34.getPattern();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Euler angles singularity" + "'", str5, "Euler angles singularity");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "Euler angles singularity" + "'", str6, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray9), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray9), "[]");
        org.junit.Assert.assertNotNull(objArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray10), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray10), "[]");
        org.junit.Assert.assertNotNull(objArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray13), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray13), "[]");
        org.junit.Assert.assertNotNull(throwableArray15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "Euler angles singularity" + "'", str16, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray17), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray17), "[]");
        org.junit.Assert.assertNotNull(objArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray18), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray18), "[]");
        org.junit.Assert.assertNotNull(objArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray21), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray21), "[]");
        org.junit.Assert.assertNotNull(objArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray22), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray22), "[]");
        org.junit.Assert.assertNotNull(objArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray25), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray25), "[]");
        org.junit.Assert.assertNotNull(throwableArray27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "Euler angles singularity" + "'", str28, "Euler angles singularity");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "Euler angles singularity" + "'", str29, "Euler angles singularity");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "Euler angles singularity" + "'", str30, "Euler angles singularity");
        org.junit.Assert.assertNotNull(throwableArray31);
        org.junit.Assert.assertNotNull(objArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray35), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray35), "[]");
        org.junit.Assert.assertNotNull(objArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray36), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray36), "[]");
        org.junit.Assert.assertNotNull(objArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray37), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray37), "[]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "Cardan angles singularity" + "'", str38, "Cardan angles singularity");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "Cardan angles singularity" + "'", str41, "Cardan angles singularity");
    }

    @Test
    public void test1629() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1629");
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException1 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray2 = cardanEulerSingularityException1.getArguments();
        java.lang.Object[] objArray3 = cardanEulerSingularityException1.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException5 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray6 = cardanEulerSingularityException5.getArguments();
        cardanEulerSingularityException1.addSuppressed((java.lang.Throwable) cardanEulerSingularityException5);
        java.lang.Throwable[] throwableArray8 = cardanEulerSingularityException5.getSuppressed();
        java.lang.Object[] objArray9 = cardanEulerSingularityException5.getArguments();
        java.lang.Throwable[] throwableArray10 = cardanEulerSingularityException5.getSuppressed();
        java.lang.Object[] objArray11 = cardanEulerSingularityException5.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException13 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.String str14 = cardanEulerSingularityException13.getPattern();
        java.lang.Object[] objArray15 = cardanEulerSingularityException13.getArguments();
        java.lang.String str16 = cardanEulerSingularityException13.getPattern();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException18 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.String str19 = cardanEulerSingularityException18.getPattern();
        java.lang.Throwable[] throwableArray20 = cardanEulerSingularityException18.getSuppressed();
        cardanEulerSingularityException13.addSuppressed((java.lang.Throwable) cardanEulerSingularityException18);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException23 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.String str24 = cardanEulerSingularityException23.getPattern();
        java.lang.Object[] objArray25 = cardanEulerSingularityException23.getArguments();
        java.lang.String str26 = cardanEulerSingularityException23.getPattern();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException28 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.String str29 = cardanEulerSingularityException28.getPattern();
        java.lang.Throwable[] throwableArray30 = cardanEulerSingularityException28.getSuppressed();
        cardanEulerSingularityException23.addSuppressed((java.lang.Throwable) cardanEulerSingularityException28);
        cardanEulerSingularityException13.addSuppressed((java.lang.Throwable) cardanEulerSingularityException23);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException34 = new org.apache.commons.math.geometry.CardanEulerSingularityException(true);
        cardanEulerSingularityException13.addSuppressed((java.lang.Throwable) cardanEulerSingularityException34);
        java.lang.Object[] objArray36 = cardanEulerSingularityException13.getArguments();
        java.lang.Throwable[] throwableArray37 = cardanEulerSingularityException13.getSuppressed();
        java.lang.String str38 = cardanEulerSingularityException13.getPattern();
        cardanEulerSingularityException5.addSuppressed((java.lang.Throwable) cardanEulerSingularityException13);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException41 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.String str42 = cardanEulerSingularityException41.getPattern();
        java.lang.Object[] objArray43 = cardanEulerSingularityException41.getArguments();
        java.lang.String str44 = cardanEulerSingularityException41.getPattern();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException46 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.String str47 = cardanEulerSingularityException46.getPattern();
        java.lang.Throwable[] throwableArray48 = cardanEulerSingularityException46.getSuppressed();
        cardanEulerSingularityException41.addSuppressed((java.lang.Throwable) cardanEulerSingularityException46);
        cardanEulerSingularityException13.addSuppressed((java.lang.Throwable) cardanEulerSingularityException41);
        java.lang.Class<?> wildcardClass51 = cardanEulerSingularityException13.getClass();
        org.junit.Assert.assertNotNull(objArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray2), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray2), "[]");
        org.junit.Assert.assertNotNull(objArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray3), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray3), "[]");
        org.junit.Assert.assertNotNull(objArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray6), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray6), "[]");
        org.junit.Assert.assertNotNull(throwableArray8);
        org.junit.Assert.assertNotNull(objArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray9), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray9), "[]");
        org.junit.Assert.assertNotNull(throwableArray10);
        org.junit.Assert.assertNotNull(objArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray11), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray11), "[]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "Euler angles singularity" + "'", str14, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray15), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray15), "[]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "Euler angles singularity" + "'", str16, "Euler angles singularity");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "Euler angles singularity" + "'", str19, "Euler angles singularity");
        org.junit.Assert.assertNotNull(throwableArray20);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "Euler angles singularity" + "'", str24, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray25), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray25), "[]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "Euler angles singularity" + "'", str26, "Euler angles singularity");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "Euler angles singularity" + "'", str29, "Euler angles singularity");
        org.junit.Assert.assertNotNull(throwableArray30);
        org.junit.Assert.assertNotNull(objArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray36), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray36), "[]");
        org.junit.Assert.assertNotNull(throwableArray37);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "Euler angles singularity" + "'", str38, "Euler angles singularity");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "Euler angles singularity" + "'", str42, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray43), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray43), "[]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "Euler angles singularity" + "'", str44, "Euler angles singularity");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "Euler angles singularity" + "'", str47, "Euler angles singularity");
        org.junit.Assert.assertNotNull(throwableArray48);
        org.junit.Assert.assertNotNull(wildcardClass51);
    }

    @Test
    public void test1630() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1630");
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException1 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray2 = cardanEulerSingularityException1.getArguments();
        java.lang.Object[] objArray3 = cardanEulerSingularityException1.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException5 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray6 = cardanEulerSingularityException5.getArguments();
        cardanEulerSingularityException1.addSuppressed((java.lang.Throwable) cardanEulerSingularityException5);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException9 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray10 = cardanEulerSingularityException9.getArguments();
        java.lang.Object[] objArray11 = cardanEulerSingularityException9.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException13 = new org.apache.commons.math.geometry.CardanEulerSingularityException(true);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException15 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        cardanEulerSingularityException13.addSuppressed((java.lang.Throwable) cardanEulerSingularityException15);
        cardanEulerSingularityException9.addSuppressed((java.lang.Throwable) cardanEulerSingularityException13);
        java.lang.Throwable[] throwableArray18 = cardanEulerSingularityException9.getSuppressed();
        cardanEulerSingularityException5.addSuppressed((java.lang.Throwable) cardanEulerSingularityException9);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException21 = new org.apache.commons.math.geometry.CardanEulerSingularityException(true);
        java.lang.Object[] objArray22 = cardanEulerSingularityException21.getArguments();
        java.lang.Object[] objArray23 = cardanEulerSingularityException21.getArguments();
        cardanEulerSingularityException9.addSuppressed((java.lang.Throwable) cardanEulerSingularityException21);
        java.lang.Throwable[] throwableArray25 = cardanEulerSingularityException21.getSuppressed();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException27 = new org.apache.commons.math.geometry.CardanEulerSingularityException(true);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException29 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        cardanEulerSingularityException27.addSuppressed((java.lang.Throwable) cardanEulerSingularityException29);
        java.lang.String str31 = cardanEulerSingularityException29.getPattern();
        java.lang.Throwable[] throwableArray32 = cardanEulerSingularityException29.getSuppressed();
        java.lang.String str33 = cardanEulerSingularityException29.getPattern();
        cardanEulerSingularityException21.addSuppressed((java.lang.Throwable) cardanEulerSingularityException29);
        java.lang.Object[] objArray35 = cardanEulerSingularityException21.getArguments();
        java.lang.Class<?> wildcardClass36 = cardanEulerSingularityException21.getClass();
        org.junit.Assert.assertNotNull(objArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray2), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray2), "[]");
        org.junit.Assert.assertNotNull(objArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray3), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray3), "[]");
        org.junit.Assert.assertNotNull(objArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray6), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray6), "[]");
        org.junit.Assert.assertNotNull(objArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray10), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray10), "[]");
        org.junit.Assert.assertNotNull(objArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray11), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray11), "[]");
        org.junit.Assert.assertNotNull(throwableArray18);
        org.junit.Assert.assertNotNull(objArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray22), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray22), "[]");
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray23), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray23), "[]");
        org.junit.Assert.assertNotNull(throwableArray25);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "Euler angles singularity" + "'", str31, "Euler angles singularity");
        org.junit.Assert.assertNotNull(throwableArray32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "Euler angles singularity" + "'", str33, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray35), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray35), "[]");
        org.junit.Assert.assertNotNull(wildcardClass36);
    }

    @Test
    public void test1631() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1631");
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException1 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray2 = cardanEulerSingularityException1.getArguments();
        java.lang.Object[] objArray3 = cardanEulerSingularityException1.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException5 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray6 = cardanEulerSingularityException5.getArguments();
        cardanEulerSingularityException1.addSuppressed((java.lang.Throwable) cardanEulerSingularityException5);
        java.lang.Object[] objArray8 = cardanEulerSingularityException5.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException10 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray11 = cardanEulerSingularityException10.getArguments();
        java.lang.Throwable[] throwableArray12 = cardanEulerSingularityException10.getSuppressed();
        java.lang.String str13 = cardanEulerSingularityException10.getPattern();
        cardanEulerSingularityException5.addSuppressed((java.lang.Throwable) cardanEulerSingularityException10);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException16 = new org.apache.commons.math.geometry.CardanEulerSingularityException(true);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException18 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        cardanEulerSingularityException16.addSuppressed((java.lang.Throwable) cardanEulerSingularityException18);
        java.lang.Throwable[] throwableArray20 = cardanEulerSingularityException16.getSuppressed();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException22 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray23 = cardanEulerSingularityException22.getArguments();
        java.lang.Throwable[] throwableArray24 = cardanEulerSingularityException22.getSuppressed();
        java.lang.Object[] objArray25 = cardanEulerSingularityException22.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException27 = new org.apache.commons.math.geometry.CardanEulerSingularityException(true);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException29 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        cardanEulerSingularityException27.addSuppressed((java.lang.Throwable) cardanEulerSingularityException29);
        java.lang.String str31 = cardanEulerSingularityException29.getPattern();
        java.lang.Throwable[] throwableArray32 = cardanEulerSingularityException29.getSuppressed();
        java.lang.String str33 = cardanEulerSingularityException29.getPattern();
        java.lang.Throwable[] throwableArray34 = cardanEulerSingularityException29.getSuppressed();
        java.lang.String str35 = cardanEulerSingularityException29.getPattern();
        cardanEulerSingularityException22.addSuppressed((java.lang.Throwable) cardanEulerSingularityException29);
        cardanEulerSingularityException16.addSuppressed((java.lang.Throwable) cardanEulerSingularityException29);
        java.lang.Throwable[] throwableArray38 = cardanEulerSingularityException29.getSuppressed();
        cardanEulerSingularityException5.addSuppressed((java.lang.Throwable) cardanEulerSingularityException29);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException41 = new org.apache.commons.math.geometry.CardanEulerSingularityException(true);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException43 = new org.apache.commons.math.geometry.CardanEulerSingularityException(true);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException45 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        cardanEulerSingularityException43.addSuppressed((java.lang.Throwable) cardanEulerSingularityException45);
        java.lang.String str47 = cardanEulerSingularityException45.getPattern();
        java.lang.String str48 = cardanEulerSingularityException45.getPattern();
        cardanEulerSingularityException41.addSuppressed((java.lang.Throwable) cardanEulerSingularityException45);
        java.lang.Object[] objArray50 = cardanEulerSingularityException45.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException52 = new org.apache.commons.math.geometry.CardanEulerSingularityException(true);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException54 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        cardanEulerSingularityException52.addSuppressed((java.lang.Throwable) cardanEulerSingularityException54);
        java.lang.Throwable[] throwableArray56 = cardanEulerSingularityException52.getSuppressed();
        java.lang.Throwable[] throwableArray57 = cardanEulerSingularityException52.getSuppressed();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException59 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.String str60 = cardanEulerSingularityException59.getPattern();
        cardanEulerSingularityException52.addSuppressed((java.lang.Throwable) cardanEulerSingularityException59);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException63 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray64 = cardanEulerSingularityException63.getArguments();
        java.lang.Throwable[] throwableArray65 = cardanEulerSingularityException63.getSuppressed();
        java.lang.String str66 = cardanEulerSingularityException63.getPattern();
        java.lang.Throwable[] throwableArray67 = cardanEulerSingularityException63.getSuppressed();
        java.lang.String str68 = cardanEulerSingularityException63.getPattern();
        java.lang.Throwable[] throwableArray69 = cardanEulerSingularityException63.getSuppressed();
        cardanEulerSingularityException52.addSuppressed((java.lang.Throwable) cardanEulerSingularityException63);
        cardanEulerSingularityException45.addSuppressed((java.lang.Throwable) cardanEulerSingularityException52);
        cardanEulerSingularityException5.addSuppressed((java.lang.Throwable) cardanEulerSingularityException52);
        java.lang.Object[] objArray73 = cardanEulerSingularityException52.getArguments();
        java.lang.Object[] objArray74 = cardanEulerSingularityException52.getArguments();
        org.junit.Assert.assertNotNull(objArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray2), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray2), "[]");
        org.junit.Assert.assertNotNull(objArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray3), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray3), "[]");
        org.junit.Assert.assertNotNull(objArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray6), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray6), "[]");
        org.junit.Assert.assertNotNull(objArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray8), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray8), "[]");
        org.junit.Assert.assertNotNull(objArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray11), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray11), "[]");
        org.junit.Assert.assertNotNull(throwableArray12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Euler angles singularity" + "'", str13, "Euler angles singularity");
        org.junit.Assert.assertNotNull(throwableArray20);
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray23), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray23), "[]");
        org.junit.Assert.assertNotNull(throwableArray24);
        org.junit.Assert.assertNotNull(objArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray25), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray25), "[]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "Euler angles singularity" + "'", str31, "Euler angles singularity");
        org.junit.Assert.assertNotNull(throwableArray32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "Euler angles singularity" + "'", str33, "Euler angles singularity");
        org.junit.Assert.assertNotNull(throwableArray34);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "Euler angles singularity" + "'", str35, "Euler angles singularity");
        org.junit.Assert.assertNotNull(throwableArray38);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "Euler angles singularity" + "'", str47, "Euler angles singularity");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "Euler angles singularity" + "'", str48, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray50), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray50), "[]");
        org.junit.Assert.assertNotNull(throwableArray56);
        org.junit.Assert.assertNotNull(throwableArray57);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "Euler angles singularity" + "'", str60, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray64), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray64), "[]");
        org.junit.Assert.assertNotNull(throwableArray65);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "Euler angles singularity" + "'", str66, "Euler angles singularity");
        org.junit.Assert.assertNotNull(throwableArray67);
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "Euler angles singularity" + "'", str68, "Euler angles singularity");
        org.junit.Assert.assertNotNull(throwableArray69);
        org.junit.Assert.assertNotNull(objArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray73), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray73), "[]");
        org.junit.Assert.assertNotNull(objArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray74), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray74), "[]");
    }

    @Test
    public void test1632() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1632");
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException1 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray2 = cardanEulerSingularityException1.getArguments();
        java.lang.String str3 = cardanEulerSingularityException1.getPattern();
        java.lang.Object[] objArray4 = cardanEulerSingularityException1.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException6 = new org.apache.commons.math.geometry.CardanEulerSingularityException(true);
        java.lang.Object[] objArray7 = cardanEulerSingularityException6.getArguments();
        java.lang.Throwable[] throwableArray8 = cardanEulerSingularityException6.getSuppressed();
        java.lang.Throwable[] throwableArray9 = cardanEulerSingularityException6.getSuppressed();
        java.lang.Throwable[] throwableArray10 = cardanEulerSingularityException6.getSuppressed();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException12 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray13 = cardanEulerSingularityException12.getArguments();
        java.lang.Object[] objArray14 = cardanEulerSingularityException12.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException16 = new org.apache.commons.math.geometry.CardanEulerSingularityException(true);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException18 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        cardanEulerSingularityException16.addSuppressed((java.lang.Throwable) cardanEulerSingularityException18);
        cardanEulerSingularityException12.addSuppressed((java.lang.Throwable) cardanEulerSingularityException16);
        cardanEulerSingularityException6.addSuppressed((java.lang.Throwable) cardanEulerSingularityException12);
        cardanEulerSingularityException1.addSuppressed((java.lang.Throwable) cardanEulerSingularityException6);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException24 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray25 = cardanEulerSingularityException24.getArguments();
        java.lang.Object[] objArray26 = cardanEulerSingularityException24.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException28 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray29 = cardanEulerSingularityException28.getArguments();
        cardanEulerSingularityException24.addSuppressed((java.lang.Throwable) cardanEulerSingularityException28);
        java.lang.Object[] objArray31 = cardanEulerSingularityException28.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException33 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray34 = cardanEulerSingularityException33.getArguments();
        java.lang.Throwable[] throwableArray35 = cardanEulerSingularityException33.getSuppressed();
        java.lang.String str36 = cardanEulerSingularityException33.getPattern();
        cardanEulerSingularityException28.addSuppressed((java.lang.Throwable) cardanEulerSingularityException33);
        java.lang.Object[] objArray38 = cardanEulerSingularityException28.getArguments();
        java.lang.Throwable[] throwableArray39 = cardanEulerSingularityException28.getSuppressed();
        java.lang.Object[] objArray40 = cardanEulerSingularityException28.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException42 = new org.apache.commons.math.geometry.CardanEulerSingularityException(true);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException44 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        cardanEulerSingularityException42.addSuppressed((java.lang.Throwable) cardanEulerSingularityException44);
        java.lang.Throwable[] throwableArray46 = cardanEulerSingularityException42.getSuppressed();
        cardanEulerSingularityException28.addSuppressed((java.lang.Throwable) cardanEulerSingularityException42);
        cardanEulerSingularityException6.addSuppressed((java.lang.Throwable) cardanEulerSingularityException28);
        java.lang.Object[] objArray49 = cardanEulerSingularityException28.getArguments();
        java.lang.Object[] objArray50 = cardanEulerSingularityException28.getArguments();
        java.lang.Object[] objArray51 = cardanEulerSingularityException28.getArguments();
        java.lang.Object[] objArray52 = cardanEulerSingularityException28.getArguments();
        java.lang.Object[] objArray53 = cardanEulerSingularityException28.getArguments();
        java.lang.Class<?> wildcardClass54 = cardanEulerSingularityException28.getClass();
        org.junit.Assert.assertNotNull(objArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray2), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray2), "[]");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Euler angles singularity" + "'", str3, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray4), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray4), "[]");
        org.junit.Assert.assertNotNull(objArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray7), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray7), "[]");
        org.junit.Assert.assertNotNull(throwableArray8);
        org.junit.Assert.assertNotNull(throwableArray9);
        org.junit.Assert.assertNotNull(throwableArray10);
        org.junit.Assert.assertNotNull(objArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray13), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray13), "[]");
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[]");
        org.junit.Assert.assertNotNull(objArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray25), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray25), "[]");
        org.junit.Assert.assertNotNull(objArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray26), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray26), "[]");
        org.junit.Assert.assertNotNull(objArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray29), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray29), "[]");
        org.junit.Assert.assertNotNull(objArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray31), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray31), "[]");
        org.junit.Assert.assertNotNull(objArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray34), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray34), "[]");
        org.junit.Assert.assertNotNull(throwableArray35);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "Euler angles singularity" + "'", str36, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray38), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray38), "[]");
        org.junit.Assert.assertNotNull(throwableArray39);
        org.junit.Assert.assertNotNull(objArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray40), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray40), "[]");
        org.junit.Assert.assertNotNull(throwableArray46);
        org.junit.Assert.assertNotNull(objArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray49), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray49), "[]");
        org.junit.Assert.assertNotNull(objArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray50), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray50), "[]");
        org.junit.Assert.assertNotNull(objArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray51), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray51), "[]");
        org.junit.Assert.assertNotNull(objArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray52), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray52), "[]");
        org.junit.Assert.assertNotNull(objArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray53), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray53), "[]");
        org.junit.Assert.assertNotNull(wildcardClass54);
    }

    @Test
    public void test1633() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1633");
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException1 = new org.apache.commons.math.geometry.CardanEulerSingularityException(true);
        java.lang.Object[] objArray2 = cardanEulerSingularityException1.getArguments();
        java.lang.Throwable[] throwableArray3 = cardanEulerSingularityException1.getSuppressed();
        java.lang.Throwable[] throwableArray4 = cardanEulerSingularityException1.getSuppressed();
        java.lang.Throwable[] throwableArray5 = cardanEulerSingularityException1.getSuppressed();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException7 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray8 = cardanEulerSingularityException7.getArguments();
        java.lang.Object[] objArray9 = cardanEulerSingularityException7.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException11 = new org.apache.commons.math.geometry.CardanEulerSingularityException(true);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException13 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        cardanEulerSingularityException11.addSuppressed((java.lang.Throwable) cardanEulerSingularityException13);
        cardanEulerSingularityException7.addSuppressed((java.lang.Throwable) cardanEulerSingularityException11);
        cardanEulerSingularityException1.addSuppressed((java.lang.Throwable) cardanEulerSingularityException7);
        java.lang.Object[] objArray17 = cardanEulerSingularityException1.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException19 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray20 = cardanEulerSingularityException19.getArguments();
        java.lang.Throwable[] throwableArray21 = cardanEulerSingularityException19.getSuppressed();
        cardanEulerSingularityException1.addSuppressed((java.lang.Throwable) cardanEulerSingularityException19);
        java.lang.Class<?> wildcardClass23 = cardanEulerSingularityException1.getClass();
        org.junit.Assert.assertNotNull(objArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray2), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray2), "[]");
        org.junit.Assert.assertNotNull(throwableArray3);
        org.junit.Assert.assertNotNull(throwableArray4);
        org.junit.Assert.assertNotNull(throwableArray5);
        org.junit.Assert.assertNotNull(objArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray8), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray8), "[]");
        org.junit.Assert.assertNotNull(objArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray9), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray9), "[]");
        org.junit.Assert.assertNotNull(objArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray17), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray17), "[]");
        org.junit.Assert.assertNotNull(objArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray20), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray20), "[]");
        org.junit.Assert.assertNotNull(throwableArray21);
        org.junit.Assert.assertNotNull(wildcardClass23);
    }

    @Test
    public void test1634() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1634");
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException1 = new org.apache.commons.math.geometry.CardanEulerSingularityException(true);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException3 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        cardanEulerSingularityException1.addSuppressed((java.lang.Throwable) cardanEulerSingularityException3);
        java.lang.String str5 = cardanEulerSingularityException3.getPattern();
        java.lang.Throwable[] throwableArray6 = cardanEulerSingularityException3.getSuppressed();
        java.lang.String str7 = cardanEulerSingularityException3.getPattern();
        java.lang.Throwable[] throwableArray8 = cardanEulerSingularityException3.getSuppressed();
        java.lang.String str9 = cardanEulerSingularityException3.getPattern();
        java.lang.Object[] objArray10 = cardanEulerSingularityException3.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException12 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray13 = cardanEulerSingularityException12.getArguments();
        java.lang.Object[] objArray14 = cardanEulerSingularityException12.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException16 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray17 = cardanEulerSingularityException16.getArguments();
        cardanEulerSingularityException12.addSuppressed((java.lang.Throwable) cardanEulerSingularityException16);
        java.lang.Throwable[] throwableArray19 = cardanEulerSingularityException16.getSuppressed();
        java.lang.Object[] objArray20 = cardanEulerSingularityException16.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException22 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray23 = cardanEulerSingularityException22.getArguments();
        java.lang.Object[] objArray24 = cardanEulerSingularityException22.getArguments();
        java.lang.Object[] objArray25 = cardanEulerSingularityException22.getArguments();
        cardanEulerSingularityException16.addSuppressed((java.lang.Throwable) cardanEulerSingularityException22);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException28 = new org.apache.commons.math.geometry.CardanEulerSingularityException(true);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException30 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        cardanEulerSingularityException28.addSuppressed((java.lang.Throwable) cardanEulerSingularityException30);
        java.lang.String str32 = cardanEulerSingularityException30.getPattern();
        java.lang.Object[] objArray33 = cardanEulerSingularityException30.getArguments();
        java.lang.Throwable[] throwableArray34 = cardanEulerSingularityException30.getSuppressed();
        cardanEulerSingularityException16.addSuppressed((java.lang.Throwable) cardanEulerSingularityException30);
        cardanEulerSingularityException3.addSuppressed((java.lang.Throwable) cardanEulerSingularityException16);
        java.lang.String str37 = cardanEulerSingularityException3.toString();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Euler angles singularity" + "'", str5, "Euler angles singularity");
        org.junit.Assert.assertNotNull(throwableArray6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Euler angles singularity" + "'", str7, "Euler angles singularity");
        org.junit.Assert.assertNotNull(throwableArray8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Euler angles singularity" + "'", str9, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray10), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray10), "[]");
        org.junit.Assert.assertNotNull(objArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray13), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray13), "[]");
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[]");
        org.junit.Assert.assertNotNull(objArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray17), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray17), "[]");
        org.junit.Assert.assertNotNull(throwableArray19);
        org.junit.Assert.assertNotNull(objArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray20), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray20), "[]");
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray23), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray23), "[]");
        org.junit.Assert.assertNotNull(objArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray24), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray24), "[]");
        org.junit.Assert.assertNotNull(objArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray25), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray25), "[]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "Euler angles singularity" + "'", str32, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray33), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray33), "[]");
        org.junit.Assert.assertNotNull(throwableArray34);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "org.apache.commons.math.geometry.CardanEulerSingularityException: Euler angles singularity" + "'", str37, "org.apache.commons.math.geometry.CardanEulerSingularityException: Euler angles singularity");
    }

    @Test
    public void test1635() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1635");
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException1 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.String str2 = cardanEulerSingularityException1.getPattern();
        java.lang.Object[] objArray3 = cardanEulerSingularityException1.getArguments();
        java.lang.String str4 = cardanEulerSingularityException1.getPattern();
        java.lang.Throwable[] throwableArray5 = cardanEulerSingularityException1.getSuppressed();
        java.lang.Throwable[] throwableArray6 = cardanEulerSingularityException1.getSuppressed();
        java.lang.String str7 = cardanEulerSingularityException1.getPattern();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException9 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray10 = cardanEulerSingularityException9.getArguments();
        java.lang.Object[] objArray11 = cardanEulerSingularityException9.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException13 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray14 = cardanEulerSingularityException13.getArguments();
        cardanEulerSingularityException9.addSuppressed((java.lang.Throwable) cardanEulerSingularityException13);
        java.lang.Object[] objArray16 = cardanEulerSingularityException13.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException18 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray19 = cardanEulerSingularityException18.getArguments();
        java.lang.Throwable[] throwableArray20 = cardanEulerSingularityException18.getSuppressed();
        java.lang.String str21 = cardanEulerSingularityException18.getPattern();
        cardanEulerSingularityException13.addSuppressed((java.lang.Throwable) cardanEulerSingularityException18);
        java.lang.Object[] objArray23 = cardanEulerSingularityException13.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException25 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.String str26 = cardanEulerSingularityException25.getPattern();
        java.lang.Object[] objArray27 = cardanEulerSingularityException25.getArguments();
        java.lang.String str28 = cardanEulerSingularityException25.getPattern();
        cardanEulerSingularityException13.addSuppressed((java.lang.Throwable) cardanEulerSingularityException25);
        java.lang.Object[] objArray30 = cardanEulerSingularityException13.getArguments();
        java.lang.String str31 = cardanEulerSingularityException13.getPattern();
        cardanEulerSingularityException1.addSuppressed((java.lang.Throwable) cardanEulerSingularityException13);
        java.lang.Object[] objArray33 = cardanEulerSingularityException1.getArguments();
        java.lang.Throwable[] throwableArray34 = cardanEulerSingularityException1.getSuppressed();
        java.lang.Object[] objArray35 = cardanEulerSingularityException1.getArguments();
        java.lang.Object[] objArray36 = cardanEulerSingularityException1.getArguments();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "Euler angles singularity" + "'", str2, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray3), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray3), "[]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Euler angles singularity" + "'", str4, "Euler angles singularity");
        org.junit.Assert.assertNotNull(throwableArray5);
        org.junit.Assert.assertNotNull(throwableArray6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Euler angles singularity" + "'", str7, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray10), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray10), "[]");
        org.junit.Assert.assertNotNull(objArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray11), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray11), "[]");
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[]");
        org.junit.Assert.assertNotNull(objArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray16), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray16), "[]");
        org.junit.Assert.assertNotNull(objArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray19), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray19), "[]");
        org.junit.Assert.assertNotNull(throwableArray20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "Euler angles singularity" + "'", str21, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray23), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray23), "[]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "Euler angles singularity" + "'", str26, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray27), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray27), "[]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "Euler angles singularity" + "'", str28, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray30), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray30), "[]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "Euler angles singularity" + "'", str31, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray33), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray33), "[]");
        org.junit.Assert.assertNotNull(throwableArray34);
        org.junit.Assert.assertNotNull(objArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray35), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray35), "[]");
        org.junit.Assert.assertNotNull(objArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray36), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray36), "[]");
    }

    @Test
    public void test1636() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1636");
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException1 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.String str2 = cardanEulerSingularityException1.getPattern();
        java.lang.Object[] objArray3 = cardanEulerSingularityException1.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException5 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.String str6 = cardanEulerSingularityException5.getPattern();
        java.lang.Throwable[] throwableArray7 = cardanEulerSingularityException5.getSuppressed();
        cardanEulerSingularityException1.addSuppressed((java.lang.Throwable) cardanEulerSingularityException5);
        java.lang.String str9 = cardanEulerSingularityException1.getPattern();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException11 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray12 = cardanEulerSingularityException11.getArguments();
        java.lang.Object[] objArray13 = cardanEulerSingularityException11.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException15 = new org.apache.commons.math.geometry.CardanEulerSingularityException(true);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException17 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        cardanEulerSingularityException15.addSuppressed((java.lang.Throwable) cardanEulerSingularityException17);
        cardanEulerSingularityException11.addSuppressed((java.lang.Throwable) cardanEulerSingularityException15);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException21 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray22 = cardanEulerSingularityException21.getArguments();
        java.lang.String str23 = cardanEulerSingularityException21.getPattern();
        java.lang.Object[] objArray24 = cardanEulerSingularityException21.getArguments();
        java.lang.Object[] objArray25 = cardanEulerSingularityException21.getArguments();
        cardanEulerSingularityException15.addSuppressed((java.lang.Throwable) cardanEulerSingularityException21);
        java.lang.String str27 = cardanEulerSingularityException15.getPattern();
        cardanEulerSingularityException1.addSuppressed((java.lang.Throwable) cardanEulerSingularityException15);
        java.lang.Object[] objArray29 = cardanEulerSingularityException15.getArguments();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "Euler angles singularity" + "'", str2, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray3), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray3), "[]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "Euler angles singularity" + "'", str6, "Euler angles singularity");
        org.junit.Assert.assertNotNull(throwableArray7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Euler angles singularity" + "'", str9, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray12), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray12), "[]");
        org.junit.Assert.assertNotNull(objArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray13), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray13), "[]");
        org.junit.Assert.assertNotNull(objArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray22), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray22), "[]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "Euler angles singularity" + "'", str23, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray24), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray24), "[]");
        org.junit.Assert.assertNotNull(objArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray25), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray25), "[]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "Cardan angles singularity" + "'", str27, "Cardan angles singularity");
        org.junit.Assert.assertNotNull(objArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray29), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray29), "[]");
    }

    @Test
    public void test1637() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1637");
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException1 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray2 = cardanEulerSingularityException1.getArguments();
        java.lang.String str3 = cardanEulerSingularityException1.getPattern();
        java.lang.Object[] objArray4 = cardanEulerSingularityException1.getArguments();
        java.lang.Object[] objArray5 = cardanEulerSingularityException1.getArguments();
        java.lang.String str6 = cardanEulerSingularityException1.getPattern();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException8 = new org.apache.commons.math.geometry.CardanEulerSingularityException(true);
        java.lang.Object[] objArray9 = cardanEulerSingularityException8.getArguments();
        java.lang.Throwable[] throwableArray10 = cardanEulerSingularityException8.getSuppressed();
        java.lang.Throwable[] throwableArray11 = cardanEulerSingularityException8.getSuppressed();
        cardanEulerSingularityException1.addSuppressed((java.lang.Throwable) cardanEulerSingularityException8);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException14 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray15 = cardanEulerSingularityException14.getArguments();
        java.lang.Object[] objArray16 = cardanEulerSingularityException14.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException18 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray19 = cardanEulerSingularityException18.getArguments();
        cardanEulerSingularityException14.addSuppressed((java.lang.Throwable) cardanEulerSingularityException18);
        java.lang.Throwable[] throwableArray21 = cardanEulerSingularityException18.getSuppressed();
        java.lang.Object[] objArray22 = cardanEulerSingularityException18.getArguments();
        cardanEulerSingularityException1.addSuppressed((java.lang.Throwable) cardanEulerSingularityException18);
        java.lang.String str24 = cardanEulerSingularityException18.getPattern();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException26 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray27 = cardanEulerSingularityException26.getArguments();
        java.lang.String str28 = cardanEulerSingularityException26.getPattern();
        java.lang.Object[] objArray29 = cardanEulerSingularityException26.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException31 = new org.apache.commons.math.geometry.CardanEulerSingularityException(true);
        java.lang.Object[] objArray32 = cardanEulerSingularityException31.getArguments();
        java.lang.Object[] objArray33 = cardanEulerSingularityException31.getArguments();
        java.lang.String str34 = cardanEulerSingularityException31.getPattern();
        java.lang.String str35 = cardanEulerSingularityException31.getPattern();
        cardanEulerSingularityException26.addSuppressed((java.lang.Throwable) cardanEulerSingularityException31);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException38 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray39 = cardanEulerSingularityException38.getArguments();
        java.lang.String str40 = cardanEulerSingularityException38.getPattern();
        java.lang.Object[] objArray41 = cardanEulerSingularityException38.getArguments();
        java.lang.Object[] objArray42 = cardanEulerSingularityException38.getArguments();
        java.lang.String str43 = cardanEulerSingularityException38.getPattern();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException45 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        cardanEulerSingularityException38.addSuppressed((java.lang.Throwable) cardanEulerSingularityException45);
        java.lang.String str47 = cardanEulerSingularityException38.getPattern();
        java.lang.String str48 = cardanEulerSingularityException38.getPattern();
        cardanEulerSingularityException26.addSuppressed((java.lang.Throwable) cardanEulerSingularityException38);
        java.lang.Throwable[] throwableArray50 = cardanEulerSingularityException26.getSuppressed();
        java.lang.String str51 = cardanEulerSingularityException26.getPattern();
        cardanEulerSingularityException18.addSuppressed((java.lang.Throwable) cardanEulerSingularityException26);
        java.lang.String str53 = cardanEulerSingularityException18.toString();
        org.junit.Assert.assertNotNull(objArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray2), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray2), "[]");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Euler angles singularity" + "'", str3, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray4), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray4), "[]");
        org.junit.Assert.assertNotNull(objArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray5), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray5), "[]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "Euler angles singularity" + "'", str6, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray9), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray9), "[]");
        org.junit.Assert.assertNotNull(throwableArray10);
        org.junit.Assert.assertNotNull(throwableArray11);
        org.junit.Assert.assertNotNull(objArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray15), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray15), "[]");
        org.junit.Assert.assertNotNull(objArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray16), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray16), "[]");
        org.junit.Assert.assertNotNull(objArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray19), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray19), "[]");
        org.junit.Assert.assertNotNull(throwableArray21);
        org.junit.Assert.assertNotNull(objArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray22), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray22), "[]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "Euler angles singularity" + "'", str24, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray27), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray27), "[]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "Euler angles singularity" + "'", str28, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray29), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray29), "[]");
        org.junit.Assert.assertNotNull(objArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray32), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray32), "[]");
        org.junit.Assert.assertNotNull(objArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray33), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray33), "[]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "Cardan angles singularity" + "'", str34, "Cardan angles singularity");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "Cardan angles singularity" + "'", str35, "Cardan angles singularity");
        org.junit.Assert.assertNotNull(objArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray39), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray39), "[]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "Euler angles singularity" + "'", str40, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray41), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray41), "[]");
        org.junit.Assert.assertNotNull(objArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray42), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray42), "[]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "Euler angles singularity" + "'", str43, "Euler angles singularity");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "Euler angles singularity" + "'", str47, "Euler angles singularity");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "Euler angles singularity" + "'", str48, "Euler angles singularity");
        org.junit.Assert.assertNotNull(throwableArray50);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "Euler angles singularity" + "'", str51, "Euler angles singularity");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "org.apache.commons.math.geometry.CardanEulerSingularityException: Euler angles singularity" + "'", str53, "org.apache.commons.math.geometry.CardanEulerSingularityException: Euler angles singularity");
    }

    @Test
    public void test1638() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1638");
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException1 = new org.apache.commons.math.geometry.CardanEulerSingularityException(true);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException3 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        cardanEulerSingularityException1.addSuppressed((java.lang.Throwable) cardanEulerSingularityException3);
        java.lang.String str5 = cardanEulerSingularityException3.getPattern();
        java.lang.Throwable[] throwableArray6 = cardanEulerSingularityException3.getSuppressed();
        java.lang.String str7 = cardanEulerSingularityException3.getPattern();
        java.lang.Throwable[] throwableArray8 = cardanEulerSingularityException3.getSuppressed();
        java.lang.Throwable[] throwableArray9 = cardanEulerSingularityException3.getSuppressed();
        java.lang.Object[] objArray10 = cardanEulerSingularityException3.getArguments();
        java.lang.Object[] objArray11 = cardanEulerSingularityException3.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException13 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray14 = cardanEulerSingularityException13.getArguments();
        java.lang.String str15 = cardanEulerSingularityException13.getPattern();
        java.lang.Object[] objArray16 = cardanEulerSingularityException13.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException18 = new org.apache.commons.math.geometry.CardanEulerSingularityException(true);
        java.lang.Object[] objArray19 = cardanEulerSingularityException18.getArguments();
        java.lang.Throwable[] throwableArray20 = cardanEulerSingularityException18.getSuppressed();
        java.lang.Throwable[] throwableArray21 = cardanEulerSingularityException18.getSuppressed();
        java.lang.Throwable[] throwableArray22 = cardanEulerSingularityException18.getSuppressed();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException24 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray25 = cardanEulerSingularityException24.getArguments();
        java.lang.Object[] objArray26 = cardanEulerSingularityException24.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException28 = new org.apache.commons.math.geometry.CardanEulerSingularityException(true);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException30 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        cardanEulerSingularityException28.addSuppressed((java.lang.Throwable) cardanEulerSingularityException30);
        cardanEulerSingularityException24.addSuppressed((java.lang.Throwable) cardanEulerSingularityException28);
        cardanEulerSingularityException18.addSuppressed((java.lang.Throwable) cardanEulerSingularityException24);
        cardanEulerSingularityException13.addSuppressed((java.lang.Throwable) cardanEulerSingularityException18);
        java.lang.Object[] objArray35 = cardanEulerSingularityException13.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException37 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.String str38 = cardanEulerSingularityException37.getPattern();
        java.lang.Object[] objArray39 = cardanEulerSingularityException37.getArguments();
        java.lang.String str40 = cardanEulerSingularityException37.getPattern();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException42 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.String str43 = cardanEulerSingularityException42.getPattern();
        java.lang.Throwable[] throwableArray44 = cardanEulerSingularityException42.getSuppressed();
        cardanEulerSingularityException37.addSuppressed((java.lang.Throwable) cardanEulerSingularityException42);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException47 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.String str48 = cardanEulerSingularityException47.getPattern();
        java.lang.Object[] objArray49 = cardanEulerSingularityException47.getArguments();
        java.lang.String str50 = cardanEulerSingularityException47.getPattern();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException52 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.String str53 = cardanEulerSingularityException52.getPattern();
        java.lang.Throwable[] throwableArray54 = cardanEulerSingularityException52.getSuppressed();
        cardanEulerSingularityException47.addSuppressed((java.lang.Throwable) cardanEulerSingularityException52);
        cardanEulerSingularityException37.addSuppressed((java.lang.Throwable) cardanEulerSingularityException47);
        java.lang.String str57 = cardanEulerSingularityException37.getPattern();
        java.lang.String str58 = cardanEulerSingularityException37.getPattern();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException60 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray61 = cardanEulerSingularityException60.getArguments();
        java.lang.String str62 = cardanEulerSingularityException60.getPattern();
        java.lang.Object[] objArray63 = cardanEulerSingularityException60.getArguments();
        java.lang.Object[] objArray64 = cardanEulerSingularityException60.getArguments();
        java.lang.String str65 = cardanEulerSingularityException60.getPattern();
        cardanEulerSingularityException37.addSuppressed((java.lang.Throwable) cardanEulerSingularityException60);
        cardanEulerSingularityException13.addSuppressed((java.lang.Throwable) cardanEulerSingularityException37);
        cardanEulerSingularityException3.addSuppressed((java.lang.Throwable) cardanEulerSingularityException37);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Euler angles singularity" + "'", str5, "Euler angles singularity");
        org.junit.Assert.assertNotNull(throwableArray6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Euler angles singularity" + "'", str7, "Euler angles singularity");
        org.junit.Assert.assertNotNull(throwableArray8);
        org.junit.Assert.assertNotNull(throwableArray9);
        org.junit.Assert.assertNotNull(objArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray10), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray10), "[]");
        org.junit.Assert.assertNotNull(objArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray11), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray11), "[]");
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Euler angles singularity" + "'", str15, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray16), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray16), "[]");
        org.junit.Assert.assertNotNull(objArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray19), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray19), "[]");
        org.junit.Assert.assertNotNull(throwableArray20);
        org.junit.Assert.assertNotNull(throwableArray21);
        org.junit.Assert.assertNotNull(throwableArray22);
        org.junit.Assert.assertNotNull(objArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray25), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray25), "[]");
        org.junit.Assert.assertNotNull(objArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray26), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray26), "[]");
        org.junit.Assert.assertNotNull(objArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray35), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray35), "[]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "Euler angles singularity" + "'", str38, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray39), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray39), "[]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "Euler angles singularity" + "'", str40, "Euler angles singularity");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "Euler angles singularity" + "'", str43, "Euler angles singularity");
        org.junit.Assert.assertNotNull(throwableArray44);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "Euler angles singularity" + "'", str48, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray49), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray49), "[]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "Euler angles singularity" + "'", str50, "Euler angles singularity");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "Euler angles singularity" + "'", str53, "Euler angles singularity");
        org.junit.Assert.assertNotNull(throwableArray54);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "Euler angles singularity" + "'", str57, "Euler angles singularity");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "Euler angles singularity" + "'", str58, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray61), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray61), "[]");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "Euler angles singularity" + "'", str62, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray63), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray63), "[]");
        org.junit.Assert.assertNotNull(objArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray64), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray64), "[]");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "Euler angles singularity" + "'", str65, "Euler angles singularity");
    }

    @Test
    public void test1639() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1639");
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException1 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray2 = cardanEulerSingularityException1.getArguments();
        java.lang.Object[] objArray3 = cardanEulerSingularityException1.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException5 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.String str6 = cardanEulerSingularityException5.getPattern();
        java.lang.Object[] objArray7 = cardanEulerSingularityException5.getArguments();
        java.lang.String str8 = cardanEulerSingularityException5.getPattern();
        java.lang.String str9 = cardanEulerSingularityException5.getPattern();
        java.lang.Object[] objArray10 = cardanEulerSingularityException5.getArguments();
        cardanEulerSingularityException1.addSuppressed((java.lang.Throwable) cardanEulerSingularityException5);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException13 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray14 = cardanEulerSingularityException13.getArguments();
        java.lang.String str15 = cardanEulerSingularityException13.getPattern();
        java.lang.Object[] objArray16 = cardanEulerSingularityException13.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException18 = new org.apache.commons.math.geometry.CardanEulerSingularityException(true);
        java.lang.Object[] objArray19 = cardanEulerSingularityException18.getArguments();
        java.lang.Throwable[] throwableArray20 = cardanEulerSingularityException18.getSuppressed();
        java.lang.Throwable[] throwableArray21 = cardanEulerSingularityException18.getSuppressed();
        java.lang.Throwable[] throwableArray22 = cardanEulerSingularityException18.getSuppressed();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException24 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray25 = cardanEulerSingularityException24.getArguments();
        java.lang.Object[] objArray26 = cardanEulerSingularityException24.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException28 = new org.apache.commons.math.geometry.CardanEulerSingularityException(true);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException30 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        cardanEulerSingularityException28.addSuppressed((java.lang.Throwable) cardanEulerSingularityException30);
        cardanEulerSingularityException24.addSuppressed((java.lang.Throwable) cardanEulerSingularityException28);
        cardanEulerSingularityException18.addSuppressed((java.lang.Throwable) cardanEulerSingularityException24);
        cardanEulerSingularityException13.addSuppressed((java.lang.Throwable) cardanEulerSingularityException18);
        java.lang.Throwable[] throwableArray35 = cardanEulerSingularityException13.getSuppressed();
        java.lang.Throwable[] throwableArray36 = cardanEulerSingularityException13.getSuppressed();
        cardanEulerSingularityException1.addSuppressed((java.lang.Throwable) cardanEulerSingularityException13);
        java.lang.Throwable[] throwableArray38 = cardanEulerSingularityException1.getSuppressed();
        org.junit.Assert.assertNotNull(objArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray2), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray2), "[]");
        org.junit.Assert.assertNotNull(objArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray3), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray3), "[]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "Euler angles singularity" + "'", str6, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray7), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray7), "[]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Euler angles singularity" + "'", str8, "Euler angles singularity");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Euler angles singularity" + "'", str9, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray10), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray10), "[]");
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Euler angles singularity" + "'", str15, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray16), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray16), "[]");
        org.junit.Assert.assertNotNull(objArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray19), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray19), "[]");
        org.junit.Assert.assertNotNull(throwableArray20);
        org.junit.Assert.assertNotNull(throwableArray21);
        org.junit.Assert.assertNotNull(throwableArray22);
        org.junit.Assert.assertNotNull(objArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray25), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray25), "[]");
        org.junit.Assert.assertNotNull(objArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray26), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray26), "[]");
        org.junit.Assert.assertNotNull(throwableArray35);
        org.junit.Assert.assertNotNull(throwableArray36);
        org.junit.Assert.assertNotNull(throwableArray38);
    }

    @Test
    public void test1640() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1640");
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException1 = new org.apache.commons.math.geometry.CardanEulerSingularityException(true);
        java.lang.Object[] objArray2 = cardanEulerSingularityException1.getArguments();
        java.lang.Throwable[] throwableArray3 = cardanEulerSingularityException1.getSuppressed();
        java.lang.Throwable[] throwableArray4 = cardanEulerSingularityException1.getSuppressed();
        java.lang.Throwable[] throwableArray5 = cardanEulerSingularityException1.getSuppressed();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException7 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray8 = cardanEulerSingularityException7.getArguments();
        java.lang.Object[] objArray9 = cardanEulerSingularityException7.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException11 = new org.apache.commons.math.geometry.CardanEulerSingularityException(true);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException13 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        cardanEulerSingularityException11.addSuppressed((java.lang.Throwable) cardanEulerSingularityException13);
        cardanEulerSingularityException7.addSuppressed((java.lang.Throwable) cardanEulerSingularityException11);
        cardanEulerSingularityException1.addSuppressed((java.lang.Throwable) cardanEulerSingularityException7);
        java.lang.Throwable[] throwableArray17 = cardanEulerSingularityException1.getSuppressed();
        java.lang.String str18 = cardanEulerSingularityException1.getPattern();
        java.lang.Throwable[] throwableArray19 = cardanEulerSingularityException1.getSuppressed();
        java.lang.Object[] objArray20 = cardanEulerSingularityException1.getArguments();
        java.lang.Object[] objArray21 = cardanEulerSingularityException1.getArguments();
        java.lang.Class<?> wildcardClass22 = cardanEulerSingularityException1.getClass();
        org.junit.Assert.assertNotNull(objArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray2), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray2), "[]");
        org.junit.Assert.assertNotNull(throwableArray3);
        org.junit.Assert.assertNotNull(throwableArray4);
        org.junit.Assert.assertNotNull(throwableArray5);
        org.junit.Assert.assertNotNull(objArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray8), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray8), "[]");
        org.junit.Assert.assertNotNull(objArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray9), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray9), "[]");
        org.junit.Assert.assertNotNull(throwableArray17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "Cardan angles singularity" + "'", str18, "Cardan angles singularity");
        org.junit.Assert.assertNotNull(throwableArray19);
        org.junit.Assert.assertNotNull(objArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray20), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray20), "[]");
        org.junit.Assert.assertNotNull(objArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray21), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray21), "[]");
        org.junit.Assert.assertNotNull(wildcardClass22);
    }

    @Test
    public void test1641() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1641");
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException1 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray2 = cardanEulerSingularityException1.getArguments();
        java.lang.Object[] objArray3 = cardanEulerSingularityException1.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException5 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray6 = cardanEulerSingularityException5.getArguments();
        cardanEulerSingularityException1.addSuppressed((java.lang.Throwable) cardanEulerSingularityException5);
        java.lang.Throwable[] throwableArray8 = cardanEulerSingularityException1.getSuppressed();
        java.lang.String str9 = cardanEulerSingularityException1.getPattern();
        java.lang.Object[] objArray10 = cardanEulerSingularityException1.getArguments();
        java.lang.Object[] objArray11 = cardanEulerSingularityException1.getArguments();
        java.lang.Throwable[] throwableArray12 = cardanEulerSingularityException1.getSuppressed();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException14 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray15 = cardanEulerSingularityException14.getArguments();
        java.lang.Object[] objArray16 = cardanEulerSingularityException14.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException18 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray19 = cardanEulerSingularityException18.getArguments();
        cardanEulerSingularityException14.addSuppressed((java.lang.Throwable) cardanEulerSingularityException18);
        java.lang.Object[] objArray21 = cardanEulerSingularityException18.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException23 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray24 = cardanEulerSingularityException23.getArguments();
        java.lang.Throwable[] throwableArray25 = cardanEulerSingularityException23.getSuppressed();
        java.lang.String str26 = cardanEulerSingularityException23.getPattern();
        cardanEulerSingularityException18.addSuppressed((java.lang.Throwable) cardanEulerSingularityException23);
        java.lang.Object[] objArray28 = cardanEulerSingularityException18.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException30 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.String str31 = cardanEulerSingularityException30.getPattern();
        java.lang.Object[] objArray32 = cardanEulerSingularityException30.getArguments();
        java.lang.String str33 = cardanEulerSingularityException30.getPattern();
        cardanEulerSingularityException18.addSuppressed((java.lang.Throwable) cardanEulerSingularityException30);
        cardanEulerSingularityException1.addSuppressed((java.lang.Throwable) cardanEulerSingularityException18);
        java.lang.Throwable[] throwableArray36 = cardanEulerSingularityException18.getSuppressed();
        java.lang.String str37 = cardanEulerSingularityException18.toString();
        org.junit.Assert.assertNotNull(objArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray2), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray2), "[]");
        org.junit.Assert.assertNotNull(objArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray3), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray3), "[]");
        org.junit.Assert.assertNotNull(objArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray6), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray6), "[]");
        org.junit.Assert.assertNotNull(throwableArray8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Euler angles singularity" + "'", str9, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray10), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray10), "[]");
        org.junit.Assert.assertNotNull(objArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray11), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray11), "[]");
        org.junit.Assert.assertNotNull(throwableArray12);
        org.junit.Assert.assertNotNull(objArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray15), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray15), "[]");
        org.junit.Assert.assertNotNull(objArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray16), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray16), "[]");
        org.junit.Assert.assertNotNull(objArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray19), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray19), "[]");
        org.junit.Assert.assertNotNull(objArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray21), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray21), "[]");
        org.junit.Assert.assertNotNull(objArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray24), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray24), "[]");
        org.junit.Assert.assertNotNull(throwableArray25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "Euler angles singularity" + "'", str26, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray28), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray28), "[]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "Euler angles singularity" + "'", str31, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray32), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray32), "[]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "Euler angles singularity" + "'", str33, "Euler angles singularity");
        org.junit.Assert.assertNotNull(throwableArray36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "org.apache.commons.math.geometry.CardanEulerSingularityException: Euler angles singularity" + "'", str37, "org.apache.commons.math.geometry.CardanEulerSingularityException: Euler angles singularity");
    }

    @Test
    public void test1642() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1642");
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException1 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray2 = cardanEulerSingularityException1.getArguments();
        java.lang.String str3 = cardanEulerSingularityException1.getPattern();
        java.lang.Object[] objArray4 = cardanEulerSingularityException1.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException6 = new org.apache.commons.math.geometry.CardanEulerSingularityException(true);
        java.lang.Object[] objArray7 = cardanEulerSingularityException6.getArguments();
        java.lang.Throwable[] throwableArray8 = cardanEulerSingularityException6.getSuppressed();
        java.lang.Throwable[] throwableArray9 = cardanEulerSingularityException6.getSuppressed();
        java.lang.Throwable[] throwableArray10 = cardanEulerSingularityException6.getSuppressed();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException12 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray13 = cardanEulerSingularityException12.getArguments();
        java.lang.Object[] objArray14 = cardanEulerSingularityException12.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException16 = new org.apache.commons.math.geometry.CardanEulerSingularityException(true);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException18 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        cardanEulerSingularityException16.addSuppressed((java.lang.Throwable) cardanEulerSingularityException18);
        cardanEulerSingularityException12.addSuppressed((java.lang.Throwable) cardanEulerSingularityException16);
        cardanEulerSingularityException6.addSuppressed((java.lang.Throwable) cardanEulerSingularityException12);
        cardanEulerSingularityException1.addSuppressed((java.lang.Throwable) cardanEulerSingularityException6);
        java.lang.Throwable[] throwableArray23 = cardanEulerSingularityException1.getSuppressed();
        java.lang.Object[] objArray24 = cardanEulerSingularityException1.getArguments();
        java.lang.String str25 = cardanEulerSingularityException1.getPattern();
        java.lang.Object[] objArray26 = cardanEulerSingularityException1.getArguments();
        java.lang.String str27 = cardanEulerSingularityException1.toString();
        org.junit.Assert.assertNotNull(objArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray2), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray2), "[]");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Euler angles singularity" + "'", str3, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray4), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray4), "[]");
        org.junit.Assert.assertNotNull(objArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray7), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray7), "[]");
        org.junit.Assert.assertNotNull(throwableArray8);
        org.junit.Assert.assertNotNull(throwableArray9);
        org.junit.Assert.assertNotNull(throwableArray10);
        org.junit.Assert.assertNotNull(objArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray13), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray13), "[]");
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[]");
        org.junit.Assert.assertNotNull(throwableArray23);
        org.junit.Assert.assertNotNull(objArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray24), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray24), "[]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "Euler angles singularity" + "'", str25, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray26), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray26), "[]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "org.apache.commons.math.geometry.CardanEulerSingularityException: Euler angles singularity" + "'", str27, "org.apache.commons.math.geometry.CardanEulerSingularityException: Euler angles singularity");
    }

    @Test
    public void test1643() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1643");
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException1 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray2 = cardanEulerSingularityException1.getArguments();
        java.lang.Object[] objArray3 = cardanEulerSingularityException1.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException5 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.String str6 = cardanEulerSingularityException5.getPattern();
        java.lang.Object[] objArray7 = cardanEulerSingularityException5.getArguments();
        java.lang.String str8 = cardanEulerSingularityException5.getPattern();
        java.lang.String str9 = cardanEulerSingularityException5.getPattern();
        java.lang.Object[] objArray10 = cardanEulerSingularityException5.getArguments();
        cardanEulerSingularityException1.addSuppressed((java.lang.Throwable) cardanEulerSingularityException5);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException13 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray14 = cardanEulerSingularityException13.getArguments();
        java.lang.String str15 = cardanEulerSingularityException13.getPattern();
        java.lang.Object[] objArray16 = cardanEulerSingularityException13.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException18 = new org.apache.commons.math.geometry.CardanEulerSingularityException(true);
        java.lang.Object[] objArray19 = cardanEulerSingularityException18.getArguments();
        java.lang.Object[] objArray20 = cardanEulerSingularityException18.getArguments();
        cardanEulerSingularityException13.addSuppressed((java.lang.Throwable) cardanEulerSingularityException18);
        java.lang.String str22 = cardanEulerSingularityException13.getPattern();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException24 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray25 = cardanEulerSingularityException24.getArguments();
        java.lang.Object[] objArray26 = cardanEulerSingularityException24.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException28 = new org.apache.commons.math.geometry.CardanEulerSingularityException(true);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException30 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        cardanEulerSingularityException28.addSuppressed((java.lang.Throwable) cardanEulerSingularityException30);
        cardanEulerSingularityException24.addSuppressed((java.lang.Throwable) cardanEulerSingularityException28);
        java.lang.String str33 = cardanEulerSingularityException24.getPattern();
        cardanEulerSingularityException13.addSuppressed((java.lang.Throwable) cardanEulerSingularityException24);
        java.lang.Object[] objArray35 = cardanEulerSingularityException13.getArguments();
        java.lang.Throwable[] throwableArray36 = cardanEulerSingularityException13.getSuppressed();
        java.lang.Throwable[] throwableArray37 = cardanEulerSingularityException13.getSuppressed();
        cardanEulerSingularityException1.addSuppressed((java.lang.Throwable) cardanEulerSingularityException13);
        java.lang.Throwable[] throwableArray39 = cardanEulerSingularityException13.getSuppressed();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException41 = new org.apache.commons.math.geometry.CardanEulerSingularityException(true);
        java.lang.Object[] objArray42 = cardanEulerSingularityException41.getArguments();
        java.lang.Throwable[] throwableArray43 = cardanEulerSingularityException41.getSuppressed();
        java.lang.Throwable[] throwableArray44 = cardanEulerSingularityException41.getSuppressed();
        java.lang.Throwable[] throwableArray45 = cardanEulerSingularityException41.getSuppressed();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException47 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray48 = cardanEulerSingularityException47.getArguments();
        java.lang.Object[] objArray49 = cardanEulerSingularityException47.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException51 = new org.apache.commons.math.geometry.CardanEulerSingularityException(true);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException53 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        cardanEulerSingularityException51.addSuppressed((java.lang.Throwable) cardanEulerSingularityException53);
        cardanEulerSingularityException47.addSuppressed((java.lang.Throwable) cardanEulerSingularityException51);
        cardanEulerSingularityException41.addSuppressed((java.lang.Throwable) cardanEulerSingularityException47);
        java.lang.Object[] objArray57 = cardanEulerSingularityException41.getArguments();
        java.lang.String str58 = cardanEulerSingularityException41.getPattern();
        cardanEulerSingularityException13.addSuppressed((java.lang.Throwable) cardanEulerSingularityException41);
        java.lang.Throwable[] throwableArray60 = cardanEulerSingularityException13.getSuppressed();
        java.lang.Object[] objArray61 = cardanEulerSingularityException13.getArguments();
        org.junit.Assert.assertNotNull(objArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray2), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray2), "[]");
        org.junit.Assert.assertNotNull(objArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray3), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray3), "[]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "Euler angles singularity" + "'", str6, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray7), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray7), "[]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Euler angles singularity" + "'", str8, "Euler angles singularity");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Euler angles singularity" + "'", str9, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray10), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray10), "[]");
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Euler angles singularity" + "'", str15, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray16), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray16), "[]");
        org.junit.Assert.assertNotNull(objArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray19), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray19), "[]");
        org.junit.Assert.assertNotNull(objArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray20), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray20), "[]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "Euler angles singularity" + "'", str22, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray25), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray25), "[]");
        org.junit.Assert.assertNotNull(objArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray26), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray26), "[]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "Euler angles singularity" + "'", str33, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray35), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray35), "[]");
        org.junit.Assert.assertNotNull(throwableArray36);
        org.junit.Assert.assertNotNull(throwableArray37);
        org.junit.Assert.assertNotNull(throwableArray39);
        org.junit.Assert.assertNotNull(objArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray42), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray42), "[]");
        org.junit.Assert.assertNotNull(throwableArray43);
        org.junit.Assert.assertNotNull(throwableArray44);
        org.junit.Assert.assertNotNull(throwableArray45);
        org.junit.Assert.assertNotNull(objArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray48), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray48), "[]");
        org.junit.Assert.assertNotNull(objArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray49), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray49), "[]");
        org.junit.Assert.assertNotNull(objArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray57), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray57), "[]");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "Cardan angles singularity" + "'", str58, "Cardan angles singularity");
        org.junit.Assert.assertNotNull(throwableArray60);
        org.junit.Assert.assertNotNull(objArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray61), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray61), "[]");
    }

    @Test
    public void test1644() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1644");
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException1 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.String str2 = cardanEulerSingularityException1.getPattern();
        java.lang.Object[] objArray3 = cardanEulerSingularityException1.getArguments();
        java.lang.String str4 = cardanEulerSingularityException1.getPattern();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException6 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.String str7 = cardanEulerSingularityException6.getPattern();
        java.lang.Throwable[] throwableArray8 = cardanEulerSingularityException6.getSuppressed();
        cardanEulerSingularityException1.addSuppressed((java.lang.Throwable) cardanEulerSingularityException6);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException11 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.String str12 = cardanEulerSingularityException11.getPattern();
        java.lang.Object[] objArray13 = cardanEulerSingularityException11.getArguments();
        java.lang.String str14 = cardanEulerSingularityException11.getPattern();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException16 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.String str17 = cardanEulerSingularityException16.getPattern();
        java.lang.Throwable[] throwableArray18 = cardanEulerSingularityException16.getSuppressed();
        cardanEulerSingularityException11.addSuppressed((java.lang.Throwable) cardanEulerSingularityException16);
        cardanEulerSingularityException1.addSuppressed((java.lang.Throwable) cardanEulerSingularityException11);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException22 = new org.apache.commons.math.geometry.CardanEulerSingularityException(true);
        cardanEulerSingularityException1.addSuppressed((java.lang.Throwable) cardanEulerSingularityException22);
        java.lang.Object[] objArray24 = cardanEulerSingularityException1.getArguments();
        java.lang.Throwable[] throwableArray25 = cardanEulerSingularityException1.getSuppressed();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException27 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.String str28 = cardanEulerSingularityException27.getPattern();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException30 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.String str31 = cardanEulerSingularityException30.getPattern();
        java.lang.Throwable[] throwableArray32 = cardanEulerSingularityException30.getSuppressed();
        cardanEulerSingularityException27.addSuppressed((java.lang.Throwable) cardanEulerSingularityException30);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException35 = new org.apache.commons.math.geometry.CardanEulerSingularityException(true);
        java.lang.String str36 = cardanEulerSingularityException35.getPattern();
        cardanEulerSingularityException27.addSuppressed((java.lang.Throwable) cardanEulerSingularityException35);
        cardanEulerSingularityException1.addSuppressed((java.lang.Throwable) cardanEulerSingularityException35);
        java.lang.Object[] objArray39 = cardanEulerSingularityException35.getArguments();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "Euler angles singularity" + "'", str2, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray3), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray3), "[]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Euler angles singularity" + "'", str4, "Euler angles singularity");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Euler angles singularity" + "'", str7, "Euler angles singularity");
        org.junit.Assert.assertNotNull(throwableArray8);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Euler angles singularity" + "'", str12, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray13), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray13), "[]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "Euler angles singularity" + "'", str14, "Euler angles singularity");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "Euler angles singularity" + "'", str17, "Euler angles singularity");
        org.junit.Assert.assertNotNull(throwableArray18);
        org.junit.Assert.assertNotNull(objArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray24), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray24), "[]");
        org.junit.Assert.assertNotNull(throwableArray25);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "Euler angles singularity" + "'", str28, "Euler angles singularity");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "Euler angles singularity" + "'", str31, "Euler angles singularity");
        org.junit.Assert.assertNotNull(throwableArray32);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "Cardan angles singularity" + "'", str36, "Cardan angles singularity");
        org.junit.Assert.assertNotNull(objArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray39), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray39), "[]");
    }

    @Test
    public void test1645() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1645");
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException1 = new org.apache.commons.math.geometry.CardanEulerSingularityException(true);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException3 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        cardanEulerSingularityException1.addSuppressed((java.lang.Throwable) cardanEulerSingularityException3);
        java.lang.String str5 = cardanEulerSingularityException3.getPattern();
        java.lang.Throwable[] throwableArray6 = cardanEulerSingularityException3.getSuppressed();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException8 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.String str9 = cardanEulerSingularityException8.getPattern();
        java.lang.Object[] objArray10 = cardanEulerSingularityException8.getArguments();
        java.lang.String str11 = cardanEulerSingularityException8.getPattern();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException13 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.String str14 = cardanEulerSingularityException13.getPattern();
        java.lang.Throwable[] throwableArray15 = cardanEulerSingularityException13.getSuppressed();
        cardanEulerSingularityException8.addSuppressed((java.lang.Throwable) cardanEulerSingularityException13);
        cardanEulerSingularityException3.addSuppressed((java.lang.Throwable) cardanEulerSingularityException13);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException19 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray20 = cardanEulerSingularityException19.getArguments();
        java.lang.String str21 = cardanEulerSingularityException19.getPattern();
        java.lang.Object[] objArray22 = cardanEulerSingularityException19.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException24 = new org.apache.commons.math.geometry.CardanEulerSingularityException(true);
        java.lang.Object[] objArray25 = cardanEulerSingularityException24.getArguments();
        java.lang.Object[] objArray26 = cardanEulerSingularityException24.getArguments();
        java.lang.String str27 = cardanEulerSingularityException24.getPattern();
        java.lang.String str28 = cardanEulerSingularityException24.getPattern();
        cardanEulerSingularityException19.addSuppressed((java.lang.Throwable) cardanEulerSingularityException24);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException31 = new org.apache.commons.math.geometry.CardanEulerSingularityException(true);
        java.lang.Object[] objArray32 = cardanEulerSingularityException31.getArguments();
        java.lang.Throwable[] throwableArray33 = cardanEulerSingularityException31.getSuppressed();
        java.lang.Throwable[] throwableArray34 = cardanEulerSingularityException31.getSuppressed();
        java.lang.Throwable[] throwableArray35 = cardanEulerSingularityException31.getSuppressed();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException37 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray38 = cardanEulerSingularityException37.getArguments();
        java.lang.Object[] objArray39 = cardanEulerSingularityException37.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException41 = new org.apache.commons.math.geometry.CardanEulerSingularityException(true);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException43 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        cardanEulerSingularityException41.addSuppressed((java.lang.Throwable) cardanEulerSingularityException43);
        cardanEulerSingularityException37.addSuppressed((java.lang.Throwable) cardanEulerSingularityException41);
        cardanEulerSingularityException31.addSuppressed((java.lang.Throwable) cardanEulerSingularityException37);
        java.lang.Throwable[] throwableArray47 = cardanEulerSingularityException31.getSuppressed();
        cardanEulerSingularityException24.addSuppressed((java.lang.Throwable) cardanEulerSingularityException31);
        cardanEulerSingularityException3.addSuppressed((java.lang.Throwable) cardanEulerSingularityException24);
        java.lang.Throwable[] throwableArray50 = cardanEulerSingularityException24.getSuppressed();
        java.lang.Object[] objArray51 = cardanEulerSingularityException24.getArguments();
        java.lang.String str52 = cardanEulerSingularityException24.getPattern();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException54 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray55 = cardanEulerSingularityException54.getArguments();
        java.lang.Throwable[] throwableArray56 = cardanEulerSingularityException54.getSuppressed();
        java.lang.String str57 = cardanEulerSingularityException54.getPattern();
        java.lang.Throwable[] throwableArray58 = cardanEulerSingularityException54.getSuppressed();
        java.lang.String str59 = cardanEulerSingularityException54.getPattern();
        java.lang.String str60 = cardanEulerSingularityException54.getPattern();
        java.lang.String str61 = cardanEulerSingularityException54.getPattern();
        cardanEulerSingularityException24.addSuppressed((java.lang.Throwable) cardanEulerSingularityException54);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Euler angles singularity" + "'", str5, "Euler angles singularity");
        org.junit.Assert.assertNotNull(throwableArray6);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Euler angles singularity" + "'", str9, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray10), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray10), "[]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Euler angles singularity" + "'", str11, "Euler angles singularity");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "Euler angles singularity" + "'", str14, "Euler angles singularity");
        org.junit.Assert.assertNotNull(throwableArray15);
        org.junit.Assert.assertNotNull(objArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray20), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray20), "[]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "Euler angles singularity" + "'", str21, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray22), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray22), "[]");
        org.junit.Assert.assertNotNull(objArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray25), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray25), "[]");
        org.junit.Assert.assertNotNull(objArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray26), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray26), "[]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "Cardan angles singularity" + "'", str27, "Cardan angles singularity");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "Cardan angles singularity" + "'", str28, "Cardan angles singularity");
        org.junit.Assert.assertNotNull(objArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray32), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray32), "[]");
        org.junit.Assert.assertNotNull(throwableArray33);
        org.junit.Assert.assertNotNull(throwableArray34);
        org.junit.Assert.assertNotNull(throwableArray35);
        org.junit.Assert.assertNotNull(objArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray38), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray38), "[]");
        org.junit.Assert.assertNotNull(objArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray39), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray39), "[]");
        org.junit.Assert.assertNotNull(throwableArray47);
        org.junit.Assert.assertNotNull(throwableArray50);
        org.junit.Assert.assertNotNull(objArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray51), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray51), "[]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "Cardan angles singularity" + "'", str52, "Cardan angles singularity");
        org.junit.Assert.assertNotNull(objArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray55), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray55), "[]");
        org.junit.Assert.assertNotNull(throwableArray56);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "Euler angles singularity" + "'", str57, "Euler angles singularity");
        org.junit.Assert.assertNotNull(throwableArray58);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "Euler angles singularity" + "'", str59, "Euler angles singularity");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "Euler angles singularity" + "'", str60, "Euler angles singularity");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "Euler angles singularity" + "'", str61, "Euler angles singularity");
    }

    @Test
    public void test1646() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1646");
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException1 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray2 = cardanEulerSingularityException1.getArguments();
        java.lang.Object[] objArray3 = cardanEulerSingularityException1.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException5 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray6 = cardanEulerSingularityException5.getArguments();
        cardanEulerSingularityException1.addSuppressed((java.lang.Throwable) cardanEulerSingularityException5);
        java.lang.Throwable[] throwableArray8 = cardanEulerSingularityException5.getSuppressed();
        java.lang.Object[] objArray9 = cardanEulerSingularityException5.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException11 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray12 = cardanEulerSingularityException11.getArguments();
        java.lang.Object[] objArray13 = cardanEulerSingularityException11.getArguments();
        java.lang.Object[] objArray14 = cardanEulerSingularityException11.getArguments();
        cardanEulerSingularityException5.addSuppressed((java.lang.Throwable) cardanEulerSingularityException11);
        java.lang.Object[] objArray16 = cardanEulerSingularityException11.getArguments();
        java.lang.Throwable[] throwableArray17 = cardanEulerSingularityException11.getSuppressed();
        java.lang.Throwable[] throwableArray18 = cardanEulerSingularityException11.getSuppressed();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException20 = new org.apache.commons.math.geometry.CardanEulerSingularityException(true);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException22 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        cardanEulerSingularityException20.addSuppressed((java.lang.Throwable) cardanEulerSingularityException22);
        java.lang.Throwable[] throwableArray24 = cardanEulerSingularityException20.getSuppressed();
        java.lang.Throwable[] throwableArray25 = cardanEulerSingularityException20.getSuppressed();
        cardanEulerSingularityException11.addSuppressed((java.lang.Throwable) cardanEulerSingularityException20);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException28 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray29 = cardanEulerSingularityException28.getArguments();
        java.lang.Throwable[] throwableArray30 = cardanEulerSingularityException28.getSuppressed();
        java.lang.String str31 = cardanEulerSingularityException28.getPattern();
        java.lang.Throwable[] throwableArray32 = cardanEulerSingularityException28.getSuppressed();
        java.lang.String str33 = cardanEulerSingularityException28.getPattern();
        java.lang.String str34 = cardanEulerSingularityException28.getPattern();
        cardanEulerSingularityException11.addSuppressed((java.lang.Throwable) cardanEulerSingularityException28);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException37 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray38 = cardanEulerSingularityException37.getArguments();
        java.lang.String str39 = cardanEulerSingularityException37.getPattern();
        java.lang.Object[] objArray40 = cardanEulerSingularityException37.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException42 = new org.apache.commons.math.geometry.CardanEulerSingularityException(true);
        java.lang.Object[] objArray43 = cardanEulerSingularityException42.getArguments();
        java.lang.Object[] objArray44 = cardanEulerSingularityException42.getArguments();
        java.lang.String str45 = cardanEulerSingularityException42.getPattern();
        java.lang.String str46 = cardanEulerSingularityException42.getPattern();
        cardanEulerSingularityException37.addSuppressed((java.lang.Throwable) cardanEulerSingularityException42);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException49 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray50 = cardanEulerSingularityException49.getArguments();
        java.lang.String str51 = cardanEulerSingularityException49.getPattern();
        java.lang.Object[] objArray52 = cardanEulerSingularityException49.getArguments();
        java.lang.Object[] objArray53 = cardanEulerSingularityException49.getArguments();
        java.lang.String str54 = cardanEulerSingularityException49.getPattern();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException56 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        cardanEulerSingularityException49.addSuppressed((java.lang.Throwable) cardanEulerSingularityException56);
        java.lang.String str58 = cardanEulerSingularityException49.getPattern();
        java.lang.String str59 = cardanEulerSingularityException49.getPattern();
        cardanEulerSingularityException37.addSuppressed((java.lang.Throwable) cardanEulerSingularityException49);
        java.lang.Throwable[] throwableArray61 = cardanEulerSingularityException37.getSuppressed();
        java.lang.Throwable[] throwableArray62 = cardanEulerSingularityException37.getSuppressed();
        java.lang.String str63 = cardanEulerSingularityException37.getPattern();
        cardanEulerSingularityException11.addSuppressed((java.lang.Throwable) cardanEulerSingularityException37);
        org.junit.Assert.assertNotNull(objArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray2), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray2), "[]");
        org.junit.Assert.assertNotNull(objArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray3), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray3), "[]");
        org.junit.Assert.assertNotNull(objArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray6), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray6), "[]");
        org.junit.Assert.assertNotNull(throwableArray8);
        org.junit.Assert.assertNotNull(objArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray9), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray9), "[]");
        org.junit.Assert.assertNotNull(objArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray12), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray12), "[]");
        org.junit.Assert.assertNotNull(objArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray13), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray13), "[]");
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[]");
        org.junit.Assert.assertNotNull(objArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray16), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray16), "[]");
        org.junit.Assert.assertNotNull(throwableArray17);
        org.junit.Assert.assertNotNull(throwableArray18);
        org.junit.Assert.assertNotNull(throwableArray24);
        org.junit.Assert.assertNotNull(throwableArray25);
        org.junit.Assert.assertNotNull(objArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray29), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray29), "[]");
        org.junit.Assert.assertNotNull(throwableArray30);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "Euler angles singularity" + "'", str31, "Euler angles singularity");
        org.junit.Assert.assertNotNull(throwableArray32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "Euler angles singularity" + "'", str33, "Euler angles singularity");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "Euler angles singularity" + "'", str34, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray38), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray38), "[]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "Euler angles singularity" + "'", str39, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray40), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray40), "[]");
        org.junit.Assert.assertNotNull(objArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray43), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray43), "[]");
        org.junit.Assert.assertNotNull(objArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray44), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray44), "[]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "Cardan angles singularity" + "'", str45, "Cardan angles singularity");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "Cardan angles singularity" + "'", str46, "Cardan angles singularity");
        org.junit.Assert.assertNotNull(objArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray50), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray50), "[]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "Euler angles singularity" + "'", str51, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray52), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray52), "[]");
        org.junit.Assert.assertNotNull(objArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray53), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray53), "[]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "Euler angles singularity" + "'", str54, "Euler angles singularity");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "Euler angles singularity" + "'", str58, "Euler angles singularity");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "Euler angles singularity" + "'", str59, "Euler angles singularity");
        org.junit.Assert.assertNotNull(throwableArray61);
        org.junit.Assert.assertNotNull(throwableArray62);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "Euler angles singularity" + "'", str63, "Euler angles singularity");
    }

    @Test
    public void test1647() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1647");
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException1 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.String str2 = cardanEulerSingularityException1.getPattern();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException4 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.String str5 = cardanEulerSingularityException4.getPattern();
        java.lang.Throwable[] throwableArray6 = cardanEulerSingularityException4.getSuppressed();
        cardanEulerSingularityException1.addSuppressed((java.lang.Throwable) cardanEulerSingularityException4);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException9 = new org.apache.commons.math.geometry.CardanEulerSingularityException(true);
        java.lang.String str10 = cardanEulerSingularityException9.getPattern();
        cardanEulerSingularityException1.addSuppressed((java.lang.Throwable) cardanEulerSingularityException9);
        java.lang.String str12 = cardanEulerSingularityException1.getPattern();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException14 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray15 = cardanEulerSingularityException14.getArguments();
        java.lang.Object[] objArray16 = cardanEulerSingularityException14.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException18 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray19 = cardanEulerSingularityException18.getArguments();
        cardanEulerSingularityException14.addSuppressed((java.lang.Throwable) cardanEulerSingularityException18);
        java.lang.Throwable[] throwableArray21 = cardanEulerSingularityException14.getSuppressed();
        java.lang.String str22 = cardanEulerSingularityException14.getPattern();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException24 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray25 = cardanEulerSingularityException24.getArguments();
        java.lang.String str26 = cardanEulerSingularityException24.getPattern();
        java.lang.Object[] objArray27 = cardanEulerSingularityException24.getArguments();
        java.lang.Object[] objArray28 = cardanEulerSingularityException24.getArguments();
        java.lang.String str29 = cardanEulerSingularityException24.getPattern();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException31 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        cardanEulerSingularityException24.addSuppressed((java.lang.Throwable) cardanEulerSingularityException31);
        cardanEulerSingularityException14.addSuppressed((java.lang.Throwable) cardanEulerSingularityException31);
        cardanEulerSingularityException1.addSuppressed((java.lang.Throwable) cardanEulerSingularityException14);
        java.lang.Throwable[] throwableArray35 = cardanEulerSingularityException14.getSuppressed();
        java.lang.Class<?> wildcardClass36 = throwableArray35.getClass();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "Euler angles singularity" + "'", str2, "Euler angles singularity");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Euler angles singularity" + "'", str5, "Euler angles singularity");
        org.junit.Assert.assertNotNull(throwableArray6);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Cardan angles singularity" + "'", str10, "Cardan angles singularity");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Euler angles singularity" + "'", str12, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray15), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray15), "[]");
        org.junit.Assert.assertNotNull(objArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray16), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray16), "[]");
        org.junit.Assert.assertNotNull(objArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray19), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray19), "[]");
        org.junit.Assert.assertNotNull(throwableArray21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "Euler angles singularity" + "'", str22, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray25), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray25), "[]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "Euler angles singularity" + "'", str26, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray27), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray27), "[]");
        org.junit.Assert.assertNotNull(objArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray28), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray28), "[]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "Euler angles singularity" + "'", str29, "Euler angles singularity");
        org.junit.Assert.assertNotNull(throwableArray35);
        org.junit.Assert.assertNotNull(wildcardClass36);
    }

    @Test
    public void test1648() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1648");
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException1 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray2 = cardanEulerSingularityException1.getArguments();
        java.lang.Object[] objArray3 = cardanEulerSingularityException1.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException5 = new org.apache.commons.math.geometry.CardanEulerSingularityException(true);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException7 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        cardanEulerSingularityException5.addSuppressed((java.lang.Throwable) cardanEulerSingularityException7);
        cardanEulerSingularityException1.addSuppressed((java.lang.Throwable) cardanEulerSingularityException5);
        java.lang.Object[] objArray10 = cardanEulerSingularityException5.getArguments();
        java.lang.Throwable[] throwableArray11 = cardanEulerSingularityException5.getSuppressed();
        java.lang.String str12 = cardanEulerSingularityException5.getPattern();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException14 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray15 = cardanEulerSingularityException14.getArguments();
        java.lang.Object[] objArray16 = cardanEulerSingularityException14.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException18 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray19 = cardanEulerSingularityException18.getArguments();
        cardanEulerSingularityException14.addSuppressed((java.lang.Throwable) cardanEulerSingularityException18);
        java.lang.Throwable[] throwableArray21 = cardanEulerSingularityException18.getSuppressed();
        java.lang.Object[] objArray22 = cardanEulerSingularityException18.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException24 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray25 = cardanEulerSingularityException24.getArguments();
        java.lang.Object[] objArray26 = cardanEulerSingularityException24.getArguments();
        java.lang.Object[] objArray27 = cardanEulerSingularityException24.getArguments();
        cardanEulerSingularityException18.addSuppressed((java.lang.Throwable) cardanEulerSingularityException24);
        java.lang.Object[] objArray29 = cardanEulerSingularityException24.getArguments();
        java.lang.Throwable[] throwableArray30 = cardanEulerSingularityException24.getSuppressed();
        cardanEulerSingularityException5.addSuppressed((java.lang.Throwable) cardanEulerSingularityException24);
        java.lang.String str32 = cardanEulerSingularityException24.getPattern();
        java.lang.String str33 = cardanEulerSingularityException24.getPattern();
        org.junit.Assert.assertNotNull(objArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray2), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray2), "[]");
        org.junit.Assert.assertNotNull(objArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray3), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray3), "[]");
        org.junit.Assert.assertNotNull(objArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray10), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray10), "[]");
        org.junit.Assert.assertNotNull(throwableArray11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Cardan angles singularity" + "'", str12, "Cardan angles singularity");
        org.junit.Assert.assertNotNull(objArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray15), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray15), "[]");
        org.junit.Assert.assertNotNull(objArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray16), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray16), "[]");
        org.junit.Assert.assertNotNull(objArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray19), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray19), "[]");
        org.junit.Assert.assertNotNull(throwableArray21);
        org.junit.Assert.assertNotNull(objArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray22), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray22), "[]");
        org.junit.Assert.assertNotNull(objArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray25), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray25), "[]");
        org.junit.Assert.assertNotNull(objArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray26), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray26), "[]");
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray27), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray27), "[]");
        org.junit.Assert.assertNotNull(objArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray29), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray29), "[]");
        org.junit.Assert.assertNotNull(throwableArray30);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "Euler angles singularity" + "'", str32, "Euler angles singularity");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "Euler angles singularity" + "'", str33, "Euler angles singularity");
    }

    @Test
    public void test1649() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1649");
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException1 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray2 = cardanEulerSingularityException1.getArguments();
        java.lang.Object[] objArray3 = cardanEulerSingularityException1.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException5 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray6 = cardanEulerSingularityException5.getArguments();
        cardanEulerSingularityException1.addSuppressed((java.lang.Throwable) cardanEulerSingularityException5);
        java.lang.Throwable[] throwableArray8 = cardanEulerSingularityException1.getSuppressed();
        java.lang.String str9 = cardanEulerSingularityException1.getPattern();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException11 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray12 = cardanEulerSingularityException11.getArguments();
        java.lang.String str13 = cardanEulerSingularityException11.getPattern();
        java.lang.Object[] objArray14 = cardanEulerSingularityException11.getArguments();
        java.lang.Object[] objArray15 = cardanEulerSingularityException11.getArguments();
        java.lang.String str16 = cardanEulerSingularityException11.getPattern();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException18 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        cardanEulerSingularityException11.addSuppressed((java.lang.Throwable) cardanEulerSingularityException18);
        cardanEulerSingularityException1.addSuppressed((java.lang.Throwable) cardanEulerSingularityException18);
        java.lang.Object[] objArray21 = cardanEulerSingularityException18.getArguments();
        java.lang.Object[] objArray22 = cardanEulerSingularityException18.getArguments();
        java.lang.Object[] objArray23 = cardanEulerSingularityException18.getArguments();
        java.lang.Throwable[] throwableArray24 = cardanEulerSingularityException18.getSuppressed();
        java.lang.Class<?> wildcardClass25 = cardanEulerSingularityException18.getClass();
        org.junit.Assert.assertNotNull(objArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray2), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray2), "[]");
        org.junit.Assert.assertNotNull(objArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray3), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray3), "[]");
        org.junit.Assert.assertNotNull(objArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray6), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray6), "[]");
        org.junit.Assert.assertNotNull(throwableArray8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Euler angles singularity" + "'", str9, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray12), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray12), "[]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Euler angles singularity" + "'", str13, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[]");
        org.junit.Assert.assertNotNull(objArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray15), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray15), "[]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "Euler angles singularity" + "'", str16, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray21), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray21), "[]");
        org.junit.Assert.assertNotNull(objArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray22), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray22), "[]");
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray23), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray23), "[]");
        org.junit.Assert.assertNotNull(throwableArray24);
        org.junit.Assert.assertNotNull(wildcardClass25);
    }

    @Test
    public void test1650() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1650");
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException1 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray2 = cardanEulerSingularityException1.getArguments();
        java.lang.Throwable[] throwableArray3 = cardanEulerSingularityException1.getSuppressed();
        java.lang.String str4 = cardanEulerSingularityException1.getPattern();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException6 = new org.apache.commons.math.geometry.CardanEulerSingularityException(true);
        java.lang.String str7 = cardanEulerSingularityException6.getPattern();
        cardanEulerSingularityException1.addSuppressed((java.lang.Throwable) cardanEulerSingularityException6);
        java.lang.Object[] objArray9 = cardanEulerSingularityException6.getArguments();
        java.lang.String str10 = cardanEulerSingularityException6.getPattern();
        java.lang.Throwable[] throwableArray11 = cardanEulerSingularityException6.getSuppressed();
        java.lang.Throwable[] throwableArray12 = cardanEulerSingularityException6.getSuppressed();
        java.lang.String str13 = cardanEulerSingularityException6.toString();
        org.junit.Assert.assertNotNull(objArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray2), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray2), "[]");
        org.junit.Assert.assertNotNull(throwableArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Euler angles singularity" + "'", str4, "Euler angles singularity");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Cardan angles singularity" + "'", str7, "Cardan angles singularity");
        org.junit.Assert.assertNotNull(objArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray9), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray9), "[]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Cardan angles singularity" + "'", str10, "Cardan angles singularity");
        org.junit.Assert.assertNotNull(throwableArray11);
        org.junit.Assert.assertNotNull(throwableArray12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "org.apache.commons.math.geometry.CardanEulerSingularityException: Cardan angles singularity" + "'", str13, "org.apache.commons.math.geometry.CardanEulerSingularityException: Cardan angles singularity");
    }

    @Test
    public void test1651() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1651");
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException1 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray2 = cardanEulerSingularityException1.getArguments();
        java.lang.Object[] objArray3 = cardanEulerSingularityException1.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException5 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray6 = cardanEulerSingularityException5.getArguments();
        cardanEulerSingularityException1.addSuppressed((java.lang.Throwable) cardanEulerSingularityException5);
        java.lang.Throwable[] throwableArray8 = cardanEulerSingularityException1.getSuppressed();
        java.lang.String str9 = cardanEulerSingularityException1.getPattern();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException11 = new org.apache.commons.math.geometry.CardanEulerSingularityException(true);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException13 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        cardanEulerSingularityException11.addSuppressed((java.lang.Throwable) cardanEulerSingularityException13);
        java.lang.String str15 = cardanEulerSingularityException13.getPattern();
        java.lang.Object[] objArray16 = cardanEulerSingularityException13.getArguments();
        java.lang.Object[] objArray17 = cardanEulerSingularityException13.getArguments();
        cardanEulerSingularityException1.addSuppressed((java.lang.Throwable) cardanEulerSingularityException13);
        java.lang.Throwable[] throwableArray19 = cardanEulerSingularityException1.getSuppressed();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException21 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.String str22 = cardanEulerSingularityException21.getPattern();
        java.lang.Object[] objArray23 = cardanEulerSingularityException21.getArguments();
        java.lang.String str24 = cardanEulerSingularityException21.getPattern();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException26 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.String str27 = cardanEulerSingularityException26.getPattern();
        java.lang.Throwable[] throwableArray28 = cardanEulerSingularityException26.getSuppressed();
        cardanEulerSingularityException21.addSuppressed((java.lang.Throwable) cardanEulerSingularityException26);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException31 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.String str32 = cardanEulerSingularityException31.getPattern();
        java.lang.Object[] objArray33 = cardanEulerSingularityException31.getArguments();
        java.lang.String str34 = cardanEulerSingularityException31.getPattern();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException36 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.String str37 = cardanEulerSingularityException36.getPattern();
        java.lang.Throwable[] throwableArray38 = cardanEulerSingularityException36.getSuppressed();
        cardanEulerSingularityException31.addSuppressed((java.lang.Throwable) cardanEulerSingularityException36);
        cardanEulerSingularityException21.addSuppressed((java.lang.Throwable) cardanEulerSingularityException31);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException42 = new org.apache.commons.math.geometry.CardanEulerSingularityException(true);
        cardanEulerSingularityException21.addSuppressed((java.lang.Throwable) cardanEulerSingularityException42);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException45 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray46 = cardanEulerSingularityException45.getArguments();
        java.lang.Object[] objArray47 = cardanEulerSingularityException45.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException49 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray50 = cardanEulerSingularityException49.getArguments();
        cardanEulerSingularityException45.addSuppressed((java.lang.Throwable) cardanEulerSingularityException49);
        java.lang.Object[] objArray52 = cardanEulerSingularityException49.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException54 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray55 = cardanEulerSingularityException54.getArguments();
        java.lang.Throwable[] throwableArray56 = cardanEulerSingularityException54.getSuppressed();
        java.lang.String str57 = cardanEulerSingularityException54.getPattern();
        cardanEulerSingularityException49.addSuppressed((java.lang.Throwable) cardanEulerSingularityException54);
        java.lang.Object[] objArray59 = cardanEulerSingularityException54.getArguments();
        cardanEulerSingularityException21.addSuppressed((java.lang.Throwable) cardanEulerSingularityException54);
        cardanEulerSingularityException1.addSuppressed((java.lang.Throwable) cardanEulerSingularityException21);
        java.lang.Throwable[] throwableArray62 = cardanEulerSingularityException21.getSuppressed();
        java.lang.Class<?> wildcardClass63 = cardanEulerSingularityException21.getClass();
        org.junit.Assert.assertNotNull(objArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray2), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray2), "[]");
        org.junit.Assert.assertNotNull(objArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray3), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray3), "[]");
        org.junit.Assert.assertNotNull(objArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray6), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray6), "[]");
        org.junit.Assert.assertNotNull(throwableArray8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Euler angles singularity" + "'", str9, "Euler angles singularity");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Euler angles singularity" + "'", str15, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray16), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray16), "[]");
        org.junit.Assert.assertNotNull(objArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray17), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray17), "[]");
        org.junit.Assert.assertNotNull(throwableArray19);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "Euler angles singularity" + "'", str22, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray23), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray23), "[]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "Euler angles singularity" + "'", str24, "Euler angles singularity");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "Euler angles singularity" + "'", str27, "Euler angles singularity");
        org.junit.Assert.assertNotNull(throwableArray28);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "Euler angles singularity" + "'", str32, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray33), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray33), "[]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "Euler angles singularity" + "'", str34, "Euler angles singularity");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "Euler angles singularity" + "'", str37, "Euler angles singularity");
        org.junit.Assert.assertNotNull(throwableArray38);
        org.junit.Assert.assertNotNull(objArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray46), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray46), "[]");
        org.junit.Assert.assertNotNull(objArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray47), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray47), "[]");
        org.junit.Assert.assertNotNull(objArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray50), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray50), "[]");
        org.junit.Assert.assertNotNull(objArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray52), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray52), "[]");
        org.junit.Assert.assertNotNull(objArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray55), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray55), "[]");
        org.junit.Assert.assertNotNull(throwableArray56);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "Euler angles singularity" + "'", str57, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray59), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray59), "[]");
        org.junit.Assert.assertNotNull(throwableArray62);
        org.junit.Assert.assertNotNull(wildcardClass63);
    }

    @Test
    public void test1652() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1652");
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException1 = new org.apache.commons.math.geometry.CardanEulerSingularityException(true);
        java.lang.Object[] objArray2 = cardanEulerSingularityException1.getArguments();
        java.lang.Object[] objArray3 = cardanEulerSingularityException1.getArguments();
        java.lang.String str4 = cardanEulerSingularityException1.getPattern();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException6 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray7 = cardanEulerSingularityException6.getArguments();
        java.lang.Object[] objArray8 = cardanEulerSingularityException6.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException10 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray11 = cardanEulerSingularityException10.getArguments();
        cardanEulerSingularityException6.addSuppressed((java.lang.Throwable) cardanEulerSingularityException10);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException14 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray15 = cardanEulerSingularityException14.getArguments();
        java.lang.Object[] objArray16 = cardanEulerSingularityException14.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException18 = new org.apache.commons.math.geometry.CardanEulerSingularityException(true);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException20 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        cardanEulerSingularityException18.addSuppressed((java.lang.Throwable) cardanEulerSingularityException20);
        cardanEulerSingularityException14.addSuppressed((java.lang.Throwable) cardanEulerSingularityException18);
        java.lang.Throwable[] throwableArray23 = cardanEulerSingularityException14.getSuppressed();
        cardanEulerSingularityException10.addSuppressed((java.lang.Throwable) cardanEulerSingularityException14);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException26 = new org.apache.commons.math.geometry.CardanEulerSingularityException(true);
        java.lang.Object[] objArray27 = cardanEulerSingularityException26.getArguments();
        java.lang.Object[] objArray28 = cardanEulerSingularityException26.getArguments();
        cardanEulerSingularityException14.addSuppressed((java.lang.Throwable) cardanEulerSingularityException26);
        cardanEulerSingularityException1.addSuppressed((java.lang.Throwable) cardanEulerSingularityException14);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException32 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.String str33 = cardanEulerSingularityException32.getPattern();
        java.lang.Object[] objArray34 = cardanEulerSingularityException32.getArguments();
        java.lang.String str35 = cardanEulerSingularityException32.getPattern();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException37 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.String str38 = cardanEulerSingularityException37.getPattern();
        java.lang.Throwable[] throwableArray39 = cardanEulerSingularityException37.getSuppressed();
        cardanEulerSingularityException32.addSuppressed((java.lang.Throwable) cardanEulerSingularityException37);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException42 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.String str43 = cardanEulerSingularityException42.getPattern();
        java.lang.Object[] objArray44 = cardanEulerSingularityException42.getArguments();
        java.lang.String str45 = cardanEulerSingularityException42.getPattern();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException47 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.String str48 = cardanEulerSingularityException47.getPattern();
        java.lang.Throwable[] throwableArray49 = cardanEulerSingularityException47.getSuppressed();
        cardanEulerSingularityException42.addSuppressed((java.lang.Throwable) cardanEulerSingularityException47);
        cardanEulerSingularityException32.addSuppressed((java.lang.Throwable) cardanEulerSingularityException42);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException53 = new org.apache.commons.math.geometry.CardanEulerSingularityException(true);
        cardanEulerSingularityException32.addSuppressed((java.lang.Throwable) cardanEulerSingularityException53);
        java.lang.String str55 = cardanEulerSingularityException53.getPattern();
        cardanEulerSingularityException1.addSuppressed((java.lang.Throwable) cardanEulerSingularityException53);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException58 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.String str59 = cardanEulerSingularityException58.getPattern();
        java.lang.Object[] objArray60 = cardanEulerSingularityException58.getArguments();
        java.lang.String str61 = cardanEulerSingularityException58.getPattern();
        java.lang.Throwable[] throwableArray62 = cardanEulerSingularityException58.getSuppressed();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException64 = new org.apache.commons.math.geometry.CardanEulerSingularityException(true);
        java.lang.Object[] objArray65 = cardanEulerSingularityException64.getArguments();
        java.lang.Throwable[] throwableArray66 = cardanEulerSingularityException64.getSuppressed();
        java.lang.Throwable[] throwableArray67 = cardanEulerSingularityException64.getSuppressed();
        java.lang.Throwable[] throwableArray68 = cardanEulerSingularityException64.getSuppressed();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException70 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray71 = cardanEulerSingularityException70.getArguments();
        java.lang.Object[] objArray72 = cardanEulerSingularityException70.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException74 = new org.apache.commons.math.geometry.CardanEulerSingularityException(true);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException76 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        cardanEulerSingularityException74.addSuppressed((java.lang.Throwable) cardanEulerSingularityException76);
        cardanEulerSingularityException70.addSuppressed((java.lang.Throwable) cardanEulerSingularityException74);
        cardanEulerSingularityException64.addSuppressed((java.lang.Throwable) cardanEulerSingularityException70);
        java.lang.Throwable[] throwableArray80 = cardanEulerSingularityException64.getSuppressed();
        java.lang.Throwable[] throwableArray81 = cardanEulerSingularityException64.getSuppressed();
        cardanEulerSingularityException58.addSuppressed((java.lang.Throwable) cardanEulerSingularityException64);
        cardanEulerSingularityException1.addSuppressed((java.lang.Throwable) cardanEulerSingularityException58);
        java.lang.String str84 = cardanEulerSingularityException1.getPattern();
        java.lang.String str85 = cardanEulerSingularityException1.getPattern();
        java.lang.Object[] objArray86 = cardanEulerSingularityException1.getArguments();
        org.junit.Assert.assertNotNull(objArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray2), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray2), "[]");
        org.junit.Assert.assertNotNull(objArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray3), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray3), "[]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Cardan angles singularity" + "'", str4, "Cardan angles singularity");
        org.junit.Assert.assertNotNull(objArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray7), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray7), "[]");
        org.junit.Assert.assertNotNull(objArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray8), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray8), "[]");
        org.junit.Assert.assertNotNull(objArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray11), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray11), "[]");
        org.junit.Assert.assertNotNull(objArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray15), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray15), "[]");
        org.junit.Assert.assertNotNull(objArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray16), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray16), "[]");
        org.junit.Assert.assertNotNull(throwableArray23);
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray27), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray27), "[]");
        org.junit.Assert.assertNotNull(objArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray28), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray28), "[]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "Euler angles singularity" + "'", str33, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray34), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray34), "[]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "Euler angles singularity" + "'", str35, "Euler angles singularity");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "Euler angles singularity" + "'", str38, "Euler angles singularity");
        org.junit.Assert.assertNotNull(throwableArray39);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "Euler angles singularity" + "'", str43, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray44), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray44), "[]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "Euler angles singularity" + "'", str45, "Euler angles singularity");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "Euler angles singularity" + "'", str48, "Euler angles singularity");
        org.junit.Assert.assertNotNull(throwableArray49);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "Cardan angles singularity" + "'", str55, "Cardan angles singularity");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "Euler angles singularity" + "'", str59, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray60), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray60), "[]");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "Euler angles singularity" + "'", str61, "Euler angles singularity");
        org.junit.Assert.assertNotNull(throwableArray62);
        org.junit.Assert.assertNotNull(objArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray65), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray65), "[]");
        org.junit.Assert.assertNotNull(throwableArray66);
        org.junit.Assert.assertNotNull(throwableArray67);
        org.junit.Assert.assertNotNull(throwableArray68);
        org.junit.Assert.assertNotNull(objArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray71), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray71), "[]");
        org.junit.Assert.assertNotNull(objArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray72), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray72), "[]");
        org.junit.Assert.assertNotNull(throwableArray80);
        org.junit.Assert.assertNotNull(throwableArray81);
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "Cardan angles singularity" + "'", str84, "Cardan angles singularity");
        org.junit.Assert.assertEquals("'" + str85 + "' != '" + "Cardan angles singularity" + "'", str85, "Cardan angles singularity");
        org.junit.Assert.assertNotNull(objArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray86), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray86), "[]");
    }

    @Test
    public void test1653() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1653");
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException1 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray2 = cardanEulerSingularityException1.getArguments();
        java.lang.String str3 = cardanEulerSingularityException1.getPattern();
        java.lang.Object[] objArray4 = cardanEulerSingularityException1.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException6 = new org.apache.commons.math.geometry.CardanEulerSingularityException(true);
        java.lang.Object[] objArray7 = cardanEulerSingularityException6.getArguments();
        java.lang.Object[] objArray8 = cardanEulerSingularityException6.getArguments();
        java.lang.String str9 = cardanEulerSingularityException6.getPattern();
        java.lang.String str10 = cardanEulerSingularityException6.getPattern();
        cardanEulerSingularityException1.addSuppressed((java.lang.Throwable) cardanEulerSingularityException6);
        java.lang.String str12 = cardanEulerSingularityException6.getPattern();
        java.lang.Object[] objArray13 = cardanEulerSingularityException6.getArguments();
        java.lang.Throwable[] throwableArray14 = cardanEulerSingularityException6.getSuppressed();
        java.lang.String str15 = cardanEulerSingularityException6.getPattern();
        org.junit.Assert.assertNotNull(objArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray2), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray2), "[]");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Euler angles singularity" + "'", str3, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray4), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray4), "[]");
        org.junit.Assert.assertNotNull(objArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray7), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray7), "[]");
        org.junit.Assert.assertNotNull(objArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray8), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray8), "[]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Cardan angles singularity" + "'", str9, "Cardan angles singularity");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Cardan angles singularity" + "'", str10, "Cardan angles singularity");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Cardan angles singularity" + "'", str12, "Cardan angles singularity");
        org.junit.Assert.assertNotNull(objArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray13), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray13), "[]");
        org.junit.Assert.assertNotNull(throwableArray14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Cardan angles singularity" + "'", str15, "Cardan angles singularity");
    }

    @Test
    public void test1654() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1654");
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException1 = new org.apache.commons.math.geometry.CardanEulerSingularityException(true);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException3 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        cardanEulerSingularityException1.addSuppressed((java.lang.Throwable) cardanEulerSingularityException3);
        java.lang.String str5 = cardanEulerSingularityException3.getPattern();
        java.lang.Throwable[] throwableArray6 = cardanEulerSingularityException3.getSuppressed();
        java.lang.String str7 = cardanEulerSingularityException3.getPattern();
        java.lang.Throwable[] throwableArray8 = cardanEulerSingularityException3.getSuppressed();
        java.lang.String str9 = cardanEulerSingularityException3.getPattern();
        java.lang.String str10 = cardanEulerSingularityException3.getPattern();
        java.lang.Class<?> wildcardClass11 = cardanEulerSingularityException3.getClass();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Euler angles singularity" + "'", str5, "Euler angles singularity");
        org.junit.Assert.assertNotNull(throwableArray6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Euler angles singularity" + "'", str7, "Euler angles singularity");
        org.junit.Assert.assertNotNull(throwableArray8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Euler angles singularity" + "'", str9, "Euler angles singularity");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Euler angles singularity" + "'", str10, "Euler angles singularity");
        org.junit.Assert.assertNotNull(wildcardClass11);
    }

    @Test
    public void test1655() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1655");
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException1 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.String str2 = cardanEulerSingularityException1.getPattern();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException4 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.String str5 = cardanEulerSingularityException4.getPattern();
        java.lang.Throwable[] throwableArray6 = cardanEulerSingularityException4.getSuppressed();
        cardanEulerSingularityException1.addSuppressed((java.lang.Throwable) cardanEulerSingularityException4);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException9 = new org.apache.commons.math.geometry.CardanEulerSingularityException(true);
        java.lang.String str10 = cardanEulerSingularityException9.getPattern();
        cardanEulerSingularityException1.addSuppressed((java.lang.Throwable) cardanEulerSingularityException9);
        java.lang.String str12 = cardanEulerSingularityException1.getPattern();
        java.lang.Throwable[] throwableArray13 = cardanEulerSingularityException1.getSuppressed();
        java.lang.Class<?> wildcardClass14 = cardanEulerSingularityException1.getClass();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "Euler angles singularity" + "'", str2, "Euler angles singularity");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Euler angles singularity" + "'", str5, "Euler angles singularity");
        org.junit.Assert.assertNotNull(throwableArray6);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Cardan angles singularity" + "'", str10, "Cardan angles singularity");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Euler angles singularity" + "'", str12, "Euler angles singularity");
        org.junit.Assert.assertNotNull(throwableArray13);
        org.junit.Assert.assertNotNull(wildcardClass14);
    }

    @Test
    public void test1656() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1656");
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException1 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray2 = cardanEulerSingularityException1.getArguments();
        java.lang.Object[] objArray3 = cardanEulerSingularityException1.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException5 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray6 = cardanEulerSingularityException5.getArguments();
        cardanEulerSingularityException1.addSuppressed((java.lang.Throwable) cardanEulerSingularityException5);
        java.lang.Throwable[] throwableArray8 = cardanEulerSingularityException1.getSuppressed();
        java.lang.String str9 = cardanEulerSingularityException1.getPattern();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException11 = new org.apache.commons.math.geometry.CardanEulerSingularityException(true);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException13 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        cardanEulerSingularityException11.addSuppressed((java.lang.Throwable) cardanEulerSingularityException13);
        java.lang.String str15 = cardanEulerSingularityException13.getPattern();
        java.lang.Object[] objArray16 = cardanEulerSingularityException13.getArguments();
        java.lang.Object[] objArray17 = cardanEulerSingularityException13.getArguments();
        cardanEulerSingularityException1.addSuppressed((java.lang.Throwable) cardanEulerSingularityException13);
        java.lang.Throwable[] throwableArray19 = cardanEulerSingularityException1.getSuppressed();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException21 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.String str22 = cardanEulerSingularityException21.getPattern();
        java.lang.Object[] objArray23 = cardanEulerSingularityException21.getArguments();
        java.lang.String str24 = cardanEulerSingularityException21.getPattern();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException26 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.String str27 = cardanEulerSingularityException26.getPattern();
        java.lang.Throwable[] throwableArray28 = cardanEulerSingularityException26.getSuppressed();
        cardanEulerSingularityException21.addSuppressed((java.lang.Throwable) cardanEulerSingularityException26);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException31 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.String str32 = cardanEulerSingularityException31.getPattern();
        java.lang.Object[] objArray33 = cardanEulerSingularityException31.getArguments();
        java.lang.String str34 = cardanEulerSingularityException31.getPattern();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException36 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.String str37 = cardanEulerSingularityException36.getPattern();
        java.lang.Throwable[] throwableArray38 = cardanEulerSingularityException36.getSuppressed();
        cardanEulerSingularityException31.addSuppressed((java.lang.Throwable) cardanEulerSingularityException36);
        cardanEulerSingularityException21.addSuppressed((java.lang.Throwable) cardanEulerSingularityException31);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException42 = new org.apache.commons.math.geometry.CardanEulerSingularityException(true);
        cardanEulerSingularityException21.addSuppressed((java.lang.Throwable) cardanEulerSingularityException42);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException45 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray46 = cardanEulerSingularityException45.getArguments();
        java.lang.Object[] objArray47 = cardanEulerSingularityException45.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException49 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray50 = cardanEulerSingularityException49.getArguments();
        cardanEulerSingularityException45.addSuppressed((java.lang.Throwable) cardanEulerSingularityException49);
        java.lang.Object[] objArray52 = cardanEulerSingularityException49.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException54 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray55 = cardanEulerSingularityException54.getArguments();
        java.lang.Throwable[] throwableArray56 = cardanEulerSingularityException54.getSuppressed();
        java.lang.String str57 = cardanEulerSingularityException54.getPattern();
        cardanEulerSingularityException49.addSuppressed((java.lang.Throwable) cardanEulerSingularityException54);
        java.lang.Object[] objArray59 = cardanEulerSingularityException54.getArguments();
        cardanEulerSingularityException21.addSuppressed((java.lang.Throwable) cardanEulerSingularityException54);
        cardanEulerSingularityException1.addSuppressed((java.lang.Throwable) cardanEulerSingularityException21);
        java.lang.Throwable[] throwableArray62 = cardanEulerSingularityException21.getSuppressed();
        java.lang.String str63 = cardanEulerSingularityException21.getPattern();
        org.junit.Assert.assertNotNull(objArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray2), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray2), "[]");
        org.junit.Assert.assertNotNull(objArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray3), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray3), "[]");
        org.junit.Assert.assertNotNull(objArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray6), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray6), "[]");
        org.junit.Assert.assertNotNull(throwableArray8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Euler angles singularity" + "'", str9, "Euler angles singularity");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Euler angles singularity" + "'", str15, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray16), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray16), "[]");
        org.junit.Assert.assertNotNull(objArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray17), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray17), "[]");
        org.junit.Assert.assertNotNull(throwableArray19);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "Euler angles singularity" + "'", str22, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray23), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray23), "[]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "Euler angles singularity" + "'", str24, "Euler angles singularity");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "Euler angles singularity" + "'", str27, "Euler angles singularity");
        org.junit.Assert.assertNotNull(throwableArray28);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "Euler angles singularity" + "'", str32, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray33), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray33), "[]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "Euler angles singularity" + "'", str34, "Euler angles singularity");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "Euler angles singularity" + "'", str37, "Euler angles singularity");
        org.junit.Assert.assertNotNull(throwableArray38);
        org.junit.Assert.assertNotNull(objArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray46), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray46), "[]");
        org.junit.Assert.assertNotNull(objArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray47), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray47), "[]");
        org.junit.Assert.assertNotNull(objArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray50), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray50), "[]");
        org.junit.Assert.assertNotNull(objArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray52), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray52), "[]");
        org.junit.Assert.assertNotNull(objArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray55), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray55), "[]");
        org.junit.Assert.assertNotNull(throwableArray56);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "Euler angles singularity" + "'", str57, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray59), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray59), "[]");
        org.junit.Assert.assertNotNull(throwableArray62);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "Euler angles singularity" + "'", str63, "Euler angles singularity");
    }

    @Test
    public void test1657() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1657");
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException1 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray2 = cardanEulerSingularityException1.getArguments();
        java.lang.Throwable[] throwableArray3 = cardanEulerSingularityException1.getSuppressed();
        java.lang.Object[] objArray4 = cardanEulerSingularityException1.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException6 = new org.apache.commons.math.geometry.CardanEulerSingularityException(true);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException8 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        cardanEulerSingularityException6.addSuppressed((java.lang.Throwable) cardanEulerSingularityException8);
        java.lang.String str10 = cardanEulerSingularityException8.getPattern();
        java.lang.Throwable[] throwableArray11 = cardanEulerSingularityException8.getSuppressed();
        java.lang.String str12 = cardanEulerSingularityException8.getPattern();
        java.lang.Throwable[] throwableArray13 = cardanEulerSingularityException8.getSuppressed();
        java.lang.String str14 = cardanEulerSingularityException8.getPattern();
        cardanEulerSingularityException1.addSuppressed((java.lang.Throwable) cardanEulerSingularityException8);
        java.lang.Object[] objArray16 = cardanEulerSingularityException8.getArguments();
        org.junit.Assert.assertNotNull(objArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray2), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray2), "[]");
        org.junit.Assert.assertNotNull(throwableArray3);
        org.junit.Assert.assertNotNull(objArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray4), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray4), "[]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Euler angles singularity" + "'", str10, "Euler angles singularity");
        org.junit.Assert.assertNotNull(throwableArray11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Euler angles singularity" + "'", str12, "Euler angles singularity");
        org.junit.Assert.assertNotNull(throwableArray13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "Euler angles singularity" + "'", str14, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray16), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray16), "[]");
    }

    @Test
    public void test1658() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1658");
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException1 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray2 = cardanEulerSingularityException1.getArguments();
        java.lang.Object[] objArray3 = cardanEulerSingularityException1.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException5 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray6 = cardanEulerSingularityException5.getArguments();
        cardanEulerSingularityException1.addSuppressed((java.lang.Throwable) cardanEulerSingularityException5);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException9 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray10 = cardanEulerSingularityException9.getArguments();
        java.lang.Object[] objArray11 = cardanEulerSingularityException9.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException13 = new org.apache.commons.math.geometry.CardanEulerSingularityException(true);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException15 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        cardanEulerSingularityException13.addSuppressed((java.lang.Throwable) cardanEulerSingularityException15);
        cardanEulerSingularityException9.addSuppressed((java.lang.Throwable) cardanEulerSingularityException13);
        java.lang.Throwable[] throwableArray18 = cardanEulerSingularityException9.getSuppressed();
        cardanEulerSingularityException5.addSuppressed((java.lang.Throwable) cardanEulerSingularityException9);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException21 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.String str22 = cardanEulerSingularityException21.getPattern();
        java.lang.Throwable[] throwableArray23 = cardanEulerSingularityException21.getSuppressed();
        cardanEulerSingularityException5.addSuppressed((java.lang.Throwable) cardanEulerSingularityException21);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException26 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray27 = cardanEulerSingularityException26.getArguments();
        java.lang.Object[] objArray28 = cardanEulerSingularityException26.getArguments();
        java.lang.Object[] objArray29 = cardanEulerSingularityException26.getArguments();
        java.lang.Throwable[] throwableArray30 = cardanEulerSingularityException26.getSuppressed();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException32 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray33 = cardanEulerSingularityException32.getArguments();
        java.lang.String str34 = cardanEulerSingularityException32.getPattern();
        java.lang.Object[] objArray35 = cardanEulerSingularityException32.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException37 = new org.apache.commons.math.geometry.CardanEulerSingularityException(true);
        java.lang.Object[] objArray38 = cardanEulerSingularityException37.getArguments();
        java.lang.Throwable[] throwableArray39 = cardanEulerSingularityException37.getSuppressed();
        java.lang.Throwable[] throwableArray40 = cardanEulerSingularityException37.getSuppressed();
        java.lang.Throwable[] throwableArray41 = cardanEulerSingularityException37.getSuppressed();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException43 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray44 = cardanEulerSingularityException43.getArguments();
        java.lang.Object[] objArray45 = cardanEulerSingularityException43.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException47 = new org.apache.commons.math.geometry.CardanEulerSingularityException(true);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException49 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        cardanEulerSingularityException47.addSuppressed((java.lang.Throwable) cardanEulerSingularityException49);
        cardanEulerSingularityException43.addSuppressed((java.lang.Throwable) cardanEulerSingularityException47);
        cardanEulerSingularityException37.addSuppressed((java.lang.Throwable) cardanEulerSingularityException43);
        cardanEulerSingularityException32.addSuppressed((java.lang.Throwable) cardanEulerSingularityException37);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException55 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray56 = cardanEulerSingularityException55.getArguments();
        java.lang.Object[] objArray57 = cardanEulerSingularityException55.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException59 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray60 = cardanEulerSingularityException59.getArguments();
        cardanEulerSingularityException55.addSuppressed((java.lang.Throwable) cardanEulerSingularityException59);
        java.lang.Object[] objArray62 = cardanEulerSingularityException59.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException64 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray65 = cardanEulerSingularityException64.getArguments();
        java.lang.Throwable[] throwableArray66 = cardanEulerSingularityException64.getSuppressed();
        java.lang.String str67 = cardanEulerSingularityException64.getPattern();
        cardanEulerSingularityException59.addSuppressed((java.lang.Throwable) cardanEulerSingularityException64);
        java.lang.Object[] objArray69 = cardanEulerSingularityException59.getArguments();
        java.lang.Throwable[] throwableArray70 = cardanEulerSingularityException59.getSuppressed();
        java.lang.Object[] objArray71 = cardanEulerSingularityException59.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException73 = new org.apache.commons.math.geometry.CardanEulerSingularityException(true);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException75 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        cardanEulerSingularityException73.addSuppressed((java.lang.Throwable) cardanEulerSingularityException75);
        java.lang.Throwable[] throwableArray77 = cardanEulerSingularityException73.getSuppressed();
        cardanEulerSingularityException59.addSuppressed((java.lang.Throwable) cardanEulerSingularityException73);
        cardanEulerSingularityException37.addSuppressed((java.lang.Throwable) cardanEulerSingularityException59);
        java.lang.Object[] objArray80 = cardanEulerSingularityException59.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException82 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray83 = cardanEulerSingularityException82.getArguments();
        java.lang.String str84 = cardanEulerSingularityException82.getPattern();
        java.lang.Object[] objArray85 = cardanEulerSingularityException82.getArguments();
        java.lang.Object[] objArray86 = cardanEulerSingularityException82.getArguments();
        java.lang.String str87 = cardanEulerSingularityException82.getPattern();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException89 = new org.apache.commons.math.geometry.CardanEulerSingularityException(true);
        java.lang.Object[] objArray90 = cardanEulerSingularityException89.getArguments();
        java.lang.Throwable[] throwableArray91 = cardanEulerSingularityException89.getSuppressed();
        java.lang.Throwable[] throwableArray92 = cardanEulerSingularityException89.getSuppressed();
        cardanEulerSingularityException82.addSuppressed((java.lang.Throwable) cardanEulerSingularityException89);
        java.lang.Object[] objArray94 = cardanEulerSingularityException82.getArguments();
        cardanEulerSingularityException59.addSuppressed((java.lang.Throwable) cardanEulerSingularityException82);
        java.lang.String str96 = cardanEulerSingularityException59.getPattern();
        cardanEulerSingularityException26.addSuppressed((java.lang.Throwable) cardanEulerSingularityException59);
        cardanEulerSingularityException21.addSuppressed((java.lang.Throwable) cardanEulerSingularityException59);
        org.junit.Assert.assertNotNull(objArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray2), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray2), "[]");
        org.junit.Assert.assertNotNull(objArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray3), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray3), "[]");
        org.junit.Assert.assertNotNull(objArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray6), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray6), "[]");
        org.junit.Assert.assertNotNull(objArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray10), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray10), "[]");
        org.junit.Assert.assertNotNull(objArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray11), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray11), "[]");
        org.junit.Assert.assertNotNull(throwableArray18);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "Euler angles singularity" + "'", str22, "Euler angles singularity");
        org.junit.Assert.assertNotNull(throwableArray23);
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray27), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray27), "[]");
        org.junit.Assert.assertNotNull(objArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray28), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray28), "[]");
        org.junit.Assert.assertNotNull(objArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray29), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray29), "[]");
        org.junit.Assert.assertNotNull(throwableArray30);
        org.junit.Assert.assertNotNull(objArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray33), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray33), "[]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "Euler angles singularity" + "'", str34, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray35), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray35), "[]");
        org.junit.Assert.assertNotNull(objArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray38), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray38), "[]");
        org.junit.Assert.assertNotNull(throwableArray39);
        org.junit.Assert.assertNotNull(throwableArray40);
        org.junit.Assert.assertNotNull(throwableArray41);
        org.junit.Assert.assertNotNull(objArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray44), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray44), "[]");
        org.junit.Assert.assertNotNull(objArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray45), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray45), "[]");
        org.junit.Assert.assertNotNull(objArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray56), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray56), "[]");
        org.junit.Assert.assertNotNull(objArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray57), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray57), "[]");
        org.junit.Assert.assertNotNull(objArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray60), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray60), "[]");
        org.junit.Assert.assertNotNull(objArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray62), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray62), "[]");
        org.junit.Assert.assertNotNull(objArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray65), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray65), "[]");
        org.junit.Assert.assertNotNull(throwableArray66);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "Euler angles singularity" + "'", str67, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray69), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray69), "[]");
        org.junit.Assert.assertNotNull(throwableArray70);
        org.junit.Assert.assertNotNull(objArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray71), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray71), "[]");
        org.junit.Assert.assertNotNull(throwableArray77);
        org.junit.Assert.assertNotNull(objArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray80), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray80), "[]");
        org.junit.Assert.assertNotNull(objArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray83), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray83), "[]");
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "Euler angles singularity" + "'", str84, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray85), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray85), "[]");
        org.junit.Assert.assertNotNull(objArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray86), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray86), "[]");
        org.junit.Assert.assertEquals("'" + str87 + "' != '" + "Euler angles singularity" + "'", str87, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray90), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray90), "[]");
        org.junit.Assert.assertNotNull(throwableArray91);
        org.junit.Assert.assertNotNull(throwableArray92);
        org.junit.Assert.assertNotNull(objArray94);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray94), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray94), "[]");
        org.junit.Assert.assertEquals("'" + str96 + "' != '" + "Euler angles singularity" + "'", str96, "Euler angles singularity");
    }

    @Test
    public void test1659() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1659");
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException1 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray2 = cardanEulerSingularityException1.getArguments();
        java.lang.String str3 = cardanEulerSingularityException1.getPattern();
        java.lang.Object[] objArray4 = cardanEulerSingularityException1.getArguments();
        java.lang.Object[] objArray5 = cardanEulerSingularityException1.getArguments();
        java.lang.String str6 = cardanEulerSingularityException1.getPattern();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException8 = new org.apache.commons.math.geometry.CardanEulerSingularityException(true);
        java.lang.Object[] objArray9 = cardanEulerSingularityException8.getArguments();
        java.lang.Throwable[] throwableArray10 = cardanEulerSingularityException8.getSuppressed();
        java.lang.Throwable[] throwableArray11 = cardanEulerSingularityException8.getSuppressed();
        cardanEulerSingularityException1.addSuppressed((java.lang.Throwable) cardanEulerSingularityException8);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException14 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray15 = cardanEulerSingularityException14.getArguments();
        java.lang.Object[] objArray16 = cardanEulerSingularityException14.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException18 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray19 = cardanEulerSingularityException18.getArguments();
        cardanEulerSingularityException14.addSuppressed((java.lang.Throwable) cardanEulerSingularityException18);
        java.lang.Throwable[] throwableArray21 = cardanEulerSingularityException18.getSuppressed();
        java.lang.Object[] objArray22 = cardanEulerSingularityException18.getArguments();
        cardanEulerSingularityException1.addSuppressed((java.lang.Throwable) cardanEulerSingularityException18);
        java.lang.String str24 = cardanEulerSingularityException18.getPattern();
        java.lang.Throwable[] throwableArray25 = cardanEulerSingularityException18.getSuppressed();
        java.lang.Object[] objArray26 = cardanEulerSingularityException18.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException28 = new org.apache.commons.math.geometry.CardanEulerSingularityException(true);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException30 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        cardanEulerSingularityException28.addSuppressed((java.lang.Throwable) cardanEulerSingularityException30);
        java.lang.Throwable[] throwableArray32 = cardanEulerSingularityException28.getSuppressed();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException34 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray35 = cardanEulerSingularityException34.getArguments();
        java.lang.Throwable[] throwableArray36 = cardanEulerSingularityException34.getSuppressed();
        java.lang.Object[] objArray37 = cardanEulerSingularityException34.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException39 = new org.apache.commons.math.geometry.CardanEulerSingularityException(true);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException41 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        cardanEulerSingularityException39.addSuppressed((java.lang.Throwable) cardanEulerSingularityException41);
        java.lang.String str43 = cardanEulerSingularityException41.getPattern();
        java.lang.Throwable[] throwableArray44 = cardanEulerSingularityException41.getSuppressed();
        java.lang.String str45 = cardanEulerSingularityException41.getPattern();
        java.lang.Throwable[] throwableArray46 = cardanEulerSingularityException41.getSuppressed();
        java.lang.String str47 = cardanEulerSingularityException41.getPattern();
        cardanEulerSingularityException34.addSuppressed((java.lang.Throwable) cardanEulerSingularityException41);
        cardanEulerSingularityException28.addSuppressed((java.lang.Throwable) cardanEulerSingularityException41);
        java.lang.String str50 = cardanEulerSingularityException41.getPattern();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException52 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray53 = cardanEulerSingularityException52.getArguments();
        java.lang.String str54 = cardanEulerSingularityException52.getPattern();
        java.lang.Object[] objArray55 = cardanEulerSingularityException52.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException57 = new org.apache.commons.math.geometry.CardanEulerSingularityException(true);
        java.lang.Object[] objArray58 = cardanEulerSingularityException57.getArguments();
        java.lang.Object[] objArray59 = cardanEulerSingularityException57.getArguments();
        java.lang.String str60 = cardanEulerSingularityException57.getPattern();
        java.lang.String str61 = cardanEulerSingularityException57.getPattern();
        cardanEulerSingularityException52.addSuppressed((java.lang.Throwable) cardanEulerSingularityException57);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException64 = new org.apache.commons.math.geometry.CardanEulerSingularityException(true);
        java.lang.Object[] objArray65 = cardanEulerSingularityException64.getArguments();
        java.lang.Throwable[] throwableArray66 = cardanEulerSingularityException64.getSuppressed();
        java.lang.Throwable[] throwableArray67 = cardanEulerSingularityException64.getSuppressed();
        java.lang.Throwable[] throwableArray68 = cardanEulerSingularityException64.getSuppressed();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException70 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray71 = cardanEulerSingularityException70.getArguments();
        java.lang.Object[] objArray72 = cardanEulerSingularityException70.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException74 = new org.apache.commons.math.geometry.CardanEulerSingularityException(true);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException76 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        cardanEulerSingularityException74.addSuppressed((java.lang.Throwable) cardanEulerSingularityException76);
        cardanEulerSingularityException70.addSuppressed((java.lang.Throwable) cardanEulerSingularityException74);
        cardanEulerSingularityException64.addSuppressed((java.lang.Throwable) cardanEulerSingularityException70);
        java.lang.Throwable[] throwableArray80 = cardanEulerSingularityException64.getSuppressed();
        cardanEulerSingularityException57.addSuppressed((java.lang.Throwable) cardanEulerSingularityException64);
        java.lang.String str82 = cardanEulerSingularityException64.getPattern();
        cardanEulerSingularityException41.addSuppressed((java.lang.Throwable) cardanEulerSingularityException64);
        java.lang.Object[] objArray84 = cardanEulerSingularityException64.getArguments();
        java.lang.String str85 = cardanEulerSingularityException64.getPattern();
        cardanEulerSingularityException18.addSuppressed((java.lang.Throwable) cardanEulerSingularityException64);
        org.junit.Assert.assertNotNull(objArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray2), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray2), "[]");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Euler angles singularity" + "'", str3, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray4), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray4), "[]");
        org.junit.Assert.assertNotNull(objArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray5), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray5), "[]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "Euler angles singularity" + "'", str6, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray9), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray9), "[]");
        org.junit.Assert.assertNotNull(throwableArray10);
        org.junit.Assert.assertNotNull(throwableArray11);
        org.junit.Assert.assertNotNull(objArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray15), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray15), "[]");
        org.junit.Assert.assertNotNull(objArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray16), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray16), "[]");
        org.junit.Assert.assertNotNull(objArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray19), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray19), "[]");
        org.junit.Assert.assertNotNull(throwableArray21);
        org.junit.Assert.assertNotNull(objArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray22), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray22), "[]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "Euler angles singularity" + "'", str24, "Euler angles singularity");
        org.junit.Assert.assertNotNull(throwableArray25);
        org.junit.Assert.assertNotNull(objArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray26), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray26), "[]");
        org.junit.Assert.assertNotNull(throwableArray32);
        org.junit.Assert.assertNotNull(objArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray35), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray35), "[]");
        org.junit.Assert.assertNotNull(throwableArray36);
        org.junit.Assert.assertNotNull(objArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray37), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray37), "[]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "Euler angles singularity" + "'", str43, "Euler angles singularity");
        org.junit.Assert.assertNotNull(throwableArray44);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "Euler angles singularity" + "'", str45, "Euler angles singularity");
        org.junit.Assert.assertNotNull(throwableArray46);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "Euler angles singularity" + "'", str47, "Euler angles singularity");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "Euler angles singularity" + "'", str50, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray53), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray53), "[]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "Euler angles singularity" + "'", str54, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray55), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray55), "[]");
        org.junit.Assert.assertNotNull(objArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray58), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray58), "[]");
        org.junit.Assert.assertNotNull(objArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray59), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray59), "[]");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "Cardan angles singularity" + "'", str60, "Cardan angles singularity");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "Cardan angles singularity" + "'", str61, "Cardan angles singularity");
        org.junit.Assert.assertNotNull(objArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray65), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray65), "[]");
        org.junit.Assert.assertNotNull(throwableArray66);
        org.junit.Assert.assertNotNull(throwableArray67);
        org.junit.Assert.assertNotNull(throwableArray68);
        org.junit.Assert.assertNotNull(objArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray71), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray71), "[]");
        org.junit.Assert.assertNotNull(objArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray72), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray72), "[]");
        org.junit.Assert.assertNotNull(throwableArray80);
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "Cardan angles singularity" + "'", str82, "Cardan angles singularity");
        org.junit.Assert.assertNotNull(objArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray84), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray84), "[]");
        org.junit.Assert.assertEquals("'" + str85 + "' != '" + "Cardan angles singularity" + "'", str85, "Cardan angles singularity");
    }

    @Test
    public void test1660() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1660");
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException1 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray2 = cardanEulerSingularityException1.getArguments();
        java.lang.String str3 = cardanEulerSingularityException1.getPattern();
        java.lang.Object[] objArray4 = cardanEulerSingularityException1.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException6 = new org.apache.commons.math.geometry.CardanEulerSingularityException(true);
        java.lang.Object[] objArray7 = cardanEulerSingularityException6.getArguments();
        java.lang.Throwable[] throwableArray8 = cardanEulerSingularityException6.getSuppressed();
        java.lang.Throwable[] throwableArray9 = cardanEulerSingularityException6.getSuppressed();
        java.lang.Throwable[] throwableArray10 = cardanEulerSingularityException6.getSuppressed();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException12 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray13 = cardanEulerSingularityException12.getArguments();
        java.lang.Object[] objArray14 = cardanEulerSingularityException12.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException16 = new org.apache.commons.math.geometry.CardanEulerSingularityException(true);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException18 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        cardanEulerSingularityException16.addSuppressed((java.lang.Throwable) cardanEulerSingularityException18);
        cardanEulerSingularityException12.addSuppressed((java.lang.Throwable) cardanEulerSingularityException16);
        cardanEulerSingularityException6.addSuppressed((java.lang.Throwable) cardanEulerSingularityException12);
        cardanEulerSingularityException1.addSuppressed((java.lang.Throwable) cardanEulerSingularityException6);
        java.lang.Throwable[] throwableArray23 = cardanEulerSingularityException1.getSuppressed();
        java.lang.Throwable[] throwableArray24 = cardanEulerSingularityException1.getSuppressed();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException26 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray27 = cardanEulerSingularityException26.getArguments();
        java.lang.Object[] objArray28 = cardanEulerSingularityException26.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException30 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray31 = cardanEulerSingularityException30.getArguments();
        cardanEulerSingularityException26.addSuppressed((java.lang.Throwable) cardanEulerSingularityException30);
        java.lang.Throwable[] throwableArray33 = cardanEulerSingularityException30.getSuppressed();
        java.lang.Object[] objArray34 = cardanEulerSingularityException30.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException36 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray37 = cardanEulerSingularityException36.getArguments();
        java.lang.Object[] objArray38 = cardanEulerSingularityException36.getArguments();
        java.lang.Object[] objArray39 = cardanEulerSingularityException36.getArguments();
        cardanEulerSingularityException30.addSuppressed((java.lang.Throwable) cardanEulerSingularityException36);
        cardanEulerSingularityException1.addSuppressed((java.lang.Throwable) cardanEulerSingularityException30);
        java.lang.Object[] objArray42 = cardanEulerSingularityException30.getArguments();
        java.lang.Throwable[] throwableArray43 = cardanEulerSingularityException30.getSuppressed();
        java.lang.Object[] objArray44 = cardanEulerSingularityException30.getArguments();
        org.junit.Assert.assertNotNull(objArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray2), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray2), "[]");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Euler angles singularity" + "'", str3, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray4), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray4), "[]");
        org.junit.Assert.assertNotNull(objArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray7), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray7), "[]");
        org.junit.Assert.assertNotNull(throwableArray8);
        org.junit.Assert.assertNotNull(throwableArray9);
        org.junit.Assert.assertNotNull(throwableArray10);
        org.junit.Assert.assertNotNull(objArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray13), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray13), "[]");
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[]");
        org.junit.Assert.assertNotNull(throwableArray23);
        org.junit.Assert.assertNotNull(throwableArray24);
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray27), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray27), "[]");
        org.junit.Assert.assertNotNull(objArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray28), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray28), "[]");
        org.junit.Assert.assertNotNull(objArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray31), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray31), "[]");
        org.junit.Assert.assertNotNull(throwableArray33);
        org.junit.Assert.assertNotNull(objArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray34), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray34), "[]");
        org.junit.Assert.assertNotNull(objArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray37), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray37), "[]");
        org.junit.Assert.assertNotNull(objArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray38), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray38), "[]");
        org.junit.Assert.assertNotNull(objArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray39), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray39), "[]");
        org.junit.Assert.assertNotNull(objArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray42), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray42), "[]");
        org.junit.Assert.assertNotNull(throwableArray43);
        org.junit.Assert.assertNotNull(objArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray44), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray44), "[]");
    }

    @Test
    public void test1661() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1661");
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException1 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray2 = cardanEulerSingularityException1.getArguments();
        java.lang.Object[] objArray3 = cardanEulerSingularityException1.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException5 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray6 = cardanEulerSingularityException5.getArguments();
        cardanEulerSingularityException1.addSuppressed((java.lang.Throwable) cardanEulerSingularityException5);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException9 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray10 = cardanEulerSingularityException9.getArguments();
        java.lang.Object[] objArray11 = cardanEulerSingularityException9.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException13 = new org.apache.commons.math.geometry.CardanEulerSingularityException(true);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException15 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        cardanEulerSingularityException13.addSuppressed((java.lang.Throwable) cardanEulerSingularityException15);
        cardanEulerSingularityException9.addSuppressed((java.lang.Throwable) cardanEulerSingularityException13);
        java.lang.Throwable[] throwableArray18 = cardanEulerSingularityException9.getSuppressed();
        cardanEulerSingularityException5.addSuppressed((java.lang.Throwable) cardanEulerSingularityException9);
        java.lang.Object[] objArray20 = cardanEulerSingularityException5.getArguments();
        java.lang.String str21 = cardanEulerSingularityException5.getPattern();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException23 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray24 = cardanEulerSingularityException23.getArguments();
        java.lang.Object[] objArray25 = cardanEulerSingularityException23.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException27 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray28 = cardanEulerSingularityException27.getArguments();
        cardanEulerSingularityException23.addSuppressed((java.lang.Throwable) cardanEulerSingularityException27);
        java.lang.Throwable[] throwableArray30 = cardanEulerSingularityException27.getSuppressed();
        java.lang.Object[] objArray31 = cardanEulerSingularityException27.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException33 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray34 = cardanEulerSingularityException33.getArguments();
        java.lang.Object[] objArray35 = cardanEulerSingularityException33.getArguments();
        java.lang.Object[] objArray36 = cardanEulerSingularityException33.getArguments();
        cardanEulerSingularityException27.addSuppressed((java.lang.Throwable) cardanEulerSingularityException33);
        java.lang.Object[] objArray38 = cardanEulerSingularityException33.getArguments();
        java.lang.Throwable[] throwableArray39 = cardanEulerSingularityException33.getSuppressed();
        java.lang.Throwable[] throwableArray40 = cardanEulerSingularityException33.getSuppressed();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException42 = new org.apache.commons.math.geometry.CardanEulerSingularityException(true);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException44 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        cardanEulerSingularityException42.addSuppressed((java.lang.Throwable) cardanEulerSingularityException44);
        java.lang.Throwable[] throwableArray46 = cardanEulerSingularityException42.getSuppressed();
        java.lang.Throwable[] throwableArray47 = cardanEulerSingularityException42.getSuppressed();
        cardanEulerSingularityException33.addSuppressed((java.lang.Throwable) cardanEulerSingularityException42);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException50 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray51 = cardanEulerSingularityException50.getArguments();
        java.lang.Throwable[] throwableArray52 = cardanEulerSingularityException50.getSuppressed();
        java.lang.String str53 = cardanEulerSingularityException50.getPattern();
        java.lang.Throwable[] throwableArray54 = cardanEulerSingularityException50.getSuppressed();
        java.lang.String str55 = cardanEulerSingularityException50.getPattern();
        java.lang.String str56 = cardanEulerSingularityException50.getPattern();
        cardanEulerSingularityException33.addSuppressed((java.lang.Throwable) cardanEulerSingularityException50);
        java.lang.Throwable[] throwableArray58 = cardanEulerSingularityException50.getSuppressed();
        java.lang.String str59 = cardanEulerSingularityException50.getPattern();
        cardanEulerSingularityException5.addSuppressed((java.lang.Throwable) cardanEulerSingularityException50);
        java.lang.String str61 = cardanEulerSingularityException50.getPattern();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException63 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray64 = cardanEulerSingularityException63.getArguments();
        java.lang.Object[] objArray65 = cardanEulerSingularityException63.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException67 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray68 = cardanEulerSingularityException67.getArguments();
        cardanEulerSingularityException63.addSuppressed((java.lang.Throwable) cardanEulerSingularityException67);
        java.lang.Object[] objArray70 = cardanEulerSingularityException67.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException72 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray73 = cardanEulerSingularityException72.getArguments();
        java.lang.Throwable[] throwableArray74 = cardanEulerSingularityException72.getSuppressed();
        java.lang.String str75 = cardanEulerSingularityException72.getPattern();
        cardanEulerSingularityException67.addSuppressed((java.lang.Throwable) cardanEulerSingularityException72);
        java.lang.Object[] objArray77 = cardanEulerSingularityException67.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException79 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray80 = cardanEulerSingularityException79.getArguments();
        java.lang.Object[] objArray81 = cardanEulerSingularityException79.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException83 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray84 = cardanEulerSingularityException83.getArguments();
        cardanEulerSingularityException79.addSuppressed((java.lang.Throwable) cardanEulerSingularityException83);
        java.lang.Throwable[] throwableArray86 = cardanEulerSingularityException79.getSuppressed();
        java.lang.String str87 = cardanEulerSingularityException79.getPattern();
        java.lang.String str88 = cardanEulerSingularityException79.getPattern();
        java.lang.String str89 = cardanEulerSingularityException79.getPattern();
        cardanEulerSingularityException67.addSuppressed((java.lang.Throwable) cardanEulerSingularityException79);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException92 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray93 = cardanEulerSingularityException92.getArguments();
        cardanEulerSingularityException79.addSuppressed((java.lang.Throwable) cardanEulerSingularityException92);
        java.lang.String str95 = cardanEulerSingularityException79.getPattern();
        java.lang.Object[] objArray96 = cardanEulerSingularityException79.getArguments();
        cardanEulerSingularityException50.addSuppressed((java.lang.Throwable) cardanEulerSingularityException79);
        java.lang.String str98 = cardanEulerSingularityException79.toString();
        org.junit.Assert.assertNotNull(objArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray2), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray2), "[]");
        org.junit.Assert.assertNotNull(objArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray3), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray3), "[]");
        org.junit.Assert.assertNotNull(objArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray6), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray6), "[]");
        org.junit.Assert.assertNotNull(objArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray10), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray10), "[]");
        org.junit.Assert.assertNotNull(objArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray11), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray11), "[]");
        org.junit.Assert.assertNotNull(throwableArray18);
        org.junit.Assert.assertNotNull(objArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray20), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray20), "[]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "Euler angles singularity" + "'", str21, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray24), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray24), "[]");
        org.junit.Assert.assertNotNull(objArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray25), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray25), "[]");
        org.junit.Assert.assertNotNull(objArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray28), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray28), "[]");
        org.junit.Assert.assertNotNull(throwableArray30);
        org.junit.Assert.assertNotNull(objArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray31), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray31), "[]");
        org.junit.Assert.assertNotNull(objArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray34), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray34), "[]");
        org.junit.Assert.assertNotNull(objArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray35), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray35), "[]");
        org.junit.Assert.assertNotNull(objArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray36), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray36), "[]");
        org.junit.Assert.assertNotNull(objArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray38), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray38), "[]");
        org.junit.Assert.assertNotNull(throwableArray39);
        org.junit.Assert.assertNotNull(throwableArray40);
        org.junit.Assert.assertNotNull(throwableArray46);
        org.junit.Assert.assertNotNull(throwableArray47);
        org.junit.Assert.assertNotNull(objArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray51), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray51), "[]");
        org.junit.Assert.assertNotNull(throwableArray52);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "Euler angles singularity" + "'", str53, "Euler angles singularity");
        org.junit.Assert.assertNotNull(throwableArray54);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "Euler angles singularity" + "'", str55, "Euler angles singularity");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "Euler angles singularity" + "'", str56, "Euler angles singularity");
        org.junit.Assert.assertNotNull(throwableArray58);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "Euler angles singularity" + "'", str59, "Euler angles singularity");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "Euler angles singularity" + "'", str61, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray64), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray64), "[]");
        org.junit.Assert.assertNotNull(objArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray65), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray65), "[]");
        org.junit.Assert.assertNotNull(objArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray68), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray68), "[]");
        org.junit.Assert.assertNotNull(objArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray70), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray70), "[]");
        org.junit.Assert.assertNotNull(objArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray73), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray73), "[]");
        org.junit.Assert.assertNotNull(throwableArray74);
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "Euler angles singularity" + "'", str75, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray77), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray77), "[]");
        org.junit.Assert.assertNotNull(objArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray80), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray80), "[]");
        org.junit.Assert.assertNotNull(objArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray81), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray81), "[]");
        org.junit.Assert.assertNotNull(objArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray84), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray84), "[]");
        org.junit.Assert.assertNotNull(throwableArray86);
        org.junit.Assert.assertEquals("'" + str87 + "' != '" + "Euler angles singularity" + "'", str87, "Euler angles singularity");
        org.junit.Assert.assertEquals("'" + str88 + "' != '" + "Euler angles singularity" + "'", str88, "Euler angles singularity");
        org.junit.Assert.assertEquals("'" + str89 + "' != '" + "Euler angles singularity" + "'", str89, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray93);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray93), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray93), "[]");
        org.junit.Assert.assertEquals("'" + str95 + "' != '" + "Euler angles singularity" + "'", str95, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray96);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray96), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray96), "[]");
        org.junit.Assert.assertEquals("'" + str98 + "' != '" + "org.apache.commons.math.geometry.CardanEulerSingularityException: Euler angles singularity" + "'", str98, "org.apache.commons.math.geometry.CardanEulerSingularityException: Euler angles singularity");
    }

    @Test
    public void test1662() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1662");
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException1 = new org.apache.commons.math.geometry.CardanEulerSingularityException(true);
        java.lang.Object[] objArray2 = cardanEulerSingularityException1.getArguments();
        java.lang.Object[] objArray3 = cardanEulerSingularityException1.getArguments();
        java.lang.String str4 = cardanEulerSingularityException1.getPattern();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException6 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray7 = cardanEulerSingularityException6.getArguments();
        java.lang.Object[] objArray8 = cardanEulerSingularityException6.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException10 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray11 = cardanEulerSingularityException10.getArguments();
        cardanEulerSingularityException6.addSuppressed((java.lang.Throwable) cardanEulerSingularityException10);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException14 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray15 = cardanEulerSingularityException14.getArguments();
        java.lang.Object[] objArray16 = cardanEulerSingularityException14.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException18 = new org.apache.commons.math.geometry.CardanEulerSingularityException(true);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException20 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        cardanEulerSingularityException18.addSuppressed((java.lang.Throwable) cardanEulerSingularityException20);
        cardanEulerSingularityException14.addSuppressed((java.lang.Throwable) cardanEulerSingularityException18);
        java.lang.Throwable[] throwableArray23 = cardanEulerSingularityException14.getSuppressed();
        cardanEulerSingularityException10.addSuppressed((java.lang.Throwable) cardanEulerSingularityException14);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException26 = new org.apache.commons.math.geometry.CardanEulerSingularityException(true);
        java.lang.Object[] objArray27 = cardanEulerSingularityException26.getArguments();
        java.lang.Object[] objArray28 = cardanEulerSingularityException26.getArguments();
        cardanEulerSingularityException14.addSuppressed((java.lang.Throwable) cardanEulerSingularityException26);
        cardanEulerSingularityException1.addSuppressed((java.lang.Throwable) cardanEulerSingularityException14);
        java.lang.Throwable[] throwableArray31 = cardanEulerSingularityException14.getSuppressed();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException33 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray34 = cardanEulerSingularityException33.getArguments();
        java.lang.String str35 = cardanEulerSingularityException33.getPattern();
        java.lang.Object[] objArray36 = cardanEulerSingularityException33.getArguments();
        java.lang.Object[] objArray37 = cardanEulerSingularityException33.getArguments();
        java.lang.String str38 = cardanEulerSingularityException33.getPattern();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException40 = new org.apache.commons.math.geometry.CardanEulerSingularityException(true);
        java.lang.Object[] objArray41 = cardanEulerSingularityException40.getArguments();
        java.lang.Throwable[] throwableArray42 = cardanEulerSingularityException40.getSuppressed();
        java.lang.Throwable[] throwableArray43 = cardanEulerSingularityException40.getSuppressed();
        cardanEulerSingularityException33.addSuppressed((java.lang.Throwable) cardanEulerSingularityException40);
        java.lang.Object[] objArray45 = cardanEulerSingularityException33.getArguments();
        java.lang.String str46 = cardanEulerSingularityException33.getPattern();
        cardanEulerSingularityException14.addSuppressed((java.lang.Throwable) cardanEulerSingularityException33);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException49 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray50 = cardanEulerSingularityException49.getArguments();
        java.lang.Object[] objArray51 = cardanEulerSingularityException49.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException53 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray54 = cardanEulerSingularityException53.getArguments();
        cardanEulerSingularityException49.addSuppressed((java.lang.Throwable) cardanEulerSingularityException53);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException57 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray58 = cardanEulerSingularityException57.getArguments();
        java.lang.Object[] objArray59 = cardanEulerSingularityException57.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException61 = new org.apache.commons.math.geometry.CardanEulerSingularityException(true);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException63 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        cardanEulerSingularityException61.addSuppressed((java.lang.Throwable) cardanEulerSingularityException63);
        cardanEulerSingularityException57.addSuppressed((java.lang.Throwable) cardanEulerSingularityException61);
        java.lang.Throwable[] throwableArray66 = cardanEulerSingularityException57.getSuppressed();
        cardanEulerSingularityException53.addSuppressed((java.lang.Throwable) cardanEulerSingularityException57);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException69 = new org.apache.commons.math.geometry.CardanEulerSingularityException(true);
        java.lang.Object[] objArray70 = cardanEulerSingularityException69.getArguments();
        java.lang.Object[] objArray71 = cardanEulerSingularityException69.getArguments();
        cardanEulerSingularityException57.addSuppressed((java.lang.Throwable) cardanEulerSingularityException69);
        java.lang.Throwable[] throwableArray73 = cardanEulerSingularityException69.getSuppressed();
        java.lang.Object[] objArray74 = cardanEulerSingularityException69.getArguments();
        cardanEulerSingularityException14.addSuppressed((java.lang.Throwable) cardanEulerSingularityException69);
        java.lang.Object[] objArray76 = cardanEulerSingularityException69.getArguments();
        org.junit.Assert.assertNotNull(objArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray2), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray2), "[]");
        org.junit.Assert.assertNotNull(objArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray3), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray3), "[]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Cardan angles singularity" + "'", str4, "Cardan angles singularity");
        org.junit.Assert.assertNotNull(objArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray7), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray7), "[]");
        org.junit.Assert.assertNotNull(objArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray8), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray8), "[]");
        org.junit.Assert.assertNotNull(objArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray11), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray11), "[]");
        org.junit.Assert.assertNotNull(objArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray15), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray15), "[]");
        org.junit.Assert.assertNotNull(objArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray16), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray16), "[]");
        org.junit.Assert.assertNotNull(throwableArray23);
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray27), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray27), "[]");
        org.junit.Assert.assertNotNull(objArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray28), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray28), "[]");
        org.junit.Assert.assertNotNull(throwableArray31);
        org.junit.Assert.assertNotNull(objArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray34), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray34), "[]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "Euler angles singularity" + "'", str35, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray36), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray36), "[]");
        org.junit.Assert.assertNotNull(objArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray37), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray37), "[]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "Euler angles singularity" + "'", str38, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray41), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray41), "[]");
        org.junit.Assert.assertNotNull(throwableArray42);
        org.junit.Assert.assertNotNull(throwableArray43);
        org.junit.Assert.assertNotNull(objArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray45), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray45), "[]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "Euler angles singularity" + "'", str46, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray50), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray50), "[]");
        org.junit.Assert.assertNotNull(objArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray51), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray51), "[]");
        org.junit.Assert.assertNotNull(objArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray54), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray54), "[]");
        org.junit.Assert.assertNotNull(objArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray58), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray58), "[]");
        org.junit.Assert.assertNotNull(objArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray59), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray59), "[]");
        org.junit.Assert.assertNotNull(throwableArray66);
        org.junit.Assert.assertNotNull(objArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray70), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray70), "[]");
        org.junit.Assert.assertNotNull(objArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray71), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray71), "[]");
        org.junit.Assert.assertNotNull(throwableArray73);
        org.junit.Assert.assertNotNull(objArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray74), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray74), "[]");
        org.junit.Assert.assertNotNull(objArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray76), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray76), "[]");
    }

    @Test
    public void test1663() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1663");
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException1 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray2 = cardanEulerSingularityException1.getArguments();
        java.lang.String str3 = cardanEulerSingularityException1.getPattern();
        java.lang.Object[] objArray4 = cardanEulerSingularityException1.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException6 = new org.apache.commons.math.geometry.CardanEulerSingularityException(true);
        java.lang.Object[] objArray7 = cardanEulerSingularityException6.getArguments();
        java.lang.Throwable[] throwableArray8 = cardanEulerSingularityException6.getSuppressed();
        java.lang.Throwable[] throwableArray9 = cardanEulerSingularityException6.getSuppressed();
        java.lang.Throwable[] throwableArray10 = cardanEulerSingularityException6.getSuppressed();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException12 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray13 = cardanEulerSingularityException12.getArguments();
        java.lang.Object[] objArray14 = cardanEulerSingularityException12.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException16 = new org.apache.commons.math.geometry.CardanEulerSingularityException(true);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException18 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        cardanEulerSingularityException16.addSuppressed((java.lang.Throwable) cardanEulerSingularityException18);
        cardanEulerSingularityException12.addSuppressed((java.lang.Throwable) cardanEulerSingularityException16);
        cardanEulerSingularityException6.addSuppressed((java.lang.Throwable) cardanEulerSingularityException12);
        cardanEulerSingularityException1.addSuppressed((java.lang.Throwable) cardanEulerSingularityException6);
        java.lang.Object[] objArray23 = cardanEulerSingularityException1.getArguments();
        java.lang.String str24 = cardanEulerSingularityException1.getPattern();
        java.lang.Object[] objArray25 = cardanEulerSingularityException1.getArguments();
        java.lang.String str26 = cardanEulerSingularityException1.getPattern();
        org.junit.Assert.assertNotNull(objArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray2), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray2), "[]");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Euler angles singularity" + "'", str3, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray4), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray4), "[]");
        org.junit.Assert.assertNotNull(objArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray7), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray7), "[]");
        org.junit.Assert.assertNotNull(throwableArray8);
        org.junit.Assert.assertNotNull(throwableArray9);
        org.junit.Assert.assertNotNull(throwableArray10);
        org.junit.Assert.assertNotNull(objArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray13), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray13), "[]");
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[]");
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray23), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray23), "[]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "Euler angles singularity" + "'", str24, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray25), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray25), "[]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "Euler angles singularity" + "'", str26, "Euler angles singularity");
    }

    @Test
    public void test1664() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1664");
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException1 = new org.apache.commons.math.geometry.CardanEulerSingularityException(true);
        java.lang.Object[] objArray2 = cardanEulerSingularityException1.getArguments();
        java.lang.Object[] objArray3 = cardanEulerSingularityException1.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException5 = new org.apache.commons.math.geometry.CardanEulerSingularityException(true);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException7 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        cardanEulerSingularityException5.addSuppressed((java.lang.Throwable) cardanEulerSingularityException7);
        java.lang.String str9 = cardanEulerSingularityException7.getPattern();
        java.lang.String str10 = cardanEulerSingularityException7.getPattern();
        cardanEulerSingularityException1.addSuppressed((java.lang.Throwable) cardanEulerSingularityException7);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException13 = new org.apache.commons.math.geometry.CardanEulerSingularityException(true);
        java.lang.Object[] objArray14 = cardanEulerSingularityException13.getArguments();
        java.lang.Throwable[] throwableArray15 = cardanEulerSingularityException13.getSuppressed();
        java.lang.Throwable[] throwableArray16 = cardanEulerSingularityException13.getSuppressed();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException18 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray19 = cardanEulerSingularityException18.getArguments();
        java.lang.Object[] objArray20 = cardanEulerSingularityException18.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException22 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray23 = cardanEulerSingularityException22.getArguments();
        cardanEulerSingularityException18.addSuppressed((java.lang.Throwable) cardanEulerSingularityException22);
        java.lang.Object[] objArray25 = cardanEulerSingularityException22.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException27 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray28 = cardanEulerSingularityException27.getArguments();
        java.lang.Throwable[] throwableArray29 = cardanEulerSingularityException27.getSuppressed();
        java.lang.String str30 = cardanEulerSingularityException27.getPattern();
        cardanEulerSingularityException22.addSuppressed((java.lang.Throwable) cardanEulerSingularityException27);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException33 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray34 = cardanEulerSingularityException33.getArguments();
        java.lang.Object[] objArray35 = cardanEulerSingularityException33.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException37 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray38 = cardanEulerSingularityException37.getArguments();
        cardanEulerSingularityException33.addSuppressed((java.lang.Throwable) cardanEulerSingularityException37);
        java.lang.Throwable[] throwableArray40 = cardanEulerSingularityException33.getSuppressed();
        java.lang.String str41 = cardanEulerSingularityException33.getPattern();
        cardanEulerSingularityException22.addSuppressed((java.lang.Throwable) cardanEulerSingularityException33);
        cardanEulerSingularityException13.addSuppressed((java.lang.Throwable) cardanEulerSingularityException33);
        cardanEulerSingularityException7.addSuppressed((java.lang.Throwable) cardanEulerSingularityException13);
        java.lang.Object[] objArray45 = cardanEulerSingularityException13.getArguments();
        java.lang.String str46 = cardanEulerSingularityException13.getPattern();
        org.junit.Assert.assertNotNull(objArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray2), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray2), "[]");
        org.junit.Assert.assertNotNull(objArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray3), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray3), "[]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Euler angles singularity" + "'", str9, "Euler angles singularity");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Euler angles singularity" + "'", str10, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[]");
        org.junit.Assert.assertNotNull(throwableArray15);
        org.junit.Assert.assertNotNull(throwableArray16);
        org.junit.Assert.assertNotNull(objArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray19), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray19), "[]");
        org.junit.Assert.assertNotNull(objArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray20), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray20), "[]");
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray23), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray23), "[]");
        org.junit.Assert.assertNotNull(objArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray25), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray25), "[]");
        org.junit.Assert.assertNotNull(objArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray28), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray28), "[]");
        org.junit.Assert.assertNotNull(throwableArray29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "Euler angles singularity" + "'", str30, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray34), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray34), "[]");
        org.junit.Assert.assertNotNull(objArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray35), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray35), "[]");
        org.junit.Assert.assertNotNull(objArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray38), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray38), "[]");
        org.junit.Assert.assertNotNull(throwableArray40);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "Euler angles singularity" + "'", str41, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray45), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray45), "[]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "Cardan angles singularity" + "'", str46, "Cardan angles singularity");
    }

    @Test
    public void test1665() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1665");
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException1 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray2 = cardanEulerSingularityException1.getArguments();
        java.lang.Object[] objArray3 = cardanEulerSingularityException1.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException5 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray6 = cardanEulerSingularityException5.getArguments();
        cardanEulerSingularityException1.addSuppressed((java.lang.Throwable) cardanEulerSingularityException5);
        java.lang.String str8 = cardanEulerSingularityException1.getPattern();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException10 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray11 = cardanEulerSingularityException10.getArguments();
        java.lang.Object[] objArray12 = cardanEulerSingularityException10.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException14 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray15 = cardanEulerSingularityException14.getArguments();
        cardanEulerSingularityException10.addSuppressed((java.lang.Throwable) cardanEulerSingularityException14);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException18 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray19 = cardanEulerSingularityException18.getArguments();
        java.lang.Object[] objArray20 = cardanEulerSingularityException18.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException22 = new org.apache.commons.math.geometry.CardanEulerSingularityException(true);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException24 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        cardanEulerSingularityException22.addSuppressed((java.lang.Throwable) cardanEulerSingularityException24);
        cardanEulerSingularityException18.addSuppressed((java.lang.Throwable) cardanEulerSingularityException22);
        java.lang.Throwable[] throwableArray27 = cardanEulerSingularityException18.getSuppressed();
        cardanEulerSingularityException14.addSuppressed((java.lang.Throwable) cardanEulerSingularityException18);
        java.lang.String str29 = cardanEulerSingularityException18.getPattern();
        cardanEulerSingularityException1.addSuppressed((java.lang.Throwable) cardanEulerSingularityException18);
        java.lang.String str31 = cardanEulerSingularityException1.getPattern();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException33 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray34 = cardanEulerSingularityException33.getArguments();
        java.lang.Object[] objArray35 = cardanEulerSingularityException33.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException37 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray38 = cardanEulerSingularityException37.getArguments();
        cardanEulerSingularityException33.addSuppressed((java.lang.Throwable) cardanEulerSingularityException37);
        java.lang.String str40 = cardanEulerSingularityException33.getPattern();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException42 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray43 = cardanEulerSingularityException42.getArguments();
        java.lang.String str44 = cardanEulerSingularityException42.getPattern();
        cardanEulerSingularityException33.addSuppressed((java.lang.Throwable) cardanEulerSingularityException42);
        java.lang.Throwable[] throwableArray46 = cardanEulerSingularityException42.getSuppressed();
        java.lang.String str47 = cardanEulerSingularityException42.getPattern();
        cardanEulerSingularityException1.addSuppressed((java.lang.Throwable) cardanEulerSingularityException42);
        org.junit.Assert.assertNotNull(objArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray2), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray2), "[]");
        org.junit.Assert.assertNotNull(objArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray3), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray3), "[]");
        org.junit.Assert.assertNotNull(objArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray6), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray6), "[]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Euler angles singularity" + "'", str8, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray11), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray11), "[]");
        org.junit.Assert.assertNotNull(objArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray12), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray12), "[]");
        org.junit.Assert.assertNotNull(objArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray15), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray15), "[]");
        org.junit.Assert.assertNotNull(objArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray19), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray19), "[]");
        org.junit.Assert.assertNotNull(objArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray20), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray20), "[]");
        org.junit.Assert.assertNotNull(throwableArray27);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "Euler angles singularity" + "'", str29, "Euler angles singularity");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "Euler angles singularity" + "'", str31, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray34), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray34), "[]");
        org.junit.Assert.assertNotNull(objArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray35), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray35), "[]");
        org.junit.Assert.assertNotNull(objArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray38), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray38), "[]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "Euler angles singularity" + "'", str40, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray43), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray43), "[]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "Euler angles singularity" + "'", str44, "Euler angles singularity");
        org.junit.Assert.assertNotNull(throwableArray46);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "Euler angles singularity" + "'", str47, "Euler angles singularity");
    }

    @Test
    public void test1666() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1666");
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException1 = new org.apache.commons.math.geometry.CardanEulerSingularityException(true);
        java.lang.String str2 = cardanEulerSingularityException1.getPattern();
        java.lang.String str3 = cardanEulerSingularityException1.getPattern();
        java.lang.String str4 = cardanEulerSingularityException1.getPattern();
        java.lang.Object[] objArray5 = cardanEulerSingularityException1.getArguments();
        java.lang.Class<?> wildcardClass6 = objArray5.getClass();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "Cardan angles singularity" + "'", str2, "Cardan angles singularity");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Cardan angles singularity" + "'", str3, "Cardan angles singularity");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Cardan angles singularity" + "'", str4, "Cardan angles singularity");
        org.junit.Assert.assertNotNull(objArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray5), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray5), "[]");
        org.junit.Assert.assertNotNull(wildcardClass6);
    }

    @Test
    public void test1667() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1667");
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException1 = new org.apache.commons.math.geometry.CardanEulerSingularityException(true);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException3 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        cardanEulerSingularityException1.addSuppressed((java.lang.Throwable) cardanEulerSingularityException3);
        java.lang.Throwable[] throwableArray5 = cardanEulerSingularityException1.getSuppressed();
        java.lang.Throwable[] throwableArray6 = cardanEulerSingularityException1.getSuppressed();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException8 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.String str9 = cardanEulerSingularityException8.getPattern();
        cardanEulerSingularityException1.addSuppressed((java.lang.Throwable) cardanEulerSingularityException8);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException12 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray13 = cardanEulerSingularityException12.getArguments();
        java.lang.Throwable[] throwableArray14 = cardanEulerSingularityException12.getSuppressed();
        java.lang.String str15 = cardanEulerSingularityException12.getPattern();
        java.lang.Throwable[] throwableArray16 = cardanEulerSingularityException12.getSuppressed();
        java.lang.String str17 = cardanEulerSingularityException12.getPattern();
        java.lang.Throwable[] throwableArray18 = cardanEulerSingularityException12.getSuppressed();
        cardanEulerSingularityException1.addSuppressed((java.lang.Throwable) cardanEulerSingularityException12);
        java.lang.Throwable[] throwableArray20 = cardanEulerSingularityException1.getSuppressed();
        java.lang.Object[] objArray21 = cardanEulerSingularityException1.getArguments();
        java.lang.Object[] objArray22 = cardanEulerSingularityException1.getArguments();
        org.junit.Assert.assertNotNull(throwableArray5);
        org.junit.Assert.assertNotNull(throwableArray6);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Euler angles singularity" + "'", str9, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray13), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray13), "[]");
        org.junit.Assert.assertNotNull(throwableArray14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Euler angles singularity" + "'", str15, "Euler angles singularity");
        org.junit.Assert.assertNotNull(throwableArray16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "Euler angles singularity" + "'", str17, "Euler angles singularity");
        org.junit.Assert.assertNotNull(throwableArray18);
        org.junit.Assert.assertNotNull(throwableArray20);
        org.junit.Assert.assertNotNull(objArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray21), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray21), "[]");
        org.junit.Assert.assertNotNull(objArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray22), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray22), "[]");
    }

    @Test
    public void test1668() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1668");
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException1 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray2 = cardanEulerSingularityException1.getArguments();
        java.lang.Throwable[] throwableArray3 = cardanEulerSingularityException1.getSuppressed();
        java.lang.Throwable[] throwableArray4 = cardanEulerSingularityException1.getSuppressed();
        java.lang.Object[] objArray5 = cardanEulerSingularityException1.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException7 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray8 = cardanEulerSingularityException7.getArguments();
        java.lang.Object[] objArray9 = cardanEulerSingularityException7.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException11 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray12 = cardanEulerSingularityException11.getArguments();
        java.lang.Object[] objArray13 = cardanEulerSingularityException11.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException15 = new org.apache.commons.math.geometry.CardanEulerSingularityException(true);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException17 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        cardanEulerSingularityException15.addSuppressed((java.lang.Throwable) cardanEulerSingularityException17);
        cardanEulerSingularityException11.addSuppressed((java.lang.Throwable) cardanEulerSingularityException15);
        java.lang.Object[] objArray20 = cardanEulerSingularityException15.getArguments();
        java.lang.Throwable[] throwableArray21 = cardanEulerSingularityException15.getSuppressed();
        cardanEulerSingularityException7.addSuppressed((java.lang.Throwable) cardanEulerSingularityException15);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException24 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray25 = cardanEulerSingularityException24.getArguments();
        java.lang.Object[] objArray26 = cardanEulerSingularityException24.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException28 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray29 = cardanEulerSingularityException28.getArguments();
        cardanEulerSingularityException24.addSuppressed((java.lang.Throwable) cardanEulerSingularityException28);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException32 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray33 = cardanEulerSingularityException32.getArguments();
        java.lang.Object[] objArray34 = cardanEulerSingularityException32.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException36 = new org.apache.commons.math.geometry.CardanEulerSingularityException(true);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException38 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        cardanEulerSingularityException36.addSuppressed((java.lang.Throwable) cardanEulerSingularityException38);
        cardanEulerSingularityException32.addSuppressed((java.lang.Throwable) cardanEulerSingularityException36);
        java.lang.Throwable[] throwableArray41 = cardanEulerSingularityException32.getSuppressed();
        cardanEulerSingularityException28.addSuppressed((java.lang.Throwable) cardanEulerSingularityException32);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException44 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.String str45 = cardanEulerSingularityException44.getPattern();
        java.lang.Throwable[] throwableArray46 = cardanEulerSingularityException44.getSuppressed();
        cardanEulerSingularityException28.addSuppressed((java.lang.Throwable) cardanEulerSingularityException44);
        cardanEulerSingularityException7.addSuppressed((java.lang.Throwable) cardanEulerSingularityException44);
        cardanEulerSingularityException1.addSuppressed((java.lang.Throwable) cardanEulerSingularityException44);
        java.lang.Object[] objArray50 = cardanEulerSingularityException44.getArguments();
        java.lang.Class<?> wildcardClass51 = cardanEulerSingularityException44.getClass();
        org.junit.Assert.assertNotNull(objArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray2), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray2), "[]");
        org.junit.Assert.assertNotNull(throwableArray3);
        org.junit.Assert.assertNotNull(throwableArray4);
        org.junit.Assert.assertNotNull(objArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray5), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray5), "[]");
        org.junit.Assert.assertNotNull(objArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray8), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray8), "[]");
        org.junit.Assert.assertNotNull(objArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray9), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray9), "[]");
        org.junit.Assert.assertNotNull(objArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray12), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray12), "[]");
        org.junit.Assert.assertNotNull(objArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray13), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray13), "[]");
        org.junit.Assert.assertNotNull(objArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray20), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray20), "[]");
        org.junit.Assert.assertNotNull(throwableArray21);
        org.junit.Assert.assertNotNull(objArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray25), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray25), "[]");
        org.junit.Assert.assertNotNull(objArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray26), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray26), "[]");
        org.junit.Assert.assertNotNull(objArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray29), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray29), "[]");
        org.junit.Assert.assertNotNull(objArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray33), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray33), "[]");
        org.junit.Assert.assertNotNull(objArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray34), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray34), "[]");
        org.junit.Assert.assertNotNull(throwableArray41);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "Euler angles singularity" + "'", str45, "Euler angles singularity");
        org.junit.Assert.assertNotNull(throwableArray46);
        org.junit.Assert.assertNotNull(objArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray50), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray50), "[]");
        org.junit.Assert.assertNotNull(wildcardClass51);
    }

    @Test
    public void test1669() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1669");
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException1 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray2 = cardanEulerSingularityException1.getArguments();
        java.lang.Object[] objArray3 = cardanEulerSingularityException1.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException5 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray6 = cardanEulerSingularityException5.getArguments();
        cardanEulerSingularityException1.addSuppressed((java.lang.Throwable) cardanEulerSingularityException5);
        java.lang.Object[] objArray8 = cardanEulerSingularityException5.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException10 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray11 = cardanEulerSingularityException10.getArguments();
        java.lang.Throwable[] throwableArray12 = cardanEulerSingularityException10.getSuppressed();
        java.lang.String str13 = cardanEulerSingularityException10.getPattern();
        cardanEulerSingularityException5.addSuppressed((java.lang.Throwable) cardanEulerSingularityException10);
        java.lang.Object[] objArray15 = cardanEulerSingularityException5.getArguments();
        java.lang.Object[] objArray16 = cardanEulerSingularityException5.getArguments();
        java.lang.String str17 = cardanEulerSingularityException5.getPattern();
        java.lang.Throwable[] throwableArray18 = cardanEulerSingularityException5.getSuppressed();
        java.lang.Class<?> wildcardClass19 = cardanEulerSingularityException5.getClass();
        org.junit.Assert.assertNotNull(objArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray2), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray2), "[]");
        org.junit.Assert.assertNotNull(objArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray3), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray3), "[]");
        org.junit.Assert.assertNotNull(objArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray6), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray6), "[]");
        org.junit.Assert.assertNotNull(objArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray8), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray8), "[]");
        org.junit.Assert.assertNotNull(objArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray11), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray11), "[]");
        org.junit.Assert.assertNotNull(throwableArray12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Euler angles singularity" + "'", str13, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray15), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray15), "[]");
        org.junit.Assert.assertNotNull(objArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray16), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray16), "[]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "Euler angles singularity" + "'", str17, "Euler angles singularity");
        org.junit.Assert.assertNotNull(throwableArray18);
        org.junit.Assert.assertNotNull(wildcardClass19);
    }

    @Test
    public void test1670() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1670");
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException1 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray2 = cardanEulerSingularityException1.getArguments();
        java.lang.Throwable[] throwableArray3 = cardanEulerSingularityException1.getSuppressed();
        java.lang.Class<?> wildcardClass4 = cardanEulerSingularityException1.getClass();
        org.junit.Assert.assertNotNull(objArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray2), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray2), "[]");
        org.junit.Assert.assertNotNull(throwableArray3);
        org.junit.Assert.assertNotNull(wildcardClass4);
    }

    @Test
    public void test1671() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1671");
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException1 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray2 = cardanEulerSingularityException1.getArguments();
        java.lang.Object[] objArray3 = cardanEulerSingularityException1.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException5 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray6 = cardanEulerSingularityException5.getArguments();
        cardanEulerSingularityException1.addSuppressed((java.lang.Throwable) cardanEulerSingularityException5);
        java.lang.Object[] objArray8 = cardanEulerSingularityException5.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException10 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray11 = cardanEulerSingularityException10.getArguments();
        java.lang.Throwable[] throwableArray12 = cardanEulerSingularityException10.getSuppressed();
        java.lang.String str13 = cardanEulerSingularityException10.getPattern();
        cardanEulerSingularityException5.addSuppressed((java.lang.Throwable) cardanEulerSingularityException10);
        java.lang.Object[] objArray15 = cardanEulerSingularityException5.getArguments();
        java.lang.String str16 = cardanEulerSingularityException5.getPattern();
        java.lang.Object[] objArray17 = cardanEulerSingularityException5.getArguments();
        java.lang.String str18 = cardanEulerSingularityException5.getPattern();
        org.junit.Assert.assertNotNull(objArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray2), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray2), "[]");
        org.junit.Assert.assertNotNull(objArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray3), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray3), "[]");
        org.junit.Assert.assertNotNull(objArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray6), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray6), "[]");
        org.junit.Assert.assertNotNull(objArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray8), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray8), "[]");
        org.junit.Assert.assertNotNull(objArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray11), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray11), "[]");
        org.junit.Assert.assertNotNull(throwableArray12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Euler angles singularity" + "'", str13, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray15), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray15), "[]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "Euler angles singularity" + "'", str16, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray17), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray17), "[]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "Euler angles singularity" + "'", str18, "Euler angles singularity");
    }

    @Test
    public void test1672() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1672");
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException1 = new org.apache.commons.math.geometry.CardanEulerSingularityException(true);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException3 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        cardanEulerSingularityException1.addSuppressed((java.lang.Throwable) cardanEulerSingularityException3);
        java.lang.String str5 = cardanEulerSingularityException3.getPattern();
        java.lang.Object[] objArray6 = cardanEulerSingularityException3.getArguments();
        java.lang.Throwable[] throwableArray7 = cardanEulerSingularityException3.getSuppressed();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException9 = new org.apache.commons.math.geometry.CardanEulerSingularityException(true);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException11 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        cardanEulerSingularityException9.addSuppressed((java.lang.Throwable) cardanEulerSingularityException11);
        java.lang.String str13 = cardanEulerSingularityException11.getPattern();
        java.lang.Throwable[] throwableArray14 = cardanEulerSingularityException11.getSuppressed();
        java.lang.String str15 = cardanEulerSingularityException11.getPattern();
        java.lang.Throwable[] throwableArray16 = cardanEulerSingularityException11.getSuppressed();
        java.lang.String str17 = cardanEulerSingularityException11.getPattern();
        java.lang.String str18 = cardanEulerSingularityException11.getPattern();
        java.lang.Throwable[] throwableArray19 = cardanEulerSingularityException11.getSuppressed();
        java.lang.Object[] objArray20 = cardanEulerSingularityException11.getArguments();
        cardanEulerSingularityException3.addSuppressed((java.lang.Throwable) cardanEulerSingularityException11);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException23 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray24 = cardanEulerSingularityException23.getArguments();
        java.lang.String str25 = cardanEulerSingularityException23.getPattern();
        java.lang.Object[] objArray26 = cardanEulerSingularityException23.getArguments();
        java.lang.Object[] objArray27 = cardanEulerSingularityException23.getArguments();
        java.lang.String str28 = cardanEulerSingularityException23.getPattern();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException30 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        cardanEulerSingularityException23.addSuppressed((java.lang.Throwable) cardanEulerSingularityException30);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException33 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray34 = cardanEulerSingularityException33.getArguments();
        java.lang.String str35 = cardanEulerSingularityException33.getPattern();
        java.lang.Object[] objArray36 = cardanEulerSingularityException33.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException38 = new org.apache.commons.math.geometry.CardanEulerSingularityException(true);
        java.lang.Object[] objArray39 = cardanEulerSingularityException38.getArguments();
        java.lang.Object[] objArray40 = cardanEulerSingularityException38.getArguments();
        java.lang.String str41 = cardanEulerSingularityException38.getPattern();
        java.lang.String str42 = cardanEulerSingularityException38.getPattern();
        cardanEulerSingularityException33.addSuppressed((java.lang.Throwable) cardanEulerSingularityException38);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException45 = new org.apache.commons.math.geometry.CardanEulerSingularityException(true);
        java.lang.Object[] objArray46 = cardanEulerSingularityException45.getArguments();
        java.lang.Throwable[] throwableArray47 = cardanEulerSingularityException45.getSuppressed();
        java.lang.Throwable[] throwableArray48 = cardanEulerSingularityException45.getSuppressed();
        java.lang.Throwable[] throwableArray49 = cardanEulerSingularityException45.getSuppressed();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException51 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray52 = cardanEulerSingularityException51.getArguments();
        java.lang.Object[] objArray53 = cardanEulerSingularityException51.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException55 = new org.apache.commons.math.geometry.CardanEulerSingularityException(true);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException57 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        cardanEulerSingularityException55.addSuppressed((java.lang.Throwable) cardanEulerSingularityException57);
        cardanEulerSingularityException51.addSuppressed((java.lang.Throwable) cardanEulerSingularityException55);
        cardanEulerSingularityException45.addSuppressed((java.lang.Throwable) cardanEulerSingularityException51);
        java.lang.Throwable[] throwableArray61 = cardanEulerSingularityException45.getSuppressed();
        cardanEulerSingularityException38.addSuppressed((java.lang.Throwable) cardanEulerSingularityException45);
        java.lang.String str63 = cardanEulerSingularityException45.getPattern();
        cardanEulerSingularityException23.addSuppressed((java.lang.Throwable) cardanEulerSingularityException45);
        cardanEulerSingularityException3.addSuppressed((java.lang.Throwable) cardanEulerSingularityException23);
        java.lang.Throwable[] throwableArray66 = cardanEulerSingularityException3.getSuppressed();
        java.lang.Class<?> wildcardClass67 = throwableArray66.getClass();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Euler angles singularity" + "'", str5, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray6), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray6), "[]");
        org.junit.Assert.assertNotNull(throwableArray7);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Euler angles singularity" + "'", str13, "Euler angles singularity");
        org.junit.Assert.assertNotNull(throwableArray14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Euler angles singularity" + "'", str15, "Euler angles singularity");
        org.junit.Assert.assertNotNull(throwableArray16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "Euler angles singularity" + "'", str17, "Euler angles singularity");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "Euler angles singularity" + "'", str18, "Euler angles singularity");
        org.junit.Assert.assertNotNull(throwableArray19);
        org.junit.Assert.assertNotNull(objArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray20), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray20), "[]");
        org.junit.Assert.assertNotNull(objArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray24), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray24), "[]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "Euler angles singularity" + "'", str25, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray26), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray26), "[]");
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray27), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray27), "[]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "Euler angles singularity" + "'", str28, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray34), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray34), "[]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "Euler angles singularity" + "'", str35, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray36), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray36), "[]");
        org.junit.Assert.assertNotNull(objArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray39), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray39), "[]");
        org.junit.Assert.assertNotNull(objArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray40), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray40), "[]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "Cardan angles singularity" + "'", str41, "Cardan angles singularity");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "Cardan angles singularity" + "'", str42, "Cardan angles singularity");
        org.junit.Assert.assertNotNull(objArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray46), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray46), "[]");
        org.junit.Assert.assertNotNull(throwableArray47);
        org.junit.Assert.assertNotNull(throwableArray48);
        org.junit.Assert.assertNotNull(throwableArray49);
        org.junit.Assert.assertNotNull(objArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray52), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray52), "[]");
        org.junit.Assert.assertNotNull(objArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray53), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray53), "[]");
        org.junit.Assert.assertNotNull(throwableArray61);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "Cardan angles singularity" + "'", str63, "Cardan angles singularity");
        org.junit.Assert.assertNotNull(throwableArray66);
        org.junit.Assert.assertNotNull(wildcardClass67);
    }

    @Test
    public void test1673() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1673");
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException1 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray2 = cardanEulerSingularityException1.getArguments();
        java.lang.Object[] objArray3 = cardanEulerSingularityException1.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException5 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray6 = cardanEulerSingularityException5.getArguments();
        java.lang.Object[] objArray7 = cardanEulerSingularityException5.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException9 = new org.apache.commons.math.geometry.CardanEulerSingularityException(true);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException11 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        cardanEulerSingularityException9.addSuppressed((java.lang.Throwable) cardanEulerSingularityException11);
        cardanEulerSingularityException5.addSuppressed((java.lang.Throwable) cardanEulerSingularityException9);
        java.lang.Object[] objArray14 = cardanEulerSingularityException9.getArguments();
        java.lang.Throwable[] throwableArray15 = cardanEulerSingularityException9.getSuppressed();
        cardanEulerSingularityException1.addSuppressed((java.lang.Throwable) cardanEulerSingularityException9);
        java.lang.String str17 = cardanEulerSingularityException1.toString();
        org.junit.Assert.assertNotNull(objArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray2), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray2), "[]");
        org.junit.Assert.assertNotNull(objArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray3), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray3), "[]");
        org.junit.Assert.assertNotNull(objArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray6), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray6), "[]");
        org.junit.Assert.assertNotNull(objArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray7), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray7), "[]");
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[]");
        org.junit.Assert.assertNotNull(throwableArray15);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "org.apache.commons.math.geometry.CardanEulerSingularityException: Euler angles singularity" + "'", str17, "org.apache.commons.math.geometry.CardanEulerSingularityException: Euler angles singularity");
    }

    @Test
    public void test1674() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1674");
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException1 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray2 = cardanEulerSingularityException1.getArguments();
        java.lang.String str3 = cardanEulerSingularityException1.getPattern();
        java.lang.Object[] objArray4 = cardanEulerSingularityException1.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException6 = new org.apache.commons.math.geometry.CardanEulerSingularityException(true);
        java.lang.Object[] objArray7 = cardanEulerSingularityException6.getArguments();
        java.lang.Throwable[] throwableArray8 = cardanEulerSingularityException6.getSuppressed();
        java.lang.Throwable[] throwableArray9 = cardanEulerSingularityException6.getSuppressed();
        java.lang.Throwable[] throwableArray10 = cardanEulerSingularityException6.getSuppressed();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException12 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray13 = cardanEulerSingularityException12.getArguments();
        java.lang.Object[] objArray14 = cardanEulerSingularityException12.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException16 = new org.apache.commons.math.geometry.CardanEulerSingularityException(true);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException18 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        cardanEulerSingularityException16.addSuppressed((java.lang.Throwable) cardanEulerSingularityException18);
        cardanEulerSingularityException12.addSuppressed((java.lang.Throwable) cardanEulerSingularityException16);
        cardanEulerSingularityException6.addSuppressed((java.lang.Throwable) cardanEulerSingularityException12);
        cardanEulerSingularityException1.addSuppressed((java.lang.Throwable) cardanEulerSingularityException6);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException24 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray25 = cardanEulerSingularityException24.getArguments();
        java.lang.Object[] objArray26 = cardanEulerSingularityException24.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException28 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray29 = cardanEulerSingularityException28.getArguments();
        cardanEulerSingularityException24.addSuppressed((java.lang.Throwable) cardanEulerSingularityException28);
        java.lang.Object[] objArray31 = cardanEulerSingularityException28.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException33 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray34 = cardanEulerSingularityException33.getArguments();
        java.lang.Throwable[] throwableArray35 = cardanEulerSingularityException33.getSuppressed();
        java.lang.String str36 = cardanEulerSingularityException33.getPattern();
        cardanEulerSingularityException28.addSuppressed((java.lang.Throwable) cardanEulerSingularityException33);
        java.lang.Object[] objArray38 = cardanEulerSingularityException28.getArguments();
        java.lang.Throwable[] throwableArray39 = cardanEulerSingularityException28.getSuppressed();
        java.lang.Object[] objArray40 = cardanEulerSingularityException28.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException42 = new org.apache.commons.math.geometry.CardanEulerSingularityException(true);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException44 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        cardanEulerSingularityException42.addSuppressed((java.lang.Throwable) cardanEulerSingularityException44);
        java.lang.Throwable[] throwableArray46 = cardanEulerSingularityException42.getSuppressed();
        cardanEulerSingularityException28.addSuppressed((java.lang.Throwable) cardanEulerSingularityException42);
        cardanEulerSingularityException6.addSuppressed((java.lang.Throwable) cardanEulerSingularityException28);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException50 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray51 = cardanEulerSingularityException50.getArguments();
        java.lang.Object[] objArray52 = cardanEulerSingularityException50.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException54 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray55 = cardanEulerSingularityException54.getArguments();
        cardanEulerSingularityException50.addSuppressed((java.lang.Throwable) cardanEulerSingularityException54);
        java.lang.Throwable[] throwableArray57 = cardanEulerSingularityException54.getSuppressed();
        java.lang.String str58 = cardanEulerSingularityException54.getPattern();
        java.lang.Throwable[] throwableArray59 = cardanEulerSingularityException54.getSuppressed();
        cardanEulerSingularityException6.addSuppressed((java.lang.Throwable) cardanEulerSingularityException54);
        java.lang.Object[] objArray61 = cardanEulerSingularityException6.getArguments();
        java.lang.String str62 = cardanEulerSingularityException6.getPattern();
        java.lang.Class<?> wildcardClass63 = cardanEulerSingularityException6.getClass();
        org.junit.Assert.assertNotNull(objArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray2), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray2), "[]");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Euler angles singularity" + "'", str3, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray4), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray4), "[]");
        org.junit.Assert.assertNotNull(objArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray7), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray7), "[]");
        org.junit.Assert.assertNotNull(throwableArray8);
        org.junit.Assert.assertNotNull(throwableArray9);
        org.junit.Assert.assertNotNull(throwableArray10);
        org.junit.Assert.assertNotNull(objArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray13), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray13), "[]");
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[]");
        org.junit.Assert.assertNotNull(objArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray25), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray25), "[]");
        org.junit.Assert.assertNotNull(objArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray26), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray26), "[]");
        org.junit.Assert.assertNotNull(objArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray29), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray29), "[]");
        org.junit.Assert.assertNotNull(objArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray31), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray31), "[]");
        org.junit.Assert.assertNotNull(objArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray34), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray34), "[]");
        org.junit.Assert.assertNotNull(throwableArray35);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "Euler angles singularity" + "'", str36, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray38), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray38), "[]");
        org.junit.Assert.assertNotNull(throwableArray39);
        org.junit.Assert.assertNotNull(objArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray40), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray40), "[]");
        org.junit.Assert.assertNotNull(throwableArray46);
        org.junit.Assert.assertNotNull(objArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray51), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray51), "[]");
        org.junit.Assert.assertNotNull(objArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray52), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray52), "[]");
        org.junit.Assert.assertNotNull(objArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray55), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray55), "[]");
        org.junit.Assert.assertNotNull(throwableArray57);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "Euler angles singularity" + "'", str58, "Euler angles singularity");
        org.junit.Assert.assertNotNull(throwableArray59);
        org.junit.Assert.assertNotNull(objArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray61), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray61), "[]");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "Cardan angles singularity" + "'", str62, "Cardan angles singularity");
        org.junit.Assert.assertNotNull(wildcardClass63);
    }

    @Test
    public void test1675() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1675");
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException1 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray2 = cardanEulerSingularityException1.getArguments();
        java.lang.String str3 = cardanEulerSingularityException1.getPattern();
        java.lang.Object[] objArray4 = cardanEulerSingularityException1.getArguments();
        java.lang.Object[] objArray5 = cardanEulerSingularityException1.getArguments();
        java.lang.String str6 = cardanEulerSingularityException1.getPattern();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException8 = new org.apache.commons.math.geometry.CardanEulerSingularityException(true);
        java.lang.Object[] objArray9 = cardanEulerSingularityException8.getArguments();
        java.lang.Throwable[] throwableArray10 = cardanEulerSingularityException8.getSuppressed();
        java.lang.Throwable[] throwableArray11 = cardanEulerSingularityException8.getSuppressed();
        cardanEulerSingularityException1.addSuppressed((java.lang.Throwable) cardanEulerSingularityException8);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException14 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray15 = cardanEulerSingularityException14.getArguments();
        java.lang.Object[] objArray16 = cardanEulerSingularityException14.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException18 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray19 = cardanEulerSingularityException18.getArguments();
        cardanEulerSingularityException14.addSuppressed((java.lang.Throwable) cardanEulerSingularityException18);
        java.lang.Throwable[] throwableArray21 = cardanEulerSingularityException18.getSuppressed();
        java.lang.Object[] objArray22 = cardanEulerSingularityException18.getArguments();
        cardanEulerSingularityException1.addSuppressed((java.lang.Throwable) cardanEulerSingularityException18);
        java.lang.String str24 = cardanEulerSingularityException18.getPattern();
        java.lang.String str25 = cardanEulerSingularityException18.getPattern();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException27 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.String str28 = cardanEulerSingularityException27.getPattern();
        java.lang.Object[] objArray29 = cardanEulerSingularityException27.getArguments();
        java.lang.String str30 = cardanEulerSingularityException27.getPattern();
        java.lang.Throwable[] throwableArray31 = cardanEulerSingularityException27.getSuppressed();
        java.lang.Object[] objArray32 = cardanEulerSingularityException27.getArguments();
        cardanEulerSingularityException18.addSuppressed((java.lang.Throwable) cardanEulerSingularityException27);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException35 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.String str36 = cardanEulerSingularityException35.getPattern();
        java.lang.Object[] objArray37 = cardanEulerSingularityException35.getArguments();
        java.lang.String str38 = cardanEulerSingularityException35.getPattern();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException40 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.String str41 = cardanEulerSingularityException40.getPattern();
        java.lang.Throwable[] throwableArray42 = cardanEulerSingularityException40.getSuppressed();
        cardanEulerSingularityException35.addSuppressed((java.lang.Throwable) cardanEulerSingularityException40);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException45 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.String str46 = cardanEulerSingularityException45.getPattern();
        java.lang.Object[] objArray47 = cardanEulerSingularityException45.getArguments();
        java.lang.String str48 = cardanEulerSingularityException45.getPattern();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException50 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.String str51 = cardanEulerSingularityException50.getPattern();
        java.lang.Throwable[] throwableArray52 = cardanEulerSingularityException50.getSuppressed();
        cardanEulerSingularityException45.addSuppressed((java.lang.Throwable) cardanEulerSingularityException50);
        cardanEulerSingularityException35.addSuppressed((java.lang.Throwable) cardanEulerSingularityException45);
        cardanEulerSingularityException18.addSuppressed((java.lang.Throwable) cardanEulerSingularityException35);
        java.lang.Throwable[] throwableArray56 = cardanEulerSingularityException35.getSuppressed();
        org.junit.Assert.assertNotNull(objArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray2), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray2), "[]");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Euler angles singularity" + "'", str3, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray4), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray4), "[]");
        org.junit.Assert.assertNotNull(objArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray5), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray5), "[]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "Euler angles singularity" + "'", str6, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray9), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray9), "[]");
        org.junit.Assert.assertNotNull(throwableArray10);
        org.junit.Assert.assertNotNull(throwableArray11);
        org.junit.Assert.assertNotNull(objArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray15), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray15), "[]");
        org.junit.Assert.assertNotNull(objArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray16), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray16), "[]");
        org.junit.Assert.assertNotNull(objArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray19), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray19), "[]");
        org.junit.Assert.assertNotNull(throwableArray21);
        org.junit.Assert.assertNotNull(objArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray22), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray22), "[]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "Euler angles singularity" + "'", str24, "Euler angles singularity");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "Euler angles singularity" + "'", str25, "Euler angles singularity");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "Euler angles singularity" + "'", str28, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray29), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray29), "[]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "Euler angles singularity" + "'", str30, "Euler angles singularity");
        org.junit.Assert.assertNotNull(throwableArray31);
        org.junit.Assert.assertNotNull(objArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray32), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray32), "[]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "Euler angles singularity" + "'", str36, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray37), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray37), "[]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "Euler angles singularity" + "'", str38, "Euler angles singularity");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "Euler angles singularity" + "'", str41, "Euler angles singularity");
        org.junit.Assert.assertNotNull(throwableArray42);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "Euler angles singularity" + "'", str46, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray47), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray47), "[]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "Euler angles singularity" + "'", str48, "Euler angles singularity");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "Euler angles singularity" + "'", str51, "Euler angles singularity");
        org.junit.Assert.assertNotNull(throwableArray52);
        org.junit.Assert.assertNotNull(throwableArray56);
    }

    @Test
    public void test1676() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1676");
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException1 = new org.apache.commons.math.geometry.CardanEulerSingularityException(true);
        java.lang.Object[] objArray2 = cardanEulerSingularityException1.getArguments();
        java.lang.Object[] objArray3 = cardanEulerSingularityException1.getArguments();
        java.lang.String str4 = cardanEulerSingularityException1.getPattern();
        java.lang.String str5 = cardanEulerSingularityException1.getPattern();
        java.lang.String str6 = cardanEulerSingularityException1.getPattern();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException8 = new org.apache.commons.math.geometry.CardanEulerSingularityException(true);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException10 = new org.apache.commons.math.geometry.CardanEulerSingularityException(true);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException12 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        cardanEulerSingularityException10.addSuppressed((java.lang.Throwable) cardanEulerSingularityException12);
        java.lang.String str14 = cardanEulerSingularityException12.getPattern();
        java.lang.String str15 = cardanEulerSingularityException12.getPattern();
        cardanEulerSingularityException8.addSuppressed((java.lang.Throwable) cardanEulerSingularityException12);
        cardanEulerSingularityException1.addSuppressed((java.lang.Throwable) cardanEulerSingularityException12);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException19 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray20 = cardanEulerSingularityException19.getArguments();
        java.lang.Object[] objArray21 = cardanEulerSingularityException19.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException23 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray24 = cardanEulerSingularityException23.getArguments();
        cardanEulerSingularityException19.addSuppressed((java.lang.Throwable) cardanEulerSingularityException23);
        java.lang.String str26 = cardanEulerSingularityException19.getPattern();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException28 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray29 = cardanEulerSingularityException28.getArguments();
        java.lang.String str30 = cardanEulerSingularityException28.getPattern();
        cardanEulerSingularityException19.addSuppressed((java.lang.Throwable) cardanEulerSingularityException28);
        java.lang.Throwable[] throwableArray32 = cardanEulerSingularityException28.getSuppressed();
        java.lang.Object[] objArray33 = cardanEulerSingularityException28.getArguments();
        cardanEulerSingularityException1.addSuppressed((java.lang.Throwable) cardanEulerSingularityException28);
        java.lang.String str35 = cardanEulerSingularityException1.toString();
        org.junit.Assert.assertNotNull(objArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray2), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray2), "[]");
        org.junit.Assert.assertNotNull(objArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray3), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray3), "[]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Cardan angles singularity" + "'", str4, "Cardan angles singularity");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Cardan angles singularity" + "'", str5, "Cardan angles singularity");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "Cardan angles singularity" + "'", str6, "Cardan angles singularity");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "Euler angles singularity" + "'", str14, "Euler angles singularity");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Euler angles singularity" + "'", str15, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray20), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray20), "[]");
        org.junit.Assert.assertNotNull(objArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray21), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray21), "[]");
        org.junit.Assert.assertNotNull(objArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray24), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray24), "[]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "Euler angles singularity" + "'", str26, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray29), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray29), "[]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "Euler angles singularity" + "'", str30, "Euler angles singularity");
        org.junit.Assert.assertNotNull(throwableArray32);
        org.junit.Assert.assertNotNull(objArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray33), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray33), "[]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "org.apache.commons.math.geometry.CardanEulerSingularityException: Cardan angles singularity" + "'", str35, "org.apache.commons.math.geometry.CardanEulerSingularityException: Cardan angles singularity");
    }

    @Test
    public void test1677() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1677");
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException1 = new org.apache.commons.math.geometry.CardanEulerSingularityException(true);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException3 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        cardanEulerSingularityException1.addSuppressed((java.lang.Throwable) cardanEulerSingularityException3);
        java.lang.Object[] objArray5 = cardanEulerSingularityException3.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException7 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.String str8 = cardanEulerSingularityException7.getPattern();
        java.lang.Object[] objArray9 = cardanEulerSingularityException7.getArguments();
        java.lang.String str10 = cardanEulerSingularityException7.getPattern();
        java.lang.String str11 = cardanEulerSingularityException7.getPattern();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException13 = new org.apache.commons.math.geometry.CardanEulerSingularityException(true);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException15 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        cardanEulerSingularityException13.addSuppressed((java.lang.Throwable) cardanEulerSingularityException15);
        java.lang.Throwable[] throwableArray17 = cardanEulerSingularityException13.getSuppressed();
        java.lang.Throwable[] throwableArray18 = cardanEulerSingularityException13.getSuppressed();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException20 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.String str21 = cardanEulerSingularityException20.getPattern();
        java.lang.Object[] objArray22 = cardanEulerSingularityException20.getArguments();
        java.lang.String str23 = cardanEulerSingularityException20.getPattern();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException25 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.String str26 = cardanEulerSingularityException25.getPattern();
        java.lang.Throwable[] throwableArray27 = cardanEulerSingularityException25.getSuppressed();
        cardanEulerSingularityException20.addSuppressed((java.lang.Throwable) cardanEulerSingularityException25);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException30 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.String str31 = cardanEulerSingularityException30.getPattern();
        java.lang.Object[] objArray32 = cardanEulerSingularityException30.getArguments();
        java.lang.String str33 = cardanEulerSingularityException30.getPattern();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException35 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.String str36 = cardanEulerSingularityException35.getPattern();
        java.lang.Throwable[] throwableArray37 = cardanEulerSingularityException35.getSuppressed();
        cardanEulerSingularityException30.addSuppressed((java.lang.Throwable) cardanEulerSingularityException35);
        cardanEulerSingularityException20.addSuppressed((java.lang.Throwable) cardanEulerSingularityException30);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException41 = new org.apache.commons.math.geometry.CardanEulerSingularityException(true);
        cardanEulerSingularityException20.addSuppressed((java.lang.Throwable) cardanEulerSingularityException41);
        cardanEulerSingularityException13.addSuppressed((java.lang.Throwable) cardanEulerSingularityException20);
        java.lang.Throwable[] throwableArray44 = cardanEulerSingularityException20.getSuppressed();
        java.lang.Object[] objArray45 = cardanEulerSingularityException20.getArguments();
        cardanEulerSingularityException7.addSuppressed((java.lang.Throwable) cardanEulerSingularityException20);
        java.lang.String str47 = cardanEulerSingularityException7.getPattern();
        cardanEulerSingularityException3.addSuppressed((java.lang.Throwable) cardanEulerSingularityException7);
        java.lang.Object[] objArray49 = cardanEulerSingularityException7.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException51 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray52 = cardanEulerSingularityException51.getArguments();
        java.lang.String str53 = cardanEulerSingularityException51.getPattern();
        java.lang.Object[] objArray54 = cardanEulerSingularityException51.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException56 = new org.apache.commons.math.geometry.CardanEulerSingularityException(true);
        java.lang.Object[] objArray57 = cardanEulerSingularityException56.getArguments();
        java.lang.Object[] objArray58 = cardanEulerSingularityException56.getArguments();
        java.lang.String str59 = cardanEulerSingularityException56.getPattern();
        java.lang.String str60 = cardanEulerSingularityException56.getPattern();
        cardanEulerSingularityException51.addSuppressed((java.lang.Throwable) cardanEulerSingularityException56);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException63 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray64 = cardanEulerSingularityException63.getArguments();
        java.lang.String str65 = cardanEulerSingularityException63.getPattern();
        java.lang.Object[] objArray66 = cardanEulerSingularityException63.getArguments();
        java.lang.Object[] objArray67 = cardanEulerSingularityException63.getArguments();
        java.lang.String str68 = cardanEulerSingularityException63.getPattern();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException70 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        cardanEulerSingularityException63.addSuppressed((java.lang.Throwable) cardanEulerSingularityException70);
        java.lang.String str72 = cardanEulerSingularityException63.getPattern();
        java.lang.String str73 = cardanEulerSingularityException63.getPattern();
        cardanEulerSingularityException51.addSuppressed((java.lang.Throwable) cardanEulerSingularityException63);
        java.lang.Throwable[] throwableArray75 = cardanEulerSingularityException51.getSuppressed();
        cardanEulerSingularityException7.addSuppressed((java.lang.Throwable) cardanEulerSingularityException51);
        org.junit.Assert.assertNotNull(objArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray5), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray5), "[]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Euler angles singularity" + "'", str8, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray9), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray9), "[]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Euler angles singularity" + "'", str10, "Euler angles singularity");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Euler angles singularity" + "'", str11, "Euler angles singularity");
        org.junit.Assert.assertNotNull(throwableArray17);
        org.junit.Assert.assertNotNull(throwableArray18);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "Euler angles singularity" + "'", str21, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray22), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray22), "[]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "Euler angles singularity" + "'", str23, "Euler angles singularity");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "Euler angles singularity" + "'", str26, "Euler angles singularity");
        org.junit.Assert.assertNotNull(throwableArray27);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "Euler angles singularity" + "'", str31, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray32), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray32), "[]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "Euler angles singularity" + "'", str33, "Euler angles singularity");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "Euler angles singularity" + "'", str36, "Euler angles singularity");
        org.junit.Assert.assertNotNull(throwableArray37);
        org.junit.Assert.assertNotNull(throwableArray44);
        org.junit.Assert.assertNotNull(objArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray45), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray45), "[]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "Euler angles singularity" + "'", str47, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray49), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray49), "[]");
        org.junit.Assert.assertNotNull(objArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray52), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray52), "[]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "Euler angles singularity" + "'", str53, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray54), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray54), "[]");
        org.junit.Assert.assertNotNull(objArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray57), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray57), "[]");
        org.junit.Assert.assertNotNull(objArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray58), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray58), "[]");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "Cardan angles singularity" + "'", str59, "Cardan angles singularity");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "Cardan angles singularity" + "'", str60, "Cardan angles singularity");
        org.junit.Assert.assertNotNull(objArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray64), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray64), "[]");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "Euler angles singularity" + "'", str65, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray66), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray66), "[]");
        org.junit.Assert.assertNotNull(objArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray67), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray67), "[]");
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "Euler angles singularity" + "'", str68, "Euler angles singularity");
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "Euler angles singularity" + "'", str72, "Euler angles singularity");
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "Euler angles singularity" + "'", str73, "Euler angles singularity");
        org.junit.Assert.assertNotNull(throwableArray75);
    }

    @Test
    public void test1678() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1678");
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException1 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray2 = cardanEulerSingularityException1.getArguments();
        java.lang.String str3 = cardanEulerSingularityException1.getPattern();
        java.lang.Object[] objArray4 = cardanEulerSingularityException1.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException6 = new org.apache.commons.math.geometry.CardanEulerSingularityException(true);
        java.lang.Object[] objArray7 = cardanEulerSingularityException6.getArguments();
        java.lang.Object[] objArray8 = cardanEulerSingularityException6.getArguments();
        java.lang.String str9 = cardanEulerSingularityException6.getPattern();
        java.lang.String str10 = cardanEulerSingularityException6.getPattern();
        cardanEulerSingularityException1.addSuppressed((java.lang.Throwable) cardanEulerSingularityException6);
        java.lang.Throwable[] throwableArray12 = cardanEulerSingularityException6.getSuppressed();
        java.lang.Object[] objArray13 = cardanEulerSingularityException6.getArguments();
        java.lang.String str14 = cardanEulerSingularityException6.getPattern();
        java.lang.String str15 = cardanEulerSingularityException6.getPattern();
        java.lang.String str16 = cardanEulerSingularityException6.getPattern();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException18 = new org.apache.commons.math.geometry.CardanEulerSingularityException(true);
        java.lang.Object[] objArray19 = cardanEulerSingularityException18.getArguments();
        java.lang.Throwable[] throwableArray20 = cardanEulerSingularityException18.getSuppressed();
        java.lang.String str21 = cardanEulerSingularityException18.getPattern();
        java.lang.String str22 = cardanEulerSingularityException18.getPattern();
        java.lang.Throwable[] throwableArray23 = cardanEulerSingularityException18.getSuppressed();
        java.lang.Object[] objArray24 = cardanEulerSingularityException18.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException26 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.String str27 = cardanEulerSingularityException26.getPattern();
        java.lang.Object[] objArray28 = cardanEulerSingularityException26.getArguments();
        java.lang.String str29 = cardanEulerSingularityException26.getPattern();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException31 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.String str32 = cardanEulerSingularityException31.getPattern();
        java.lang.Throwable[] throwableArray33 = cardanEulerSingularityException31.getSuppressed();
        cardanEulerSingularityException26.addSuppressed((java.lang.Throwable) cardanEulerSingularityException31);
        java.lang.String str35 = cardanEulerSingularityException26.getPattern();
        java.lang.String str36 = cardanEulerSingularityException26.getPattern();
        java.lang.Throwable[] throwableArray37 = cardanEulerSingularityException26.getSuppressed();
        cardanEulerSingularityException18.addSuppressed((java.lang.Throwable) cardanEulerSingularityException26);
        java.lang.Throwable[] throwableArray39 = cardanEulerSingularityException18.getSuppressed();
        cardanEulerSingularityException6.addSuppressed((java.lang.Throwable) cardanEulerSingularityException18);
        java.lang.String str41 = cardanEulerSingularityException18.getPattern();
        org.junit.Assert.assertNotNull(objArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray2), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray2), "[]");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Euler angles singularity" + "'", str3, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray4), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray4), "[]");
        org.junit.Assert.assertNotNull(objArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray7), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray7), "[]");
        org.junit.Assert.assertNotNull(objArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray8), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray8), "[]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Cardan angles singularity" + "'", str9, "Cardan angles singularity");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Cardan angles singularity" + "'", str10, "Cardan angles singularity");
        org.junit.Assert.assertNotNull(throwableArray12);
        org.junit.Assert.assertNotNull(objArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray13), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray13), "[]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "Cardan angles singularity" + "'", str14, "Cardan angles singularity");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Cardan angles singularity" + "'", str15, "Cardan angles singularity");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "Cardan angles singularity" + "'", str16, "Cardan angles singularity");
        org.junit.Assert.assertNotNull(objArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray19), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray19), "[]");
        org.junit.Assert.assertNotNull(throwableArray20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "Cardan angles singularity" + "'", str21, "Cardan angles singularity");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "Cardan angles singularity" + "'", str22, "Cardan angles singularity");
        org.junit.Assert.assertNotNull(throwableArray23);
        org.junit.Assert.assertNotNull(objArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray24), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray24), "[]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "Euler angles singularity" + "'", str27, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray28), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray28), "[]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "Euler angles singularity" + "'", str29, "Euler angles singularity");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "Euler angles singularity" + "'", str32, "Euler angles singularity");
        org.junit.Assert.assertNotNull(throwableArray33);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "Euler angles singularity" + "'", str35, "Euler angles singularity");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "Euler angles singularity" + "'", str36, "Euler angles singularity");
        org.junit.Assert.assertNotNull(throwableArray37);
        org.junit.Assert.assertNotNull(throwableArray39);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "Cardan angles singularity" + "'", str41, "Cardan angles singularity");
    }

    @Test
    public void test1679() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1679");
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException1 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray2 = cardanEulerSingularityException1.getArguments();
        java.lang.Throwable[] throwableArray3 = cardanEulerSingularityException1.getSuppressed();
        java.lang.String str4 = cardanEulerSingularityException1.getPattern();
        java.lang.Throwable[] throwableArray5 = cardanEulerSingularityException1.getSuppressed();
        java.lang.Throwable[] throwableArray6 = cardanEulerSingularityException1.getSuppressed();
        java.lang.String str7 = cardanEulerSingularityException1.getPattern();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException9 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray10 = cardanEulerSingularityException9.getArguments();
        java.lang.Throwable[] throwableArray11 = cardanEulerSingularityException9.getSuppressed();
        java.lang.String str12 = cardanEulerSingularityException9.getPattern();
        java.lang.Throwable[] throwableArray13 = cardanEulerSingularityException9.getSuppressed();
        java.lang.String str14 = cardanEulerSingularityException9.getPattern();
        java.lang.String str15 = cardanEulerSingularityException9.getPattern();
        java.lang.String str16 = cardanEulerSingularityException9.getPattern();
        java.lang.String str17 = cardanEulerSingularityException9.getPattern();
        java.lang.Object[] objArray18 = cardanEulerSingularityException9.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException20 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray21 = cardanEulerSingularityException20.getArguments();
        java.lang.String str22 = cardanEulerSingularityException20.getPattern();
        java.lang.Object[] objArray23 = cardanEulerSingularityException20.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException25 = new org.apache.commons.math.geometry.CardanEulerSingularityException(true);
        java.lang.Object[] objArray26 = cardanEulerSingularityException25.getArguments();
        java.lang.Object[] objArray27 = cardanEulerSingularityException25.getArguments();
        java.lang.String str28 = cardanEulerSingularityException25.getPattern();
        java.lang.String str29 = cardanEulerSingularityException25.getPattern();
        cardanEulerSingularityException20.addSuppressed((java.lang.Throwable) cardanEulerSingularityException25);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException32 = new org.apache.commons.math.geometry.CardanEulerSingularityException(true);
        java.lang.Object[] objArray33 = cardanEulerSingularityException32.getArguments();
        java.lang.Throwable[] throwableArray34 = cardanEulerSingularityException32.getSuppressed();
        java.lang.Throwable[] throwableArray35 = cardanEulerSingularityException32.getSuppressed();
        java.lang.Throwable[] throwableArray36 = cardanEulerSingularityException32.getSuppressed();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException38 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray39 = cardanEulerSingularityException38.getArguments();
        java.lang.Object[] objArray40 = cardanEulerSingularityException38.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException42 = new org.apache.commons.math.geometry.CardanEulerSingularityException(true);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException44 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        cardanEulerSingularityException42.addSuppressed((java.lang.Throwable) cardanEulerSingularityException44);
        cardanEulerSingularityException38.addSuppressed((java.lang.Throwable) cardanEulerSingularityException42);
        cardanEulerSingularityException32.addSuppressed((java.lang.Throwable) cardanEulerSingularityException38);
        java.lang.Throwable[] throwableArray48 = cardanEulerSingularityException32.getSuppressed();
        cardanEulerSingularityException25.addSuppressed((java.lang.Throwable) cardanEulerSingularityException32);
        java.lang.Throwable[] throwableArray50 = cardanEulerSingularityException32.getSuppressed();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException52 = new org.apache.commons.math.geometry.CardanEulerSingularityException(true);
        java.lang.Object[] objArray53 = cardanEulerSingularityException52.getArguments();
        java.lang.Throwable[] throwableArray54 = cardanEulerSingularityException52.getSuppressed();
        java.lang.String str55 = cardanEulerSingularityException52.getPattern();
        java.lang.Object[] objArray56 = cardanEulerSingularityException52.getArguments();
        java.lang.Throwable[] throwableArray57 = cardanEulerSingularityException52.getSuppressed();
        java.lang.Object[] objArray58 = cardanEulerSingularityException52.getArguments();
        java.lang.Throwable[] throwableArray59 = cardanEulerSingularityException52.getSuppressed();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException61 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray62 = cardanEulerSingularityException61.getArguments();
        java.lang.Object[] objArray63 = cardanEulerSingularityException61.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException65 = new org.apache.commons.math.geometry.CardanEulerSingularityException(true);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException67 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        cardanEulerSingularityException65.addSuppressed((java.lang.Throwable) cardanEulerSingularityException67);
        cardanEulerSingularityException61.addSuppressed((java.lang.Throwable) cardanEulerSingularityException65);
        java.lang.String str70 = cardanEulerSingularityException61.getPattern();
        java.lang.String str71 = cardanEulerSingularityException61.getPattern();
        java.lang.Throwable[] throwableArray72 = cardanEulerSingularityException61.getSuppressed();
        cardanEulerSingularityException52.addSuppressed((java.lang.Throwable) cardanEulerSingularityException61);
        cardanEulerSingularityException32.addSuppressed((java.lang.Throwable) cardanEulerSingularityException52);
        cardanEulerSingularityException9.addSuppressed((java.lang.Throwable) cardanEulerSingularityException52);
        cardanEulerSingularityException1.addSuppressed((java.lang.Throwable) cardanEulerSingularityException9);
        java.lang.String str77 = cardanEulerSingularityException1.toString();
        org.junit.Assert.assertNotNull(objArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray2), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray2), "[]");
        org.junit.Assert.assertNotNull(throwableArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Euler angles singularity" + "'", str4, "Euler angles singularity");
        org.junit.Assert.assertNotNull(throwableArray5);
        org.junit.Assert.assertNotNull(throwableArray6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Euler angles singularity" + "'", str7, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray10), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray10), "[]");
        org.junit.Assert.assertNotNull(throwableArray11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Euler angles singularity" + "'", str12, "Euler angles singularity");
        org.junit.Assert.assertNotNull(throwableArray13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "Euler angles singularity" + "'", str14, "Euler angles singularity");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Euler angles singularity" + "'", str15, "Euler angles singularity");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "Euler angles singularity" + "'", str16, "Euler angles singularity");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "Euler angles singularity" + "'", str17, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray18), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray18), "[]");
        org.junit.Assert.assertNotNull(objArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray21), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray21), "[]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "Euler angles singularity" + "'", str22, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray23), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray23), "[]");
        org.junit.Assert.assertNotNull(objArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray26), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray26), "[]");
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray27), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray27), "[]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "Cardan angles singularity" + "'", str28, "Cardan angles singularity");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "Cardan angles singularity" + "'", str29, "Cardan angles singularity");
        org.junit.Assert.assertNotNull(objArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray33), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray33), "[]");
        org.junit.Assert.assertNotNull(throwableArray34);
        org.junit.Assert.assertNotNull(throwableArray35);
        org.junit.Assert.assertNotNull(throwableArray36);
        org.junit.Assert.assertNotNull(objArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray39), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray39), "[]");
        org.junit.Assert.assertNotNull(objArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray40), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray40), "[]");
        org.junit.Assert.assertNotNull(throwableArray48);
        org.junit.Assert.assertNotNull(throwableArray50);
        org.junit.Assert.assertNotNull(objArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray53), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray53), "[]");
        org.junit.Assert.assertNotNull(throwableArray54);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "Cardan angles singularity" + "'", str55, "Cardan angles singularity");
        org.junit.Assert.assertNotNull(objArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray56), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray56), "[]");
        org.junit.Assert.assertNotNull(throwableArray57);
        org.junit.Assert.assertNotNull(objArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray58), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray58), "[]");
        org.junit.Assert.assertNotNull(throwableArray59);
        org.junit.Assert.assertNotNull(objArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray62), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray62), "[]");
        org.junit.Assert.assertNotNull(objArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray63), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray63), "[]");
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "Euler angles singularity" + "'", str70, "Euler angles singularity");
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "Euler angles singularity" + "'", str71, "Euler angles singularity");
        org.junit.Assert.assertNotNull(throwableArray72);
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "org.apache.commons.math.geometry.CardanEulerSingularityException: Euler angles singularity" + "'", str77, "org.apache.commons.math.geometry.CardanEulerSingularityException: Euler angles singularity");
    }

    @Test
    public void test1680() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1680");
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException1 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray2 = cardanEulerSingularityException1.getArguments();
        java.lang.String str3 = cardanEulerSingularityException1.getPattern();
        java.lang.Object[] objArray4 = cardanEulerSingularityException1.getArguments();
        java.lang.Object[] objArray5 = cardanEulerSingularityException1.getArguments();
        java.lang.String str6 = cardanEulerSingularityException1.getPattern();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException8 = new org.apache.commons.math.geometry.CardanEulerSingularityException(true);
        java.lang.Object[] objArray9 = cardanEulerSingularityException8.getArguments();
        java.lang.Throwable[] throwableArray10 = cardanEulerSingularityException8.getSuppressed();
        java.lang.Throwable[] throwableArray11 = cardanEulerSingularityException8.getSuppressed();
        cardanEulerSingularityException1.addSuppressed((java.lang.Throwable) cardanEulerSingularityException8);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException14 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray15 = cardanEulerSingularityException14.getArguments();
        java.lang.Object[] objArray16 = cardanEulerSingularityException14.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException18 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray19 = cardanEulerSingularityException18.getArguments();
        cardanEulerSingularityException14.addSuppressed((java.lang.Throwable) cardanEulerSingularityException18);
        java.lang.Throwable[] throwableArray21 = cardanEulerSingularityException18.getSuppressed();
        java.lang.Object[] objArray22 = cardanEulerSingularityException18.getArguments();
        cardanEulerSingularityException1.addSuppressed((java.lang.Throwable) cardanEulerSingularityException18);
        java.lang.String str24 = cardanEulerSingularityException18.getPattern();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException26 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray27 = cardanEulerSingularityException26.getArguments();
        java.lang.String str28 = cardanEulerSingularityException26.getPattern();
        java.lang.Object[] objArray29 = cardanEulerSingularityException26.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException31 = new org.apache.commons.math.geometry.CardanEulerSingularityException(true);
        java.lang.Object[] objArray32 = cardanEulerSingularityException31.getArguments();
        java.lang.Object[] objArray33 = cardanEulerSingularityException31.getArguments();
        java.lang.String str34 = cardanEulerSingularityException31.getPattern();
        java.lang.String str35 = cardanEulerSingularityException31.getPattern();
        cardanEulerSingularityException26.addSuppressed((java.lang.Throwable) cardanEulerSingularityException31);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException38 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray39 = cardanEulerSingularityException38.getArguments();
        java.lang.String str40 = cardanEulerSingularityException38.getPattern();
        java.lang.Object[] objArray41 = cardanEulerSingularityException38.getArguments();
        java.lang.Object[] objArray42 = cardanEulerSingularityException38.getArguments();
        java.lang.String str43 = cardanEulerSingularityException38.getPattern();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException45 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        cardanEulerSingularityException38.addSuppressed((java.lang.Throwable) cardanEulerSingularityException45);
        java.lang.String str47 = cardanEulerSingularityException38.getPattern();
        java.lang.String str48 = cardanEulerSingularityException38.getPattern();
        cardanEulerSingularityException26.addSuppressed((java.lang.Throwable) cardanEulerSingularityException38);
        java.lang.Throwable[] throwableArray50 = cardanEulerSingularityException26.getSuppressed();
        java.lang.String str51 = cardanEulerSingularityException26.getPattern();
        cardanEulerSingularityException18.addSuppressed((java.lang.Throwable) cardanEulerSingularityException26);
        java.lang.Throwable[] throwableArray53 = cardanEulerSingularityException26.getSuppressed();
        java.lang.Object[] objArray54 = cardanEulerSingularityException26.getArguments();
        java.lang.Object[] objArray55 = cardanEulerSingularityException26.getArguments();
        java.lang.Throwable[] throwableArray56 = cardanEulerSingularityException26.getSuppressed();
        org.junit.Assert.assertNotNull(objArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray2), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray2), "[]");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Euler angles singularity" + "'", str3, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray4), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray4), "[]");
        org.junit.Assert.assertNotNull(objArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray5), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray5), "[]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "Euler angles singularity" + "'", str6, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray9), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray9), "[]");
        org.junit.Assert.assertNotNull(throwableArray10);
        org.junit.Assert.assertNotNull(throwableArray11);
        org.junit.Assert.assertNotNull(objArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray15), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray15), "[]");
        org.junit.Assert.assertNotNull(objArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray16), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray16), "[]");
        org.junit.Assert.assertNotNull(objArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray19), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray19), "[]");
        org.junit.Assert.assertNotNull(throwableArray21);
        org.junit.Assert.assertNotNull(objArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray22), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray22), "[]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "Euler angles singularity" + "'", str24, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray27), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray27), "[]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "Euler angles singularity" + "'", str28, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray29), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray29), "[]");
        org.junit.Assert.assertNotNull(objArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray32), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray32), "[]");
        org.junit.Assert.assertNotNull(objArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray33), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray33), "[]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "Cardan angles singularity" + "'", str34, "Cardan angles singularity");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "Cardan angles singularity" + "'", str35, "Cardan angles singularity");
        org.junit.Assert.assertNotNull(objArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray39), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray39), "[]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "Euler angles singularity" + "'", str40, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray41), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray41), "[]");
        org.junit.Assert.assertNotNull(objArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray42), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray42), "[]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "Euler angles singularity" + "'", str43, "Euler angles singularity");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "Euler angles singularity" + "'", str47, "Euler angles singularity");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "Euler angles singularity" + "'", str48, "Euler angles singularity");
        org.junit.Assert.assertNotNull(throwableArray50);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "Euler angles singularity" + "'", str51, "Euler angles singularity");
        org.junit.Assert.assertNotNull(throwableArray53);
        org.junit.Assert.assertNotNull(objArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray54), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray54), "[]");
        org.junit.Assert.assertNotNull(objArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray55), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray55), "[]");
        org.junit.Assert.assertNotNull(throwableArray56);
    }

    @Test
    public void test1681() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1681");
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException1 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray2 = cardanEulerSingularityException1.getArguments();
        java.lang.Object[] objArray3 = cardanEulerSingularityException1.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException5 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray6 = cardanEulerSingularityException5.getArguments();
        cardanEulerSingularityException1.addSuppressed((java.lang.Throwable) cardanEulerSingularityException5);
        java.lang.Object[] objArray8 = cardanEulerSingularityException5.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException10 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray11 = cardanEulerSingularityException10.getArguments();
        java.lang.Throwable[] throwableArray12 = cardanEulerSingularityException10.getSuppressed();
        java.lang.String str13 = cardanEulerSingularityException10.getPattern();
        cardanEulerSingularityException5.addSuppressed((java.lang.Throwable) cardanEulerSingularityException10);
        java.lang.Object[] objArray15 = cardanEulerSingularityException5.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException17 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray18 = cardanEulerSingularityException17.getArguments();
        java.lang.Object[] objArray19 = cardanEulerSingularityException17.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException21 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray22 = cardanEulerSingularityException21.getArguments();
        cardanEulerSingularityException17.addSuppressed((java.lang.Throwable) cardanEulerSingularityException21);
        java.lang.Throwable[] throwableArray24 = cardanEulerSingularityException17.getSuppressed();
        java.lang.String str25 = cardanEulerSingularityException17.getPattern();
        java.lang.String str26 = cardanEulerSingularityException17.getPattern();
        java.lang.String str27 = cardanEulerSingularityException17.getPattern();
        cardanEulerSingularityException5.addSuppressed((java.lang.Throwable) cardanEulerSingularityException17);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException30 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray31 = cardanEulerSingularityException30.getArguments();
        cardanEulerSingularityException17.addSuppressed((java.lang.Throwable) cardanEulerSingularityException30);
        java.lang.String str33 = cardanEulerSingularityException17.getPattern();
        java.lang.Object[] objArray34 = cardanEulerSingularityException17.getArguments();
        java.lang.Object[] objArray35 = cardanEulerSingularityException17.getArguments();
        java.lang.String str36 = cardanEulerSingularityException17.toString();
        org.junit.Assert.assertNotNull(objArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray2), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray2), "[]");
        org.junit.Assert.assertNotNull(objArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray3), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray3), "[]");
        org.junit.Assert.assertNotNull(objArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray6), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray6), "[]");
        org.junit.Assert.assertNotNull(objArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray8), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray8), "[]");
        org.junit.Assert.assertNotNull(objArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray11), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray11), "[]");
        org.junit.Assert.assertNotNull(throwableArray12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Euler angles singularity" + "'", str13, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray15), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray15), "[]");
        org.junit.Assert.assertNotNull(objArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray18), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray18), "[]");
        org.junit.Assert.assertNotNull(objArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray19), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray19), "[]");
        org.junit.Assert.assertNotNull(objArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray22), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray22), "[]");
        org.junit.Assert.assertNotNull(throwableArray24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "Euler angles singularity" + "'", str25, "Euler angles singularity");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "Euler angles singularity" + "'", str26, "Euler angles singularity");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "Euler angles singularity" + "'", str27, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray31), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray31), "[]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "Euler angles singularity" + "'", str33, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray34), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray34), "[]");
        org.junit.Assert.assertNotNull(objArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray35), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray35), "[]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "org.apache.commons.math.geometry.CardanEulerSingularityException: Euler angles singularity" + "'", str36, "org.apache.commons.math.geometry.CardanEulerSingularityException: Euler angles singularity");
    }

    @Test
    public void test1682() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1682");
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException1 = new org.apache.commons.math.geometry.CardanEulerSingularityException(true);
        java.lang.Object[] objArray2 = cardanEulerSingularityException1.getArguments();
        java.lang.Object[] objArray3 = cardanEulerSingularityException1.getArguments();
        java.lang.Object[] objArray4 = cardanEulerSingularityException1.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException6 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray7 = cardanEulerSingularityException6.getArguments();
        java.lang.Object[] objArray8 = cardanEulerSingularityException6.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException10 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray11 = cardanEulerSingularityException10.getArguments();
        cardanEulerSingularityException6.addSuppressed((java.lang.Throwable) cardanEulerSingularityException10);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException14 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray15 = cardanEulerSingularityException14.getArguments();
        java.lang.Object[] objArray16 = cardanEulerSingularityException14.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException18 = new org.apache.commons.math.geometry.CardanEulerSingularityException(true);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException20 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        cardanEulerSingularityException18.addSuppressed((java.lang.Throwable) cardanEulerSingularityException20);
        cardanEulerSingularityException14.addSuppressed((java.lang.Throwable) cardanEulerSingularityException18);
        java.lang.Throwable[] throwableArray23 = cardanEulerSingularityException14.getSuppressed();
        cardanEulerSingularityException10.addSuppressed((java.lang.Throwable) cardanEulerSingularityException14);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException26 = new org.apache.commons.math.geometry.CardanEulerSingularityException(true);
        java.lang.Object[] objArray27 = cardanEulerSingularityException26.getArguments();
        java.lang.Object[] objArray28 = cardanEulerSingularityException26.getArguments();
        cardanEulerSingularityException14.addSuppressed((java.lang.Throwable) cardanEulerSingularityException26);
        java.lang.Throwable[] throwableArray30 = cardanEulerSingularityException26.getSuppressed();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException32 = new org.apache.commons.math.geometry.CardanEulerSingularityException(true);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException34 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        cardanEulerSingularityException32.addSuppressed((java.lang.Throwable) cardanEulerSingularityException34);
        java.lang.String str36 = cardanEulerSingularityException34.getPattern();
        java.lang.Throwable[] throwableArray37 = cardanEulerSingularityException34.getSuppressed();
        java.lang.String str38 = cardanEulerSingularityException34.getPattern();
        cardanEulerSingularityException26.addSuppressed((java.lang.Throwable) cardanEulerSingularityException34);
        java.lang.Object[] objArray40 = cardanEulerSingularityException26.getArguments();
        java.lang.Object[] objArray41 = cardanEulerSingularityException26.getArguments();
        cardanEulerSingularityException1.addSuppressed((java.lang.Throwable) cardanEulerSingularityException26);
        java.lang.String str43 = cardanEulerSingularityException26.toString();
        org.junit.Assert.assertNotNull(objArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray2), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray2), "[]");
        org.junit.Assert.assertNotNull(objArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray3), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray3), "[]");
        org.junit.Assert.assertNotNull(objArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray4), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray4), "[]");
        org.junit.Assert.assertNotNull(objArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray7), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray7), "[]");
        org.junit.Assert.assertNotNull(objArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray8), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray8), "[]");
        org.junit.Assert.assertNotNull(objArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray11), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray11), "[]");
        org.junit.Assert.assertNotNull(objArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray15), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray15), "[]");
        org.junit.Assert.assertNotNull(objArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray16), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray16), "[]");
        org.junit.Assert.assertNotNull(throwableArray23);
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray27), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray27), "[]");
        org.junit.Assert.assertNotNull(objArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray28), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray28), "[]");
        org.junit.Assert.assertNotNull(throwableArray30);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "Euler angles singularity" + "'", str36, "Euler angles singularity");
        org.junit.Assert.assertNotNull(throwableArray37);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "Euler angles singularity" + "'", str38, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray40), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray40), "[]");
        org.junit.Assert.assertNotNull(objArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray41), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray41), "[]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "org.apache.commons.math.geometry.CardanEulerSingularityException: Cardan angles singularity" + "'", str43, "org.apache.commons.math.geometry.CardanEulerSingularityException: Cardan angles singularity");
    }

    @Test
    public void test1683() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1683");
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException1 = new org.apache.commons.math.geometry.CardanEulerSingularityException(true);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException3 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        cardanEulerSingularityException1.addSuppressed((java.lang.Throwable) cardanEulerSingularityException3);
        java.lang.Throwable[] throwableArray5 = cardanEulerSingularityException1.getSuppressed();
        java.lang.Throwable[] throwableArray6 = cardanEulerSingularityException1.getSuppressed();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException8 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray9 = cardanEulerSingularityException8.getArguments();
        java.lang.String str10 = cardanEulerSingularityException8.getPattern();
        java.lang.Object[] objArray11 = cardanEulerSingularityException8.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException13 = new org.apache.commons.math.geometry.CardanEulerSingularityException(true);
        java.lang.Object[] objArray14 = cardanEulerSingularityException13.getArguments();
        java.lang.Object[] objArray15 = cardanEulerSingularityException13.getArguments();
        java.lang.String str16 = cardanEulerSingularityException13.getPattern();
        java.lang.String str17 = cardanEulerSingularityException13.getPattern();
        cardanEulerSingularityException8.addSuppressed((java.lang.Throwable) cardanEulerSingularityException13);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException20 = new org.apache.commons.math.geometry.CardanEulerSingularityException(true);
        java.lang.Object[] objArray21 = cardanEulerSingularityException20.getArguments();
        java.lang.Throwable[] throwableArray22 = cardanEulerSingularityException20.getSuppressed();
        java.lang.Throwable[] throwableArray23 = cardanEulerSingularityException20.getSuppressed();
        java.lang.Throwable[] throwableArray24 = cardanEulerSingularityException20.getSuppressed();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException26 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray27 = cardanEulerSingularityException26.getArguments();
        java.lang.Object[] objArray28 = cardanEulerSingularityException26.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException30 = new org.apache.commons.math.geometry.CardanEulerSingularityException(true);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException32 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        cardanEulerSingularityException30.addSuppressed((java.lang.Throwable) cardanEulerSingularityException32);
        cardanEulerSingularityException26.addSuppressed((java.lang.Throwable) cardanEulerSingularityException30);
        cardanEulerSingularityException20.addSuppressed((java.lang.Throwable) cardanEulerSingularityException26);
        java.lang.Throwable[] throwableArray36 = cardanEulerSingularityException20.getSuppressed();
        cardanEulerSingularityException13.addSuppressed((java.lang.Throwable) cardanEulerSingularityException20);
        java.lang.String str38 = cardanEulerSingularityException13.getPattern();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException40 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray41 = cardanEulerSingularityException40.getArguments();
        java.lang.Throwable[] throwableArray42 = cardanEulerSingularityException40.getSuppressed();
        java.lang.String str43 = cardanEulerSingularityException40.getPattern();
        java.lang.Throwable[] throwableArray44 = cardanEulerSingularityException40.getSuppressed();
        java.lang.Throwable[] throwableArray45 = cardanEulerSingularityException40.getSuppressed();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException47 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray48 = cardanEulerSingularityException47.getArguments();
        java.lang.Object[] objArray49 = cardanEulerSingularityException47.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException51 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray52 = cardanEulerSingularityException51.getArguments();
        cardanEulerSingularityException47.addSuppressed((java.lang.Throwable) cardanEulerSingularityException51);
        java.lang.String str54 = cardanEulerSingularityException47.getPattern();
        cardanEulerSingularityException40.addSuppressed((java.lang.Throwable) cardanEulerSingularityException47);
        cardanEulerSingularityException13.addSuppressed((java.lang.Throwable) cardanEulerSingularityException40);
        cardanEulerSingularityException1.addSuppressed((java.lang.Throwable) cardanEulerSingularityException40);
        java.lang.String str58 = cardanEulerSingularityException1.getPattern();
        java.lang.Object[] objArray59 = cardanEulerSingularityException1.getArguments();
        org.junit.Assert.assertNotNull(throwableArray5);
        org.junit.Assert.assertNotNull(throwableArray6);
        org.junit.Assert.assertNotNull(objArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray9), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray9), "[]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Euler angles singularity" + "'", str10, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray11), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray11), "[]");
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[]");
        org.junit.Assert.assertNotNull(objArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray15), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray15), "[]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "Cardan angles singularity" + "'", str16, "Cardan angles singularity");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "Cardan angles singularity" + "'", str17, "Cardan angles singularity");
        org.junit.Assert.assertNotNull(objArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray21), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray21), "[]");
        org.junit.Assert.assertNotNull(throwableArray22);
        org.junit.Assert.assertNotNull(throwableArray23);
        org.junit.Assert.assertNotNull(throwableArray24);
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray27), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray27), "[]");
        org.junit.Assert.assertNotNull(objArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray28), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray28), "[]");
        org.junit.Assert.assertNotNull(throwableArray36);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "Cardan angles singularity" + "'", str38, "Cardan angles singularity");
        org.junit.Assert.assertNotNull(objArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray41), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray41), "[]");
        org.junit.Assert.assertNotNull(throwableArray42);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "Euler angles singularity" + "'", str43, "Euler angles singularity");
        org.junit.Assert.assertNotNull(throwableArray44);
        org.junit.Assert.assertNotNull(throwableArray45);
        org.junit.Assert.assertNotNull(objArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray48), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray48), "[]");
        org.junit.Assert.assertNotNull(objArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray49), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray49), "[]");
        org.junit.Assert.assertNotNull(objArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray52), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray52), "[]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "Euler angles singularity" + "'", str54, "Euler angles singularity");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "Cardan angles singularity" + "'", str58, "Cardan angles singularity");
        org.junit.Assert.assertNotNull(objArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray59), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray59), "[]");
    }

    @Test
    public void test1684() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1684");
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException1 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray2 = cardanEulerSingularityException1.getArguments();
        java.lang.Object[] objArray3 = cardanEulerSingularityException1.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException5 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray6 = cardanEulerSingularityException5.getArguments();
        cardanEulerSingularityException1.addSuppressed((java.lang.Throwable) cardanEulerSingularityException5);
        java.lang.Throwable[] throwableArray8 = cardanEulerSingularityException5.getSuppressed();
        java.lang.Object[] objArray9 = cardanEulerSingularityException5.getArguments();
        java.lang.Throwable[] throwableArray10 = cardanEulerSingularityException5.getSuppressed();
        java.lang.String str11 = cardanEulerSingularityException5.getPattern();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException13 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.String str14 = cardanEulerSingularityException13.getPattern();
        java.lang.Object[] objArray15 = cardanEulerSingularityException13.getArguments();
        java.lang.String str16 = cardanEulerSingularityException13.getPattern();
        java.lang.String str17 = cardanEulerSingularityException13.getPattern();
        java.lang.String str18 = cardanEulerSingularityException13.getPattern();
        java.lang.Object[] objArray19 = cardanEulerSingularityException13.getArguments();
        cardanEulerSingularityException5.addSuppressed((java.lang.Throwable) cardanEulerSingularityException13);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException22 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray23 = cardanEulerSingularityException22.getArguments();
        java.lang.Object[] objArray24 = cardanEulerSingularityException22.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException26 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray27 = cardanEulerSingularityException26.getArguments();
        cardanEulerSingularityException22.addSuppressed((java.lang.Throwable) cardanEulerSingularityException26);
        java.lang.Throwable[] throwableArray29 = cardanEulerSingularityException26.getSuppressed();
        java.lang.Object[] objArray30 = cardanEulerSingularityException26.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException32 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray33 = cardanEulerSingularityException32.getArguments();
        java.lang.Object[] objArray34 = cardanEulerSingularityException32.getArguments();
        java.lang.Object[] objArray35 = cardanEulerSingularityException32.getArguments();
        cardanEulerSingularityException26.addSuppressed((java.lang.Throwable) cardanEulerSingularityException32);
        java.lang.String str37 = cardanEulerSingularityException26.getPattern();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException39 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray40 = cardanEulerSingularityException39.getArguments();
        java.lang.Object[] objArray41 = cardanEulerSingularityException39.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException43 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray44 = cardanEulerSingularityException43.getArguments();
        cardanEulerSingularityException39.addSuppressed((java.lang.Throwable) cardanEulerSingularityException43);
        java.lang.Object[] objArray46 = cardanEulerSingularityException43.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException48 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray49 = cardanEulerSingularityException48.getArguments();
        java.lang.Throwable[] throwableArray50 = cardanEulerSingularityException48.getSuppressed();
        java.lang.String str51 = cardanEulerSingularityException48.getPattern();
        cardanEulerSingularityException43.addSuppressed((java.lang.Throwable) cardanEulerSingularityException48);
        java.lang.Object[] objArray53 = cardanEulerSingularityException43.getArguments();
        java.lang.String str54 = cardanEulerSingularityException43.getPattern();
        java.lang.Object[] objArray55 = cardanEulerSingularityException43.getArguments();
        cardanEulerSingularityException26.addSuppressed((java.lang.Throwable) cardanEulerSingularityException43);
        java.lang.Throwable[] throwableArray57 = cardanEulerSingularityException26.getSuppressed();
        java.lang.String str58 = cardanEulerSingularityException26.getPattern();
        cardanEulerSingularityException13.addSuppressed((java.lang.Throwable) cardanEulerSingularityException26);
        org.junit.Assert.assertNotNull(objArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray2), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray2), "[]");
        org.junit.Assert.assertNotNull(objArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray3), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray3), "[]");
        org.junit.Assert.assertNotNull(objArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray6), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray6), "[]");
        org.junit.Assert.assertNotNull(throwableArray8);
        org.junit.Assert.assertNotNull(objArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray9), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray9), "[]");
        org.junit.Assert.assertNotNull(throwableArray10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Euler angles singularity" + "'", str11, "Euler angles singularity");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "Euler angles singularity" + "'", str14, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray15), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray15), "[]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "Euler angles singularity" + "'", str16, "Euler angles singularity");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "Euler angles singularity" + "'", str17, "Euler angles singularity");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "Euler angles singularity" + "'", str18, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray19), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray19), "[]");
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray23), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray23), "[]");
        org.junit.Assert.assertNotNull(objArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray24), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray24), "[]");
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray27), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray27), "[]");
        org.junit.Assert.assertNotNull(throwableArray29);
        org.junit.Assert.assertNotNull(objArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray30), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray30), "[]");
        org.junit.Assert.assertNotNull(objArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray33), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray33), "[]");
        org.junit.Assert.assertNotNull(objArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray34), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray34), "[]");
        org.junit.Assert.assertNotNull(objArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray35), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray35), "[]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "Euler angles singularity" + "'", str37, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray40), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray40), "[]");
        org.junit.Assert.assertNotNull(objArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray41), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray41), "[]");
        org.junit.Assert.assertNotNull(objArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray44), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray44), "[]");
        org.junit.Assert.assertNotNull(objArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray46), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray46), "[]");
        org.junit.Assert.assertNotNull(objArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray49), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray49), "[]");
        org.junit.Assert.assertNotNull(throwableArray50);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "Euler angles singularity" + "'", str51, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray53), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray53), "[]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "Euler angles singularity" + "'", str54, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray55), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray55), "[]");
        org.junit.Assert.assertNotNull(throwableArray57);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "Euler angles singularity" + "'", str58, "Euler angles singularity");
    }

    @Test
    public void test1685() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1685");
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException1 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray2 = cardanEulerSingularityException1.getArguments();
        java.lang.String str3 = cardanEulerSingularityException1.getPattern();
        java.lang.Object[] objArray4 = cardanEulerSingularityException1.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException6 = new org.apache.commons.math.geometry.CardanEulerSingularityException(true);
        java.lang.Object[] objArray7 = cardanEulerSingularityException6.getArguments();
        java.lang.Object[] objArray8 = cardanEulerSingularityException6.getArguments();
        cardanEulerSingularityException1.addSuppressed((java.lang.Throwable) cardanEulerSingularityException6);
        java.lang.String str10 = cardanEulerSingularityException1.getPattern();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException12 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray13 = cardanEulerSingularityException12.getArguments();
        java.lang.Object[] objArray14 = cardanEulerSingularityException12.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException16 = new org.apache.commons.math.geometry.CardanEulerSingularityException(true);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException18 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        cardanEulerSingularityException16.addSuppressed((java.lang.Throwable) cardanEulerSingularityException18);
        cardanEulerSingularityException12.addSuppressed((java.lang.Throwable) cardanEulerSingularityException16);
        java.lang.String str21 = cardanEulerSingularityException12.getPattern();
        cardanEulerSingularityException1.addSuppressed((java.lang.Throwable) cardanEulerSingularityException12);
        java.lang.Throwable[] throwableArray23 = cardanEulerSingularityException1.getSuppressed();
        java.lang.String str24 = cardanEulerSingularityException1.getPattern();
        java.lang.String str25 = cardanEulerSingularityException1.getPattern();
        java.lang.Object[] objArray26 = cardanEulerSingularityException1.getArguments();
        org.junit.Assert.assertNotNull(objArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray2), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray2), "[]");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Euler angles singularity" + "'", str3, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray4), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray4), "[]");
        org.junit.Assert.assertNotNull(objArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray7), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray7), "[]");
        org.junit.Assert.assertNotNull(objArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray8), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray8), "[]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Euler angles singularity" + "'", str10, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray13), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray13), "[]");
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "Euler angles singularity" + "'", str21, "Euler angles singularity");
        org.junit.Assert.assertNotNull(throwableArray23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "Euler angles singularity" + "'", str24, "Euler angles singularity");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "Euler angles singularity" + "'", str25, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray26), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray26), "[]");
    }

    @Test
    public void test1686() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1686");
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException1 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray2 = cardanEulerSingularityException1.getArguments();
        java.lang.Object[] objArray3 = cardanEulerSingularityException1.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException5 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray6 = cardanEulerSingularityException5.getArguments();
        cardanEulerSingularityException1.addSuppressed((java.lang.Throwable) cardanEulerSingularityException5);
        java.lang.String str8 = cardanEulerSingularityException1.getPattern();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException10 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray11 = cardanEulerSingularityException10.getArguments();
        java.lang.Object[] objArray12 = cardanEulerSingularityException10.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException14 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray15 = cardanEulerSingularityException14.getArguments();
        cardanEulerSingularityException10.addSuppressed((java.lang.Throwable) cardanEulerSingularityException14);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException18 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray19 = cardanEulerSingularityException18.getArguments();
        java.lang.Object[] objArray20 = cardanEulerSingularityException18.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException22 = new org.apache.commons.math.geometry.CardanEulerSingularityException(true);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException24 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        cardanEulerSingularityException22.addSuppressed((java.lang.Throwable) cardanEulerSingularityException24);
        cardanEulerSingularityException18.addSuppressed((java.lang.Throwable) cardanEulerSingularityException22);
        java.lang.Throwable[] throwableArray27 = cardanEulerSingularityException18.getSuppressed();
        cardanEulerSingularityException14.addSuppressed((java.lang.Throwable) cardanEulerSingularityException18);
        java.lang.String str29 = cardanEulerSingularityException18.getPattern();
        cardanEulerSingularityException1.addSuppressed((java.lang.Throwable) cardanEulerSingularityException18);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException32 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray33 = cardanEulerSingularityException32.getArguments();
        java.lang.Object[] objArray34 = cardanEulerSingularityException32.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException36 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray37 = cardanEulerSingularityException36.getArguments();
        cardanEulerSingularityException32.addSuppressed((java.lang.Throwable) cardanEulerSingularityException36);
        java.lang.Object[] objArray39 = cardanEulerSingularityException36.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException41 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray42 = cardanEulerSingularityException41.getArguments();
        java.lang.Throwable[] throwableArray43 = cardanEulerSingularityException41.getSuppressed();
        java.lang.String str44 = cardanEulerSingularityException41.getPattern();
        cardanEulerSingularityException36.addSuppressed((java.lang.Throwable) cardanEulerSingularityException41);
        java.lang.Object[] objArray46 = cardanEulerSingularityException36.getArguments();
        java.lang.Throwable[] throwableArray47 = cardanEulerSingularityException36.getSuppressed();
        cardanEulerSingularityException18.addSuppressed((java.lang.Throwable) cardanEulerSingularityException36);
        java.lang.Object[] objArray49 = cardanEulerSingularityException18.getArguments();
        java.lang.Throwable[] throwableArray50 = cardanEulerSingularityException18.getSuppressed();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException52 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray53 = cardanEulerSingularityException52.getArguments();
        java.lang.Object[] objArray54 = cardanEulerSingularityException52.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException56 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray57 = cardanEulerSingularityException56.getArguments();
        cardanEulerSingularityException52.addSuppressed((java.lang.Throwable) cardanEulerSingularityException56);
        java.lang.Object[] objArray59 = cardanEulerSingularityException56.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException61 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray62 = cardanEulerSingularityException61.getArguments();
        java.lang.Throwable[] throwableArray63 = cardanEulerSingularityException61.getSuppressed();
        java.lang.String str64 = cardanEulerSingularityException61.getPattern();
        cardanEulerSingularityException56.addSuppressed((java.lang.Throwable) cardanEulerSingularityException61);
        java.lang.Object[] objArray66 = cardanEulerSingularityException56.getArguments();
        java.lang.Object[] objArray67 = cardanEulerSingularityException56.getArguments();
        java.lang.Throwable[] throwableArray68 = cardanEulerSingularityException56.getSuppressed();
        java.lang.String str69 = cardanEulerSingularityException56.getPattern();
        cardanEulerSingularityException18.addSuppressed((java.lang.Throwable) cardanEulerSingularityException56);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException72 = new org.apache.commons.math.geometry.CardanEulerSingularityException(true);
        java.lang.Object[] objArray73 = cardanEulerSingularityException72.getArguments();
        java.lang.Throwable[] throwableArray74 = cardanEulerSingularityException72.getSuppressed();
        java.lang.String str75 = cardanEulerSingularityException72.getPattern();
        java.lang.String str76 = cardanEulerSingularityException72.getPattern();
        java.lang.Throwable[] throwableArray77 = cardanEulerSingularityException72.getSuppressed();
        java.lang.Object[] objArray78 = cardanEulerSingularityException72.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException80 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.String str81 = cardanEulerSingularityException80.getPattern();
        java.lang.Object[] objArray82 = cardanEulerSingularityException80.getArguments();
        java.lang.String str83 = cardanEulerSingularityException80.getPattern();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException85 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.String str86 = cardanEulerSingularityException85.getPattern();
        java.lang.Throwable[] throwableArray87 = cardanEulerSingularityException85.getSuppressed();
        cardanEulerSingularityException80.addSuppressed((java.lang.Throwable) cardanEulerSingularityException85);
        java.lang.String str89 = cardanEulerSingularityException80.getPattern();
        java.lang.String str90 = cardanEulerSingularityException80.getPattern();
        java.lang.Throwable[] throwableArray91 = cardanEulerSingularityException80.getSuppressed();
        cardanEulerSingularityException72.addSuppressed((java.lang.Throwable) cardanEulerSingularityException80);
        java.lang.Throwable[] throwableArray93 = cardanEulerSingularityException80.getSuppressed();
        cardanEulerSingularityException56.addSuppressed((java.lang.Throwable) cardanEulerSingularityException80);
        org.junit.Assert.assertNotNull(objArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray2), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray2), "[]");
        org.junit.Assert.assertNotNull(objArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray3), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray3), "[]");
        org.junit.Assert.assertNotNull(objArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray6), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray6), "[]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Euler angles singularity" + "'", str8, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray11), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray11), "[]");
        org.junit.Assert.assertNotNull(objArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray12), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray12), "[]");
        org.junit.Assert.assertNotNull(objArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray15), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray15), "[]");
        org.junit.Assert.assertNotNull(objArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray19), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray19), "[]");
        org.junit.Assert.assertNotNull(objArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray20), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray20), "[]");
        org.junit.Assert.assertNotNull(throwableArray27);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "Euler angles singularity" + "'", str29, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray33), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray33), "[]");
        org.junit.Assert.assertNotNull(objArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray34), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray34), "[]");
        org.junit.Assert.assertNotNull(objArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray37), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray37), "[]");
        org.junit.Assert.assertNotNull(objArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray39), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray39), "[]");
        org.junit.Assert.assertNotNull(objArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray42), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray42), "[]");
        org.junit.Assert.assertNotNull(throwableArray43);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "Euler angles singularity" + "'", str44, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray46), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray46), "[]");
        org.junit.Assert.assertNotNull(throwableArray47);
        org.junit.Assert.assertNotNull(objArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray49), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray49), "[]");
        org.junit.Assert.assertNotNull(throwableArray50);
        org.junit.Assert.assertNotNull(objArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray53), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray53), "[]");
        org.junit.Assert.assertNotNull(objArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray54), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray54), "[]");
        org.junit.Assert.assertNotNull(objArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray57), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray57), "[]");
        org.junit.Assert.assertNotNull(objArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray59), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray59), "[]");
        org.junit.Assert.assertNotNull(objArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray62), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray62), "[]");
        org.junit.Assert.assertNotNull(throwableArray63);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "Euler angles singularity" + "'", str64, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray66), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray66), "[]");
        org.junit.Assert.assertNotNull(objArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray67), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray67), "[]");
        org.junit.Assert.assertNotNull(throwableArray68);
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "Euler angles singularity" + "'", str69, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray73), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray73), "[]");
        org.junit.Assert.assertNotNull(throwableArray74);
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "Cardan angles singularity" + "'", str75, "Cardan angles singularity");
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "Cardan angles singularity" + "'", str76, "Cardan angles singularity");
        org.junit.Assert.assertNotNull(throwableArray77);
        org.junit.Assert.assertNotNull(objArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray78), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray78), "[]");
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "Euler angles singularity" + "'", str81, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray82), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray82), "[]");
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "Euler angles singularity" + "'", str83, "Euler angles singularity");
        org.junit.Assert.assertEquals("'" + str86 + "' != '" + "Euler angles singularity" + "'", str86, "Euler angles singularity");
        org.junit.Assert.assertNotNull(throwableArray87);
        org.junit.Assert.assertEquals("'" + str89 + "' != '" + "Euler angles singularity" + "'", str89, "Euler angles singularity");
        org.junit.Assert.assertEquals("'" + str90 + "' != '" + "Euler angles singularity" + "'", str90, "Euler angles singularity");
        org.junit.Assert.assertNotNull(throwableArray91);
        org.junit.Assert.assertNotNull(throwableArray93);
    }

    @Test
    public void test1687() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1687");
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException1 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray2 = cardanEulerSingularityException1.getArguments();
        java.lang.String str3 = cardanEulerSingularityException1.getPattern();
        java.lang.Object[] objArray4 = cardanEulerSingularityException1.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException6 = new org.apache.commons.math.geometry.CardanEulerSingularityException(true);
        java.lang.Object[] objArray7 = cardanEulerSingularityException6.getArguments();
        java.lang.Object[] objArray8 = cardanEulerSingularityException6.getArguments();
        cardanEulerSingularityException1.addSuppressed((java.lang.Throwable) cardanEulerSingularityException6);
        java.lang.String str10 = cardanEulerSingularityException1.getPattern();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException12 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray13 = cardanEulerSingularityException12.getArguments();
        java.lang.Object[] objArray14 = cardanEulerSingularityException12.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException16 = new org.apache.commons.math.geometry.CardanEulerSingularityException(true);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException18 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        cardanEulerSingularityException16.addSuppressed((java.lang.Throwable) cardanEulerSingularityException18);
        cardanEulerSingularityException12.addSuppressed((java.lang.Throwable) cardanEulerSingularityException16);
        java.lang.String str21 = cardanEulerSingularityException12.getPattern();
        cardanEulerSingularityException1.addSuppressed((java.lang.Throwable) cardanEulerSingularityException12);
        java.lang.Object[] objArray23 = cardanEulerSingularityException12.getArguments();
        java.lang.Class<?> wildcardClass24 = cardanEulerSingularityException12.getClass();
        org.junit.Assert.assertNotNull(objArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray2), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray2), "[]");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Euler angles singularity" + "'", str3, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray4), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray4), "[]");
        org.junit.Assert.assertNotNull(objArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray7), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray7), "[]");
        org.junit.Assert.assertNotNull(objArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray8), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray8), "[]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Euler angles singularity" + "'", str10, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray13), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray13), "[]");
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "Euler angles singularity" + "'", str21, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray23), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray23), "[]");
        org.junit.Assert.assertNotNull(wildcardClass24);
    }

    @Test
    public void test1688() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1688");
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException1 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray2 = cardanEulerSingularityException1.getArguments();
        java.lang.String str3 = cardanEulerSingularityException1.getPattern();
        java.lang.Object[] objArray4 = cardanEulerSingularityException1.getArguments();
        java.lang.Object[] objArray5 = cardanEulerSingularityException1.getArguments();
        java.lang.String str6 = cardanEulerSingularityException1.getPattern();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException8 = new org.apache.commons.math.geometry.CardanEulerSingularityException(true);
        java.lang.Object[] objArray9 = cardanEulerSingularityException8.getArguments();
        java.lang.Throwable[] throwableArray10 = cardanEulerSingularityException8.getSuppressed();
        java.lang.Throwable[] throwableArray11 = cardanEulerSingularityException8.getSuppressed();
        cardanEulerSingularityException1.addSuppressed((java.lang.Throwable) cardanEulerSingularityException8);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException14 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray15 = cardanEulerSingularityException14.getArguments();
        java.lang.Object[] objArray16 = cardanEulerSingularityException14.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException18 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray19 = cardanEulerSingularityException18.getArguments();
        cardanEulerSingularityException14.addSuppressed((java.lang.Throwable) cardanEulerSingularityException18);
        java.lang.Throwable[] throwableArray21 = cardanEulerSingularityException18.getSuppressed();
        java.lang.Object[] objArray22 = cardanEulerSingularityException18.getArguments();
        cardanEulerSingularityException1.addSuppressed((java.lang.Throwable) cardanEulerSingularityException18);
        java.lang.Throwable[] throwableArray24 = cardanEulerSingularityException18.getSuppressed();
        org.junit.Assert.assertNotNull(objArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray2), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray2), "[]");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Euler angles singularity" + "'", str3, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray4), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray4), "[]");
        org.junit.Assert.assertNotNull(objArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray5), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray5), "[]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "Euler angles singularity" + "'", str6, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray9), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray9), "[]");
        org.junit.Assert.assertNotNull(throwableArray10);
        org.junit.Assert.assertNotNull(throwableArray11);
        org.junit.Assert.assertNotNull(objArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray15), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray15), "[]");
        org.junit.Assert.assertNotNull(objArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray16), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray16), "[]");
        org.junit.Assert.assertNotNull(objArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray19), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray19), "[]");
        org.junit.Assert.assertNotNull(throwableArray21);
        org.junit.Assert.assertNotNull(objArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray22), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray22), "[]");
        org.junit.Assert.assertNotNull(throwableArray24);
    }

    @Test
    public void test1689() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1689");
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException1 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray2 = cardanEulerSingularityException1.getArguments();
        java.lang.Object[] objArray3 = cardanEulerSingularityException1.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException5 = new org.apache.commons.math.geometry.CardanEulerSingularityException(true);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException7 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        cardanEulerSingularityException5.addSuppressed((java.lang.Throwable) cardanEulerSingularityException7);
        cardanEulerSingularityException1.addSuppressed((java.lang.Throwable) cardanEulerSingularityException5);
        java.lang.Throwable[] throwableArray10 = cardanEulerSingularityException1.getSuppressed();
        java.lang.Throwable[] throwableArray11 = cardanEulerSingularityException1.getSuppressed();
        org.junit.Assert.assertNotNull(objArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray2), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray2), "[]");
        org.junit.Assert.assertNotNull(objArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray3), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray3), "[]");
        org.junit.Assert.assertNotNull(throwableArray10);
        org.junit.Assert.assertNotNull(throwableArray11);
    }

    @Test
    public void test1690() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1690");
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException1 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray2 = cardanEulerSingularityException1.getArguments();
        java.lang.Object[] objArray3 = cardanEulerSingularityException1.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException5 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray6 = cardanEulerSingularityException5.getArguments();
        cardanEulerSingularityException1.addSuppressed((java.lang.Throwable) cardanEulerSingularityException5);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException9 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray10 = cardanEulerSingularityException9.getArguments();
        java.lang.Object[] objArray11 = cardanEulerSingularityException9.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException13 = new org.apache.commons.math.geometry.CardanEulerSingularityException(true);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException15 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        cardanEulerSingularityException13.addSuppressed((java.lang.Throwable) cardanEulerSingularityException15);
        cardanEulerSingularityException9.addSuppressed((java.lang.Throwable) cardanEulerSingularityException13);
        java.lang.Throwable[] throwableArray18 = cardanEulerSingularityException9.getSuppressed();
        cardanEulerSingularityException5.addSuppressed((java.lang.Throwable) cardanEulerSingularityException9);
        java.lang.Throwable[] throwableArray20 = cardanEulerSingularityException5.getSuppressed();
        java.lang.String str21 = cardanEulerSingularityException5.getPattern();
        java.lang.Object[] objArray22 = cardanEulerSingularityException5.getArguments();
        java.lang.Object[] objArray23 = cardanEulerSingularityException5.getArguments();
        java.lang.String str24 = cardanEulerSingularityException5.getPattern();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException26 = new org.apache.commons.math.geometry.CardanEulerSingularityException(true);
        java.lang.Object[] objArray27 = cardanEulerSingularityException26.getArguments();
        java.lang.Throwable[] throwableArray28 = cardanEulerSingularityException26.getSuppressed();
        java.lang.String str29 = cardanEulerSingularityException26.getPattern();
        java.lang.String str30 = cardanEulerSingularityException26.getPattern();
        java.lang.Throwable[] throwableArray31 = cardanEulerSingularityException26.getSuppressed();
        java.lang.Object[] objArray32 = cardanEulerSingularityException26.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException34 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.String str35 = cardanEulerSingularityException34.getPattern();
        java.lang.Object[] objArray36 = cardanEulerSingularityException34.getArguments();
        java.lang.String str37 = cardanEulerSingularityException34.getPattern();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException39 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.String str40 = cardanEulerSingularityException39.getPattern();
        java.lang.Throwable[] throwableArray41 = cardanEulerSingularityException39.getSuppressed();
        cardanEulerSingularityException34.addSuppressed((java.lang.Throwable) cardanEulerSingularityException39);
        java.lang.String str43 = cardanEulerSingularityException34.getPattern();
        java.lang.String str44 = cardanEulerSingularityException34.getPattern();
        java.lang.Throwable[] throwableArray45 = cardanEulerSingularityException34.getSuppressed();
        cardanEulerSingularityException26.addSuppressed((java.lang.Throwable) cardanEulerSingularityException34);
        cardanEulerSingularityException5.addSuppressed((java.lang.Throwable) cardanEulerSingularityException34);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException49 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.String str50 = cardanEulerSingularityException49.getPattern();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException52 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.String str53 = cardanEulerSingularityException52.getPattern();
        java.lang.Throwable[] throwableArray54 = cardanEulerSingularityException52.getSuppressed();
        cardanEulerSingularityException49.addSuppressed((java.lang.Throwable) cardanEulerSingularityException52);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException57 = new org.apache.commons.math.geometry.CardanEulerSingularityException(true);
        java.lang.String str58 = cardanEulerSingularityException57.getPattern();
        cardanEulerSingularityException49.addSuppressed((java.lang.Throwable) cardanEulerSingularityException57);
        java.lang.String str60 = cardanEulerSingularityException49.getPattern();
        java.lang.Throwable[] throwableArray61 = cardanEulerSingularityException49.getSuppressed();
        java.lang.Throwable[] throwableArray62 = cardanEulerSingularityException49.getSuppressed();
        cardanEulerSingularityException34.addSuppressed((java.lang.Throwable) cardanEulerSingularityException49);
        java.lang.String str64 = cardanEulerSingularityException49.getPattern();
        org.junit.Assert.assertNotNull(objArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray2), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray2), "[]");
        org.junit.Assert.assertNotNull(objArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray3), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray3), "[]");
        org.junit.Assert.assertNotNull(objArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray6), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray6), "[]");
        org.junit.Assert.assertNotNull(objArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray10), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray10), "[]");
        org.junit.Assert.assertNotNull(objArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray11), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray11), "[]");
        org.junit.Assert.assertNotNull(throwableArray18);
        org.junit.Assert.assertNotNull(throwableArray20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "Euler angles singularity" + "'", str21, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray22), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray22), "[]");
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray23), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray23), "[]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "Euler angles singularity" + "'", str24, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray27), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray27), "[]");
        org.junit.Assert.assertNotNull(throwableArray28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "Cardan angles singularity" + "'", str29, "Cardan angles singularity");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "Cardan angles singularity" + "'", str30, "Cardan angles singularity");
        org.junit.Assert.assertNotNull(throwableArray31);
        org.junit.Assert.assertNotNull(objArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray32), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray32), "[]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "Euler angles singularity" + "'", str35, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray36), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray36), "[]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "Euler angles singularity" + "'", str37, "Euler angles singularity");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "Euler angles singularity" + "'", str40, "Euler angles singularity");
        org.junit.Assert.assertNotNull(throwableArray41);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "Euler angles singularity" + "'", str43, "Euler angles singularity");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "Euler angles singularity" + "'", str44, "Euler angles singularity");
        org.junit.Assert.assertNotNull(throwableArray45);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "Euler angles singularity" + "'", str50, "Euler angles singularity");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "Euler angles singularity" + "'", str53, "Euler angles singularity");
        org.junit.Assert.assertNotNull(throwableArray54);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "Cardan angles singularity" + "'", str58, "Cardan angles singularity");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "Euler angles singularity" + "'", str60, "Euler angles singularity");
        org.junit.Assert.assertNotNull(throwableArray61);
        org.junit.Assert.assertNotNull(throwableArray62);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "Euler angles singularity" + "'", str64, "Euler angles singularity");
    }

    @Test
    public void test1691() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1691");
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException1 = new org.apache.commons.math.geometry.CardanEulerSingularityException(true);
        java.lang.Object[] objArray2 = cardanEulerSingularityException1.getArguments();
        java.lang.Throwable[] throwableArray3 = cardanEulerSingularityException1.getSuppressed();
        java.lang.Throwable[] throwableArray4 = cardanEulerSingularityException1.getSuppressed();
        java.lang.Throwable[] throwableArray5 = cardanEulerSingularityException1.getSuppressed();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException7 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray8 = cardanEulerSingularityException7.getArguments();
        java.lang.Object[] objArray9 = cardanEulerSingularityException7.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException11 = new org.apache.commons.math.geometry.CardanEulerSingularityException(true);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException13 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        cardanEulerSingularityException11.addSuppressed((java.lang.Throwable) cardanEulerSingularityException13);
        cardanEulerSingularityException7.addSuppressed((java.lang.Throwable) cardanEulerSingularityException11);
        cardanEulerSingularityException1.addSuppressed((java.lang.Throwable) cardanEulerSingularityException7);
        java.lang.Throwable[] throwableArray17 = cardanEulerSingularityException1.getSuppressed();
        java.lang.Throwable[] throwableArray18 = cardanEulerSingularityException1.getSuppressed();
        java.lang.String str19 = cardanEulerSingularityException1.toString();
        org.junit.Assert.assertNotNull(objArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray2), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray2), "[]");
        org.junit.Assert.assertNotNull(throwableArray3);
        org.junit.Assert.assertNotNull(throwableArray4);
        org.junit.Assert.assertNotNull(throwableArray5);
        org.junit.Assert.assertNotNull(objArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray8), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray8), "[]");
        org.junit.Assert.assertNotNull(objArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray9), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray9), "[]");
        org.junit.Assert.assertNotNull(throwableArray17);
        org.junit.Assert.assertNotNull(throwableArray18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "org.apache.commons.math.geometry.CardanEulerSingularityException: Cardan angles singularity" + "'", str19, "org.apache.commons.math.geometry.CardanEulerSingularityException: Cardan angles singularity");
    }

    @Test
    public void test1692() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1692");
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException1 = new org.apache.commons.math.geometry.CardanEulerSingularityException(true);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException3 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        cardanEulerSingularityException1.addSuppressed((java.lang.Throwable) cardanEulerSingularityException3);
        java.lang.String str5 = cardanEulerSingularityException3.getPattern();
        java.lang.Object[] objArray6 = cardanEulerSingularityException3.getArguments();
        java.lang.Object[] objArray7 = cardanEulerSingularityException3.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException9 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray10 = cardanEulerSingularityException9.getArguments();
        java.lang.String str11 = cardanEulerSingularityException9.getPattern();
        java.lang.Object[] objArray12 = cardanEulerSingularityException9.getArguments();
        java.lang.Object[] objArray13 = cardanEulerSingularityException9.getArguments();
        java.lang.String str14 = cardanEulerSingularityException9.getPattern();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException16 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        cardanEulerSingularityException9.addSuppressed((java.lang.Throwable) cardanEulerSingularityException16);
        cardanEulerSingularityException3.addSuppressed((java.lang.Throwable) cardanEulerSingularityException16);
        java.lang.Object[] objArray19 = cardanEulerSingularityException3.getArguments();
        java.lang.Throwable[] throwableArray20 = cardanEulerSingularityException3.getSuppressed();
        java.lang.String str21 = cardanEulerSingularityException3.getPattern();
        java.lang.Class<?> wildcardClass22 = cardanEulerSingularityException3.getClass();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Euler angles singularity" + "'", str5, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray6), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray6), "[]");
        org.junit.Assert.assertNotNull(objArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray7), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray7), "[]");
        org.junit.Assert.assertNotNull(objArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray10), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray10), "[]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Euler angles singularity" + "'", str11, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray12), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray12), "[]");
        org.junit.Assert.assertNotNull(objArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray13), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray13), "[]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "Euler angles singularity" + "'", str14, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray19), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray19), "[]");
        org.junit.Assert.assertNotNull(throwableArray20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "Euler angles singularity" + "'", str21, "Euler angles singularity");
        org.junit.Assert.assertNotNull(wildcardClass22);
    }

    @Test
    public void test1693() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1693");
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException1 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray2 = cardanEulerSingularityException1.getArguments();
        java.lang.Object[] objArray3 = cardanEulerSingularityException1.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException5 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray6 = cardanEulerSingularityException5.getArguments();
        cardanEulerSingularityException1.addSuppressed((java.lang.Throwable) cardanEulerSingularityException5);
        java.lang.Object[] objArray8 = cardanEulerSingularityException5.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException10 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray11 = cardanEulerSingularityException10.getArguments();
        java.lang.Throwable[] throwableArray12 = cardanEulerSingularityException10.getSuppressed();
        java.lang.String str13 = cardanEulerSingularityException10.getPattern();
        cardanEulerSingularityException5.addSuppressed((java.lang.Throwable) cardanEulerSingularityException10);
        java.lang.Object[] objArray15 = cardanEulerSingularityException10.getArguments();
        java.lang.String str16 = cardanEulerSingularityException10.getPattern();
        java.lang.Object[] objArray17 = cardanEulerSingularityException10.getArguments();
        java.lang.Throwable[] throwableArray18 = cardanEulerSingularityException10.getSuppressed();
        org.junit.Assert.assertNotNull(objArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray2), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray2), "[]");
        org.junit.Assert.assertNotNull(objArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray3), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray3), "[]");
        org.junit.Assert.assertNotNull(objArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray6), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray6), "[]");
        org.junit.Assert.assertNotNull(objArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray8), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray8), "[]");
        org.junit.Assert.assertNotNull(objArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray11), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray11), "[]");
        org.junit.Assert.assertNotNull(throwableArray12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Euler angles singularity" + "'", str13, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray15), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray15), "[]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "Euler angles singularity" + "'", str16, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray17), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray17), "[]");
        org.junit.Assert.assertNotNull(throwableArray18);
    }

    @Test
    public void test1694() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1694");
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException1 = new org.apache.commons.math.geometry.CardanEulerSingularityException(true);
        java.lang.Object[] objArray2 = cardanEulerSingularityException1.getArguments();
        java.lang.Throwable[] throwableArray3 = cardanEulerSingularityException1.getSuppressed();
        java.lang.Throwable[] throwableArray4 = cardanEulerSingularityException1.getSuppressed();
        java.lang.Throwable[] throwableArray5 = cardanEulerSingularityException1.getSuppressed();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException7 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray8 = cardanEulerSingularityException7.getArguments();
        java.lang.Object[] objArray9 = cardanEulerSingularityException7.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException11 = new org.apache.commons.math.geometry.CardanEulerSingularityException(true);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException13 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        cardanEulerSingularityException11.addSuppressed((java.lang.Throwable) cardanEulerSingularityException13);
        cardanEulerSingularityException7.addSuppressed((java.lang.Throwable) cardanEulerSingularityException11);
        cardanEulerSingularityException1.addSuppressed((java.lang.Throwable) cardanEulerSingularityException7);
        java.lang.Throwable[] throwableArray17 = cardanEulerSingularityException7.getSuppressed();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException19 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray20 = cardanEulerSingularityException19.getArguments();
        java.lang.Object[] objArray21 = cardanEulerSingularityException19.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException23 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray24 = cardanEulerSingularityException23.getArguments();
        cardanEulerSingularityException19.addSuppressed((java.lang.Throwable) cardanEulerSingularityException23);
        java.lang.Object[] objArray26 = cardanEulerSingularityException23.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException28 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray29 = cardanEulerSingularityException28.getArguments();
        java.lang.Throwable[] throwableArray30 = cardanEulerSingularityException28.getSuppressed();
        java.lang.String str31 = cardanEulerSingularityException28.getPattern();
        cardanEulerSingularityException23.addSuppressed((java.lang.Throwable) cardanEulerSingularityException28);
        java.lang.Object[] objArray33 = cardanEulerSingularityException23.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException35 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.String str36 = cardanEulerSingularityException35.getPattern();
        java.lang.Object[] objArray37 = cardanEulerSingularityException35.getArguments();
        java.lang.String str38 = cardanEulerSingularityException35.getPattern();
        cardanEulerSingularityException23.addSuppressed((java.lang.Throwable) cardanEulerSingularityException35);
        java.lang.Object[] objArray40 = cardanEulerSingularityException23.getArguments();
        java.lang.Object[] objArray41 = cardanEulerSingularityException23.getArguments();
        java.lang.String str42 = cardanEulerSingularityException23.getPattern();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException44 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray45 = cardanEulerSingularityException44.getArguments();
        java.lang.Object[] objArray46 = cardanEulerSingularityException44.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException48 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray49 = cardanEulerSingularityException48.getArguments();
        cardanEulerSingularityException44.addSuppressed((java.lang.Throwable) cardanEulerSingularityException48);
        java.lang.Object[] objArray51 = cardanEulerSingularityException48.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException53 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray54 = cardanEulerSingularityException53.getArguments();
        java.lang.Throwable[] throwableArray55 = cardanEulerSingularityException53.getSuppressed();
        java.lang.String str56 = cardanEulerSingularityException53.getPattern();
        cardanEulerSingularityException48.addSuppressed((java.lang.Throwable) cardanEulerSingularityException53);
        java.lang.Object[] objArray58 = cardanEulerSingularityException48.getArguments();
        java.lang.Throwable[] throwableArray59 = cardanEulerSingularityException48.getSuppressed();
        java.lang.Object[] objArray60 = cardanEulerSingularityException48.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException62 = new org.apache.commons.math.geometry.CardanEulerSingularityException(true);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException64 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        cardanEulerSingularityException62.addSuppressed((java.lang.Throwable) cardanEulerSingularityException64);
        java.lang.Throwable[] throwableArray66 = cardanEulerSingularityException62.getSuppressed();
        cardanEulerSingularityException48.addSuppressed((java.lang.Throwable) cardanEulerSingularityException62);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException69 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray70 = cardanEulerSingularityException69.getArguments();
        java.lang.Object[] objArray71 = cardanEulerSingularityException69.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException73 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray74 = cardanEulerSingularityException73.getArguments();
        cardanEulerSingularityException69.addSuppressed((java.lang.Throwable) cardanEulerSingularityException73);
        java.lang.Throwable[] throwableArray76 = cardanEulerSingularityException73.getSuppressed();
        java.lang.Object[] objArray77 = cardanEulerSingularityException73.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException79 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray80 = cardanEulerSingularityException79.getArguments();
        java.lang.Object[] objArray81 = cardanEulerSingularityException79.getArguments();
        java.lang.Object[] objArray82 = cardanEulerSingularityException79.getArguments();
        cardanEulerSingularityException73.addSuppressed((java.lang.Throwable) cardanEulerSingularityException79);
        cardanEulerSingularityException62.addSuppressed((java.lang.Throwable) cardanEulerSingularityException79);
        cardanEulerSingularityException23.addSuppressed((java.lang.Throwable) cardanEulerSingularityException79);
        java.lang.String str86 = cardanEulerSingularityException23.getPattern();
        java.lang.String str87 = cardanEulerSingularityException23.getPattern();
        cardanEulerSingularityException7.addSuppressed((java.lang.Throwable) cardanEulerSingularityException23);
        java.lang.Throwable[] throwableArray89 = cardanEulerSingularityException7.getSuppressed();
        org.junit.Assert.assertNotNull(objArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray2), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray2), "[]");
        org.junit.Assert.assertNotNull(throwableArray3);
        org.junit.Assert.assertNotNull(throwableArray4);
        org.junit.Assert.assertNotNull(throwableArray5);
        org.junit.Assert.assertNotNull(objArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray8), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray8), "[]");
        org.junit.Assert.assertNotNull(objArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray9), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray9), "[]");
        org.junit.Assert.assertNotNull(throwableArray17);
        org.junit.Assert.assertNotNull(objArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray20), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray20), "[]");
        org.junit.Assert.assertNotNull(objArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray21), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray21), "[]");
        org.junit.Assert.assertNotNull(objArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray24), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray24), "[]");
        org.junit.Assert.assertNotNull(objArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray26), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray26), "[]");
        org.junit.Assert.assertNotNull(objArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray29), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray29), "[]");
        org.junit.Assert.assertNotNull(throwableArray30);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "Euler angles singularity" + "'", str31, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray33), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray33), "[]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "Euler angles singularity" + "'", str36, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray37), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray37), "[]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "Euler angles singularity" + "'", str38, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray40), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray40), "[]");
        org.junit.Assert.assertNotNull(objArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray41), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray41), "[]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "Euler angles singularity" + "'", str42, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray45), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray45), "[]");
        org.junit.Assert.assertNotNull(objArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray46), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray46), "[]");
        org.junit.Assert.assertNotNull(objArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray49), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray49), "[]");
        org.junit.Assert.assertNotNull(objArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray51), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray51), "[]");
        org.junit.Assert.assertNotNull(objArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray54), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray54), "[]");
        org.junit.Assert.assertNotNull(throwableArray55);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "Euler angles singularity" + "'", str56, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray58), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray58), "[]");
        org.junit.Assert.assertNotNull(throwableArray59);
        org.junit.Assert.assertNotNull(objArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray60), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray60), "[]");
        org.junit.Assert.assertNotNull(throwableArray66);
        org.junit.Assert.assertNotNull(objArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray70), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray70), "[]");
        org.junit.Assert.assertNotNull(objArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray71), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray71), "[]");
        org.junit.Assert.assertNotNull(objArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray74), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray74), "[]");
        org.junit.Assert.assertNotNull(throwableArray76);
        org.junit.Assert.assertNotNull(objArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray77), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray77), "[]");
        org.junit.Assert.assertNotNull(objArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray80), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray80), "[]");
        org.junit.Assert.assertNotNull(objArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray81), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray81), "[]");
        org.junit.Assert.assertNotNull(objArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray82), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray82), "[]");
        org.junit.Assert.assertEquals("'" + str86 + "' != '" + "Euler angles singularity" + "'", str86, "Euler angles singularity");
        org.junit.Assert.assertEquals("'" + str87 + "' != '" + "Euler angles singularity" + "'", str87, "Euler angles singularity");
        org.junit.Assert.assertNotNull(throwableArray89);
    }

    @Test
    public void test1695() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1695");
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException1 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray2 = cardanEulerSingularityException1.getArguments();
        java.lang.Object[] objArray3 = cardanEulerSingularityException1.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException5 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray6 = cardanEulerSingularityException5.getArguments();
        cardanEulerSingularityException1.addSuppressed((java.lang.Throwable) cardanEulerSingularityException5);
        java.lang.String str8 = cardanEulerSingularityException1.getPattern();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException10 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray11 = cardanEulerSingularityException10.getArguments();
        java.lang.Object[] objArray12 = cardanEulerSingularityException10.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException14 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray15 = cardanEulerSingularityException14.getArguments();
        cardanEulerSingularityException10.addSuppressed((java.lang.Throwable) cardanEulerSingularityException14);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException18 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray19 = cardanEulerSingularityException18.getArguments();
        java.lang.Object[] objArray20 = cardanEulerSingularityException18.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException22 = new org.apache.commons.math.geometry.CardanEulerSingularityException(true);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException24 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        cardanEulerSingularityException22.addSuppressed((java.lang.Throwable) cardanEulerSingularityException24);
        cardanEulerSingularityException18.addSuppressed((java.lang.Throwable) cardanEulerSingularityException22);
        java.lang.Throwable[] throwableArray27 = cardanEulerSingularityException18.getSuppressed();
        cardanEulerSingularityException14.addSuppressed((java.lang.Throwable) cardanEulerSingularityException18);
        java.lang.String str29 = cardanEulerSingularityException18.getPattern();
        cardanEulerSingularityException1.addSuppressed((java.lang.Throwable) cardanEulerSingularityException18);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException32 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray33 = cardanEulerSingularityException32.getArguments();
        java.lang.Object[] objArray34 = cardanEulerSingularityException32.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException36 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray37 = cardanEulerSingularityException36.getArguments();
        cardanEulerSingularityException32.addSuppressed((java.lang.Throwable) cardanEulerSingularityException36);
        java.lang.Object[] objArray39 = cardanEulerSingularityException36.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException41 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray42 = cardanEulerSingularityException41.getArguments();
        java.lang.Throwable[] throwableArray43 = cardanEulerSingularityException41.getSuppressed();
        java.lang.String str44 = cardanEulerSingularityException41.getPattern();
        cardanEulerSingularityException36.addSuppressed((java.lang.Throwable) cardanEulerSingularityException41);
        java.lang.Object[] objArray46 = cardanEulerSingularityException36.getArguments();
        java.lang.Throwable[] throwableArray47 = cardanEulerSingularityException36.getSuppressed();
        cardanEulerSingularityException18.addSuppressed((java.lang.Throwable) cardanEulerSingularityException36);
        java.lang.Throwable[] throwableArray49 = cardanEulerSingularityException36.getSuppressed();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException51 = new org.apache.commons.math.geometry.CardanEulerSingularityException(true);
        java.lang.Object[] objArray52 = cardanEulerSingularityException51.getArguments();
        java.lang.Object[] objArray53 = cardanEulerSingularityException51.getArguments();
        java.lang.String str54 = cardanEulerSingularityException51.getPattern();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException56 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray57 = cardanEulerSingularityException56.getArguments();
        java.lang.Object[] objArray58 = cardanEulerSingularityException56.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException60 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray61 = cardanEulerSingularityException60.getArguments();
        cardanEulerSingularityException56.addSuppressed((java.lang.Throwable) cardanEulerSingularityException60);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException64 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray65 = cardanEulerSingularityException64.getArguments();
        java.lang.Object[] objArray66 = cardanEulerSingularityException64.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException68 = new org.apache.commons.math.geometry.CardanEulerSingularityException(true);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException70 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        cardanEulerSingularityException68.addSuppressed((java.lang.Throwable) cardanEulerSingularityException70);
        cardanEulerSingularityException64.addSuppressed((java.lang.Throwable) cardanEulerSingularityException68);
        java.lang.Throwable[] throwableArray73 = cardanEulerSingularityException64.getSuppressed();
        cardanEulerSingularityException60.addSuppressed((java.lang.Throwable) cardanEulerSingularityException64);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException76 = new org.apache.commons.math.geometry.CardanEulerSingularityException(true);
        java.lang.Object[] objArray77 = cardanEulerSingularityException76.getArguments();
        java.lang.Object[] objArray78 = cardanEulerSingularityException76.getArguments();
        cardanEulerSingularityException64.addSuppressed((java.lang.Throwable) cardanEulerSingularityException76);
        cardanEulerSingularityException51.addSuppressed((java.lang.Throwable) cardanEulerSingularityException64);
        java.lang.Throwable[] throwableArray81 = cardanEulerSingularityException64.getSuppressed();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException83 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray84 = cardanEulerSingularityException83.getArguments();
        java.lang.String str85 = cardanEulerSingularityException83.getPattern();
        java.lang.Object[] objArray86 = cardanEulerSingularityException83.getArguments();
        java.lang.Object[] objArray87 = cardanEulerSingularityException83.getArguments();
        java.lang.String str88 = cardanEulerSingularityException83.getPattern();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException90 = new org.apache.commons.math.geometry.CardanEulerSingularityException(true);
        java.lang.Object[] objArray91 = cardanEulerSingularityException90.getArguments();
        java.lang.Throwable[] throwableArray92 = cardanEulerSingularityException90.getSuppressed();
        java.lang.Throwable[] throwableArray93 = cardanEulerSingularityException90.getSuppressed();
        cardanEulerSingularityException83.addSuppressed((java.lang.Throwable) cardanEulerSingularityException90);
        java.lang.Object[] objArray95 = cardanEulerSingularityException83.getArguments();
        java.lang.String str96 = cardanEulerSingularityException83.getPattern();
        cardanEulerSingularityException64.addSuppressed((java.lang.Throwable) cardanEulerSingularityException83);
        cardanEulerSingularityException36.addSuppressed((java.lang.Throwable) cardanEulerSingularityException83);
        java.lang.Object[] objArray99 = cardanEulerSingularityException83.getArguments();
        org.junit.Assert.assertNotNull(objArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray2), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray2), "[]");
        org.junit.Assert.assertNotNull(objArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray3), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray3), "[]");
        org.junit.Assert.assertNotNull(objArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray6), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray6), "[]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Euler angles singularity" + "'", str8, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray11), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray11), "[]");
        org.junit.Assert.assertNotNull(objArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray12), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray12), "[]");
        org.junit.Assert.assertNotNull(objArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray15), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray15), "[]");
        org.junit.Assert.assertNotNull(objArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray19), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray19), "[]");
        org.junit.Assert.assertNotNull(objArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray20), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray20), "[]");
        org.junit.Assert.assertNotNull(throwableArray27);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "Euler angles singularity" + "'", str29, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray33), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray33), "[]");
        org.junit.Assert.assertNotNull(objArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray34), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray34), "[]");
        org.junit.Assert.assertNotNull(objArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray37), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray37), "[]");
        org.junit.Assert.assertNotNull(objArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray39), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray39), "[]");
        org.junit.Assert.assertNotNull(objArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray42), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray42), "[]");
        org.junit.Assert.assertNotNull(throwableArray43);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "Euler angles singularity" + "'", str44, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray46), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray46), "[]");
        org.junit.Assert.assertNotNull(throwableArray47);
        org.junit.Assert.assertNotNull(throwableArray49);
        org.junit.Assert.assertNotNull(objArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray52), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray52), "[]");
        org.junit.Assert.assertNotNull(objArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray53), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray53), "[]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "Cardan angles singularity" + "'", str54, "Cardan angles singularity");
        org.junit.Assert.assertNotNull(objArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray57), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray57), "[]");
        org.junit.Assert.assertNotNull(objArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray58), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray58), "[]");
        org.junit.Assert.assertNotNull(objArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray61), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray61), "[]");
        org.junit.Assert.assertNotNull(objArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray65), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray65), "[]");
        org.junit.Assert.assertNotNull(objArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray66), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray66), "[]");
        org.junit.Assert.assertNotNull(throwableArray73);
        org.junit.Assert.assertNotNull(objArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray77), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray77), "[]");
        org.junit.Assert.assertNotNull(objArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray78), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray78), "[]");
        org.junit.Assert.assertNotNull(throwableArray81);
        org.junit.Assert.assertNotNull(objArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray84), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray84), "[]");
        org.junit.Assert.assertEquals("'" + str85 + "' != '" + "Euler angles singularity" + "'", str85, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray86), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray86), "[]");
        org.junit.Assert.assertNotNull(objArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray87), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray87), "[]");
        org.junit.Assert.assertEquals("'" + str88 + "' != '" + "Euler angles singularity" + "'", str88, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray91), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray91), "[]");
        org.junit.Assert.assertNotNull(throwableArray92);
        org.junit.Assert.assertNotNull(throwableArray93);
        org.junit.Assert.assertNotNull(objArray95);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray95), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray95), "[]");
        org.junit.Assert.assertEquals("'" + str96 + "' != '" + "Euler angles singularity" + "'", str96, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray99);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray99), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray99), "[]");
    }

    @Test
    public void test1696() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1696");
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException1 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray2 = cardanEulerSingularityException1.getArguments();
        java.lang.String str3 = cardanEulerSingularityException1.getPattern();
        java.lang.Object[] objArray4 = cardanEulerSingularityException1.getArguments();
        java.lang.Object[] objArray5 = cardanEulerSingularityException1.getArguments();
        java.lang.String str6 = cardanEulerSingularityException1.getPattern();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException8 = new org.apache.commons.math.geometry.CardanEulerSingularityException(true);
        java.lang.Object[] objArray9 = cardanEulerSingularityException8.getArguments();
        java.lang.Throwable[] throwableArray10 = cardanEulerSingularityException8.getSuppressed();
        java.lang.Throwable[] throwableArray11 = cardanEulerSingularityException8.getSuppressed();
        cardanEulerSingularityException1.addSuppressed((java.lang.Throwable) cardanEulerSingularityException8);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException14 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray15 = cardanEulerSingularityException14.getArguments();
        java.lang.Object[] objArray16 = cardanEulerSingularityException14.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException18 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray19 = cardanEulerSingularityException18.getArguments();
        cardanEulerSingularityException14.addSuppressed((java.lang.Throwable) cardanEulerSingularityException18);
        java.lang.Throwable[] throwableArray21 = cardanEulerSingularityException18.getSuppressed();
        java.lang.Object[] objArray22 = cardanEulerSingularityException18.getArguments();
        cardanEulerSingularityException1.addSuppressed((java.lang.Throwable) cardanEulerSingularityException18);
        java.lang.String str24 = cardanEulerSingularityException18.getPattern();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException26 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray27 = cardanEulerSingularityException26.getArguments();
        java.lang.String str28 = cardanEulerSingularityException26.getPattern();
        java.lang.Object[] objArray29 = cardanEulerSingularityException26.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException31 = new org.apache.commons.math.geometry.CardanEulerSingularityException(true);
        java.lang.Object[] objArray32 = cardanEulerSingularityException31.getArguments();
        java.lang.Object[] objArray33 = cardanEulerSingularityException31.getArguments();
        java.lang.String str34 = cardanEulerSingularityException31.getPattern();
        java.lang.String str35 = cardanEulerSingularityException31.getPattern();
        cardanEulerSingularityException26.addSuppressed((java.lang.Throwable) cardanEulerSingularityException31);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException38 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray39 = cardanEulerSingularityException38.getArguments();
        java.lang.String str40 = cardanEulerSingularityException38.getPattern();
        java.lang.Object[] objArray41 = cardanEulerSingularityException38.getArguments();
        java.lang.Object[] objArray42 = cardanEulerSingularityException38.getArguments();
        java.lang.String str43 = cardanEulerSingularityException38.getPattern();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException45 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        cardanEulerSingularityException38.addSuppressed((java.lang.Throwable) cardanEulerSingularityException45);
        java.lang.String str47 = cardanEulerSingularityException38.getPattern();
        java.lang.String str48 = cardanEulerSingularityException38.getPattern();
        cardanEulerSingularityException26.addSuppressed((java.lang.Throwable) cardanEulerSingularityException38);
        java.lang.Throwable[] throwableArray50 = cardanEulerSingularityException26.getSuppressed();
        java.lang.String str51 = cardanEulerSingularityException26.getPattern();
        cardanEulerSingularityException18.addSuppressed((java.lang.Throwable) cardanEulerSingularityException26);
        java.lang.Throwable[] throwableArray53 = cardanEulerSingularityException26.getSuppressed();
        java.lang.Object[] objArray54 = cardanEulerSingularityException26.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException56 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.String str57 = cardanEulerSingularityException56.getPattern();
        java.lang.Object[] objArray58 = cardanEulerSingularityException56.getArguments();
        java.lang.String str59 = cardanEulerSingularityException56.getPattern();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException61 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.String str62 = cardanEulerSingularityException61.getPattern();
        java.lang.Throwable[] throwableArray63 = cardanEulerSingularityException61.getSuppressed();
        cardanEulerSingularityException56.addSuppressed((java.lang.Throwable) cardanEulerSingularityException61);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException66 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.String str67 = cardanEulerSingularityException66.getPattern();
        java.lang.Object[] objArray68 = cardanEulerSingularityException66.getArguments();
        java.lang.String str69 = cardanEulerSingularityException66.getPattern();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException71 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.String str72 = cardanEulerSingularityException71.getPattern();
        java.lang.Throwable[] throwableArray73 = cardanEulerSingularityException71.getSuppressed();
        cardanEulerSingularityException66.addSuppressed((java.lang.Throwable) cardanEulerSingularityException71);
        cardanEulerSingularityException56.addSuppressed((java.lang.Throwable) cardanEulerSingularityException66);
        java.lang.String str76 = cardanEulerSingularityException56.getPattern();
        java.lang.String str77 = cardanEulerSingularityException56.getPattern();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException79 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray80 = cardanEulerSingularityException79.getArguments();
        java.lang.String str81 = cardanEulerSingularityException79.getPattern();
        java.lang.Object[] objArray82 = cardanEulerSingularityException79.getArguments();
        java.lang.Object[] objArray83 = cardanEulerSingularityException79.getArguments();
        java.lang.String str84 = cardanEulerSingularityException79.getPattern();
        cardanEulerSingularityException56.addSuppressed((java.lang.Throwable) cardanEulerSingularityException79);
        java.lang.Throwable[] throwableArray86 = cardanEulerSingularityException56.getSuppressed();
        cardanEulerSingularityException26.addSuppressed((java.lang.Throwable) cardanEulerSingularityException56);
        java.lang.Throwable[] throwableArray88 = cardanEulerSingularityException56.getSuppressed();
        org.junit.Assert.assertNotNull(objArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray2), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray2), "[]");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Euler angles singularity" + "'", str3, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray4), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray4), "[]");
        org.junit.Assert.assertNotNull(objArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray5), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray5), "[]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "Euler angles singularity" + "'", str6, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray9), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray9), "[]");
        org.junit.Assert.assertNotNull(throwableArray10);
        org.junit.Assert.assertNotNull(throwableArray11);
        org.junit.Assert.assertNotNull(objArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray15), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray15), "[]");
        org.junit.Assert.assertNotNull(objArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray16), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray16), "[]");
        org.junit.Assert.assertNotNull(objArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray19), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray19), "[]");
        org.junit.Assert.assertNotNull(throwableArray21);
        org.junit.Assert.assertNotNull(objArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray22), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray22), "[]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "Euler angles singularity" + "'", str24, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray27), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray27), "[]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "Euler angles singularity" + "'", str28, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray29), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray29), "[]");
        org.junit.Assert.assertNotNull(objArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray32), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray32), "[]");
        org.junit.Assert.assertNotNull(objArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray33), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray33), "[]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "Cardan angles singularity" + "'", str34, "Cardan angles singularity");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "Cardan angles singularity" + "'", str35, "Cardan angles singularity");
        org.junit.Assert.assertNotNull(objArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray39), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray39), "[]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "Euler angles singularity" + "'", str40, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray41), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray41), "[]");
        org.junit.Assert.assertNotNull(objArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray42), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray42), "[]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "Euler angles singularity" + "'", str43, "Euler angles singularity");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "Euler angles singularity" + "'", str47, "Euler angles singularity");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "Euler angles singularity" + "'", str48, "Euler angles singularity");
        org.junit.Assert.assertNotNull(throwableArray50);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "Euler angles singularity" + "'", str51, "Euler angles singularity");
        org.junit.Assert.assertNotNull(throwableArray53);
        org.junit.Assert.assertNotNull(objArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray54), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray54), "[]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "Euler angles singularity" + "'", str57, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray58), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray58), "[]");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "Euler angles singularity" + "'", str59, "Euler angles singularity");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "Euler angles singularity" + "'", str62, "Euler angles singularity");
        org.junit.Assert.assertNotNull(throwableArray63);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "Euler angles singularity" + "'", str67, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray68), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray68), "[]");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "Euler angles singularity" + "'", str69, "Euler angles singularity");
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "Euler angles singularity" + "'", str72, "Euler angles singularity");
        org.junit.Assert.assertNotNull(throwableArray73);
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "Euler angles singularity" + "'", str76, "Euler angles singularity");
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "Euler angles singularity" + "'", str77, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray80), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray80), "[]");
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "Euler angles singularity" + "'", str81, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray82), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray82), "[]");
        org.junit.Assert.assertNotNull(objArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray83), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray83), "[]");
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "Euler angles singularity" + "'", str84, "Euler angles singularity");
        org.junit.Assert.assertNotNull(throwableArray86);
        org.junit.Assert.assertNotNull(throwableArray88);
    }

    @Test
    public void test1697() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1697");
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException1 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray2 = cardanEulerSingularityException1.getArguments();
        java.lang.Object[] objArray3 = cardanEulerSingularityException1.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException5 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray6 = cardanEulerSingularityException5.getArguments();
        cardanEulerSingularityException1.addSuppressed((java.lang.Throwable) cardanEulerSingularityException5);
        java.lang.Throwable[] throwableArray8 = cardanEulerSingularityException5.getSuppressed();
        java.lang.Object[] objArray9 = cardanEulerSingularityException5.getArguments();
        java.lang.Throwable[] throwableArray10 = cardanEulerSingularityException5.getSuppressed();
        java.lang.String str11 = cardanEulerSingularityException5.getPattern();
        java.lang.String str12 = cardanEulerSingularityException5.getPattern();
        org.junit.Assert.assertNotNull(objArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray2), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray2), "[]");
        org.junit.Assert.assertNotNull(objArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray3), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray3), "[]");
        org.junit.Assert.assertNotNull(objArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray6), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray6), "[]");
        org.junit.Assert.assertNotNull(throwableArray8);
        org.junit.Assert.assertNotNull(objArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray9), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray9), "[]");
        org.junit.Assert.assertNotNull(throwableArray10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Euler angles singularity" + "'", str11, "Euler angles singularity");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Euler angles singularity" + "'", str12, "Euler angles singularity");
    }

    @Test
    public void test1698() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1698");
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException1 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray2 = cardanEulerSingularityException1.getArguments();
        java.lang.String str3 = cardanEulerSingularityException1.getPattern();
        java.lang.Object[] objArray4 = cardanEulerSingularityException1.getArguments();
        java.lang.Object[] objArray5 = cardanEulerSingularityException1.getArguments();
        java.lang.String str6 = cardanEulerSingularityException1.getPattern();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException8 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        cardanEulerSingularityException1.addSuppressed((java.lang.Throwable) cardanEulerSingularityException8);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException11 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray12 = cardanEulerSingularityException11.getArguments();
        java.lang.String str13 = cardanEulerSingularityException11.getPattern();
        java.lang.Object[] objArray14 = cardanEulerSingularityException11.getArguments();
        java.lang.Object[] objArray15 = cardanEulerSingularityException11.getArguments();
        java.lang.String str16 = cardanEulerSingularityException11.getPattern();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException18 = new org.apache.commons.math.geometry.CardanEulerSingularityException(true);
        java.lang.Object[] objArray19 = cardanEulerSingularityException18.getArguments();
        java.lang.Throwable[] throwableArray20 = cardanEulerSingularityException18.getSuppressed();
        java.lang.Throwable[] throwableArray21 = cardanEulerSingularityException18.getSuppressed();
        cardanEulerSingularityException11.addSuppressed((java.lang.Throwable) cardanEulerSingularityException18);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException24 = new org.apache.commons.math.geometry.CardanEulerSingularityException(true);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException26 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        cardanEulerSingularityException24.addSuppressed((java.lang.Throwable) cardanEulerSingularityException26);
        java.lang.String str28 = cardanEulerSingularityException26.getPattern();
        java.lang.Throwable[] throwableArray29 = cardanEulerSingularityException26.getSuppressed();
        java.lang.String str30 = cardanEulerSingularityException26.getPattern();
        java.lang.Throwable[] throwableArray31 = cardanEulerSingularityException26.getSuppressed();
        cardanEulerSingularityException18.addSuppressed((java.lang.Throwable) cardanEulerSingularityException26);
        cardanEulerSingularityException8.addSuppressed((java.lang.Throwable) cardanEulerSingularityException18);
        java.lang.String str34 = cardanEulerSingularityException18.getPattern();
        java.lang.Object[] objArray35 = cardanEulerSingularityException18.getArguments();
        org.junit.Assert.assertNotNull(objArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray2), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray2), "[]");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Euler angles singularity" + "'", str3, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray4), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray4), "[]");
        org.junit.Assert.assertNotNull(objArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray5), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray5), "[]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "Euler angles singularity" + "'", str6, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray12), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray12), "[]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Euler angles singularity" + "'", str13, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[]");
        org.junit.Assert.assertNotNull(objArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray15), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray15), "[]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "Euler angles singularity" + "'", str16, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray19), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray19), "[]");
        org.junit.Assert.assertNotNull(throwableArray20);
        org.junit.Assert.assertNotNull(throwableArray21);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "Euler angles singularity" + "'", str28, "Euler angles singularity");
        org.junit.Assert.assertNotNull(throwableArray29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "Euler angles singularity" + "'", str30, "Euler angles singularity");
        org.junit.Assert.assertNotNull(throwableArray31);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "Cardan angles singularity" + "'", str34, "Cardan angles singularity");
        org.junit.Assert.assertNotNull(objArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray35), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray35), "[]");
    }

    @Test
    public void test1699() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1699");
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException1 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray2 = cardanEulerSingularityException1.getArguments();
        java.lang.Object[] objArray3 = cardanEulerSingularityException1.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException5 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray6 = cardanEulerSingularityException5.getArguments();
        cardanEulerSingularityException1.addSuppressed((java.lang.Throwable) cardanEulerSingularityException5);
        java.lang.Object[] objArray8 = cardanEulerSingularityException5.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException10 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray11 = cardanEulerSingularityException10.getArguments();
        java.lang.Throwable[] throwableArray12 = cardanEulerSingularityException10.getSuppressed();
        java.lang.String str13 = cardanEulerSingularityException10.getPattern();
        cardanEulerSingularityException5.addSuppressed((java.lang.Throwable) cardanEulerSingularityException10);
        java.lang.Object[] objArray15 = cardanEulerSingularityException5.getArguments();
        java.lang.Throwable[] throwableArray16 = cardanEulerSingularityException5.getSuppressed();
        java.lang.String str17 = cardanEulerSingularityException5.getPattern();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException19 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray20 = cardanEulerSingularityException19.getArguments();
        java.lang.String str21 = cardanEulerSingularityException19.getPattern();
        java.lang.Object[] objArray22 = cardanEulerSingularityException19.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException24 = new org.apache.commons.math.geometry.CardanEulerSingularityException(true);
        java.lang.Object[] objArray25 = cardanEulerSingularityException24.getArguments();
        java.lang.Throwable[] throwableArray26 = cardanEulerSingularityException24.getSuppressed();
        java.lang.Throwable[] throwableArray27 = cardanEulerSingularityException24.getSuppressed();
        java.lang.Throwable[] throwableArray28 = cardanEulerSingularityException24.getSuppressed();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException30 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray31 = cardanEulerSingularityException30.getArguments();
        java.lang.Object[] objArray32 = cardanEulerSingularityException30.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException34 = new org.apache.commons.math.geometry.CardanEulerSingularityException(true);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException36 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        cardanEulerSingularityException34.addSuppressed((java.lang.Throwable) cardanEulerSingularityException36);
        cardanEulerSingularityException30.addSuppressed((java.lang.Throwable) cardanEulerSingularityException34);
        cardanEulerSingularityException24.addSuppressed((java.lang.Throwable) cardanEulerSingularityException30);
        cardanEulerSingularityException19.addSuppressed((java.lang.Throwable) cardanEulerSingularityException24);
        java.lang.Object[] objArray41 = cardanEulerSingularityException19.getArguments();
        cardanEulerSingularityException5.addSuppressed((java.lang.Throwable) cardanEulerSingularityException19);
        java.lang.Object[] objArray43 = cardanEulerSingularityException19.getArguments();
        org.junit.Assert.assertNotNull(objArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray2), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray2), "[]");
        org.junit.Assert.assertNotNull(objArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray3), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray3), "[]");
        org.junit.Assert.assertNotNull(objArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray6), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray6), "[]");
        org.junit.Assert.assertNotNull(objArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray8), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray8), "[]");
        org.junit.Assert.assertNotNull(objArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray11), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray11), "[]");
        org.junit.Assert.assertNotNull(throwableArray12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Euler angles singularity" + "'", str13, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray15), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray15), "[]");
        org.junit.Assert.assertNotNull(throwableArray16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "Euler angles singularity" + "'", str17, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray20), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray20), "[]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "Euler angles singularity" + "'", str21, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray22), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray22), "[]");
        org.junit.Assert.assertNotNull(objArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray25), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray25), "[]");
        org.junit.Assert.assertNotNull(throwableArray26);
        org.junit.Assert.assertNotNull(throwableArray27);
        org.junit.Assert.assertNotNull(throwableArray28);
        org.junit.Assert.assertNotNull(objArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray31), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray31), "[]");
        org.junit.Assert.assertNotNull(objArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray32), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray32), "[]");
        org.junit.Assert.assertNotNull(objArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray41), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray41), "[]");
        org.junit.Assert.assertNotNull(objArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray43), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray43), "[]");
    }

    @Test
    public void test1700() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1700");
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException1 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.String str2 = cardanEulerSingularityException1.getPattern();
        java.lang.Object[] objArray3 = cardanEulerSingularityException1.getArguments();
        java.lang.String str4 = cardanEulerSingularityException1.getPattern();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException6 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.String str7 = cardanEulerSingularityException6.getPattern();
        java.lang.Throwable[] throwableArray8 = cardanEulerSingularityException6.getSuppressed();
        cardanEulerSingularityException1.addSuppressed((java.lang.Throwable) cardanEulerSingularityException6);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException11 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.String str12 = cardanEulerSingularityException11.getPattern();
        java.lang.Object[] objArray13 = cardanEulerSingularityException11.getArguments();
        java.lang.String str14 = cardanEulerSingularityException11.getPattern();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException16 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.String str17 = cardanEulerSingularityException16.getPattern();
        java.lang.Throwable[] throwableArray18 = cardanEulerSingularityException16.getSuppressed();
        cardanEulerSingularityException11.addSuppressed((java.lang.Throwable) cardanEulerSingularityException16);
        cardanEulerSingularityException1.addSuppressed((java.lang.Throwable) cardanEulerSingularityException11);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException22 = new org.apache.commons.math.geometry.CardanEulerSingularityException(true);
        cardanEulerSingularityException1.addSuppressed((java.lang.Throwable) cardanEulerSingularityException22);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException25 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray26 = cardanEulerSingularityException25.getArguments();
        java.lang.Object[] objArray27 = cardanEulerSingularityException25.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException29 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray30 = cardanEulerSingularityException29.getArguments();
        cardanEulerSingularityException25.addSuppressed((java.lang.Throwable) cardanEulerSingularityException29);
        java.lang.Object[] objArray32 = cardanEulerSingularityException29.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException34 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray35 = cardanEulerSingularityException34.getArguments();
        java.lang.Throwable[] throwableArray36 = cardanEulerSingularityException34.getSuppressed();
        java.lang.String str37 = cardanEulerSingularityException34.getPattern();
        cardanEulerSingularityException29.addSuppressed((java.lang.Throwable) cardanEulerSingularityException34);
        java.lang.Object[] objArray39 = cardanEulerSingularityException34.getArguments();
        cardanEulerSingularityException1.addSuppressed((java.lang.Throwable) cardanEulerSingularityException34);
        java.lang.Throwable[] throwableArray41 = cardanEulerSingularityException1.getSuppressed();
        java.lang.String str42 = cardanEulerSingularityException1.getPattern();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "Euler angles singularity" + "'", str2, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray3), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray3), "[]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Euler angles singularity" + "'", str4, "Euler angles singularity");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Euler angles singularity" + "'", str7, "Euler angles singularity");
        org.junit.Assert.assertNotNull(throwableArray8);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Euler angles singularity" + "'", str12, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray13), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray13), "[]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "Euler angles singularity" + "'", str14, "Euler angles singularity");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "Euler angles singularity" + "'", str17, "Euler angles singularity");
        org.junit.Assert.assertNotNull(throwableArray18);
        org.junit.Assert.assertNotNull(objArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray26), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray26), "[]");
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray27), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray27), "[]");
        org.junit.Assert.assertNotNull(objArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray30), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray30), "[]");
        org.junit.Assert.assertNotNull(objArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray32), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray32), "[]");
        org.junit.Assert.assertNotNull(objArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray35), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray35), "[]");
        org.junit.Assert.assertNotNull(throwableArray36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "Euler angles singularity" + "'", str37, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray39), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray39), "[]");
        org.junit.Assert.assertNotNull(throwableArray41);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "Euler angles singularity" + "'", str42, "Euler angles singularity");
    }

    @Test
    public void test1701() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1701");
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException1 = new org.apache.commons.math.geometry.CardanEulerSingularityException(true);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException3 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        cardanEulerSingularityException1.addSuppressed((java.lang.Throwable) cardanEulerSingularityException3);
        java.lang.String str5 = cardanEulerSingularityException3.getPattern();
        java.lang.Throwable[] throwableArray6 = cardanEulerSingularityException3.getSuppressed();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException8 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.String str9 = cardanEulerSingularityException8.getPattern();
        java.lang.Object[] objArray10 = cardanEulerSingularityException8.getArguments();
        java.lang.String str11 = cardanEulerSingularityException8.getPattern();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException13 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.String str14 = cardanEulerSingularityException13.getPattern();
        java.lang.Throwable[] throwableArray15 = cardanEulerSingularityException13.getSuppressed();
        cardanEulerSingularityException8.addSuppressed((java.lang.Throwable) cardanEulerSingularityException13);
        cardanEulerSingularityException3.addSuppressed((java.lang.Throwable) cardanEulerSingularityException13);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException19 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray20 = cardanEulerSingularityException19.getArguments();
        java.lang.String str21 = cardanEulerSingularityException19.getPattern();
        java.lang.Object[] objArray22 = cardanEulerSingularityException19.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException24 = new org.apache.commons.math.geometry.CardanEulerSingularityException(true);
        java.lang.Object[] objArray25 = cardanEulerSingularityException24.getArguments();
        java.lang.Object[] objArray26 = cardanEulerSingularityException24.getArguments();
        java.lang.String str27 = cardanEulerSingularityException24.getPattern();
        java.lang.String str28 = cardanEulerSingularityException24.getPattern();
        cardanEulerSingularityException19.addSuppressed((java.lang.Throwable) cardanEulerSingularityException24);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException31 = new org.apache.commons.math.geometry.CardanEulerSingularityException(true);
        java.lang.Object[] objArray32 = cardanEulerSingularityException31.getArguments();
        java.lang.Throwable[] throwableArray33 = cardanEulerSingularityException31.getSuppressed();
        java.lang.Throwable[] throwableArray34 = cardanEulerSingularityException31.getSuppressed();
        java.lang.Throwable[] throwableArray35 = cardanEulerSingularityException31.getSuppressed();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException37 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray38 = cardanEulerSingularityException37.getArguments();
        java.lang.Object[] objArray39 = cardanEulerSingularityException37.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException41 = new org.apache.commons.math.geometry.CardanEulerSingularityException(true);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException43 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        cardanEulerSingularityException41.addSuppressed((java.lang.Throwable) cardanEulerSingularityException43);
        cardanEulerSingularityException37.addSuppressed((java.lang.Throwable) cardanEulerSingularityException41);
        cardanEulerSingularityException31.addSuppressed((java.lang.Throwable) cardanEulerSingularityException37);
        java.lang.Throwable[] throwableArray47 = cardanEulerSingularityException31.getSuppressed();
        cardanEulerSingularityException24.addSuppressed((java.lang.Throwable) cardanEulerSingularityException31);
        cardanEulerSingularityException3.addSuppressed((java.lang.Throwable) cardanEulerSingularityException24);
        java.lang.Throwable[] throwableArray50 = cardanEulerSingularityException24.getSuppressed();
        java.lang.Object[] objArray51 = cardanEulerSingularityException24.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException53 = new org.apache.commons.math.geometry.CardanEulerSingularityException(true);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException55 = new org.apache.commons.math.geometry.CardanEulerSingularityException(true);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException57 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        cardanEulerSingularityException55.addSuppressed((java.lang.Throwable) cardanEulerSingularityException57);
        java.lang.String str59 = cardanEulerSingularityException57.getPattern();
        java.lang.String str60 = cardanEulerSingularityException57.getPattern();
        cardanEulerSingularityException53.addSuppressed((java.lang.Throwable) cardanEulerSingularityException57);
        java.lang.Object[] objArray62 = cardanEulerSingularityException57.getArguments();
        java.lang.Object[] objArray63 = cardanEulerSingularityException57.getArguments();
        cardanEulerSingularityException24.addSuppressed((java.lang.Throwable) cardanEulerSingularityException57);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Euler angles singularity" + "'", str5, "Euler angles singularity");
        org.junit.Assert.assertNotNull(throwableArray6);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Euler angles singularity" + "'", str9, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray10), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray10), "[]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Euler angles singularity" + "'", str11, "Euler angles singularity");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "Euler angles singularity" + "'", str14, "Euler angles singularity");
        org.junit.Assert.assertNotNull(throwableArray15);
        org.junit.Assert.assertNotNull(objArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray20), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray20), "[]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "Euler angles singularity" + "'", str21, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray22), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray22), "[]");
        org.junit.Assert.assertNotNull(objArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray25), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray25), "[]");
        org.junit.Assert.assertNotNull(objArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray26), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray26), "[]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "Cardan angles singularity" + "'", str27, "Cardan angles singularity");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "Cardan angles singularity" + "'", str28, "Cardan angles singularity");
        org.junit.Assert.assertNotNull(objArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray32), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray32), "[]");
        org.junit.Assert.assertNotNull(throwableArray33);
        org.junit.Assert.assertNotNull(throwableArray34);
        org.junit.Assert.assertNotNull(throwableArray35);
        org.junit.Assert.assertNotNull(objArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray38), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray38), "[]");
        org.junit.Assert.assertNotNull(objArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray39), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray39), "[]");
        org.junit.Assert.assertNotNull(throwableArray47);
        org.junit.Assert.assertNotNull(throwableArray50);
        org.junit.Assert.assertNotNull(objArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray51), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray51), "[]");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "Euler angles singularity" + "'", str59, "Euler angles singularity");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "Euler angles singularity" + "'", str60, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray62), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray62), "[]");
        org.junit.Assert.assertNotNull(objArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray63), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray63), "[]");
    }

    @Test
    public void test1702() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1702");
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException1 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray2 = cardanEulerSingularityException1.getArguments();
        java.lang.String str3 = cardanEulerSingularityException1.getPattern();
        java.lang.Object[] objArray4 = cardanEulerSingularityException1.getArguments();
        java.lang.Object[] objArray5 = cardanEulerSingularityException1.getArguments();
        java.lang.String str6 = cardanEulerSingularityException1.getPattern();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException8 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        cardanEulerSingularityException1.addSuppressed((java.lang.Throwable) cardanEulerSingularityException8);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException11 = new org.apache.commons.math.geometry.CardanEulerSingularityException(true);
        java.lang.Object[] objArray12 = cardanEulerSingularityException11.getArguments();
        java.lang.Throwable[] throwableArray13 = cardanEulerSingularityException11.getSuppressed();
        java.lang.Throwable[] throwableArray14 = cardanEulerSingularityException11.getSuppressed();
        java.lang.Throwable[] throwableArray15 = cardanEulerSingularityException11.getSuppressed();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException17 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray18 = cardanEulerSingularityException17.getArguments();
        java.lang.Object[] objArray19 = cardanEulerSingularityException17.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException21 = new org.apache.commons.math.geometry.CardanEulerSingularityException(true);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException23 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        cardanEulerSingularityException21.addSuppressed((java.lang.Throwable) cardanEulerSingularityException23);
        cardanEulerSingularityException17.addSuppressed((java.lang.Throwable) cardanEulerSingularityException21);
        cardanEulerSingularityException11.addSuppressed((java.lang.Throwable) cardanEulerSingularityException17);
        java.lang.Object[] objArray27 = cardanEulerSingularityException17.getArguments();
        java.lang.String str28 = cardanEulerSingularityException17.getPattern();
        java.lang.Object[] objArray29 = cardanEulerSingularityException17.getArguments();
        cardanEulerSingularityException8.addSuppressed((java.lang.Throwable) cardanEulerSingularityException17);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException32 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray33 = cardanEulerSingularityException32.getArguments();
        java.lang.Object[] objArray34 = cardanEulerSingularityException32.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException36 = new org.apache.commons.math.geometry.CardanEulerSingularityException(true);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException38 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        cardanEulerSingularityException36.addSuppressed((java.lang.Throwable) cardanEulerSingularityException38);
        cardanEulerSingularityException32.addSuppressed((java.lang.Throwable) cardanEulerSingularityException36);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException42 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray43 = cardanEulerSingularityException42.getArguments();
        java.lang.String str44 = cardanEulerSingularityException42.getPattern();
        java.lang.Object[] objArray45 = cardanEulerSingularityException42.getArguments();
        java.lang.Object[] objArray46 = cardanEulerSingularityException42.getArguments();
        cardanEulerSingularityException36.addSuppressed((java.lang.Throwable) cardanEulerSingularityException42);
        java.lang.Object[] objArray48 = cardanEulerSingularityException42.getArguments();
        java.lang.Object[] objArray49 = cardanEulerSingularityException42.getArguments();
        cardanEulerSingularityException8.addSuppressed((java.lang.Throwable) cardanEulerSingularityException42);
        java.lang.String str51 = cardanEulerSingularityException42.getPattern();
        java.lang.Object[] objArray52 = cardanEulerSingularityException42.getArguments();
        org.junit.Assert.assertNotNull(objArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray2), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray2), "[]");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Euler angles singularity" + "'", str3, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray4), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray4), "[]");
        org.junit.Assert.assertNotNull(objArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray5), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray5), "[]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "Euler angles singularity" + "'", str6, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray12), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray12), "[]");
        org.junit.Assert.assertNotNull(throwableArray13);
        org.junit.Assert.assertNotNull(throwableArray14);
        org.junit.Assert.assertNotNull(throwableArray15);
        org.junit.Assert.assertNotNull(objArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray18), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray18), "[]");
        org.junit.Assert.assertNotNull(objArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray19), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray19), "[]");
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray27), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray27), "[]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "Euler angles singularity" + "'", str28, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray29), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray29), "[]");
        org.junit.Assert.assertNotNull(objArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray33), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray33), "[]");
        org.junit.Assert.assertNotNull(objArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray34), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray34), "[]");
        org.junit.Assert.assertNotNull(objArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray43), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray43), "[]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "Euler angles singularity" + "'", str44, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray45), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray45), "[]");
        org.junit.Assert.assertNotNull(objArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray46), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray46), "[]");
        org.junit.Assert.assertNotNull(objArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray48), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray48), "[]");
        org.junit.Assert.assertNotNull(objArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray49), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray49), "[]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "Euler angles singularity" + "'", str51, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray52), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray52), "[]");
    }

    @Test
    public void test1703() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1703");
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException1 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray2 = cardanEulerSingularityException1.getArguments();
        java.lang.Object[] objArray3 = cardanEulerSingularityException1.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException5 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray6 = cardanEulerSingularityException5.getArguments();
        cardanEulerSingularityException1.addSuppressed((java.lang.Throwable) cardanEulerSingularityException5);
        java.lang.Throwable[] throwableArray8 = cardanEulerSingularityException1.getSuppressed();
        java.lang.String str9 = cardanEulerSingularityException1.getPattern();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException11 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray12 = cardanEulerSingularityException11.getArguments();
        java.lang.String str13 = cardanEulerSingularityException11.getPattern();
        java.lang.Object[] objArray14 = cardanEulerSingularityException11.getArguments();
        java.lang.Object[] objArray15 = cardanEulerSingularityException11.getArguments();
        java.lang.String str16 = cardanEulerSingularityException11.getPattern();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException18 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        cardanEulerSingularityException11.addSuppressed((java.lang.Throwable) cardanEulerSingularityException18);
        cardanEulerSingularityException1.addSuppressed((java.lang.Throwable) cardanEulerSingularityException18);
        java.lang.String str21 = cardanEulerSingularityException1.getPattern();
        java.lang.Throwable[] throwableArray22 = cardanEulerSingularityException1.getSuppressed();
        java.lang.String str23 = cardanEulerSingularityException1.getPattern();
        org.junit.Assert.assertNotNull(objArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray2), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray2), "[]");
        org.junit.Assert.assertNotNull(objArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray3), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray3), "[]");
        org.junit.Assert.assertNotNull(objArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray6), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray6), "[]");
        org.junit.Assert.assertNotNull(throwableArray8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Euler angles singularity" + "'", str9, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray12), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray12), "[]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Euler angles singularity" + "'", str13, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[]");
        org.junit.Assert.assertNotNull(objArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray15), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray15), "[]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "Euler angles singularity" + "'", str16, "Euler angles singularity");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "Euler angles singularity" + "'", str21, "Euler angles singularity");
        org.junit.Assert.assertNotNull(throwableArray22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "Euler angles singularity" + "'", str23, "Euler angles singularity");
    }

    @Test
    public void test1704() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1704");
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException1 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray2 = cardanEulerSingularityException1.getArguments();
        java.lang.Object[] objArray3 = cardanEulerSingularityException1.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException5 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray6 = cardanEulerSingularityException5.getArguments();
        cardanEulerSingularityException1.addSuppressed((java.lang.Throwable) cardanEulerSingularityException5);
        java.lang.Throwable[] throwableArray8 = cardanEulerSingularityException1.getSuppressed();
        java.lang.String str9 = cardanEulerSingularityException1.getPattern();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException11 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray12 = cardanEulerSingularityException11.getArguments();
        java.lang.String str13 = cardanEulerSingularityException11.getPattern();
        java.lang.Object[] objArray14 = cardanEulerSingularityException11.getArguments();
        java.lang.Object[] objArray15 = cardanEulerSingularityException11.getArguments();
        java.lang.String str16 = cardanEulerSingularityException11.getPattern();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException18 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        cardanEulerSingularityException11.addSuppressed((java.lang.Throwable) cardanEulerSingularityException18);
        cardanEulerSingularityException1.addSuppressed((java.lang.Throwable) cardanEulerSingularityException18);
        java.lang.Object[] objArray21 = cardanEulerSingularityException18.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException23 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray24 = cardanEulerSingularityException23.getArguments();
        java.lang.Object[] objArray25 = cardanEulerSingularityException23.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException27 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray28 = cardanEulerSingularityException27.getArguments();
        cardanEulerSingularityException23.addSuppressed((java.lang.Throwable) cardanEulerSingularityException27);
        java.lang.Throwable[] throwableArray30 = cardanEulerSingularityException23.getSuppressed();
        java.lang.String str31 = cardanEulerSingularityException23.getPattern();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException33 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray34 = cardanEulerSingularityException33.getArguments();
        java.lang.String str35 = cardanEulerSingularityException33.getPattern();
        java.lang.Object[] objArray36 = cardanEulerSingularityException33.getArguments();
        java.lang.Object[] objArray37 = cardanEulerSingularityException33.getArguments();
        java.lang.String str38 = cardanEulerSingularityException33.getPattern();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException40 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        cardanEulerSingularityException33.addSuppressed((java.lang.Throwable) cardanEulerSingularityException40);
        cardanEulerSingularityException23.addSuppressed((java.lang.Throwable) cardanEulerSingularityException40);
        java.lang.Object[] objArray43 = cardanEulerSingularityException40.getArguments();
        cardanEulerSingularityException18.addSuppressed((java.lang.Throwable) cardanEulerSingularityException40);
        java.lang.String str45 = cardanEulerSingularityException18.toString();
        org.junit.Assert.assertNotNull(objArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray2), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray2), "[]");
        org.junit.Assert.assertNotNull(objArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray3), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray3), "[]");
        org.junit.Assert.assertNotNull(objArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray6), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray6), "[]");
        org.junit.Assert.assertNotNull(throwableArray8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Euler angles singularity" + "'", str9, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray12), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray12), "[]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Euler angles singularity" + "'", str13, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[]");
        org.junit.Assert.assertNotNull(objArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray15), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray15), "[]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "Euler angles singularity" + "'", str16, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray21), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray21), "[]");
        org.junit.Assert.assertNotNull(objArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray24), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray24), "[]");
        org.junit.Assert.assertNotNull(objArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray25), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray25), "[]");
        org.junit.Assert.assertNotNull(objArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray28), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray28), "[]");
        org.junit.Assert.assertNotNull(throwableArray30);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "Euler angles singularity" + "'", str31, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray34), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray34), "[]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "Euler angles singularity" + "'", str35, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray36), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray36), "[]");
        org.junit.Assert.assertNotNull(objArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray37), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray37), "[]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "Euler angles singularity" + "'", str38, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray43), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray43), "[]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "org.apache.commons.math.geometry.CardanEulerSingularityException: Euler angles singularity" + "'", str45, "org.apache.commons.math.geometry.CardanEulerSingularityException: Euler angles singularity");
    }

    @Test
    public void test1705() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1705");
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException1 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray2 = cardanEulerSingularityException1.getArguments();
        java.lang.String str3 = cardanEulerSingularityException1.getPattern();
        java.lang.Object[] objArray4 = cardanEulerSingularityException1.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException6 = new org.apache.commons.math.geometry.CardanEulerSingularityException(true);
        java.lang.Object[] objArray7 = cardanEulerSingularityException6.getArguments();
        java.lang.Object[] objArray8 = cardanEulerSingularityException6.getArguments();
        java.lang.String str9 = cardanEulerSingularityException6.getPattern();
        java.lang.String str10 = cardanEulerSingularityException6.getPattern();
        cardanEulerSingularityException1.addSuppressed((java.lang.Throwable) cardanEulerSingularityException6);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException13 = new org.apache.commons.math.geometry.CardanEulerSingularityException(true);
        java.lang.Object[] objArray14 = cardanEulerSingularityException13.getArguments();
        java.lang.Throwable[] throwableArray15 = cardanEulerSingularityException13.getSuppressed();
        java.lang.Throwable[] throwableArray16 = cardanEulerSingularityException13.getSuppressed();
        java.lang.Throwable[] throwableArray17 = cardanEulerSingularityException13.getSuppressed();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException19 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray20 = cardanEulerSingularityException19.getArguments();
        java.lang.Object[] objArray21 = cardanEulerSingularityException19.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException23 = new org.apache.commons.math.geometry.CardanEulerSingularityException(true);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException25 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        cardanEulerSingularityException23.addSuppressed((java.lang.Throwable) cardanEulerSingularityException25);
        cardanEulerSingularityException19.addSuppressed((java.lang.Throwable) cardanEulerSingularityException23);
        cardanEulerSingularityException13.addSuppressed((java.lang.Throwable) cardanEulerSingularityException19);
        java.lang.Throwable[] throwableArray29 = cardanEulerSingularityException13.getSuppressed();
        cardanEulerSingularityException6.addSuppressed((java.lang.Throwable) cardanEulerSingularityException13);
        java.lang.String str31 = cardanEulerSingularityException13.getPattern();
        java.lang.String str32 = cardanEulerSingularityException13.getPattern();
        java.lang.Throwable[] throwableArray33 = cardanEulerSingularityException13.getSuppressed();
        java.lang.Class<?> wildcardClass34 = throwableArray33.getClass();
        org.junit.Assert.assertNotNull(objArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray2), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray2), "[]");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Euler angles singularity" + "'", str3, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray4), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray4), "[]");
        org.junit.Assert.assertNotNull(objArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray7), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray7), "[]");
        org.junit.Assert.assertNotNull(objArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray8), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray8), "[]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Cardan angles singularity" + "'", str9, "Cardan angles singularity");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Cardan angles singularity" + "'", str10, "Cardan angles singularity");
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[]");
        org.junit.Assert.assertNotNull(throwableArray15);
        org.junit.Assert.assertNotNull(throwableArray16);
        org.junit.Assert.assertNotNull(throwableArray17);
        org.junit.Assert.assertNotNull(objArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray20), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray20), "[]");
        org.junit.Assert.assertNotNull(objArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray21), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray21), "[]");
        org.junit.Assert.assertNotNull(throwableArray29);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "Cardan angles singularity" + "'", str31, "Cardan angles singularity");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "Cardan angles singularity" + "'", str32, "Cardan angles singularity");
        org.junit.Assert.assertNotNull(throwableArray33);
        org.junit.Assert.assertNotNull(wildcardClass34);
    }

    @Test
    public void test1706() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1706");
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException1 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray2 = cardanEulerSingularityException1.getArguments();
        java.lang.String str3 = cardanEulerSingularityException1.getPattern();
        java.lang.Object[] objArray4 = cardanEulerSingularityException1.getArguments();
        java.lang.Object[] objArray5 = cardanEulerSingularityException1.getArguments();
        java.lang.String str6 = cardanEulerSingularityException1.getPattern();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException8 = new org.apache.commons.math.geometry.CardanEulerSingularityException(true);
        java.lang.Object[] objArray9 = cardanEulerSingularityException8.getArguments();
        java.lang.Throwable[] throwableArray10 = cardanEulerSingularityException8.getSuppressed();
        java.lang.Throwable[] throwableArray11 = cardanEulerSingularityException8.getSuppressed();
        cardanEulerSingularityException1.addSuppressed((java.lang.Throwable) cardanEulerSingularityException8);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException14 = new org.apache.commons.math.geometry.CardanEulerSingularityException(true);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException16 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        cardanEulerSingularityException14.addSuppressed((java.lang.Throwable) cardanEulerSingularityException16);
        java.lang.String str18 = cardanEulerSingularityException16.getPattern();
        java.lang.Throwable[] throwableArray19 = cardanEulerSingularityException16.getSuppressed();
        java.lang.String str20 = cardanEulerSingularityException16.getPattern();
        java.lang.Throwable[] throwableArray21 = cardanEulerSingularityException16.getSuppressed();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException23 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray24 = cardanEulerSingularityException23.getArguments();
        java.lang.Object[] objArray25 = cardanEulerSingularityException23.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException27 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray28 = cardanEulerSingularityException27.getArguments();
        cardanEulerSingularityException23.addSuppressed((java.lang.Throwable) cardanEulerSingularityException27);
        java.lang.Object[] objArray30 = cardanEulerSingularityException27.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException32 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray33 = cardanEulerSingularityException32.getArguments();
        java.lang.Throwable[] throwableArray34 = cardanEulerSingularityException32.getSuppressed();
        java.lang.String str35 = cardanEulerSingularityException32.getPattern();
        cardanEulerSingularityException27.addSuppressed((java.lang.Throwable) cardanEulerSingularityException32);
        java.lang.Object[] objArray37 = cardanEulerSingularityException27.getArguments();
        java.lang.Throwable[] throwableArray38 = cardanEulerSingularityException27.getSuppressed();
        java.lang.String str39 = cardanEulerSingularityException27.getPattern();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException41 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray42 = cardanEulerSingularityException41.getArguments();
        java.lang.String str43 = cardanEulerSingularityException41.getPattern();
        java.lang.Object[] objArray44 = cardanEulerSingularityException41.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException46 = new org.apache.commons.math.geometry.CardanEulerSingularityException(true);
        java.lang.Object[] objArray47 = cardanEulerSingularityException46.getArguments();
        java.lang.Throwable[] throwableArray48 = cardanEulerSingularityException46.getSuppressed();
        java.lang.Throwable[] throwableArray49 = cardanEulerSingularityException46.getSuppressed();
        java.lang.Throwable[] throwableArray50 = cardanEulerSingularityException46.getSuppressed();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException52 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray53 = cardanEulerSingularityException52.getArguments();
        java.lang.Object[] objArray54 = cardanEulerSingularityException52.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException56 = new org.apache.commons.math.geometry.CardanEulerSingularityException(true);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException58 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        cardanEulerSingularityException56.addSuppressed((java.lang.Throwable) cardanEulerSingularityException58);
        cardanEulerSingularityException52.addSuppressed((java.lang.Throwable) cardanEulerSingularityException56);
        cardanEulerSingularityException46.addSuppressed((java.lang.Throwable) cardanEulerSingularityException52);
        cardanEulerSingularityException41.addSuppressed((java.lang.Throwable) cardanEulerSingularityException46);
        java.lang.Object[] objArray63 = cardanEulerSingularityException41.getArguments();
        cardanEulerSingularityException27.addSuppressed((java.lang.Throwable) cardanEulerSingularityException41);
        cardanEulerSingularityException16.addSuppressed((java.lang.Throwable) cardanEulerSingularityException27);
        java.lang.Object[] objArray66 = cardanEulerSingularityException16.getArguments();
        cardanEulerSingularityException8.addSuppressed((java.lang.Throwable) cardanEulerSingularityException16);
        org.junit.Assert.assertNotNull(objArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray2), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray2), "[]");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Euler angles singularity" + "'", str3, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray4), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray4), "[]");
        org.junit.Assert.assertNotNull(objArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray5), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray5), "[]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "Euler angles singularity" + "'", str6, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray9), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray9), "[]");
        org.junit.Assert.assertNotNull(throwableArray10);
        org.junit.Assert.assertNotNull(throwableArray11);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "Euler angles singularity" + "'", str18, "Euler angles singularity");
        org.junit.Assert.assertNotNull(throwableArray19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "Euler angles singularity" + "'", str20, "Euler angles singularity");
        org.junit.Assert.assertNotNull(throwableArray21);
        org.junit.Assert.assertNotNull(objArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray24), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray24), "[]");
        org.junit.Assert.assertNotNull(objArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray25), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray25), "[]");
        org.junit.Assert.assertNotNull(objArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray28), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray28), "[]");
        org.junit.Assert.assertNotNull(objArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray30), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray30), "[]");
        org.junit.Assert.assertNotNull(objArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray33), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray33), "[]");
        org.junit.Assert.assertNotNull(throwableArray34);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "Euler angles singularity" + "'", str35, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray37), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray37), "[]");
        org.junit.Assert.assertNotNull(throwableArray38);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "Euler angles singularity" + "'", str39, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray42), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray42), "[]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "Euler angles singularity" + "'", str43, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray44), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray44), "[]");
        org.junit.Assert.assertNotNull(objArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray47), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray47), "[]");
        org.junit.Assert.assertNotNull(throwableArray48);
        org.junit.Assert.assertNotNull(throwableArray49);
        org.junit.Assert.assertNotNull(throwableArray50);
        org.junit.Assert.assertNotNull(objArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray53), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray53), "[]");
        org.junit.Assert.assertNotNull(objArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray54), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray54), "[]");
        org.junit.Assert.assertNotNull(objArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray63), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray63), "[]");
        org.junit.Assert.assertNotNull(objArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray66), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray66), "[]");
    }

    @Test
    public void test1707() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1707");
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException1 = new org.apache.commons.math.geometry.CardanEulerSingularityException(true);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException3 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        cardanEulerSingularityException1.addSuppressed((java.lang.Throwable) cardanEulerSingularityException3);
        java.lang.Throwable[] throwableArray5 = cardanEulerSingularityException1.getSuppressed();
        java.lang.Throwable[] throwableArray6 = cardanEulerSingularityException1.getSuppressed();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException8 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray9 = cardanEulerSingularityException8.getArguments();
        java.lang.String str10 = cardanEulerSingularityException8.getPattern();
        java.lang.Object[] objArray11 = cardanEulerSingularityException8.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException13 = new org.apache.commons.math.geometry.CardanEulerSingularityException(true);
        java.lang.Object[] objArray14 = cardanEulerSingularityException13.getArguments();
        java.lang.Object[] objArray15 = cardanEulerSingularityException13.getArguments();
        java.lang.String str16 = cardanEulerSingularityException13.getPattern();
        java.lang.String str17 = cardanEulerSingularityException13.getPattern();
        cardanEulerSingularityException8.addSuppressed((java.lang.Throwable) cardanEulerSingularityException13);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException20 = new org.apache.commons.math.geometry.CardanEulerSingularityException(true);
        java.lang.Object[] objArray21 = cardanEulerSingularityException20.getArguments();
        java.lang.Throwable[] throwableArray22 = cardanEulerSingularityException20.getSuppressed();
        java.lang.Throwable[] throwableArray23 = cardanEulerSingularityException20.getSuppressed();
        java.lang.Throwable[] throwableArray24 = cardanEulerSingularityException20.getSuppressed();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException26 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray27 = cardanEulerSingularityException26.getArguments();
        java.lang.Object[] objArray28 = cardanEulerSingularityException26.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException30 = new org.apache.commons.math.geometry.CardanEulerSingularityException(true);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException32 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        cardanEulerSingularityException30.addSuppressed((java.lang.Throwable) cardanEulerSingularityException32);
        cardanEulerSingularityException26.addSuppressed((java.lang.Throwable) cardanEulerSingularityException30);
        cardanEulerSingularityException20.addSuppressed((java.lang.Throwable) cardanEulerSingularityException26);
        java.lang.Throwable[] throwableArray36 = cardanEulerSingularityException20.getSuppressed();
        cardanEulerSingularityException13.addSuppressed((java.lang.Throwable) cardanEulerSingularityException20);
        java.lang.String str38 = cardanEulerSingularityException13.getPattern();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException40 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray41 = cardanEulerSingularityException40.getArguments();
        java.lang.Throwable[] throwableArray42 = cardanEulerSingularityException40.getSuppressed();
        java.lang.String str43 = cardanEulerSingularityException40.getPattern();
        java.lang.Throwable[] throwableArray44 = cardanEulerSingularityException40.getSuppressed();
        java.lang.Throwable[] throwableArray45 = cardanEulerSingularityException40.getSuppressed();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException47 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray48 = cardanEulerSingularityException47.getArguments();
        java.lang.Object[] objArray49 = cardanEulerSingularityException47.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException51 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray52 = cardanEulerSingularityException51.getArguments();
        cardanEulerSingularityException47.addSuppressed((java.lang.Throwable) cardanEulerSingularityException51);
        java.lang.String str54 = cardanEulerSingularityException47.getPattern();
        cardanEulerSingularityException40.addSuppressed((java.lang.Throwable) cardanEulerSingularityException47);
        cardanEulerSingularityException13.addSuppressed((java.lang.Throwable) cardanEulerSingularityException40);
        cardanEulerSingularityException1.addSuppressed((java.lang.Throwable) cardanEulerSingularityException40);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException59 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.String str60 = cardanEulerSingularityException59.getPattern();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException62 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.String str63 = cardanEulerSingularityException62.getPattern();
        java.lang.Throwable[] throwableArray64 = cardanEulerSingularityException62.getSuppressed();
        cardanEulerSingularityException59.addSuppressed((java.lang.Throwable) cardanEulerSingularityException62);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException67 = new org.apache.commons.math.geometry.CardanEulerSingularityException(true);
        java.lang.String str68 = cardanEulerSingularityException67.getPattern();
        cardanEulerSingularityException59.addSuppressed((java.lang.Throwable) cardanEulerSingularityException67);
        java.lang.String str70 = cardanEulerSingularityException59.getPattern();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException72 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray73 = cardanEulerSingularityException72.getArguments();
        java.lang.Object[] objArray74 = cardanEulerSingularityException72.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException76 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray77 = cardanEulerSingularityException76.getArguments();
        cardanEulerSingularityException72.addSuppressed((java.lang.Throwable) cardanEulerSingularityException76);
        java.lang.Throwable[] throwableArray79 = cardanEulerSingularityException72.getSuppressed();
        java.lang.String str80 = cardanEulerSingularityException72.getPattern();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException82 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray83 = cardanEulerSingularityException82.getArguments();
        java.lang.String str84 = cardanEulerSingularityException82.getPattern();
        java.lang.Object[] objArray85 = cardanEulerSingularityException82.getArguments();
        java.lang.Object[] objArray86 = cardanEulerSingularityException82.getArguments();
        java.lang.String str87 = cardanEulerSingularityException82.getPattern();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException89 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        cardanEulerSingularityException82.addSuppressed((java.lang.Throwable) cardanEulerSingularityException89);
        cardanEulerSingularityException72.addSuppressed((java.lang.Throwable) cardanEulerSingularityException89);
        cardanEulerSingularityException59.addSuppressed((java.lang.Throwable) cardanEulerSingularityException72);
        cardanEulerSingularityException1.addSuppressed((java.lang.Throwable) cardanEulerSingularityException59);
        java.lang.Object[] objArray94 = cardanEulerSingularityException59.getArguments();
        java.lang.String str95 = cardanEulerSingularityException59.getPattern();
        org.junit.Assert.assertNotNull(throwableArray5);
        org.junit.Assert.assertNotNull(throwableArray6);
        org.junit.Assert.assertNotNull(objArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray9), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray9), "[]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Euler angles singularity" + "'", str10, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray11), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray11), "[]");
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[]");
        org.junit.Assert.assertNotNull(objArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray15), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray15), "[]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "Cardan angles singularity" + "'", str16, "Cardan angles singularity");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "Cardan angles singularity" + "'", str17, "Cardan angles singularity");
        org.junit.Assert.assertNotNull(objArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray21), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray21), "[]");
        org.junit.Assert.assertNotNull(throwableArray22);
        org.junit.Assert.assertNotNull(throwableArray23);
        org.junit.Assert.assertNotNull(throwableArray24);
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray27), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray27), "[]");
        org.junit.Assert.assertNotNull(objArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray28), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray28), "[]");
        org.junit.Assert.assertNotNull(throwableArray36);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "Cardan angles singularity" + "'", str38, "Cardan angles singularity");
        org.junit.Assert.assertNotNull(objArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray41), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray41), "[]");
        org.junit.Assert.assertNotNull(throwableArray42);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "Euler angles singularity" + "'", str43, "Euler angles singularity");
        org.junit.Assert.assertNotNull(throwableArray44);
        org.junit.Assert.assertNotNull(throwableArray45);
        org.junit.Assert.assertNotNull(objArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray48), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray48), "[]");
        org.junit.Assert.assertNotNull(objArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray49), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray49), "[]");
        org.junit.Assert.assertNotNull(objArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray52), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray52), "[]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "Euler angles singularity" + "'", str54, "Euler angles singularity");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "Euler angles singularity" + "'", str60, "Euler angles singularity");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "Euler angles singularity" + "'", str63, "Euler angles singularity");
        org.junit.Assert.assertNotNull(throwableArray64);
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "Cardan angles singularity" + "'", str68, "Cardan angles singularity");
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "Euler angles singularity" + "'", str70, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray73), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray73), "[]");
        org.junit.Assert.assertNotNull(objArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray74), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray74), "[]");
        org.junit.Assert.assertNotNull(objArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray77), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray77), "[]");
        org.junit.Assert.assertNotNull(throwableArray79);
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "Euler angles singularity" + "'", str80, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray83), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray83), "[]");
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "Euler angles singularity" + "'", str84, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray85), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray85), "[]");
        org.junit.Assert.assertNotNull(objArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray86), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray86), "[]");
        org.junit.Assert.assertEquals("'" + str87 + "' != '" + "Euler angles singularity" + "'", str87, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray94);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray94), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray94), "[]");
        org.junit.Assert.assertEquals("'" + str95 + "' != '" + "Euler angles singularity" + "'", str95, "Euler angles singularity");
    }

    @Test
    public void test1708() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1708");
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException1 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray2 = cardanEulerSingularityException1.getArguments();
        java.lang.String str3 = cardanEulerSingularityException1.getPattern();
        java.lang.Object[] objArray4 = cardanEulerSingularityException1.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException6 = new org.apache.commons.math.geometry.CardanEulerSingularityException(true);
        java.lang.Object[] objArray7 = cardanEulerSingularityException6.getArguments();
        java.lang.Throwable[] throwableArray8 = cardanEulerSingularityException6.getSuppressed();
        java.lang.Throwable[] throwableArray9 = cardanEulerSingularityException6.getSuppressed();
        java.lang.Throwable[] throwableArray10 = cardanEulerSingularityException6.getSuppressed();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException12 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray13 = cardanEulerSingularityException12.getArguments();
        java.lang.Object[] objArray14 = cardanEulerSingularityException12.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException16 = new org.apache.commons.math.geometry.CardanEulerSingularityException(true);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException18 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        cardanEulerSingularityException16.addSuppressed((java.lang.Throwable) cardanEulerSingularityException18);
        cardanEulerSingularityException12.addSuppressed((java.lang.Throwable) cardanEulerSingularityException16);
        cardanEulerSingularityException6.addSuppressed((java.lang.Throwable) cardanEulerSingularityException12);
        cardanEulerSingularityException1.addSuppressed((java.lang.Throwable) cardanEulerSingularityException6);
        java.lang.Throwable[] throwableArray23 = cardanEulerSingularityException1.getSuppressed();
        java.lang.Object[] objArray24 = cardanEulerSingularityException1.getArguments();
        java.lang.String str25 = cardanEulerSingularityException1.getPattern();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException27 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray28 = cardanEulerSingularityException27.getArguments();
        java.lang.Object[] objArray29 = cardanEulerSingularityException27.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException31 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray32 = cardanEulerSingularityException31.getArguments();
        cardanEulerSingularityException27.addSuppressed((java.lang.Throwable) cardanEulerSingularityException31);
        java.lang.Object[] objArray34 = cardanEulerSingularityException31.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException36 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray37 = cardanEulerSingularityException36.getArguments();
        java.lang.Throwable[] throwableArray38 = cardanEulerSingularityException36.getSuppressed();
        java.lang.String str39 = cardanEulerSingularityException36.getPattern();
        cardanEulerSingularityException31.addSuppressed((java.lang.Throwable) cardanEulerSingularityException36);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException42 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray43 = cardanEulerSingularityException42.getArguments();
        java.lang.Object[] objArray44 = cardanEulerSingularityException42.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException46 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray47 = cardanEulerSingularityException46.getArguments();
        cardanEulerSingularityException42.addSuppressed((java.lang.Throwable) cardanEulerSingularityException46);
        java.lang.Throwable[] throwableArray49 = cardanEulerSingularityException42.getSuppressed();
        java.lang.String str50 = cardanEulerSingularityException42.getPattern();
        cardanEulerSingularityException31.addSuppressed((java.lang.Throwable) cardanEulerSingularityException42);
        java.lang.String str52 = cardanEulerSingularityException42.getPattern();
        cardanEulerSingularityException1.addSuppressed((java.lang.Throwable) cardanEulerSingularityException42);
        java.lang.Object[] objArray54 = cardanEulerSingularityException1.getArguments();
        org.junit.Assert.assertNotNull(objArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray2), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray2), "[]");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Euler angles singularity" + "'", str3, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray4), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray4), "[]");
        org.junit.Assert.assertNotNull(objArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray7), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray7), "[]");
        org.junit.Assert.assertNotNull(throwableArray8);
        org.junit.Assert.assertNotNull(throwableArray9);
        org.junit.Assert.assertNotNull(throwableArray10);
        org.junit.Assert.assertNotNull(objArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray13), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray13), "[]");
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[]");
        org.junit.Assert.assertNotNull(throwableArray23);
        org.junit.Assert.assertNotNull(objArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray24), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray24), "[]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "Euler angles singularity" + "'", str25, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray28), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray28), "[]");
        org.junit.Assert.assertNotNull(objArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray29), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray29), "[]");
        org.junit.Assert.assertNotNull(objArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray32), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray32), "[]");
        org.junit.Assert.assertNotNull(objArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray34), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray34), "[]");
        org.junit.Assert.assertNotNull(objArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray37), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray37), "[]");
        org.junit.Assert.assertNotNull(throwableArray38);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "Euler angles singularity" + "'", str39, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray43), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray43), "[]");
        org.junit.Assert.assertNotNull(objArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray44), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray44), "[]");
        org.junit.Assert.assertNotNull(objArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray47), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray47), "[]");
        org.junit.Assert.assertNotNull(throwableArray49);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "Euler angles singularity" + "'", str50, "Euler angles singularity");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "Euler angles singularity" + "'", str52, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray54), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray54), "[]");
    }

    @Test
    public void test1709() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1709");
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException1 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray2 = cardanEulerSingularityException1.getArguments();
        java.lang.Object[] objArray3 = cardanEulerSingularityException1.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException5 = new org.apache.commons.math.geometry.CardanEulerSingularityException(true);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException7 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        cardanEulerSingularityException5.addSuppressed((java.lang.Throwable) cardanEulerSingularityException7);
        cardanEulerSingularityException1.addSuppressed((java.lang.Throwable) cardanEulerSingularityException5);
        java.lang.String str10 = cardanEulerSingularityException1.getPattern();
        java.lang.Throwable[] throwableArray11 = cardanEulerSingularityException1.getSuppressed();
        java.lang.String str12 = cardanEulerSingularityException1.getPattern();
        java.lang.String str13 = cardanEulerSingularityException1.getPattern();
        java.lang.Object[] objArray14 = cardanEulerSingularityException1.getArguments();
        org.junit.Assert.assertNotNull(objArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray2), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray2), "[]");
        org.junit.Assert.assertNotNull(objArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray3), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray3), "[]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Euler angles singularity" + "'", str10, "Euler angles singularity");
        org.junit.Assert.assertNotNull(throwableArray11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Euler angles singularity" + "'", str12, "Euler angles singularity");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Euler angles singularity" + "'", str13, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[]");
    }

    @Test
    public void test1710() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1710");
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException1 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray2 = cardanEulerSingularityException1.getArguments();
        java.lang.String str3 = cardanEulerSingularityException1.getPattern();
        java.lang.Object[] objArray4 = cardanEulerSingularityException1.getArguments();
        java.lang.Object[] objArray5 = cardanEulerSingularityException1.getArguments();
        java.lang.String str6 = cardanEulerSingularityException1.getPattern();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException8 = new org.apache.commons.math.geometry.CardanEulerSingularityException(true);
        java.lang.Object[] objArray9 = cardanEulerSingularityException8.getArguments();
        java.lang.Throwable[] throwableArray10 = cardanEulerSingularityException8.getSuppressed();
        java.lang.Throwable[] throwableArray11 = cardanEulerSingularityException8.getSuppressed();
        cardanEulerSingularityException1.addSuppressed((java.lang.Throwable) cardanEulerSingularityException8);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException14 = new org.apache.commons.math.geometry.CardanEulerSingularityException(true);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException16 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        cardanEulerSingularityException14.addSuppressed((java.lang.Throwable) cardanEulerSingularityException16);
        java.lang.String str18 = cardanEulerSingularityException16.getPattern();
        java.lang.Throwable[] throwableArray19 = cardanEulerSingularityException16.getSuppressed();
        java.lang.String str20 = cardanEulerSingularityException16.getPattern();
        java.lang.Throwable[] throwableArray21 = cardanEulerSingularityException16.getSuppressed();
        cardanEulerSingularityException8.addSuppressed((java.lang.Throwable) cardanEulerSingularityException16);
        java.lang.Throwable[] throwableArray23 = cardanEulerSingularityException16.getSuppressed();
        java.lang.Object[] objArray24 = cardanEulerSingularityException16.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException26 = new org.apache.commons.math.geometry.CardanEulerSingularityException(true);
        java.lang.Object[] objArray27 = cardanEulerSingularityException26.getArguments();
        java.lang.Object[] objArray28 = cardanEulerSingularityException26.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException30 = new org.apache.commons.math.geometry.CardanEulerSingularityException(true);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException32 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        cardanEulerSingularityException30.addSuppressed((java.lang.Throwable) cardanEulerSingularityException32);
        java.lang.String str34 = cardanEulerSingularityException32.getPattern();
        java.lang.String str35 = cardanEulerSingularityException32.getPattern();
        cardanEulerSingularityException26.addSuppressed((java.lang.Throwable) cardanEulerSingularityException32);
        cardanEulerSingularityException16.addSuppressed((java.lang.Throwable) cardanEulerSingularityException32);
        org.junit.Assert.assertNotNull(objArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray2), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray2), "[]");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Euler angles singularity" + "'", str3, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray4), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray4), "[]");
        org.junit.Assert.assertNotNull(objArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray5), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray5), "[]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "Euler angles singularity" + "'", str6, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray9), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray9), "[]");
        org.junit.Assert.assertNotNull(throwableArray10);
        org.junit.Assert.assertNotNull(throwableArray11);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "Euler angles singularity" + "'", str18, "Euler angles singularity");
        org.junit.Assert.assertNotNull(throwableArray19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "Euler angles singularity" + "'", str20, "Euler angles singularity");
        org.junit.Assert.assertNotNull(throwableArray21);
        org.junit.Assert.assertNotNull(throwableArray23);
        org.junit.Assert.assertNotNull(objArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray24), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray24), "[]");
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray27), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray27), "[]");
        org.junit.Assert.assertNotNull(objArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray28), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray28), "[]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "Euler angles singularity" + "'", str34, "Euler angles singularity");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "Euler angles singularity" + "'", str35, "Euler angles singularity");
    }

    @Test
    public void test1711() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1711");
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException1 = new org.apache.commons.math.geometry.CardanEulerSingularityException(true);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException3 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        cardanEulerSingularityException1.addSuppressed((java.lang.Throwable) cardanEulerSingularityException3);
        java.lang.Throwable[] throwableArray5 = cardanEulerSingularityException1.getSuppressed();
        java.lang.Throwable[] throwableArray6 = cardanEulerSingularityException1.getSuppressed();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException8 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.String str9 = cardanEulerSingularityException8.getPattern();
        java.lang.Object[] objArray10 = cardanEulerSingularityException8.getArguments();
        java.lang.String str11 = cardanEulerSingularityException8.getPattern();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException13 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.String str14 = cardanEulerSingularityException13.getPattern();
        java.lang.Throwable[] throwableArray15 = cardanEulerSingularityException13.getSuppressed();
        cardanEulerSingularityException8.addSuppressed((java.lang.Throwable) cardanEulerSingularityException13);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException18 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.String str19 = cardanEulerSingularityException18.getPattern();
        java.lang.Object[] objArray20 = cardanEulerSingularityException18.getArguments();
        java.lang.String str21 = cardanEulerSingularityException18.getPattern();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException23 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.String str24 = cardanEulerSingularityException23.getPattern();
        java.lang.Throwable[] throwableArray25 = cardanEulerSingularityException23.getSuppressed();
        cardanEulerSingularityException18.addSuppressed((java.lang.Throwable) cardanEulerSingularityException23);
        cardanEulerSingularityException8.addSuppressed((java.lang.Throwable) cardanEulerSingularityException18);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException29 = new org.apache.commons.math.geometry.CardanEulerSingularityException(true);
        cardanEulerSingularityException8.addSuppressed((java.lang.Throwable) cardanEulerSingularityException29);
        cardanEulerSingularityException1.addSuppressed((java.lang.Throwable) cardanEulerSingularityException8);
        java.lang.Throwable[] throwableArray32 = cardanEulerSingularityException1.getSuppressed();
        java.lang.Object[] objArray33 = cardanEulerSingularityException1.getArguments();
        java.lang.String str34 = cardanEulerSingularityException1.getPattern();
        java.lang.Object[] objArray35 = cardanEulerSingularityException1.getArguments();
        org.junit.Assert.assertNotNull(throwableArray5);
        org.junit.Assert.assertNotNull(throwableArray6);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Euler angles singularity" + "'", str9, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray10), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray10), "[]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Euler angles singularity" + "'", str11, "Euler angles singularity");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "Euler angles singularity" + "'", str14, "Euler angles singularity");
        org.junit.Assert.assertNotNull(throwableArray15);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "Euler angles singularity" + "'", str19, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray20), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray20), "[]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "Euler angles singularity" + "'", str21, "Euler angles singularity");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "Euler angles singularity" + "'", str24, "Euler angles singularity");
        org.junit.Assert.assertNotNull(throwableArray25);
        org.junit.Assert.assertNotNull(throwableArray32);
        org.junit.Assert.assertNotNull(objArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray33), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray33), "[]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "Cardan angles singularity" + "'", str34, "Cardan angles singularity");
        org.junit.Assert.assertNotNull(objArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray35), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray35), "[]");
    }

    @Test
    public void test1712() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1712");
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException1 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.String str2 = cardanEulerSingularityException1.getPattern();
        java.lang.Object[] objArray3 = cardanEulerSingularityException1.getArguments();
        java.lang.String str4 = cardanEulerSingularityException1.getPattern();
        java.lang.Throwable[] throwableArray5 = cardanEulerSingularityException1.getSuppressed();
        java.lang.Object[] objArray6 = cardanEulerSingularityException1.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException8 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.String str9 = cardanEulerSingularityException8.getPattern();
        java.lang.Object[] objArray10 = cardanEulerSingularityException8.getArguments();
        java.lang.String str11 = cardanEulerSingularityException8.getPattern();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException13 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.String str14 = cardanEulerSingularityException13.getPattern();
        java.lang.Throwable[] throwableArray15 = cardanEulerSingularityException13.getSuppressed();
        cardanEulerSingularityException8.addSuppressed((java.lang.Throwable) cardanEulerSingularityException13);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException18 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.String str19 = cardanEulerSingularityException18.getPattern();
        java.lang.Object[] objArray20 = cardanEulerSingularityException18.getArguments();
        java.lang.String str21 = cardanEulerSingularityException18.getPattern();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException23 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.String str24 = cardanEulerSingularityException23.getPattern();
        java.lang.Throwable[] throwableArray25 = cardanEulerSingularityException23.getSuppressed();
        cardanEulerSingularityException18.addSuppressed((java.lang.Throwable) cardanEulerSingularityException23);
        cardanEulerSingularityException8.addSuppressed((java.lang.Throwable) cardanEulerSingularityException18);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException29 = new org.apache.commons.math.geometry.CardanEulerSingularityException(true);
        cardanEulerSingularityException8.addSuppressed((java.lang.Throwable) cardanEulerSingularityException29);
        java.lang.Object[] objArray31 = cardanEulerSingularityException8.getArguments();
        cardanEulerSingularityException1.addSuppressed((java.lang.Throwable) cardanEulerSingularityException8);
        java.lang.Object[] objArray33 = cardanEulerSingularityException1.getArguments();
        java.lang.Class<?> wildcardClass34 = cardanEulerSingularityException1.getClass();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "Euler angles singularity" + "'", str2, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray3), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray3), "[]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Euler angles singularity" + "'", str4, "Euler angles singularity");
        org.junit.Assert.assertNotNull(throwableArray5);
        org.junit.Assert.assertNotNull(objArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray6), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray6), "[]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Euler angles singularity" + "'", str9, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray10), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray10), "[]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Euler angles singularity" + "'", str11, "Euler angles singularity");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "Euler angles singularity" + "'", str14, "Euler angles singularity");
        org.junit.Assert.assertNotNull(throwableArray15);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "Euler angles singularity" + "'", str19, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray20), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray20), "[]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "Euler angles singularity" + "'", str21, "Euler angles singularity");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "Euler angles singularity" + "'", str24, "Euler angles singularity");
        org.junit.Assert.assertNotNull(throwableArray25);
        org.junit.Assert.assertNotNull(objArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray31), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray31), "[]");
        org.junit.Assert.assertNotNull(objArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray33), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray33), "[]");
        org.junit.Assert.assertNotNull(wildcardClass34);
    }

    @Test
    public void test1713() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1713");
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException1 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray2 = cardanEulerSingularityException1.getArguments();
        java.lang.Object[] objArray3 = cardanEulerSingularityException1.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException5 = new org.apache.commons.math.geometry.CardanEulerSingularityException(true);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException7 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        cardanEulerSingularityException5.addSuppressed((java.lang.Throwable) cardanEulerSingularityException7);
        cardanEulerSingularityException1.addSuppressed((java.lang.Throwable) cardanEulerSingularityException5);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException11 = new org.apache.commons.math.geometry.CardanEulerSingularityException(true);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException13 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        cardanEulerSingularityException11.addSuppressed((java.lang.Throwable) cardanEulerSingularityException13);
        java.lang.String str15 = cardanEulerSingularityException13.getPattern();
        java.lang.Throwable[] throwableArray16 = cardanEulerSingularityException13.getSuppressed();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException18 = new org.apache.commons.math.geometry.CardanEulerSingularityException(true);
        java.lang.String str19 = cardanEulerSingularityException18.getPattern();
        cardanEulerSingularityException13.addSuppressed((java.lang.Throwable) cardanEulerSingularityException18);
        cardanEulerSingularityException1.addSuppressed((java.lang.Throwable) cardanEulerSingularityException13);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException23 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray24 = cardanEulerSingularityException23.getArguments();
        java.lang.String str25 = cardanEulerSingularityException23.getPattern();
        java.lang.Object[] objArray26 = cardanEulerSingularityException23.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException28 = new org.apache.commons.math.geometry.CardanEulerSingularityException(true);
        java.lang.Object[] objArray29 = cardanEulerSingularityException28.getArguments();
        java.lang.Throwable[] throwableArray30 = cardanEulerSingularityException28.getSuppressed();
        java.lang.Throwable[] throwableArray31 = cardanEulerSingularityException28.getSuppressed();
        java.lang.Throwable[] throwableArray32 = cardanEulerSingularityException28.getSuppressed();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException34 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray35 = cardanEulerSingularityException34.getArguments();
        java.lang.Object[] objArray36 = cardanEulerSingularityException34.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException38 = new org.apache.commons.math.geometry.CardanEulerSingularityException(true);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException40 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        cardanEulerSingularityException38.addSuppressed((java.lang.Throwable) cardanEulerSingularityException40);
        cardanEulerSingularityException34.addSuppressed((java.lang.Throwable) cardanEulerSingularityException38);
        cardanEulerSingularityException28.addSuppressed((java.lang.Throwable) cardanEulerSingularityException34);
        cardanEulerSingularityException23.addSuppressed((java.lang.Throwable) cardanEulerSingularityException28);
        java.lang.String str45 = cardanEulerSingularityException28.getPattern();
        java.lang.Throwable[] throwableArray46 = cardanEulerSingularityException28.getSuppressed();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException48 = new org.apache.commons.math.geometry.CardanEulerSingularityException(true);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException50 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        cardanEulerSingularityException48.addSuppressed((java.lang.Throwable) cardanEulerSingularityException50);
        java.lang.Throwable[] throwableArray52 = cardanEulerSingularityException48.getSuppressed();
        java.lang.Throwable[] throwableArray53 = cardanEulerSingularityException48.getSuppressed();
        java.lang.Throwable[] throwableArray54 = cardanEulerSingularityException48.getSuppressed();
        java.lang.String str55 = cardanEulerSingularityException48.getPattern();
        java.lang.Throwable[] throwableArray56 = cardanEulerSingularityException48.getSuppressed();
        cardanEulerSingularityException28.addSuppressed((java.lang.Throwable) cardanEulerSingularityException48);
        java.lang.Throwable[] throwableArray58 = cardanEulerSingularityException48.getSuppressed();
        java.lang.Throwable[] throwableArray59 = cardanEulerSingularityException48.getSuppressed();
        cardanEulerSingularityException1.addSuppressed((java.lang.Throwable) cardanEulerSingularityException48);
        org.junit.Assert.assertNotNull(objArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray2), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray2), "[]");
        org.junit.Assert.assertNotNull(objArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray3), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray3), "[]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Euler angles singularity" + "'", str15, "Euler angles singularity");
        org.junit.Assert.assertNotNull(throwableArray16);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "Cardan angles singularity" + "'", str19, "Cardan angles singularity");
        org.junit.Assert.assertNotNull(objArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray24), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray24), "[]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "Euler angles singularity" + "'", str25, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray26), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray26), "[]");
        org.junit.Assert.assertNotNull(objArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray29), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray29), "[]");
        org.junit.Assert.assertNotNull(throwableArray30);
        org.junit.Assert.assertNotNull(throwableArray31);
        org.junit.Assert.assertNotNull(throwableArray32);
        org.junit.Assert.assertNotNull(objArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray35), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray35), "[]");
        org.junit.Assert.assertNotNull(objArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray36), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray36), "[]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "Cardan angles singularity" + "'", str45, "Cardan angles singularity");
        org.junit.Assert.assertNotNull(throwableArray46);
        org.junit.Assert.assertNotNull(throwableArray52);
        org.junit.Assert.assertNotNull(throwableArray53);
        org.junit.Assert.assertNotNull(throwableArray54);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "Cardan angles singularity" + "'", str55, "Cardan angles singularity");
        org.junit.Assert.assertNotNull(throwableArray56);
        org.junit.Assert.assertNotNull(throwableArray58);
        org.junit.Assert.assertNotNull(throwableArray59);
    }

    @Test
    public void test1714() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1714");
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException1 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray2 = cardanEulerSingularityException1.getArguments();
        java.lang.Object[] objArray3 = cardanEulerSingularityException1.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException5 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray6 = cardanEulerSingularityException5.getArguments();
        cardanEulerSingularityException1.addSuppressed((java.lang.Throwable) cardanEulerSingularityException5);
        java.lang.Object[] objArray8 = cardanEulerSingularityException5.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException10 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray11 = cardanEulerSingularityException10.getArguments();
        java.lang.Throwable[] throwableArray12 = cardanEulerSingularityException10.getSuppressed();
        java.lang.String str13 = cardanEulerSingularityException10.getPattern();
        cardanEulerSingularityException5.addSuppressed((java.lang.Throwable) cardanEulerSingularityException10);
        java.lang.Object[] objArray15 = cardanEulerSingularityException5.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException17 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray18 = cardanEulerSingularityException17.getArguments();
        java.lang.Object[] objArray19 = cardanEulerSingularityException17.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException21 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray22 = cardanEulerSingularityException21.getArguments();
        cardanEulerSingularityException17.addSuppressed((java.lang.Throwable) cardanEulerSingularityException21);
        java.lang.Throwable[] throwableArray24 = cardanEulerSingularityException17.getSuppressed();
        java.lang.String str25 = cardanEulerSingularityException17.getPattern();
        java.lang.String str26 = cardanEulerSingularityException17.getPattern();
        java.lang.String str27 = cardanEulerSingularityException17.getPattern();
        cardanEulerSingularityException5.addSuppressed((java.lang.Throwable) cardanEulerSingularityException17);
        java.lang.Throwable[] throwableArray29 = cardanEulerSingularityException17.getSuppressed();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException31 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray32 = cardanEulerSingularityException31.getArguments();
        java.lang.Object[] objArray33 = cardanEulerSingularityException31.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException35 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.String str36 = cardanEulerSingularityException35.getPattern();
        java.lang.Object[] objArray37 = cardanEulerSingularityException35.getArguments();
        java.lang.String str38 = cardanEulerSingularityException35.getPattern();
        java.lang.String str39 = cardanEulerSingularityException35.getPattern();
        java.lang.Object[] objArray40 = cardanEulerSingularityException35.getArguments();
        cardanEulerSingularityException31.addSuppressed((java.lang.Throwable) cardanEulerSingularityException35);
        java.lang.Throwable[] throwableArray42 = cardanEulerSingularityException35.getSuppressed();
        cardanEulerSingularityException17.addSuppressed((java.lang.Throwable) cardanEulerSingularityException35);
        org.junit.Assert.assertNotNull(objArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray2), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray2), "[]");
        org.junit.Assert.assertNotNull(objArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray3), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray3), "[]");
        org.junit.Assert.assertNotNull(objArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray6), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray6), "[]");
        org.junit.Assert.assertNotNull(objArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray8), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray8), "[]");
        org.junit.Assert.assertNotNull(objArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray11), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray11), "[]");
        org.junit.Assert.assertNotNull(throwableArray12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Euler angles singularity" + "'", str13, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray15), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray15), "[]");
        org.junit.Assert.assertNotNull(objArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray18), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray18), "[]");
        org.junit.Assert.assertNotNull(objArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray19), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray19), "[]");
        org.junit.Assert.assertNotNull(objArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray22), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray22), "[]");
        org.junit.Assert.assertNotNull(throwableArray24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "Euler angles singularity" + "'", str25, "Euler angles singularity");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "Euler angles singularity" + "'", str26, "Euler angles singularity");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "Euler angles singularity" + "'", str27, "Euler angles singularity");
        org.junit.Assert.assertNotNull(throwableArray29);
        org.junit.Assert.assertNotNull(objArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray32), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray32), "[]");
        org.junit.Assert.assertNotNull(objArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray33), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray33), "[]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "Euler angles singularity" + "'", str36, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray37), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray37), "[]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "Euler angles singularity" + "'", str38, "Euler angles singularity");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "Euler angles singularity" + "'", str39, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray40), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray40), "[]");
        org.junit.Assert.assertNotNull(throwableArray42);
    }

    @Test
    public void test1715() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1715");
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException1 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.String str2 = cardanEulerSingularityException1.getPattern();
        java.lang.Object[] objArray3 = cardanEulerSingularityException1.getArguments();
        java.lang.String str4 = cardanEulerSingularityException1.getPattern();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException6 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.String str7 = cardanEulerSingularityException6.getPattern();
        java.lang.Throwable[] throwableArray8 = cardanEulerSingularityException6.getSuppressed();
        cardanEulerSingularityException1.addSuppressed((java.lang.Throwable) cardanEulerSingularityException6);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException11 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.String str12 = cardanEulerSingularityException11.getPattern();
        java.lang.Object[] objArray13 = cardanEulerSingularityException11.getArguments();
        java.lang.String str14 = cardanEulerSingularityException11.getPattern();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException16 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.String str17 = cardanEulerSingularityException16.getPattern();
        java.lang.Throwable[] throwableArray18 = cardanEulerSingularityException16.getSuppressed();
        cardanEulerSingularityException11.addSuppressed((java.lang.Throwable) cardanEulerSingularityException16);
        cardanEulerSingularityException1.addSuppressed((java.lang.Throwable) cardanEulerSingularityException11);
        java.lang.String str21 = cardanEulerSingularityException1.getPattern();
        java.lang.Throwable[] throwableArray22 = cardanEulerSingularityException1.getSuppressed();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException24 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray25 = cardanEulerSingularityException24.getArguments();
        java.lang.Object[] objArray26 = cardanEulerSingularityException24.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException28 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray29 = cardanEulerSingularityException28.getArguments();
        cardanEulerSingularityException24.addSuppressed((java.lang.Throwable) cardanEulerSingularityException28);
        java.lang.Throwable[] throwableArray31 = cardanEulerSingularityException24.getSuppressed();
        java.lang.String str32 = cardanEulerSingularityException24.getPattern();
        java.lang.Object[] objArray33 = cardanEulerSingularityException24.getArguments();
        java.lang.Object[] objArray34 = cardanEulerSingularityException24.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException36 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray37 = cardanEulerSingularityException36.getArguments();
        java.lang.Object[] objArray38 = cardanEulerSingularityException36.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException40 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray41 = cardanEulerSingularityException40.getArguments();
        cardanEulerSingularityException36.addSuppressed((java.lang.Throwable) cardanEulerSingularityException40);
        java.lang.Throwable[] throwableArray43 = cardanEulerSingularityException36.getSuppressed();
        java.lang.String str44 = cardanEulerSingularityException36.getPattern();
        java.lang.String str45 = cardanEulerSingularityException36.getPattern();
        java.lang.String str46 = cardanEulerSingularityException36.getPattern();
        java.lang.Throwable[] throwableArray47 = cardanEulerSingularityException36.getSuppressed();
        cardanEulerSingularityException24.addSuppressed((java.lang.Throwable) cardanEulerSingularityException36);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException50 = new org.apache.commons.math.geometry.CardanEulerSingularityException(true);
        java.lang.Object[] objArray51 = cardanEulerSingularityException50.getArguments();
        java.lang.Object[] objArray52 = cardanEulerSingularityException50.getArguments();
        java.lang.String str53 = cardanEulerSingularityException50.getPattern();
        java.lang.String str54 = cardanEulerSingularityException50.getPattern();
        java.lang.String str55 = cardanEulerSingularityException50.getPattern();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException57 = new org.apache.commons.math.geometry.CardanEulerSingularityException(true);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException59 = new org.apache.commons.math.geometry.CardanEulerSingularityException(true);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException61 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        cardanEulerSingularityException59.addSuppressed((java.lang.Throwable) cardanEulerSingularityException61);
        java.lang.String str63 = cardanEulerSingularityException61.getPattern();
        java.lang.String str64 = cardanEulerSingularityException61.getPattern();
        cardanEulerSingularityException57.addSuppressed((java.lang.Throwable) cardanEulerSingularityException61);
        cardanEulerSingularityException50.addSuppressed((java.lang.Throwable) cardanEulerSingularityException61);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException68 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray69 = cardanEulerSingularityException68.getArguments();
        java.lang.Object[] objArray70 = cardanEulerSingularityException68.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException72 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray73 = cardanEulerSingularityException72.getArguments();
        cardanEulerSingularityException68.addSuppressed((java.lang.Throwable) cardanEulerSingularityException72);
        java.lang.String str75 = cardanEulerSingularityException68.getPattern();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException77 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray78 = cardanEulerSingularityException77.getArguments();
        java.lang.String str79 = cardanEulerSingularityException77.getPattern();
        cardanEulerSingularityException68.addSuppressed((java.lang.Throwable) cardanEulerSingularityException77);
        java.lang.Throwable[] throwableArray81 = cardanEulerSingularityException77.getSuppressed();
        java.lang.Object[] objArray82 = cardanEulerSingularityException77.getArguments();
        cardanEulerSingularityException50.addSuppressed((java.lang.Throwable) cardanEulerSingularityException77);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException85 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray86 = cardanEulerSingularityException85.getArguments();
        java.lang.Object[] objArray87 = cardanEulerSingularityException85.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException89 = new org.apache.commons.math.geometry.CardanEulerSingularityException(true);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException91 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        cardanEulerSingularityException89.addSuppressed((java.lang.Throwable) cardanEulerSingularityException91);
        cardanEulerSingularityException85.addSuppressed((java.lang.Throwable) cardanEulerSingularityException89);
        java.lang.Throwable[] throwableArray94 = cardanEulerSingularityException85.getSuppressed();
        cardanEulerSingularityException77.addSuppressed((java.lang.Throwable) cardanEulerSingularityException85);
        cardanEulerSingularityException24.addSuppressed((java.lang.Throwable) cardanEulerSingularityException77);
        cardanEulerSingularityException1.addSuppressed((java.lang.Throwable) cardanEulerSingularityException77);
        java.lang.Throwable[] throwableArray98 = cardanEulerSingularityException77.getSuppressed();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "Euler angles singularity" + "'", str2, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray3), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray3), "[]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Euler angles singularity" + "'", str4, "Euler angles singularity");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Euler angles singularity" + "'", str7, "Euler angles singularity");
        org.junit.Assert.assertNotNull(throwableArray8);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Euler angles singularity" + "'", str12, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray13), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray13), "[]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "Euler angles singularity" + "'", str14, "Euler angles singularity");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "Euler angles singularity" + "'", str17, "Euler angles singularity");
        org.junit.Assert.assertNotNull(throwableArray18);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "Euler angles singularity" + "'", str21, "Euler angles singularity");
        org.junit.Assert.assertNotNull(throwableArray22);
        org.junit.Assert.assertNotNull(objArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray25), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray25), "[]");
        org.junit.Assert.assertNotNull(objArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray26), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray26), "[]");
        org.junit.Assert.assertNotNull(objArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray29), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray29), "[]");
        org.junit.Assert.assertNotNull(throwableArray31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "Euler angles singularity" + "'", str32, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray33), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray33), "[]");
        org.junit.Assert.assertNotNull(objArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray34), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray34), "[]");
        org.junit.Assert.assertNotNull(objArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray37), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray37), "[]");
        org.junit.Assert.assertNotNull(objArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray38), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray38), "[]");
        org.junit.Assert.assertNotNull(objArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray41), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray41), "[]");
        org.junit.Assert.assertNotNull(throwableArray43);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "Euler angles singularity" + "'", str44, "Euler angles singularity");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "Euler angles singularity" + "'", str45, "Euler angles singularity");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "Euler angles singularity" + "'", str46, "Euler angles singularity");
        org.junit.Assert.assertNotNull(throwableArray47);
        org.junit.Assert.assertNotNull(objArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray51), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray51), "[]");
        org.junit.Assert.assertNotNull(objArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray52), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray52), "[]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "Cardan angles singularity" + "'", str53, "Cardan angles singularity");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "Cardan angles singularity" + "'", str54, "Cardan angles singularity");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "Cardan angles singularity" + "'", str55, "Cardan angles singularity");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "Euler angles singularity" + "'", str63, "Euler angles singularity");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "Euler angles singularity" + "'", str64, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray69), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray69), "[]");
        org.junit.Assert.assertNotNull(objArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray70), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray70), "[]");
        org.junit.Assert.assertNotNull(objArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray73), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray73), "[]");
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "Euler angles singularity" + "'", str75, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray78), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray78), "[]");
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "Euler angles singularity" + "'", str79, "Euler angles singularity");
        org.junit.Assert.assertNotNull(throwableArray81);
        org.junit.Assert.assertNotNull(objArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray82), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray82), "[]");
        org.junit.Assert.assertNotNull(objArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray86), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray86), "[]");
        org.junit.Assert.assertNotNull(objArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray87), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray87), "[]");
        org.junit.Assert.assertNotNull(throwableArray94);
        org.junit.Assert.assertNotNull(throwableArray98);
    }

    @Test
    public void test1716() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1716");
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException1 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray2 = cardanEulerSingularityException1.getArguments();
        java.lang.Object[] objArray3 = cardanEulerSingularityException1.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException5 = new org.apache.commons.math.geometry.CardanEulerSingularityException(true);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException7 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        cardanEulerSingularityException5.addSuppressed((java.lang.Throwable) cardanEulerSingularityException7);
        cardanEulerSingularityException1.addSuppressed((java.lang.Throwable) cardanEulerSingularityException5);
        java.lang.String str10 = cardanEulerSingularityException1.getPattern();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException12 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray13 = cardanEulerSingularityException12.getArguments();
        java.lang.Object[] objArray14 = cardanEulerSingularityException12.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException16 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray17 = cardanEulerSingularityException16.getArguments();
        cardanEulerSingularityException12.addSuppressed((java.lang.Throwable) cardanEulerSingularityException16);
        java.lang.Throwable[] throwableArray19 = cardanEulerSingularityException12.getSuppressed();
        java.lang.String str20 = cardanEulerSingularityException12.getPattern();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException22 = new org.apache.commons.math.geometry.CardanEulerSingularityException(true);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException24 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        cardanEulerSingularityException22.addSuppressed((java.lang.Throwable) cardanEulerSingularityException24);
        java.lang.String str26 = cardanEulerSingularityException24.getPattern();
        java.lang.Object[] objArray27 = cardanEulerSingularityException24.getArguments();
        java.lang.Object[] objArray28 = cardanEulerSingularityException24.getArguments();
        cardanEulerSingularityException12.addSuppressed((java.lang.Throwable) cardanEulerSingularityException24);
        java.lang.Throwable[] throwableArray30 = cardanEulerSingularityException12.getSuppressed();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException32 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.String str33 = cardanEulerSingularityException32.getPattern();
        java.lang.Object[] objArray34 = cardanEulerSingularityException32.getArguments();
        java.lang.String str35 = cardanEulerSingularityException32.getPattern();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException37 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.String str38 = cardanEulerSingularityException37.getPattern();
        java.lang.Throwable[] throwableArray39 = cardanEulerSingularityException37.getSuppressed();
        cardanEulerSingularityException32.addSuppressed((java.lang.Throwable) cardanEulerSingularityException37);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException42 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.String str43 = cardanEulerSingularityException42.getPattern();
        java.lang.Object[] objArray44 = cardanEulerSingularityException42.getArguments();
        java.lang.String str45 = cardanEulerSingularityException42.getPattern();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException47 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.String str48 = cardanEulerSingularityException47.getPattern();
        java.lang.Throwable[] throwableArray49 = cardanEulerSingularityException47.getSuppressed();
        cardanEulerSingularityException42.addSuppressed((java.lang.Throwable) cardanEulerSingularityException47);
        cardanEulerSingularityException32.addSuppressed((java.lang.Throwable) cardanEulerSingularityException42);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException53 = new org.apache.commons.math.geometry.CardanEulerSingularityException(true);
        cardanEulerSingularityException32.addSuppressed((java.lang.Throwable) cardanEulerSingularityException53);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException56 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray57 = cardanEulerSingularityException56.getArguments();
        java.lang.Object[] objArray58 = cardanEulerSingularityException56.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException60 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray61 = cardanEulerSingularityException60.getArguments();
        cardanEulerSingularityException56.addSuppressed((java.lang.Throwable) cardanEulerSingularityException60);
        java.lang.Object[] objArray63 = cardanEulerSingularityException60.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException65 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray66 = cardanEulerSingularityException65.getArguments();
        java.lang.Throwable[] throwableArray67 = cardanEulerSingularityException65.getSuppressed();
        java.lang.String str68 = cardanEulerSingularityException65.getPattern();
        cardanEulerSingularityException60.addSuppressed((java.lang.Throwable) cardanEulerSingularityException65);
        java.lang.Object[] objArray70 = cardanEulerSingularityException65.getArguments();
        cardanEulerSingularityException32.addSuppressed((java.lang.Throwable) cardanEulerSingularityException65);
        cardanEulerSingularityException12.addSuppressed((java.lang.Throwable) cardanEulerSingularityException32);
        cardanEulerSingularityException1.addSuppressed((java.lang.Throwable) cardanEulerSingularityException12);
        org.junit.Assert.assertNotNull(objArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray2), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray2), "[]");
        org.junit.Assert.assertNotNull(objArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray3), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray3), "[]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Euler angles singularity" + "'", str10, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray13), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray13), "[]");
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[]");
        org.junit.Assert.assertNotNull(objArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray17), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray17), "[]");
        org.junit.Assert.assertNotNull(throwableArray19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "Euler angles singularity" + "'", str20, "Euler angles singularity");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "Euler angles singularity" + "'", str26, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray27), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray27), "[]");
        org.junit.Assert.assertNotNull(objArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray28), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray28), "[]");
        org.junit.Assert.assertNotNull(throwableArray30);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "Euler angles singularity" + "'", str33, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray34), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray34), "[]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "Euler angles singularity" + "'", str35, "Euler angles singularity");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "Euler angles singularity" + "'", str38, "Euler angles singularity");
        org.junit.Assert.assertNotNull(throwableArray39);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "Euler angles singularity" + "'", str43, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray44), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray44), "[]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "Euler angles singularity" + "'", str45, "Euler angles singularity");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "Euler angles singularity" + "'", str48, "Euler angles singularity");
        org.junit.Assert.assertNotNull(throwableArray49);
        org.junit.Assert.assertNotNull(objArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray57), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray57), "[]");
        org.junit.Assert.assertNotNull(objArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray58), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray58), "[]");
        org.junit.Assert.assertNotNull(objArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray61), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray61), "[]");
        org.junit.Assert.assertNotNull(objArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray63), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray63), "[]");
        org.junit.Assert.assertNotNull(objArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray66), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray66), "[]");
        org.junit.Assert.assertNotNull(throwableArray67);
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "Euler angles singularity" + "'", str68, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray70), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray70), "[]");
    }

    @Test
    public void test1717() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1717");
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException1 = new org.apache.commons.math.geometry.CardanEulerSingularityException(true);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException3 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        cardanEulerSingularityException1.addSuppressed((java.lang.Throwable) cardanEulerSingularityException3);
        java.lang.String str5 = cardanEulerSingularityException3.getPattern();
        java.lang.Throwable[] throwableArray6 = cardanEulerSingularityException3.getSuppressed();
        java.lang.String str7 = cardanEulerSingularityException3.getPattern();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException9 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray10 = cardanEulerSingularityException9.getArguments();
        java.lang.Object[] objArray11 = cardanEulerSingularityException9.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException13 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray14 = cardanEulerSingularityException13.getArguments();
        cardanEulerSingularityException9.addSuppressed((java.lang.Throwable) cardanEulerSingularityException13);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException17 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray18 = cardanEulerSingularityException17.getArguments();
        java.lang.Object[] objArray19 = cardanEulerSingularityException17.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException21 = new org.apache.commons.math.geometry.CardanEulerSingularityException(true);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException23 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        cardanEulerSingularityException21.addSuppressed((java.lang.Throwable) cardanEulerSingularityException23);
        cardanEulerSingularityException17.addSuppressed((java.lang.Throwable) cardanEulerSingularityException21);
        java.lang.Throwable[] throwableArray26 = cardanEulerSingularityException17.getSuppressed();
        cardanEulerSingularityException13.addSuppressed((java.lang.Throwable) cardanEulerSingularityException17);
        java.lang.Object[] objArray28 = cardanEulerSingularityException17.getArguments();
        cardanEulerSingularityException3.addSuppressed((java.lang.Throwable) cardanEulerSingularityException17);
        java.lang.String str30 = cardanEulerSingularityException3.getPattern();
        java.lang.Class<?> wildcardClass31 = cardanEulerSingularityException3.getClass();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Euler angles singularity" + "'", str5, "Euler angles singularity");
        org.junit.Assert.assertNotNull(throwableArray6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Euler angles singularity" + "'", str7, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray10), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray10), "[]");
        org.junit.Assert.assertNotNull(objArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray11), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray11), "[]");
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[]");
        org.junit.Assert.assertNotNull(objArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray18), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray18), "[]");
        org.junit.Assert.assertNotNull(objArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray19), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray19), "[]");
        org.junit.Assert.assertNotNull(throwableArray26);
        org.junit.Assert.assertNotNull(objArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray28), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray28), "[]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "Euler angles singularity" + "'", str30, "Euler angles singularity");
        org.junit.Assert.assertNotNull(wildcardClass31);
    }

    @Test
    public void test1718() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1718");
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException1 = new org.apache.commons.math.geometry.CardanEulerSingularityException(true);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException3 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        cardanEulerSingularityException1.addSuppressed((java.lang.Throwable) cardanEulerSingularityException3);
        java.lang.String str5 = cardanEulerSingularityException3.getPattern();
        java.lang.Object[] objArray6 = cardanEulerSingularityException3.getArguments();
        java.lang.Throwable[] throwableArray7 = cardanEulerSingularityException3.getSuppressed();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException9 = new org.apache.commons.math.geometry.CardanEulerSingularityException(true);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException11 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        cardanEulerSingularityException9.addSuppressed((java.lang.Throwable) cardanEulerSingularityException11);
        java.lang.String str13 = cardanEulerSingularityException11.getPattern();
        java.lang.Throwable[] throwableArray14 = cardanEulerSingularityException11.getSuppressed();
        java.lang.String str15 = cardanEulerSingularityException11.getPattern();
        java.lang.Throwable[] throwableArray16 = cardanEulerSingularityException11.getSuppressed();
        java.lang.String str17 = cardanEulerSingularityException11.getPattern();
        java.lang.String str18 = cardanEulerSingularityException11.getPattern();
        java.lang.Throwable[] throwableArray19 = cardanEulerSingularityException11.getSuppressed();
        java.lang.Object[] objArray20 = cardanEulerSingularityException11.getArguments();
        cardanEulerSingularityException3.addSuppressed((java.lang.Throwable) cardanEulerSingularityException11);
        java.lang.Object[] objArray22 = cardanEulerSingularityException11.getArguments();
        java.lang.Throwable[] throwableArray23 = cardanEulerSingularityException11.getSuppressed();
        java.lang.Throwable[] throwableArray24 = cardanEulerSingularityException11.getSuppressed();
        java.lang.Class<?> wildcardClass25 = throwableArray24.getClass();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Euler angles singularity" + "'", str5, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray6), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray6), "[]");
        org.junit.Assert.assertNotNull(throwableArray7);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Euler angles singularity" + "'", str13, "Euler angles singularity");
        org.junit.Assert.assertNotNull(throwableArray14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Euler angles singularity" + "'", str15, "Euler angles singularity");
        org.junit.Assert.assertNotNull(throwableArray16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "Euler angles singularity" + "'", str17, "Euler angles singularity");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "Euler angles singularity" + "'", str18, "Euler angles singularity");
        org.junit.Assert.assertNotNull(throwableArray19);
        org.junit.Assert.assertNotNull(objArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray20), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray20), "[]");
        org.junit.Assert.assertNotNull(objArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray22), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray22), "[]");
        org.junit.Assert.assertNotNull(throwableArray23);
        org.junit.Assert.assertNotNull(throwableArray24);
        org.junit.Assert.assertNotNull(wildcardClass25);
    }

    @Test
    public void test1719() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1719");
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException1 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray2 = cardanEulerSingularityException1.getArguments();
        java.lang.Object[] objArray3 = cardanEulerSingularityException1.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException5 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray6 = cardanEulerSingularityException5.getArguments();
        cardanEulerSingularityException1.addSuppressed((java.lang.Throwable) cardanEulerSingularityException5);
        java.lang.Throwable[] throwableArray8 = cardanEulerSingularityException5.getSuppressed();
        java.lang.String str9 = cardanEulerSingularityException5.getPattern();
        java.lang.Throwable[] throwableArray10 = cardanEulerSingularityException5.getSuppressed();
        java.lang.Throwable[] throwableArray11 = cardanEulerSingularityException5.getSuppressed();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException13 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray14 = cardanEulerSingularityException13.getArguments();
        java.lang.Object[] objArray15 = cardanEulerSingularityException13.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException17 = new org.apache.commons.math.geometry.CardanEulerSingularityException(true);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException19 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        cardanEulerSingularityException17.addSuppressed((java.lang.Throwable) cardanEulerSingularityException19);
        cardanEulerSingularityException13.addSuppressed((java.lang.Throwable) cardanEulerSingularityException17);
        java.lang.Object[] objArray22 = cardanEulerSingularityException13.getArguments();
        cardanEulerSingularityException5.addSuppressed((java.lang.Throwable) cardanEulerSingularityException13);
        java.lang.String str24 = cardanEulerSingularityException5.toString();
        org.junit.Assert.assertNotNull(objArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray2), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray2), "[]");
        org.junit.Assert.assertNotNull(objArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray3), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray3), "[]");
        org.junit.Assert.assertNotNull(objArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray6), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray6), "[]");
        org.junit.Assert.assertNotNull(throwableArray8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Euler angles singularity" + "'", str9, "Euler angles singularity");
        org.junit.Assert.assertNotNull(throwableArray10);
        org.junit.Assert.assertNotNull(throwableArray11);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[]");
        org.junit.Assert.assertNotNull(objArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray15), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray15), "[]");
        org.junit.Assert.assertNotNull(objArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray22), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray22), "[]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "org.apache.commons.math.geometry.CardanEulerSingularityException: Euler angles singularity" + "'", str24, "org.apache.commons.math.geometry.CardanEulerSingularityException: Euler angles singularity");
    }

    @Test
    public void test1720() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1720");
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException1 = new org.apache.commons.math.geometry.CardanEulerSingularityException(true);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException3 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        cardanEulerSingularityException1.addSuppressed((java.lang.Throwable) cardanEulerSingularityException3);
        java.lang.String str5 = cardanEulerSingularityException3.getPattern();
        java.lang.Object[] objArray6 = cardanEulerSingularityException3.getArguments();
        java.lang.Throwable[] throwableArray7 = cardanEulerSingularityException3.getSuppressed();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException9 = new org.apache.commons.math.geometry.CardanEulerSingularityException(true);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException11 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        cardanEulerSingularityException9.addSuppressed((java.lang.Throwable) cardanEulerSingularityException11);
        java.lang.String str13 = cardanEulerSingularityException11.getPattern();
        java.lang.Throwable[] throwableArray14 = cardanEulerSingularityException11.getSuppressed();
        java.lang.String str15 = cardanEulerSingularityException11.getPattern();
        java.lang.Throwable[] throwableArray16 = cardanEulerSingularityException11.getSuppressed();
        java.lang.String str17 = cardanEulerSingularityException11.getPattern();
        java.lang.String str18 = cardanEulerSingularityException11.getPattern();
        java.lang.Throwable[] throwableArray19 = cardanEulerSingularityException11.getSuppressed();
        java.lang.Object[] objArray20 = cardanEulerSingularityException11.getArguments();
        cardanEulerSingularityException3.addSuppressed((java.lang.Throwable) cardanEulerSingularityException11);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException23 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray24 = cardanEulerSingularityException23.getArguments();
        java.lang.String str25 = cardanEulerSingularityException23.getPattern();
        java.lang.Object[] objArray26 = cardanEulerSingularityException23.getArguments();
        java.lang.Object[] objArray27 = cardanEulerSingularityException23.getArguments();
        java.lang.String str28 = cardanEulerSingularityException23.getPattern();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException30 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        cardanEulerSingularityException23.addSuppressed((java.lang.Throwable) cardanEulerSingularityException30);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException33 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray34 = cardanEulerSingularityException33.getArguments();
        java.lang.String str35 = cardanEulerSingularityException33.getPattern();
        java.lang.Object[] objArray36 = cardanEulerSingularityException33.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException38 = new org.apache.commons.math.geometry.CardanEulerSingularityException(true);
        java.lang.Object[] objArray39 = cardanEulerSingularityException38.getArguments();
        java.lang.Object[] objArray40 = cardanEulerSingularityException38.getArguments();
        java.lang.String str41 = cardanEulerSingularityException38.getPattern();
        java.lang.String str42 = cardanEulerSingularityException38.getPattern();
        cardanEulerSingularityException33.addSuppressed((java.lang.Throwable) cardanEulerSingularityException38);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException45 = new org.apache.commons.math.geometry.CardanEulerSingularityException(true);
        java.lang.Object[] objArray46 = cardanEulerSingularityException45.getArguments();
        java.lang.Throwable[] throwableArray47 = cardanEulerSingularityException45.getSuppressed();
        java.lang.Throwable[] throwableArray48 = cardanEulerSingularityException45.getSuppressed();
        java.lang.Throwable[] throwableArray49 = cardanEulerSingularityException45.getSuppressed();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException51 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray52 = cardanEulerSingularityException51.getArguments();
        java.lang.Object[] objArray53 = cardanEulerSingularityException51.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException55 = new org.apache.commons.math.geometry.CardanEulerSingularityException(true);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException57 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        cardanEulerSingularityException55.addSuppressed((java.lang.Throwable) cardanEulerSingularityException57);
        cardanEulerSingularityException51.addSuppressed((java.lang.Throwable) cardanEulerSingularityException55);
        cardanEulerSingularityException45.addSuppressed((java.lang.Throwable) cardanEulerSingularityException51);
        java.lang.Throwable[] throwableArray61 = cardanEulerSingularityException45.getSuppressed();
        cardanEulerSingularityException38.addSuppressed((java.lang.Throwable) cardanEulerSingularityException45);
        java.lang.String str63 = cardanEulerSingularityException45.getPattern();
        cardanEulerSingularityException23.addSuppressed((java.lang.Throwable) cardanEulerSingularityException45);
        cardanEulerSingularityException3.addSuppressed((java.lang.Throwable) cardanEulerSingularityException23);
        java.lang.String str66 = cardanEulerSingularityException3.getPattern();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException68 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray69 = cardanEulerSingularityException68.getArguments();
        java.lang.String str70 = cardanEulerSingularityException68.getPattern();
        java.lang.Object[] objArray71 = cardanEulerSingularityException68.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException73 = new org.apache.commons.math.geometry.CardanEulerSingularityException(true);
        java.lang.Object[] objArray74 = cardanEulerSingularityException73.getArguments();
        java.lang.Object[] objArray75 = cardanEulerSingularityException73.getArguments();
        java.lang.String str76 = cardanEulerSingularityException73.getPattern();
        java.lang.String str77 = cardanEulerSingularityException73.getPattern();
        cardanEulerSingularityException68.addSuppressed((java.lang.Throwable) cardanEulerSingularityException73);
        java.lang.Throwable[] throwableArray79 = cardanEulerSingularityException73.getSuppressed();
        java.lang.Object[] objArray80 = cardanEulerSingularityException73.getArguments();
        java.lang.String str81 = cardanEulerSingularityException73.getPattern();
        java.lang.String str82 = cardanEulerSingularityException73.getPattern();
        cardanEulerSingularityException3.addSuppressed((java.lang.Throwable) cardanEulerSingularityException73);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Euler angles singularity" + "'", str5, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray6), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray6), "[]");
        org.junit.Assert.assertNotNull(throwableArray7);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Euler angles singularity" + "'", str13, "Euler angles singularity");
        org.junit.Assert.assertNotNull(throwableArray14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Euler angles singularity" + "'", str15, "Euler angles singularity");
        org.junit.Assert.assertNotNull(throwableArray16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "Euler angles singularity" + "'", str17, "Euler angles singularity");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "Euler angles singularity" + "'", str18, "Euler angles singularity");
        org.junit.Assert.assertNotNull(throwableArray19);
        org.junit.Assert.assertNotNull(objArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray20), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray20), "[]");
        org.junit.Assert.assertNotNull(objArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray24), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray24), "[]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "Euler angles singularity" + "'", str25, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray26), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray26), "[]");
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray27), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray27), "[]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "Euler angles singularity" + "'", str28, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray34), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray34), "[]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "Euler angles singularity" + "'", str35, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray36), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray36), "[]");
        org.junit.Assert.assertNotNull(objArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray39), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray39), "[]");
        org.junit.Assert.assertNotNull(objArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray40), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray40), "[]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "Cardan angles singularity" + "'", str41, "Cardan angles singularity");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "Cardan angles singularity" + "'", str42, "Cardan angles singularity");
        org.junit.Assert.assertNotNull(objArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray46), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray46), "[]");
        org.junit.Assert.assertNotNull(throwableArray47);
        org.junit.Assert.assertNotNull(throwableArray48);
        org.junit.Assert.assertNotNull(throwableArray49);
        org.junit.Assert.assertNotNull(objArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray52), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray52), "[]");
        org.junit.Assert.assertNotNull(objArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray53), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray53), "[]");
        org.junit.Assert.assertNotNull(throwableArray61);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "Cardan angles singularity" + "'", str63, "Cardan angles singularity");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "Euler angles singularity" + "'", str66, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray69), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray69), "[]");
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "Euler angles singularity" + "'", str70, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray71), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray71), "[]");
        org.junit.Assert.assertNotNull(objArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray74), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray74), "[]");
        org.junit.Assert.assertNotNull(objArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray75), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray75), "[]");
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "Cardan angles singularity" + "'", str76, "Cardan angles singularity");
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "Cardan angles singularity" + "'", str77, "Cardan angles singularity");
        org.junit.Assert.assertNotNull(throwableArray79);
        org.junit.Assert.assertNotNull(objArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray80), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray80), "[]");
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "Cardan angles singularity" + "'", str81, "Cardan angles singularity");
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "Cardan angles singularity" + "'", str82, "Cardan angles singularity");
    }

    @Test
    public void test1721() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1721");
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException1 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.String str2 = cardanEulerSingularityException1.getPattern();
        java.lang.Object[] objArray3 = cardanEulerSingularityException1.getArguments();
        java.lang.String str4 = cardanEulerSingularityException1.getPattern();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException6 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.String str7 = cardanEulerSingularityException6.getPattern();
        java.lang.Throwable[] throwableArray8 = cardanEulerSingularityException6.getSuppressed();
        cardanEulerSingularityException1.addSuppressed((java.lang.Throwable) cardanEulerSingularityException6);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException11 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.String str12 = cardanEulerSingularityException11.getPattern();
        java.lang.Object[] objArray13 = cardanEulerSingularityException11.getArguments();
        java.lang.String str14 = cardanEulerSingularityException11.getPattern();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException16 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.String str17 = cardanEulerSingularityException16.getPattern();
        java.lang.Throwable[] throwableArray18 = cardanEulerSingularityException16.getSuppressed();
        cardanEulerSingularityException11.addSuppressed((java.lang.Throwable) cardanEulerSingularityException16);
        cardanEulerSingularityException1.addSuppressed((java.lang.Throwable) cardanEulerSingularityException11);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException22 = new org.apache.commons.math.geometry.CardanEulerSingularityException(true);
        cardanEulerSingularityException1.addSuppressed((java.lang.Throwable) cardanEulerSingularityException22);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException25 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray26 = cardanEulerSingularityException25.getArguments();
        java.lang.Object[] objArray27 = cardanEulerSingularityException25.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException29 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray30 = cardanEulerSingularityException29.getArguments();
        cardanEulerSingularityException25.addSuppressed((java.lang.Throwable) cardanEulerSingularityException29);
        java.lang.Object[] objArray32 = cardanEulerSingularityException29.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException34 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray35 = cardanEulerSingularityException34.getArguments();
        java.lang.Throwable[] throwableArray36 = cardanEulerSingularityException34.getSuppressed();
        java.lang.String str37 = cardanEulerSingularityException34.getPattern();
        cardanEulerSingularityException29.addSuppressed((java.lang.Throwable) cardanEulerSingularityException34);
        java.lang.Object[] objArray39 = cardanEulerSingularityException34.getArguments();
        cardanEulerSingularityException1.addSuppressed((java.lang.Throwable) cardanEulerSingularityException34);
        java.lang.Throwable[] throwableArray41 = cardanEulerSingularityException1.getSuppressed();
        java.lang.Class<?> wildcardClass42 = cardanEulerSingularityException1.getClass();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "Euler angles singularity" + "'", str2, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray3), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray3), "[]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Euler angles singularity" + "'", str4, "Euler angles singularity");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Euler angles singularity" + "'", str7, "Euler angles singularity");
        org.junit.Assert.assertNotNull(throwableArray8);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Euler angles singularity" + "'", str12, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray13), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray13), "[]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "Euler angles singularity" + "'", str14, "Euler angles singularity");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "Euler angles singularity" + "'", str17, "Euler angles singularity");
        org.junit.Assert.assertNotNull(throwableArray18);
        org.junit.Assert.assertNotNull(objArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray26), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray26), "[]");
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray27), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray27), "[]");
        org.junit.Assert.assertNotNull(objArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray30), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray30), "[]");
        org.junit.Assert.assertNotNull(objArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray32), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray32), "[]");
        org.junit.Assert.assertNotNull(objArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray35), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray35), "[]");
        org.junit.Assert.assertNotNull(throwableArray36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "Euler angles singularity" + "'", str37, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray39), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray39), "[]");
        org.junit.Assert.assertNotNull(throwableArray41);
        org.junit.Assert.assertNotNull(wildcardClass42);
    }

    @Test
    public void test1722() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1722");
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException1 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray2 = cardanEulerSingularityException1.getArguments();
        java.lang.Object[] objArray3 = cardanEulerSingularityException1.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException5 = new org.apache.commons.math.geometry.CardanEulerSingularityException(true);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException7 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        cardanEulerSingularityException5.addSuppressed((java.lang.Throwable) cardanEulerSingularityException7);
        cardanEulerSingularityException1.addSuppressed((java.lang.Throwable) cardanEulerSingularityException5);
        java.lang.Object[] objArray10 = cardanEulerSingularityException5.getArguments();
        java.lang.Throwable[] throwableArray11 = cardanEulerSingularityException5.getSuppressed();
        java.lang.String str12 = cardanEulerSingularityException5.getPattern();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException14 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray15 = cardanEulerSingularityException14.getArguments();
        java.lang.Object[] objArray16 = cardanEulerSingularityException14.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException18 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray19 = cardanEulerSingularityException18.getArguments();
        cardanEulerSingularityException14.addSuppressed((java.lang.Throwable) cardanEulerSingularityException18);
        java.lang.Throwable[] throwableArray21 = cardanEulerSingularityException18.getSuppressed();
        java.lang.Object[] objArray22 = cardanEulerSingularityException18.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException24 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray25 = cardanEulerSingularityException24.getArguments();
        java.lang.Object[] objArray26 = cardanEulerSingularityException24.getArguments();
        java.lang.Object[] objArray27 = cardanEulerSingularityException24.getArguments();
        cardanEulerSingularityException18.addSuppressed((java.lang.Throwable) cardanEulerSingularityException24);
        java.lang.Object[] objArray29 = cardanEulerSingularityException24.getArguments();
        java.lang.Throwable[] throwableArray30 = cardanEulerSingularityException24.getSuppressed();
        cardanEulerSingularityException5.addSuppressed((java.lang.Throwable) cardanEulerSingularityException24);
        java.lang.String str32 = cardanEulerSingularityException24.getPattern();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException34 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray35 = cardanEulerSingularityException34.getArguments();
        java.lang.Object[] objArray36 = cardanEulerSingularityException34.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException38 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray39 = cardanEulerSingularityException38.getArguments();
        cardanEulerSingularityException34.addSuppressed((java.lang.Throwable) cardanEulerSingularityException38);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException42 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray43 = cardanEulerSingularityException42.getArguments();
        java.lang.Object[] objArray44 = cardanEulerSingularityException42.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException46 = new org.apache.commons.math.geometry.CardanEulerSingularityException(true);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException48 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        cardanEulerSingularityException46.addSuppressed((java.lang.Throwable) cardanEulerSingularityException48);
        cardanEulerSingularityException42.addSuppressed((java.lang.Throwable) cardanEulerSingularityException46);
        java.lang.Throwable[] throwableArray51 = cardanEulerSingularityException42.getSuppressed();
        cardanEulerSingularityException38.addSuppressed((java.lang.Throwable) cardanEulerSingularityException42);
        java.lang.Throwable[] throwableArray53 = cardanEulerSingularityException38.getSuppressed();
        java.lang.Throwable[] throwableArray54 = cardanEulerSingularityException38.getSuppressed();
        java.lang.String str55 = cardanEulerSingularityException38.getPattern();
        java.lang.String str56 = cardanEulerSingularityException38.getPattern();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException58 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray59 = cardanEulerSingularityException58.getArguments();
        java.lang.Object[] objArray60 = cardanEulerSingularityException58.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException62 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray63 = cardanEulerSingularityException62.getArguments();
        cardanEulerSingularityException58.addSuppressed((java.lang.Throwable) cardanEulerSingularityException62);
        java.lang.Object[] objArray65 = cardanEulerSingularityException62.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException67 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray68 = cardanEulerSingularityException67.getArguments();
        java.lang.Throwable[] throwableArray69 = cardanEulerSingularityException67.getSuppressed();
        java.lang.String str70 = cardanEulerSingularityException67.getPattern();
        cardanEulerSingularityException62.addSuppressed((java.lang.Throwable) cardanEulerSingularityException67);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException73 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray74 = cardanEulerSingularityException73.getArguments();
        java.lang.Object[] objArray75 = cardanEulerSingularityException73.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException77 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray78 = cardanEulerSingularityException77.getArguments();
        cardanEulerSingularityException73.addSuppressed((java.lang.Throwable) cardanEulerSingularityException77);
        java.lang.Throwable[] throwableArray80 = cardanEulerSingularityException73.getSuppressed();
        java.lang.String str81 = cardanEulerSingularityException73.getPattern();
        cardanEulerSingularityException62.addSuppressed((java.lang.Throwable) cardanEulerSingularityException73);
        cardanEulerSingularityException38.addSuppressed((java.lang.Throwable) cardanEulerSingularityException62);
        cardanEulerSingularityException24.addSuppressed((java.lang.Throwable) cardanEulerSingularityException62);
        java.lang.Throwable[] throwableArray85 = cardanEulerSingularityException62.getSuppressed();
        org.junit.Assert.assertNotNull(objArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray2), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray2), "[]");
        org.junit.Assert.assertNotNull(objArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray3), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray3), "[]");
        org.junit.Assert.assertNotNull(objArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray10), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray10), "[]");
        org.junit.Assert.assertNotNull(throwableArray11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Cardan angles singularity" + "'", str12, "Cardan angles singularity");
        org.junit.Assert.assertNotNull(objArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray15), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray15), "[]");
        org.junit.Assert.assertNotNull(objArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray16), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray16), "[]");
        org.junit.Assert.assertNotNull(objArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray19), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray19), "[]");
        org.junit.Assert.assertNotNull(throwableArray21);
        org.junit.Assert.assertNotNull(objArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray22), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray22), "[]");
        org.junit.Assert.assertNotNull(objArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray25), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray25), "[]");
        org.junit.Assert.assertNotNull(objArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray26), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray26), "[]");
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray27), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray27), "[]");
        org.junit.Assert.assertNotNull(objArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray29), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray29), "[]");
        org.junit.Assert.assertNotNull(throwableArray30);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "Euler angles singularity" + "'", str32, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray35), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray35), "[]");
        org.junit.Assert.assertNotNull(objArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray36), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray36), "[]");
        org.junit.Assert.assertNotNull(objArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray39), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray39), "[]");
        org.junit.Assert.assertNotNull(objArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray43), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray43), "[]");
        org.junit.Assert.assertNotNull(objArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray44), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray44), "[]");
        org.junit.Assert.assertNotNull(throwableArray51);
        org.junit.Assert.assertNotNull(throwableArray53);
        org.junit.Assert.assertNotNull(throwableArray54);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "Euler angles singularity" + "'", str55, "Euler angles singularity");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "Euler angles singularity" + "'", str56, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray59), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray59), "[]");
        org.junit.Assert.assertNotNull(objArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray60), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray60), "[]");
        org.junit.Assert.assertNotNull(objArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray63), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray63), "[]");
        org.junit.Assert.assertNotNull(objArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray65), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray65), "[]");
        org.junit.Assert.assertNotNull(objArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray68), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray68), "[]");
        org.junit.Assert.assertNotNull(throwableArray69);
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "Euler angles singularity" + "'", str70, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray74), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray74), "[]");
        org.junit.Assert.assertNotNull(objArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray75), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray75), "[]");
        org.junit.Assert.assertNotNull(objArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray78), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray78), "[]");
        org.junit.Assert.assertNotNull(throwableArray80);
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "Euler angles singularity" + "'", str81, "Euler angles singularity");
        org.junit.Assert.assertNotNull(throwableArray85);
    }

    @Test
    public void test1723() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1723");
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException1 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray2 = cardanEulerSingularityException1.getArguments();
        java.lang.Object[] objArray3 = cardanEulerSingularityException1.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException5 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray6 = cardanEulerSingularityException5.getArguments();
        cardanEulerSingularityException1.addSuppressed((java.lang.Throwable) cardanEulerSingularityException5);
        java.lang.Object[] objArray8 = cardanEulerSingularityException5.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException10 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray11 = cardanEulerSingularityException10.getArguments();
        java.lang.Throwable[] throwableArray12 = cardanEulerSingularityException10.getSuppressed();
        java.lang.String str13 = cardanEulerSingularityException10.getPattern();
        cardanEulerSingularityException5.addSuppressed((java.lang.Throwable) cardanEulerSingularityException10);
        java.lang.Object[] objArray15 = cardanEulerSingularityException5.getArguments();
        java.lang.Throwable[] throwableArray16 = cardanEulerSingularityException5.getSuppressed();
        java.lang.String str17 = cardanEulerSingularityException5.getPattern();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException19 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray20 = cardanEulerSingularityException19.getArguments();
        java.lang.String str21 = cardanEulerSingularityException19.getPattern();
        java.lang.Object[] objArray22 = cardanEulerSingularityException19.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException24 = new org.apache.commons.math.geometry.CardanEulerSingularityException(true);
        java.lang.Object[] objArray25 = cardanEulerSingularityException24.getArguments();
        java.lang.Throwable[] throwableArray26 = cardanEulerSingularityException24.getSuppressed();
        java.lang.Throwable[] throwableArray27 = cardanEulerSingularityException24.getSuppressed();
        java.lang.Throwable[] throwableArray28 = cardanEulerSingularityException24.getSuppressed();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException30 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray31 = cardanEulerSingularityException30.getArguments();
        java.lang.Object[] objArray32 = cardanEulerSingularityException30.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException34 = new org.apache.commons.math.geometry.CardanEulerSingularityException(true);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException36 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        cardanEulerSingularityException34.addSuppressed((java.lang.Throwable) cardanEulerSingularityException36);
        cardanEulerSingularityException30.addSuppressed((java.lang.Throwable) cardanEulerSingularityException34);
        cardanEulerSingularityException24.addSuppressed((java.lang.Throwable) cardanEulerSingularityException30);
        cardanEulerSingularityException19.addSuppressed((java.lang.Throwable) cardanEulerSingularityException24);
        java.lang.Object[] objArray41 = cardanEulerSingularityException19.getArguments();
        cardanEulerSingularityException5.addSuppressed((java.lang.Throwable) cardanEulerSingularityException19);
        java.lang.Throwable[] throwableArray43 = cardanEulerSingularityException5.getSuppressed();
        java.lang.String str44 = cardanEulerSingularityException5.getPattern();
        org.junit.Assert.assertNotNull(objArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray2), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray2), "[]");
        org.junit.Assert.assertNotNull(objArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray3), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray3), "[]");
        org.junit.Assert.assertNotNull(objArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray6), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray6), "[]");
        org.junit.Assert.assertNotNull(objArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray8), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray8), "[]");
        org.junit.Assert.assertNotNull(objArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray11), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray11), "[]");
        org.junit.Assert.assertNotNull(throwableArray12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Euler angles singularity" + "'", str13, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray15), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray15), "[]");
        org.junit.Assert.assertNotNull(throwableArray16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "Euler angles singularity" + "'", str17, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray20), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray20), "[]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "Euler angles singularity" + "'", str21, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray22), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray22), "[]");
        org.junit.Assert.assertNotNull(objArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray25), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray25), "[]");
        org.junit.Assert.assertNotNull(throwableArray26);
        org.junit.Assert.assertNotNull(throwableArray27);
        org.junit.Assert.assertNotNull(throwableArray28);
        org.junit.Assert.assertNotNull(objArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray31), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray31), "[]");
        org.junit.Assert.assertNotNull(objArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray32), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray32), "[]");
        org.junit.Assert.assertNotNull(objArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray41), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray41), "[]");
        org.junit.Assert.assertNotNull(throwableArray43);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "Euler angles singularity" + "'", str44, "Euler angles singularity");
    }

    @Test
    public void test1724() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1724");
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException1 = new org.apache.commons.math.geometry.CardanEulerSingularityException(true);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException3 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray4 = cardanEulerSingularityException3.getArguments();
        java.lang.String str5 = cardanEulerSingularityException3.getPattern();
        java.lang.Object[] objArray6 = cardanEulerSingularityException3.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException8 = new org.apache.commons.math.geometry.CardanEulerSingularityException(true);
        java.lang.Object[] objArray9 = cardanEulerSingularityException8.getArguments();
        java.lang.Throwable[] throwableArray10 = cardanEulerSingularityException8.getSuppressed();
        java.lang.Throwable[] throwableArray11 = cardanEulerSingularityException8.getSuppressed();
        java.lang.Throwable[] throwableArray12 = cardanEulerSingularityException8.getSuppressed();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException14 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray15 = cardanEulerSingularityException14.getArguments();
        java.lang.Object[] objArray16 = cardanEulerSingularityException14.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException18 = new org.apache.commons.math.geometry.CardanEulerSingularityException(true);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException20 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        cardanEulerSingularityException18.addSuppressed((java.lang.Throwable) cardanEulerSingularityException20);
        cardanEulerSingularityException14.addSuppressed((java.lang.Throwable) cardanEulerSingularityException18);
        cardanEulerSingularityException8.addSuppressed((java.lang.Throwable) cardanEulerSingularityException14);
        cardanEulerSingularityException3.addSuppressed((java.lang.Throwable) cardanEulerSingularityException8);
        java.lang.Object[] objArray25 = cardanEulerSingularityException3.getArguments();
        cardanEulerSingularityException1.addSuppressed((java.lang.Throwable) cardanEulerSingularityException3);
        java.lang.Throwable[] throwableArray27 = cardanEulerSingularityException1.getSuppressed();
        java.lang.String str28 = cardanEulerSingularityException1.getPattern();
        java.lang.String str29 = cardanEulerSingularityException1.getPattern();
        java.lang.String str30 = cardanEulerSingularityException1.getPattern();
        org.junit.Assert.assertNotNull(objArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray4), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray4), "[]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Euler angles singularity" + "'", str5, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray6), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray6), "[]");
        org.junit.Assert.assertNotNull(objArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray9), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray9), "[]");
        org.junit.Assert.assertNotNull(throwableArray10);
        org.junit.Assert.assertNotNull(throwableArray11);
        org.junit.Assert.assertNotNull(throwableArray12);
        org.junit.Assert.assertNotNull(objArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray15), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray15), "[]");
        org.junit.Assert.assertNotNull(objArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray16), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray16), "[]");
        org.junit.Assert.assertNotNull(objArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray25), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray25), "[]");
        org.junit.Assert.assertNotNull(throwableArray27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "Cardan angles singularity" + "'", str28, "Cardan angles singularity");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "Cardan angles singularity" + "'", str29, "Cardan angles singularity");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "Cardan angles singularity" + "'", str30, "Cardan angles singularity");
    }

    @Test
    public void test1725() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1725");
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException1 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray2 = cardanEulerSingularityException1.getArguments();
        java.lang.String str3 = cardanEulerSingularityException1.getPattern();
        java.lang.Object[] objArray4 = cardanEulerSingularityException1.getArguments();
        java.lang.Object[] objArray5 = cardanEulerSingularityException1.getArguments();
        java.lang.String str6 = cardanEulerSingularityException1.getPattern();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException8 = new org.apache.commons.math.geometry.CardanEulerSingularityException(true);
        java.lang.Object[] objArray9 = cardanEulerSingularityException8.getArguments();
        java.lang.Throwable[] throwableArray10 = cardanEulerSingularityException8.getSuppressed();
        java.lang.Throwable[] throwableArray11 = cardanEulerSingularityException8.getSuppressed();
        cardanEulerSingularityException1.addSuppressed((java.lang.Throwable) cardanEulerSingularityException8);
        java.lang.Object[] objArray13 = cardanEulerSingularityException1.getArguments();
        java.lang.String str14 = cardanEulerSingularityException1.getPattern();
        java.lang.String str15 = cardanEulerSingularityException1.getPattern();
        java.lang.Throwable[] throwableArray16 = cardanEulerSingularityException1.getSuppressed();
        java.lang.Object[] objArray17 = cardanEulerSingularityException1.getArguments();
        org.junit.Assert.assertNotNull(objArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray2), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray2), "[]");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Euler angles singularity" + "'", str3, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray4), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray4), "[]");
        org.junit.Assert.assertNotNull(objArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray5), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray5), "[]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "Euler angles singularity" + "'", str6, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray9), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray9), "[]");
        org.junit.Assert.assertNotNull(throwableArray10);
        org.junit.Assert.assertNotNull(throwableArray11);
        org.junit.Assert.assertNotNull(objArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray13), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray13), "[]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "Euler angles singularity" + "'", str14, "Euler angles singularity");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Euler angles singularity" + "'", str15, "Euler angles singularity");
        org.junit.Assert.assertNotNull(throwableArray16);
        org.junit.Assert.assertNotNull(objArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray17), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray17), "[]");
    }

    @Test
    public void test1726() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1726");
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException1 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray2 = cardanEulerSingularityException1.getArguments();
        java.lang.String str3 = cardanEulerSingularityException1.getPattern();
        java.lang.Object[] objArray4 = cardanEulerSingularityException1.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException6 = new org.apache.commons.math.geometry.CardanEulerSingularityException(true);
        java.lang.Object[] objArray7 = cardanEulerSingularityException6.getArguments();
        java.lang.Object[] objArray8 = cardanEulerSingularityException6.getArguments();
        cardanEulerSingularityException1.addSuppressed((java.lang.Throwable) cardanEulerSingularityException6);
        java.lang.String str10 = cardanEulerSingularityException1.getPattern();
        java.lang.String str11 = cardanEulerSingularityException1.getPattern();
        java.lang.String str12 = cardanEulerSingularityException1.getPattern();
        org.junit.Assert.assertNotNull(objArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray2), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray2), "[]");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Euler angles singularity" + "'", str3, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray4), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray4), "[]");
        org.junit.Assert.assertNotNull(objArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray7), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray7), "[]");
        org.junit.Assert.assertNotNull(objArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray8), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray8), "[]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Euler angles singularity" + "'", str10, "Euler angles singularity");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Euler angles singularity" + "'", str11, "Euler angles singularity");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Euler angles singularity" + "'", str12, "Euler angles singularity");
    }

    @Test
    public void test1727() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1727");
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException1 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray2 = cardanEulerSingularityException1.getArguments();
        java.lang.Object[] objArray3 = cardanEulerSingularityException1.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException5 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray6 = cardanEulerSingularityException5.getArguments();
        cardanEulerSingularityException1.addSuppressed((java.lang.Throwable) cardanEulerSingularityException5);
        java.lang.Throwable[] throwableArray8 = cardanEulerSingularityException1.getSuppressed();
        java.lang.String str9 = cardanEulerSingularityException1.getPattern();
        java.lang.Object[] objArray10 = cardanEulerSingularityException1.getArguments();
        java.lang.Object[] objArray11 = cardanEulerSingularityException1.getArguments();
        java.lang.Throwable[] throwableArray12 = cardanEulerSingularityException1.getSuppressed();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException14 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray15 = cardanEulerSingularityException14.getArguments();
        java.lang.Object[] objArray16 = cardanEulerSingularityException14.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException18 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray19 = cardanEulerSingularityException18.getArguments();
        cardanEulerSingularityException14.addSuppressed((java.lang.Throwable) cardanEulerSingularityException18);
        java.lang.Object[] objArray21 = cardanEulerSingularityException18.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException23 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray24 = cardanEulerSingularityException23.getArguments();
        java.lang.Throwable[] throwableArray25 = cardanEulerSingularityException23.getSuppressed();
        java.lang.String str26 = cardanEulerSingularityException23.getPattern();
        cardanEulerSingularityException18.addSuppressed((java.lang.Throwable) cardanEulerSingularityException23);
        java.lang.Object[] objArray28 = cardanEulerSingularityException18.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException30 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.String str31 = cardanEulerSingularityException30.getPattern();
        java.lang.Object[] objArray32 = cardanEulerSingularityException30.getArguments();
        java.lang.String str33 = cardanEulerSingularityException30.getPattern();
        cardanEulerSingularityException18.addSuppressed((java.lang.Throwable) cardanEulerSingularityException30);
        cardanEulerSingularityException1.addSuppressed((java.lang.Throwable) cardanEulerSingularityException18);
        java.lang.Object[] objArray36 = cardanEulerSingularityException18.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException38 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray39 = cardanEulerSingularityException38.getArguments();
        java.lang.Throwable[] throwableArray40 = cardanEulerSingularityException38.getSuppressed();
        java.lang.String str41 = cardanEulerSingularityException38.getPattern();
        java.lang.Throwable[] throwableArray42 = cardanEulerSingularityException38.getSuppressed();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException44 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray45 = cardanEulerSingularityException44.getArguments();
        java.lang.Object[] objArray46 = cardanEulerSingularityException44.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException48 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.String str49 = cardanEulerSingularityException48.getPattern();
        java.lang.Object[] objArray50 = cardanEulerSingularityException48.getArguments();
        java.lang.String str51 = cardanEulerSingularityException48.getPattern();
        java.lang.String str52 = cardanEulerSingularityException48.getPattern();
        java.lang.Object[] objArray53 = cardanEulerSingularityException48.getArguments();
        cardanEulerSingularityException44.addSuppressed((java.lang.Throwable) cardanEulerSingularityException48);
        java.lang.Throwable[] throwableArray55 = cardanEulerSingularityException48.getSuppressed();
        cardanEulerSingularityException38.addSuppressed((java.lang.Throwable) cardanEulerSingularityException48);
        cardanEulerSingularityException18.addSuppressed((java.lang.Throwable) cardanEulerSingularityException38);
        org.junit.Assert.assertNotNull(objArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray2), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray2), "[]");
        org.junit.Assert.assertNotNull(objArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray3), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray3), "[]");
        org.junit.Assert.assertNotNull(objArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray6), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray6), "[]");
        org.junit.Assert.assertNotNull(throwableArray8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Euler angles singularity" + "'", str9, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray10), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray10), "[]");
        org.junit.Assert.assertNotNull(objArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray11), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray11), "[]");
        org.junit.Assert.assertNotNull(throwableArray12);
        org.junit.Assert.assertNotNull(objArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray15), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray15), "[]");
        org.junit.Assert.assertNotNull(objArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray16), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray16), "[]");
        org.junit.Assert.assertNotNull(objArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray19), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray19), "[]");
        org.junit.Assert.assertNotNull(objArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray21), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray21), "[]");
        org.junit.Assert.assertNotNull(objArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray24), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray24), "[]");
        org.junit.Assert.assertNotNull(throwableArray25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "Euler angles singularity" + "'", str26, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray28), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray28), "[]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "Euler angles singularity" + "'", str31, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray32), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray32), "[]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "Euler angles singularity" + "'", str33, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray36), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray36), "[]");
        org.junit.Assert.assertNotNull(objArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray39), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray39), "[]");
        org.junit.Assert.assertNotNull(throwableArray40);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "Euler angles singularity" + "'", str41, "Euler angles singularity");
        org.junit.Assert.assertNotNull(throwableArray42);
        org.junit.Assert.assertNotNull(objArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray45), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray45), "[]");
        org.junit.Assert.assertNotNull(objArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray46), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray46), "[]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "Euler angles singularity" + "'", str49, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray50), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray50), "[]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "Euler angles singularity" + "'", str51, "Euler angles singularity");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "Euler angles singularity" + "'", str52, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray53), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray53), "[]");
        org.junit.Assert.assertNotNull(throwableArray55);
    }

    @Test
    public void test1728() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1728");
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException1 = new org.apache.commons.math.geometry.CardanEulerSingularityException(true);
        java.lang.Object[] objArray2 = cardanEulerSingularityException1.getArguments();
        java.lang.Throwable[] throwableArray3 = cardanEulerSingularityException1.getSuppressed();
        java.lang.String str4 = cardanEulerSingularityException1.getPattern();
        java.lang.Object[] objArray5 = cardanEulerSingularityException1.getArguments();
        java.lang.Throwable[] throwableArray6 = cardanEulerSingularityException1.getSuppressed();
        java.lang.Object[] objArray7 = cardanEulerSingularityException1.getArguments();
        java.lang.Throwable[] throwableArray8 = cardanEulerSingularityException1.getSuppressed();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException10 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray11 = cardanEulerSingularityException10.getArguments();
        java.lang.Object[] objArray12 = cardanEulerSingularityException10.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException14 = new org.apache.commons.math.geometry.CardanEulerSingularityException(true);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException16 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        cardanEulerSingularityException14.addSuppressed((java.lang.Throwable) cardanEulerSingularityException16);
        cardanEulerSingularityException10.addSuppressed((java.lang.Throwable) cardanEulerSingularityException14);
        java.lang.String str19 = cardanEulerSingularityException10.getPattern();
        java.lang.String str20 = cardanEulerSingularityException10.getPattern();
        java.lang.Throwable[] throwableArray21 = cardanEulerSingularityException10.getSuppressed();
        cardanEulerSingularityException1.addSuppressed((java.lang.Throwable) cardanEulerSingularityException10);
        java.lang.String str23 = cardanEulerSingularityException1.getPattern();
        java.lang.Class<?> wildcardClass24 = cardanEulerSingularityException1.getClass();
        org.junit.Assert.assertNotNull(objArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray2), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray2), "[]");
        org.junit.Assert.assertNotNull(throwableArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Cardan angles singularity" + "'", str4, "Cardan angles singularity");
        org.junit.Assert.assertNotNull(objArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray5), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray5), "[]");
        org.junit.Assert.assertNotNull(throwableArray6);
        org.junit.Assert.assertNotNull(objArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray7), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray7), "[]");
        org.junit.Assert.assertNotNull(throwableArray8);
        org.junit.Assert.assertNotNull(objArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray11), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray11), "[]");
        org.junit.Assert.assertNotNull(objArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray12), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray12), "[]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "Euler angles singularity" + "'", str19, "Euler angles singularity");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "Euler angles singularity" + "'", str20, "Euler angles singularity");
        org.junit.Assert.assertNotNull(throwableArray21);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "Cardan angles singularity" + "'", str23, "Cardan angles singularity");
        org.junit.Assert.assertNotNull(wildcardClass24);
    }

    @Test
    public void test1729() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1729");
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException1 = new org.apache.commons.math.geometry.CardanEulerSingularityException(true);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException3 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        cardanEulerSingularityException1.addSuppressed((java.lang.Throwable) cardanEulerSingularityException3);
        java.lang.String str5 = cardanEulerSingularityException3.getPattern();
        java.lang.Throwable[] throwableArray6 = cardanEulerSingularityException3.getSuppressed();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException8 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.String str9 = cardanEulerSingularityException8.getPattern();
        java.lang.Object[] objArray10 = cardanEulerSingularityException8.getArguments();
        java.lang.String str11 = cardanEulerSingularityException8.getPattern();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException13 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.String str14 = cardanEulerSingularityException13.getPattern();
        java.lang.Throwable[] throwableArray15 = cardanEulerSingularityException13.getSuppressed();
        cardanEulerSingularityException8.addSuppressed((java.lang.Throwable) cardanEulerSingularityException13);
        cardanEulerSingularityException3.addSuppressed((java.lang.Throwable) cardanEulerSingularityException13);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException19 = new org.apache.commons.math.geometry.CardanEulerSingularityException(true);
        java.lang.String str20 = cardanEulerSingularityException19.getPattern();
        java.lang.String str21 = cardanEulerSingularityException19.getPattern();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException23 = new org.apache.commons.math.geometry.CardanEulerSingularityException(true);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException25 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray26 = cardanEulerSingularityException25.getArguments();
        java.lang.String str27 = cardanEulerSingularityException25.getPattern();
        java.lang.Object[] objArray28 = cardanEulerSingularityException25.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException30 = new org.apache.commons.math.geometry.CardanEulerSingularityException(true);
        java.lang.Object[] objArray31 = cardanEulerSingularityException30.getArguments();
        java.lang.Throwable[] throwableArray32 = cardanEulerSingularityException30.getSuppressed();
        java.lang.Throwable[] throwableArray33 = cardanEulerSingularityException30.getSuppressed();
        java.lang.Throwable[] throwableArray34 = cardanEulerSingularityException30.getSuppressed();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException36 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray37 = cardanEulerSingularityException36.getArguments();
        java.lang.Object[] objArray38 = cardanEulerSingularityException36.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException40 = new org.apache.commons.math.geometry.CardanEulerSingularityException(true);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException42 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        cardanEulerSingularityException40.addSuppressed((java.lang.Throwable) cardanEulerSingularityException42);
        cardanEulerSingularityException36.addSuppressed((java.lang.Throwable) cardanEulerSingularityException40);
        cardanEulerSingularityException30.addSuppressed((java.lang.Throwable) cardanEulerSingularityException36);
        cardanEulerSingularityException25.addSuppressed((java.lang.Throwable) cardanEulerSingularityException30);
        java.lang.Object[] objArray47 = cardanEulerSingularityException25.getArguments();
        cardanEulerSingularityException23.addSuppressed((java.lang.Throwable) cardanEulerSingularityException25);
        cardanEulerSingularityException19.addSuppressed((java.lang.Throwable) cardanEulerSingularityException25);
        cardanEulerSingularityException3.addSuppressed((java.lang.Throwable) cardanEulerSingularityException25);
        java.lang.Object[] objArray51 = cardanEulerSingularityException3.getArguments();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Euler angles singularity" + "'", str5, "Euler angles singularity");
        org.junit.Assert.assertNotNull(throwableArray6);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Euler angles singularity" + "'", str9, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray10), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray10), "[]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Euler angles singularity" + "'", str11, "Euler angles singularity");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "Euler angles singularity" + "'", str14, "Euler angles singularity");
        org.junit.Assert.assertNotNull(throwableArray15);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "Cardan angles singularity" + "'", str20, "Cardan angles singularity");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "Cardan angles singularity" + "'", str21, "Cardan angles singularity");
        org.junit.Assert.assertNotNull(objArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray26), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray26), "[]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "Euler angles singularity" + "'", str27, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray28), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray28), "[]");
        org.junit.Assert.assertNotNull(objArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray31), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray31), "[]");
        org.junit.Assert.assertNotNull(throwableArray32);
        org.junit.Assert.assertNotNull(throwableArray33);
        org.junit.Assert.assertNotNull(throwableArray34);
        org.junit.Assert.assertNotNull(objArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray37), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray37), "[]");
        org.junit.Assert.assertNotNull(objArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray38), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray38), "[]");
        org.junit.Assert.assertNotNull(objArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray47), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray47), "[]");
        org.junit.Assert.assertNotNull(objArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray51), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray51), "[]");
    }

    @Test
    public void test1730() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1730");
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException1 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray2 = cardanEulerSingularityException1.getArguments();
        java.lang.Object[] objArray3 = cardanEulerSingularityException1.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException5 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.String str6 = cardanEulerSingularityException5.getPattern();
        java.lang.Object[] objArray7 = cardanEulerSingularityException5.getArguments();
        java.lang.String str8 = cardanEulerSingularityException5.getPattern();
        java.lang.String str9 = cardanEulerSingularityException5.getPattern();
        java.lang.Object[] objArray10 = cardanEulerSingularityException5.getArguments();
        cardanEulerSingularityException1.addSuppressed((java.lang.Throwable) cardanEulerSingularityException5);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException13 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray14 = cardanEulerSingularityException13.getArguments();
        java.lang.String str15 = cardanEulerSingularityException13.getPattern();
        java.lang.Object[] objArray16 = cardanEulerSingularityException13.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException18 = new org.apache.commons.math.geometry.CardanEulerSingularityException(true);
        java.lang.Object[] objArray19 = cardanEulerSingularityException18.getArguments();
        java.lang.Object[] objArray20 = cardanEulerSingularityException18.getArguments();
        cardanEulerSingularityException13.addSuppressed((java.lang.Throwable) cardanEulerSingularityException18);
        java.lang.String str22 = cardanEulerSingularityException13.getPattern();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException24 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray25 = cardanEulerSingularityException24.getArguments();
        java.lang.Object[] objArray26 = cardanEulerSingularityException24.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException28 = new org.apache.commons.math.geometry.CardanEulerSingularityException(true);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException30 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        cardanEulerSingularityException28.addSuppressed((java.lang.Throwable) cardanEulerSingularityException30);
        cardanEulerSingularityException24.addSuppressed((java.lang.Throwable) cardanEulerSingularityException28);
        java.lang.String str33 = cardanEulerSingularityException24.getPattern();
        cardanEulerSingularityException13.addSuppressed((java.lang.Throwable) cardanEulerSingularityException24);
        java.lang.Object[] objArray35 = cardanEulerSingularityException13.getArguments();
        java.lang.Throwable[] throwableArray36 = cardanEulerSingularityException13.getSuppressed();
        java.lang.Throwable[] throwableArray37 = cardanEulerSingularityException13.getSuppressed();
        cardanEulerSingularityException1.addSuppressed((java.lang.Throwable) cardanEulerSingularityException13);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException40 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.String str41 = cardanEulerSingularityException40.getPattern();
        java.lang.Object[] objArray42 = cardanEulerSingularityException40.getArguments();
        java.lang.String str43 = cardanEulerSingularityException40.getPattern();
        java.lang.Throwable[] throwableArray44 = cardanEulerSingularityException40.getSuppressed();
        cardanEulerSingularityException13.addSuppressed((java.lang.Throwable) cardanEulerSingularityException40);
        java.lang.String str46 = cardanEulerSingularityException40.toString();
        org.junit.Assert.assertNotNull(objArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray2), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray2), "[]");
        org.junit.Assert.assertNotNull(objArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray3), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray3), "[]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "Euler angles singularity" + "'", str6, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray7), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray7), "[]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Euler angles singularity" + "'", str8, "Euler angles singularity");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Euler angles singularity" + "'", str9, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray10), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray10), "[]");
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Euler angles singularity" + "'", str15, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray16), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray16), "[]");
        org.junit.Assert.assertNotNull(objArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray19), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray19), "[]");
        org.junit.Assert.assertNotNull(objArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray20), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray20), "[]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "Euler angles singularity" + "'", str22, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray25), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray25), "[]");
        org.junit.Assert.assertNotNull(objArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray26), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray26), "[]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "Euler angles singularity" + "'", str33, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray35), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray35), "[]");
        org.junit.Assert.assertNotNull(throwableArray36);
        org.junit.Assert.assertNotNull(throwableArray37);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "Euler angles singularity" + "'", str41, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray42), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray42), "[]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "Euler angles singularity" + "'", str43, "Euler angles singularity");
        org.junit.Assert.assertNotNull(throwableArray44);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "org.apache.commons.math.geometry.CardanEulerSingularityException: Euler angles singularity" + "'", str46, "org.apache.commons.math.geometry.CardanEulerSingularityException: Euler angles singularity");
    }

    @Test
    public void test1731() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1731");
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException1 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.String str2 = cardanEulerSingularityException1.getPattern();
        java.lang.Object[] objArray3 = cardanEulerSingularityException1.getArguments();
        java.lang.String str4 = cardanEulerSingularityException1.getPattern();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException6 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.String str7 = cardanEulerSingularityException6.getPattern();
        java.lang.Throwable[] throwableArray8 = cardanEulerSingularityException6.getSuppressed();
        cardanEulerSingularityException1.addSuppressed((java.lang.Throwable) cardanEulerSingularityException6);
        java.lang.String str10 = cardanEulerSingularityException1.getPattern();
        java.lang.String str11 = cardanEulerSingularityException1.getPattern();
        java.lang.Throwable[] throwableArray12 = cardanEulerSingularityException1.getSuppressed();
        java.lang.String str13 = cardanEulerSingularityException1.getPattern();
        java.lang.Throwable[] throwableArray14 = cardanEulerSingularityException1.getSuppressed();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "Euler angles singularity" + "'", str2, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray3), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray3), "[]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Euler angles singularity" + "'", str4, "Euler angles singularity");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Euler angles singularity" + "'", str7, "Euler angles singularity");
        org.junit.Assert.assertNotNull(throwableArray8);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Euler angles singularity" + "'", str10, "Euler angles singularity");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Euler angles singularity" + "'", str11, "Euler angles singularity");
        org.junit.Assert.assertNotNull(throwableArray12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Euler angles singularity" + "'", str13, "Euler angles singularity");
        org.junit.Assert.assertNotNull(throwableArray14);
    }

    @Test
    public void test1732() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1732");
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException1 = new org.apache.commons.math.geometry.CardanEulerSingularityException(true);
        java.lang.Object[] objArray2 = cardanEulerSingularityException1.getArguments();
        java.lang.Throwable[] throwableArray3 = cardanEulerSingularityException1.getSuppressed();
        java.lang.Throwable[] throwableArray4 = cardanEulerSingularityException1.getSuppressed();
        java.lang.Throwable[] throwableArray5 = cardanEulerSingularityException1.getSuppressed();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException7 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray8 = cardanEulerSingularityException7.getArguments();
        java.lang.Object[] objArray9 = cardanEulerSingularityException7.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException11 = new org.apache.commons.math.geometry.CardanEulerSingularityException(true);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException13 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        cardanEulerSingularityException11.addSuppressed((java.lang.Throwable) cardanEulerSingularityException13);
        cardanEulerSingularityException7.addSuppressed((java.lang.Throwable) cardanEulerSingularityException11);
        cardanEulerSingularityException1.addSuppressed((java.lang.Throwable) cardanEulerSingularityException7);
        java.lang.Throwable[] throwableArray17 = cardanEulerSingularityException1.getSuppressed();
        java.lang.Throwable[] throwableArray18 = cardanEulerSingularityException1.getSuppressed();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException20 = new org.apache.commons.math.geometry.CardanEulerSingularityException(true);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException22 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        cardanEulerSingularityException20.addSuppressed((java.lang.Throwable) cardanEulerSingularityException22);
        java.lang.String str24 = cardanEulerSingularityException22.getPattern();
        java.lang.Throwable[] throwableArray25 = cardanEulerSingularityException22.getSuppressed();
        java.lang.String str26 = cardanEulerSingularityException22.getPattern();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException28 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray29 = cardanEulerSingularityException28.getArguments();
        java.lang.Object[] objArray30 = cardanEulerSingularityException28.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException32 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray33 = cardanEulerSingularityException32.getArguments();
        cardanEulerSingularityException28.addSuppressed((java.lang.Throwable) cardanEulerSingularityException32);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException36 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray37 = cardanEulerSingularityException36.getArguments();
        java.lang.Object[] objArray38 = cardanEulerSingularityException36.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException40 = new org.apache.commons.math.geometry.CardanEulerSingularityException(true);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException42 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        cardanEulerSingularityException40.addSuppressed((java.lang.Throwable) cardanEulerSingularityException42);
        cardanEulerSingularityException36.addSuppressed((java.lang.Throwable) cardanEulerSingularityException40);
        java.lang.Throwable[] throwableArray45 = cardanEulerSingularityException36.getSuppressed();
        cardanEulerSingularityException32.addSuppressed((java.lang.Throwable) cardanEulerSingularityException36);
        java.lang.Object[] objArray47 = cardanEulerSingularityException36.getArguments();
        cardanEulerSingularityException22.addSuppressed((java.lang.Throwable) cardanEulerSingularityException36);
        cardanEulerSingularityException1.addSuppressed((java.lang.Throwable) cardanEulerSingularityException22);
        java.lang.Throwable[] throwableArray50 = cardanEulerSingularityException22.getSuppressed();
        org.junit.Assert.assertNotNull(objArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray2), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray2), "[]");
        org.junit.Assert.assertNotNull(throwableArray3);
        org.junit.Assert.assertNotNull(throwableArray4);
        org.junit.Assert.assertNotNull(throwableArray5);
        org.junit.Assert.assertNotNull(objArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray8), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray8), "[]");
        org.junit.Assert.assertNotNull(objArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray9), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray9), "[]");
        org.junit.Assert.assertNotNull(throwableArray17);
        org.junit.Assert.assertNotNull(throwableArray18);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "Euler angles singularity" + "'", str24, "Euler angles singularity");
        org.junit.Assert.assertNotNull(throwableArray25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "Euler angles singularity" + "'", str26, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray29), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray29), "[]");
        org.junit.Assert.assertNotNull(objArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray30), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray30), "[]");
        org.junit.Assert.assertNotNull(objArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray33), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray33), "[]");
        org.junit.Assert.assertNotNull(objArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray37), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray37), "[]");
        org.junit.Assert.assertNotNull(objArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray38), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray38), "[]");
        org.junit.Assert.assertNotNull(throwableArray45);
        org.junit.Assert.assertNotNull(objArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray47), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray47), "[]");
        org.junit.Assert.assertNotNull(throwableArray50);
    }

    @Test
    public void test1733() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1733");
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException1 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray2 = cardanEulerSingularityException1.getArguments();
        java.lang.Object[] objArray3 = cardanEulerSingularityException1.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException5 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray6 = cardanEulerSingularityException5.getArguments();
        cardanEulerSingularityException1.addSuppressed((java.lang.Throwable) cardanEulerSingularityException5);
        java.lang.Object[] objArray8 = cardanEulerSingularityException5.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException10 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray11 = cardanEulerSingularityException10.getArguments();
        java.lang.Throwable[] throwableArray12 = cardanEulerSingularityException10.getSuppressed();
        java.lang.String str13 = cardanEulerSingularityException10.getPattern();
        cardanEulerSingularityException5.addSuppressed((java.lang.Throwable) cardanEulerSingularityException10);
        java.lang.Object[] objArray15 = cardanEulerSingularityException5.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException17 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.String str18 = cardanEulerSingularityException17.getPattern();
        java.lang.Object[] objArray19 = cardanEulerSingularityException17.getArguments();
        java.lang.String str20 = cardanEulerSingularityException17.getPattern();
        cardanEulerSingularityException5.addSuppressed((java.lang.Throwable) cardanEulerSingularityException17);
        java.lang.String str22 = cardanEulerSingularityException17.getPattern();
        java.lang.String str23 = cardanEulerSingularityException17.getPattern();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException25 = new org.apache.commons.math.geometry.CardanEulerSingularityException(true);
        java.lang.Object[] objArray26 = cardanEulerSingularityException25.getArguments();
        java.lang.Throwable[] throwableArray27 = cardanEulerSingularityException25.getSuppressed();
        java.lang.String str28 = cardanEulerSingularityException25.getPattern();
        java.lang.Object[] objArray29 = cardanEulerSingularityException25.getArguments();
        java.lang.Throwable[] throwableArray30 = cardanEulerSingularityException25.getSuppressed();
        java.lang.Object[] objArray31 = cardanEulerSingularityException25.getArguments();
        java.lang.Throwable[] throwableArray32 = cardanEulerSingularityException25.getSuppressed();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException34 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray35 = cardanEulerSingularityException34.getArguments();
        java.lang.Object[] objArray36 = cardanEulerSingularityException34.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException38 = new org.apache.commons.math.geometry.CardanEulerSingularityException(true);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException40 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        cardanEulerSingularityException38.addSuppressed((java.lang.Throwable) cardanEulerSingularityException40);
        cardanEulerSingularityException34.addSuppressed((java.lang.Throwable) cardanEulerSingularityException38);
        java.lang.String str43 = cardanEulerSingularityException34.getPattern();
        java.lang.String str44 = cardanEulerSingularityException34.getPattern();
        java.lang.Throwable[] throwableArray45 = cardanEulerSingularityException34.getSuppressed();
        cardanEulerSingularityException25.addSuppressed((java.lang.Throwable) cardanEulerSingularityException34);
        cardanEulerSingularityException17.addSuppressed((java.lang.Throwable) cardanEulerSingularityException25);
        java.lang.Throwable[] throwableArray48 = cardanEulerSingularityException17.getSuppressed();
        java.lang.Object[] objArray49 = cardanEulerSingularityException17.getArguments();
        org.junit.Assert.assertNotNull(objArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray2), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray2), "[]");
        org.junit.Assert.assertNotNull(objArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray3), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray3), "[]");
        org.junit.Assert.assertNotNull(objArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray6), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray6), "[]");
        org.junit.Assert.assertNotNull(objArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray8), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray8), "[]");
        org.junit.Assert.assertNotNull(objArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray11), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray11), "[]");
        org.junit.Assert.assertNotNull(throwableArray12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Euler angles singularity" + "'", str13, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray15), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray15), "[]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "Euler angles singularity" + "'", str18, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray19), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray19), "[]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "Euler angles singularity" + "'", str20, "Euler angles singularity");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "Euler angles singularity" + "'", str22, "Euler angles singularity");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "Euler angles singularity" + "'", str23, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray26), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray26), "[]");
        org.junit.Assert.assertNotNull(throwableArray27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "Cardan angles singularity" + "'", str28, "Cardan angles singularity");
        org.junit.Assert.assertNotNull(objArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray29), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray29), "[]");
        org.junit.Assert.assertNotNull(throwableArray30);
        org.junit.Assert.assertNotNull(objArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray31), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray31), "[]");
        org.junit.Assert.assertNotNull(throwableArray32);
        org.junit.Assert.assertNotNull(objArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray35), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray35), "[]");
        org.junit.Assert.assertNotNull(objArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray36), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray36), "[]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "Euler angles singularity" + "'", str43, "Euler angles singularity");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "Euler angles singularity" + "'", str44, "Euler angles singularity");
        org.junit.Assert.assertNotNull(throwableArray45);
        org.junit.Assert.assertNotNull(throwableArray48);
        org.junit.Assert.assertNotNull(objArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray49), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray49), "[]");
    }

    @Test
    public void test1734() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1734");
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException1 = new org.apache.commons.math.geometry.CardanEulerSingularityException(true);
        java.lang.Object[] objArray2 = cardanEulerSingularityException1.getArguments();
        java.lang.Throwable[] throwableArray3 = cardanEulerSingularityException1.getSuppressed();
        java.lang.String str4 = cardanEulerSingularityException1.getPattern();
        java.lang.Object[] objArray5 = cardanEulerSingularityException1.getArguments();
        java.lang.Throwable[] throwableArray6 = cardanEulerSingularityException1.getSuppressed();
        java.lang.Object[] objArray7 = cardanEulerSingularityException1.getArguments();
        java.lang.String str8 = cardanEulerSingularityException1.getPattern();
        java.lang.String str9 = cardanEulerSingularityException1.getPattern();
        java.lang.Throwable[] throwableArray10 = cardanEulerSingularityException1.getSuppressed();
        java.lang.Throwable[] throwableArray11 = cardanEulerSingularityException1.getSuppressed();
        org.junit.Assert.assertNotNull(objArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray2), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray2), "[]");
        org.junit.Assert.assertNotNull(throwableArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Cardan angles singularity" + "'", str4, "Cardan angles singularity");
        org.junit.Assert.assertNotNull(objArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray5), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray5), "[]");
        org.junit.Assert.assertNotNull(throwableArray6);
        org.junit.Assert.assertNotNull(objArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray7), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray7), "[]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Cardan angles singularity" + "'", str8, "Cardan angles singularity");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Cardan angles singularity" + "'", str9, "Cardan angles singularity");
        org.junit.Assert.assertNotNull(throwableArray10);
        org.junit.Assert.assertNotNull(throwableArray11);
    }

    @Test
    public void test1735() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1735");
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException1 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray2 = cardanEulerSingularityException1.getArguments();
        java.lang.Object[] objArray3 = cardanEulerSingularityException1.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException5 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray6 = cardanEulerSingularityException5.getArguments();
        cardanEulerSingularityException1.addSuppressed((java.lang.Throwable) cardanEulerSingularityException5);
        java.lang.String str8 = cardanEulerSingularityException1.getPattern();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException10 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray11 = cardanEulerSingularityException10.getArguments();
        java.lang.Object[] objArray12 = cardanEulerSingularityException10.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException14 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray15 = cardanEulerSingularityException14.getArguments();
        cardanEulerSingularityException10.addSuppressed((java.lang.Throwable) cardanEulerSingularityException14);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException18 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray19 = cardanEulerSingularityException18.getArguments();
        java.lang.Object[] objArray20 = cardanEulerSingularityException18.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException22 = new org.apache.commons.math.geometry.CardanEulerSingularityException(true);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException24 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        cardanEulerSingularityException22.addSuppressed((java.lang.Throwable) cardanEulerSingularityException24);
        cardanEulerSingularityException18.addSuppressed((java.lang.Throwable) cardanEulerSingularityException22);
        java.lang.Throwable[] throwableArray27 = cardanEulerSingularityException18.getSuppressed();
        cardanEulerSingularityException14.addSuppressed((java.lang.Throwable) cardanEulerSingularityException18);
        java.lang.String str29 = cardanEulerSingularityException18.getPattern();
        cardanEulerSingularityException1.addSuppressed((java.lang.Throwable) cardanEulerSingularityException18);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException32 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray33 = cardanEulerSingularityException32.getArguments();
        java.lang.Object[] objArray34 = cardanEulerSingularityException32.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException36 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray37 = cardanEulerSingularityException36.getArguments();
        cardanEulerSingularityException32.addSuppressed((java.lang.Throwable) cardanEulerSingularityException36);
        java.lang.Object[] objArray39 = cardanEulerSingularityException36.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException41 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray42 = cardanEulerSingularityException41.getArguments();
        java.lang.Throwable[] throwableArray43 = cardanEulerSingularityException41.getSuppressed();
        java.lang.String str44 = cardanEulerSingularityException41.getPattern();
        cardanEulerSingularityException36.addSuppressed((java.lang.Throwable) cardanEulerSingularityException41);
        java.lang.Object[] objArray46 = cardanEulerSingularityException36.getArguments();
        java.lang.Throwable[] throwableArray47 = cardanEulerSingularityException36.getSuppressed();
        cardanEulerSingularityException18.addSuppressed((java.lang.Throwable) cardanEulerSingularityException36);
        java.lang.Object[] objArray49 = cardanEulerSingularityException18.getArguments();
        java.lang.Class<?> wildcardClass50 = objArray49.getClass();
        org.junit.Assert.assertNotNull(objArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray2), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray2), "[]");
        org.junit.Assert.assertNotNull(objArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray3), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray3), "[]");
        org.junit.Assert.assertNotNull(objArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray6), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray6), "[]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Euler angles singularity" + "'", str8, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray11), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray11), "[]");
        org.junit.Assert.assertNotNull(objArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray12), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray12), "[]");
        org.junit.Assert.assertNotNull(objArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray15), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray15), "[]");
        org.junit.Assert.assertNotNull(objArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray19), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray19), "[]");
        org.junit.Assert.assertNotNull(objArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray20), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray20), "[]");
        org.junit.Assert.assertNotNull(throwableArray27);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "Euler angles singularity" + "'", str29, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray33), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray33), "[]");
        org.junit.Assert.assertNotNull(objArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray34), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray34), "[]");
        org.junit.Assert.assertNotNull(objArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray37), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray37), "[]");
        org.junit.Assert.assertNotNull(objArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray39), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray39), "[]");
        org.junit.Assert.assertNotNull(objArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray42), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray42), "[]");
        org.junit.Assert.assertNotNull(throwableArray43);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "Euler angles singularity" + "'", str44, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray46), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray46), "[]");
        org.junit.Assert.assertNotNull(throwableArray47);
        org.junit.Assert.assertNotNull(objArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray49), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray49), "[]");
        org.junit.Assert.assertNotNull(wildcardClass50);
    }

    @Test
    public void test1736() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1736");
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException1 = new org.apache.commons.math.geometry.CardanEulerSingularityException(true);
        java.lang.Object[] objArray2 = cardanEulerSingularityException1.getArguments();
        java.lang.Object[] objArray3 = cardanEulerSingularityException1.getArguments();
        java.lang.String str4 = cardanEulerSingularityException1.getPattern();
        java.lang.String str5 = cardanEulerSingularityException1.getPattern();
        java.lang.Object[] objArray6 = cardanEulerSingularityException1.getArguments();
        java.lang.Object[] objArray7 = cardanEulerSingularityException1.getArguments();
        java.lang.Object[] objArray8 = cardanEulerSingularityException1.getArguments();
        java.lang.Object[] objArray9 = cardanEulerSingularityException1.getArguments();
        java.lang.Throwable[] throwableArray10 = cardanEulerSingularityException1.getSuppressed();
        java.lang.Throwable[] throwableArray11 = cardanEulerSingularityException1.getSuppressed();
        java.lang.Throwable[] throwableArray12 = cardanEulerSingularityException1.getSuppressed();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException14 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.String str15 = cardanEulerSingularityException14.getPattern();
        java.lang.Object[] objArray16 = cardanEulerSingularityException14.getArguments();
        java.lang.String str17 = cardanEulerSingularityException14.getPattern();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException19 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.String str20 = cardanEulerSingularityException19.getPattern();
        java.lang.Throwable[] throwableArray21 = cardanEulerSingularityException19.getSuppressed();
        cardanEulerSingularityException14.addSuppressed((java.lang.Throwable) cardanEulerSingularityException19);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException24 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray25 = cardanEulerSingularityException24.getArguments();
        java.lang.Object[] objArray26 = cardanEulerSingularityException24.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException28 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray29 = cardanEulerSingularityException28.getArguments();
        cardanEulerSingularityException24.addSuppressed((java.lang.Throwable) cardanEulerSingularityException28);
        java.lang.Object[] objArray31 = cardanEulerSingularityException28.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException33 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray34 = cardanEulerSingularityException33.getArguments();
        java.lang.Throwable[] throwableArray35 = cardanEulerSingularityException33.getSuppressed();
        java.lang.String str36 = cardanEulerSingularityException33.getPattern();
        cardanEulerSingularityException28.addSuppressed((java.lang.Throwable) cardanEulerSingularityException33);
        java.lang.Object[] objArray38 = cardanEulerSingularityException28.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException40 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray41 = cardanEulerSingularityException40.getArguments();
        java.lang.Object[] objArray42 = cardanEulerSingularityException40.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException44 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray45 = cardanEulerSingularityException44.getArguments();
        cardanEulerSingularityException40.addSuppressed((java.lang.Throwable) cardanEulerSingularityException44);
        java.lang.Throwable[] throwableArray47 = cardanEulerSingularityException40.getSuppressed();
        java.lang.String str48 = cardanEulerSingularityException40.getPattern();
        java.lang.String str49 = cardanEulerSingularityException40.getPattern();
        java.lang.String str50 = cardanEulerSingularityException40.getPattern();
        cardanEulerSingularityException28.addSuppressed((java.lang.Throwable) cardanEulerSingularityException40);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException53 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray54 = cardanEulerSingularityException53.getArguments();
        cardanEulerSingularityException40.addSuppressed((java.lang.Throwable) cardanEulerSingularityException53);
        cardanEulerSingularityException14.addSuppressed((java.lang.Throwable) cardanEulerSingularityException40);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException58 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray59 = cardanEulerSingularityException58.getArguments();
        java.lang.Object[] objArray60 = cardanEulerSingularityException58.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException62 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray63 = cardanEulerSingularityException62.getArguments();
        cardanEulerSingularityException58.addSuppressed((java.lang.Throwable) cardanEulerSingularityException62);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException66 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray67 = cardanEulerSingularityException66.getArguments();
        java.lang.Object[] objArray68 = cardanEulerSingularityException66.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException70 = new org.apache.commons.math.geometry.CardanEulerSingularityException(true);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException72 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        cardanEulerSingularityException70.addSuppressed((java.lang.Throwable) cardanEulerSingularityException72);
        cardanEulerSingularityException66.addSuppressed((java.lang.Throwable) cardanEulerSingularityException70);
        java.lang.Throwable[] throwableArray75 = cardanEulerSingularityException66.getSuppressed();
        cardanEulerSingularityException62.addSuppressed((java.lang.Throwable) cardanEulerSingularityException66);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException78 = new org.apache.commons.math.geometry.CardanEulerSingularityException(true);
        java.lang.Object[] objArray79 = cardanEulerSingularityException78.getArguments();
        java.lang.Object[] objArray80 = cardanEulerSingularityException78.getArguments();
        cardanEulerSingularityException66.addSuppressed((java.lang.Throwable) cardanEulerSingularityException78);
        java.lang.Throwable[] throwableArray82 = cardanEulerSingularityException78.getSuppressed();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException84 = new org.apache.commons.math.geometry.CardanEulerSingularityException(true);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException86 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        cardanEulerSingularityException84.addSuppressed((java.lang.Throwable) cardanEulerSingularityException86);
        java.lang.String str88 = cardanEulerSingularityException86.getPattern();
        java.lang.Throwable[] throwableArray89 = cardanEulerSingularityException86.getSuppressed();
        java.lang.String str90 = cardanEulerSingularityException86.getPattern();
        cardanEulerSingularityException78.addSuppressed((java.lang.Throwable) cardanEulerSingularityException86);
        java.lang.Object[] objArray92 = cardanEulerSingularityException78.getArguments();
        cardanEulerSingularityException14.addSuppressed((java.lang.Throwable) cardanEulerSingularityException78);
        java.lang.Throwable[] throwableArray94 = cardanEulerSingularityException14.getSuppressed();
        cardanEulerSingularityException1.addSuppressed((java.lang.Throwable) cardanEulerSingularityException14);
        org.junit.Assert.assertNotNull(objArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray2), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray2), "[]");
        org.junit.Assert.assertNotNull(objArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray3), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray3), "[]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Cardan angles singularity" + "'", str4, "Cardan angles singularity");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Cardan angles singularity" + "'", str5, "Cardan angles singularity");
        org.junit.Assert.assertNotNull(objArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray6), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray6), "[]");
        org.junit.Assert.assertNotNull(objArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray7), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray7), "[]");
        org.junit.Assert.assertNotNull(objArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray8), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray8), "[]");
        org.junit.Assert.assertNotNull(objArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray9), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray9), "[]");
        org.junit.Assert.assertNotNull(throwableArray10);
        org.junit.Assert.assertNotNull(throwableArray11);
        org.junit.Assert.assertNotNull(throwableArray12);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Euler angles singularity" + "'", str15, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray16), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray16), "[]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "Euler angles singularity" + "'", str17, "Euler angles singularity");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "Euler angles singularity" + "'", str20, "Euler angles singularity");
        org.junit.Assert.assertNotNull(throwableArray21);
        org.junit.Assert.assertNotNull(objArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray25), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray25), "[]");
        org.junit.Assert.assertNotNull(objArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray26), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray26), "[]");
        org.junit.Assert.assertNotNull(objArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray29), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray29), "[]");
        org.junit.Assert.assertNotNull(objArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray31), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray31), "[]");
        org.junit.Assert.assertNotNull(objArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray34), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray34), "[]");
        org.junit.Assert.assertNotNull(throwableArray35);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "Euler angles singularity" + "'", str36, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray38), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray38), "[]");
        org.junit.Assert.assertNotNull(objArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray41), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray41), "[]");
        org.junit.Assert.assertNotNull(objArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray42), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray42), "[]");
        org.junit.Assert.assertNotNull(objArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray45), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray45), "[]");
        org.junit.Assert.assertNotNull(throwableArray47);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "Euler angles singularity" + "'", str48, "Euler angles singularity");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "Euler angles singularity" + "'", str49, "Euler angles singularity");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "Euler angles singularity" + "'", str50, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray54), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray54), "[]");
        org.junit.Assert.assertNotNull(objArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray59), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray59), "[]");
        org.junit.Assert.assertNotNull(objArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray60), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray60), "[]");
        org.junit.Assert.assertNotNull(objArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray63), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray63), "[]");
        org.junit.Assert.assertNotNull(objArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray67), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray67), "[]");
        org.junit.Assert.assertNotNull(objArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray68), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray68), "[]");
        org.junit.Assert.assertNotNull(throwableArray75);
        org.junit.Assert.assertNotNull(objArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray79), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray79), "[]");
        org.junit.Assert.assertNotNull(objArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray80), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray80), "[]");
        org.junit.Assert.assertNotNull(throwableArray82);
        org.junit.Assert.assertEquals("'" + str88 + "' != '" + "Euler angles singularity" + "'", str88, "Euler angles singularity");
        org.junit.Assert.assertNotNull(throwableArray89);
        org.junit.Assert.assertEquals("'" + str90 + "' != '" + "Euler angles singularity" + "'", str90, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray92), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray92), "[]");
        org.junit.Assert.assertNotNull(throwableArray94);
    }

    @Test
    public void test1737() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1737");
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException1 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray2 = cardanEulerSingularityException1.getArguments();
        java.lang.Object[] objArray3 = cardanEulerSingularityException1.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException5 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray6 = cardanEulerSingularityException5.getArguments();
        cardanEulerSingularityException1.addSuppressed((java.lang.Throwable) cardanEulerSingularityException5);
        java.lang.Throwable[] throwableArray8 = cardanEulerSingularityException5.getSuppressed();
        java.lang.Object[] objArray9 = cardanEulerSingularityException5.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException11 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray12 = cardanEulerSingularityException11.getArguments();
        java.lang.Object[] objArray13 = cardanEulerSingularityException11.getArguments();
        java.lang.Object[] objArray14 = cardanEulerSingularityException11.getArguments();
        cardanEulerSingularityException5.addSuppressed((java.lang.Throwable) cardanEulerSingularityException11);
        java.lang.Object[] objArray16 = cardanEulerSingularityException11.getArguments();
        java.lang.Throwable[] throwableArray17 = cardanEulerSingularityException11.getSuppressed();
        java.lang.Throwable[] throwableArray18 = cardanEulerSingularityException11.getSuppressed();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException20 = new org.apache.commons.math.geometry.CardanEulerSingularityException(true);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException22 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        cardanEulerSingularityException20.addSuppressed((java.lang.Throwable) cardanEulerSingularityException22);
        java.lang.Throwable[] throwableArray24 = cardanEulerSingularityException20.getSuppressed();
        java.lang.Throwable[] throwableArray25 = cardanEulerSingularityException20.getSuppressed();
        cardanEulerSingularityException11.addSuppressed((java.lang.Throwable) cardanEulerSingularityException20);
        java.lang.Throwable[] throwableArray27 = cardanEulerSingularityException20.getSuppressed();
        java.lang.Throwable[] throwableArray28 = cardanEulerSingularityException20.getSuppressed();
        java.lang.String str29 = cardanEulerSingularityException20.getPattern();
        org.junit.Assert.assertNotNull(objArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray2), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray2), "[]");
        org.junit.Assert.assertNotNull(objArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray3), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray3), "[]");
        org.junit.Assert.assertNotNull(objArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray6), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray6), "[]");
        org.junit.Assert.assertNotNull(throwableArray8);
        org.junit.Assert.assertNotNull(objArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray9), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray9), "[]");
        org.junit.Assert.assertNotNull(objArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray12), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray12), "[]");
        org.junit.Assert.assertNotNull(objArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray13), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray13), "[]");
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[]");
        org.junit.Assert.assertNotNull(objArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray16), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray16), "[]");
        org.junit.Assert.assertNotNull(throwableArray17);
        org.junit.Assert.assertNotNull(throwableArray18);
        org.junit.Assert.assertNotNull(throwableArray24);
        org.junit.Assert.assertNotNull(throwableArray25);
        org.junit.Assert.assertNotNull(throwableArray27);
        org.junit.Assert.assertNotNull(throwableArray28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "Cardan angles singularity" + "'", str29, "Cardan angles singularity");
    }

    @Test
    public void test1738() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1738");
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException1 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray2 = cardanEulerSingularityException1.getArguments();
        java.lang.Object[] objArray3 = cardanEulerSingularityException1.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException5 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray6 = cardanEulerSingularityException5.getArguments();
        cardanEulerSingularityException1.addSuppressed((java.lang.Throwable) cardanEulerSingularityException5);
        java.lang.Throwable[] throwableArray8 = cardanEulerSingularityException1.getSuppressed();
        java.lang.String str9 = cardanEulerSingularityException1.getPattern();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException11 = new org.apache.commons.math.geometry.CardanEulerSingularityException(true);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException13 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        cardanEulerSingularityException11.addSuppressed((java.lang.Throwable) cardanEulerSingularityException13);
        java.lang.String str15 = cardanEulerSingularityException13.getPattern();
        java.lang.Object[] objArray16 = cardanEulerSingularityException13.getArguments();
        java.lang.Object[] objArray17 = cardanEulerSingularityException13.getArguments();
        cardanEulerSingularityException1.addSuppressed((java.lang.Throwable) cardanEulerSingularityException13);
        java.lang.Throwable[] throwableArray19 = cardanEulerSingularityException1.getSuppressed();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException21 = new org.apache.commons.math.geometry.CardanEulerSingularityException(true);
        java.lang.String str22 = cardanEulerSingularityException21.getPattern();
        java.lang.String str23 = cardanEulerSingularityException21.getPattern();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException25 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray26 = cardanEulerSingularityException25.getArguments();
        java.lang.Object[] objArray27 = cardanEulerSingularityException25.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException29 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray30 = cardanEulerSingularityException29.getArguments();
        cardanEulerSingularityException25.addSuppressed((java.lang.Throwable) cardanEulerSingularityException29);
        java.lang.Object[] objArray32 = cardanEulerSingularityException29.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException34 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray35 = cardanEulerSingularityException34.getArguments();
        java.lang.Throwable[] throwableArray36 = cardanEulerSingularityException34.getSuppressed();
        java.lang.String str37 = cardanEulerSingularityException34.getPattern();
        cardanEulerSingularityException29.addSuppressed((java.lang.Throwable) cardanEulerSingularityException34);
        java.lang.Object[] objArray39 = cardanEulerSingularityException29.getArguments();
        java.lang.Throwable[] throwableArray40 = cardanEulerSingularityException29.getSuppressed();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException42 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray43 = cardanEulerSingularityException42.getArguments();
        java.lang.String str44 = cardanEulerSingularityException42.getPattern();
        java.lang.Object[] objArray45 = cardanEulerSingularityException42.getArguments();
        java.lang.Object[] objArray46 = cardanEulerSingularityException42.getArguments();
        java.lang.String str47 = cardanEulerSingularityException42.getPattern();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException49 = new org.apache.commons.math.geometry.CardanEulerSingularityException(true);
        java.lang.Object[] objArray50 = cardanEulerSingularityException49.getArguments();
        java.lang.Throwable[] throwableArray51 = cardanEulerSingularityException49.getSuppressed();
        java.lang.Throwable[] throwableArray52 = cardanEulerSingularityException49.getSuppressed();
        cardanEulerSingularityException42.addSuppressed((java.lang.Throwable) cardanEulerSingularityException49);
        cardanEulerSingularityException29.addSuppressed((java.lang.Throwable) cardanEulerSingularityException42);
        java.lang.String str55 = cardanEulerSingularityException29.getPattern();
        java.lang.Throwable[] throwableArray56 = cardanEulerSingularityException29.getSuppressed();
        java.lang.Throwable[] throwableArray57 = cardanEulerSingularityException29.getSuppressed();
        cardanEulerSingularityException21.addSuppressed((java.lang.Throwable) cardanEulerSingularityException29);
        cardanEulerSingularityException1.addSuppressed((java.lang.Throwable) cardanEulerSingularityException29);
        java.lang.Throwable[] throwableArray60 = cardanEulerSingularityException29.getSuppressed();
        org.junit.Assert.assertNotNull(objArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray2), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray2), "[]");
        org.junit.Assert.assertNotNull(objArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray3), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray3), "[]");
        org.junit.Assert.assertNotNull(objArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray6), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray6), "[]");
        org.junit.Assert.assertNotNull(throwableArray8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Euler angles singularity" + "'", str9, "Euler angles singularity");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Euler angles singularity" + "'", str15, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray16), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray16), "[]");
        org.junit.Assert.assertNotNull(objArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray17), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray17), "[]");
        org.junit.Assert.assertNotNull(throwableArray19);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "Cardan angles singularity" + "'", str22, "Cardan angles singularity");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "Cardan angles singularity" + "'", str23, "Cardan angles singularity");
        org.junit.Assert.assertNotNull(objArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray26), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray26), "[]");
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray27), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray27), "[]");
        org.junit.Assert.assertNotNull(objArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray30), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray30), "[]");
        org.junit.Assert.assertNotNull(objArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray32), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray32), "[]");
        org.junit.Assert.assertNotNull(objArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray35), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray35), "[]");
        org.junit.Assert.assertNotNull(throwableArray36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "Euler angles singularity" + "'", str37, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray39), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray39), "[]");
        org.junit.Assert.assertNotNull(throwableArray40);
        org.junit.Assert.assertNotNull(objArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray43), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray43), "[]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "Euler angles singularity" + "'", str44, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray45), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray45), "[]");
        org.junit.Assert.assertNotNull(objArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray46), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray46), "[]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "Euler angles singularity" + "'", str47, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray50), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray50), "[]");
        org.junit.Assert.assertNotNull(throwableArray51);
        org.junit.Assert.assertNotNull(throwableArray52);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "Euler angles singularity" + "'", str55, "Euler angles singularity");
        org.junit.Assert.assertNotNull(throwableArray56);
        org.junit.Assert.assertNotNull(throwableArray57);
        org.junit.Assert.assertNotNull(throwableArray60);
    }

    @Test
    public void test1739() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1739");
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException1 = new org.apache.commons.math.geometry.CardanEulerSingularityException(true);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException3 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        cardanEulerSingularityException1.addSuppressed((java.lang.Throwable) cardanEulerSingularityException3);
        java.lang.String str5 = cardanEulerSingularityException3.getPattern();
        java.lang.Object[] objArray6 = cardanEulerSingularityException3.getArguments();
        java.lang.Object[] objArray7 = cardanEulerSingularityException3.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException9 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray10 = cardanEulerSingularityException9.getArguments();
        java.lang.String str11 = cardanEulerSingularityException9.getPattern();
        java.lang.Object[] objArray12 = cardanEulerSingularityException9.getArguments();
        java.lang.Object[] objArray13 = cardanEulerSingularityException9.getArguments();
        java.lang.String str14 = cardanEulerSingularityException9.getPattern();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException16 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        cardanEulerSingularityException9.addSuppressed((java.lang.Throwable) cardanEulerSingularityException16);
        cardanEulerSingularityException3.addSuppressed((java.lang.Throwable) cardanEulerSingularityException16);
        java.lang.String str19 = cardanEulerSingularityException3.toString();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Euler angles singularity" + "'", str5, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray6), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray6), "[]");
        org.junit.Assert.assertNotNull(objArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray7), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray7), "[]");
        org.junit.Assert.assertNotNull(objArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray10), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray10), "[]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Euler angles singularity" + "'", str11, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray12), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray12), "[]");
        org.junit.Assert.assertNotNull(objArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray13), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray13), "[]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "Euler angles singularity" + "'", str14, "Euler angles singularity");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "org.apache.commons.math.geometry.CardanEulerSingularityException: Euler angles singularity" + "'", str19, "org.apache.commons.math.geometry.CardanEulerSingularityException: Euler angles singularity");
    }

    @Test
    public void test1740() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1740");
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException1 = new org.apache.commons.math.geometry.CardanEulerSingularityException(true);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException3 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        cardanEulerSingularityException1.addSuppressed((java.lang.Throwable) cardanEulerSingularityException3);
        java.lang.String str5 = cardanEulerSingularityException3.getPattern();
        java.lang.Throwable[] throwableArray6 = cardanEulerSingularityException3.getSuppressed();
        java.lang.String str7 = cardanEulerSingularityException3.getPattern();
        java.lang.Throwable[] throwableArray8 = cardanEulerSingularityException3.getSuppressed();
        java.lang.Throwable[] throwableArray9 = cardanEulerSingularityException3.getSuppressed();
        java.lang.Object[] objArray10 = cardanEulerSingularityException3.getArguments();
        java.lang.String str11 = cardanEulerSingularityException3.toString();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Euler angles singularity" + "'", str5, "Euler angles singularity");
        org.junit.Assert.assertNotNull(throwableArray6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Euler angles singularity" + "'", str7, "Euler angles singularity");
        org.junit.Assert.assertNotNull(throwableArray8);
        org.junit.Assert.assertNotNull(throwableArray9);
        org.junit.Assert.assertNotNull(objArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray10), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray10), "[]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "org.apache.commons.math.geometry.CardanEulerSingularityException: Euler angles singularity" + "'", str11, "org.apache.commons.math.geometry.CardanEulerSingularityException: Euler angles singularity");
    }

    @Test
    public void test1741() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1741");
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException1 = new org.apache.commons.math.geometry.CardanEulerSingularityException(true);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException3 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        cardanEulerSingularityException1.addSuppressed((java.lang.Throwable) cardanEulerSingularityException3);
        java.lang.String str5 = cardanEulerSingularityException3.getPattern();
        java.lang.Throwable[] throwableArray6 = cardanEulerSingularityException3.getSuppressed();
        java.lang.String str7 = cardanEulerSingularityException3.getPattern();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException9 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray10 = cardanEulerSingularityException9.getArguments();
        java.lang.Object[] objArray11 = cardanEulerSingularityException9.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException13 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray14 = cardanEulerSingularityException13.getArguments();
        cardanEulerSingularityException9.addSuppressed((java.lang.Throwable) cardanEulerSingularityException13);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException17 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray18 = cardanEulerSingularityException17.getArguments();
        java.lang.Object[] objArray19 = cardanEulerSingularityException17.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException21 = new org.apache.commons.math.geometry.CardanEulerSingularityException(true);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException23 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        cardanEulerSingularityException21.addSuppressed((java.lang.Throwable) cardanEulerSingularityException23);
        cardanEulerSingularityException17.addSuppressed((java.lang.Throwable) cardanEulerSingularityException21);
        java.lang.Throwable[] throwableArray26 = cardanEulerSingularityException17.getSuppressed();
        cardanEulerSingularityException13.addSuppressed((java.lang.Throwable) cardanEulerSingularityException17);
        java.lang.Object[] objArray28 = cardanEulerSingularityException17.getArguments();
        cardanEulerSingularityException3.addSuppressed((java.lang.Throwable) cardanEulerSingularityException17);
        java.lang.Object[] objArray30 = cardanEulerSingularityException17.getArguments();
        java.lang.Object[] objArray31 = cardanEulerSingularityException17.getArguments();
        java.lang.Object[] objArray32 = cardanEulerSingularityException17.getArguments();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Euler angles singularity" + "'", str5, "Euler angles singularity");
        org.junit.Assert.assertNotNull(throwableArray6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Euler angles singularity" + "'", str7, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray10), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray10), "[]");
        org.junit.Assert.assertNotNull(objArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray11), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray11), "[]");
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[]");
        org.junit.Assert.assertNotNull(objArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray18), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray18), "[]");
        org.junit.Assert.assertNotNull(objArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray19), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray19), "[]");
        org.junit.Assert.assertNotNull(throwableArray26);
        org.junit.Assert.assertNotNull(objArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray28), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray28), "[]");
        org.junit.Assert.assertNotNull(objArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray30), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray30), "[]");
        org.junit.Assert.assertNotNull(objArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray31), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray31), "[]");
        org.junit.Assert.assertNotNull(objArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray32), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray32), "[]");
    }

    @Test
    public void test1742() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1742");
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException1 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray2 = cardanEulerSingularityException1.getArguments();
        java.lang.String str3 = cardanEulerSingularityException1.getPattern();
        java.lang.Object[] objArray4 = cardanEulerSingularityException1.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException6 = new org.apache.commons.math.geometry.CardanEulerSingularityException(true);
        java.lang.Object[] objArray7 = cardanEulerSingularityException6.getArguments();
        java.lang.Object[] objArray8 = cardanEulerSingularityException6.getArguments();
        cardanEulerSingularityException1.addSuppressed((java.lang.Throwable) cardanEulerSingularityException6);
        java.lang.String str10 = cardanEulerSingularityException1.getPattern();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException12 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray13 = cardanEulerSingularityException12.getArguments();
        java.lang.Object[] objArray14 = cardanEulerSingularityException12.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException16 = new org.apache.commons.math.geometry.CardanEulerSingularityException(true);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException18 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        cardanEulerSingularityException16.addSuppressed((java.lang.Throwable) cardanEulerSingularityException18);
        cardanEulerSingularityException12.addSuppressed((java.lang.Throwable) cardanEulerSingularityException16);
        java.lang.String str21 = cardanEulerSingularityException12.getPattern();
        cardanEulerSingularityException1.addSuppressed((java.lang.Throwable) cardanEulerSingularityException12);
        java.lang.Object[] objArray23 = cardanEulerSingularityException12.getArguments();
        java.lang.String str24 = cardanEulerSingularityException12.getPattern();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException26 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray27 = cardanEulerSingularityException26.getArguments();
        java.lang.String str28 = cardanEulerSingularityException26.getPattern();
        java.lang.Object[] objArray29 = cardanEulerSingularityException26.getArguments();
        java.lang.Object[] objArray30 = cardanEulerSingularityException26.getArguments();
        java.lang.String str31 = cardanEulerSingularityException26.getPattern();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException33 = new org.apache.commons.math.geometry.CardanEulerSingularityException(true);
        java.lang.Object[] objArray34 = cardanEulerSingularityException33.getArguments();
        java.lang.Throwable[] throwableArray35 = cardanEulerSingularityException33.getSuppressed();
        java.lang.Throwable[] throwableArray36 = cardanEulerSingularityException33.getSuppressed();
        cardanEulerSingularityException26.addSuppressed((java.lang.Throwable) cardanEulerSingularityException33);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException39 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray40 = cardanEulerSingularityException39.getArguments();
        java.lang.Object[] objArray41 = cardanEulerSingularityException39.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException43 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray44 = cardanEulerSingularityException43.getArguments();
        cardanEulerSingularityException39.addSuppressed((java.lang.Throwable) cardanEulerSingularityException43);
        java.lang.Throwable[] throwableArray46 = cardanEulerSingularityException43.getSuppressed();
        java.lang.Object[] objArray47 = cardanEulerSingularityException43.getArguments();
        cardanEulerSingularityException26.addSuppressed((java.lang.Throwable) cardanEulerSingularityException43);
        java.lang.String str49 = cardanEulerSingularityException43.getPattern();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException51 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray52 = cardanEulerSingularityException51.getArguments();
        java.lang.String str53 = cardanEulerSingularityException51.getPattern();
        java.lang.Object[] objArray54 = cardanEulerSingularityException51.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException56 = new org.apache.commons.math.geometry.CardanEulerSingularityException(true);
        java.lang.Object[] objArray57 = cardanEulerSingularityException56.getArguments();
        java.lang.Object[] objArray58 = cardanEulerSingularityException56.getArguments();
        java.lang.String str59 = cardanEulerSingularityException56.getPattern();
        java.lang.String str60 = cardanEulerSingularityException56.getPattern();
        cardanEulerSingularityException51.addSuppressed((java.lang.Throwable) cardanEulerSingularityException56);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException63 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray64 = cardanEulerSingularityException63.getArguments();
        java.lang.String str65 = cardanEulerSingularityException63.getPattern();
        java.lang.Object[] objArray66 = cardanEulerSingularityException63.getArguments();
        java.lang.Object[] objArray67 = cardanEulerSingularityException63.getArguments();
        java.lang.String str68 = cardanEulerSingularityException63.getPattern();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException70 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        cardanEulerSingularityException63.addSuppressed((java.lang.Throwable) cardanEulerSingularityException70);
        java.lang.String str72 = cardanEulerSingularityException63.getPattern();
        java.lang.String str73 = cardanEulerSingularityException63.getPattern();
        cardanEulerSingularityException51.addSuppressed((java.lang.Throwable) cardanEulerSingularityException63);
        java.lang.Throwable[] throwableArray75 = cardanEulerSingularityException51.getSuppressed();
        java.lang.String str76 = cardanEulerSingularityException51.getPattern();
        cardanEulerSingularityException43.addSuppressed((java.lang.Throwable) cardanEulerSingularityException51);
        java.lang.String str78 = cardanEulerSingularityException43.getPattern();
        cardanEulerSingularityException12.addSuppressed((java.lang.Throwable) cardanEulerSingularityException43);
        java.lang.Throwable[] throwableArray80 = cardanEulerSingularityException12.getSuppressed();
        java.lang.String str81 = cardanEulerSingularityException12.toString();
        org.junit.Assert.assertNotNull(objArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray2), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray2), "[]");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Euler angles singularity" + "'", str3, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray4), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray4), "[]");
        org.junit.Assert.assertNotNull(objArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray7), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray7), "[]");
        org.junit.Assert.assertNotNull(objArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray8), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray8), "[]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Euler angles singularity" + "'", str10, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray13), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray13), "[]");
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "Euler angles singularity" + "'", str21, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray23), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray23), "[]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "Euler angles singularity" + "'", str24, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray27), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray27), "[]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "Euler angles singularity" + "'", str28, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray29), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray29), "[]");
        org.junit.Assert.assertNotNull(objArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray30), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray30), "[]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "Euler angles singularity" + "'", str31, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray34), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray34), "[]");
        org.junit.Assert.assertNotNull(throwableArray35);
        org.junit.Assert.assertNotNull(throwableArray36);
        org.junit.Assert.assertNotNull(objArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray40), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray40), "[]");
        org.junit.Assert.assertNotNull(objArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray41), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray41), "[]");
        org.junit.Assert.assertNotNull(objArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray44), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray44), "[]");
        org.junit.Assert.assertNotNull(throwableArray46);
        org.junit.Assert.assertNotNull(objArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray47), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray47), "[]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "Euler angles singularity" + "'", str49, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray52), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray52), "[]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "Euler angles singularity" + "'", str53, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray54), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray54), "[]");
        org.junit.Assert.assertNotNull(objArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray57), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray57), "[]");
        org.junit.Assert.assertNotNull(objArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray58), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray58), "[]");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "Cardan angles singularity" + "'", str59, "Cardan angles singularity");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "Cardan angles singularity" + "'", str60, "Cardan angles singularity");
        org.junit.Assert.assertNotNull(objArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray64), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray64), "[]");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "Euler angles singularity" + "'", str65, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray66), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray66), "[]");
        org.junit.Assert.assertNotNull(objArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray67), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray67), "[]");
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "Euler angles singularity" + "'", str68, "Euler angles singularity");
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "Euler angles singularity" + "'", str72, "Euler angles singularity");
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "Euler angles singularity" + "'", str73, "Euler angles singularity");
        org.junit.Assert.assertNotNull(throwableArray75);
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "Euler angles singularity" + "'", str76, "Euler angles singularity");
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "Euler angles singularity" + "'", str78, "Euler angles singularity");
        org.junit.Assert.assertNotNull(throwableArray80);
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "org.apache.commons.math.geometry.CardanEulerSingularityException: Euler angles singularity" + "'", str81, "org.apache.commons.math.geometry.CardanEulerSingularityException: Euler angles singularity");
    }

    @Test
    public void test1743() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1743");
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException1 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray2 = cardanEulerSingularityException1.getArguments();
        java.lang.Object[] objArray3 = cardanEulerSingularityException1.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException5 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray6 = cardanEulerSingularityException5.getArguments();
        cardanEulerSingularityException1.addSuppressed((java.lang.Throwable) cardanEulerSingularityException5);
        java.lang.Object[] objArray8 = cardanEulerSingularityException5.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException10 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray11 = cardanEulerSingularityException10.getArguments();
        java.lang.Throwable[] throwableArray12 = cardanEulerSingularityException10.getSuppressed();
        java.lang.String str13 = cardanEulerSingularityException10.getPattern();
        cardanEulerSingularityException5.addSuppressed((java.lang.Throwable) cardanEulerSingularityException10);
        java.lang.Object[] objArray15 = cardanEulerSingularityException5.getArguments();
        java.lang.Throwable[] throwableArray16 = cardanEulerSingularityException5.getSuppressed();
        java.lang.String str17 = cardanEulerSingularityException5.getPattern();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException19 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray20 = cardanEulerSingularityException19.getArguments();
        java.lang.Object[] objArray21 = cardanEulerSingularityException19.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException23 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray24 = cardanEulerSingularityException23.getArguments();
        cardanEulerSingularityException19.addSuppressed((java.lang.Throwable) cardanEulerSingularityException23);
        java.lang.Throwable[] throwableArray26 = cardanEulerSingularityException23.getSuppressed();
        java.lang.Object[] objArray27 = cardanEulerSingularityException23.getArguments();
        java.lang.Throwable[] throwableArray28 = cardanEulerSingularityException23.getSuppressed();
        java.lang.Object[] objArray29 = cardanEulerSingularityException23.getArguments();
        java.lang.Object[] objArray30 = cardanEulerSingularityException23.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException32 = new org.apache.commons.math.geometry.CardanEulerSingularityException(true);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException34 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        cardanEulerSingularityException32.addSuppressed((java.lang.Throwable) cardanEulerSingularityException34);
        java.lang.String str36 = cardanEulerSingularityException34.getPattern();
        java.lang.Throwable[] throwableArray37 = cardanEulerSingularityException34.getSuppressed();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException39 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.String str40 = cardanEulerSingularityException39.getPattern();
        java.lang.Object[] objArray41 = cardanEulerSingularityException39.getArguments();
        java.lang.String str42 = cardanEulerSingularityException39.getPattern();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException44 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.String str45 = cardanEulerSingularityException44.getPattern();
        java.lang.Throwable[] throwableArray46 = cardanEulerSingularityException44.getSuppressed();
        cardanEulerSingularityException39.addSuppressed((java.lang.Throwable) cardanEulerSingularityException44);
        cardanEulerSingularityException34.addSuppressed((java.lang.Throwable) cardanEulerSingularityException44);
        java.lang.Throwable[] throwableArray49 = cardanEulerSingularityException34.getSuppressed();
        cardanEulerSingularityException23.addSuppressed((java.lang.Throwable) cardanEulerSingularityException34);
        cardanEulerSingularityException5.addSuppressed((java.lang.Throwable) cardanEulerSingularityException34);
        org.junit.Assert.assertNotNull(objArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray2), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray2), "[]");
        org.junit.Assert.assertNotNull(objArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray3), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray3), "[]");
        org.junit.Assert.assertNotNull(objArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray6), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray6), "[]");
        org.junit.Assert.assertNotNull(objArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray8), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray8), "[]");
        org.junit.Assert.assertNotNull(objArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray11), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray11), "[]");
        org.junit.Assert.assertNotNull(throwableArray12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Euler angles singularity" + "'", str13, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray15), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray15), "[]");
        org.junit.Assert.assertNotNull(throwableArray16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "Euler angles singularity" + "'", str17, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray20), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray20), "[]");
        org.junit.Assert.assertNotNull(objArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray21), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray21), "[]");
        org.junit.Assert.assertNotNull(objArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray24), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray24), "[]");
        org.junit.Assert.assertNotNull(throwableArray26);
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray27), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray27), "[]");
        org.junit.Assert.assertNotNull(throwableArray28);
        org.junit.Assert.assertNotNull(objArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray29), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray29), "[]");
        org.junit.Assert.assertNotNull(objArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray30), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray30), "[]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "Euler angles singularity" + "'", str36, "Euler angles singularity");
        org.junit.Assert.assertNotNull(throwableArray37);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "Euler angles singularity" + "'", str40, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray41), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray41), "[]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "Euler angles singularity" + "'", str42, "Euler angles singularity");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "Euler angles singularity" + "'", str45, "Euler angles singularity");
        org.junit.Assert.assertNotNull(throwableArray46);
        org.junit.Assert.assertNotNull(throwableArray49);
    }

    @Test
    public void test1744() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1744");
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException1 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray2 = cardanEulerSingularityException1.getArguments();
        java.lang.Object[] objArray3 = cardanEulerSingularityException1.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException5 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray6 = cardanEulerSingularityException5.getArguments();
        cardanEulerSingularityException1.addSuppressed((java.lang.Throwable) cardanEulerSingularityException5);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException9 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray10 = cardanEulerSingularityException9.getArguments();
        java.lang.Object[] objArray11 = cardanEulerSingularityException9.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException13 = new org.apache.commons.math.geometry.CardanEulerSingularityException(true);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException15 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        cardanEulerSingularityException13.addSuppressed((java.lang.Throwable) cardanEulerSingularityException15);
        cardanEulerSingularityException9.addSuppressed((java.lang.Throwable) cardanEulerSingularityException13);
        java.lang.Throwable[] throwableArray18 = cardanEulerSingularityException9.getSuppressed();
        cardanEulerSingularityException5.addSuppressed((java.lang.Throwable) cardanEulerSingularityException9);
        java.lang.Throwable[] throwableArray20 = cardanEulerSingularityException5.getSuppressed();
        java.lang.String str21 = cardanEulerSingularityException5.getPattern();
        java.lang.Object[] objArray22 = cardanEulerSingularityException5.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException24 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.String str25 = cardanEulerSingularityException24.getPattern();
        java.lang.Object[] objArray26 = cardanEulerSingularityException24.getArguments();
        java.lang.String str27 = cardanEulerSingularityException24.getPattern();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException29 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.String str30 = cardanEulerSingularityException29.getPattern();
        java.lang.Throwable[] throwableArray31 = cardanEulerSingularityException29.getSuppressed();
        cardanEulerSingularityException24.addSuppressed((java.lang.Throwable) cardanEulerSingularityException29);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException34 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.String str35 = cardanEulerSingularityException34.getPattern();
        java.lang.Object[] objArray36 = cardanEulerSingularityException34.getArguments();
        java.lang.String str37 = cardanEulerSingularityException34.getPattern();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException39 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.String str40 = cardanEulerSingularityException39.getPattern();
        java.lang.Throwable[] throwableArray41 = cardanEulerSingularityException39.getSuppressed();
        cardanEulerSingularityException34.addSuppressed((java.lang.Throwable) cardanEulerSingularityException39);
        cardanEulerSingularityException24.addSuppressed((java.lang.Throwable) cardanEulerSingularityException34);
        java.lang.String str44 = cardanEulerSingularityException24.getPattern();
        java.lang.String str45 = cardanEulerSingularityException24.getPattern();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException47 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray48 = cardanEulerSingularityException47.getArguments();
        java.lang.String str49 = cardanEulerSingularityException47.getPattern();
        java.lang.Object[] objArray50 = cardanEulerSingularityException47.getArguments();
        java.lang.Object[] objArray51 = cardanEulerSingularityException47.getArguments();
        java.lang.String str52 = cardanEulerSingularityException47.getPattern();
        cardanEulerSingularityException24.addSuppressed((java.lang.Throwable) cardanEulerSingularityException47);
        java.lang.Throwable[] throwableArray54 = cardanEulerSingularityException24.getSuppressed();
        cardanEulerSingularityException5.addSuppressed((java.lang.Throwable) cardanEulerSingularityException24);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException57 = new org.apache.commons.math.geometry.CardanEulerSingularityException(true);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException59 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        cardanEulerSingularityException57.addSuppressed((java.lang.Throwable) cardanEulerSingularityException59);
        java.lang.String str61 = cardanEulerSingularityException59.getPattern();
        java.lang.Object[] objArray62 = cardanEulerSingularityException59.getArguments();
        java.lang.Object[] objArray63 = cardanEulerSingularityException59.getArguments();
        java.lang.Throwable[] throwableArray64 = cardanEulerSingularityException59.getSuppressed();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException66 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray67 = cardanEulerSingularityException66.getArguments();
        java.lang.Object[] objArray68 = cardanEulerSingularityException66.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException70 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.String str71 = cardanEulerSingularityException70.getPattern();
        java.lang.Object[] objArray72 = cardanEulerSingularityException70.getArguments();
        java.lang.String str73 = cardanEulerSingularityException70.getPattern();
        java.lang.String str74 = cardanEulerSingularityException70.getPattern();
        java.lang.Object[] objArray75 = cardanEulerSingularityException70.getArguments();
        cardanEulerSingularityException66.addSuppressed((java.lang.Throwable) cardanEulerSingularityException70);
        java.lang.String str77 = cardanEulerSingularityException66.getPattern();
        cardanEulerSingularityException59.addSuppressed((java.lang.Throwable) cardanEulerSingularityException66);
        cardanEulerSingularityException24.addSuppressed((java.lang.Throwable) cardanEulerSingularityException66);
        org.junit.Assert.assertNotNull(objArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray2), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray2), "[]");
        org.junit.Assert.assertNotNull(objArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray3), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray3), "[]");
        org.junit.Assert.assertNotNull(objArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray6), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray6), "[]");
        org.junit.Assert.assertNotNull(objArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray10), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray10), "[]");
        org.junit.Assert.assertNotNull(objArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray11), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray11), "[]");
        org.junit.Assert.assertNotNull(throwableArray18);
        org.junit.Assert.assertNotNull(throwableArray20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "Euler angles singularity" + "'", str21, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray22), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray22), "[]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "Euler angles singularity" + "'", str25, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray26), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray26), "[]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "Euler angles singularity" + "'", str27, "Euler angles singularity");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "Euler angles singularity" + "'", str30, "Euler angles singularity");
        org.junit.Assert.assertNotNull(throwableArray31);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "Euler angles singularity" + "'", str35, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray36), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray36), "[]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "Euler angles singularity" + "'", str37, "Euler angles singularity");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "Euler angles singularity" + "'", str40, "Euler angles singularity");
        org.junit.Assert.assertNotNull(throwableArray41);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "Euler angles singularity" + "'", str44, "Euler angles singularity");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "Euler angles singularity" + "'", str45, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray48), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray48), "[]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "Euler angles singularity" + "'", str49, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray50), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray50), "[]");
        org.junit.Assert.assertNotNull(objArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray51), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray51), "[]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "Euler angles singularity" + "'", str52, "Euler angles singularity");
        org.junit.Assert.assertNotNull(throwableArray54);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "Euler angles singularity" + "'", str61, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray62), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray62), "[]");
        org.junit.Assert.assertNotNull(objArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray63), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray63), "[]");
        org.junit.Assert.assertNotNull(throwableArray64);
        org.junit.Assert.assertNotNull(objArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray67), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray67), "[]");
        org.junit.Assert.assertNotNull(objArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray68), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray68), "[]");
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "Euler angles singularity" + "'", str71, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray72), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray72), "[]");
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "Euler angles singularity" + "'", str73, "Euler angles singularity");
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "Euler angles singularity" + "'", str74, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray75), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray75), "[]");
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "Euler angles singularity" + "'", str77, "Euler angles singularity");
    }

    @Test
    public void test1745() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1745");
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException1 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray2 = cardanEulerSingularityException1.getArguments();
        java.lang.Throwable[] throwableArray3 = cardanEulerSingularityException1.getSuppressed();
        java.lang.String str4 = cardanEulerSingularityException1.getPattern();
        java.lang.Throwable[] throwableArray5 = cardanEulerSingularityException1.getSuppressed();
        java.lang.String str6 = cardanEulerSingularityException1.getPattern();
        java.lang.String str7 = cardanEulerSingularityException1.getPattern();
        java.lang.String str8 = cardanEulerSingularityException1.getPattern();
        java.lang.Object[] objArray9 = cardanEulerSingularityException1.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException11 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.String str12 = cardanEulerSingularityException11.getPattern();
        java.lang.Object[] objArray13 = cardanEulerSingularityException11.getArguments();
        java.lang.String str14 = cardanEulerSingularityException11.getPattern();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException16 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.String str17 = cardanEulerSingularityException16.getPattern();
        java.lang.Throwable[] throwableArray18 = cardanEulerSingularityException16.getSuppressed();
        cardanEulerSingularityException11.addSuppressed((java.lang.Throwable) cardanEulerSingularityException16);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException21 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.String str22 = cardanEulerSingularityException21.getPattern();
        java.lang.Object[] objArray23 = cardanEulerSingularityException21.getArguments();
        java.lang.String str24 = cardanEulerSingularityException21.getPattern();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException26 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.String str27 = cardanEulerSingularityException26.getPattern();
        java.lang.Throwable[] throwableArray28 = cardanEulerSingularityException26.getSuppressed();
        cardanEulerSingularityException21.addSuppressed((java.lang.Throwable) cardanEulerSingularityException26);
        cardanEulerSingularityException11.addSuppressed((java.lang.Throwable) cardanEulerSingularityException21);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException32 = new org.apache.commons.math.geometry.CardanEulerSingularityException(true);
        cardanEulerSingularityException11.addSuppressed((java.lang.Throwable) cardanEulerSingularityException32);
        java.lang.Object[] objArray34 = cardanEulerSingularityException11.getArguments();
        cardanEulerSingularityException1.addSuppressed((java.lang.Throwable) cardanEulerSingularityException11);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException37 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray38 = cardanEulerSingularityException37.getArguments();
        java.lang.String str39 = cardanEulerSingularityException37.getPattern();
        java.lang.Object[] objArray40 = cardanEulerSingularityException37.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException42 = new org.apache.commons.math.geometry.CardanEulerSingularityException(true);
        java.lang.Object[] objArray43 = cardanEulerSingularityException42.getArguments();
        java.lang.Object[] objArray44 = cardanEulerSingularityException42.getArguments();
        cardanEulerSingularityException37.addSuppressed((java.lang.Throwable) cardanEulerSingularityException42);
        java.lang.String str46 = cardanEulerSingularityException37.getPattern();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException48 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray49 = cardanEulerSingularityException48.getArguments();
        java.lang.Object[] objArray50 = cardanEulerSingularityException48.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException52 = new org.apache.commons.math.geometry.CardanEulerSingularityException(true);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException54 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        cardanEulerSingularityException52.addSuppressed((java.lang.Throwable) cardanEulerSingularityException54);
        cardanEulerSingularityException48.addSuppressed((java.lang.Throwable) cardanEulerSingularityException52);
        java.lang.String str57 = cardanEulerSingularityException48.getPattern();
        cardanEulerSingularityException37.addSuppressed((java.lang.Throwable) cardanEulerSingularityException48);
        cardanEulerSingularityException1.addSuppressed((java.lang.Throwable) cardanEulerSingularityException48);
        java.lang.String str60 = cardanEulerSingularityException1.toString();
        org.junit.Assert.assertNotNull(objArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray2), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray2), "[]");
        org.junit.Assert.assertNotNull(throwableArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Euler angles singularity" + "'", str4, "Euler angles singularity");
        org.junit.Assert.assertNotNull(throwableArray5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "Euler angles singularity" + "'", str6, "Euler angles singularity");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Euler angles singularity" + "'", str7, "Euler angles singularity");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Euler angles singularity" + "'", str8, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray9), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray9), "[]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Euler angles singularity" + "'", str12, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray13), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray13), "[]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "Euler angles singularity" + "'", str14, "Euler angles singularity");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "Euler angles singularity" + "'", str17, "Euler angles singularity");
        org.junit.Assert.assertNotNull(throwableArray18);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "Euler angles singularity" + "'", str22, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray23), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray23), "[]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "Euler angles singularity" + "'", str24, "Euler angles singularity");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "Euler angles singularity" + "'", str27, "Euler angles singularity");
        org.junit.Assert.assertNotNull(throwableArray28);
        org.junit.Assert.assertNotNull(objArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray34), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray34), "[]");
        org.junit.Assert.assertNotNull(objArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray38), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray38), "[]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "Euler angles singularity" + "'", str39, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray40), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray40), "[]");
        org.junit.Assert.assertNotNull(objArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray43), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray43), "[]");
        org.junit.Assert.assertNotNull(objArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray44), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray44), "[]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "Euler angles singularity" + "'", str46, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray49), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray49), "[]");
        org.junit.Assert.assertNotNull(objArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray50), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray50), "[]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "Euler angles singularity" + "'", str57, "Euler angles singularity");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "org.apache.commons.math.geometry.CardanEulerSingularityException: Euler angles singularity" + "'", str60, "org.apache.commons.math.geometry.CardanEulerSingularityException: Euler angles singularity");
    }

    @Test
    public void test1746() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1746");
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException1 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray2 = cardanEulerSingularityException1.getArguments();
        java.lang.Object[] objArray3 = cardanEulerSingularityException1.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException5 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray6 = cardanEulerSingularityException5.getArguments();
        cardanEulerSingularityException1.addSuppressed((java.lang.Throwable) cardanEulerSingularityException5);
        java.lang.Throwable[] throwableArray8 = cardanEulerSingularityException5.getSuppressed();
        java.lang.Object[] objArray9 = cardanEulerSingularityException5.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException11 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray12 = cardanEulerSingularityException11.getArguments();
        java.lang.Object[] objArray13 = cardanEulerSingularityException11.getArguments();
        java.lang.Object[] objArray14 = cardanEulerSingularityException11.getArguments();
        cardanEulerSingularityException5.addSuppressed((java.lang.Throwable) cardanEulerSingularityException11);
        java.lang.String str16 = cardanEulerSingularityException5.getPattern();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException18 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray19 = cardanEulerSingularityException18.getArguments();
        java.lang.Object[] objArray20 = cardanEulerSingularityException18.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException22 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray23 = cardanEulerSingularityException22.getArguments();
        cardanEulerSingularityException18.addSuppressed((java.lang.Throwable) cardanEulerSingularityException22);
        java.lang.Object[] objArray25 = cardanEulerSingularityException22.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException27 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray28 = cardanEulerSingularityException27.getArguments();
        java.lang.Throwable[] throwableArray29 = cardanEulerSingularityException27.getSuppressed();
        java.lang.String str30 = cardanEulerSingularityException27.getPattern();
        cardanEulerSingularityException22.addSuppressed((java.lang.Throwable) cardanEulerSingularityException27);
        java.lang.Object[] objArray32 = cardanEulerSingularityException22.getArguments();
        java.lang.String str33 = cardanEulerSingularityException22.getPattern();
        java.lang.Object[] objArray34 = cardanEulerSingularityException22.getArguments();
        cardanEulerSingularityException5.addSuppressed((java.lang.Throwable) cardanEulerSingularityException22);
        java.lang.String str36 = cardanEulerSingularityException5.getPattern();
        java.lang.Throwable[] throwableArray37 = cardanEulerSingularityException5.getSuppressed();
        java.lang.String str38 = cardanEulerSingularityException5.toString();
        org.junit.Assert.assertNotNull(objArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray2), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray2), "[]");
        org.junit.Assert.assertNotNull(objArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray3), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray3), "[]");
        org.junit.Assert.assertNotNull(objArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray6), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray6), "[]");
        org.junit.Assert.assertNotNull(throwableArray8);
        org.junit.Assert.assertNotNull(objArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray9), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray9), "[]");
        org.junit.Assert.assertNotNull(objArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray12), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray12), "[]");
        org.junit.Assert.assertNotNull(objArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray13), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray13), "[]");
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "Euler angles singularity" + "'", str16, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray19), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray19), "[]");
        org.junit.Assert.assertNotNull(objArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray20), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray20), "[]");
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray23), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray23), "[]");
        org.junit.Assert.assertNotNull(objArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray25), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray25), "[]");
        org.junit.Assert.assertNotNull(objArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray28), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray28), "[]");
        org.junit.Assert.assertNotNull(throwableArray29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "Euler angles singularity" + "'", str30, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray32), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray32), "[]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "Euler angles singularity" + "'", str33, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray34), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray34), "[]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "Euler angles singularity" + "'", str36, "Euler angles singularity");
        org.junit.Assert.assertNotNull(throwableArray37);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "org.apache.commons.math.geometry.CardanEulerSingularityException: Euler angles singularity" + "'", str38, "org.apache.commons.math.geometry.CardanEulerSingularityException: Euler angles singularity");
    }

    @Test
    public void test1747() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1747");
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException1 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray2 = cardanEulerSingularityException1.getArguments();
        java.lang.String str3 = cardanEulerSingularityException1.getPattern();
        java.lang.Object[] objArray4 = cardanEulerSingularityException1.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException6 = new org.apache.commons.math.geometry.CardanEulerSingularityException(true);
        java.lang.Object[] objArray7 = cardanEulerSingularityException6.getArguments();
        java.lang.Object[] objArray8 = cardanEulerSingularityException6.getArguments();
        cardanEulerSingularityException1.addSuppressed((java.lang.Throwable) cardanEulerSingularityException6);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException11 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray12 = cardanEulerSingularityException11.getArguments();
        java.lang.Object[] objArray13 = cardanEulerSingularityException11.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException15 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray16 = cardanEulerSingularityException15.getArguments();
        cardanEulerSingularityException11.addSuppressed((java.lang.Throwable) cardanEulerSingularityException15);
        java.lang.Throwable[] throwableArray18 = cardanEulerSingularityException11.getSuppressed();
        java.lang.String str19 = cardanEulerSingularityException11.getPattern();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException21 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray22 = cardanEulerSingularityException21.getArguments();
        java.lang.String str23 = cardanEulerSingularityException21.getPattern();
        java.lang.Object[] objArray24 = cardanEulerSingularityException21.getArguments();
        java.lang.Object[] objArray25 = cardanEulerSingularityException21.getArguments();
        java.lang.String str26 = cardanEulerSingularityException21.getPattern();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException28 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        cardanEulerSingularityException21.addSuppressed((java.lang.Throwable) cardanEulerSingularityException28);
        cardanEulerSingularityException11.addSuppressed((java.lang.Throwable) cardanEulerSingularityException28);
        java.lang.Object[] objArray31 = cardanEulerSingularityException28.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException33 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray34 = cardanEulerSingularityException33.getArguments();
        java.lang.Object[] objArray35 = cardanEulerSingularityException33.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException37 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray38 = cardanEulerSingularityException37.getArguments();
        cardanEulerSingularityException33.addSuppressed((java.lang.Throwable) cardanEulerSingularityException37);
        java.lang.Throwable[] throwableArray40 = cardanEulerSingularityException33.getSuppressed();
        java.lang.String str41 = cardanEulerSingularityException33.getPattern();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException43 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray44 = cardanEulerSingularityException43.getArguments();
        java.lang.String str45 = cardanEulerSingularityException43.getPattern();
        java.lang.Object[] objArray46 = cardanEulerSingularityException43.getArguments();
        java.lang.Object[] objArray47 = cardanEulerSingularityException43.getArguments();
        java.lang.String str48 = cardanEulerSingularityException43.getPattern();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException50 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        cardanEulerSingularityException43.addSuppressed((java.lang.Throwable) cardanEulerSingularityException50);
        cardanEulerSingularityException33.addSuppressed((java.lang.Throwable) cardanEulerSingularityException50);
        java.lang.Object[] objArray53 = cardanEulerSingularityException50.getArguments();
        cardanEulerSingularityException28.addSuppressed((java.lang.Throwable) cardanEulerSingularityException50);
        java.lang.String str55 = cardanEulerSingularityException28.getPattern();
        java.lang.String str56 = cardanEulerSingularityException28.getPattern();
        cardanEulerSingularityException6.addSuppressed((java.lang.Throwable) cardanEulerSingularityException28);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException59 = new org.apache.commons.math.geometry.CardanEulerSingularityException(true);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException61 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        cardanEulerSingularityException59.addSuppressed((java.lang.Throwable) cardanEulerSingularityException61);
        java.lang.String str63 = cardanEulerSingularityException61.getPattern();
        java.lang.Throwable[] throwableArray64 = cardanEulerSingularityException61.getSuppressed();
        java.lang.String str65 = cardanEulerSingularityException61.getPattern();
        java.lang.Throwable[] throwableArray66 = cardanEulerSingularityException61.getSuppressed();
        java.lang.String str67 = cardanEulerSingularityException61.getPattern();
        java.lang.String str68 = cardanEulerSingularityException61.getPattern();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException70 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray71 = cardanEulerSingularityException70.getArguments();
        java.lang.Object[] objArray72 = cardanEulerSingularityException70.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException74 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray75 = cardanEulerSingularityException74.getArguments();
        cardanEulerSingularityException70.addSuppressed((java.lang.Throwable) cardanEulerSingularityException74);
        java.lang.Object[] objArray77 = cardanEulerSingularityException74.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException79 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray80 = cardanEulerSingularityException79.getArguments();
        java.lang.Throwable[] throwableArray81 = cardanEulerSingularityException79.getSuppressed();
        java.lang.String str82 = cardanEulerSingularityException79.getPattern();
        cardanEulerSingularityException74.addSuppressed((java.lang.Throwable) cardanEulerSingularityException79);
        java.lang.Object[] objArray84 = cardanEulerSingularityException74.getArguments();
        java.lang.Throwable[] throwableArray85 = cardanEulerSingularityException74.getSuppressed();
        java.lang.Object[] objArray86 = cardanEulerSingularityException74.getArguments();
        cardanEulerSingularityException61.addSuppressed((java.lang.Throwable) cardanEulerSingularityException74);
        java.lang.String str88 = cardanEulerSingularityException61.getPattern();
        cardanEulerSingularityException6.addSuppressed((java.lang.Throwable) cardanEulerSingularityException61);
        org.junit.Assert.assertNotNull(objArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray2), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray2), "[]");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Euler angles singularity" + "'", str3, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray4), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray4), "[]");
        org.junit.Assert.assertNotNull(objArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray7), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray7), "[]");
        org.junit.Assert.assertNotNull(objArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray8), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray8), "[]");
        org.junit.Assert.assertNotNull(objArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray12), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray12), "[]");
        org.junit.Assert.assertNotNull(objArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray13), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray13), "[]");
        org.junit.Assert.assertNotNull(objArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray16), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray16), "[]");
        org.junit.Assert.assertNotNull(throwableArray18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "Euler angles singularity" + "'", str19, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray22), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray22), "[]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "Euler angles singularity" + "'", str23, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray24), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray24), "[]");
        org.junit.Assert.assertNotNull(objArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray25), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray25), "[]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "Euler angles singularity" + "'", str26, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray31), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray31), "[]");
        org.junit.Assert.assertNotNull(objArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray34), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray34), "[]");
        org.junit.Assert.assertNotNull(objArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray35), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray35), "[]");
        org.junit.Assert.assertNotNull(objArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray38), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray38), "[]");
        org.junit.Assert.assertNotNull(throwableArray40);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "Euler angles singularity" + "'", str41, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray44), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray44), "[]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "Euler angles singularity" + "'", str45, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray46), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray46), "[]");
        org.junit.Assert.assertNotNull(objArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray47), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray47), "[]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "Euler angles singularity" + "'", str48, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray53), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray53), "[]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "Euler angles singularity" + "'", str55, "Euler angles singularity");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "Euler angles singularity" + "'", str56, "Euler angles singularity");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "Euler angles singularity" + "'", str63, "Euler angles singularity");
        org.junit.Assert.assertNotNull(throwableArray64);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "Euler angles singularity" + "'", str65, "Euler angles singularity");
        org.junit.Assert.assertNotNull(throwableArray66);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "Euler angles singularity" + "'", str67, "Euler angles singularity");
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "Euler angles singularity" + "'", str68, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray71), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray71), "[]");
        org.junit.Assert.assertNotNull(objArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray72), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray72), "[]");
        org.junit.Assert.assertNotNull(objArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray75), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray75), "[]");
        org.junit.Assert.assertNotNull(objArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray77), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray77), "[]");
        org.junit.Assert.assertNotNull(objArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray80), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray80), "[]");
        org.junit.Assert.assertNotNull(throwableArray81);
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "Euler angles singularity" + "'", str82, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray84), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray84), "[]");
        org.junit.Assert.assertNotNull(throwableArray85);
        org.junit.Assert.assertNotNull(objArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray86), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray86), "[]");
        org.junit.Assert.assertEquals("'" + str88 + "' != '" + "Euler angles singularity" + "'", str88, "Euler angles singularity");
    }
}

