import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class RegressionTest0 {

    public static boolean debug = false;

    @Test
    public void test0001() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0001");
        org.joda.time.ReadablePartial readablePartial0 = null;
        org.joda.time.ReadablePartial readablePartial1 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Days days2 = org.joda.time.Days.daysBetween(readablePartial0, readablePartial1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: ReadablePartial objects must not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
    }

    @Test
    public void test0002() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0002");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Days days1 = org.joda.time.Days.daysIn(readableInterval0);
        int int3 = days1.getValue((int) (short) 0);
        org.joda.time.ReadableInterval readableInterval4 = null;
        org.joda.time.Days days5 = org.joda.time.Days.daysIn(readableInterval4);
        int int7 = days5.getValue((int) (short) 0);
        org.joda.time.Days days8 = org.joda.time.Days.FIVE;
        org.joda.time.Days days9 = days5.minus(days8);
        int int10 = days1.compareTo((org.joda.time.base.BaseSingleFieldPeriod) days8);
        java.lang.Class<?> wildcardClass11 = days8.getClass();
        org.junit.Assert.assertNotNull(days1);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(days5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(days8);
        org.junit.Assert.assertNotNull(days9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertNotNull(wildcardClass11);
    }

    @Test
    public void test0003() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0003");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.ReadableInstant readableInstant1 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Days days2 = org.joda.time.Days.daysBetween(readableInstant0, readableInstant1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: ReadableInstant objects must not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
    }

    @Test
    public void test0004() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0004");
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Days days1 = org.joda.time.Days.parseDays("hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Invalid format: \"hi!\"");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
    }

    @Test
    public void test0005() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0005");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Days days1 = org.joda.time.Days.daysIn(readableInterval0);
        int int3 = days1.getValue((int) (short) 0);
        org.joda.time.Days days4 = org.joda.time.Days.FIVE;
        org.joda.time.Days days5 = days1.minus(days4);
        org.joda.time.DurationFieldType durationFieldType6 = null;
        int int7 = days4.get(durationFieldType6);
        // The following exception was thrown during execution in test generation
        try {
            int int9 = days4.getValue((int) (byte) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 100");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(days1);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(days4);
        org.junit.Assert.assertNotNull(days5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
    }

    @Test
    public void test0006() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0006");
        org.joda.time.Days days1 = org.joda.time.Days.days((int) (byte) 100);
        org.junit.Assert.assertNotNull(days1);
    }

    @Test
    public void test0007() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0007");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Days days1 = org.joda.time.Days.daysIn(readableInterval0);
        org.joda.time.Days days3 = days1.plus((int) (byte) 10);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.DurationFieldType durationFieldType5 = days3.getFieldType((int) (short) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 10");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(days1);
        org.junit.Assert.assertNotNull(days3);
    }

    @Test
    public void test0008() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0008");
        org.joda.time.Days days0 = org.joda.time.Days.FIVE;
        org.joda.time.Hours hours1 = days0.toStandardHours();
        org.junit.Assert.assertNotNull(days0);
        org.junit.Assert.assertNotNull(hours1);
    }

    @Test
    public void test0009() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0009");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Days days1 = org.joda.time.Days.daysIn(readableInterval0);
        org.joda.time.Days days3 = days1.plus((int) (byte) 10);
        // The following exception was thrown during execution in test generation
        try {
            int int5 = days1.getValue((int) (byte) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 10");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(days1);
        org.junit.Assert.assertNotNull(days3);
    }

    @Test
    public void test0010() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0010");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Days days1 = org.joda.time.Days.daysIn(readableInterval0);
        int int3 = days1.getValue((int) (short) 0);
        org.joda.time.DurationFieldType durationFieldType4 = null;
        int int5 = days1.get(durationFieldType4);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.DurationFieldType durationFieldType7 = days1.getFieldType((int) '4');
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 52");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(days1);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
    }

    @Test
    public void test0011() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0011");
        org.joda.time.Days days0 = org.joda.time.Days.FOUR;
        int int1 = days0.size();
        org.junit.Assert.assertNotNull(days0);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
    }

    @Test
    public void test0012() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0012");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Days days1 = org.joda.time.Days.daysIn(readableInterval0);
        int int3 = days1.getValue((int) (short) 0);
        org.joda.time.DurationFieldType durationFieldType4 = null;
        int int5 = days1.get(durationFieldType4);
        java.lang.Class<?> wildcardClass6 = days1.getClass();
        org.junit.Assert.assertNotNull(days1);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(wildcardClass6);
    }

    @Test
    public void test0013() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0013");
        org.joda.time.Days days1 = org.joda.time.Days.days((int) (byte) 1);
        org.joda.time.Seconds seconds2 = days1.toStandardSeconds();
        org.joda.time.ReadableInterval readableInterval3 = null;
        org.joda.time.Days days4 = org.joda.time.Days.daysIn(readableInterval3);
        int int6 = days4.getValue((int) (short) 0);
        org.joda.time.ReadableInterval readableInterval7 = null;
        org.joda.time.Days days8 = org.joda.time.Days.daysIn(readableInterval7);
        int int10 = days8.getValue((int) (short) 0);
        org.joda.time.Days days11 = org.joda.time.Days.FIVE;
        org.joda.time.Days days12 = days8.minus(days11);
        int int13 = days4.compareTo((org.joda.time.base.BaseSingleFieldPeriod) days11);
        org.joda.time.MutablePeriod mutablePeriod14 = days11.toMutablePeriod();
        org.joda.time.Days days15 = days11.negated();
        // The following exception was thrown during execution in test generation
        try {
            int int16 = seconds2.compareTo((org.joda.time.base.BaseSingleFieldPeriod) days15);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: class org.joda.time.Seconds cannot be compared to class org.joda.time.Days");
        } catch (java.lang.ClassCastException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(days1);
        org.junit.Assert.assertNotNull(seconds2);
        org.junit.Assert.assertNotNull(days4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNotNull(days8);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(days11);
        org.junit.Assert.assertNotNull(days12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertNotNull(mutablePeriod14);
        org.junit.Assert.assertNotNull(days15);
    }

    @Test
    public void test0014() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0014");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Days days1 = org.joda.time.Days.daysIn(readableInterval0);
        org.joda.time.ReadableInterval readableInterval2 = null;
        org.joda.time.Days days3 = org.joda.time.Days.daysIn(readableInterval2);
        int int5 = days3.getValue((int) (short) 0);
        org.joda.time.Days days6 = org.joda.time.Days.FIVE;
        org.joda.time.Days days7 = days3.minus(days6);
        org.joda.time.DurationFieldType durationFieldType8 = null;
        boolean boolean9 = days6.isSupported(durationFieldType8);
        org.joda.time.DurationFieldType durationFieldType11 = days6.getFieldType(0);
        int int12 = days1.get(durationFieldType11);
        org.joda.time.ReadableInterval readableInterval13 = null;
        org.joda.time.Days days14 = org.joda.time.Days.daysIn(readableInterval13);
        int int16 = days14.getValue((int) (short) 0);
        org.joda.time.Days days17 = org.joda.time.Days.FIVE;
        org.joda.time.Days days18 = days14.minus(days17);
        org.joda.time.DurationFieldType durationFieldType19 = null;
        int int20 = days17.get(durationFieldType19);
        org.joda.time.DurationFieldType durationFieldType21 = null;
        int int22 = days17.get(durationFieldType21);
        boolean boolean24 = days17.equals((java.lang.Object) 0L);
        boolean boolean25 = days1.isGreaterThan(days17);
        org.joda.time.ReadableInterval readableInterval26 = null;
        org.joda.time.Days days27 = org.joda.time.Days.daysIn(readableInterval26);
        int int29 = days27.getValue((int) (short) 0);
        org.joda.time.Days days30 = org.joda.time.Days.FIVE;
        org.joda.time.Days days31 = days27.minus(days30);
        org.joda.time.DurationFieldType durationFieldType32 = null;
        int int33 = days30.get(durationFieldType32);
        org.joda.time.DurationFieldType durationFieldType34 = null;
        int int35 = days30.get(durationFieldType34);
        boolean boolean37 = days30.equals((java.lang.Object) 0L);
        org.joda.time.Period period38 = days30.toPeriod();
        org.joda.time.Days days39 = days1.plus(days30);
        org.joda.time.DurationFieldType durationFieldType40 = days1.getFieldType();
        java.lang.Class<?> wildcardClass41 = days1.getClass();
        org.junit.Assert.assertNotNull(days1);
        org.junit.Assert.assertNotNull(days3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(days6);
        org.junit.Assert.assertNotNull(days7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(durationFieldType11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNotNull(days14);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertNotNull(days17);
        org.junit.Assert.assertNotNull(days18);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(days27);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertNotNull(days30);
        org.junit.Assert.assertNotNull(days31);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(period38);
        org.junit.Assert.assertNotNull(days39);
        org.junit.Assert.assertNotNull(durationFieldType40);
        org.junit.Assert.assertNotNull(wildcardClass41);
    }

    @Test
    public void test0015() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0015");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Days days1 = org.joda.time.Days.daysIn(readableInterval0);
        int int3 = days1.getValue((int) (short) 0);
        org.joda.time.Days days4 = org.joda.time.Days.FIVE;
        org.joda.time.Days days5 = days1.minus(days4);
        org.joda.time.Days days6 = null;
        org.joda.time.Days days7 = days1.minus(days6);
        org.joda.time.Days days9 = days7.minus(100);
        org.joda.time.ReadableInterval readableInterval10 = null;
        org.joda.time.Days days11 = org.joda.time.Days.daysIn(readableInterval10);
        int int13 = days11.getValue((int) (short) 0);
        org.joda.time.Days days14 = org.joda.time.Days.FIVE;
        org.joda.time.Days days15 = days11.minus(days14);
        org.joda.time.Days days16 = null;
        org.joda.time.Days days17 = days11.minus(days16);
        org.joda.time.Days days19 = days11.minus((-1));
        org.joda.time.Days days20 = days7.plus(days11);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Days days22 = days11.dividedBy(0);
            org.junit.Assert.fail("Expected exception of type java.lang.ArithmeticException; message: / by zero");
        } catch (java.lang.ArithmeticException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(days1);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(days4);
        org.junit.Assert.assertNotNull(days5);
        org.junit.Assert.assertNotNull(days7);
        org.junit.Assert.assertNotNull(days9);
        org.junit.Assert.assertNotNull(days11);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(days14);
        org.junit.Assert.assertNotNull(days15);
        org.junit.Assert.assertNotNull(days17);
        org.junit.Assert.assertNotNull(days19);
        org.junit.Assert.assertNotNull(days20);
    }

    @Test
    public void test0016() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0016");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Days days1 = org.joda.time.Days.daysIn(readableInterval0);
        int int3 = days1.getValue((int) (short) 0);
        org.joda.time.Days days4 = org.joda.time.Days.FIVE;
        org.joda.time.Days days5 = days1.minus(days4);
        org.joda.time.Days days6 = null;
        org.joda.time.Days days7 = days1.minus(days6);
        org.joda.time.Days days9 = days1.minus((-1));
        org.joda.time.ReadableInterval readableInterval10 = null;
        org.joda.time.Days days11 = org.joda.time.Days.daysIn(readableInterval10);
        int int13 = days11.getValue((int) (short) 0);
        org.joda.time.Days days14 = org.joda.time.Days.FIVE;
        org.joda.time.Days days15 = days11.minus(days14);
        org.joda.time.Days days16 = null;
        org.joda.time.Days days17 = days11.minus(days16);
        boolean boolean18 = days9.isGreaterThan(days17);
        org.joda.time.ReadableInterval readableInterval19 = null;
        org.joda.time.Days days20 = org.joda.time.Days.daysIn(readableInterval19);
        org.joda.time.Days days22 = days20.plus((int) (byte) 10);
        org.joda.time.Days days24 = days22.dividedBy((int) 'a');
        int int25 = days9.compareTo((org.joda.time.base.BaseSingleFieldPeriod) days22);
        java.lang.String str26 = days9.toString();
        org.junit.Assert.assertNotNull(days1);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(days4);
        org.junit.Assert.assertNotNull(days5);
        org.junit.Assert.assertNotNull(days7);
        org.junit.Assert.assertNotNull(days9);
        org.junit.Assert.assertNotNull(days11);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(days14);
        org.junit.Assert.assertNotNull(days15);
        org.junit.Assert.assertNotNull(days17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(days20);
        org.junit.Assert.assertNotNull(days22);
        org.junit.Assert.assertNotNull(days24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "P1D" + "'", str26, "P1D");
    }

    @Test
    public void test0017() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0017");
        org.joda.time.Days days0 = org.joda.time.Days.SEVEN;
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.DurationFieldType durationFieldType2 = days0.getFieldType((int) (byte) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 10");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(days0);
    }

    @Test
    public void test0018() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0018");
        org.joda.time.Days days0 = org.joda.time.Days.ONE;
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.DurationFieldType durationFieldType2 = days0.getFieldType(100);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 100");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(days0);
    }

    @Test
    public void test0019() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0019");
        org.joda.time.Days days0 = org.joda.time.Days.FIVE;
        org.joda.time.ReadableInterval readableInterval1 = null;
        org.joda.time.Days days2 = org.joda.time.Days.daysIn(readableInterval1);
        int int4 = days2.getValue((int) (short) 0);
        org.joda.time.ReadableInterval readableInterval5 = null;
        org.joda.time.Days days6 = org.joda.time.Days.daysIn(readableInterval5);
        int int8 = days6.getValue((int) (short) 0);
        org.joda.time.Days days9 = org.joda.time.Days.FIVE;
        org.joda.time.Days days10 = days6.minus(days9);
        int int11 = days2.compareTo((org.joda.time.base.BaseSingleFieldPeriod) days9);
        org.joda.time.ReadableInterval readableInterval12 = null;
        org.joda.time.Days days13 = org.joda.time.Days.daysIn(readableInterval12);
        int int15 = days13.getValue((int) (short) 0);
        org.joda.time.Days days16 = org.joda.time.Days.FIVE;
        org.joda.time.Days days17 = days13.minus(days16);
        org.joda.time.DurationFieldType durationFieldType18 = null;
        boolean boolean19 = days16.isSupported(durationFieldType18);
        org.joda.time.DurationFieldType durationFieldType21 = days16.getFieldType(0);
        int int22 = days2.get(durationFieldType21);
        boolean boolean23 = days0.isSupported(durationFieldType21);
        java.lang.Class<?> wildcardClass24 = durationFieldType21.getClass();
        org.junit.Assert.assertNotNull(days0);
        org.junit.Assert.assertNotNull(days2);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(days6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNotNull(days9);
        org.junit.Assert.assertNotNull(days10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertNotNull(days13);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNotNull(days16);
        org.junit.Assert.assertNotNull(days17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(durationFieldType21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(wildcardClass24);
    }

    @Test
    public void test0020() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0020");
        org.joda.time.Days days1 = org.joda.time.Days.parseDays("P0D");
        org.joda.time.Seconds seconds2 = days1.toStandardSeconds();
        // The following exception was thrown during execution in test generation
        try {
            int int4 = days1.getValue((int) '#');
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 35");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(days1);
        org.junit.Assert.assertNotNull(seconds2);
    }

    @Test
    public void test0021() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0021");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Days days1 = org.joda.time.Days.daysIn(readableInterval0);
        org.joda.time.ReadableInterval readableInterval2 = null;
        org.joda.time.Days days3 = org.joda.time.Days.daysIn(readableInterval2);
        int int5 = days3.getValue((int) (short) 0);
        org.joda.time.Days days6 = org.joda.time.Days.FIVE;
        org.joda.time.Days days7 = days3.minus(days6);
        org.joda.time.DurationFieldType durationFieldType8 = null;
        boolean boolean9 = days6.isSupported(durationFieldType8);
        org.joda.time.DurationFieldType durationFieldType11 = days6.getFieldType(0);
        int int12 = days1.get(durationFieldType11);
        org.joda.time.ReadableInterval readableInterval13 = null;
        org.joda.time.Days days14 = org.joda.time.Days.daysIn(readableInterval13);
        int int16 = days14.getValue((int) (short) 0);
        org.joda.time.Days days17 = org.joda.time.Days.FIVE;
        org.joda.time.Days days18 = days14.minus(days17);
        org.joda.time.DurationFieldType durationFieldType19 = null;
        int int20 = days17.get(durationFieldType19);
        org.joda.time.DurationFieldType durationFieldType21 = null;
        int int22 = days17.get(durationFieldType21);
        boolean boolean24 = days17.equals((java.lang.Object) 0L);
        boolean boolean25 = days1.isGreaterThan(days17);
        org.joda.time.ReadableInterval readableInterval26 = null;
        org.joda.time.Days days27 = org.joda.time.Days.daysIn(readableInterval26);
        int int29 = days27.getValue((int) (short) 0);
        org.joda.time.Days days30 = org.joda.time.Days.FIVE;
        org.joda.time.Days days31 = days27.minus(days30);
        org.joda.time.DurationFieldType durationFieldType32 = null;
        int int33 = days30.get(durationFieldType32);
        org.joda.time.DurationFieldType durationFieldType34 = null;
        int int35 = days30.get(durationFieldType34);
        boolean boolean37 = days30.equals((java.lang.Object) 0L);
        org.joda.time.Period period38 = days30.toPeriod();
        org.joda.time.Days days39 = days1.plus(days30);
        org.joda.time.ReadableInterval readableInterval40 = null;
        org.joda.time.Days days41 = org.joda.time.Days.daysIn(readableInterval40);
        int int43 = days41.getValue((int) (short) 0);
        org.joda.time.Period period44 = days41.toPeriod();
        org.joda.time.Days days45 = org.joda.time.Days.standardDaysIn((org.joda.time.ReadablePeriod) days41);
        boolean boolean46 = days1.equals((java.lang.Object) days45);
        org.joda.time.Days days48 = days45.multipliedBy(0);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.DurationFieldType durationFieldType50 = days45.getFieldType((int) (byte) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 1");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(days1);
        org.junit.Assert.assertNotNull(days3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(days6);
        org.junit.Assert.assertNotNull(days7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(durationFieldType11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNotNull(days14);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertNotNull(days17);
        org.junit.Assert.assertNotNull(days18);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(days27);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertNotNull(days30);
        org.junit.Assert.assertNotNull(days31);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(period38);
        org.junit.Assert.assertNotNull(days39);
        org.junit.Assert.assertNotNull(days41);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0);
        org.junit.Assert.assertNotNull(period44);
        org.junit.Assert.assertNotNull(days45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(days48);
    }

    @Test
    public void test0022() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0022");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Days days1 = org.joda.time.Days.daysIn(readableInterval0);
        int int3 = days1.getValue((int) (short) 0);
        org.joda.time.Days days4 = org.joda.time.Days.FIVE;
        org.joda.time.Days days5 = days1.minus(days4);
        org.joda.time.PeriodType periodType6 = days5.getPeriodType();
        org.junit.Assert.assertNotNull(days1);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(days4);
        org.junit.Assert.assertNotNull(days5);
        org.junit.Assert.assertNotNull(periodType6);
    }

    @Test
    public void test0023() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0023");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Days days1 = org.joda.time.Days.daysIn(readableInterval0);
        org.joda.time.ReadableInterval readableInterval2 = null;
        org.joda.time.Days days3 = org.joda.time.Days.daysIn(readableInterval2);
        int int5 = days3.getValue((int) (short) 0);
        org.joda.time.Days days6 = org.joda.time.Days.FIVE;
        org.joda.time.Days days7 = days3.minus(days6);
        org.joda.time.DurationFieldType durationFieldType8 = null;
        boolean boolean9 = days6.isSupported(durationFieldType8);
        org.joda.time.DurationFieldType durationFieldType11 = days6.getFieldType(0);
        int int12 = days1.get(durationFieldType11);
        org.joda.time.ReadableInterval readableInterval13 = null;
        org.joda.time.Days days14 = org.joda.time.Days.daysIn(readableInterval13);
        int int16 = days14.getValue((int) (short) 0);
        org.joda.time.Days days17 = org.joda.time.Days.FIVE;
        org.joda.time.Days days18 = days14.minus(days17);
        org.joda.time.DurationFieldType durationFieldType19 = null;
        int int20 = days17.get(durationFieldType19);
        org.joda.time.DurationFieldType durationFieldType21 = null;
        int int22 = days17.get(durationFieldType21);
        boolean boolean24 = days17.equals((java.lang.Object) 0L);
        boolean boolean25 = days1.isGreaterThan(days17);
        org.joda.time.ReadableInterval readableInterval26 = null;
        org.joda.time.Days days27 = org.joda.time.Days.daysIn(readableInterval26);
        int int29 = days27.getValue((int) (short) 0);
        org.joda.time.Days days30 = org.joda.time.Days.FIVE;
        org.joda.time.Days days31 = days27.minus(days30);
        org.joda.time.DurationFieldType durationFieldType32 = null;
        int int33 = days30.get(durationFieldType32);
        org.joda.time.DurationFieldType durationFieldType34 = null;
        int int35 = days30.get(durationFieldType34);
        boolean boolean37 = days30.equals((java.lang.Object) 0L);
        org.joda.time.Period period38 = days30.toPeriod();
        org.joda.time.Days days39 = days1.plus(days30);
        org.joda.time.ReadableInterval readableInterval40 = null;
        org.joda.time.Days days41 = org.joda.time.Days.daysIn(readableInterval40);
        int int43 = days41.getValue((int) (short) 0);
        org.joda.time.Period period44 = days41.toPeriod();
        org.joda.time.Days days45 = org.joda.time.Days.standardDaysIn((org.joda.time.ReadablePeriod) days41);
        boolean boolean46 = days1.equals((java.lang.Object) days45);
        org.joda.time.ReadableInterval readableInterval47 = null;
        org.joda.time.Days days48 = org.joda.time.Days.daysIn(readableInterval47);
        int int50 = days48.getValue((int) (short) 0);
        org.joda.time.Days days51 = org.joda.time.Days.FIVE;
        org.joda.time.Days days52 = days48.minus(days51);
        org.joda.time.DurationFieldType durationFieldType53 = null;
        boolean boolean54 = days51.isSupported(durationFieldType53);
        org.joda.time.DurationFieldType durationFieldType56 = days51.getFieldType(0);
        boolean boolean57 = days45.isSupported(durationFieldType56);
        // The following exception was thrown during execution in test generation
        try {
            int int59 = days45.getValue(52);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 52");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(days1);
        org.junit.Assert.assertNotNull(days3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(days6);
        org.junit.Assert.assertNotNull(days7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(durationFieldType11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNotNull(days14);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertNotNull(days17);
        org.junit.Assert.assertNotNull(days18);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(days27);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertNotNull(days30);
        org.junit.Assert.assertNotNull(days31);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(period38);
        org.junit.Assert.assertNotNull(days39);
        org.junit.Assert.assertNotNull(days41);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0);
        org.junit.Assert.assertNotNull(period44);
        org.junit.Assert.assertNotNull(days45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(days48);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 0 + "'", int50 == 0);
        org.junit.Assert.assertNotNull(days51);
        org.junit.Assert.assertNotNull(days52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(durationFieldType56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
    }

    @Test
    public void test0024() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0024");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Days days1 = org.joda.time.Days.daysIn(readableInterval0);
        int int3 = days1.getValue((int) (short) 0);
        org.joda.time.ReadableInterval readableInterval4 = null;
        org.joda.time.Days days5 = org.joda.time.Days.daysIn(readableInterval4);
        int int7 = days5.getValue((int) (short) 0);
        org.joda.time.Days days8 = org.joda.time.Days.FIVE;
        org.joda.time.Days days9 = days5.minus(days8);
        int int10 = days1.compareTo((org.joda.time.base.BaseSingleFieldPeriod) days8);
        java.lang.String str11 = days1.toString();
        org.joda.time.Days days12 = null;
        boolean boolean13 = days1.isGreaterThan(days12);
        org.joda.time.Days days14 = days1.negated();
        // The following exception was thrown during execution in test generation
        try {
            int int16 = days1.getValue((int) (byte) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 1");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(days1);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(days5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(days8);
        org.junit.Assert.assertNotNull(days9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "P0D" + "'", str11, "P0D");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(days14);
    }

    @Test
    public void test0025() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0025");
        org.joda.time.Days days1 = org.joda.time.Days.parseDays("P0D");
        org.joda.time.Hours hours2 = days1.toStandardHours();
        org.joda.time.ReadableInterval readableInterval3 = null;
        org.joda.time.Days days4 = org.joda.time.Days.daysIn(readableInterval3);
        int int6 = days4.getValue((int) (short) 0);
        org.joda.time.Days days7 = org.joda.time.Days.FIVE;
        org.joda.time.Days days8 = days4.minus(days7);
        org.joda.time.DurationFieldType durationFieldType9 = null;
        boolean boolean10 = days7.isSupported(durationFieldType9);
        // The following exception was thrown during execution in test generation
        try {
            int int11 = hours2.compareTo((org.joda.time.base.BaseSingleFieldPeriod) days7);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: class org.joda.time.Hours cannot be compared to class org.joda.time.Days");
        } catch (java.lang.ClassCastException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(days1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(days4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNotNull(days7);
        org.junit.Assert.assertNotNull(days8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
    }

    @Test
    public void test0026() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0026");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Days days1 = org.joda.time.Days.daysIn(readableInterval0);
        org.joda.time.Days days3 = days1.plus((int) (byte) 10);
        org.joda.time.MutablePeriod mutablePeriod4 = days1.toMutablePeriod();
        org.joda.time.Days days6 = days1.plus((int) (short) -1);
        // The following exception was thrown during execution in test generation
        try {
            int int8 = days1.getValue((int) (short) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 10");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(days1);
        org.junit.Assert.assertNotNull(days3);
        org.junit.Assert.assertNotNull(mutablePeriod4);
        org.junit.Assert.assertNotNull(days6);
    }

    @Test
    public void test0027() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0027");
        org.joda.time.Days days0 = org.joda.time.Days.FOUR;
        java.lang.Class<?> wildcardClass1 = days0.getClass();
        org.junit.Assert.assertNotNull(days0);
        org.junit.Assert.assertNotNull(wildcardClass1);
    }

    @Test
    public void test0028() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0028");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Days days1 = org.joda.time.Days.daysIn(readableInterval0);
        int int3 = days1.getValue((int) (short) 0);
        org.joda.time.ReadableInterval readableInterval4 = null;
        org.joda.time.Days days5 = org.joda.time.Days.daysIn(readableInterval4);
        int int7 = days5.getValue((int) (short) 0);
        org.joda.time.Days days8 = org.joda.time.Days.FIVE;
        org.joda.time.Days days9 = days5.minus(days8);
        int int10 = days1.compareTo((org.joda.time.base.BaseSingleFieldPeriod) days8);
        java.lang.String str11 = days1.toString();
        org.joda.time.Days days13 = days1.plus((int) '4');
        // The following exception was thrown during execution in test generation
        try {
            int int15 = days13.getValue((int) (byte) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 10");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(days1);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(days5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(days8);
        org.junit.Assert.assertNotNull(days9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "P0D" + "'", str11, "P0D");
        org.junit.Assert.assertNotNull(days13);
    }

    @Test
    public void test0029() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0029");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Days days1 = org.joda.time.Days.daysIn(readableInterval0);
        org.joda.time.ReadableInterval readableInterval2 = null;
        org.joda.time.Days days3 = org.joda.time.Days.daysIn(readableInterval2);
        int int5 = days3.getValue((int) (short) 0);
        org.joda.time.Days days6 = org.joda.time.Days.FIVE;
        org.joda.time.Days days7 = days3.minus(days6);
        org.joda.time.DurationFieldType durationFieldType8 = null;
        boolean boolean9 = days6.isSupported(durationFieldType8);
        org.joda.time.DurationFieldType durationFieldType11 = days6.getFieldType(0);
        int int12 = days1.get(durationFieldType11);
        org.joda.time.PeriodType periodType13 = days1.getPeriodType();
        org.joda.time.Days days15 = days1.multipliedBy((int) (short) -1);
        // The following exception was thrown during execution in test generation
        try {
            int int17 = days15.getValue((int) (short) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 1");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(days1);
        org.junit.Assert.assertNotNull(days3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(days6);
        org.junit.Assert.assertNotNull(days7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(durationFieldType11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNotNull(periodType13);
        org.junit.Assert.assertNotNull(days15);
    }

    @Test
    public void test0030() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0030");
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Days days1 = org.joda.time.Days.parseDays("");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Invalid format: \"\"");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
    }

    @Test
    public void test0031() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0031");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Days days1 = org.joda.time.Days.daysIn(readableInterval0);
        org.joda.time.Days days3 = days1.plus((int) (byte) 10);
        org.joda.time.MutablePeriod mutablePeriod4 = days1.toMutablePeriod();
        org.joda.time.PeriodType periodType5 = days1.getPeriodType();
        org.junit.Assert.assertNotNull(days1);
        org.junit.Assert.assertNotNull(days3);
        org.junit.Assert.assertNotNull(mutablePeriod4);
        org.junit.Assert.assertNotNull(periodType5);
    }

    @Test
    public void test0032() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0032");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Days days1 = org.joda.time.Days.daysIn(readableInterval0);
        org.joda.time.Days days3 = days1.plus((int) (byte) 10);
        org.joda.time.Days days5 = days3.dividedBy((int) 'a');
        int int6 = days5.getDays();
        org.junit.Assert.assertNotNull(days1);
        org.junit.Assert.assertNotNull(days3);
        org.junit.Assert.assertNotNull(days5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
    }

    @Test
    public void test0033() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0033");
        org.joda.time.Days days0 = org.joda.time.Days.MAX_VALUE;
        org.joda.time.Days days1 = days0.negated();
        org.joda.time.PeriodType periodType2 = days0.getPeriodType();
        java.lang.Class<?> wildcardClass3 = periodType2.getClass();
        org.junit.Assert.assertNotNull(days0);
        org.junit.Assert.assertNotNull(days1);
        org.junit.Assert.assertNotNull(periodType2);
        org.junit.Assert.assertNotNull(wildcardClass3);
    }

    @Test
    public void test0034() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0034");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Days days1 = org.joda.time.Days.daysIn(readableInterval0);
        org.joda.time.ReadableInterval readableInterval2 = null;
        org.joda.time.Days days3 = org.joda.time.Days.daysIn(readableInterval2);
        int int5 = days3.getValue((int) (short) 0);
        org.joda.time.Days days6 = org.joda.time.Days.FIVE;
        org.joda.time.Days days7 = days3.minus(days6);
        org.joda.time.DurationFieldType durationFieldType8 = null;
        boolean boolean9 = days6.isSupported(durationFieldType8);
        org.joda.time.DurationFieldType durationFieldType11 = days6.getFieldType(0);
        int int12 = days1.get(durationFieldType11);
        org.joda.time.ReadableInterval readableInterval13 = null;
        org.joda.time.Days days14 = org.joda.time.Days.daysIn(readableInterval13);
        int int16 = days14.getValue((int) (short) 0);
        org.joda.time.Days days17 = org.joda.time.Days.FIVE;
        org.joda.time.Days days18 = days14.minus(days17);
        org.joda.time.DurationFieldType durationFieldType19 = null;
        int int20 = days17.get(durationFieldType19);
        org.joda.time.DurationFieldType durationFieldType21 = null;
        int int22 = days17.get(durationFieldType21);
        boolean boolean24 = days17.equals((java.lang.Object) 0L);
        boolean boolean25 = days1.isGreaterThan(days17);
        org.joda.time.ReadableInterval readableInterval26 = null;
        org.joda.time.Days days27 = org.joda.time.Days.daysIn(readableInterval26);
        int int29 = days27.getValue((int) (short) 0);
        org.joda.time.Days days30 = org.joda.time.Days.FIVE;
        org.joda.time.Days days31 = days27.minus(days30);
        org.joda.time.DurationFieldType durationFieldType32 = null;
        int int33 = days30.get(durationFieldType32);
        org.joda.time.DurationFieldType durationFieldType34 = null;
        int int35 = days30.get(durationFieldType34);
        boolean boolean37 = days30.equals((java.lang.Object) 0L);
        org.joda.time.Period period38 = days30.toPeriod();
        org.joda.time.Days days39 = days1.plus(days30);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.DurationFieldType durationFieldType41 = days39.getFieldType(1);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 1");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(days1);
        org.junit.Assert.assertNotNull(days3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(days6);
        org.junit.Assert.assertNotNull(days7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(durationFieldType11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNotNull(days14);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertNotNull(days17);
        org.junit.Assert.assertNotNull(days18);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(days27);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertNotNull(days30);
        org.junit.Assert.assertNotNull(days31);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(period38);
        org.junit.Assert.assertNotNull(days39);
    }

    @Test
    public void test0035() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0035");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Days days1 = org.joda.time.Days.daysIn(readableInterval0);
        org.joda.time.Days days3 = days1.plus((int) (byte) 10);
        org.joda.time.Days days5 = days3.dividedBy((int) 'a');
        org.joda.time.Days days7 = days3.plus((int) ' ');
        // The following exception was thrown during execution in test generation
        try {
            int int9 = days7.getValue((int) '4');
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 52");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(days1);
        org.junit.Assert.assertNotNull(days3);
        org.junit.Assert.assertNotNull(days5);
        org.junit.Assert.assertNotNull(days7);
    }

    @Test
    public void test0036() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0036");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Days days1 = org.joda.time.Days.daysIn(readableInterval0);
        int int3 = days1.getValue((int) (short) 0);
        org.joda.time.Days days4 = org.joda.time.Days.FIVE;
        org.joda.time.Days days5 = days1.minus(days4);
        org.joda.time.Days days6 = null;
        org.joda.time.Days days7 = days1.minus(days6);
        org.joda.time.ReadableInterval readableInterval8 = null;
        org.joda.time.Days days9 = org.joda.time.Days.daysIn(readableInterval8);
        int int11 = days9.getValue((int) (short) 0);
        org.joda.time.Days days12 = org.joda.time.Days.FIVE;
        org.joda.time.Days days13 = days9.minus(days12);
        org.joda.time.DurationFieldType durationFieldType14 = null;
        int int15 = days12.get(durationFieldType14);
        org.joda.time.DurationFieldType durationFieldType16 = null;
        int int17 = days12.get(durationFieldType16);
        boolean boolean19 = days12.equals((java.lang.Object) 0L);
        int int20 = days1.compareTo((org.joda.time.base.BaseSingleFieldPeriod) days12);
        org.joda.time.Days days22 = days12.multipliedBy((int) (byte) 100);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.DurationFieldType durationFieldType24 = days12.getFieldType((int) (short) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 10");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(days1);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(days4);
        org.junit.Assert.assertNotNull(days5);
        org.junit.Assert.assertNotNull(days7);
        org.junit.Assert.assertNotNull(days9);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNotNull(days12);
        org.junit.Assert.assertNotNull(days13);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
        org.junit.Assert.assertNotNull(days22);
    }

    @Test
    public void test0037() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0037");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Days days1 = org.joda.time.Days.daysIn(readableInterval0);
        org.joda.time.Days days3 = days1.plus((int) (byte) 10);
        org.joda.time.DurationFieldType durationFieldType4 = days3.getFieldType();
        org.joda.time.Days days6 = days3.plus(0);
        org.joda.time.ReadableInterval readableInterval7 = null;
        org.joda.time.Days days8 = org.joda.time.Days.daysIn(readableInterval7);
        int int10 = days8.getValue((int) (short) 0);
        org.joda.time.Days days11 = org.joda.time.Days.FIVE;
        org.joda.time.Days days12 = days8.minus(days11);
        org.joda.time.DurationFieldType durationFieldType13 = null;
        boolean boolean14 = days11.isSupported(durationFieldType13);
        org.joda.time.DurationFieldType durationFieldType16 = days11.getFieldType(0);
        org.joda.time.ReadableInterval readableInterval17 = null;
        org.joda.time.Days days18 = org.joda.time.Days.daysIn(readableInterval17);
        int int20 = days18.getValue((int) (short) 0);
        org.joda.time.Days days21 = org.joda.time.Days.FIVE;
        org.joda.time.Days days22 = days18.minus(days21);
        org.joda.time.Days days23 = null;
        org.joda.time.Days days24 = days18.minus(days23);
        org.joda.time.Days days26 = days18.minus((-1));
        org.joda.time.DurationFieldType durationFieldType27 = days18.getFieldType();
        boolean boolean28 = days11.isGreaterThan(days18);
        org.joda.time.ReadableInterval readableInterval29 = null;
        org.joda.time.Days days30 = org.joda.time.Days.daysIn(readableInterval29);
        org.joda.time.Days days32 = days30.plus((int) (byte) 10);
        org.joda.time.Days days33 = days18.plus(days32);
        int int34 = days6.compareTo((org.joda.time.base.BaseSingleFieldPeriod) days18);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.DurationFieldType durationFieldType36 = days18.getFieldType((int) (short) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 100");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(days1);
        org.junit.Assert.assertNotNull(days3);
        org.junit.Assert.assertNotNull(durationFieldType4);
        org.junit.Assert.assertNotNull(days6);
        org.junit.Assert.assertNotNull(days8);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(days11);
        org.junit.Assert.assertNotNull(days12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(durationFieldType16);
        org.junit.Assert.assertNotNull(days18);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertNotNull(days21);
        org.junit.Assert.assertNotNull(days22);
        org.junit.Assert.assertNotNull(days24);
        org.junit.Assert.assertNotNull(days26);
        org.junit.Assert.assertNotNull(durationFieldType27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(days30);
        org.junit.Assert.assertNotNull(days32);
        org.junit.Assert.assertNotNull(days33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 1 + "'", int34 == 1);
    }

    @Test
    public void test0038() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0038");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Days days1 = org.joda.time.Days.daysIn(readableInterval0);
        int int3 = days1.getValue((int) (short) 0);
        org.joda.time.Days days4 = org.joda.time.Days.FIVE;
        org.joda.time.Days days5 = days1.minus(days4);
        org.joda.time.DurationFieldType durationFieldType6 = null;
        int int7 = days4.get(durationFieldType6);
        org.joda.time.DurationFieldType durationFieldType8 = null;
        int int9 = days4.get(durationFieldType8);
        boolean boolean11 = days4.equals((java.lang.Object) 0L);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.DurationFieldType durationFieldType13 = days4.getFieldType((int) ' ');
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 32");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(days1);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(days4);
        org.junit.Assert.assertNotNull(days5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    }

    @Test
    public void test0039() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0039");
        org.joda.time.Days days0 = org.joda.time.Days.MAX_VALUE;
        org.joda.time.Days days1 = days0.negated();
        org.joda.time.ReadableInterval readableInterval2 = null;
        org.joda.time.Days days3 = org.joda.time.Days.daysIn(readableInterval2);
        int int5 = days3.getValue((int) (short) 0);
        org.joda.time.Days days6 = org.joda.time.Days.FIVE;
        org.joda.time.Days days7 = days3.minus(days6);
        org.joda.time.DurationFieldType durationFieldType8 = null;
        int int9 = days6.get(durationFieldType8);
        org.joda.time.Days days11 = days6.dividedBy(100);
        org.joda.time.Days days12 = days6.negated();
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Days days13 = days0.plus(days6);
            org.junit.Assert.fail("Expected exception of type java.lang.ArithmeticException; message: The calculation caused an overflow: 2147483647 + 5");
        } catch (java.lang.ArithmeticException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(days0);
        org.junit.Assert.assertNotNull(days1);
        org.junit.Assert.assertNotNull(days3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(days6);
        org.junit.Assert.assertNotNull(days7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNotNull(days11);
        org.junit.Assert.assertNotNull(days12);
    }

    @Test
    public void test0040() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0040");
        org.joda.time.Days days0 = org.joda.time.Days.SEVEN;
        org.joda.time.Days days2 = days0.plus(1);
        java.lang.Class<?> wildcardClass3 = days0.getClass();
        org.junit.Assert.assertNotNull(days0);
        org.junit.Assert.assertNotNull(days2);
        org.junit.Assert.assertNotNull(wildcardClass3);
    }

    @Test
    public void test0041() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0041");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Days days1 = org.joda.time.Days.daysIn(readableInterval0);
        int int3 = days1.getValue((int) (short) 0);
        org.joda.time.Days days4 = org.joda.time.Days.FIVE;
        org.joda.time.Days days5 = days1.minus(days4);
        org.joda.time.DurationFieldType durationFieldType6 = null;
        int int7 = days4.get(durationFieldType6);
        org.joda.time.Days days9 = days4.dividedBy(100);
        // The following exception was thrown during execution in test generation
        try {
            int int11 = days9.getValue((int) (short) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 10");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(days1);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(days4);
        org.junit.Assert.assertNotNull(days5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(days9);
    }

    @Test
    public void test0042() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0042");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Days days1 = org.joda.time.Days.daysIn(readableInterval0);
        org.joda.time.ReadableInterval readableInterval2 = null;
        org.joda.time.Days days3 = org.joda.time.Days.daysIn(readableInterval2);
        int int5 = days3.getValue((int) (short) 0);
        org.joda.time.Days days6 = org.joda.time.Days.FIVE;
        org.joda.time.Days days7 = days3.minus(days6);
        org.joda.time.DurationFieldType durationFieldType8 = null;
        boolean boolean9 = days6.isSupported(durationFieldType8);
        org.joda.time.DurationFieldType durationFieldType11 = days6.getFieldType(0);
        int int12 = days1.get(durationFieldType11);
        org.joda.time.PeriodType periodType13 = days1.getPeriodType();
        java.lang.Class<?> wildcardClass14 = days1.getClass();
        org.junit.Assert.assertNotNull(days1);
        org.junit.Assert.assertNotNull(days3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(days6);
        org.junit.Assert.assertNotNull(days7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(durationFieldType11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNotNull(periodType13);
        org.junit.Assert.assertNotNull(wildcardClass14);
    }

    @Test
    public void test0043() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0043");
        org.joda.time.Days days1 = org.joda.time.Days.days((int) (byte) 1);
        int int2 = days1.size();
        org.joda.time.ReadableInterval readableInterval3 = null;
        org.joda.time.Days days4 = org.joda.time.Days.daysIn(readableInterval3);
        int int6 = days4.getValue((int) (short) 0);
        org.joda.time.Period period7 = days4.toPeriod();
        org.joda.time.Days days8 = org.joda.time.Days.standardDaysIn((org.joda.time.ReadablePeriod) days4);
        boolean boolean9 = days1.isLessThan(days4);
        org.junit.Assert.assertNotNull(days1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
        org.junit.Assert.assertNotNull(days4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNotNull(period7);
        org.junit.Assert.assertNotNull(days8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
    }

    @Test
    public void test0044() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0044");
        org.joda.time.Days days0 = org.joda.time.Days.TWO;
        org.joda.time.DurationFieldType durationFieldType1 = days0.getFieldType();
        org.joda.time.Minutes minutes2 = days0.toStandardMinutes();
        org.joda.time.ReadableInterval readableInterval3 = null;
        org.joda.time.Days days4 = org.joda.time.Days.daysIn(readableInterval3);
        int int6 = days4.getValue((int) (short) 0);
        org.joda.time.Days days7 = org.joda.time.Days.FIVE;
        org.joda.time.Days days8 = days4.minus(days7);
        org.joda.time.DurationFieldType durationFieldType9 = null;
        int int10 = days7.get(durationFieldType9);
        org.joda.time.DurationFieldType durationFieldType11 = null;
        int int12 = days7.get(durationFieldType11);
        boolean boolean14 = days7.equals((java.lang.Object) false);
        // The following exception was thrown during execution in test generation
        try {
            int int15 = minutes2.compareTo((org.joda.time.base.BaseSingleFieldPeriod) days7);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: class org.joda.time.Minutes cannot be compared to class org.joda.time.Days");
        } catch (java.lang.ClassCastException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(days0);
        org.junit.Assert.assertNotNull(durationFieldType1);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(days4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNotNull(days7);
        org.junit.Assert.assertNotNull(days8);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
    }

    @Test
    public void test0045() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0045");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Days days1 = org.joda.time.Days.daysIn(readableInterval0);
        int int3 = days1.getValue((int) (short) 0);
        org.joda.time.ReadableInterval readableInterval4 = null;
        org.joda.time.Days days5 = org.joda.time.Days.daysIn(readableInterval4);
        int int7 = days5.getValue((int) (short) 0);
        org.joda.time.Days days8 = org.joda.time.Days.FIVE;
        org.joda.time.Days days9 = days5.minus(days8);
        int int10 = days1.compareTo((org.joda.time.base.BaseSingleFieldPeriod) days8);
        java.lang.String str11 = days1.toString();
        org.joda.time.Days days13 = days1.plus((int) '4');
        org.joda.time.PeriodType periodType14 = days13.getPeriodType();
        org.joda.time.Days days16 = days13.minus((int) (short) 1);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Days days18 = days13.dividedBy((int) (byte) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.ArithmeticException; message: / by zero");
        } catch (java.lang.ArithmeticException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(days1);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(days5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(days8);
        org.junit.Assert.assertNotNull(days9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "P0D" + "'", str11, "P0D");
        org.junit.Assert.assertNotNull(days13);
        org.junit.Assert.assertNotNull(periodType14);
        org.junit.Assert.assertNotNull(days16);
    }

    @Test
    public void test0046() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0046");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Days days1 = org.joda.time.Days.daysIn(readableInterval0);
        org.joda.time.Days days3 = days1.plus((int) (byte) 10);
        int int4 = days3.getDays();
        java.lang.Class<?> wildcardClass5 = days3.getClass();
        org.junit.Assert.assertNotNull(days1);
        org.junit.Assert.assertNotNull(days3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 10 + "'", int4 == 10);
        org.junit.Assert.assertNotNull(wildcardClass5);
    }

    @Test
    public void test0047() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0047");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Days days1 = org.joda.time.Days.daysIn(readableInterval0);
        int int3 = days1.getValue((int) (short) 0);
        org.joda.time.Days days4 = org.joda.time.Days.FIVE;
        org.joda.time.Days days5 = days1.minus(days4);
        org.joda.time.Days days6 = null;
        org.joda.time.Days days7 = days1.minus(days6);
        org.joda.time.ReadableInterval readableInterval8 = null;
        org.joda.time.Days days9 = org.joda.time.Days.daysIn(readableInterval8);
        int int11 = days9.getValue((int) (short) 0);
        org.joda.time.Days days12 = org.joda.time.Days.FIVE;
        org.joda.time.Days days13 = days9.minus(days12);
        org.joda.time.DurationFieldType durationFieldType14 = null;
        int int15 = days12.get(durationFieldType14);
        org.joda.time.DurationFieldType durationFieldType16 = null;
        int int17 = days12.get(durationFieldType16);
        boolean boolean19 = days12.equals((java.lang.Object) 0L);
        int int20 = days1.compareTo((org.joda.time.base.BaseSingleFieldPeriod) days12);
        org.joda.time.Days days22 = days1.minus(52);
        org.joda.time.Period period23 = days1.toPeriod();
        org.joda.time.Days days24 = days1.negated();
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.DurationFieldType durationFieldType26 = days24.getFieldType((int) (short) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 100");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(days1);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(days4);
        org.junit.Assert.assertNotNull(days5);
        org.junit.Assert.assertNotNull(days7);
        org.junit.Assert.assertNotNull(days9);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNotNull(days12);
        org.junit.Assert.assertNotNull(days13);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
        org.junit.Assert.assertNotNull(days22);
        org.junit.Assert.assertNotNull(period23);
        org.junit.Assert.assertNotNull(days24);
    }

    @Test
    public void test0048() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0048");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Days days1 = org.joda.time.Days.daysIn(readableInterval0);
        int int3 = days1.getValue((int) (short) 0);
        org.joda.time.Period period4 = days1.toPeriod();
        org.joda.time.Days days5 = org.joda.time.Days.standardDaysIn((org.joda.time.ReadablePeriod) days1);
        java.lang.Class<?> wildcardClass6 = days1.getClass();
        org.junit.Assert.assertNotNull(days1);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(days5);
        org.junit.Assert.assertNotNull(wildcardClass6);
    }

    @Test
    public void test0049() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0049");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Days days1 = org.joda.time.Days.daysIn(readableInterval0);
        int int3 = days1.getValue((int) (short) 0);
        org.joda.time.Days days4 = org.joda.time.Days.FIVE;
        org.joda.time.Days days5 = days1.minus(days4);
        org.joda.time.ReadableInterval readableInterval6 = null;
        org.joda.time.Days days7 = org.joda.time.Days.daysIn(readableInterval6);
        int int9 = days7.getValue((int) (short) 0);
        int int10 = days1.compareTo((org.joda.time.base.BaseSingleFieldPeriod) days7);
        org.joda.time.Period period11 = days7.toPeriod();
        org.junit.Assert.assertNotNull(days1);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(days4);
        org.junit.Assert.assertNotNull(days5);
        org.junit.Assert.assertNotNull(days7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(period11);
    }

    @Test
    public void test0050() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0050");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Days days1 = org.joda.time.Days.daysIn(readableInterval0);
        int int3 = days1.getValue((int) (short) 0);
        org.joda.time.Days days4 = org.joda.time.Days.FIVE;
        org.joda.time.Days days5 = days1.minus(days4);
        org.joda.time.Days days6 = null;
        org.joda.time.Days days7 = days1.minus(days6);
        org.joda.time.Duration duration8 = days1.toStandardDuration();
        org.joda.time.DurationFieldType durationFieldType9 = days1.getFieldType();
        org.joda.time.Period period10 = days1.toPeriod();
        java.lang.Class<?> wildcardClass11 = days1.getClass();
        org.junit.Assert.assertNotNull(days1);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(days4);
        org.junit.Assert.assertNotNull(days5);
        org.junit.Assert.assertNotNull(days7);
        org.junit.Assert.assertNotNull(duration8);
        org.junit.Assert.assertNotNull(durationFieldType9);
        org.junit.Assert.assertNotNull(period10);
        org.junit.Assert.assertNotNull(wildcardClass11);
    }

    @Test
    public void test0051() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0051");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Days days1 = org.joda.time.Days.daysIn(readableInterval0);
        int int3 = days1.getValue((int) (short) 0);
        org.joda.time.Days days4 = org.joda.time.Days.FIVE;
        org.joda.time.Days days5 = days1.minus(days4);
        org.joda.time.Days days6 = null;
        org.joda.time.Days days7 = days1.minus(days6);
        org.joda.time.ReadableInterval readableInterval8 = null;
        org.joda.time.Days days9 = org.joda.time.Days.daysIn(readableInterval8);
        int int11 = days9.getValue((int) (short) 0);
        org.joda.time.Days days12 = org.joda.time.Days.FIVE;
        org.joda.time.Days days13 = days9.minus(days12);
        org.joda.time.DurationFieldType durationFieldType14 = null;
        int int15 = days12.get(durationFieldType14);
        org.joda.time.DurationFieldType durationFieldType16 = null;
        int int17 = days12.get(durationFieldType16);
        boolean boolean19 = days12.equals((java.lang.Object) 0L);
        int int20 = days1.compareTo((org.joda.time.base.BaseSingleFieldPeriod) days12);
        org.joda.time.Days days22 = days12.multipliedBy((int) (byte) 100);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.DurationFieldType durationFieldType24 = days12.getFieldType(10);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 10");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(days1);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(days4);
        org.junit.Assert.assertNotNull(days5);
        org.junit.Assert.assertNotNull(days7);
        org.junit.Assert.assertNotNull(days9);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNotNull(days12);
        org.junit.Assert.assertNotNull(days13);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
        org.junit.Assert.assertNotNull(days22);
    }

    @Test
    public void test0052() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0052");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Days days1 = org.joda.time.Days.daysIn(readableInterval0);
        int int3 = days1.getValue((int) (short) 0);
        org.joda.time.Days days4 = org.joda.time.Days.FIVE;
        org.joda.time.Days days5 = days1.minus(days4);
        org.joda.time.DurationFieldType durationFieldType6 = null;
        int int7 = days4.get(durationFieldType6);
        org.joda.time.DurationFieldType durationFieldType8 = null;
        int int9 = days4.get(durationFieldType8);
        boolean boolean11 = days4.equals((java.lang.Object) 0L);
        int int12 = days4.getDays();
        // The following exception was thrown during execution in test generation
        try {
            int int14 = days4.getValue((int) ' ');
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 32");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(days1);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(days4);
        org.junit.Assert.assertNotNull(days5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 5 + "'", int12 == 5);
    }

    @Test
    public void test0053() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0053");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Days days1 = org.joda.time.Days.daysIn(readableInterval0);
        int int3 = days1.getValue((int) (short) 0);
        org.joda.time.Days days4 = org.joda.time.Days.FIVE;
        org.joda.time.Days days5 = days1.minus(days4);
        org.joda.time.DurationFieldType durationFieldType6 = null;
        boolean boolean7 = days4.isSupported(durationFieldType6);
        org.joda.time.DurationFieldType durationFieldType9 = days4.getFieldType(0);
        org.joda.time.ReadableInterval readableInterval10 = null;
        org.joda.time.Days days11 = org.joda.time.Days.daysIn(readableInterval10);
        int int13 = days11.getValue((int) (short) 0);
        org.joda.time.Days days14 = org.joda.time.Days.FIVE;
        org.joda.time.Days days15 = days11.minus(days14);
        org.joda.time.Days days16 = null;
        org.joda.time.Days days17 = days11.minus(days16);
        org.joda.time.Days days19 = days11.minus((-1));
        org.joda.time.DurationFieldType durationFieldType20 = days11.getFieldType();
        boolean boolean21 = days4.isGreaterThan(days11);
        org.joda.time.Period period22 = days4.toPeriod();
        org.junit.Assert.assertNotNull(days1);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(days4);
        org.junit.Assert.assertNotNull(days5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(durationFieldType9);
        org.junit.Assert.assertNotNull(days11);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(days14);
        org.junit.Assert.assertNotNull(days15);
        org.junit.Assert.assertNotNull(days17);
        org.junit.Assert.assertNotNull(days19);
        org.junit.Assert.assertNotNull(durationFieldType20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(period22);
    }

    @Test
    public void test0054() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0054");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Days days1 = org.joda.time.Days.daysIn(readableInterval0);
        int int3 = days1.getValue((int) (short) 0);
        org.joda.time.Days days4 = org.joda.time.Days.FIVE;
        org.joda.time.Days days5 = days1.minus(days4);
        org.joda.time.DurationFieldType durationFieldType6 = null;
        boolean boolean7 = days4.isSupported(durationFieldType6);
        org.joda.time.DurationFieldType durationFieldType9 = days4.getFieldType(0);
        org.joda.time.ReadableInterval readableInterval10 = null;
        org.joda.time.Days days11 = org.joda.time.Days.daysIn(readableInterval10);
        int int13 = days11.getValue((int) (short) 0);
        org.joda.time.Days days14 = org.joda.time.Days.FIVE;
        org.joda.time.Days days15 = days11.minus(days14);
        org.joda.time.Days days16 = null;
        org.joda.time.Days days17 = days11.minus(days16);
        org.joda.time.Days days19 = days11.minus((-1));
        org.joda.time.DurationFieldType durationFieldType20 = days11.getFieldType();
        boolean boolean21 = days4.isGreaterThan(days11);
        org.joda.time.ReadableInterval readableInterval22 = null;
        org.joda.time.Days days23 = org.joda.time.Days.daysIn(readableInterval22);
        org.joda.time.Days days25 = days23.plus((int) (byte) 10);
        org.joda.time.Days days26 = days11.plus(days25);
        org.joda.time.ReadableInterval readableInterval27 = null;
        org.joda.time.Days days28 = org.joda.time.Days.daysIn(readableInterval27);
        int int30 = days28.getValue((int) (short) 0);
        org.joda.time.Days days31 = org.joda.time.Days.FIVE;
        org.joda.time.Days days32 = days28.minus(days31);
        org.joda.time.Days days33 = null;
        org.joda.time.Days days34 = days28.minus(days33);
        org.joda.time.Duration duration35 = days28.toStandardDuration();
        org.joda.time.Days days36 = days26.minus(days28);
        org.joda.time.ReadableInterval readableInterval37 = null;
        org.joda.time.Days days38 = org.joda.time.Days.daysIn(readableInterval37);
        int int40 = days38.getValue((int) (short) 0);
        org.joda.time.ReadableInterval readableInterval41 = null;
        org.joda.time.Days days42 = org.joda.time.Days.daysIn(readableInterval41);
        int int44 = days42.getValue((int) (short) 0);
        org.joda.time.Days days45 = org.joda.time.Days.FIVE;
        org.joda.time.Days days46 = days42.minus(days45);
        int int47 = days38.compareTo((org.joda.time.base.BaseSingleFieldPeriod) days45);
        org.joda.time.ReadableInterval readableInterval48 = null;
        org.joda.time.Days days49 = org.joda.time.Days.daysIn(readableInterval48);
        int int51 = days49.getValue((int) (short) 0);
        org.joda.time.Days days52 = org.joda.time.Days.FIVE;
        org.joda.time.Days days53 = days49.minus(days52);
        org.joda.time.DurationFieldType durationFieldType54 = null;
        boolean boolean55 = days52.isSupported(durationFieldType54);
        org.joda.time.DurationFieldType durationFieldType57 = days52.getFieldType(0);
        int int58 = days38.get(durationFieldType57);
        boolean boolean59 = days28.isSupported(durationFieldType57);
        // The following exception was thrown during execution in test generation
        try {
            int int61 = days28.getValue(5);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 5");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(days1);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(days4);
        org.junit.Assert.assertNotNull(days5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(durationFieldType9);
        org.junit.Assert.assertNotNull(days11);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(days14);
        org.junit.Assert.assertNotNull(days15);
        org.junit.Assert.assertNotNull(days17);
        org.junit.Assert.assertNotNull(days19);
        org.junit.Assert.assertNotNull(durationFieldType20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(days23);
        org.junit.Assert.assertNotNull(days25);
        org.junit.Assert.assertNotNull(days26);
        org.junit.Assert.assertNotNull(days28);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertNotNull(days31);
        org.junit.Assert.assertNotNull(days32);
        org.junit.Assert.assertNotNull(days34);
        org.junit.Assert.assertNotNull(duration35);
        org.junit.Assert.assertNotNull(days36);
        org.junit.Assert.assertNotNull(days38);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertNotNull(days42);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 0 + "'", int44 == 0);
        org.junit.Assert.assertNotNull(days45);
        org.junit.Assert.assertNotNull(days46);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + (-1) + "'", int47 == (-1));
        org.junit.Assert.assertNotNull(days49);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 0 + "'", int51 == 0);
        org.junit.Assert.assertNotNull(days52);
        org.junit.Assert.assertNotNull(days53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(durationFieldType57);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 0 + "'", int58 == 0);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
    }

    @Test
    public void test0055() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0055");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Days days1 = org.joda.time.Days.daysIn(readableInterval0);
        int int3 = days1.getValue((int) (short) 0);
        org.joda.time.ReadableInterval readableInterval4 = null;
        org.joda.time.Days days5 = org.joda.time.Days.daysIn(readableInterval4);
        int int7 = days5.getValue((int) (short) 0);
        org.joda.time.Days days8 = org.joda.time.Days.FIVE;
        org.joda.time.Days days9 = days5.minus(days8);
        int int10 = days1.compareTo((org.joda.time.base.BaseSingleFieldPeriod) days8);
        java.lang.String str11 = days1.toString();
        org.joda.time.Days days13 = days1.plus((int) '4');
        org.joda.time.PeriodType periodType14 = days13.getPeriodType();
        int int15 = days13.getDays();
        org.joda.time.Days days17 = days13.minus((int) ' ');
        org.joda.time.ReadableInterval readableInterval18 = null;
        org.joda.time.Days days19 = org.joda.time.Days.daysIn(readableInterval18);
        org.joda.time.Days days21 = days19.plus((int) (byte) 10);
        org.joda.time.Days days23 = days21.dividedBy((int) 'a');
        org.joda.time.Days days25 = days21.dividedBy(5);
        org.joda.time.Days days27 = days21.plus((int) (byte) -1);
        org.joda.time.Days days28 = days13.plus(days21);
        java.lang.String str29 = days28.toString();
        org.junit.Assert.assertNotNull(days1);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(days5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(days8);
        org.junit.Assert.assertNotNull(days9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "P0D" + "'", str11, "P0D");
        org.junit.Assert.assertNotNull(days13);
        org.junit.Assert.assertNotNull(periodType14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 52 + "'", int15 == 52);
        org.junit.Assert.assertNotNull(days17);
        org.junit.Assert.assertNotNull(days19);
        org.junit.Assert.assertNotNull(days21);
        org.junit.Assert.assertNotNull(days23);
        org.junit.Assert.assertNotNull(days25);
        org.junit.Assert.assertNotNull(days27);
        org.junit.Assert.assertNotNull(days28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "P62D" + "'", str29, "P62D");
    }

    @Test
    public void test0056() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0056");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Days days1 = org.joda.time.Days.daysIn(readableInterval0);
        int int3 = days1.getValue((int) (short) 0);
        org.joda.time.Days days4 = org.joda.time.Days.FIVE;
        org.joda.time.Days days5 = days1.minus(days4);
        org.joda.time.DurationFieldType durationFieldType6 = null;
        boolean boolean7 = days4.isSupported(durationFieldType6);
        org.joda.time.DurationFieldType durationFieldType9 = days4.getFieldType(0);
        org.joda.time.ReadableInterval readableInterval10 = null;
        org.joda.time.Days days11 = org.joda.time.Days.daysIn(readableInterval10);
        int int13 = days11.getValue((int) (short) 0);
        org.joda.time.Days days14 = org.joda.time.Days.FIVE;
        org.joda.time.Days days15 = days11.minus(days14);
        org.joda.time.Days days16 = null;
        org.joda.time.Days days17 = days11.minus(days16);
        org.joda.time.Days days19 = days11.minus((-1));
        org.joda.time.DurationFieldType durationFieldType20 = days11.getFieldType();
        boolean boolean21 = days4.isGreaterThan(days11);
        org.joda.time.ReadableInterval readableInterval22 = null;
        org.joda.time.Days days23 = org.joda.time.Days.daysIn(readableInterval22);
        org.joda.time.Days days25 = days23.plus((int) (byte) 10);
        org.joda.time.Days days26 = days11.plus(days25);
        org.joda.time.ReadableInterval readableInterval27 = null;
        org.joda.time.Days days28 = org.joda.time.Days.daysIn(readableInterval27);
        int int30 = days28.getValue((int) (short) 0);
        org.joda.time.Days days31 = org.joda.time.Days.FIVE;
        org.joda.time.Days days32 = days28.minus(days31);
        org.joda.time.Days days33 = null;
        org.joda.time.Days days34 = days28.minus(days33);
        org.joda.time.Duration duration35 = days28.toStandardDuration();
        org.joda.time.Days days36 = days26.minus(days28);
        org.joda.time.Duration duration37 = days36.toStandardDuration();
        org.joda.time.Days days39 = days36.minus(5);
        org.joda.time.ReadableInterval readableInterval40 = null;
        org.joda.time.Days days41 = org.joda.time.Days.daysIn(readableInterval40);
        org.joda.time.Days days43 = days41.plus((int) (byte) 10);
        org.joda.time.Days days44 = days39.plus(days41);
        // The following exception was thrown during execution in test generation
        try {
            int int46 = days39.getValue((-2147483648));
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: -2147483648");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(days1);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(days4);
        org.junit.Assert.assertNotNull(days5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(durationFieldType9);
        org.junit.Assert.assertNotNull(days11);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(days14);
        org.junit.Assert.assertNotNull(days15);
        org.junit.Assert.assertNotNull(days17);
        org.junit.Assert.assertNotNull(days19);
        org.junit.Assert.assertNotNull(durationFieldType20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(days23);
        org.junit.Assert.assertNotNull(days25);
        org.junit.Assert.assertNotNull(days26);
        org.junit.Assert.assertNotNull(days28);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertNotNull(days31);
        org.junit.Assert.assertNotNull(days32);
        org.junit.Assert.assertNotNull(days34);
        org.junit.Assert.assertNotNull(duration35);
        org.junit.Assert.assertNotNull(days36);
        org.junit.Assert.assertNotNull(duration37);
        org.junit.Assert.assertNotNull(days39);
        org.junit.Assert.assertNotNull(days41);
        org.junit.Assert.assertNotNull(days43);
        org.junit.Assert.assertNotNull(days44);
    }

    @Test
    public void test0057() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0057");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Days days1 = org.joda.time.Days.daysIn(readableInterval0);
        int int3 = days1.getValue((int) (short) 0);
        org.joda.time.Days days4 = org.joda.time.Days.FIVE;
        org.joda.time.Days days5 = days1.minus(days4);
        org.joda.time.Days days6 = null;
        org.joda.time.Days days7 = days1.minus(days6);
        org.joda.time.Days days9 = days7.minus(100);
        org.joda.time.ReadableInterval readableInterval10 = null;
        org.joda.time.Days days11 = org.joda.time.Days.daysIn(readableInterval10);
        int int13 = days11.getValue((int) (short) 0);
        org.joda.time.Days days14 = org.joda.time.Days.FIVE;
        org.joda.time.Days days15 = days11.minus(days14);
        org.joda.time.Days days16 = null;
        org.joda.time.Days days17 = days11.minus(days16);
        org.joda.time.Days days19 = days11.minus((-1));
        org.joda.time.Days days20 = days7.plus(days11);
        org.joda.time.Days days21 = org.joda.time.Days.standardDaysIn((org.joda.time.ReadablePeriod) days11);
        // The following exception was thrown during execution in test generation
        try {
            int int23 = days11.getValue(42);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 42");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(days1);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(days4);
        org.junit.Assert.assertNotNull(days5);
        org.junit.Assert.assertNotNull(days7);
        org.junit.Assert.assertNotNull(days9);
        org.junit.Assert.assertNotNull(days11);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(days14);
        org.junit.Assert.assertNotNull(days15);
        org.junit.Assert.assertNotNull(days17);
        org.junit.Assert.assertNotNull(days19);
        org.junit.Assert.assertNotNull(days20);
        org.junit.Assert.assertNotNull(days21);
    }

    @Test
    public void test0058() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0058");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Days days1 = org.joda.time.Days.daysIn(readableInterval0);
        org.joda.time.ReadableInterval readableInterval2 = null;
        org.joda.time.Days days3 = org.joda.time.Days.daysIn(readableInterval2);
        int int5 = days3.getValue((int) (short) 0);
        org.joda.time.Days days6 = org.joda.time.Days.FIVE;
        org.joda.time.Days days7 = days3.minus(days6);
        org.joda.time.DurationFieldType durationFieldType8 = null;
        boolean boolean9 = days6.isSupported(durationFieldType8);
        org.joda.time.DurationFieldType durationFieldType11 = days6.getFieldType(0);
        int int12 = days1.get(durationFieldType11);
        org.joda.time.ReadableInterval readableInterval13 = null;
        org.joda.time.Days days14 = org.joda.time.Days.daysIn(readableInterval13);
        int int16 = days14.getValue((int) (short) 0);
        org.joda.time.Days days17 = org.joda.time.Days.FIVE;
        org.joda.time.Days days18 = days14.minus(days17);
        org.joda.time.DurationFieldType durationFieldType19 = null;
        int int20 = days17.get(durationFieldType19);
        org.joda.time.DurationFieldType durationFieldType21 = null;
        int int22 = days17.get(durationFieldType21);
        boolean boolean24 = days17.equals((java.lang.Object) 0L);
        boolean boolean25 = days1.isGreaterThan(days17);
        org.joda.time.ReadableInterval readableInterval26 = null;
        org.joda.time.Days days27 = org.joda.time.Days.daysIn(readableInterval26);
        int int29 = days27.getValue((int) (short) 0);
        org.joda.time.Days days30 = org.joda.time.Days.FIVE;
        org.joda.time.Days days31 = days27.minus(days30);
        org.joda.time.DurationFieldType durationFieldType32 = null;
        int int33 = days30.get(durationFieldType32);
        org.joda.time.DurationFieldType durationFieldType34 = null;
        int int35 = days30.get(durationFieldType34);
        boolean boolean37 = days30.equals((java.lang.Object) 0L);
        org.joda.time.Period period38 = days30.toPeriod();
        org.joda.time.Days days39 = days1.plus(days30);
        org.joda.time.ReadableInterval readableInterval40 = null;
        org.joda.time.Days days41 = org.joda.time.Days.daysIn(readableInterval40);
        int int43 = days41.getValue((int) (short) 0);
        org.joda.time.Period period44 = days41.toPeriod();
        org.joda.time.Days days45 = org.joda.time.Days.standardDaysIn((org.joda.time.ReadablePeriod) days41);
        boolean boolean46 = days1.equals((java.lang.Object) days45);
        org.joda.time.ReadableInterval readableInterval47 = null;
        org.joda.time.Days days48 = org.joda.time.Days.daysIn(readableInterval47);
        int int50 = days48.getValue((int) (short) 0);
        org.joda.time.Days days51 = org.joda.time.Days.FIVE;
        org.joda.time.Days days52 = days48.minus(days51);
        org.joda.time.DurationFieldType durationFieldType53 = null;
        boolean boolean54 = days51.isSupported(durationFieldType53);
        org.joda.time.DurationFieldType durationFieldType56 = days51.getFieldType(0);
        boolean boolean57 = days45.isSupported(durationFieldType56);
        org.joda.time.PeriodType periodType58 = days45.getPeriodType();
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.DurationFieldType durationFieldType60 = days45.getFieldType(1);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 1");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(days1);
        org.junit.Assert.assertNotNull(days3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(days6);
        org.junit.Assert.assertNotNull(days7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(durationFieldType11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNotNull(days14);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertNotNull(days17);
        org.junit.Assert.assertNotNull(days18);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(days27);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertNotNull(days30);
        org.junit.Assert.assertNotNull(days31);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(period38);
        org.junit.Assert.assertNotNull(days39);
        org.junit.Assert.assertNotNull(days41);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0);
        org.junit.Assert.assertNotNull(period44);
        org.junit.Assert.assertNotNull(days45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(days48);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 0 + "'", int50 == 0);
        org.junit.Assert.assertNotNull(days51);
        org.junit.Assert.assertNotNull(days52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(durationFieldType56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(periodType58);
    }

    @Test
    public void test0059() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0059");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Days days1 = org.joda.time.Days.daysIn(readableInterval0);
        org.joda.time.Days days3 = days1.plus((int) (byte) 10);
        org.joda.time.Days days5 = days3.dividedBy((int) 'a');
        org.joda.time.Days days7 = days3.dividedBy(5);
        org.joda.time.Days days9 = days3.plus((int) (byte) -1);
        org.joda.time.Days days11 = days3.minus((int) (byte) 100);
        org.joda.time.Days days12 = org.joda.time.Days.THREE;
        org.joda.time.ReadableInterval readableInterval13 = null;
        org.joda.time.Days days14 = org.joda.time.Days.daysIn(readableInterval13);
        org.joda.time.ReadableInterval readableInterval15 = null;
        org.joda.time.Days days16 = org.joda.time.Days.daysIn(readableInterval15);
        int int18 = days16.getValue((int) (short) 0);
        org.joda.time.Days days19 = org.joda.time.Days.FIVE;
        org.joda.time.Days days20 = days16.minus(days19);
        org.joda.time.DurationFieldType durationFieldType21 = null;
        boolean boolean22 = days19.isSupported(durationFieldType21);
        org.joda.time.DurationFieldType durationFieldType24 = days19.getFieldType(0);
        int int25 = days14.get(durationFieldType24);
        org.joda.time.ReadableInterval readableInterval26 = null;
        org.joda.time.Days days27 = org.joda.time.Days.daysIn(readableInterval26);
        int int29 = days27.getValue((int) (short) 0);
        org.joda.time.Days days30 = org.joda.time.Days.FIVE;
        org.joda.time.Days days31 = days27.minus(days30);
        org.joda.time.DurationFieldType durationFieldType32 = null;
        int int33 = days30.get(durationFieldType32);
        org.joda.time.DurationFieldType durationFieldType34 = null;
        int int35 = days30.get(durationFieldType34);
        boolean boolean37 = days30.equals((java.lang.Object) 0L);
        boolean boolean38 = days14.isGreaterThan(days30);
        org.joda.time.ReadableInterval readableInterval39 = null;
        org.joda.time.Days days40 = org.joda.time.Days.daysIn(readableInterval39);
        int int42 = days40.getValue((int) (short) 0);
        org.joda.time.Days days43 = org.joda.time.Days.FIVE;
        org.joda.time.Days days44 = days40.minus(days43);
        org.joda.time.DurationFieldType durationFieldType45 = null;
        int int46 = days43.get(durationFieldType45);
        org.joda.time.DurationFieldType durationFieldType47 = null;
        int int48 = days43.get(durationFieldType47);
        boolean boolean50 = days43.equals((java.lang.Object) 0L);
        org.joda.time.Period period51 = days43.toPeriod();
        org.joda.time.Days days52 = days14.plus(days43);
        boolean boolean53 = days12.isGreaterThan(days52);
        org.joda.time.Days days55 = days52.dividedBy(42);
        org.joda.time.PeriodType periodType56 = days52.getPeriodType();
        org.joda.time.PeriodType periodType57 = days52.getPeriodType();
        boolean boolean58 = days3.isLessThan(days52);
        org.junit.Assert.assertNotNull(days1);
        org.junit.Assert.assertNotNull(days3);
        org.junit.Assert.assertNotNull(days5);
        org.junit.Assert.assertNotNull(days7);
        org.junit.Assert.assertNotNull(days9);
        org.junit.Assert.assertNotNull(days11);
        org.junit.Assert.assertNotNull(days12);
        org.junit.Assert.assertNotNull(days14);
        org.junit.Assert.assertNotNull(days16);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNotNull(days19);
        org.junit.Assert.assertNotNull(days20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(durationFieldType24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertNotNull(days27);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertNotNull(days30);
        org.junit.Assert.assertNotNull(days31);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(days40);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0);
        org.junit.Assert.assertNotNull(days43);
        org.junit.Assert.assertNotNull(days44);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 0 + "'", int46 == 0);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 0 + "'", int48 == 0);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(period51);
        org.junit.Assert.assertNotNull(days52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(days55);
        org.junit.Assert.assertNotNull(periodType56);
        org.junit.Assert.assertNotNull(periodType57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
    }

    @Test
    public void test0060() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0060");
        org.joda.time.Days days0 = org.joda.time.Days.SEVEN;
        org.joda.time.Seconds seconds1 = days0.toStandardSeconds();
        org.junit.Assert.assertNotNull(days0);
        org.junit.Assert.assertNotNull(seconds1);
    }

    @Test
    public void test0061() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0061");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Days days1 = org.joda.time.Days.daysIn(readableInterval0);
        int int3 = days1.getValue((int) (short) 0);
        org.joda.time.Days days4 = org.joda.time.Days.FIVE;
        org.joda.time.Days days5 = days1.minus(days4);
        org.joda.time.Days days6 = null;
        org.joda.time.Days days7 = days1.minus(days6);
        org.joda.time.Days days9 = days7.minus(100);
        org.joda.time.ReadableInterval readableInterval10 = null;
        org.joda.time.Days days11 = org.joda.time.Days.daysIn(readableInterval10);
        int int13 = days11.getValue((int) (short) 0);
        org.joda.time.Days days14 = org.joda.time.Days.FIVE;
        org.joda.time.Days days15 = days11.minus(days14);
        org.joda.time.Days days16 = null;
        org.joda.time.Days days17 = days11.minus(days16);
        org.joda.time.Days days19 = days11.minus((-1));
        org.joda.time.Days days20 = days7.plus(days11);
        org.joda.time.ReadableInterval readableInterval21 = null;
        org.joda.time.Days days22 = org.joda.time.Days.daysIn(readableInterval21);
        int int24 = days22.getValue((int) (short) 0);
        org.joda.time.ReadableInterval readableInterval25 = null;
        org.joda.time.Days days26 = org.joda.time.Days.daysIn(readableInterval25);
        int int28 = days26.getValue((int) (short) 0);
        org.joda.time.Days days29 = org.joda.time.Days.FIVE;
        org.joda.time.Days days30 = days26.minus(days29);
        int int31 = days22.compareTo((org.joda.time.base.BaseSingleFieldPeriod) days29);
        org.joda.time.ReadableInterval readableInterval32 = null;
        org.joda.time.Days days33 = org.joda.time.Days.daysIn(readableInterval32);
        int int35 = days33.getValue((int) (short) 0);
        org.joda.time.Days days36 = org.joda.time.Days.FIVE;
        org.joda.time.Days days37 = days33.minus(days36);
        org.joda.time.DurationFieldType durationFieldType38 = null;
        boolean boolean39 = days36.isSupported(durationFieldType38);
        org.joda.time.DurationFieldType durationFieldType41 = days36.getFieldType(0);
        int int42 = days22.get(durationFieldType41);
        boolean boolean43 = days20.isSupported(durationFieldType41);
        org.joda.time.Period period44 = days20.toPeriod();
        org.junit.Assert.assertNotNull(days1);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(days4);
        org.junit.Assert.assertNotNull(days5);
        org.junit.Assert.assertNotNull(days7);
        org.junit.Assert.assertNotNull(days9);
        org.junit.Assert.assertNotNull(days11);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(days14);
        org.junit.Assert.assertNotNull(days15);
        org.junit.Assert.assertNotNull(days17);
        org.junit.Assert.assertNotNull(days19);
        org.junit.Assert.assertNotNull(days20);
        org.junit.Assert.assertNotNull(days22);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertNotNull(days26);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertNotNull(days29);
        org.junit.Assert.assertNotNull(days30);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertNotNull(days33);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertNotNull(days36);
        org.junit.Assert.assertNotNull(days37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(durationFieldType41);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(period44);
    }

    @Test
    public void test0062() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0062");
        org.joda.time.Days days0 = org.joda.time.Days.ZERO;
        org.joda.time.ReadableInterval readableInterval1 = null;
        org.joda.time.Days days2 = org.joda.time.Days.daysIn(readableInterval1);
        int int4 = days2.getValue((int) (short) 0);
        org.joda.time.Days days5 = org.joda.time.Days.FIVE;
        org.joda.time.Days days6 = days2.minus(days5);
        org.joda.time.Days days7 = null;
        org.joda.time.Days days8 = days2.minus(days7);
        org.joda.time.Duration duration9 = days2.toStandardDuration();
        org.joda.time.DurationFieldType durationFieldType10 = days2.getFieldType();
        org.joda.time.Days days11 = days0.minus(days2);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.DurationFieldType durationFieldType13 = days11.getFieldType((int) 'a');
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 97");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(days0);
        org.junit.Assert.assertNotNull(days2);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(days5);
        org.junit.Assert.assertNotNull(days6);
        org.junit.Assert.assertNotNull(days8);
        org.junit.Assert.assertNotNull(duration9);
        org.junit.Assert.assertNotNull(durationFieldType10);
        org.junit.Assert.assertNotNull(days11);
    }

    @Test
    public void test0063() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0063");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Days days1 = org.joda.time.Days.daysIn(readableInterval0);
        int int3 = days1.getValue((int) (short) 0);
        org.joda.time.ReadableInterval readableInterval4 = null;
        org.joda.time.Days days5 = org.joda.time.Days.daysIn(readableInterval4);
        int int7 = days5.getValue((int) (short) 0);
        org.joda.time.Days days8 = org.joda.time.Days.FIVE;
        org.joda.time.Days days9 = days5.minus(days8);
        int int10 = days1.compareTo((org.joda.time.base.BaseSingleFieldPeriod) days8);
        java.lang.String str11 = days1.toString();
        org.joda.time.Days days13 = days1.plus((int) '4');
        java.lang.Class<?> wildcardClass14 = days1.getClass();
        org.junit.Assert.assertNotNull(days1);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(days5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(days8);
        org.junit.Assert.assertNotNull(days9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "P0D" + "'", str11, "P0D");
        org.junit.Assert.assertNotNull(days13);
        org.junit.Assert.assertNotNull(wildcardClass14);
    }

    @Test
    public void test0064() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0064");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Days days1 = org.joda.time.Days.daysIn(readableInterval0);
        org.joda.time.ReadableInterval readableInterval2 = null;
        org.joda.time.Days days3 = org.joda.time.Days.daysIn(readableInterval2);
        int int5 = days3.getValue((int) (short) 0);
        org.joda.time.Days days6 = org.joda.time.Days.FIVE;
        org.joda.time.Days days7 = days3.minus(days6);
        org.joda.time.DurationFieldType durationFieldType8 = null;
        boolean boolean9 = days6.isSupported(durationFieldType8);
        org.joda.time.DurationFieldType durationFieldType11 = days6.getFieldType(0);
        int int12 = days1.get(durationFieldType11);
        org.joda.time.ReadableInterval readableInterval13 = null;
        org.joda.time.Days days14 = org.joda.time.Days.daysIn(readableInterval13);
        int int16 = days14.getValue((int) (short) 0);
        org.joda.time.Days days17 = org.joda.time.Days.FIVE;
        org.joda.time.Days days18 = days14.minus(days17);
        org.joda.time.DurationFieldType durationFieldType19 = null;
        int int20 = days17.get(durationFieldType19);
        org.joda.time.DurationFieldType durationFieldType21 = null;
        int int22 = days17.get(durationFieldType21);
        boolean boolean24 = days17.equals((java.lang.Object) 0L);
        boolean boolean25 = days1.isGreaterThan(days17);
        org.joda.time.ReadableInterval readableInterval26 = null;
        org.joda.time.Days days27 = org.joda.time.Days.daysIn(readableInterval26);
        int int29 = days27.getValue((int) (short) 0);
        org.joda.time.Days days30 = org.joda.time.Days.FIVE;
        org.joda.time.Days days31 = days27.minus(days30);
        org.joda.time.DurationFieldType durationFieldType32 = null;
        int int33 = days30.get(durationFieldType32);
        org.joda.time.DurationFieldType durationFieldType34 = null;
        int int35 = days30.get(durationFieldType34);
        boolean boolean37 = days30.equals((java.lang.Object) 0L);
        org.joda.time.Period period38 = days30.toPeriod();
        org.joda.time.Days days39 = days1.plus(days30);
        org.joda.time.ReadableInterval readableInterval40 = null;
        org.joda.time.Days days41 = org.joda.time.Days.daysIn(readableInterval40);
        int int43 = days41.getValue((int) (short) 0);
        org.joda.time.Period period44 = days41.toPeriod();
        org.joda.time.Days days45 = org.joda.time.Days.standardDaysIn((org.joda.time.ReadablePeriod) days41);
        boolean boolean46 = days1.equals((java.lang.Object) days45);
        org.joda.time.Days days48 = days45.multipliedBy(0);
        org.joda.time.Days days50 = days45.multipliedBy(5);
        org.joda.time.Days days52 = days50.dividedBy(5);
        org.joda.time.MutablePeriod mutablePeriod53 = days52.toMutablePeriod();
        org.junit.Assert.assertNotNull(days1);
        org.junit.Assert.assertNotNull(days3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(days6);
        org.junit.Assert.assertNotNull(days7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(durationFieldType11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNotNull(days14);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertNotNull(days17);
        org.junit.Assert.assertNotNull(days18);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(days27);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertNotNull(days30);
        org.junit.Assert.assertNotNull(days31);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(period38);
        org.junit.Assert.assertNotNull(days39);
        org.junit.Assert.assertNotNull(days41);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0);
        org.junit.Assert.assertNotNull(period44);
        org.junit.Assert.assertNotNull(days45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(days48);
        org.junit.Assert.assertNotNull(days50);
        org.junit.Assert.assertNotNull(days52);
        org.junit.Assert.assertNotNull(mutablePeriod53);
    }

    @Test
    public void test0065() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0065");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Days days1 = org.joda.time.Days.daysIn(readableInterval0);
        int int3 = days1.getValue((int) (short) 0);
        org.joda.time.Days days4 = org.joda.time.Days.FIVE;
        org.joda.time.Days days5 = days1.minus(days4);
        org.joda.time.Days days7 = days1.plus((int) (byte) 0);
        java.lang.Class<?> wildcardClass8 = days1.getClass();
        org.junit.Assert.assertNotNull(days1);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(days4);
        org.junit.Assert.assertNotNull(days5);
        org.junit.Assert.assertNotNull(days7);
        org.junit.Assert.assertNotNull(wildcardClass8);
    }

    @Test
    public void test0066() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0066");
        org.joda.time.Days days0 = org.joda.time.Days.SEVEN;
        org.joda.time.Days days2 = days0.plus(1);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.DurationFieldType durationFieldType4 = days0.getFieldType((int) (short) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 1");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(days0);
        org.junit.Assert.assertNotNull(days2);
    }

    @Test
    public void test0067() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0067");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Days days1 = org.joda.time.Days.daysIn(readableInterval0);
        int int3 = days1.getValue((int) (short) 0);
        org.joda.time.Days days4 = org.joda.time.Days.FIVE;
        org.joda.time.Days days5 = days1.minus(days4);
        org.joda.time.ReadableInterval readableInterval6 = null;
        org.joda.time.Days days7 = org.joda.time.Days.daysIn(readableInterval6);
        int int9 = days7.getValue((int) (short) 0);
        int int10 = days1.compareTo((org.joda.time.base.BaseSingleFieldPeriod) days7);
        org.joda.time.ReadableInterval readableInterval11 = null;
        org.joda.time.Days days12 = org.joda.time.Days.daysIn(readableInterval11);
        int int14 = days12.getValue((int) (short) 0);
        org.joda.time.Days days15 = org.joda.time.Days.FIVE;
        org.joda.time.Days days16 = days12.minus(days15);
        org.joda.time.DurationFieldType durationFieldType17 = null;
        int int18 = days15.get(durationFieldType17);
        org.joda.time.DurationFieldType durationFieldType19 = null;
        int int20 = days15.get(durationFieldType19);
        boolean boolean22 = days15.equals((java.lang.Object) false);
        boolean boolean23 = days7.equals((java.lang.Object) days15);
        org.joda.time.ReadableInterval readableInterval24 = null;
        org.joda.time.Days days25 = org.joda.time.Days.daysIn(readableInterval24);
        int int27 = days25.getValue((int) (short) 0);
        org.joda.time.Days days28 = org.joda.time.Days.FIVE;
        org.joda.time.Days days29 = days25.minus(days28);
        org.joda.time.Days days30 = null;
        org.joda.time.Days days31 = days25.minus(days30);
        org.joda.time.Days days33 = days25.minus((-1));
        int int34 = days25.size();
        org.joda.time.Days days35 = days15.minus(days25);
        java.lang.Class<?> wildcardClass36 = days25.getClass();
        org.junit.Assert.assertNotNull(days1);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(days4);
        org.junit.Assert.assertNotNull(days5);
        org.junit.Assert.assertNotNull(days7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(days12);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNotNull(days15);
        org.junit.Assert.assertNotNull(days16);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(days25);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertNotNull(days28);
        org.junit.Assert.assertNotNull(days29);
        org.junit.Assert.assertNotNull(days31);
        org.junit.Assert.assertNotNull(days33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 1 + "'", int34 == 1);
        org.junit.Assert.assertNotNull(days35);
        org.junit.Assert.assertNotNull(wildcardClass36);
    }

    @Test
    public void test0068() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0068");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Days days1 = org.joda.time.Days.daysIn(readableInterval0);
        org.joda.time.ReadableInterval readableInterval2 = null;
        org.joda.time.Days days3 = org.joda.time.Days.daysIn(readableInterval2);
        int int5 = days3.getValue((int) (short) 0);
        org.joda.time.Days days6 = org.joda.time.Days.FIVE;
        org.joda.time.Days days7 = days3.minus(days6);
        org.joda.time.DurationFieldType durationFieldType8 = null;
        boolean boolean9 = days6.isSupported(durationFieldType8);
        org.joda.time.DurationFieldType durationFieldType11 = days6.getFieldType(0);
        int int12 = days1.get(durationFieldType11);
        org.joda.time.ReadableInterval readableInterval13 = null;
        org.joda.time.Days days14 = org.joda.time.Days.daysIn(readableInterval13);
        int int16 = days14.getValue((int) (short) 0);
        org.joda.time.Days days17 = org.joda.time.Days.FIVE;
        org.joda.time.Days days18 = days14.minus(days17);
        org.joda.time.DurationFieldType durationFieldType19 = null;
        int int20 = days17.get(durationFieldType19);
        org.joda.time.DurationFieldType durationFieldType21 = null;
        int int22 = days17.get(durationFieldType21);
        boolean boolean24 = days17.equals((java.lang.Object) 0L);
        boolean boolean25 = days1.isGreaterThan(days17);
        org.joda.time.ReadableInterval readableInterval26 = null;
        org.joda.time.Days days27 = org.joda.time.Days.daysIn(readableInterval26);
        int int29 = days27.getValue((int) (short) 0);
        org.joda.time.Days days30 = org.joda.time.Days.FIVE;
        org.joda.time.Days days31 = days27.minus(days30);
        org.joda.time.DurationFieldType durationFieldType32 = null;
        int int33 = days30.get(durationFieldType32);
        org.joda.time.DurationFieldType durationFieldType34 = null;
        int int35 = days30.get(durationFieldType34);
        boolean boolean37 = days30.equals((java.lang.Object) 0L);
        org.joda.time.Period period38 = days30.toPeriod();
        org.joda.time.Days days39 = days1.plus(days30);
        org.joda.time.ReadableInterval readableInterval40 = null;
        org.joda.time.Days days41 = org.joda.time.Days.daysIn(readableInterval40);
        int int43 = days41.getValue((int) (short) 0);
        org.joda.time.Period period44 = days41.toPeriod();
        org.joda.time.Days days45 = org.joda.time.Days.standardDaysIn((org.joda.time.ReadablePeriod) days41);
        boolean boolean46 = days1.equals((java.lang.Object) days45);
        org.joda.time.ReadableInterval readableInterval47 = null;
        org.joda.time.Days days48 = org.joda.time.Days.daysIn(readableInterval47);
        int int50 = days48.getValue((int) (short) 0);
        org.joda.time.Days days51 = org.joda.time.Days.FIVE;
        org.joda.time.Days days52 = days48.minus(days51);
        org.joda.time.DurationFieldType durationFieldType53 = null;
        boolean boolean54 = days51.isSupported(durationFieldType53);
        org.joda.time.DurationFieldType durationFieldType56 = days51.getFieldType(0);
        boolean boolean57 = days45.isSupported(durationFieldType56);
        int int58 = days45.size();
        org.joda.time.Days days60 = days45.plus(42);
        // The following exception was thrown during execution in test generation
        try {
            int int62 = days45.getValue(1);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 1");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(days1);
        org.junit.Assert.assertNotNull(days3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(days6);
        org.junit.Assert.assertNotNull(days7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(durationFieldType11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNotNull(days14);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertNotNull(days17);
        org.junit.Assert.assertNotNull(days18);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(days27);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertNotNull(days30);
        org.junit.Assert.assertNotNull(days31);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(period38);
        org.junit.Assert.assertNotNull(days39);
        org.junit.Assert.assertNotNull(days41);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0);
        org.junit.Assert.assertNotNull(period44);
        org.junit.Assert.assertNotNull(days45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(days48);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 0 + "'", int50 == 0);
        org.junit.Assert.assertNotNull(days51);
        org.junit.Assert.assertNotNull(days52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(durationFieldType56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 1 + "'", int58 == 1);
        org.junit.Assert.assertNotNull(days60);
    }

    @Test
    public void test0069() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0069");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Days days1 = org.joda.time.Days.daysIn(readableInterval0);
        int int3 = days1.getValue((int) (short) 0);
        org.joda.time.Days days4 = org.joda.time.Days.FIVE;
        org.joda.time.Days days5 = days1.minus(days4);
        org.joda.time.DurationFieldType durationFieldType6 = null;
        int int7 = days4.get(durationFieldType6);
        org.joda.time.Days days9 = days4.dividedBy(100);
        org.joda.time.ReadableInterval readableInterval10 = null;
        org.joda.time.Days days11 = org.joda.time.Days.daysIn(readableInterval10);
        int int13 = days11.getValue((int) (short) 0);
        org.joda.time.Days days14 = org.joda.time.Days.FIVE;
        org.joda.time.Days days15 = days11.minus(days14);
        org.joda.time.DurationFieldType durationFieldType16 = null;
        boolean boolean17 = days14.isSupported(durationFieldType16);
        org.joda.time.DurationFieldType durationFieldType19 = days14.getFieldType(0);
        org.joda.time.Period period20 = days14.toPeriod();
        int int22 = days14.getValue(0);
        int int23 = days14.getDays();
        org.joda.time.Days days25 = days14.multipliedBy(10);
        boolean boolean26 = days4.isGreaterThan(days25);
        org.junit.Assert.assertNotNull(days1);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(days4);
        org.junit.Assert.assertNotNull(days5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(days9);
        org.junit.Assert.assertNotNull(days11);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(days14);
        org.junit.Assert.assertNotNull(days15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(durationFieldType19);
        org.junit.Assert.assertNotNull(period20);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 5 + "'", int22 == 5);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 5 + "'", int23 == 5);
        org.junit.Assert.assertNotNull(days25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
    }

    @Test
    public void test0070() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0070");
        org.joda.time.Days days0 = org.joda.time.Days.SIX;
        org.joda.time.Days days2 = days0.plus(100);
        org.joda.time.ReadableInterval readableInterval3 = null;
        org.joda.time.Days days4 = org.joda.time.Days.daysIn(readableInterval3);
        int int6 = days4.getValue((int) (short) 0);
        org.joda.time.Days days7 = org.joda.time.Days.FIVE;
        org.joda.time.Days days8 = days4.minus(days7);
        org.joda.time.Days days9 = null;
        org.joda.time.Days days10 = days4.minus(days9);
        org.joda.time.Days days12 = days4.minus((-1));
        org.joda.time.DurationFieldType durationFieldType13 = days4.getFieldType();
        int int14 = days0.get(durationFieldType13);
        org.joda.time.Days days15 = days0.negated();
        org.joda.time.ReadableInterval readableInterval16 = null;
        org.joda.time.Days days17 = org.joda.time.Days.daysIn(readableInterval16);
        int int19 = days17.getValue((int) (short) 0);
        org.joda.time.Days days20 = org.joda.time.Days.FIVE;
        org.joda.time.Days days21 = days17.minus(days20);
        org.joda.time.ReadableInterval readableInterval22 = null;
        org.joda.time.Days days23 = org.joda.time.Days.daysIn(readableInterval22);
        int int25 = days23.getValue((int) (short) 0);
        int int26 = days17.compareTo((org.joda.time.base.BaseSingleFieldPeriod) days23);
        org.joda.time.ReadableInterval readableInterval27 = null;
        org.joda.time.Days days28 = org.joda.time.Days.daysIn(readableInterval27);
        int int30 = days28.getValue((int) (short) 0);
        org.joda.time.Days days31 = org.joda.time.Days.FIVE;
        org.joda.time.Days days32 = days28.minus(days31);
        org.joda.time.DurationFieldType durationFieldType33 = null;
        int int34 = days31.get(durationFieldType33);
        org.joda.time.DurationFieldType durationFieldType35 = null;
        int int36 = days31.get(durationFieldType35);
        boolean boolean38 = days31.equals((java.lang.Object) false);
        boolean boolean39 = days23.equals((java.lang.Object) days31);
        boolean boolean40 = days15.isGreaterThan(days31);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.DurationFieldType durationFieldType42 = days31.getFieldType((int) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: -1");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(days0);
        org.junit.Assert.assertNotNull(days2);
        org.junit.Assert.assertNotNull(days4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNotNull(days7);
        org.junit.Assert.assertNotNull(days8);
        org.junit.Assert.assertNotNull(days10);
        org.junit.Assert.assertNotNull(days12);
        org.junit.Assert.assertNotNull(durationFieldType13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 6 + "'", int14 == 6);
        org.junit.Assert.assertNotNull(days15);
        org.junit.Assert.assertNotNull(days17);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertNotNull(days20);
        org.junit.Assert.assertNotNull(days21);
        org.junit.Assert.assertNotNull(days23);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertNotNull(days28);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertNotNull(days31);
        org.junit.Assert.assertNotNull(days32);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
    }

    @Test
    public void test0071() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0071");
        org.joda.time.Days days0 = org.joda.time.Days.THREE;
        org.joda.time.ReadableInterval readableInterval1 = null;
        org.joda.time.Days days2 = org.joda.time.Days.daysIn(readableInterval1);
        org.joda.time.ReadableInterval readableInterval3 = null;
        org.joda.time.Days days4 = org.joda.time.Days.daysIn(readableInterval3);
        int int6 = days4.getValue((int) (short) 0);
        org.joda.time.Days days7 = org.joda.time.Days.FIVE;
        org.joda.time.Days days8 = days4.minus(days7);
        org.joda.time.DurationFieldType durationFieldType9 = null;
        boolean boolean10 = days7.isSupported(durationFieldType9);
        org.joda.time.DurationFieldType durationFieldType12 = days7.getFieldType(0);
        int int13 = days2.get(durationFieldType12);
        org.joda.time.ReadableInterval readableInterval14 = null;
        org.joda.time.Days days15 = org.joda.time.Days.daysIn(readableInterval14);
        int int17 = days15.getValue((int) (short) 0);
        org.joda.time.Days days18 = org.joda.time.Days.FIVE;
        org.joda.time.Days days19 = days15.minus(days18);
        org.joda.time.DurationFieldType durationFieldType20 = null;
        int int21 = days18.get(durationFieldType20);
        org.joda.time.DurationFieldType durationFieldType22 = null;
        int int23 = days18.get(durationFieldType22);
        boolean boolean25 = days18.equals((java.lang.Object) 0L);
        boolean boolean26 = days2.isGreaterThan(days18);
        org.joda.time.ReadableInterval readableInterval27 = null;
        org.joda.time.Days days28 = org.joda.time.Days.daysIn(readableInterval27);
        int int30 = days28.getValue((int) (short) 0);
        org.joda.time.Days days31 = org.joda.time.Days.FIVE;
        org.joda.time.Days days32 = days28.minus(days31);
        org.joda.time.DurationFieldType durationFieldType33 = null;
        int int34 = days31.get(durationFieldType33);
        org.joda.time.DurationFieldType durationFieldType35 = null;
        int int36 = days31.get(durationFieldType35);
        boolean boolean38 = days31.equals((java.lang.Object) 0L);
        org.joda.time.Period period39 = days31.toPeriod();
        org.joda.time.Days days40 = days2.plus(days31);
        boolean boolean41 = days0.isGreaterThan(days40);
        org.joda.time.ReadableInterval readableInterval42 = null;
        org.joda.time.Days days43 = org.joda.time.Days.daysIn(readableInterval42);
        org.joda.time.Days days45 = days43.plus((int) (byte) 10);
        org.joda.time.Days days47 = days45.dividedBy((int) 'a');
        int int48 = days40.compareTo((org.joda.time.base.BaseSingleFieldPeriod) days45);
        org.joda.time.ReadableInterval readableInterval49 = null;
        org.joda.time.Days days50 = org.joda.time.Days.daysIn(readableInterval49);
        int int52 = days50.getValue((int) (short) 0);
        org.joda.time.Days days53 = org.joda.time.Days.FIVE;
        org.joda.time.Days days54 = days50.minus(days53);
        org.joda.time.DurationFieldType durationFieldType55 = null;
        boolean boolean56 = days53.isSupported(durationFieldType55);
        org.joda.time.DurationFieldType durationFieldType58 = days53.getFieldType(0);
        boolean boolean59 = days40.isSupported(durationFieldType58);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Days days61 = days40.dividedBy(0);
            org.junit.Assert.fail("Expected exception of type java.lang.ArithmeticException; message: / by zero");
        } catch (java.lang.ArithmeticException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(days0);
        org.junit.Assert.assertNotNull(days2);
        org.junit.Assert.assertNotNull(days4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNotNull(days7);
        org.junit.Assert.assertNotNull(days8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(durationFieldType12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(days15);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNotNull(days18);
        org.junit.Assert.assertNotNull(days19);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(days28);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertNotNull(days31);
        org.junit.Assert.assertNotNull(days32);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(period39);
        org.junit.Assert.assertNotNull(days40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(days43);
        org.junit.Assert.assertNotNull(days45);
        org.junit.Assert.assertNotNull(days47);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + (-1) + "'", int48 == (-1));
        org.junit.Assert.assertNotNull(days50);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 0 + "'", int52 == 0);
        org.junit.Assert.assertNotNull(days53);
        org.junit.Assert.assertNotNull(days54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(durationFieldType58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
    }

    @Test
    public void test0072() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0072");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Days days1 = org.joda.time.Days.daysIn(readableInterval0);
        int int3 = days1.getValue((int) (short) 0);
        org.joda.time.Days days4 = org.joda.time.Days.FIVE;
        org.joda.time.Days days5 = days1.minus(days4);
        org.joda.time.Days days6 = null;
        org.joda.time.Days days7 = days1.minus(days6);
        org.joda.time.ReadableInterval readableInterval8 = null;
        org.joda.time.Days days9 = org.joda.time.Days.daysIn(readableInterval8);
        int int11 = days9.getValue((int) (short) 0);
        org.joda.time.Days days12 = org.joda.time.Days.FIVE;
        org.joda.time.Days days13 = days9.minus(days12);
        org.joda.time.DurationFieldType durationFieldType14 = null;
        int int15 = days12.get(durationFieldType14);
        org.joda.time.DurationFieldType durationFieldType16 = null;
        int int17 = days12.get(durationFieldType16);
        boolean boolean19 = days12.equals((java.lang.Object) 0L);
        int int20 = days1.compareTo((org.joda.time.base.BaseSingleFieldPeriod) days12);
        org.joda.time.Days days22 = days1.minus(52);
        org.joda.time.Period period23 = days1.toPeriod();
        org.joda.time.Days days24 = days1.negated();
        // The following exception was thrown during execution in test generation
        try {
            int int26 = days24.getValue((int) '4');
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 52");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(days1);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(days4);
        org.junit.Assert.assertNotNull(days5);
        org.junit.Assert.assertNotNull(days7);
        org.junit.Assert.assertNotNull(days9);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNotNull(days12);
        org.junit.Assert.assertNotNull(days13);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
        org.junit.Assert.assertNotNull(days22);
        org.junit.Assert.assertNotNull(period23);
        org.junit.Assert.assertNotNull(days24);
    }

    @Test
    public void test0073() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0073");
        org.joda.time.Days days1 = org.joda.time.Days.days((int) (byte) 10);
        int int2 = days1.getDays();
        org.junit.Assert.assertNotNull(days1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 10 + "'", int2 == 10);
    }

    @Test
    public void test0074() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0074");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Days days1 = org.joda.time.Days.daysIn(readableInterval0);
        org.joda.time.Days days3 = days1.plus((int) (byte) 10);
        org.joda.time.Days days5 = days3.dividedBy((int) 'a');
        org.joda.time.Days days7 = days3.dividedBy(5);
        org.joda.time.Days days9 = days3.plus((int) (byte) -1);
        org.joda.time.Days days11 = days3.minus((int) (byte) 100);
        org.joda.time.Days days12 = days11.negated();
        int int13 = days11.size();
        org.joda.time.ReadableInterval readableInterval14 = null;
        org.joda.time.Days days15 = org.joda.time.Days.daysIn(readableInterval14);
        int int17 = days15.getValue((int) (short) 0);
        org.joda.time.Days days18 = org.joda.time.Days.FIVE;
        org.joda.time.Days days19 = days15.minus(days18);
        org.joda.time.Days days20 = null;
        org.joda.time.Days days21 = days15.minus(days20);
        org.joda.time.Duration duration22 = days15.toStandardDuration();
        org.joda.time.DurationFieldType durationFieldType23 = days15.getFieldType();
        org.joda.time.Days days24 = days11.minus(days15);
        // The following exception was thrown during execution in test generation
        try {
            int int26 = days11.getValue((int) ' ');
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 32");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(days1);
        org.junit.Assert.assertNotNull(days3);
        org.junit.Assert.assertNotNull(days5);
        org.junit.Assert.assertNotNull(days7);
        org.junit.Assert.assertNotNull(days9);
        org.junit.Assert.assertNotNull(days11);
        org.junit.Assert.assertNotNull(days12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertNotNull(days15);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNotNull(days18);
        org.junit.Assert.assertNotNull(days19);
        org.junit.Assert.assertNotNull(days21);
        org.junit.Assert.assertNotNull(duration22);
        org.junit.Assert.assertNotNull(durationFieldType23);
        org.junit.Assert.assertNotNull(days24);
    }

    @Test
    public void test0075() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0075");
        org.joda.time.Days days0 = org.joda.time.Days.ZERO;
        org.joda.time.ReadableInterval readableInterval1 = null;
        org.joda.time.Days days2 = org.joda.time.Days.daysIn(readableInterval1);
        int int4 = days2.getValue((int) (short) 0);
        org.joda.time.Days days5 = org.joda.time.Days.FIVE;
        org.joda.time.Days days6 = days2.minus(days5);
        org.joda.time.Days days7 = null;
        org.joda.time.Days days8 = days2.minus(days7);
        org.joda.time.Duration duration9 = days2.toStandardDuration();
        org.joda.time.DurationFieldType durationFieldType10 = days2.getFieldType();
        org.joda.time.Days days11 = days0.minus(days2);
        org.joda.time.Period period12 = days2.toPeriod();
        org.junit.Assert.assertNotNull(days0);
        org.junit.Assert.assertNotNull(days2);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(days5);
        org.junit.Assert.assertNotNull(days6);
        org.junit.Assert.assertNotNull(days8);
        org.junit.Assert.assertNotNull(duration9);
        org.junit.Assert.assertNotNull(durationFieldType10);
        org.junit.Assert.assertNotNull(days11);
        org.junit.Assert.assertNotNull(period12);
    }

    @Test
    public void test0076() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0076");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Days days1 = org.joda.time.Days.daysIn(readableInterval0);
        int int3 = days1.getValue((int) (short) 0);
        org.joda.time.Period period4 = days1.toPeriod();
        org.joda.time.Days days5 = org.joda.time.Days.standardDaysIn((org.joda.time.ReadablePeriod) days1);
        java.lang.Class<?> wildcardClass6 = days5.getClass();
        org.junit.Assert.assertNotNull(days1);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(days5);
        org.junit.Assert.assertNotNull(wildcardClass6);
    }

    @Test
    public void test0077() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0077");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Days days1 = org.joda.time.Days.daysIn(readableInterval0);
        int int3 = days1.getValue((int) (short) 0);
        org.joda.time.Days days4 = org.joda.time.Days.FIVE;
        org.joda.time.Days days5 = days1.minus(days4);
        org.joda.time.DurationFieldType durationFieldType6 = null;
        boolean boolean7 = days4.isSupported(durationFieldType6);
        org.joda.time.DurationFieldType durationFieldType9 = days4.getFieldType(0);
        org.joda.time.ReadableInterval readableInterval10 = null;
        org.joda.time.Days days11 = org.joda.time.Days.daysIn(readableInterval10);
        int int13 = days11.getValue((int) (short) 0);
        org.joda.time.Days days14 = org.joda.time.Days.FIVE;
        org.joda.time.Days days15 = days11.minus(days14);
        org.joda.time.Days days16 = null;
        org.joda.time.Days days17 = days11.minus(days16);
        org.joda.time.Days days19 = days11.minus((-1));
        org.joda.time.DurationFieldType durationFieldType20 = days11.getFieldType();
        boolean boolean21 = days4.isGreaterThan(days11);
        org.joda.time.ReadableInterval readableInterval22 = null;
        org.joda.time.Days days23 = org.joda.time.Days.daysIn(readableInterval22);
        org.joda.time.Days days25 = days23.plus((int) (byte) 10);
        org.joda.time.Days days26 = days11.plus(days25);
        org.joda.time.ReadableInterval readableInterval27 = null;
        org.joda.time.Days days28 = org.joda.time.Days.daysIn(readableInterval27);
        int int30 = days28.getValue((int) (short) 0);
        org.joda.time.Days days31 = org.joda.time.Days.FIVE;
        org.joda.time.Days days32 = days28.minus(days31);
        org.joda.time.Days days33 = null;
        org.joda.time.Days days34 = days28.minus(days33);
        org.joda.time.Duration duration35 = days28.toStandardDuration();
        org.joda.time.Days days36 = days26.minus(days28);
        org.joda.time.Days days38 = days36.plus(100);
        java.lang.Class<?> wildcardClass39 = days38.getClass();
        org.junit.Assert.assertNotNull(days1);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(days4);
        org.junit.Assert.assertNotNull(days5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(durationFieldType9);
        org.junit.Assert.assertNotNull(days11);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(days14);
        org.junit.Assert.assertNotNull(days15);
        org.junit.Assert.assertNotNull(days17);
        org.junit.Assert.assertNotNull(days19);
        org.junit.Assert.assertNotNull(durationFieldType20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(days23);
        org.junit.Assert.assertNotNull(days25);
        org.junit.Assert.assertNotNull(days26);
        org.junit.Assert.assertNotNull(days28);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertNotNull(days31);
        org.junit.Assert.assertNotNull(days32);
        org.junit.Assert.assertNotNull(days34);
        org.junit.Assert.assertNotNull(duration35);
        org.junit.Assert.assertNotNull(days36);
        org.junit.Assert.assertNotNull(days38);
        org.junit.Assert.assertNotNull(wildcardClass39);
    }

    @Test
    public void test0078() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0078");
        org.joda.time.Days days1 = org.joda.time.Days.days(52);
        org.junit.Assert.assertNotNull(days1);
    }

    @Test
    public void test0079() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0079");
        org.joda.time.Days days0 = org.joda.time.Days.MIN_VALUE;
        int int1 = days0.getDays();
        org.joda.time.Days days2 = org.joda.time.Days.standardDaysIn((org.joda.time.ReadablePeriod) days0);
        org.junit.Assert.assertNotNull(days0);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + (-2147483648) + "'", int1 == (-2147483648));
        org.junit.Assert.assertNotNull(days2);
    }

    @Test
    public void test0080() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0080");
        org.joda.time.Days days1 = org.joda.time.Days.days((int) '4');
        org.joda.time.Weeks weeks2 = days1.toStandardWeeks();
        org.junit.Assert.assertNotNull(days1);
        org.junit.Assert.assertNotNull(weeks2);
    }

    @Test
    public void test0081() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0081");
        org.joda.time.Days days1 = org.joda.time.Days.parseDays("P5D");
        org.joda.time.Weeks weeks2 = days1.toStandardWeeks();
        org.junit.Assert.assertNotNull(days1);
        org.junit.Assert.assertNotNull(weeks2);
    }

    @Test
    public void test0082() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0082");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Days days1 = org.joda.time.Days.daysIn(readableInterval0);
        org.joda.time.ReadableInterval readableInterval2 = null;
        org.joda.time.Days days3 = org.joda.time.Days.daysIn(readableInterval2);
        int int5 = days3.getValue((int) (short) 0);
        org.joda.time.Days days6 = org.joda.time.Days.FIVE;
        org.joda.time.Days days7 = days3.minus(days6);
        org.joda.time.DurationFieldType durationFieldType8 = null;
        boolean boolean9 = days6.isSupported(durationFieldType8);
        org.joda.time.DurationFieldType durationFieldType11 = days6.getFieldType(0);
        int int12 = days1.get(durationFieldType11);
        org.joda.time.ReadableInterval readableInterval13 = null;
        org.joda.time.Days days14 = org.joda.time.Days.daysIn(readableInterval13);
        int int16 = days14.getValue((int) (short) 0);
        org.joda.time.Days days17 = org.joda.time.Days.FIVE;
        org.joda.time.Days days18 = days14.minus(days17);
        org.joda.time.DurationFieldType durationFieldType19 = null;
        int int20 = days17.get(durationFieldType19);
        org.joda.time.DurationFieldType durationFieldType21 = null;
        int int22 = days17.get(durationFieldType21);
        boolean boolean24 = days17.equals((java.lang.Object) 0L);
        boolean boolean25 = days1.isGreaterThan(days17);
        org.joda.time.ReadableInterval readableInterval26 = null;
        org.joda.time.Days days27 = org.joda.time.Days.daysIn(readableInterval26);
        int int29 = days27.getValue((int) (short) 0);
        org.joda.time.Days days30 = org.joda.time.Days.FIVE;
        org.joda.time.Days days31 = days27.minus(days30);
        org.joda.time.DurationFieldType durationFieldType32 = null;
        int int33 = days30.get(durationFieldType32);
        org.joda.time.DurationFieldType durationFieldType34 = null;
        int int35 = days30.get(durationFieldType34);
        boolean boolean37 = days30.equals((java.lang.Object) 0L);
        org.joda.time.Period period38 = days30.toPeriod();
        org.joda.time.Days days39 = days1.plus(days30);
        org.joda.time.ReadableInterval readableInterval40 = null;
        org.joda.time.Days days41 = org.joda.time.Days.daysIn(readableInterval40);
        int int43 = days41.getValue((int) (short) 0);
        org.joda.time.Period period44 = days41.toPeriod();
        org.joda.time.Days days45 = org.joda.time.Days.standardDaysIn((org.joda.time.ReadablePeriod) days41);
        boolean boolean46 = days1.equals((java.lang.Object) days45);
        org.joda.time.ReadableInterval readableInterval47 = null;
        org.joda.time.Days days48 = org.joda.time.Days.daysIn(readableInterval47);
        int int50 = days48.getValue((int) (short) 0);
        org.joda.time.Days days51 = org.joda.time.Days.FIVE;
        org.joda.time.Days days52 = days48.minus(days51);
        org.joda.time.DurationFieldType durationFieldType53 = null;
        boolean boolean54 = days51.isSupported(durationFieldType53);
        org.joda.time.DurationFieldType durationFieldType56 = days51.getFieldType(0);
        boolean boolean57 = days45.isSupported(durationFieldType56);
        int int58 = days45.size();
        java.lang.String str59 = days45.toString();
        org.junit.Assert.assertNotNull(days1);
        org.junit.Assert.assertNotNull(days3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(days6);
        org.junit.Assert.assertNotNull(days7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(durationFieldType11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNotNull(days14);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertNotNull(days17);
        org.junit.Assert.assertNotNull(days18);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(days27);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertNotNull(days30);
        org.junit.Assert.assertNotNull(days31);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(period38);
        org.junit.Assert.assertNotNull(days39);
        org.junit.Assert.assertNotNull(days41);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0);
        org.junit.Assert.assertNotNull(period44);
        org.junit.Assert.assertNotNull(days45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(days48);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 0 + "'", int50 == 0);
        org.junit.Assert.assertNotNull(days51);
        org.junit.Assert.assertNotNull(days52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(durationFieldType56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 1 + "'", int58 == 1);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "P0D" + "'", str59, "P0D");
    }

    @Test
    public void test0083() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0083");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Days days1 = org.joda.time.Days.daysIn(readableInterval0);
        int int3 = days1.getValue((int) (short) 0);
        org.joda.time.Days days4 = org.joda.time.Days.FIVE;
        org.joda.time.Days days5 = days1.minus(days4);
        org.joda.time.Days days6 = null;
        org.joda.time.Days days7 = days1.minus(days6);
        org.joda.time.Days days9 = days1.minus((-1));
        // The following exception was thrown during execution in test generation
        try {
            int int11 = days1.getValue((int) (short) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 1");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(days1);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(days4);
        org.junit.Assert.assertNotNull(days5);
        org.junit.Assert.assertNotNull(days7);
        org.junit.Assert.assertNotNull(days9);
    }

    @Test
    public void test0084() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0084");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Days days1 = org.joda.time.Days.daysIn(readableInterval0);
        int int3 = days1.getValue((int) (short) 0);
        org.joda.time.Days days4 = org.joda.time.Days.FIVE;
        org.joda.time.Days days5 = days1.minus(days4);
        org.joda.time.DurationFieldType durationFieldType6 = null;
        int int7 = days4.get(durationFieldType6);
        org.joda.time.Days days9 = days4.dividedBy(100);
        org.joda.time.Days days10 = days4.negated();
        org.joda.time.ReadableInterval readableInterval11 = null;
        org.joda.time.Days days12 = org.joda.time.Days.daysIn(readableInterval11);
        org.joda.time.Days days14 = days12.plus((int) (byte) 10);
        org.joda.time.DurationFieldType durationFieldType15 = days12.getFieldType();
        int int16 = days4.get(durationFieldType15);
        java.lang.Class<?> wildcardClass17 = durationFieldType15.getClass();
        org.junit.Assert.assertNotNull(days1);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(days4);
        org.junit.Assert.assertNotNull(days5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(days9);
        org.junit.Assert.assertNotNull(days10);
        org.junit.Assert.assertNotNull(days12);
        org.junit.Assert.assertNotNull(days14);
        org.junit.Assert.assertNotNull(durationFieldType15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 5 + "'", int16 == 5);
        org.junit.Assert.assertNotNull(wildcardClass17);
    }

    @Test
    public void test0085() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0085");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Days days1 = org.joda.time.Days.daysIn(readableInterval0);
        int int3 = days1.getValue((int) (short) 0);
        org.joda.time.Days days4 = org.joda.time.Days.FIVE;
        org.joda.time.Days days5 = days1.minus(days4);
        org.joda.time.Days days6 = org.joda.time.Days.FIVE;
        org.joda.time.ReadableInterval readableInterval7 = null;
        org.joda.time.Days days8 = org.joda.time.Days.daysIn(readableInterval7);
        int int10 = days8.getValue((int) (short) 0);
        org.joda.time.ReadableInterval readableInterval11 = null;
        org.joda.time.Days days12 = org.joda.time.Days.daysIn(readableInterval11);
        int int14 = days12.getValue((int) (short) 0);
        org.joda.time.Days days15 = org.joda.time.Days.FIVE;
        org.joda.time.Days days16 = days12.minus(days15);
        int int17 = days8.compareTo((org.joda.time.base.BaseSingleFieldPeriod) days15);
        org.joda.time.ReadableInterval readableInterval18 = null;
        org.joda.time.Days days19 = org.joda.time.Days.daysIn(readableInterval18);
        int int21 = days19.getValue((int) (short) 0);
        org.joda.time.Days days22 = org.joda.time.Days.FIVE;
        org.joda.time.Days days23 = days19.minus(days22);
        org.joda.time.DurationFieldType durationFieldType24 = null;
        boolean boolean25 = days22.isSupported(durationFieldType24);
        org.joda.time.DurationFieldType durationFieldType27 = days22.getFieldType(0);
        int int28 = days8.get(durationFieldType27);
        boolean boolean29 = days6.isSupported(durationFieldType27);
        org.joda.time.Days days30 = days4.plus(days6);
        org.joda.time.ReadableInterval readableInterval31 = null;
        org.joda.time.Days days32 = org.joda.time.Days.daysIn(readableInterval31);
        int int34 = days32.getValue((int) (short) 0);
        org.joda.time.ReadableInterval readableInterval35 = null;
        org.joda.time.Days days36 = org.joda.time.Days.daysIn(readableInterval35);
        int int38 = days36.getValue((int) (short) 0);
        org.joda.time.Days days39 = org.joda.time.Days.FIVE;
        org.joda.time.Days days40 = days36.minus(days39);
        int int41 = days32.compareTo((org.joda.time.base.BaseSingleFieldPeriod) days39);
        java.lang.String str42 = days32.toString();
        org.joda.time.Days days44 = days32.plus((int) '4');
        org.joda.time.PeriodType periodType45 = days44.getPeriodType();
        int int46 = days44.getDays();
        boolean boolean47 = days30.isGreaterThan(days44);
        org.joda.time.Period period48 = days44.toPeriod();
        org.junit.Assert.assertNotNull(days1);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(days4);
        org.junit.Assert.assertNotNull(days5);
        org.junit.Assert.assertNotNull(days6);
        org.junit.Assert.assertNotNull(days8);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(days12);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNotNull(days15);
        org.junit.Assert.assertNotNull(days16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertNotNull(days19);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertNotNull(days22);
        org.junit.Assert.assertNotNull(days23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(durationFieldType27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(days30);
        org.junit.Assert.assertNotNull(days32);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertNotNull(days36);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 0 + "'", int38 == 0);
        org.junit.Assert.assertNotNull(days39);
        org.junit.Assert.assertNotNull(days40);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + (-1) + "'", int41 == (-1));
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "P0D" + "'", str42, "P0D");
        org.junit.Assert.assertNotNull(days44);
        org.junit.Assert.assertNotNull(periodType45);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 52 + "'", int46 == 52);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(period48);
    }

    @Test
    public void test0086() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0086");
        org.joda.time.Days days0 = org.joda.time.Days.TWO;
        org.joda.time.Days days2 = days0.dividedBy(52);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.DurationFieldType durationFieldType4 = days2.getFieldType((int) '#');
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 35");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(days0);
        org.junit.Assert.assertNotNull(days2);
    }

    @Test
    public void test0087() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0087");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Days days1 = org.joda.time.Days.daysIn(readableInterval0);
        int int3 = days1.getValue((int) (short) 0);
        org.joda.time.ReadableInterval readableInterval4 = null;
        org.joda.time.Days days5 = org.joda.time.Days.daysIn(readableInterval4);
        int int7 = days5.getValue((int) (short) 0);
        org.joda.time.Days days8 = org.joda.time.Days.FIVE;
        org.joda.time.Days days9 = days5.minus(days8);
        int int10 = days1.compareTo((org.joda.time.base.BaseSingleFieldPeriod) days8);
        java.lang.String str11 = days1.toString();
        org.joda.time.Days days13 = days1.plus((int) '4');
        org.joda.time.PeriodType periodType14 = days13.getPeriodType();
        org.joda.time.Days days16 = days13.minus((int) (short) 1);
        org.joda.time.PeriodType periodType17 = days13.getPeriodType();
        org.junit.Assert.assertNotNull(days1);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(days5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(days8);
        org.junit.Assert.assertNotNull(days9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "P0D" + "'", str11, "P0D");
        org.junit.Assert.assertNotNull(days13);
        org.junit.Assert.assertNotNull(periodType14);
        org.junit.Assert.assertNotNull(days16);
        org.junit.Assert.assertNotNull(periodType17);
    }

    @Test
    public void test0088() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0088");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Days days1 = org.joda.time.Days.daysIn(readableInterval0);
        int int3 = days1.getValue((int) (short) 0);
        org.joda.time.Days days4 = org.joda.time.Days.FIVE;
        org.joda.time.Days days5 = days1.minus(days4);
        org.joda.time.Days days6 = null;
        org.joda.time.Days days7 = days1.minus(days6);
        org.joda.time.Days days9 = days7.minus(100);
        org.joda.time.ReadableInterval readableInterval10 = null;
        org.joda.time.Days days11 = org.joda.time.Days.daysIn(readableInterval10);
        int int13 = days11.getValue((int) (short) 0);
        org.joda.time.Days days14 = org.joda.time.Days.FIVE;
        org.joda.time.Days days15 = days11.minus(days14);
        org.joda.time.Days days16 = null;
        org.joda.time.Days days17 = days11.minus(days16);
        org.joda.time.Days days19 = days11.minus((-1));
        org.joda.time.Days days20 = days7.plus(days11);
        org.joda.time.Days days21 = org.joda.time.Days.standardDaysIn((org.joda.time.ReadablePeriod) days11);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Days days23 = days11.dividedBy((int) (short) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.ArithmeticException; message: / by zero");
        } catch (java.lang.ArithmeticException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(days1);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(days4);
        org.junit.Assert.assertNotNull(days5);
        org.junit.Assert.assertNotNull(days7);
        org.junit.Assert.assertNotNull(days9);
        org.junit.Assert.assertNotNull(days11);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(days14);
        org.junit.Assert.assertNotNull(days15);
        org.junit.Assert.assertNotNull(days17);
        org.junit.Assert.assertNotNull(days19);
        org.junit.Assert.assertNotNull(days20);
        org.junit.Assert.assertNotNull(days21);
    }

    @Test
    public void test0089() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0089");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Days days1 = org.joda.time.Days.daysIn(readableInterval0);
        int int3 = days1.getValue((int) (short) 0);
        org.joda.time.ReadableInterval readableInterval4 = null;
        org.joda.time.Days days5 = org.joda.time.Days.daysIn(readableInterval4);
        int int7 = days5.getValue((int) (short) 0);
        org.joda.time.Days days8 = org.joda.time.Days.FIVE;
        org.joda.time.Days days9 = days5.minus(days8);
        int int10 = days1.compareTo((org.joda.time.base.BaseSingleFieldPeriod) days8);
        java.lang.String str11 = days1.toString();
        org.joda.time.Days days13 = days1.plus((int) '4');
        org.joda.time.PeriodType periodType14 = days13.getPeriodType();
        org.joda.time.Days days16 = days13.minus((int) (short) 1);
        org.joda.time.Days days18 = days13.minus((-1));
        int int19 = days18.size();
        org.junit.Assert.assertNotNull(days1);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(days5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(days8);
        org.junit.Assert.assertNotNull(days9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "P0D" + "'", str11, "P0D");
        org.junit.Assert.assertNotNull(days13);
        org.junit.Assert.assertNotNull(periodType14);
        org.junit.Assert.assertNotNull(days16);
        org.junit.Assert.assertNotNull(days18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 1 + "'", int19 == 1);
    }

    @Test
    public void test0090() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0090");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Days days1 = org.joda.time.Days.daysIn(readableInterval0);
        int int3 = days1.getValue((int) (short) 0);
        org.joda.time.Days days4 = org.joda.time.Days.FIVE;
        org.joda.time.Days days5 = days1.minus(days4);
        org.joda.time.Days days6 = org.joda.time.Days.FIVE;
        org.joda.time.ReadableInterval readableInterval7 = null;
        org.joda.time.Days days8 = org.joda.time.Days.daysIn(readableInterval7);
        int int10 = days8.getValue((int) (short) 0);
        org.joda.time.ReadableInterval readableInterval11 = null;
        org.joda.time.Days days12 = org.joda.time.Days.daysIn(readableInterval11);
        int int14 = days12.getValue((int) (short) 0);
        org.joda.time.Days days15 = org.joda.time.Days.FIVE;
        org.joda.time.Days days16 = days12.minus(days15);
        int int17 = days8.compareTo((org.joda.time.base.BaseSingleFieldPeriod) days15);
        org.joda.time.ReadableInterval readableInterval18 = null;
        org.joda.time.Days days19 = org.joda.time.Days.daysIn(readableInterval18);
        int int21 = days19.getValue((int) (short) 0);
        org.joda.time.Days days22 = org.joda.time.Days.FIVE;
        org.joda.time.Days days23 = days19.minus(days22);
        org.joda.time.DurationFieldType durationFieldType24 = null;
        boolean boolean25 = days22.isSupported(durationFieldType24);
        org.joda.time.DurationFieldType durationFieldType27 = days22.getFieldType(0);
        int int28 = days8.get(durationFieldType27);
        boolean boolean29 = days6.isSupported(durationFieldType27);
        org.joda.time.Days days30 = days4.plus(days6);
        java.lang.Class<?> wildcardClass31 = days30.getClass();
        org.junit.Assert.assertNotNull(days1);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(days4);
        org.junit.Assert.assertNotNull(days5);
        org.junit.Assert.assertNotNull(days6);
        org.junit.Assert.assertNotNull(days8);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(days12);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNotNull(days15);
        org.junit.Assert.assertNotNull(days16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertNotNull(days19);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertNotNull(days22);
        org.junit.Assert.assertNotNull(days23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(durationFieldType27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(days30);
        org.junit.Assert.assertNotNull(wildcardClass31);
    }

    @Test
    public void test0091() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0091");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Days days1 = org.joda.time.Days.daysIn(readableInterval0);
        org.joda.time.ReadableInterval readableInterval2 = null;
        org.joda.time.Days days3 = org.joda.time.Days.daysIn(readableInterval2);
        int int5 = days3.getValue((int) (short) 0);
        org.joda.time.Days days6 = org.joda.time.Days.FIVE;
        org.joda.time.Days days7 = days3.minus(days6);
        org.joda.time.DurationFieldType durationFieldType8 = null;
        boolean boolean9 = days6.isSupported(durationFieldType8);
        org.joda.time.DurationFieldType durationFieldType11 = days6.getFieldType(0);
        int int12 = days1.get(durationFieldType11);
        org.joda.time.ReadableInterval readableInterval13 = null;
        org.joda.time.Days days14 = org.joda.time.Days.daysIn(readableInterval13);
        int int16 = days14.getValue((int) (short) 0);
        org.joda.time.Days days17 = org.joda.time.Days.FIVE;
        org.joda.time.Days days18 = days14.minus(days17);
        org.joda.time.DurationFieldType durationFieldType19 = null;
        int int20 = days17.get(durationFieldType19);
        org.joda.time.DurationFieldType durationFieldType21 = null;
        int int22 = days17.get(durationFieldType21);
        boolean boolean24 = days17.equals((java.lang.Object) 0L);
        boolean boolean25 = days1.isGreaterThan(days17);
        org.joda.time.PeriodType periodType26 = days17.getPeriodType();
        org.junit.Assert.assertNotNull(days1);
        org.junit.Assert.assertNotNull(days3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(days6);
        org.junit.Assert.assertNotNull(days7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(durationFieldType11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNotNull(days14);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertNotNull(days17);
        org.junit.Assert.assertNotNull(days18);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(periodType26);
    }

    @Test
    public void test0092() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0092");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Days days1 = org.joda.time.Days.daysIn(readableInterval0);
        int int3 = days1.getValue((int) (short) 0);
        org.joda.time.Days days4 = org.joda.time.Days.FIVE;
        org.joda.time.Days days5 = days1.minus(days4);
        org.joda.time.DurationFieldType durationFieldType6 = null;
        boolean boolean7 = days4.isSupported(durationFieldType6);
        org.joda.time.DurationFieldType durationFieldType9 = days4.getFieldType(0);
        org.joda.time.ReadableInterval readableInterval10 = null;
        org.joda.time.Days days11 = org.joda.time.Days.daysIn(readableInterval10);
        int int13 = days11.getValue((int) (short) 0);
        org.joda.time.Days days14 = org.joda.time.Days.FIVE;
        org.joda.time.Days days15 = days11.minus(days14);
        org.joda.time.Days days16 = null;
        org.joda.time.Days days17 = days11.minus(days16);
        org.joda.time.Days days19 = days11.minus((-1));
        org.joda.time.DurationFieldType durationFieldType20 = days11.getFieldType();
        boolean boolean21 = days4.isGreaterThan(days11);
        org.joda.time.Days days22 = org.joda.time.Days.THREE;
        org.joda.time.ReadableInterval readableInterval23 = null;
        org.joda.time.Days days24 = org.joda.time.Days.daysIn(readableInterval23);
        org.joda.time.ReadableInterval readableInterval25 = null;
        org.joda.time.Days days26 = org.joda.time.Days.daysIn(readableInterval25);
        int int28 = days26.getValue((int) (short) 0);
        org.joda.time.Days days29 = org.joda.time.Days.FIVE;
        org.joda.time.Days days30 = days26.minus(days29);
        org.joda.time.DurationFieldType durationFieldType31 = null;
        boolean boolean32 = days29.isSupported(durationFieldType31);
        org.joda.time.DurationFieldType durationFieldType34 = days29.getFieldType(0);
        int int35 = days24.get(durationFieldType34);
        org.joda.time.ReadableInterval readableInterval36 = null;
        org.joda.time.Days days37 = org.joda.time.Days.daysIn(readableInterval36);
        int int39 = days37.getValue((int) (short) 0);
        org.joda.time.ReadableInterval readableInterval40 = null;
        org.joda.time.Days days41 = org.joda.time.Days.daysIn(readableInterval40);
        int int43 = days41.getValue((int) (short) 0);
        org.joda.time.Days days44 = org.joda.time.Days.FIVE;
        org.joda.time.Days days45 = days41.minus(days44);
        int int46 = days37.compareTo((org.joda.time.base.BaseSingleFieldPeriod) days44);
        java.lang.String str47 = days37.toString();
        org.joda.time.Days days48 = null;
        boolean boolean49 = days37.isGreaterThan(days48);
        org.joda.time.Period period50 = days37.toPeriod();
        org.joda.time.Days days51 = days24.plus(days37);
        boolean boolean52 = days22.isLessThan(days37);
        org.joda.time.Days days53 = days4.minus(days22);
        java.lang.Object obj54 = null;
        boolean boolean55 = days22.equals(obj54);
        org.joda.time.Days days56 = org.joda.time.Days.MAX_VALUE;
        org.joda.time.Days days57 = days56.negated();
        org.joda.time.PeriodType periodType58 = days56.getPeriodType();
        org.joda.time.ReadableInterval readableInterval59 = null;
        org.joda.time.Days days60 = org.joda.time.Days.daysIn(readableInterval59);
        int int62 = days60.getValue((int) (short) 0);
        org.joda.time.Days days63 = org.joda.time.Days.FIVE;
        org.joda.time.Days days64 = days60.minus(days63);
        org.joda.time.DurationFieldType durationFieldType65 = null;
        int int66 = days63.get(durationFieldType65);
        org.joda.time.Days days68 = days63.dividedBy(100);
        int int69 = days56.compareTo((org.joda.time.base.BaseSingleFieldPeriod) days63);
        org.joda.time.PeriodType periodType70 = days63.getPeriodType();
        org.joda.time.Days days71 = org.joda.time.Days.TWO;
        org.joda.time.DurationFieldType durationFieldType72 = days71.getFieldType();
        int int73 = days63.get(durationFieldType72);
        int int74 = days22.get(durationFieldType72);
        org.junit.Assert.assertNotNull(days1);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(days4);
        org.junit.Assert.assertNotNull(days5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(durationFieldType9);
        org.junit.Assert.assertNotNull(days11);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(days14);
        org.junit.Assert.assertNotNull(days15);
        org.junit.Assert.assertNotNull(days17);
        org.junit.Assert.assertNotNull(days19);
        org.junit.Assert.assertNotNull(durationFieldType20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(days22);
        org.junit.Assert.assertNotNull(days24);
        org.junit.Assert.assertNotNull(days26);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertNotNull(days29);
        org.junit.Assert.assertNotNull(days30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(durationFieldType34);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertNotNull(days37);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertNotNull(days41);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0);
        org.junit.Assert.assertNotNull(days44);
        org.junit.Assert.assertNotNull(days45);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + (-1) + "'", int46 == (-1));
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "P0D" + "'", str47, "P0D");
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(period50);
        org.junit.Assert.assertNotNull(days51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(days53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(days56);
        org.junit.Assert.assertNotNull(days57);
        org.junit.Assert.assertNotNull(periodType58);
        org.junit.Assert.assertNotNull(days60);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 0 + "'", int62 == 0);
        org.junit.Assert.assertNotNull(days63);
        org.junit.Assert.assertNotNull(days64);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 0 + "'", int66 == 0);
        org.junit.Assert.assertNotNull(days68);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 1 + "'", int69 == 1);
        org.junit.Assert.assertNotNull(periodType70);
        org.junit.Assert.assertNotNull(days71);
        org.junit.Assert.assertNotNull(durationFieldType72);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 5 + "'", int73 == 5);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 3 + "'", int74 == 3);
    }

    @Test
    public void test0093() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0093");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Days days1 = org.joda.time.Days.daysIn(readableInterval0);
        org.joda.time.Days days3 = days1.plus((int) (byte) 10);
        org.joda.time.DurationFieldType durationFieldType4 = days3.getFieldType();
        org.joda.time.Days days6 = days3.plus(0);
        org.joda.time.ReadableInterval readableInterval7 = null;
        org.joda.time.Days days8 = org.joda.time.Days.daysIn(readableInterval7);
        int int10 = days8.getValue((int) (short) 0);
        org.joda.time.Days days11 = org.joda.time.Days.FIVE;
        org.joda.time.Days days12 = days8.minus(days11);
        org.joda.time.DurationFieldType durationFieldType13 = null;
        boolean boolean14 = days11.isSupported(durationFieldType13);
        org.joda.time.DurationFieldType durationFieldType16 = days11.getFieldType(0);
        org.joda.time.ReadableInterval readableInterval17 = null;
        org.joda.time.Days days18 = org.joda.time.Days.daysIn(readableInterval17);
        int int20 = days18.getValue((int) (short) 0);
        org.joda.time.Days days21 = org.joda.time.Days.FIVE;
        org.joda.time.Days days22 = days18.minus(days21);
        org.joda.time.Days days23 = null;
        org.joda.time.Days days24 = days18.minus(days23);
        org.joda.time.Days days26 = days18.minus((-1));
        org.joda.time.DurationFieldType durationFieldType27 = days18.getFieldType();
        boolean boolean28 = days11.isGreaterThan(days18);
        org.joda.time.ReadableInterval readableInterval29 = null;
        org.joda.time.Days days30 = org.joda.time.Days.daysIn(readableInterval29);
        org.joda.time.Days days32 = days30.plus((int) (byte) 10);
        org.joda.time.Days days33 = days18.plus(days32);
        int int34 = days6.compareTo((org.joda.time.base.BaseSingleFieldPeriod) days18);
        int int36 = days6.getValue((int) (byte) 0);
        org.joda.time.Days days37 = org.joda.time.Days.THREE;
        org.joda.time.ReadableInterval readableInterval38 = null;
        org.joda.time.Days days39 = org.joda.time.Days.daysIn(readableInterval38);
        org.joda.time.ReadableInterval readableInterval40 = null;
        org.joda.time.Days days41 = org.joda.time.Days.daysIn(readableInterval40);
        int int43 = days41.getValue((int) (short) 0);
        org.joda.time.Days days44 = org.joda.time.Days.FIVE;
        org.joda.time.Days days45 = days41.minus(days44);
        org.joda.time.DurationFieldType durationFieldType46 = null;
        boolean boolean47 = days44.isSupported(durationFieldType46);
        org.joda.time.DurationFieldType durationFieldType49 = days44.getFieldType(0);
        int int50 = days39.get(durationFieldType49);
        org.joda.time.ReadableInterval readableInterval51 = null;
        org.joda.time.Days days52 = org.joda.time.Days.daysIn(readableInterval51);
        int int54 = days52.getValue((int) (short) 0);
        org.joda.time.Days days55 = org.joda.time.Days.FIVE;
        org.joda.time.Days days56 = days52.minus(days55);
        org.joda.time.DurationFieldType durationFieldType57 = null;
        int int58 = days55.get(durationFieldType57);
        org.joda.time.DurationFieldType durationFieldType59 = null;
        int int60 = days55.get(durationFieldType59);
        boolean boolean62 = days55.equals((java.lang.Object) 0L);
        boolean boolean63 = days39.isGreaterThan(days55);
        org.joda.time.ReadableInterval readableInterval64 = null;
        org.joda.time.Days days65 = org.joda.time.Days.daysIn(readableInterval64);
        int int67 = days65.getValue((int) (short) 0);
        org.joda.time.Days days68 = org.joda.time.Days.FIVE;
        org.joda.time.Days days69 = days65.minus(days68);
        org.joda.time.DurationFieldType durationFieldType70 = null;
        int int71 = days68.get(durationFieldType70);
        org.joda.time.DurationFieldType durationFieldType72 = null;
        int int73 = days68.get(durationFieldType72);
        boolean boolean75 = days68.equals((java.lang.Object) 0L);
        org.joda.time.Period period76 = days68.toPeriod();
        org.joda.time.Days days77 = days39.plus(days68);
        boolean boolean78 = days37.isGreaterThan(days77);
        org.joda.time.ReadableInterval readableInterval79 = null;
        org.joda.time.Days days80 = org.joda.time.Days.daysIn(readableInterval79);
        org.joda.time.Days days82 = days80.plus((int) (byte) 10);
        org.joda.time.Days days84 = days82.dividedBy((int) 'a');
        int int85 = days77.compareTo((org.joda.time.base.BaseSingleFieldPeriod) days82);
        boolean boolean86 = days6.isLessThan(days77);
        // The following exception was thrown during execution in test generation
        try {
            int int88 = days77.getValue(3);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 3");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(days1);
        org.junit.Assert.assertNotNull(days3);
        org.junit.Assert.assertNotNull(durationFieldType4);
        org.junit.Assert.assertNotNull(days6);
        org.junit.Assert.assertNotNull(days8);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(days11);
        org.junit.Assert.assertNotNull(days12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(durationFieldType16);
        org.junit.Assert.assertNotNull(days18);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertNotNull(days21);
        org.junit.Assert.assertNotNull(days22);
        org.junit.Assert.assertNotNull(days24);
        org.junit.Assert.assertNotNull(days26);
        org.junit.Assert.assertNotNull(durationFieldType27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(days30);
        org.junit.Assert.assertNotNull(days32);
        org.junit.Assert.assertNotNull(days33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 1 + "'", int34 == 1);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 10 + "'", int36 == 10);
        org.junit.Assert.assertNotNull(days37);
        org.junit.Assert.assertNotNull(days39);
        org.junit.Assert.assertNotNull(days41);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0);
        org.junit.Assert.assertNotNull(days44);
        org.junit.Assert.assertNotNull(days45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(durationFieldType49);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 0 + "'", int50 == 0);
        org.junit.Assert.assertNotNull(days52);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 0 + "'", int54 == 0);
        org.junit.Assert.assertNotNull(days55);
        org.junit.Assert.assertNotNull(days56);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 0 + "'", int58 == 0);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 0 + "'", int60 == 0);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(days65);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 0 + "'", int67 == 0);
        org.junit.Assert.assertNotNull(days68);
        org.junit.Assert.assertNotNull(days69);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 0 + "'", int71 == 0);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 0 + "'", int73 == 0);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNotNull(period76);
        org.junit.Assert.assertNotNull(days77);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertNotNull(days80);
        org.junit.Assert.assertNotNull(days82);
        org.junit.Assert.assertNotNull(days84);
        org.junit.Assert.assertTrue("'" + int85 + "' != '" + (-1) + "'", int85 == (-1));
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
    }

    @Test
    public void test0094() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0094");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Days days1 = org.joda.time.Days.daysIn(readableInterval0);
        int int3 = days1.getValue((int) (short) 0);
        org.joda.time.Days days4 = org.joda.time.Days.FIVE;
        org.joda.time.Days days5 = days1.minus(days4);
        org.joda.time.DurationFieldType durationFieldType6 = null;
        boolean boolean7 = days4.isSupported(durationFieldType6);
        org.joda.time.DurationFieldType durationFieldType9 = days4.getFieldType(0);
        org.joda.time.ReadableInterval readableInterval10 = null;
        org.joda.time.Days days11 = org.joda.time.Days.daysIn(readableInterval10);
        int int13 = days11.getValue((int) (short) 0);
        org.joda.time.Days days14 = org.joda.time.Days.FIVE;
        org.joda.time.Days days15 = days11.minus(days14);
        org.joda.time.Days days16 = null;
        org.joda.time.Days days17 = days11.minus(days16);
        org.joda.time.Days days19 = days11.minus((-1));
        org.joda.time.DurationFieldType durationFieldType20 = days11.getFieldType();
        boolean boolean21 = days4.isGreaterThan(days11);
        org.joda.time.Days days22 = org.joda.time.Days.standardDaysIn((org.joda.time.ReadablePeriod) days11);
        java.lang.Class<?> wildcardClass23 = days22.getClass();
        org.junit.Assert.assertNotNull(days1);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(days4);
        org.junit.Assert.assertNotNull(days5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(durationFieldType9);
        org.junit.Assert.assertNotNull(days11);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(days14);
        org.junit.Assert.assertNotNull(days15);
        org.junit.Assert.assertNotNull(days17);
        org.junit.Assert.assertNotNull(days19);
        org.junit.Assert.assertNotNull(durationFieldType20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(days22);
        org.junit.Assert.assertNotNull(wildcardClass23);
    }

    @Test
    public void test0095() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0095");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Days days1 = org.joda.time.Days.daysIn(readableInterval0);
        org.joda.time.ReadableInterval readableInterval2 = null;
        org.joda.time.Days days3 = org.joda.time.Days.daysIn(readableInterval2);
        int int5 = days3.getValue((int) (short) 0);
        org.joda.time.Days days6 = org.joda.time.Days.FIVE;
        org.joda.time.Days days7 = days3.minus(days6);
        org.joda.time.DurationFieldType durationFieldType8 = null;
        boolean boolean9 = days6.isSupported(durationFieldType8);
        org.joda.time.DurationFieldType durationFieldType11 = days6.getFieldType(0);
        int int12 = days1.get(durationFieldType11);
        org.joda.time.ReadableInterval readableInterval13 = null;
        org.joda.time.Days days14 = org.joda.time.Days.daysIn(readableInterval13);
        int int16 = days14.getValue((int) (short) 0);
        org.joda.time.Days days17 = org.joda.time.Days.FIVE;
        org.joda.time.Days days18 = days14.minus(days17);
        org.joda.time.DurationFieldType durationFieldType19 = null;
        int int20 = days17.get(durationFieldType19);
        org.joda.time.DurationFieldType durationFieldType21 = null;
        int int22 = days17.get(durationFieldType21);
        boolean boolean24 = days17.equals((java.lang.Object) 0L);
        boolean boolean25 = days1.isGreaterThan(days17);
        org.joda.time.ReadableInterval readableInterval26 = null;
        org.joda.time.Days days27 = org.joda.time.Days.daysIn(readableInterval26);
        int int29 = days27.getValue((int) (short) 0);
        org.joda.time.Days days30 = org.joda.time.Days.FIVE;
        org.joda.time.Days days31 = days27.minus(days30);
        org.joda.time.DurationFieldType durationFieldType32 = null;
        int int33 = days30.get(durationFieldType32);
        org.joda.time.DurationFieldType durationFieldType34 = null;
        int int35 = days30.get(durationFieldType34);
        boolean boolean37 = days30.equals((java.lang.Object) 0L);
        org.joda.time.Period period38 = days30.toPeriod();
        org.joda.time.Days days39 = days1.plus(days30);
        org.joda.time.ReadableInterval readableInterval40 = null;
        org.joda.time.Days days41 = org.joda.time.Days.daysIn(readableInterval40);
        int int43 = days41.getValue((int) (short) 0);
        org.joda.time.Period period44 = days41.toPeriod();
        org.joda.time.Days days45 = org.joda.time.Days.standardDaysIn((org.joda.time.ReadablePeriod) days41);
        boolean boolean46 = days1.equals((java.lang.Object) days45);
        org.joda.time.Days days48 = days45.multipliedBy(0);
        org.joda.time.Days days50 = days45.multipliedBy(5);
        org.joda.time.Days days52 = days50.dividedBy(5);
        org.joda.time.ReadableInterval readableInterval53 = null;
        org.joda.time.Days days54 = org.joda.time.Days.daysIn(readableInterval53);
        int int56 = days54.getValue((int) (short) 0);
        org.joda.time.Days days57 = org.joda.time.Days.FIVE;
        org.joda.time.Days days58 = days54.minus(days57);
        org.joda.time.Days days59 = null;
        org.joda.time.Days days60 = days54.minus(days59);
        org.joda.time.Days days62 = days54.minus((-1));
        org.joda.time.DurationFieldType durationFieldType63 = days54.getFieldType();
        boolean boolean64 = days50.isSupported(durationFieldType63);
        java.lang.String str65 = days50.toString();
        org.junit.Assert.assertNotNull(days1);
        org.junit.Assert.assertNotNull(days3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(days6);
        org.junit.Assert.assertNotNull(days7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(durationFieldType11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNotNull(days14);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertNotNull(days17);
        org.junit.Assert.assertNotNull(days18);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(days27);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertNotNull(days30);
        org.junit.Assert.assertNotNull(days31);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(period38);
        org.junit.Assert.assertNotNull(days39);
        org.junit.Assert.assertNotNull(days41);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0);
        org.junit.Assert.assertNotNull(period44);
        org.junit.Assert.assertNotNull(days45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(days48);
        org.junit.Assert.assertNotNull(days50);
        org.junit.Assert.assertNotNull(days52);
        org.junit.Assert.assertNotNull(days54);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 0 + "'", int56 == 0);
        org.junit.Assert.assertNotNull(days57);
        org.junit.Assert.assertNotNull(days58);
        org.junit.Assert.assertNotNull(days60);
        org.junit.Assert.assertNotNull(days62);
        org.junit.Assert.assertNotNull(durationFieldType63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "P0D" + "'", str65, "P0D");
    }

    @Test
    public void test0096() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0096");
        org.joda.time.Days days1 = org.joda.time.Days.parseDays("P2147483647D");
        org.junit.Assert.assertNotNull(days1);
    }

    @Test
    public void test0097() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0097");
        org.joda.time.Days days0 = org.joda.time.Days.MAX_VALUE;
        org.joda.time.Days days1 = days0.negated();
        org.joda.time.Duration duration2 = days0.toStandardDuration();
        org.junit.Assert.assertNotNull(days0);
        org.junit.Assert.assertNotNull(days1);
        org.junit.Assert.assertNotNull(duration2);
    }

    @Test
    public void test0098() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0098");
        org.joda.time.Days days0 = org.joda.time.Days.MAX_VALUE;
        org.joda.time.Days days1 = days0.negated();
        org.joda.time.PeriodType periodType2 = days0.getPeriodType();
        org.joda.time.ReadableInterval readableInterval3 = null;
        org.joda.time.Days days4 = org.joda.time.Days.daysIn(readableInterval3);
        int int6 = days4.getValue((int) (short) 0);
        org.joda.time.Days days7 = org.joda.time.Days.FIVE;
        org.joda.time.Days days8 = days4.minus(days7);
        org.joda.time.DurationFieldType durationFieldType9 = null;
        int int10 = days7.get(durationFieldType9);
        org.joda.time.Days days12 = days7.dividedBy(100);
        int int13 = days0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) days7);
        org.joda.time.PeriodType periodType14 = days7.getPeriodType();
        org.joda.time.Days days16 = days7.minus(52);
        int int18 = days16.getValue(0);
        org.junit.Assert.assertNotNull(days0);
        org.junit.Assert.assertNotNull(days1);
        org.junit.Assert.assertNotNull(periodType2);
        org.junit.Assert.assertNotNull(days4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNotNull(days7);
        org.junit.Assert.assertNotNull(days8);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(days12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertNotNull(periodType14);
        org.junit.Assert.assertNotNull(days16);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-47) + "'", int18 == (-47));
    }

    @Test
    public void test0099() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0099");
        org.joda.time.Days days0 = org.joda.time.Days.THREE;
        org.joda.time.ReadableInterval readableInterval1 = null;
        org.joda.time.Days days2 = org.joda.time.Days.daysIn(readableInterval1);
        org.joda.time.ReadableInterval readableInterval3 = null;
        org.joda.time.Days days4 = org.joda.time.Days.daysIn(readableInterval3);
        int int6 = days4.getValue((int) (short) 0);
        org.joda.time.Days days7 = org.joda.time.Days.FIVE;
        org.joda.time.Days days8 = days4.minus(days7);
        org.joda.time.DurationFieldType durationFieldType9 = null;
        boolean boolean10 = days7.isSupported(durationFieldType9);
        org.joda.time.DurationFieldType durationFieldType12 = days7.getFieldType(0);
        int int13 = days2.get(durationFieldType12);
        org.joda.time.ReadableInterval readableInterval14 = null;
        org.joda.time.Days days15 = org.joda.time.Days.daysIn(readableInterval14);
        int int17 = days15.getValue((int) (short) 0);
        org.joda.time.Days days18 = org.joda.time.Days.FIVE;
        org.joda.time.Days days19 = days15.minus(days18);
        org.joda.time.DurationFieldType durationFieldType20 = null;
        int int21 = days18.get(durationFieldType20);
        org.joda.time.DurationFieldType durationFieldType22 = null;
        int int23 = days18.get(durationFieldType22);
        boolean boolean25 = days18.equals((java.lang.Object) 0L);
        boolean boolean26 = days2.isGreaterThan(days18);
        org.joda.time.ReadableInterval readableInterval27 = null;
        org.joda.time.Days days28 = org.joda.time.Days.daysIn(readableInterval27);
        int int30 = days28.getValue((int) (short) 0);
        org.joda.time.Days days31 = org.joda.time.Days.FIVE;
        org.joda.time.Days days32 = days28.minus(days31);
        org.joda.time.DurationFieldType durationFieldType33 = null;
        int int34 = days31.get(durationFieldType33);
        org.joda.time.DurationFieldType durationFieldType35 = null;
        int int36 = days31.get(durationFieldType35);
        boolean boolean38 = days31.equals((java.lang.Object) 0L);
        org.joda.time.Period period39 = days31.toPeriod();
        org.joda.time.Days days40 = days2.plus(days31);
        boolean boolean41 = days0.isGreaterThan(days40);
        org.joda.time.Days days43 = days40.dividedBy(42);
        int int44 = days40.getDays();
        org.joda.time.PeriodType periodType45 = days40.getPeriodType();
        org.junit.Assert.assertNotNull(days0);
        org.junit.Assert.assertNotNull(days2);
        org.junit.Assert.assertNotNull(days4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNotNull(days7);
        org.junit.Assert.assertNotNull(days8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(durationFieldType12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(days15);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNotNull(days18);
        org.junit.Assert.assertNotNull(days19);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(days28);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertNotNull(days31);
        org.junit.Assert.assertNotNull(days32);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(period39);
        org.junit.Assert.assertNotNull(days40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(days43);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 5 + "'", int44 == 5);
        org.junit.Assert.assertNotNull(periodType45);
    }

    @Test
    public void test0100() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0100");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Days days1 = org.joda.time.Days.daysIn(readableInterval0);
        org.joda.time.ReadableInterval readableInterval2 = null;
        org.joda.time.Days days3 = org.joda.time.Days.daysIn(readableInterval2);
        int int5 = days3.getValue((int) (short) 0);
        org.joda.time.Days days6 = org.joda.time.Days.FIVE;
        org.joda.time.Days days7 = days3.minus(days6);
        org.joda.time.DurationFieldType durationFieldType8 = null;
        boolean boolean9 = days6.isSupported(durationFieldType8);
        org.joda.time.DurationFieldType durationFieldType11 = days6.getFieldType(0);
        int int12 = days1.get(durationFieldType11);
        org.joda.time.ReadableInterval readableInterval13 = null;
        org.joda.time.Days days14 = org.joda.time.Days.daysIn(readableInterval13);
        int int16 = days14.getValue((int) (short) 0);
        org.joda.time.ReadableInterval readableInterval17 = null;
        org.joda.time.Days days18 = org.joda.time.Days.daysIn(readableInterval17);
        int int20 = days18.getValue((int) (short) 0);
        org.joda.time.Days days21 = org.joda.time.Days.FIVE;
        org.joda.time.Days days22 = days18.minus(days21);
        int int23 = days14.compareTo((org.joda.time.base.BaseSingleFieldPeriod) days21);
        java.lang.String str24 = days14.toString();
        org.joda.time.Days days25 = null;
        boolean boolean26 = days14.isGreaterThan(days25);
        org.joda.time.Period period27 = days14.toPeriod();
        org.joda.time.Days days28 = days1.plus(days14);
        // The following exception was thrown during execution in test generation
        try {
            int int30 = days28.getValue((int) ' ');
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 32");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(days1);
        org.junit.Assert.assertNotNull(days3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(days6);
        org.junit.Assert.assertNotNull(days7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(durationFieldType11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNotNull(days14);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertNotNull(days18);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertNotNull(days21);
        org.junit.Assert.assertNotNull(days22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "P0D" + "'", str24, "P0D");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(period27);
        org.junit.Assert.assertNotNull(days28);
    }

    @Test
    public void test0101() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0101");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Days days1 = org.joda.time.Days.daysIn(readableInterval0);
        int int3 = days1.getValue((int) (short) 0);
        org.joda.time.Days days4 = org.joda.time.Days.FIVE;
        org.joda.time.Days days5 = days1.minus(days4);
        org.joda.time.Days days6 = null;
        org.joda.time.Days days7 = days1.minus(days6);
        org.joda.time.Days days9 = days1.minus((-1));
        org.joda.time.ReadableInterval readableInterval10 = null;
        org.joda.time.Days days11 = org.joda.time.Days.daysIn(readableInterval10);
        int int13 = days11.getValue((int) (short) 0);
        org.joda.time.Days days14 = org.joda.time.Days.FIVE;
        org.joda.time.Days days15 = days11.minus(days14);
        org.joda.time.Days days16 = null;
        org.joda.time.Days days17 = days11.minus(days16);
        boolean boolean18 = days9.isGreaterThan(days17);
        org.joda.time.ReadableInterval readableInterval19 = null;
        org.joda.time.Days days20 = org.joda.time.Days.daysIn(readableInterval19);
        org.joda.time.Days days22 = days20.plus((int) (byte) 10);
        org.joda.time.Days days24 = days22.dividedBy((int) 'a');
        int int25 = days9.compareTo((org.joda.time.base.BaseSingleFieldPeriod) days22);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.DurationFieldType durationFieldType27 = days22.getFieldType(42);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 42");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(days1);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(days4);
        org.junit.Assert.assertNotNull(days5);
        org.junit.Assert.assertNotNull(days7);
        org.junit.Assert.assertNotNull(days9);
        org.junit.Assert.assertNotNull(days11);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(days14);
        org.junit.Assert.assertNotNull(days15);
        org.junit.Assert.assertNotNull(days17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(days20);
        org.junit.Assert.assertNotNull(days22);
        org.junit.Assert.assertNotNull(days24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
    }

    @Test
    public void test0102() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0102");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Days days1 = org.joda.time.Days.daysIn(readableInterval0);
        int int3 = days1.getValue((int) (short) 0);
        org.joda.time.Days days4 = org.joda.time.Days.FIVE;
        org.joda.time.Days days5 = days1.minus(days4);
        org.joda.time.Days days6 = null;
        org.joda.time.Days days7 = days1.minus(days6);
        org.joda.time.Days days9 = days7.minus(100);
        org.joda.time.ReadableInterval readableInterval10 = null;
        org.joda.time.Days days11 = org.joda.time.Days.daysIn(readableInterval10);
        int int13 = days11.getValue((int) (short) 0);
        org.joda.time.Days days14 = org.joda.time.Days.FIVE;
        org.joda.time.Days days15 = days11.minus(days14);
        org.joda.time.Days days16 = null;
        org.joda.time.Days days17 = days11.minus(days16);
        org.joda.time.Days days19 = days11.minus((-1));
        org.joda.time.Days days20 = days7.plus(days11);
        org.joda.time.ReadableInterval readableInterval21 = null;
        org.joda.time.Days days22 = org.joda.time.Days.daysIn(readableInterval21);
        int int24 = days22.getValue((int) (short) 0);
        org.joda.time.Days days25 = org.joda.time.Days.FIVE;
        org.joda.time.Days days26 = days22.minus(days25);
        org.joda.time.DurationFieldType durationFieldType27 = null;
        boolean boolean28 = days25.isSupported(durationFieldType27);
        org.joda.time.DurationFieldType durationFieldType30 = days25.getFieldType(0);
        org.joda.time.ReadableInterval readableInterval31 = null;
        org.joda.time.Days days32 = org.joda.time.Days.daysIn(readableInterval31);
        int int34 = days32.getValue((int) (short) 0);
        org.joda.time.Days days35 = org.joda.time.Days.FIVE;
        org.joda.time.Days days36 = days32.minus(days35);
        org.joda.time.Days days37 = null;
        org.joda.time.Days days38 = days32.minus(days37);
        org.joda.time.Days days40 = days32.minus((-1));
        org.joda.time.DurationFieldType durationFieldType41 = days32.getFieldType();
        boolean boolean42 = days25.isGreaterThan(days32);
        org.joda.time.ReadableInterval readableInterval43 = null;
        org.joda.time.Days days44 = org.joda.time.Days.daysIn(readableInterval43);
        org.joda.time.Days days46 = days44.plus((int) (byte) 10);
        org.joda.time.Days days47 = days32.plus(days46);
        org.joda.time.ReadableInterval readableInterval48 = null;
        org.joda.time.Days days49 = org.joda.time.Days.daysIn(readableInterval48);
        int int51 = days49.getValue((int) (short) 0);
        org.joda.time.Days days52 = org.joda.time.Days.FIVE;
        org.joda.time.Days days53 = days49.minus(days52);
        org.joda.time.Days days54 = null;
        org.joda.time.Days days55 = days49.minus(days54);
        org.joda.time.Duration duration56 = days49.toStandardDuration();
        org.joda.time.Days days57 = days47.minus(days49);
        org.joda.time.Days days59 = days49.multipliedBy(5);
        org.joda.time.ReadableInterval readableInterval60 = null;
        org.joda.time.Days days61 = org.joda.time.Days.daysIn(readableInterval60);
        int int63 = days61.getValue((int) (short) 0);
        org.joda.time.Days days64 = org.joda.time.Days.FIVE;
        org.joda.time.Days days65 = days61.minus(days64);
        org.joda.time.Days days66 = null;
        org.joda.time.Days days67 = days61.minus(days66);
        org.joda.time.Duration duration68 = days61.toStandardDuration();
        org.joda.time.DurationFieldType durationFieldType69 = days61.getFieldType();
        boolean boolean70 = days59.isSupported(durationFieldType69);
        boolean boolean71 = days20.isSupported(durationFieldType69);
        org.junit.Assert.assertNotNull(days1);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(days4);
        org.junit.Assert.assertNotNull(days5);
        org.junit.Assert.assertNotNull(days7);
        org.junit.Assert.assertNotNull(days9);
        org.junit.Assert.assertNotNull(days11);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(days14);
        org.junit.Assert.assertNotNull(days15);
        org.junit.Assert.assertNotNull(days17);
        org.junit.Assert.assertNotNull(days19);
        org.junit.Assert.assertNotNull(days20);
        org.junit.Assert.assertNotNull(days22);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertNotNull(days25);
        org.junit.Assert.assertNotNull(days26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(durationFieldType30);
        org.junit.Assert.assertNotNull(days32);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertNotNull(days35);
        org.junit.Assert.assertNotNull(days36);
        org.junit.Assert.assertNotNull(days38);
        org.junit.Assert.assertNotNull(days40);
        org.junit.Assert.assertNotNull(durationFieldType41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(days44);
        org.junit.Assert.assertNotNull(days46);
        org.junit.Assert.assertNotNull(days47);
        org.junit.Assert.assertNotNull(days49);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 0 + "'", int51 == 0);
        org.junit.Assert.assertNotNull(days52);
        org.junit.Assert.assertNotNull(days53);
        org.junit.Assert.assertNotNull(days55);
        org.junit.Assert.assertNotNull(duration56);
        org.junit.Assert.assertNotNull(days57);
        org.junit.Assert.assertNotNull(days59);
        org.junit.Assert.assertNotNull(days61);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 0 + "'", int63 == 0);
        org.junit.Assert.assertNotNull(days64);
        org.junit.Assert.assertNotNull(days65);
        org.junit.Assert.assertNotNull(days67);
        org.junit.Assert.assertNotNull(duration68);
        org.junit.Assert.assertNotNull(durationFieldType69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
    }

    @Test
    public void test0103() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0103");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Days days1 = org.joda.time.Days.daysIn(readableInterval0);
        int int3 = days1.getValue((int) (short) 0);
        org.joda.time.Days days4 = org.joda.time.Days.FIVE;
        org.joda.time.Days days5 = days1.minus(days4);
        org.joda.time.ReadableInterval readableInterval6 = null;
        org.joda.time.Days days7 = org.joda.time.Days.daysIn(readableInterval6);
        int int9 = days7.getValue((int) (short) 0);
        int int10 = days1.compareTo((org.joda.time.base.BaseSingleFieldPeriod) days7);
        org.joda.time.ReadableInterval readableInterval11 = null;
        org.joda.time.Days days12 = org.joda.time.Days.daysIn(readableInterval11);
        int int14 = days12.getValue((int) (short) 0);
        org.joda.time.Days days15 = org.joda.time.Days.FIVE;
        org.joda.time.Days days16 = days12.minus(days15);
        org.joda.time.DurationFieldType durationFieldType17 = null;
        int int18 = days15.get(durationFieldType17);
        org.joda.time.DurationFieldType durationFieldType19 = null;
        int int20 = days15.get(durationFieldType19);
        boolean boolean22 = days15.equals((java.lang.Object) false);
        boolean boolean23 = days7.equals((java.lang.Object) days15);
        org.joda.time.ReadableInterval readableInterval24 = null;
        org.joda.time.Days days25 = org.joda.time.Days.daysIn(readableInterval24);
        int int27 = days25.getValue((int) (short) 0);
        org.joda.time.Days days28 = org.joda.time.Days.FIVE;
        org.joda.time.Days days29 = days25.minus(days28);
        org.joda.time.Days days30 = null;
        org.joda.time.Days days31 = days25.minus(days30);
        org.joda.time.Days days33 = days25.minus((-1));
        int int34 = days25.size();
        org.joda.time.Days days35 = days15.minus(days25);
        org.joda.time.ReadableInterval readableInterval36 = null;
        org.joda.time.Days days37 = org.joda.time.Days.daysIn(readableInterval36);
        org.joda.time.ReadableInterval readableInterval38 = null;
        org.joda.time.Days days39 = org.joda.time.Days.daysIn(readableInterval38);
        int int41 = days39.getValue((int) (short) 0);
        org.joda.time.Days days42 = org.joda.time.Days.FIVE;
        org.joda.time.Days days43 = days39.minus(days42);
        org.joda.time.DurationFieldType durationFieldType44 = null;
        boolean boolean45 = days42.isSupported(durationFieldType44);
        org.joda.time.DurationFieldType durationFieldType47 = days42.getFieldType(0);
        int int48 = days37.get(durationFieldType47);
        org.joda.time.ReadableInterval readableInterval49 = null;
        org.joda.time.Days days50 = org.joda.time.Days.daysIn(readableInterval49);
        int int52 = days50.getValue((int) (short) 0);
        org.joda.time.Days days53 = org.joda.time.Days.FIVE;
        org.joda.time.Days days54 = days50.minus(days53);
        org.joda.time.DurationFieldType durationFieldType55 = null;
        int int56 = days53.get(durationFieldType55);
        org.joda.time.DurationFieldType durationFieldType57 = null;
        int int58 = days53.get(durationFieldType57);
        boolean boolean60 = days53.equals((java.lang.Object) 0L);
        boolean boolean61 = days37.isGreaterThan(days53);
        org.joda.time.ReadableInterval readableInterval62 = null;
        org.joda.time.Days days63 = org.joda.time.Days.daysIn(readableInterval62);
        int int65 = days63.getValue((int) (short) 0);
        org.joda.time.Days days66 = org.joda.time.Days.FIVE;
        org.joda.time.Days days67 = days63.minus(days66);
        org.joda.time.DurationFieldType durationFieldType68 = null;
        int int69 = days66.get(durationFieldType68);
        org.joda.time.DurationFieldType durationFieldType70 = null;
        int int71 = days66.get(durationFieldType70);
        boolean boolean73 = days66.equals((java.lang.Object) 0L);
        org.joda.time.Period period74 = days66.toPeriod();
        org.joda.time.Days days75 = days37.plus(days66);
        org.joda.time.ReadableInterval readableInterval76 = null;
        org.joda.time.Days days77 = org.joda.time.Days.daysIn(readableInterval76);
        int int79 = days77.getValue((int) (short) 0);
        org.joda.time.Period period80 = days77.toPeriod();
        org.joda.time.Days days81 = org.joda.time.Days.standardDaysIn((org.joda.time.ReadablePeriod) days77);
        boolean boolean82 = days37.equals((java.lang.Object) days81);
        boolean boolean83 = days35.isLessThan(days37);
        int int84 = days37.size();
        org.junit.Assert.assertNotNull(days1);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(days4);
        org.junit.Assert.assertNotNull(days5);
        org.junit.Assert.assertNotNull(days7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(days12);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNotNull(days15);
        org.junit.Assert.assertNotNull(days16);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(days25);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertNotNull(days28);
        org.junit.Assert.assertNotNull(days29);
        org.junit.Assert.assertNotNull(days31);
        org.junit.Assert.assertNotNull(days33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 1 + "'", int34 == 1);
        org.junit.Assert.assertNotNull(days35);
        org.junit.Assert.assertNotNull(days37);
        org.junit.Assert.assertNotNull(days39);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0);
        org.junit.Assert.assertNotNull(days42);
        org.junit.Assert.assertNotNull(days43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(durationFieldType47);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 0 + "'", int48 == 0);
        org.junit.Assert.assertNotNull(days50);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 0 + "'", int52 == 0);
        org.junit.Assert.assertNotNull(days53);
        org.junit.Assert.assertNotNull(days54);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 0 + "'", int56 == 0);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 0 + "'", int58 == 0);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(days63);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 0 + "'", int65 == 0);
        org.junit.Assert.assertNotNull(days66);
        org.junit.Assert.assertNotNull(days67);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 0 + "'", int69 == 0);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 0 + "'", int71 == 0);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(period74);
        org.junit.Assert.assertNotNull(days75);
        org.junit.Assert.assertNotNull(days77);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + 0 + "'", int79 == 0);
        org.junit.Assert.assertNotNull(period80);
        org.junit.Assert.assertNotNull(days81);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertTrue("'" + int84 + "' != '" + 1 + "'", int84 == 1);
    }

    @Test
    public void test0104() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0104");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Days days1 = org.joda.time.Days.daysIn(readableInterval0);
        int int3 = days1.getValue((int) (short) 0);
        org.joda.time.Days days4 = org.joda.time.Days.FIVE;
        org.joda.time.Days days5 = days1.minus(days4);
        org.joda.time.DurationFieldType durationFieldType6 = null;
        boolean boolean7 = days4.isSupported(durationFieldType6);
        org.joda.time.DurationFieldType durationFieldType9 = days4.getFieldType(0);
        org.joda.time.Period period10 = days4.toPeriod();
        int int11 = days4.getDays();
        org.junit.Assert.assertNotNull(days1);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(days4);
        org.junit.Assert.assertNotNull(days5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(durationFieldType9);
        org.junit.Assert.assertNotNull(period10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 5 + "'", int11 == 5);
    }

    @Test
    public void test0105() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0105");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Days days1 = org.joda.time.Days.daysIn(readableInterval0);
        int int3 = days1.getValue((int) (short) 0);
        org.joda.time.Days days4 = org.joda.time.Days.FIVE;
        org.joda.time.Days days5 = days1.minus(days4);
        org.joda.time.Days days6 = null;
        org.joda.time.Days days7 = days1.minus(days6);
        org.joda.time.ReadableInterval readableInterval8 = null;
        org.joda.time.Days days9 = org.joda.time.Days.daysIn(readableInterval8);
        int int11 = days9.getValue((int) (short) 0);
        org.joda.time.Days days12 = org.joda.time.Days.FIVE;
        org.joda.time.Days days13 = days9.minus(days12);
        org.joda.time.DurationFieldType durationFieldType14 = null;
        int int15 = days12.get(durationFieldType14);
        org.joda.time.DurationFieldType durationFieldType16 = null;
        int int17 = days12.get(durationFieldType16);
        boolean boolean19 = days12.equals((java.lang.Object) 0L);
        int int20 = days1.compareTo((org.joda.time.base.BaseSingleFieldPeriod) days12);
        org.joda.time.Days days22 = days1.minus(52);
        org.joda.time.Period period23 = days1.toPeriod();
        org.joda.time.Days days25 = days1.multipliedBy(1);
        // The following exception was thrown during execution in test generation
        try {
            int int27 = days25.getValue((int) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: -1");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(days1);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(days4);
        org.junit.Assert.assertNotNull(days5);
        org.junit.Assert.assertNotNull(days7);
        org.junit.Assert.assertNotNull(days9);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNotNull(days12);
        org.junit.Assert.assertNotNull(days13);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
        org.junit.Assert.assertNotNull(days22);
        org.junit.Assert.assertNotNull(period23);
        org.junit.Assert.assertNotNull(days25);
    }

    @Test
    public void test0106() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0106");
        org.joda.time.Days days1 = org.joda.time.Days.parseDays("P485D");
        org.joda.time.ReadableInterval readableInterval2 = null;
        org.joda.time.Days days3 = org.joda.time.Days.daysIn(readableInterval2);
        int int5 = days3.getValue((int) (short) 0);
        org.joda.time.Days days6 = org.joda.time.Days.FIVE;
        org.joda.time.Days days7 = days3.minus(days6);
        org.joda.time.Days days9 = days3.plus((int) (byte) 0);
        boolean boolean10 = days1.isGreaterThan(days3);
        // The following exception was thrown during execution in test generation
        try {
            int int12 = days1.getValue((int) '4');
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 52");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(days1);
        org.junit.Assert.assertNotNull(days3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(days6);
        org.junit.Assert.assertNotNull(days7);
        org.junit.Assert.assertNotNull(days9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
    }

    @Test
    public void test0107() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0107");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Days days1 = org.joda.time.Days.daysIn(readableInterval0);
        org.joda.time.ReadableInterval readableInterval2 = null;
        org.joda.time.Days days3 = org.joda.time.Days.daysIn(readableInterval2);
        int int5 = days3.getValue((int) (short) 0);
        org.joda.time.Days days6 = org.joda.time.Days.FIVE;
        org.joda.time.Days days7 = days3.minus(days6);
        org.joda.time.DurationFieldType durationFieldType8 = null;
        boolean boolean9 = days6.isSupported(durationFieldType8);
        org.joda.time.DurationFieldType durationFieldType11 = days6.getFieldType(0);
        int int12 = days1.get(durationFieldType11);
        org.joda.time.ReadableInterval readableInterval13 = null;
        org.joda.time.Days days14 = org.joda.time.Days.daysIn(readableInterval13);
        int int16 = days14.getValue((int) (short) 0);
        org.joda.time.Days days17 = org.joda.time.Days.FIVE;
        org.joda.time.Days days18 = days14.minus(days17);
        org.joda.time.DurationFieldType durationFieldType19 = null;
        int int20 = days17.get(durationFieldType19);
        org.joda.time.DurationFieldType durationFieldType21 = null;
        int int22 = days17.get(durationFieldType21);
        boolean boolean24 = days17.equals((java.lang.Object) 0L);
        boolean boolean25 = days1.isGreaterThan(days17);
        org.joda.time.ReadableInterval readableInterval26 = null;
        org.joda.time.Days days27 = org.joda.time.Days.daysIn(readableInterval26);
        int int29 = days27.getValue((int) (short) 0);
        org.joda.time.Days days30 = org.joda.time.Days.FIVE;
        org.joda.time.Days days31 = days27.minus(days30);
        org.joda.time.DurationFieldType durationFieldType32 = null;
        int int33 = days30.get(durationFieldType32);
        org.joda.time.DurationFieldType durationFieldType34 = null;
        int int35 = days30.get(durationFieldType34);
        boolean boolean37 = days30.equals((java.lang.Object) 0L);
        org.joda.time.Period period38 = days30.toPeriod();
        org.joda.time.Days days39 = days1.plus(days30);
        org.joda.time.ReadableInterval readableInterval40 = null;
        org.joda.time.Days days41 = org.joda.time.Days.daysIn(readableInterval40);
        int int43 = days41.getValue((int) (short) 0);
        org.joda.time.Days days44 = org.joda.time.Days.FIVE;
        org.joda.time.Days days45 = days41.minus(days44);
        org.joda.time.DurationFieldType durationFieldType46 = null;
        int int47 = days44.get(durationFieldType46);
        boolean boolean48 = days39.isGreaterThan(days44);
        int int49 = days44.size();
        org.joda.time.Days days50 = org.joda.time.Days.MAX_VALUE;
        org.joda.time.Days days51 = days50.negated();
        org.joda.time.PeriodType periodType52 = days50.getPeriodType();
        org.joda.time.ReadableInterval readableInterval53 = null;
        org.joda.time.Days days54 = org.joda.time.Days.daysIn(readableInterval53);
        int int56 = days54.getValue((int) (short) 0);
        org.joda.time.Days days57 = org.joda.time.Days.FIVE;
        org.joda.time.Days days58 = days54.minus(days57);
        org.joda.time.DurationFieldType durationFieldType59 = null;
        int int60 = days57.get(durationFieldType59);
        org.joda.time.Days days62 = days57.dividedBy(100);
        int int63 = days50.compareTo((org.joda.time.base.BaseSingleFieldPeriod) days57);
        org.joda.time.PeriodType periodType64 = days57.getPeriodType();
        org.joda.time.Days days66 = days57.minus(52);
        java.lang.String str67 = days66.toString();
        boolean boolean68 = days44.isGreaterThan(days66);
        org.joda.time.MutablePeriod mutablePeriod69 = days44.toMutablePeriod();
        org.joda.time.Period period70 = days44.toPeriod();
        org.junit.Assert.assertNotNull(days1);
        org.junit.Assert.assertNotNull(days3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(days6);
        org.junit.Assert.assertNotNull(days7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(durationFieldType11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNotNull(days14);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertNotNull(days17);
        org.junit.Assert.assertNotNull(days18);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(days27);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertNotNull(days30);
        org.junit.Assert.assertNotNull(days31);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(period38);
        org.junit.Assert.assertNotNull(days39);
        org.junit.Assert.assertNotNull(days41);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0);
        org.junit.Assert.assertNotNull(days44);
        org.junit.Assert.assertNotNull(days45);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 0 + "'", int47 == 0);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 1 + "'", int49 == 1);
        org.junit.Assert.assertNotNull(days50);
        org.junit.Assert.assertNotNull(days51);
        org.junit.Assert.assertNotNull(periodType52);
        org.junit.Assert.assertNotNull(days54);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 0 + "'", int56 == 0);
        org.junit.Assert.assertNotNull(days57);
        org.junit.Assert.assertNotNull(days58);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 0 + "'", int60 == 0);
        org.junit.Assert.assertNotNull(days62);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 1 + "'", int63 == 1);
        org.junit.Assert.assertNotNull(periodType64);
        org.junit.Assert.assertNotNull(days66);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "P-47D" + "'", str67, "P-47D");
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertNotNull(mutablePeriod69);
        org.junit.Assert.assertNotNull(period70);
    }

    @Test
    public void test0108() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0108");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Days days1 = org.joda.time.Days.daysIn(readableInterval0);
        int int3 = days1.getValue((int) (short) 0);
        org.joda.time.ReadableInterval readableInterval4 = null;
        org.joda.time.Days days5 = org.joda.time.Days.daysIn(readableInterval4);
        int int7 = days5.getValue((int) (short) 0);
        org.joda.time.Days days8 = org.joda.time.Days.FIVE;
        org.joda.time.Days days9 = days5.minus(days8);
        int int10 = days1.compareTo((org.joda.time.base.BaseSingleFieldPeriod) days8);
        java.lang.String str11 = days1.toString();
        org.joda.time.Days days13 = days1.plus((int) '4');
        org.joda.time.PeriodType periodType14 = days13.getPeriodType();
        int int15 = days13.getDays();
        org.joda.time.Days days17 = days13.minus((int) ' ');
        org.joda.time.ReadableInterval readableInterval18 = null;
        org.joda.time.Days days19 = org.joda.time.Days.daysIn(readableInterval18);
        org.joda.time.Days days21 = days19.plus((int) (byte) 10);
        org.joda.time.Days days23 = days21.dividedBy((int) 'a');
        org.joda.time.Days days25 = days21.dividedBy(5);
        org.joda.time.Days days27 = days21.plus((int) (byte) -1);
        org.joda.time.Days days28 = days13.plus(days21);
        org.joda.time.base.BaseSingleFieldPeriod baseSingleFieldPeriod29 = null;
        // The following exception was thrown during execution in test generation
        try {
            int int30 = days21.compareTo(baseSingleFieldPeriod29);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(days1);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(days5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(days8);
        org.junit.Assert.assertNotNull(days9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "P0D" + "'", str11, "P0D");
        org.junit.Assert.assertNotNull(days13);
        org.junit.Assert.assertNotNull(periodType14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 52 + "'", int15 == 52);
        org.junit.Assert.assertNotNull(days17);
        org.junit.Assert.assertNotNull(days19);
        org.junit.Assert.assertNotNull(days21);
        org.junit.Assert.assertNotNull(days23);
        org.junit.Assert.assertNotNull(days25);
        org.junit.Assert.assertNotNull(days27);
        org.junit.Assert.assertNotNull(days28);
    }

    @Test
    public void test0109() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0109");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Days days1 = org.joda.time.Days.daysIn(readableInterval0);
        org.joda.time.Days days3 = days1.plus((int) (byte) 10);
        org.joda.time.MutablePeriod mutablePeriod4 = days1.toMutablePeriod();
        org.joda.time.Days days6 = days1.plus((int) (short) -1);
        java.lang.Class<?> wildcardClass7 = days6.getClass();
        org.junit.Assert.assertNotNull(days1);
        org.junit.Assert.assertNotNull(days3);
        org.junit.Assert.assertNotNull(mutablePeriod4);
        org.junit.Assert.assertNotNull(days6);
        org.junit.Assert.assertNotNull(wildcardClass7);
    }

    @Test
    public void test0110() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0110");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Days days1 = org.joda.time.Days.daysIn(readableInterval0);
        int int3 = days1.getValue((int) (short) 0);
        org.joda.time.Period period4 = days1.toPeriod();
        org.joda.time.Days days5 = org.joda.time.Days.standardDaysIn((org.joda.time.ReadablePeriod) days1);
        org.joda.time.Duration duration6 = days1.toStandardDuration();
        org.joda.time.DurationFieldType durationFieldType8 = days1.getFieldType((int) (short) 0);
        org.joda.time.PeriodType periodType9 = days1.getPeriodType();
        org.junit.Assert.assertNotNull(days1);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(days5);
        org.junit.Assert.assertNotNull(duration6);
        org.junit.Assert.assertNotNull(durationFieldType8);
        org.junit.Assert.assertNotNull(periodType9);
    }

    @Test
    public void test0111() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0111");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Days days1 = org.joda.time.Days.daysIn(readableInterval0);
        org.joda.time.Days days3 = days1.plus((int) (byte) 10);
        org.joda.time.DurationFieldType durationFieldType4 = days3.getFieldType();
        org.joda.time.Days days6 = days3.plus(0);
        org.joda.time.ReadableInterval readableInterval7 = null;
        org.joda.time.Days days8 = org.joda.time.Days.daysIn(readableInterval7);
        int int10 = days8.getValue((int) (short) 0);
        org.joda.time.Days days11 = org.joda.time.Days.FIVE;
        org.joda.time.Days days12 = days8.minus(days11);
        org.joda.time.DurationFieldType durationFieldType13 = null;
        boolean boolean14 = days11.isSupported(durationFieldType13);
        org.joda.time.DurationFieldType durationFieldType16 = days11.getFieldType(0);
        org.joda.time.ReadableInterval readableInterval17 = null;
        org.joda.time.Days days18 = org.joda.time.Days.daysIn(readableInterval17);
        int int20 = days18.getValue((int) (short) 0);
        org.joda.time.Days days21 = org.joda.time.Days.FIVE;
        org.joda.time.Days days22 = days18.minus(days21);
        org.joda.time.Days days23 = null;
        org.joda.time.Days days24 = days18.minus(days23);
        org.joda.time.Days days26 = days18.minus((-1));
        org.joda.time.DurationFieldType durationFieldType27 = days18.getFieldType();
        boolean boolean28 = days11.isGreaterThan(days18);
        org.joda.time.ReadableInterval readableInterval29 = null;
        org.joda.time.Days days30 = org.joda.time.Days.daysIn(readableInterval29);
        org.joda.time.Days days32 = days30.plus((int) (byte) 10);
        org.joda.time.Days days33 = days18.plus(days32);
        int int34 = days6.compareTo((org.joda.time.base.BaseSingleFieldPeriod) days18);
        java.lang.Class<?> wildcardClass35 = days18.getClass();
        org.junit.Assert.assertNotNull(days1);
        org.junit.Assert.assertNotNull(days3);
        org.junit.Assert.assertNotNull(durationFieldType4);
        org.junit.Assert.assertNotNull(days6);
        org.junit.Assert.assertNotNull(days8);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(days11);
        org.junit.Assert.assertNotNull(days12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(durationFieldType16);
        org.junit.Assert.assertNotNull(days18);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertNotNull(days21);
        org.junit.Assert.assertNotNull(days22);
        org.junit.Assert.assertNotNull(days24);
        org.junit.Assert.assertNotNull(days26);
        org.junit.Assert.assertNotNull(durationFieldType27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(days30);
        org.junit.Assert.assertNotNull(days32);
        org.junit.Assert.assertNotNull(days33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 1 + "'", int34 == 1);
        org.junit.Assert.assertNotNull(wildcardClass35);
    }

    @Test
    public void test0112() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0112");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Days days1 = org.joda.time.Days.daysIn(readableInterval0);
        org.joda.time.Days days3 = days1.plus((int) (byte) 10);
        org.joda.time.Days days5 = days3.dividedBy((int) 'a');
        org.joda.time.Days days7 = days3.dividedBy(5);
        org.joda.time.Days days9 = days3.plus((int) (byte) -1);
        org.joda.time.Days days11 = days3.minus((int) (byte) 100);
        org.joda.time.Days days12 = days11.negated();
        org.joda.time.Days days14 = days12.multipliedBy((int) 'a');
        org.joda.time.Duration duration15 = days14.toStandardDuration();
        java.lang.Class<?> wildcardClass16 = duration15.getClass();
        org.junit.Assert.assertNotNull(days1);
        org.junit.Assert.assertNotNull(days3);
        org.junit.Assert.assertNotNull(days5);
        org.junit.Assert.assertNotNull(days7);
        org.junit.Assert.assertNotNull(days9);
        org.junit.Assert.assertNotNull(days11);
        org.junit.Assert.assertNotNull(days12);
        org.junit.Assert.assertNotNull(days14);
        org.junit.Assert.assertNotNull(duration15);
        org.junit.Assert.assertNotNull(wildcardClass16);
    }

    @Test
    public void test0113() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0113");
        org.joda.time.Days days0 = org.joda.time.Days.FIVE;
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.DurationFieldType durationFieldType2 = days0.getFieldType(2147483647);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 2147483647");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(days0);
    }

    @Test
    public void test0114() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0114");
        org.joda.time.Days days1 = org.joda.time.Days.parseDays("P7D");
        org.joda.time.ReadableInterval readableInterval2 = null;
        org.joda.time.Days days3 = org.joda.time.Days.daysIn(readableInterval2);
        int int5 = days3.getValue((int) (short) 0);
        org.joda.time.ReadableInterval readableInterval6 = null;
        org.joda.time.Days days7 = org.joda.time.Days.daysIn(readableInterval6);
        int int9 = days7.getValue((int) (short) 0);
        org.joda.time.Days days10 = org.joda.time.Days.FIVE;
        org.joda.time.Days days11 = days7.minus(days10);
        int int12 = days3.compareTo((org.joda.time.base.BaseSingleFieldPeriod) days10);
        java.lang.String str13 = days3.toString();
        org.joda.time.Days days15 = days3.plus((int) '4');
        boolean boolean16 = days1.equals((java.lang.Object) '4');
        org.junit.Assert.assertNotNull(days1);
        org.junit.Assert.assertNotNull(days3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(days7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNotNull(days10);
        org.junit.Assert.assertNotNull(days11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "P0D" + "'", str13, "P0D");
        org.junit.Assert.assertNotNull(days15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
    }

    @Test
    public void test0115() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0115");
        org.joda.time.Days days0 = org.joda.time.Days.MAX_VALUE;
        org.joda.time.Days days1 = days0.negated();
        org.joda.time.PeriodType periodType2 = days0.getPeriodType();
        org.joda.time.ReadableInterval readableInterval3 = null;
        org.joda.time.Days days4 = org.joda.time.Days.daysIn(readableInterval3);
        int int6 = days4.getValue((int) (short) 0);
        org.joda.time.Days days7 = org.joda.time.Days.FIVE;
        org.joda.time.Days days8 = days4.minus(days7);
        org.joda.time.DurationFieldType durationFieldType9 = null;
        int int10 = days7.get(durationFieldType9);
        org.joda.time.Days days12 = days7.dividedBy(100);
        int int13 = days0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) days7);
        int int14 = days0.getDays();
        java.lang.String str15 = days0.toString();
        java.lang.String str16 = days0.toString();
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Days days18 = days0.multipliedBy(10);
            org.junit.Assert.fail("Expected exception of type java.lang.ArithmeticException; message: Multiplication overflows an int: 2147483647 * 10");
        } catch (java.lang.ArithmeticException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(days0);
        org.junit.Assert.assertNotNull(days1);
        org.junit.Assert.assertNotNull(periodType2);
        org.junit.Assert.assertNotNull(days4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNotNull(days7);
        org.junit.Assert.assertNotNull(days8);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(days12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 2147483647 + "'", int14 == 2147483647);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "P2147483647D" + "'", str15, "P2147483647D");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "P2147483647D" + "'", str16, "P2147483647D");
    }

    @Test
    public void test0116() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0116");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Days days1 = org.joda.time.Days.daysIn(readableInterval0);
        int int3 = days1.getValue((int) (short) 0);
        org.joda.time.Days days4 = org.joda.time.Days.FIVE;
        org.joda.time.Days days5 = days1.minus(days4);
        java.lang.Class<?> wildcardClass6 = days4.getClass();
        org.junit.Assert.assertNotNull(days1);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(days4);
        org.junit.Assert.assertNotNull(days5);
        org.junit.Assert.assertNotNull(wildcardClass6);
    }

    @Test
    public void test0117() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0117");
        org.joda.time.Days days0 = org.joda.time.Days.MAX_VALUE;
        org.joda.time.Days days1 = days0.negated();
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Hours hours2 = days0.toStandardHours();
            org.junit.Assert.fail("Expected exception of type java.lang.ArithmeticException; message: Multiplication overflows an int: 2147483647 * 24");
        } catch (java.lang.ArithmeticException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(days0);
        org.junit.Assert.assertNotNull(days1);
    }

    @Test
    public void test0118() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0118");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Days days1 = org.joda.time.Days.daysIn(readableInterval0);
        org.joda.time.Days days3 = days1.plus((int) (byte) 10);
        org.joda.time.Days days5 = days3.dividedBy((int) 'a');
        org.joda.time.Days days7 = days3.dividedBy(5);
        org.joda.time.Days days9 = days3.plus((int) (byte) -1);
        org.joda.time.Days days11 = days3.dividedBy((int) (byte) -1);
        org.joda.time.ReadableInterval readableInterval12 = null;
        org.joda.time.Days days13 = org.joda.time.Days.daysIn(readableInterval12);
        int int15 = days13.getValue((int) (short) 0);
        org.joda.time.Days days16 = org.joda.time.Days.FIVE;
        org.joda.time.Days days17 = days13.minus(days16);
        org.joda.time.Days days18 = null;
        org.joda.time.Days days19 = days13.minus(days18);
        org.joda.time.ReadableInterval readableInterval20 = null;
        org.joda.time.Days days21 = org.joda.time.Days.daysIn(readableInterval20);
        int int23 = days21.getValue((int) (short) 0);
        org.joda.time.Days days24 = org.joda.time.Days.FIVE;
        org.joda.time.Days days25 = days21.minus(days24);
        org.joda.time.DurationFieldType durationFieldType26 = null;
        int int27 = days24.get(durationFieldType26);
        org.joda.time.DurationFieldType durationFieldType28 = null;
        int int29 = days24.get(durationFieldType28);
        boolean boolean31 = days24.equals((java.lang.Object) 0L);
        int int32 = days13.compareTo((org.joda.time.base.BaseSingleFieldPeriod) days24);
        boolean boolean33 = days11.equals((java.lang.Object) days24);
        // The following exception was thrown during execution in test generation
        try {
            int int35 = days24.getValue((-47));
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: -47");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(days1);
        org.junit.Assert.assertNotNull(days3);
        org.junit.Assert.assertNotNull(days5);
        org.junit.Assert.assertNotNull(days7);
        org.junit.Assert.assertNotNull(days9);
        org.junit.Assert.assertNotNull(days11);
        org.junit.Assert.assertNotNull(days13);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNotNull(days16);
        org.junit.Assert.assertNotNull(days17);
        org.junit.Assert.assertNotNull(days19);
        org.junit.Assert.assertNotNull(days21);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertNotNull(days24);
        org.junit.Assert.assertNotNull(days25);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
    }

    @Test
    public void test0119() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0119");
        org.joda.time.Days days1 = org.joda.time.Days.parseDays("P62D");
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.DurationFieldType durationFieldType3 = days1.getFieldType((int) (byte) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 1");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(days1);
    }

    @Test
    public void test0120() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0120");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Days days1 = org.joda.time.Days.daysIn(readableInterval0);
        int int3 = days1.getValue((int) (short) 0);
        org.joda.time.Days days4 = org.joda.time.Days.FIVE;
        org.joda.time.Days days5 = days1.minus(days4);
        org.joda.time.DurationFieldType durationFieldType6 = null;
        boolean boolean7 = days4.isSupported(durationFieldType6);
        org.joda.time.DurationFieldType durationFieldType9 = days4.getFieldType(0);
        org.joda.time.ReadableInterval readableInterval10 = null;
        org.joda.time.Days days11 = org.joda.time.Days.daysIn(readableInterval10);
        int int13 = days11.getValue((int) (short) 0);
        org.joda.time.Days days14 = org.joda.time.Days.FIVE;
        org.joda.time.Days days15 = days11.minus(days14);
        org.joda.time.Days days16 = null;
        org.joda.time.Days days17 = days11.minus(days16);
        org.joda.time.Days days19 = days11.minus((-1));
        org.joda.time.DurationFieldType durationFieldType20 = days11.getFieldType();
        boolean boolean21 = days4.isGreaterThan(days11);
        org.joda.time.ReadableInterval readableInterval22 = null;
        org.joda.time.Days days23 = org.joda.time.Days.daysIn(readableInterval22);
        org.joda.time.Days days25 = days23.plus((int) (byte) 10);
        org.joda.time.Days days26 = days11.plus(days25);
        org.joda.time.ReadableInterval readableInterval27 = null;
        org.joda.time.Days days28 = org.joda.time.Days.daysIn(readableInterval27);
        int int30 = days28.getValue((int) (short) 0);
        org.joda.time.Days days31 = org.joda.time.Days.FIVE;
        org.joda.time.Days days32 = days28.minus(days31);
        org.joda.time.Days days33 = null;
        org.joda.time.Days days34 = days28.minus(days33);
        org.joda.time.Duration duration35 = days28.toStandardDuration();
        org.joda.time.Days days36 = days26.minus(days28);
        org.joda.time.Days days38 = days28.multipliedBy(5);
        org.joda.time.Days days39 = days38.negated();
        org.joda.time.Days days41 = days38.minus(2147483647);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Hours hours42 = days41.toStandardHours();
            org.junit.Assert.fail("Expected exception of type java.lang.ArithmeticException; message: Multiplication overflows an int: -2147483647 * 24");
        } catch (java.lang.ArithmeticException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(days1);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(days4);
        org.junit.Assert.assertNotNull(days5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(durationFieldType9);
        org.junit.Assert.assertNotNull(days11);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(days14);
        org.junit.Assert.assertNotNull(days15);
        org.junit.Assert.assertNotNull(days17);
        org.junit.Assert.assertNotNull(days19);
        org.junit.Assert.assertNotNull(durationFieldType20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(days23);
        org.junit.Assert.assertNotNull(days25);
        org.junit.Assert.assertNotNull(days26);
        org.junit.Assert.assertNotNull(days28);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertNotNull(days31);
        org.junit.Assert.assertNotNull(days32);
        org.junit.Assert.assertNotNull(days34);
        org.junit.Assert.assertNotNull(duration35);
        org.junit.Assert.assertNotNull(days36);
        org.junit.Assert.assertNotNull(days38);
        org.junit.Assert.assertNotNull(days39);
        org.junit.Assert.assertNotNull(days41);
    }

    @Test
    public void test0121() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0121");
        org.joda.time.Days days0 = org.joda.time.Days.MAX_VALUE;
        int int1 = days0.getDays();
        org.joda.time.Days days2 = org.joda.time.Days.standardDaysIn((org.joda.time.ReadablePeriod) days0);
        org.joda.time.ReadableInterval readableInterval3 = null;
        org.joda.time.Days days4 = org.joda.time.Days.daysIn(readableInterval3);
        org.joda.time.ReadableInterval readableInterval5 = null;
        org.joda.time.Days days6 = org.joda.time.Days.daysIn(readableInterval5);
        int int8 = days6.getValue((int) (short) 0);
        org.joda.time.Days days9 = org.joda.time.Days.FIVE;
        org.joda.time.Days days10 = days6.minus(days9);
        org.joda.time.DurationFieldType durationFieldType11 = null;
        boolean boolean12 = days9.isSupported(durationFieldType11);
        org.joda.time.DurationFieldType durationFieldType14 = days9.getFieldType(0);
        int int15 = days4.get(durationFieldType14);
        org.joda.time.ReadableInterval readableInterval16 = null;
        org.joda.time.Days days17 = org.joda.time.Days.daysIn(readableInterval16);
        int int19 = days17.getValue((int) (short) 0);
        org.joda.time.Days days20 = org.joda.time.Days.FIVE;
        org.joda.time.Days days21 = days17.minus(days20);
        org.joda.time.DurationFieldType durationFieldType22 = null;
        int int23 = days20.get(durationFieldType22);
        org.joda.time.DurationFieldType durationFieldType24 = null;
        int int25 = days20.get(durationFieldType24);
        boolean boolean27 = days20.equals((java.lang.Object) 0L);
        boolean boolean28 = days4.isGreaterThan(days20);
        org.joda.time.ReadableInterval readableInterval29 = null;
        org.joda.time.Days days30 = org.joda.time.Days.daysIn(readableInterval29);
        int int32 = days30.getValue((int) (short) 0);
        org.joda.time.Days days33 = org.joda.time.Days.FIVE;
        org.joda.time.Days days34 = days30.minus(days33);
        org.joda.time.DurationFieldType durationFieldType35 = null;
        int int36 = days33.get(durationFieldType35);
        org.joda.time.DurationFieldType durationFieldType37 = null;
        int int38 = days33.get(durationFieldType37);
        boolean boolean40 = days33.equals((java.lang.Object) 0L);
        org.joda.time.Period period41 = days33.toPeriod();
        org.joda.time.Days days42 = days4.plus(days33);
        org.joda.time.ReadableInterval readableInterval43 = null;
        org.joda.time.Days days44 = org.joda.time.Days.daysIn(readableInterval43);
        int int46 = days44.getValue((int) (short) 0);
        org.joda.time.Period period47 = days44.toPeriod();
        org.joda.time.Days days48 = org.joda.time.Days.standardDaysIn((org.joda.time.ReadablePeriod) days44);
        boolean boolean49 = days4.equals((java.lang.Object) days48);
        org.joda.time.ReadableInterval readableInterval50 = null;
        org.joda.time.Days days51 = org.joda.time.Days.daysIn(readableInterval50);
        int int53 = days51.getValue((int) (short) 0);
        org.joda.time.Days days54 = org.joda.time.Days.FIVE;
        org.joda.time.Days days55 = days51.minus(days54);
        org.joda.time.DurationFieldType durationFieldType56 = null;
        boolean boolean57 = days54.isSupported(durationFieldType56);
        org.joda.time.DurationFieldType durationFieldType59 = days54.getFieldType(0);
        boolean boolean60 = days48.isSupported(durationFieldType59);
        int int61 = days0.get(durationFieldType59);
        org.junit.Assert.assertNotNull(days0);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 2147483647 + "'", int1 == 2147483647);
        org.junit.Assert.assertNotNull(days2);
        org.junit.Assert.assertNotNull(days4);
        org.junit.Assert.assertNotNull(days6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNotNull(days9);
        org.junit.Assert.assertNotNull(days10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(durationFieldType14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNotNull(days17);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertNotNull(days20);
        org.junit.Assert.assertNotNull(days21);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(days30);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertNotNull(days33);
        org.junit.Assert.assertNotNull(days34);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 0 + "'", int38 == 0);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(period41);
        org.junit.Assert.assertNotNull(days42);
        org.junit.Assert.assertNotNull(days44);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 0 + "'", int46 == 0);
        org.junit.Assert.assertNotNull(period47);
        org.junit.Assert.assertNotNull(days48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(days51);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 0 + "'", int53 == 0);
        org.junit.Assert.assertNotNull(days54);
        org.junit.Assert.assertNotNull(days55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(durationFieldType59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 2147483647 + "'", int61 == 2147483647);
    }

    @Test
    public void test0122() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0122");
        org.joda.time.Days days0 = org.joda.time.Days.SIX;
        org.joda.time.Days days2 = days0.plus(100);
        org.joda.time.ReadableInterval readableInterval3 = null;
        org.joda.time.Days days4 = org.joda.time.Days.daysIn(readableInterval3);
        int int6 = days4.getValue((int) (short) 0);
        org.joda.time.Days days7 = org.joda.time.Days.FIVE;
        org.joda.time.Days days8 = days4.minus(days7);
        org.joda.time.Days days9 = null;
        org.joda.time.Days days10 = days4.minus(days9);
        org.joda.time.Days days12 = days4.minus((-1));
        org.joda.time.DurationFieldType durationFieldType13 = days4.getFieldType();
        int int14 = days0.get(durationFieldType13);
        org.joda.time.Days days15 = days0.negated();
        org.joda.time.ReadableInterval readableInterval16 = null;
        org.joda.time.Days days17 = org.joda.time.Days.daysIn(readableInterval16);
        int int19 = days17.getValue((int) (short) 0);
        org.joda.time.Days days20 = org.joda.time.Days.FIVE;
        org.joda.time.Days days21 = days17.minus(days20);
        org.joda.time.ReadableInterval readableInterval22 = null;
        org.joda.time.Days days23 = org.joda.time.Days.daysIn(readableInterval22);
        int int25 = days23.getValue((int) (short) 0);
        int int26 = days17.compareTo((org.joda.time.base.BaseSingleFieldPeriod) days23);
        org.joda.time.ReadableInterval readableInterval27 = null;
        org.joda.time.Days days28 = org.joda.time.Days.daysIn(readableInterval27);
        int int30 = days28.getValue((int) (short) 0);
        org.joda.time.Days days31 = org.joda.time.Days.FIVE;
        org.joda.time.Days days32 = days28.minus(days31);
        org.joda.time.DurationFieldType durationFieldType33 = null;
        int int34 = days31.get(durationFieldType33);
        org.joda.time.DurationFieldType durationFieldType35 = null;
        int int36 = days31.get(durationFieldType35);
        boolean boolean38 = days31.equals((java.lang.Object) false);
        boolean boolean39 = days23.equals((java.lang.Object) days31);
        boolean boolean40 = days15.isGreaterThan(days31);
        org.joda.time.ReadableInterval readableInterval41 = null;
        org.joda.time.Days days42 = org.joda.time.Days.daysIn(readableInterval41);
        int int44 = days42.getValue((int) (short) 0);
        org.joda.time.ReadableInterval readableInterval45 = null;
        org.joda.time.Days days46 = org.joda.time.Days.daysIn(readableInterval45);
        int int48 = days46.getValue((int) (short) 0);
        org.joda.time.Days days49 = org.joda.time.Days.FIVE;
        org.joda.time.Days days50 = days46.minus(days49);
        int int51 = days42.compareTo((org.joda.time.base.BaseSingleFieldPeriod) days49);
        java.lang.String str52 = days42.toString();
        org.joda.time.Days days54 = days42.plus((int) '4');
        org.joda.time.ReadableInterval readableInterval55 = null;
        org.joda.time.Days days56 = org.joda.time.Days.daysIn(readableInterval55);
        int int58 = days56.getValue((int) (short) 0);
        org.joda.time.Days days59 = org.joda.time.Days.FIVE;
        org.joda.time.Days days60 = days56.minus(days59);
        org.joda.time.DurationFieldType durationFieldType61 = null;
        boolean boolean62 = days59.isSupported(durationFieldType61);
        org.joda.time.DurationFieldType durationFieldType64 = days59.getFieldType(0);
        org.joda.time.ReadableInterval readableInterval65 = null;
        org.joda.time.Days days66 = org.joda.time.Days.daysIn(readableInterval65);
        int int68 = days66.getValue((int) (short) 0);
        org.joda.time.Days days69 = org.joda.time.Days.FIVE;
        org.joda.time.Days days70 = days66.minus(days69);
        org.joda.time.Days days71 = null;
        org.joda.time.Days days72 = days66.minus(days71);
        org.joda.time.Days days74 = days66.minus((-1));
        org.joda.time.DurationFieldType durationFieldType75 = days66.getFieldType();
        boolean boolean76 = days59.isGreaterThan(days66);
        org.joda.time.ReadableInterval readableInterval77 = null;
        org.joda.time.Days days78 = org.joda.time.Days.daysIn(readableInterval77);
        org.joda.time.Days days80 = days78.plus((int) (byte) 10);
        org.joda.time.Days days81 = days66.plus(days80);
        org.joda.time.ReadableInterval readableInterval82 = null;
        org.joda.time.Days days83 = org.joda.time.Days.daysIn(readableInterval82);
        int int85 = days83.getValue((int) (short) 0);
        org.joda.time.Days days86 = org.joda.time.Days.FIVE;
        org.joda.time.Days days87 = days83.minus(days86);
        org.joda.time.Days days88 = null;
        org.joda.time.Days days89 = days83.minus(days88);
        org.joda.time.Duration duration90 = days83.toStandardDuration();
        org.joda.time.Days days91 = days81.minus(days83);
        org.joda.time.Duration duration92 = days91.toStandardDuration();
        org.joda.time.PeriodType periodType93 = days91.getPeriodType();
        org.joda.time.Days days94 = days54.plus(days91);
        int int95 = days15.compareTo((org.joda.time.base.BaseSingleFieldPeriod) days94);
        org.joda.time.MutablePeriod mutablePeriod96 = days15.toMutablePeriod();
        org.junit.Assert.assertNotNull(days0);
        org.junit.Assert.assertNotNull(days2);
        org.junit.Assert.assertNotNull(days4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNotNull(days7);
        org.junit.Assert.assertNotNull(days8);
        org.junit.Assert.assertNotNull(days10);
        org.junit.Assert.assertNotNull(days12);
        org.junit.Assert.assertNotNull(durationFieldType13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 6 + "'", int14 == 6);
        org.junit.Assert.assertNotNull(days15);
        org.junit.Assert.assertNotNull(days17);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertNotNull(days20);
        org.junit.Assert.assertNotNull(days21);
        org.junit.Assert.assertNotNull(days23);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertNotNull(days28);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertNotNull(days31);
        org.junit.Assert.assertNotNull(days32);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(days42);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 0 + "'", int44 == 0);
        org.junit.Assert.assertNotNull(days46);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 0 + "'", int48 == 0);
        org.junit.Assert.assertNotNull(days49);
        org.junit.Assert.assertNotNull(days50);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + (-1) + "'", int51 == (-1));
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "P0D" + "'", str52, "P0D");
        org.junit.Assert.assertNotNull(days54);
        org.junit.Assert.assertNotNull(days56);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 0 + "'", int58 == 0);
        org.junit.Assert.assertNotNull(days59);
        org.junit.Assert.assertNotNull(days60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(durationFieldType64);
        org.junit.Assert.assertNotNull(days66);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 0 + "'", int68 == 0);
        org.junit.Assert.assertNotNull(days69);
        org.junit.Assert.assertNotNull(days70);
        org.junit.Assert.assertNotNull(days72);
        org.junit.Assert.assertNotNull(days74);
        org.junit.Assert.assertNotNull(durationFieldType75);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertNotNull(days78);
        org.junit.Assert.assertNotNull(days80);
        org.junit.Assert.assertNotNull(days81);
        org.junit.Assert.assertNotNull(days83);
        org.junit.Assert.assertTrue("'" + int85 + "' != '" + 0 + "'", int85 == 0);
        org.junit.Assert.assertNotNull(days86);
        org.junit.Assert.assertNotNull(days87);
        org.junit.Assert.assertNotNull(days89);
        org.junit.Assert.assertNotNull(duration90);
        org.junit.Assert.assertNotNull(days91);
        org.junit.Assert.assertNotNull(duration92);
        org.junit.Assert.assertNotNull(periodType93);
        org.junit.Assert.assertNotNull(days94);
        org.junit.Assert.assertTrue("'" + int95 + "' != '" + (-1) + "'", int95 == (-1));
        org.junit.Assert.assertNotNull(mutablePeriod96);
    }

    @Test
    public void test0123() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0123");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Days days1 = org.joda.time.Days.daysIn(readableInterval0);
        org.joda.time.Days days3 = days1.plus((int) (byte) 10);
        org.joda.time.Days days5 = days3.dividedBy((int) 'a');
        int int6 = days3.getDays();
        // The following exception was thrown during execution in test generation
        try {
            int int8 = days3.getValue((int) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: -1");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(days1);
        org.junit.Assert.assertNotNull(days3);
        org.junit.Assert.assertNotNull(days5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 10 + "'", int6 == 10);
    }

    @Test
    public void test0124() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0124");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Days days1 = org.joda.time.Days.daysIn(readableInterval0);
        int int3 = days1.getValue((int) (short) 0);
        org.joda.time.Days days4 = org.joda.time.Days.FIVE;
        org.joda.time.Days days5 = days1.minus(days4);
        org.joda.time.DurationFieldType durationFieldType6 = null;
        boolean boolean7 = days4.isSupported(durationFieldType6);
        org.joda.time.DurationFieldType durationFieldType9 = days4.getFieldType(0);
        org.joda.time.Period period10 = days4.toPeriod();
        int int12 = days4.getValue(0);
        org.joda.time.Days days14 = days4.dividedBy((int) (byte) 1);
        org.joda.time.Duration duration15 = days4.toStandardDuration();
        org.junit.Assert.assertNotNull(days1);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(days4);
        org.junit.Assert.assertNotNull(days5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(durationFieldType9);
        org.junit.Assert.assertNotNull(period10);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 5 + "'", int12 == 5);
        org.junit.Assert.assertNotNull(days14);
        org.junit.Assert.assertNotNull(duration15);
    }

    @Test
    public void test0125() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0125");
        org.joda.time.Days days0 = org.joda.time.Days.THREE;
        org.joda.time.ReadableInterval readableInterval1 = null;
        org.joda.time.Days days2 = org.joda.time.Days.daysIn(readableInterval1);
        org.joda.time.ReadableInterval readableInterval3 = null;
        org.joda.time.Days days4 = org.joda.time.Days.daysIn(readableInterval3);
        int int6 = days4.getValue((int) (short) 0);
        org.joda.time.Days days7 = org.joda.time.Days.FIVE;
        org.joda.time.Days days8 = days4.minus(days7);
        org.joda.time.DurationFieldType durationFieldType9 = null;
        boolean boolean10 = days7.isSupported(durationFieldType9);
        org.joda.time.DurationFieldType durationFieldType12 = days7.getFieldType(0);
        int int13 = days2.get(durationFieldType12);
        org.joda.time.ReadableInterval readableInterval14 = null;
        org.joda.time.Days days15 = org.joda.time.Days.daysIn(readableInterval14);
        int int17 = days15.getValue((int) (short) 0);
        org.joda.time.Days days18 = org.joda.time.Days.FIVE;
        org.joda.time.Days days19 = days15.minus(days18);
        org.joda.time.DurationFieldType durationFieldType20 = null;
        int int21 = days18.get(durationFieldType20);
        org.joda.time.DurationFieldType durationFieldType22 = null;
        int int23 = days18.get(durationFieldType22);
        boolean boolean25 = days18.equals((java.lang.Object) 0L);
        boolean boolean26 = days2.isGreaterThan(days18);
        org.joda.time.ReadableInterval readableInterval27 = null;
        org.joda.time.Days days28 = org.joda.time.Days.daysIn(readableInterval27);
        int int30 = days28.getValue((int) (short) 0);
        org.joda.time.Days days31 = org.joda.time.Days.FIVE;
        org.joda.time.Days days32 = days28.minus(days31);
        org.joda.time.DurationFieldType durationFieldType33 = null;
        int int34 = days31.get(durationFieldType33);
        org.joda.time.DurationFieldType durationFieldType35 = null;
        int int36 = days31.get(durationFieldType35);
        boolean boolean38 = days31.equals((java.lang.Object) 0L);
        org.joda.time.Period period39 = days31.toPeriod();
        org.joda.time.Days days40 = days2.plus(days31);
        boolean boolean41 = days0.isGreaterThan(days40);
        org.joda.time.MutablePeriod mutablePeriod42 = days40.toMutablePeriod();
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.DurationFieldType durationFieldType44 = days40.getFieldType((int) (byte) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 10");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(days0);
        org.junit.Assert.assertNotNull(days2);
        org.junit.Assert.assertNotNull(days4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNotNull(days7);
        org.junit.Assert.assertNotNull(days8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(durationFieldType12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(days15);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNotNull(days18);
        org.junit.Assert.assertNotNull(days19);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(days28);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertNotNull(days31);
        org.junit.Assert.assertNotNull(days32);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(period39);
        org.junit.Assert.assertNotNull(days40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(mutablePeriod42);
    }

    @Test
    public void test0126() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0126");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Days days1 = org.joda.time.Days.daysIn(readableInterval0);
        org.joda.time.Days days3 = days1.plus((int) (byte) 10);
        org.joda.time.Days days5 = days3.dividedBy((int) 'a');
        org.joda.time.Days days7 = days3.dividedBy(5);
        org.joda.time.Days days9 = days3.plus((int) (byte) -1);
        org.joda.time.Days days11 = days3.dividedBy((int) (byte) -1);
        org.joda.time.ReadableInterval readableInterval12 = null;
        org.joda.time.Days days13 = org.joda.time.Days.daysIn(readableInterval12);
        int int15 = days13.getValue((int) (short) 0);
        org.joda.time.Days days16 = org.joda.time.Days.FIVE;
        org.joda.time.Days days17 = days13.minus(days16);
        org.joda.time.Days days18 = null;
        org.joda.time.Days days19 = days13.minus(days18);
        org.joda.time.ReadableInterval readableInterval20 = null;
        org.joda.time.Days days21 = org.joda.time.Days.daysIn(readableInterval20);
        int int23 = days21.getValue((int) (short) 0);
        org.joda.time.Days days24 = org.joda.time.Days.FIVE;
        org.joda.time.Days days25 = days21.minus(days24);
        org.joda.time.DurationFieldType durationFieldType26 = null;
        int int27 = days24.get(durationFieldType26);
        org.joda.time.DurationFieldType durationFieldType28 = null;
        int int29 = days24.get(durationFieldType28);
        boolean boolean31 = days24.equals((java.lang.Object) 0L);
        int int32 = days13.compareTo((org.joda.time.base.BaseSingleFieldPeriod) days24);
        boolean boolean33 = days11.equals((java.lang.Object) days24);
        // The following exception was thrown during execution in test generation
        try {
            int int35 = days24.getValue(52);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 52");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(days1);
        org.junit.Assert.assertNotNull(days3);
        org.junit.Assert.assertNotNull(days5);
        org.junit.Assert.assertNotNull(days7);
        org.junit.Assert.assertNotNull(days9);
        org.junit.Assert.assertNotNull(days11);
        org.junit.Assert.assertNotNull(days13);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNotNull(days16);
        org.junit.Assert.assertNotNull(days17);
        org.junit.Assert.assertNotNull(days19);
        org.junit.Assert.assertNotNull(days21);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertNotNull(days24);
        org.junit.Assert.assertNotNull(days25);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
    }

    @Test
    public void test0127() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0127");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Days days1 = org.joda.time.Days.daysIn(readableInterval0);
        int int3 = days1.getValue((int) (short) 0);
        org.joda.time.Days days4 = org.joda.time.Days.FIVE;
        org.joda.time.Days days5 = days1.minus(days4);
        org.joda.time.DurationFieldType durationFieldType6 = null;
        boolean boolean7 = days4.isSupported(durationFieldType6);
        org.joda.time.DurationFieldType durationFieldType9 = days4.getFieldType(0);
        org.joda.time.ReadableInterval readableInterval10 = null;
        org.joda.time.Days days11 = org.joda.time.Days.daysIn(readableInterval10);
        int int13 = days11.getValue((int) (short) 0);
        org.joda.time.Days days14 = org.joda.time.Days.FIVE;
        org.joda.time.Days days15 = days11.minus(days14);
        org.joda.time.Days days16 = null;
        org.joda.time.Days days17 = days11.minus(days16);
        org.joda.time.Days days19 = days11.minus((-1));
        org.joda.time.DurationFieldType durationFieldType20 = days11.getFieldType();
        boolean boolean21 = days4.isGreaterThan(days11);
        org.joda.time.Days days22 = org.joda.time.Days.THREE;
        org.joda.time.ReadableInterval readableInterval23 = null;
        org.joda.time.Days days24 = org.joda.time.Days.daysIn(readableInterval23);
        org.joda.time.ReadableInterval readableInterval25 = null;
        org.joda.time.Days days26 = org.joda.time.Days.daysIn(readableInterval25);
        int int28 = days26.getValue((int) (short) 0);
        org.joda.time.Days days29 = org.joda.time.Days.FIVE;
        org.joda.time.Days days30 = days26.minus(days29);
        org.joda.time.DurationFieldType durationFieldType31 = null;
        boolean boolean32 = days29.isSupported(durationFieldType31);
        org.joda.time.DurationFieldType durationFieldType34 = days29.getFieldType(0);
        int int35 = days24.get(durationFieldType34);
        org.joda.time.ReadableInterval readableInterval36 = null;
        org.joda.time.Days days37 = org.joda.time.Days.daysIn(readableInterval36);
        int int39 = days37.getValue((int) (short) 0);
        org.joda.time.ReadableInterval readableInterval40 = null;
        org.joda.time.Days days41 = org.joda.time.Days.daysIn(readableInterval40);
        int int43 = days41.getValue((int) (short) 0);
        org.joda.time.Days days44 = org.joda.time.Days.FIVE;
        org.joda.time.Days days45 = days41.minus(days44);
        int int46 = days37.compareTo((org.joda.time.base.BaseSingleFieldPeriod) days44);
        java.lang.String str47 = days37.toString();
        org.joda.time.Days days48 = null;
        boolean boolean49 = days37.isGreaterThan(days48);
        org.joda.time.Period period50 = days37.toPeriod();
        org.joda.time.Days days51 = days24.plus(days37);
        boolean boolean52 = days22.isLessThan(days37);
        org.joda.time.Days days53 = days4.minus(days22);
        org.joda.time.PeriodType periodType54 = days22.getPeriodType();
        org.junit.Assert.assertNotNull(days1);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(days4);
        org.junit.Assert.assertNotNull(days5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(durationFieldType9);
        org.junit.Assert.assertNotNull(days11);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(days14);
        org.junit.Assert.assertNotNull(days15);
        org.junit.Assert.assertNotNull(days17);
        org.junit.Assert.assertNotNull(days19);
        org.junit.Assert.assertNotNull(durationFieldType20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(days22);
        org.junit.Assert.assertNotNull(days24);
        org.junit.Assert.assertNotNull(days26);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertNotNull(days29);
        org.junit.Assert.assertNotNull(days30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(durationFieldType34);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertNotNull(days37);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertNotNull(days41);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0);
        org.junit.Assert.assertNotNull(days44);
        org.junit.Assert.assertNotNull(days45);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + (-1) + "'", int46 == (-1));
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "P0D" + "'", str47, "P0D");
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(period50);
        org.junit.Assert.assertNotNull(days51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(days53);
        org.junit.Assert.assertNotNull(periodType54);
    }

    @Test
    public void test0128() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0128");
        org.joda.time.Days days1 = org.joda.time.Days.days((int) '4');
        org.joda.time.Days days2 = org.joda.time.Days.SEVEN;
        org.joda.time.Days days4 = days2.plus(1);
        boolean boolean5 = days1.isGreaterThan(days4);
        org.joda.time.Days days6 = org.joda.time.Days.THREE;
        org.joda.time.ReadableInterval readableInterval7 = null;
        org.joda.time.Days days8 = org.joda.time.Days.daysIn(readableInterval7);
        org.joda.time.ReadableInterval readableInterval9 = null;
        org.joda.time.Days days10 = org.joda.time.Days.daysIn(readableInterval9);
        int int12 = days10.getValue((int) (short) 0);
        org.joda.time.Days days13 = org.joda.time.Days.FIVE;
        org.joda.time.Days days14 = days10.minus(days13);
        org.joda.time.DurationFieldType durationFieldType15 = null;
        boolean boolean16 = days13.isSupported(durationFieldType15);
        org.joda.time.DurationFieldType durationFieldType18 = days13.getFieldType(0);
        int int19 = days8.get(durationFieldType18);
        org.joda.time.ReadableInterval readableInterval20 = null;
        org.joda.time.Days days21 = org.joda.time.Days.daysIn(readableInterval20);
        int int23 = days21.getValue((int) (short) 0);
        org.joda.time.Days days24 = org.joda.time.Days.FIVE;
        org.joda.time.Days days25 = days21.minus(days24);
        org.joda.time.DurationFieldType durationFieldType26 = null;
        int int27 = days24.get(durationFieldType26);
        org.joda.time.DurationFieldType durationFieldType28 = null;
        int int29 = days24.get(durationFieldType28);
        boolean boolean31 = days24.equals((java.lang.Object) 0L);
        boolean boolean32 = days8.isGreaterThan(days24);
        org.joda.time.ReadableInterval readableInterval33 = null;
        org.joda.time.Days days34 = org.joda.time.Days.daysIn(readableInterval33);
        int int36 = days34.getValue((int) (short) 0);
        org.joda.time.Days days37 = org.joda.time.Days.FIVE;
        org.joda.time.Days days38 = days34.minus(days37);
        org.joda.time.DurationFieldType durationFieldType39 = null;
        int int40 = days37.get(durationFieldType39);
        org.joda.time.DurationFieldType durationFieldType41 = null;
        int int42 = days37.get(durationFieldType41);
        boolean boolean44 = days37.equals((java.lang.Object) 0L);
        org.joda.time.Period period45 = days37.toPeriod();
        org.joda.time.Days days46 = days8.plus(days37);
        boolean boolean47 = days6.isGreaterThan(days46);
        org.joda.time.ReadableInterval readableInterval48 = null;
        org.joda.time.Days days49 = org.joda.time.Days.daysIn(readableInterval48);
        int int51 = days49.getValue((int) (short) 0);
        org.joda.time.Days days52 = org.joda.time.Days.FIVE;
        org.joda.time.Days days53 = days49.minus(days52);
        org.joda.time.Days days54 = null;
        org.joda.time.Days days55 = days49.minus(days54);
        boolean boolean56 = days6.equals((java.lang.Object) days55);
        org.joda.time.Days days58 = days55.multipliedBy(100);
        int int59 = days58.size();
        int int60 = days1.compareTo((org.joda.time.base.BaseSingleFieldPeriod) days58);
        org.junit.Assert.assertNotNull(days1);
        org.junit.Assert.assertNotNull(days2);
        org.junit.Assert.assertNotNull(days4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(days6);
        org.junit.Assert.assertNotNull(days8);
        org.junit.Assert.assertNotNull(days10);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNotNull(days13);
        org.junit.Assert.assertNotNull(days14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(durationFieldType18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertNotNull(days21);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertNotNull(days24);
        org.junit.Assert.assertNotNull(days25);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(days34);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertNotNull(days37);
        org.junit.Assert.assertNotNull(days38);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(period45);
        org.junit.Assert.assertNotNull(days46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(days49);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 0 + "'", int51 == 0);
        org.junit.Assert.assertNotNull(days52);
        org.junit.Assert.assertNotNull(days53);
        org.junit.Assert.assertNotNull(days55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(days58);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 1 + "'", int59 == 1);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 1 + "'", int60 == 1);
    }

    @Test
    public void test0129() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0129");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Days days1 = org.joda.time.Days.daysIn(readableInterval0);
        int int3 = days1.getValue((int) (short) 0);
        org.joda.time.ReadableInterval readableInterval4 = null;
        org.joda.time.Days days5 = org.joda.time.Days.daysIn(readableInterval4);
        int int7 = days5.getValue((int) (short) 0);
        org.joda.time.Days days8 = org.joda.time.Days.FIVE;
        org.joda.time.Days days9 = days5.minus(days8);
        int int10 = days1.compareTo((org.joda.time.base.BaseSingleFieldPeriod) days8);
        org.joda.time.MutablePeriod mutablePeriod11 = days8.toMutablePeriod();
        org.joda.time.Days days12 = days8.negated();
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.DurationFieldType durationFieldType14 = days8.getFieldType((int) ' ');
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 32");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(days1);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(days5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(days8);
        org.junit.Assert.assertNotNull(days9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertNotNull(mutablePeriod11);
        org.junit.Assert.assertNotNull(days12);
    }

    @Test
    public void test0130() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0130");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Days days1 = org.joda.time.Days.daysIn(readableInterval0);
        org.joda.time.ReadableInterval readableInterval2 = null;
        org.joda.time.Days days3 = org.joda.time.Days.daysIn(readableInterval2);
        int int5 = days3.getValue((int) (short) 0);
        org.joda.time.Days days6 = org.joda.time.Days.FIVE;
        org.joda.time.Days days7 = days3.minus(days6);
        org.joda.time.Days days8 = null;
        org.joda.time.Days days9 = days3.minus(days8);
        org.joda.time.ReadableInterval readableInterval10 = null;
        org.joda.time.Days days11 = org.joda.time.Days.daysIn(readableInterval10);
        org.joda.time.ReadableInterval readableInterval12 = null;
        org.joda.time.Days days13 = org.joda.time.Days.daysIn(readableInterval12);
        int int15 = days13.getValue((int) (short) 0);
        org.joda.time.Days days16 = org.joda.time.Days.FIVE;
        org.joda.time.Days days17 = days13.minus(days16);
        org.joda.time.DurationFieldType durationFieldType18 = null;
        boolean boolean19 = days16.isSupported(durationFieldType18);
        org.joda.time.DurationFieldType durationFieldType21 = days16.getFieldType(0);
        int int22 = days11.get(durationFieldType21);
        org.joda.time.PeriodType periodType23 = days11.getPeriodType();
        org.joda.time.Days days24 = days3.plus(days11);
        org.joda.time.Days days25 = org.joda.time.Days.standardDaysIn((org.joda.time.ReadablePeriod) days24);
        boolean boolean26 = days1.equals((java.lang.Object) days25);
        org.junit.Assert.assertNotNull(days1);
        org.junit.Assert.assertNotNull(days3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(days6);
        org.junit.Assert.assertNotNull(days7);
        org.junit.Assert.assertNotNull(days9);
        org.junit.Assert.assertNotNull(days11);
        org.junit.Assert.assertNotNull(days13);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNotNull(days16);
        org.junit.Assert.assertNotNull(days17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(durationFieldType21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertNotNull(periodType23);
        org.junit.Assert.assertNotNull(days24);
        org.junit.Assert.assertNotNull(days25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
    }

    @Test
    public void test0131() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0131");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Days days1 = org.joda.time.Days.daysIn(readableInterval0);
        int int3 = days1.getValue((int) (short) 0);
        org.joda.time.Days days4 = org.joda.time.Days.FIVE;
        org.joda.time.Days days5 = days1.minus(days4);
        org.joda.time.DurationFieldType durationFieldType6 = null;
        boolean boolean7 = days4.isSupported(durationFieldType6);
        org.joda.time.DurationFieldType durationFieldType9 = days4.getFieldType(0);
        org.joda.time.ReadableInterval readableInterval10 = null;
        org.joda.time.Days days11 = org.joda.time.Days.daysIn(readableInterval10);
        int int13 = days11.getValue((int) (short) 0);
        org.joda.time.Days days14 = org.joda.time.Days.FIVE;
        org.joda.time.Days days15 = days11.minus(days14);
        org.joda.time.Days days16 = null;
        org.joda.time.Days days17 = days11.minus(days16);
        org.joda.time.Days days19 = days11.minus((-1));
        org.joda.time.DurationFieldType durationFieldType20 = days11.getFieldType();
        boolean boolean21 = days4.isGreaterThan(days11);
        org.joda.time.ReadableInterval readableInterval22 = null;
        org.joda.time.Days days23 = org.joda.time.Days.daysIn(readableInterval22);
        org.joda.time.Days days25 = days23.plus((int) (byte) 10);
        org.joda.time.Days days26 = days11.plus(days25);
        org.joda.time.ReadableInterval readableInterval27 = null;
        org.joda.time.Days days28 = org.joda.time.Days.daysIn(readableInterval27);
        int int30 = days28.getValue((int) (short) 0);
        org.joda.time.Days days31 = org.joda.time.Days.FIVE;
        org.joda.time.Days days32 = days28.minus(days31);
        org.joda.time.Days days33 = null;
        org.joda.time.Days days34 = days28.minus(days33);
        org.joda.time.Duration duration35 = days28.toStandardDuration();
        org.joda.time.Days days36 = days26.minus(days28);
        org.joda.time.Days days38 = days36.plus(100);
        org.joda.time.Duration duration39 = days36.toStandardDuration();
        org.junit.Assert.assertNotNull(days1);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(days4);
        org.junit.Assert.assertNotNull(days5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(durationFieldType9);
        org.junit.Assert.assertNotNull(days11);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(days14);
        org.junit.Assert.assertNotNull(days15);
        org.junit.Assert.assertNotNull(days17);
        org.junit.Assert.assertNotNull(days19);
        org.junit.Assert.assertNotNull(durationFieldType20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(days23);
        org.junit.Assert.assertNotNull(days25);
        org.junit.Assert.assertNotNull(days26);
        org.junit.Assert.assertNotNull(days28);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertNotNull(days31);
        org.junit.Assert.assertNotNull(days32);
        org.junit.Assert.assertNotNull(days34);
        org.junit.Assert.assertNotNull(duration35);
        org.junit.Assert.assertNotNull(days36);
        org.junit.Assert.assertNotNull(days38);
        org.junit.Assert.assertNotNull(duration39);
    }

    @Test
    public void test0132() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0132");
        org.joda.time.Days days0 = org.joda.time.Days.MAX_VALUE;
        org.joda.time.Days days1 = days0.negated();
        org.joda.time.PeriodType periodType2 = days0.getPeriodType();
        org.joda.time.ReadableInterval readableInterval3 = null;
        org.joda.time.Days days4 = org.joda.time.Days.daysIn(readableInterval3);
        int int6 = days4.getValue((int) (short) 0);
        org.joda.time.Days days7 = org.joda.time.Days.FIVE;
        org.joda.time.Days days8 = days4.minus(days7);
        org.joda.time.DurationFieldType durationFieldType9 = null;
        int int10 = days7.get(durationFieldType9);
        org.joda.time.Days days12 = days7.dividedBy(100);
        int int13 = days0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) days7);
        org.joda.time.PeriodType periodType14 = days7.getPeriodType();
        org.joda.time.Days days16 = days7.minus(52);
        org.joda.time.Duration duration17 = days16.toStandardDuration();
        org.joda.time.Period period18 = days16.toPeriod();
        org.junit.Assert.assertNotNull(days0);
        org.junit.Assert.assertNotNull(days1);
        org.junit.Assert.assertNotNull(periodType2);
        org.junit.Assert.assertNotNull(days4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNotNull(days7);
        org.junit.Assert.assertNotNull(days8);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(days12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertNotNull(periodType14);
        org.junit.Assert.assertNotNull(days16);
        org.junit.Assert.assertNotNull(duration17);
        org.junit.Assert.assertNotNull(period18);
    }

    @Test
    public void test0133() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0133");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Days days1 = org.joda.time.Days.daysIn(readableInterval0);
        int int3 = days1.getValue((int) (short) 0);
        org.joda.time.Days days4 = org.joda.time.Days.FIVE;
        org.joda.time.Days days5 = days1.minus(days4);
        org.joda.time.Days days6 = null;
        org.joda.time.Days days7 = days1.minus(days6);
        org.joda.time.ReadableInterval readableInterval8 = null;
        org.joda.time.Days days9 = org.joda.time.Days.daysIn(readableInterval8);
        int int11 = days9.getValue((int) (short) 0);
        org.joda.time.Days days12 = org.joda.time.Days.FIVE;
        org.joda.time.Days days13 = days9.minus(days12);
        org.joda.time.DurationFieldType durationFieldType14 = null;
        int int15 = days12.get(durationFieldType14);
        org.joda.time.DurationFieldType durationFieldType16 = null;
        int int17 = days12.get(durationFieldType16);
        boolean boolean19 = days12.equals((java.lang.Object) 0L);
        int int20 = days1.compareTo((org.joda.time.base.BaseSingleFieldPeriod) days12);
        org.joda.time.ReadableInterval readableInterval21 = null;
        org.joda.time.Days days22 = org.joda.time.Days.daysIn(readableInterval21);
        int int24 = days22.getValue((int) (short) 0);
        org.joda.time.ReadableInterval readableInterval25 = null;
        org.joda.time.Days days26 = org.joda.time.Days.daysIn(readableInterval25);
        int int28 = days26.getValue((int) (short) 0);
        org.joda.time.Days days29 = org.joda.time.Days.FIVE;
        org.joda.time.Days days30 = days26.minus(days29);
        int int31 = days22.compareTo((org.joda.time.base.BaseSingleFieldPeriod) days29);
        org.joda.time.MutablePeriod mutablePeriod32 = days29.toMutablePeriod();
        org.joda.time.Days days33 = days29.negated();
        org.joda.time.Days days34 = days1.plus(days29);
        int int35 = days29.getDays();
        org.junit.Assert.assertNotNull(days1);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(days4);
        org.junit.Assert.assertNotNull(days5);
        org.junit.Assert.assertNotNull(days7);
        org.junit.Assert.assertNotNull(days9);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNotNull(days12);
        org.junit.Assert.assertNotNull(days13);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
        org.junit.Assert.assertNotNull(days22);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertNotNull(days26);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertNotNull(days29);
        org.junit.Assert.assertNotNull(days30);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertNotNull(mutablePeriod32);
        org.junit.Assert.assertNotNull(days33);
        org.junit.Assert.assertNotNull(days34);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 5 + "'", int35 == 5);
    }

    @Test
    public void test0134() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0134");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Days days1 = org.joda.time.Days.daysIn(readableInterval0);
        int int3 = days1.getValue((int) (short) 0);
        org.joda.time.Days days4 = org.joda.time.Days.FIVE;
        org.joda.time.Days days5 = days1.minus(days4);
        org.joda.time.DurationFieldType durationFieldType6 = null;
        int int7 = days4.get(durationFieldType6);
        org.joda.time.DurationFieldType durationFieldType8 = null;
        int int9 = days4.get(durationFieldType8);
        boolean boolean11 = days4.equals((java.lang.Object) false);
        org.joda.time.Days days13 = days4.minus((int) (short) 10);
        org.joda.time.MutablePeriod mutablePeriod14 = days4.toMutablePeriod();
        org.junit.Assert.assertNotNull(days1);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(days4);
        org.junit.Assert.assertNotNull(days5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(days13);
        org.junit.Assert.assertNotNull(mutablePeriod14);
    }

    @Test
    public void test0135() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0135");
        org.joda.time.Days days1 = org.joda.time.Days.days((int) 'a');
        org.joda.time.Days days2 = days1.negated();
        org.joda.time.Days days4 = days2.multipliedBy((int) (byte) 1);
        java.lang.String str5 = days2.toString();
        org.junit.Assert.assertNotNull(days1);
        org.junit.Assert.assertNotNull(days2);
        org.junit.Assert.assertNotNull(days4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "P-97D" + "'", str5, "P-97D");
    }

    @Test
    public void test0136() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0136");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Days days1 = org.joda.time.Days.daysIn(readableInterval0);
        org.joda.time.Days days3 = days1.plus((int) (byte) 10);
        org.joda.time.MutablePeriod mutablePeriod4 = days1.toMutablePeriod();
        org.joda.time.Days days6 = days1.plus((int) (short) -1);
        org.joda.time.Days days7 = days6.negated();
        org.joda.time.ReadableInterval readableInterval8 = null;
        org.joda.time.Days days9 = org.joda.time.Days.daysIn(readableInterval8);
        org.joda.time.Days days11 = days9.plus((int) (byte) 10);
        org.joda.time.DurationFieldType durationFieldType12 = days11.getFieldType();
        org.joda.time.Days days14 = days11.plus(0);
        org.joda.time.ReadableInterval readableInterval15 = null;
        org.joda.time.Days days16 = org.joda.time.Days.daysIn(readableInterval15);
        int int18 = days16.getValue((int) (short) 0);
        org.joda.time.Days days19 = org.joda.time.Days.FIVE;
        org.joda.time.Days days20 = days16.minus(days19);
        org.joda.time.DurationFieldType durationFieldType21 = null;
        boolean boolean22 = days19.isSupported(durationFieldType21);
        org.joda.time.DurationFieldType durationFieldType24 = days19.getFieldType(0);
        org.joda.time.ReadableInterval readableInterval25 = null;
        org.joda.time.Days days26 = org.joda.time.Days.daysIn(readableInterval25);
        int int28 = days26.getValue((int) (short) 0);
        org.joda.time.Days days29 = org.joda.time.Days.FIVE;
        org.joda.time.Days days30 = days26.minus(days29);
        org.joda.time.Days days31 = null;
        org.joda.time.Days days32 = days26.minus(days31);
        org.joda.time.Days days34 = days26.minus((-1));
        org.joda.time.DurationFieldType durationFieldType35 = days26.getFieldType();
        boolean boolean36 = days19.isGreaterThan(days26);
        org.joda.time.ReadableInterval readableInterval37 = null;
        org.joda.time.Days days38 = org.joda.time.Days.daysIn(readableInterval37);
        org.joda.time.Days days40 = days38.plus((int) (byte) 10);
        org.joda.time.Days days41 = days26.plus(days40);
        int int42 = days14.compareTo((org.joda.time.base.BaseSingleFieldPeriod) days26);
        int int44 = days14.getValue((int) (byte) 0);
        org.joda.time.DurationFieldType durationFieldType45 = days14.getFieldType();
        int int46 = days6.get(durationFieldType45);
        org.junit.Assert.assertNotNull(days1);
        org.junit.Assert.assertNotNull(days3);
        org.junit.Assert.assertNotNull(mutablePeriod4);
        org.junit.Assert.assertNotNull(days6);
        org.junit.Assert.assertNotNull(days7);
        org.junit.Assert.assertNotNull(days9);
        org.junit.Assert.assertNotNull(days11);
        org.junit.Assert.assertNotNull(durationFieldType12);
        org.junit.Assert.assertNotNull(days14);
        org.junit.Assert.assertNotNull(days16);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNotNull(days19);
        org.junit.Assert.assertNotNull(days20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(durationFieldType24);
        org.junit.Assert.assertNotNull(days26);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertNotNull(days29);
        org.junit.Assert.assertNotNull(days30);
        org.junit.Assert.assertNotNull(days32);
        org.junit.Assert.assertNotNull(days34);
        org.junit.Assert.assertNotNull(durationFieldType35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(days38);
        org.junit.Assert.assertNotNull(days40);
        org.junit.Assert.assertNotNull(days41);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 1 + "'", int42 == 1);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 10 + "'", int44 == 10);
        org.junit.Assert.assertNotNull(durationFieldType45);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + (-1) + "'", int46 == (-1));
    }

    @Test
    public void test0137() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0137");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Days days1 = org.joda.time.Days.daysIn(readableInterval0);
        org.joda.time.ReadableInterval readableInterval2 = null;
        org.joda.time.Days days3 = org.joda.time.Days.daysIn(readableInterval2);
        int int5 = days3.getValue((int) (short) 0);
        org.joda.time.Days days6 = org.joda.time.Days.FIVE;
        org.joda.time.Days days7 = days3.minus(days6);
        org.joda.time.DurationFieldType durationFieldType8 = null;
        boolean boolean9 = days6.isSupported(durationFieldType8);
        org.joda.time.DurationFieldType durationFieldType11 = days6.getFieldType(0);
        int int12 = days1.get(durationFieldType11);
        org.joda.time.ReadableInterval readableInterval13 = null;
        org.joda.time.Days days14 = org.joda.time.Days.daysIn(readableInterval13);
        int int16 = days14.getValue((int) (short) 0);
        org.joda.time.Days days17 = org.joda.time.Days.FIVE;
        org.joda.time.Days days18 = days14.minus(days17);
        org.joda.time.DurationFieldType durationFieldType19 = null;
        int int20 = days17.get(durationFieldType19);
        org.joda.time.DurationFieldType durationFieldType21 = null;
        int int22 = days17.get(durationFieldType21);
        boolean boolean24 = days17.equals((java.lang.Object) 0L);
        boolean boolean25 = days1.isGreaterThan(days17);
        org.joda.time.ReadableInterval readableInterval26 = null;
        org.joda.time.Days days27 = org.joda.time.Days.daysIn(readableInterval26);
        int int29 = days27.getValue((int) (short) 0);
        org.joda.time.Days days30 = org.joda.time.Days.FIVE;
        org.joda.time.Days days31 = days27.minus(days30);
        org.joda.time.DurationFieldType durationFieldType32 = null;
        int int33 = days30.get(durationFieldType32);
        org.joda.time.DurationFieldType durationFieldType34 = null;
        int int35 = days30.get(durationFieldType34);
        boolean boolean37 = days30.equals((java.lang.Object) 0L);
        org.joda.time.Period period38 = days30.toPeriod();
        org.joda.time.Days days39 = days1.plus(days30);
        org.joda.time.ReadableInterval readableInterval40 = null;
        org.joda.time.Days days41 = org.joda.time.Days.daysIn(readableInterval40);
        int int43 = days41.getValue((int) (short) 0);
        org.joda.time.Period period44 = days41.toPeriod();
        org.joda.time.Days days45 = org.joda.time.Days.standardDaysIn((org.joda.time.ReadablePeriod) days41);
        boolean boolean46 = days1.equals((java.lang.Object) days45);
        org.joda.time.ReadableInterval readableInterval47 = null;
        org.joda.time.Days days48 = org.joda.time.Days.daysIn(readableInterval47);
        int int50 = days48.getValue((int) (short) 0);
        org.joda.time.Days days51 = org.joda.time.Days.FIVE;
        org.joda.time.Days days52 = days48.minus(days51);
        org.joda.time.DurationFieldType durationFieldType53 = null;
        boolean boolean54 = days51.isSupported(durationFieldType53);
        org.joda.time.DurationFieldType durationFieldType56 = days51.getFieldType(0);
        boolean boolean57 = days45.isSupported(durationFieldType56);
        org.joda.time.Period period58 = days45.toPeriod();
        org.junit.Assert.assertNotNull(days1);
        org.junit.Assert.assertNotNull(days3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(days6);
        org.junit.Assert.assertNotNull(days7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(durationFieldType11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNotNull(days14);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertNotNull(days17);
        org.junit.Assert.assertNotNull(days18);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(days27);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertNotNull(days30);
        org.junit.Assert.assertNotNull(days31);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(period38);
        org.junit.Assert.assertNotNull(days39);
        org.junit.Assert.assertNotNull(days41);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0);
        org.junit.Assert.assertNotNull(period44);
        org.junit.Assert.assertNotNull(days45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(days48);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 0 + "'", int50 == 0);
        org.junit.Assert.assertNotNull(days51);
        org.junit.Assert.assertNotNull(days52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(durationFieldType56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(period58);
    }

    @Test
    public void test0138() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0138");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Days days1 = org.joda.time.Days.daysIn(readableInterval0);
        int int3 = days1.getValue((int) (short) 0);
        org.joda.time.Days days4 = org.joda.time.Days.FIVE;
        org.joda.time.Days days5 = days1.minus(days4);
        org.joda.time.ReadableInterval readableInterval6 = null;
        org.joda.time.Days days7 = org.joda.time.Days.daysIn(readableInterval6);
        int int9 = days7.getValue((int) (short) 0);
        int int10 = days1.compareTo((org.joda.time.base.BaseSingleFieldPeriod) days7);
        org.joda.time.ReadableInterval readableInterval11 = null;
        org.joda.time.Days days12 = org.joda.time.Days.daysIn(readableInterval11);
        int int14 = days12.getValue((int) (short) 0);
        org.joda.time.Days days15 = org.joda.time.Days.FIVE;
        org.joda.time.Days days16 = days12.minus(days15);
        org.joda.time.DurationFieldType durationFieldType17 = null;
        int int18 = days15.get(durationFieldType17);
        org.joda.time.DurationFieldType durationFieldType19 = null;
        int int20 = days15.get(durationFieldType19);
        boolean boolean22 = days15.equals((java.lang.Object) false);
        boolean boolean23 = days7.equals((java.lang.Object) days15);
        org.joda.time.Period period24 = days7.toPeriod();
        org.joda.time.Days days25 = org.joda.time.Days.standardDaysIn((org.joda.time.ReadablePeriod) period24);
        org.junit.Assert.assertNotNull(days1);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(days4);
        org.junit.Assert.assertNotNull(days5);
        org.junit.Assert.assertNotNull(days7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(days12);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNotNull(days15);
        org.junit.Assert.assertNotNull(days16);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(period24);
        org.junit.Assert.assertNotNull(days25);
    }

    @Test
    public void test0139() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0139");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Days days1 = org.joda.time.Days.daysIn(readableInterval0);
        int int3 = days1.getValue((int) (short) 0);
        org.joda.time.ReadableInterval readableInterval4 = null;
        org.joda.time.Days days5 = org.joda.time.Days.daysIn(readableInterval4);
        int int7 = days5.getValue((int) (short) 0);
        org.joda.time.Days days8 = org.joda.time.Days.FIVE;
        org.joda.time.Days days9 = days5.minus(days8);
        int int10 = days1.compareTo((org.joda.time.base.BaseSingleFieldPeriod) days8);
        java.lang.String str11 = days1.toString();
        org.joda.time.Days days13 = days1.plus((int) '4');
        org.joda.time.PeriodType periodType14 = days13.getPeriodType();
        int int15 = days13.getDays();
        org.joda.time.Days days17 = days13.minus((int) ' ');
        org.joda.time.Period period18 = days17.toPeriod();
        org.joda.time.Days days20 = days17.multipliedBy((int) ' ');
        int int21 = days17.getDays();
        org.junit.Assert.assertNotNull(days1);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(days5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(days8);
        org.junit.Assert.assertNotNull(days9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "P0D" + "'", str11, "P0D");
        org.junit.Assert.assertNotNull(days13);
        org.junit.Assert.assertNotNull(periodType14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 52 + "'", int15 == 52);
        org.junit.Assert.assertNotNull(days17);
        org.junit.Assert.assertNotNull(period18);
        org.junit.Assert.assertNotNull(days20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 20 + "'", int21 == 20);
    }

    @Test
    public void test0140() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0140");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Days days1 = org.joda.time.Days.daysIn(readableInterval0);
        org.joda.time.Days days3 = days1.plus((int) (byte) 10);
        int int4 = days3.getDays();
        int int5 = days3.getDays();
        org.joda.time.Days days6 = org.joda.time.Days.FIVE;
        org.joda.time.ReadableInterval readableInterval7 = null;
        org.joda.time.Days days8 = org.joda.time.Days.daysIn(readableInterval7);
        int int10 = days8.getValue((int) (short) 0);
        org.joda.time.ReadableInterval readableInterval11 = null;
        org.joda.time.Days days12 = org.joda.time.Days.daysIn(readableInterval11);
        int int14 = days12.getValue((int) (short) 0);
        org.joda.time.Days days15 = org.joda.time.Days.FIVE;
        org.joda.time.Days days16 = days12.minus(days15);
        int int17 = days8.compareTo((org.joda.time.base.BaseSingleFieldPeriod) days15);
        org.joda.time.ReadableInterval readableInterval18 = null;
        org.joda.time.Days days19 = org.joda.time.Days.daysIn(readableInterval18);
        int int21 = days19.getValue((int) (short) 0);
        org.joda.time.Days days22 = org.joda.time.Days.FIVE;
        org.joda.time.Days days23 = days19.minus(days22);
        org.joda.time.DurationFieldType durationFieldType24 = null;
        boolean boolean25 = days22.isSupported(durationFieldType24);
        org.joda.time.DurationFieldType durationFieldType27 = days22.getFieldType(0);
        int int28 = days8.get(durationFieldType27);
        boolean boolean29 = days6.isSupported(durationFieldType27);
        int int30 = days3.get(durationFieldType27);
        org.joda.time.Days days31 = days3.negated();
        org.junit.Assert.assertNotNull(days1);
        org.junit.Assert.assertNotNull(days3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 10 + "'", int4 == 10);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 10 + "'", int5 == 10);
        org.junit.Assert.assertNotNull(days6);
        org.junit.Assert.assertNotNull(days8);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(days12);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNotNull(days15);
        org.junit.Assert.assertNotNull(days16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertNotNull(days19);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertNotNull(days22);
        org.junit.Assert.assertNotNull(days23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(durationFieldType27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 10 + "'", int30 == 10);
        org.junit.Assert.assertNotNull(days31);
    }

    @Test
    public void test0141() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0141");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Days days1 = org.joda.time.Days.daysIn(readableInterval0);
        org.joda.time.ReadableInterval readableInterval2 = null;
        org.joda.time.Days days3 = org.joda.time.Days.daysIn(readableInterval2);
        int int5 = days3.getValue((int) (short) 0);
        org.joda.time.Days days6 = org.joda.time.Days.FIVE;
        org.joda.time.Days days7 = days3.minus(days6);
        org.joda.time.DurationFieldType durationFieldType8 = null;
        boolean boolean9 = days6.isSupported(durationFieldType8);
        org.joda.time.DurationFieldType durationFieldType11 = days6.getFieldType(0);
        int int12 = days1.get(durationFieldType11);
        org.joda.time.PeriodType periodType13 = days1.getPeriodType();
        org.joda.time.Days days15 = days1.multipliedBy((int) (short) -1);
        int int16 = days1.size();
        org.joda.time.Duration duration17 = days1.toStandardDuration();
        org.joda.time.Duration duration18 = days1.toStandardDuration();
        org.junit.Assert.assertNotNull(days1);
        org.junit.Assert.assertNotNull(days3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(days6);
        org.junit.Assert.assertNotNull(days7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(durationFieldType11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNotNull(periodType13);
        org.junit.Assert.assertNotNull(days15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 1 + "'", int16 == 1);
        org.junit.Assert.assertNotNull(duration17);
        org.junit.Assert.assertNotNull(duration18);
    }

    @Test
    public void test0142() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0142");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Days days1 = org.joda.time.Days.daysIn(readableInterval0);
        org.joda.time.Days days3 = days1.plus((int) (byte) 10);
        org.joda.time.Days days5 = days3.dividedBy((int) 'a');
        org.joda.time.Days days7 = days3.dividedBy(5);
        org.joda.time.Days days9 = days3.plus((int) (byte) -1);
        org.joda.time.Days days11 = days3.minus((int) (byte) 100);
        org.joda.time.Days days13 = days11.dividedBy((int) (byte) 100);
        org.joda.time.Days days15 = days13.dividedBy((-90));
        // The following exception was thrown during execution in test generation
        try {
            int int17 = days13.getValue(6);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 6");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(days1);
        org.junit.Assert.assertNotNull(days3);
        org.junit.Assert.assertNotNull(days5);
        org.junit.Assert.assertNotNull(days7);
        org.junit.Assert.assertNotNull(days9);
        org.junit.Assert.assertNotNull(days11);
        org.junit.Assert.assertNotNull(days13);
        org.junit.Assert.assertNotNull(days15);
    }

    @Test
    public void test0143() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0143");
        org.joda.time.Days days1 = org.joda.time.Days.days((int) (byte) -1);
        org.joda.time.Seconds seconds2 = days1.toStandardSeconds();
        org.junit.Assert.assertNotNull(days1);
        org.junit.Assert.assertNotNull(seconds2);
    }

    @Test
    public void test0144() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0144");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Days days1 = org.joda.time.Days.daysIn(readableInterval0);
        org.joda.time.ReadableInterval readableInterval2 = null;
        org.joda.time.Days days3 = org.joda.time.Days.daysIn(readableInterval2);
        int int5 = days3.getValue((int) (short) 0);
        org.joda.time.Days days6 = org.joda.time.Days.FIVE;
        org.joda.time.Days days7 = days3.minus(days6);
        org.joda.time.DurationFieldType durationFieldType8 = null;
        boolean boolean9 = days6.isSupported(durationFieldType8);
        org.joda.time.DurationFieldType durationFieldType11 = days6.getFieldType(0);
        int int12 = days1.get(durationFieldType11);
        org.joda.time.ReadableInterval readableInterval13 = null;
        org.joda.time.Days days14 = org.joda.time.Days.daysIn(readableInterval13);
        int int16 = days14.getValue((int) (short) 0);
        org.joda.time.Days days17 = org.joda.time.Days.FIVE;
        org.joda.time.Days days18 = days14.minus(days17);
        org.joda.time.DurationFieldType durationFieldType19 = null;
        int int20 = days17.get(durationFieldType19);
        org.joda.time.DurationFieldType durationFieldType21 = null;
        int int22 = days17.get(durationFieldType21);
        boolean boolean24 = days17.equals((java.lang.Object) 0L);
        boolean boolean25 = days1.isGreaterThan(days17);
        org.joda.time.ReadableInterval readableInterval26 = null;
        org.joda.time.Days days27 = org.joda.time.Days.daysIn(readableInterval26);
        int int29 = days27.getValue((int) (short) 0);
        org.joda.time.Days days30 = org.joda.time.Days.FIVE;
        org.joda.time.Days days31 = days27.minus(days30);
        org.joda.time.DurationFieldType durationFieldType32 = null;
        int int33 = days30.get(durationFieldType32);
        org.joda.time.DurationFieldType durationFieldType34 = null;
        int int35 = days30.get(durationFieldType34);
        boolean boolean37 = days30.equals((java.lang.Object) 0L);
        org.joda.time.Period period38 = days30.toPeriod();
        org.joda.time.Days days39 = days1.plus(days30);
        org.joda.time.ReadableInterval readableInterval40 = null;
        org.joda.time.Days days41 = org.joda.time.Days.daysIn(readableInterval40);
        int int43 = days41.getValue((int) (short) 0);
        org.joda.time.Period period44 = days41.toPeriod();
        org.joda.time.Days days45 = org.joda.time.Days.standardDaysIn((org.joda.time.ReadablePeriod) days41);
        boolean boolean46 = days1.equals((java.lang.Object) days45);
        org.joda.time.ReadableInterval readableInterval47 = null;
        org.joda.time.Days days48 = org.joda.time.Days.daysIn(readableInterval47);
        int int50 = days48.getValue((int) (short) 0);
        org.joda.time.Days days51 = org.joda.time.Days.FIVE;
        org.joda.time.Days days52 = days48.minus(days51);
        org.joda.time.DurationFieldType durationFieldType53 = null;
        boolean boolean54 = days51.isSupported(durationFieldType53);
        org.joda.time.DurationFieldType durationFieldType56 = days51.getFieldType(0);
        boolean boolean57 = days45.isSupported(durationFieldType56);
        org.joda.time.Days days59 = days45.plus((int) (byte) 100);
        org.joda.time.Days days61 = days59.minus(1);
        org.junit.Assert.assertNotNull(days1);
        org.junit.Assert.assertNotNull(days3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(days6);
        org.junit.Assert.assertNotNull(days7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(durationFieldType11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNotNull(days14);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertNotNull(days17);
        org.junit.Assert.assertNotNull(days18);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(days27);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertNotNull(days30);
        org.junit.Assert.assertNotNull(days31);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(period38);
        org.junit.Assert.assertNotNull(days39);
        org.junit.Assert.assertNotNull(days41);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0);
        org.junit.Assert.assertNotNull(period44);
        org.junit.Assert.assertNotNull(days45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(days48);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 0 + "'", int50 == 0);
        org.junit.Assert.assertNotNull(days51);
        org.junit.Assert.assertNotNull(days52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(durationFieldType56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(days59);
        org.junit.Assert.assertNotNull(days61);
    }

    @Test
    public void test0145() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0145");
        org.joda.time.Days days1 = org.joda.time.Days.days(1);
        org.joda.time.Days days2 = days1.negated();
        org.joda.time.MutablePeriod mutablePeriod3 = days2.toMutablePeriod();
        org.junit.Assert.assertNotNull(days1);
        org.junit.Assert.assertNotNull(days2);
        org.junit.Assert.assertNotNull(mutablePeriod3);
    }

    @Test
    public void test0146() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0146");
        org.joda.time.Days days0 = org.joda.time.Days.SIX;
        org.joda.time.Days days2 = days0.plus(100);
        org.joda.time.ReadableInterval readableInterval3 = null;
        org.joda.time.Days days4 = org.joda.time.Days.daysIn(readableInterval3);
        int int6 = days4.getValue((int) (short) 0);
        org.joda.time.Days days7 = org.joda.time.Days.FIVE;
        org.joda.time.Days days8 = days4.minus(days7);
        org.joda.time.Days days9 = null;
        org.joda.time.Days days10 = days4.minus(days9);
        org.joda.time.Days days12 = days4.minus((-1));
        org.joda.time.DurationFieldType durationFieldType13 = days4.getFieldType();
        int int14 = days0.get(durationFieldType13);
        org.joda.time.Days days15 = days0.negated();
        org.joda.time.DurationFieldType durationFieldType16 = days15.getFieldType();
        java.lang.Class<?> wildcardClass17 = durationFieldType16.getClass();
        org.junit.Assert.assertNotNull(days0);
        org.junit.Assert.assertNotNull(days2);
        org.junit.Assert.assertNotNull(days4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNotNull(days7);
        org.junit.Assert.assertNotNull(days8);
        org.junit.Assert.assertNotNull(days10);
        org.junit.Assert.assertNotNull(days12);
        org.junit.Assert.assertNotNull(durationFieldType13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 6 + "'", int14 == 6);
        org.junit.Assert.assertNotNull(days15);
        org.junit.Assert.assertNotNull(durationFieldType16);
        org.junit.Assert.assertNotNull(wildcardClass17);
    }

    @Test
    public void test0147() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0147");
        org.joda.time.Days days0 = org.joda.time.Days.MAX_VALUE;
        org.joda.time.Days days1 = days0.negated();
        org.joda.time.PeriodType periodType2 = days0.getPeriodType();
        org.joda.time.ReadableInterval readableInterval3 = null;
        org.joda.time.Days days4 = org.joda.time.Days.daysIn(readableInterval3);
        int int6 = days4.getValue((int) (short) 0);
        org.joda.time.Days days7 = org.joda.time.Days.FIVE;
        org.joda.time.Days days8 = days4.minus(days7);
        org.joda.time.DurationFieldType durationFieldType9 = null;
        int int10 = days7.get(durationFieldType9);
        org.joda.time.Days days12 = days7.dividedBy(100);
        int int13 = days0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) days7);
        org.joda.time.PeriodType periodType14 = days7.getPeriodType();
        org.joda.time.DurationFieldType durationFieldType15 = days7.getFieldType();
        org.joda.time.PeriodType periodType16 = days7.getPeriodType();
        org.junit.Assert.assertNotNull(days0);
        org.junit.Assert.assertNotNull(days1);
        org.junit.Assert.assertNotNull(periodType2);
        org.junit.Assert.assertNotNull(days4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNotNull(days7);
        org.junit.Assert.assertNotNull(days8);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(days12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertNotNull(periodType14);
        org.junit.Assert.assertNotNull(durationFieldType15);
        org.junit.Assert.assertNotNull(periodType16);
    }

    @Test
    public void test0148() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0148");
        org.joda.time.Days days0 = org.joda.time.Days.THREE;
        org.joda.time.ReadableInterval readableInterval1 = null;
        org.joda.time.Days days2 = org.joda.time.Days.daysIn(readableInterval1);
        org.joda.time.ReadableInterval readableInterval3 = null;
        org.joda.time.Days days4 = org.joda.time.Days.daysIn(readableInterval3);
        int int6 = days4.getValue((int) (short) 0);
        org.joda.time.Days days7 = org.joda.time.Days.FIVE;
        org.joda.time.Days days8 = days4.minus(days7);
        org.joda.time.DurationFieldType durationFieldType9 = null;
        boolean boolean10 = days7.isSupported(durationFieldType9);
        org.joda.time.DurationFieldType durationFieldType12 = days7.getFieldType(0);
        int int13 = days2.get(durationFieldType12);
        org.joda.time.ReadableInterval readableInterval14 = null;
        org.joda.time.Days days15 = org.joda.time.Days.daysIn(readableInterval14);
        int int17 = days15.getValue((int) (short) 0);
        org.joda.time.Days days18 = org.joda.time.Days.FIVE;
        org.joda.time.Days days19 = days15.minus(days18);
        org.joda.time.DurationFieldType durationFieldType20 = null;
        int int21 = days18.get(durationFieldType20);
        org.joda.time.DurationFieldType durationFieldType22 = null;
        int int23 = days18.get(durationFieldType22);
        boolean boolean25 = days18.equals((java.lang.Object) 0L);
        boolean boolean26 = days2.isGreaterThan(days18);
        org.joda.time.ReadableInterval readableInterval27 = null;
        org.joda.time.Days days28 = org.joda.time.Days.daysIn(readableInterval27);
        int int30 = days28.getValue((int) (short) 0);
        org.joda.time.Days days31 = org.joda.time.Days.FIVE;
        org.joda.time.Days days32 = days28.minus(days31);
        org.joda.time.DurationFieldType durationFieldType33 = null;
        int int34 = days31.get(durationFieldType33);
        org.joda.time.DurationFieldType durationFieldType35 = null;
        int int36 = days31.get(durationFieldType35);
        boolean boolean38 = days31.equals((java.lang.Object) 0L);
        org.joda.time.Period period39 = days31.toPeriod();
        org.joda.time.Days days40 = days2.plus(days31);
        boolean boolean41 = days0.isGreaterThan(days40);
        org.joda.time.Days days43 = days40.dividedBy(42);
        // The following exception was thrown during execution in test generation
        try {
            int int45 = days43.getValue(1);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 1");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(days0);
        org.junit.Assert.assertNotNull(days2);
        org.junit.Assert.assertNotNull(days4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNotNull(days7);
        org.junit.Assert.assertNotNull(days8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(durationFieldType12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(days15);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNotNull(days18);
        org.junit.Assert.assertNotNull(days19);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(days28);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertNotNull(days31);
        org.junit.Assert.assertNotNull(days32);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(period39);
        org.junit.Assert.assertNotNull(days40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(days43);
    }

    @Test
    public void test0149() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0149");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Days days1 = org.joda.time.Days.daysIn(readableInterval0);
        org.joda.time.Days days3 = days1.plus((int) (byte) 10);
        org.joda.time.DurationFieldType durationFieldType4 = days3.getFieldType();
        org.joda.time.Days days6 = days3.plus(0);
        org.joda.time.ReadableInterval readableInterval7 = null;
        org.joda.time.Days days8 = org.joda.time.Days.daysIn(readableInterval7);
        int int10 = days8.getValue((int) (short) 0);
        org.joda.time.Days days11 = org.joda.time.Days.FIVE;
        org.joda.time.Days days12 = days8.minus(days11);
        org.joda.time.DurationFieldType durationFieldType13 = null;
        boolean boolean14 = days11.isSupported(durationFieldType13);
        org.joda.time.DurationFieldType durationFieldType16 = days11.getFieldType(0);
        org.joda.time.ReadableInterval readableInterval17 = null;
        org.joda.time.Days days18 = org.joda.time.Days.daysIn(readableInterval17);
        int int20 = days18.getValue((int) (short) 0);
        org.joda.time.Days days21 = org.joda.time.Days.FIVE;
        org.joda.time.Days days22 = days18.minus(days21);
        org.joda.time.Days days23 = null;
        org.joda.time.Days days24 = days18.minus(days23);
        org.joda.time.Days days26 = days18.minus((-1));
        org.joda.time.DurationFieldType durationFieldType27 = days18.getFieldType();
        boolean boolean28 = days11.isGreaterThan(days18);
        org.joda.time.ReadableInterval readableInterval29 = null;
        org.joda.time.Days days30 = org.joda.time.Days.daysIn(readableInterval29);
        org.joda.time.Days days32 = days30.plus((int) (byte) 10);
        org.joda.time.Days days33 = days18.plus(days32);
        int int34 = days6.compareTo((org.joda.time.base.BaseSingleFieldPeriod) days18);
        int int36 = days6.getValue((int) (byte) 0);
        org.joda.time.Days days37 = org.joda.time.Days.THREE;
        org.joda.time.ReadableInterval readableInterval38 = null;
        org.joda.time.Days days39 = org.joda.time.Days.daysIn(readableInterval38);
        org.joda.time.ReadableInterval readableInterval40 = null;
        org.joda.time.Days days41 = org.joda.time.Days.daysIn(readableInterval40);
        int int43 = days41.getValue((int) (short) 0);
        org.joda.time.Days days44 = org.joda.time.Days.FIVE;
        org.joda.time.Days days45 = days41.minus(days44);
        org.joda.time.DurationFieldType durationFieldType46 = null;
        boolean boolean47 = days44.isSupported(durationFieldType46);
        org.joda.time.DurationFieldType durationFieldType49 = days44.getFieldType(0);
        int int50 = days39.get(durationFieldType49);
        org.joda.time.ReadableInterval readableInterval51 = null;
        org.joda.time.Days days52 = org.joda.time.Days.daysIn(readableInterval51);
        int int54 = days52.getValue((int) (short) 0);
        org.joda.time.Days days55 = org.joda.time.Days.FIVE;
        org.joda.time.Days days56 = days52.minus(days55);
        org.joda.time.DurationFieldType durationFieldType57 = null;
        int int58 = days55.get(durationFieldType57);
        org.joda.time.DurationFieldType durationFieldType59 = null;
        int int60 = days55.get(durationFieldType59);
        boolean boolean62 = days55.equals((java.lang.Object) 0L);
        boolean boolean63 = days39.isGreaterThan(days55);
        org.joda.time.ReadableInterval readableInterval64 = null;
        org.joda.time.Days days65 = org.joda.time.Days.daysIn(readableInterval64);
        int int67 = days65.getValue((int) (short) 0);
        org.joda.time.Days days68 = org.joda.time.Days.FIVE;
        org.joda.time.Days days69 = days65.minus(days68);
        org.joda.time.DurationFieldType durationFieldType70 = null;
        int int71 = days68.get(durationFieldType70);
        org.joda.time.DurationFieldType durationFieldType72 = null;
        int int73 = days68.get(durationFieldType72);
        boolean boolean75 = days68.equals((java.lang.Object) 0L);
        org.joda.time.Period period76 = days68.toPeriod();
        org.joda.time.Days days77 = days39.plus(days68);
        boolean boolean78 = days37.isGreaterThan(days77);
        org.joda.time.ReadableInterval readableInterval79 = null;
        org.joda.time.Days days80 = org.joda.time.Days.daysIn(readableInterval79);
        org.joda.time.Days days82 = days80.plus((int) (byte) 10);
        org.joda.time.Days days84 = days82.dividedBy((int) 'a');
        int int85 = days77.compareTo((org.joda.time.base.BaseSingleFieldPeriod) days82);
        boolean boolean86 = days6.isLessThan(days77);
        org.joda.time.ReadableInterval readableInterval87 = null;
        org.joda.time.Days days88 = org.joda.time.Days.daysIn(readableInterval87);
        org.joda.time.Days days90 = days88.plus((int) (byte) 10);
        org.joda.time.Days days92 = days90.dividedBy((int) 'a');
        org.joda.time.Days days94 = days90.dividedBy(5);
        org.joda.time.Days days96 = days90.plus((int) (byte) -1);
        org.joda.time.Days days97 = days6.plus(days90);
        java.lang.Class<?> wildcardClass98 = days6.getClass();
        org.junit.Assert.assertNotNull(days1);
        org.junit.Assert.assertNotNull(days3);
        org.junit.Assert.assertNotNull(durationFieldType4);
        org.junit.Assert.assertNotNull(days6);
        org.junit.Assert.assertNotNull(days8);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(days11);
        org.junit.Assert.assertNotNull(days12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(durationFieldType16);
        org.junit.Assert.assertNotNull(days18);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertNotNull(days21);
        org.junit.Assert.assertNotNull(days22);
        org.junit.Assert.assertNotNull(days24);
        org.junit.Assert.assertNotNull(days26);
        org.junit.Assert.assertNotNull(durationFieldType27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(days30);
        org.junit.Assert.assertNotNull(days32);
        org.junit.Assert.assertNotNull(days33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 1 + "'", int34 == 1);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 10 + "'", int36 == 10);
        org.junit.Assert.assertNotNull(days37);
        org.junit.Assert.assertNotNull(days39);
        org.junit.Assert.assertNotNull(days41);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0);
        org.junit.Assert.assertNotNull(days44);
        org.junit.Assert.assertNotNull(days45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(durationFieldType49);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 0 + "'", int50 == 0);
        org.junit.Assert.assertNotNull(days52);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 0 + "'", int54 == 0);
        org.junit.Assert.assertNotNull(days55);
        org.junit.Assert.assertNotNull(days56);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 0 + "'", int58 == 0);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 0 + "'", int60 == 0);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(days65);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 0 + "'", int67 == 0);
        org.junit.Assert.assertNotNull(days68);
        org.junit.Assert.assertNotNull(days69);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 0 + "'", int71 == 0);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 0 + "'", int73 == 0);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNotNull(period76);
        org.junit.Assert.assertNotNull(days77);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertNotNull(days80);
        org.junit.Assert.assertNotNull(days82);
        org.junit.Assert.assertNotNull(days84);
        org.junit.Assert.assertTrue("'" + int85 + "' != '" + (-1) + "'", int85 == (-1));
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertNotNull(days88);
        org.junit.Assert.assertNotNull(days90);
        org.junit.Assert.assertNotNull(days92);
        org.junit.Assert.assertNotNull(days94);
        org.junit.Assert.assertNotNull(days96);
        org.junit.Assert.assertNotNull(days97);
        org.junit.Assert.assertNotNull(wildcardClass98);
    }

    @Test
    public void test0150() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0150");
        org.joda.time.Days days0 = org.joda.time.Days.SIX;
        org.joda.time.Days days2 = days0.plus(100);
        org.joda.time.ReadableInterval readableInterval3 = null;
        org.joda.time.Days days4 = org.joda.time.Days.daysIn(readableInterval3);
        int int6 = days4.getValue((int) (short) 0);
        org.joda.time.Days days7 = org.joda.time.Days.FIVE;
        org.joda.time.Days days8 = days4.minus(days7);
        org.joda.time.Days days9 = null;
        org.joda.time.Days days10 = days4.minus(days9);
        org.joda.time.Days days12 = days4.minus((-1));
        org.joda.time.DurationFieldType durationFieldType13 = days4.getFieldType();
        int int14 = days0.get(durationFieldType13);
        org.joda.time.Days days15 = days0.negated();
        org.joda.time.ReadableInterval readableInterval16 = null;
        org.joda.time.Days days17 = org.joda.time.Days.daysIn(readableInterval16);
        int int19 = days17.getValue((int) (short) 0);
        org.joda.time.Days days20 = org.joda.time.Days.FIVE;
        org.joda.time.Days days21 = days17.minus(days20);
        org.joda.time.DurationFieldType durationFieldType22 = null;
        boolean boolean23 = days20.isSupported(durationFieldType22);
        org.joda.time.DurationFieldType durationFieldType25 = days20.getFieldType(0);
        org.joda.time.Period period26 = days20.toPeriod();
        int int28 = days20.getValue(0);
        org.joda.time.Days days29 = org.joda.time.Days.TWO;
        org.joda.time.DurationFieldType durationFieldType30 = days29.getFieldType();
        int int31 = days20.get(durationFieldType30);
        org.joda.time.Days days33 = days20.minus((int) (short) -1);
        org.joda.time.Days days34 = days15.plus(days20);
        org.joda.time.ReadableInterval readableInterval35 = null;
        org.joda.time.Days days36 = org.joda.time.Days.daysIn(readableInterval35);
        org.joda.time.Days days38 = days36.plus((int) (byte) 10);
        java.lang.String str39 = days38.toString();
        org.joda.time.PeriodType periodType40 = days38.getPeriodType();
        org.joda.time.Days days42 = days38.multipliedBy((int) (byte) 1);
        boolean boolean43 = days20.equals((java.lang.Object) (byte) 1);
        org.junit.Assert.assertNotNull(days0);
        org.junit.Assert.assertNotNull(days2);
        org.junit.Assert.assertNotNull(days4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNotNull(days7);
        org.junit.Assert.assertNotNull(days8);
        org.junit.Assert.assertNotNull(days10);
        org.junit.Assert.assertNotNull(days12);
        org.junit.Assert.assertNotNull(durationFieldType13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 6 + "'", int14 == 6);
        org.junit.Assert.assertNotNull(days15);
        org.junit.Assert.assertNotNull(days17);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertNotNull(days20);
        org.junit.Assert.assertNotNull(days21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(durationFieldType25);
        org.junit.Assert.assertNotNull(period26);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 5 + "'", int28 == 5);
        org.junit.Assert.assertNotNull(days29);
        org.junit.Assert.assertNotNull(durationFieldType30);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 5 + "'", int31 == 5);
        org.junit.Assert.assertNotNull(days33);
        org.junit.Assert.assertNotNull(days34);
        org.junit.Assert.assertNotNull(days36);
        org.junit.Assert.assertNotNull(days38);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "P10D" + "'", str39, "P10D");
        org.junit.Assert.assertNotNull(periodType40);
        org.junit.Assert.assertNotNull(days42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
    }

    @Test
    public void test0151() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0151");
        org.joda.time.Days days0 = org.joda.time.Days.ONE;
        org.joda.time.Duration duration1 = days0.toStandardDuration();
        org.joda.time.Hours hours2 = days0.toStandardHours();
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.DurationFieldType durationFieldType4 = hours2.getFieldType(5);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 5");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(days0);
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertNotNull(hours2);
    }

    @Test
    public void test0152() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0152");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Days days1 = org.joda.time.Days.daysIn(readableInterval0);
        org.joda.time.ReadableInterval readableInterval2 = null;
        org.joda.time.Days days3 = org.joda.time.Days.daysIn(readableInterval2);
        int int5 = days3.getValue((int) (short) 0);
        org.joda.time.Days days6 = org.joda.time.Days.FIVE;
        org.joda.time.Days days7 = days3.minus(days6);
        org.joda.time.DurationFieldType durationFieldType8 = null;
        boolean boolean9 = days6.isSupported(durationFieldType8);
        org.joda.time.DurationFieldType durationFieldType11 = days6.getFieldType(0);
        int int12 = days1.get(durationFieldType11);
        org.joda.time.PeriodType periodType13 = days1.getPeriodType();
        org.joda.time.Days days15 = days1.minus(3);
        java.lang.Class<?> wildcardClass16 = days15.getClass();
        org.junit.Assert.assertNotNull(days1);
        org.junit.Assert.assertNotNull(days3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(days6);
        org.junit.Assert.assertNotNull(days7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(durationFieldType11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNotNull(periodType13);
        org.junit.Assert.assertNotNull(days15);
        org.junit.Assert.assertNotNull(wildcardClass16);
    }

    @Test
    public void test0153() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0153");
        org.joda.time.Days days0 = org.joda.time.Days.ZERO;
        org.joda.time.ReadableInterval readableInterval1 = null;
        org.joda.time.Days days2 = org.joda.time.Days.daysIn(readableInterval1);
        int int4 = days2.getValue((int) (short) 0);
        org.joda.time.Days days5 = org.joda.time.Days.FIVE;
        org.joda.time.Days days6 = days2.minus(days5);
        org.joda.time.Days days7 = null;
        org.joda.time.Days days8 = days2.minus(days7);
        org.joda.time.Duration duration9 = days2.toStandardDuration();
        org.joda.time.DurationFieldType durationFieldType10 = days2.getFieldType();
        org.joda.time.Days days11 = days0.minus(days2);
        org.joda.time.Days days12 = org.joda.time.Days.SIX;
        org.joda.time.Days days14 = days12.plus(100);
        org.joda.time.ReadableInterval readableInterval15 = null;
        org.joda.time.Days days16 = org.joda.time.Days.daysIn(readableInterval15);
        int int18 = days16.getValue((int) (short) 0);
        org.joda.time.Days days19 = org.joda.time.Days.FIVE;
        org.joda.time.Days days20 = days16.minus(days19);
        org.joda.time.Days days21 = null;
        org.joda.time.Days days22 = days16.minus(days21);
        org.joda.time.Days days24 = days16.minus((-1));
        org.joda.time.DurationFieldType durationFieldType25 = days16.getFieldType();
        int int26 = days12.get(durationFieldType25);
        int int27 = days11.get(durationFieldType25);
        org.joda.time.Days days29 = org.joda.time.Days.days(1);
        org.joda.time.ReadableInterval readableInterval30 = null;
        org.joda.time.Days days31 = org.joda.time.Days.daysIn(readableInterval30);
        int int33 = days31.getValue((int) (short) 0);
        org.joda.time.Days days34 = org.joda.time.Days.FIVE;
        org.joda.time.Days days35 = days31.minus(days34);
        org.joda.time.DurationFieldType durationFieldType36 = null;
        boolean boolean37 = days34.isSupported(durationFieldType36);
        org.joda.time.DurationFieldType durationFieldType39 = days34.getFieldType(0);
        org.joda.time.ReadableInterval readableInterval40 = null;
        org.joda.time.Days days41 = org.joda.time.Days.daysIn(readableInterval40);
        int int43 = days41.getValue((int) (short) 0);
        org.joda.time.Days days44 = org.joda.time.Days.FIVE;
        org.joda.time.Days days45 = days41.minus(days44);
        org.joda.time.Days days46 = null;
        org.joda.time.Days days47 = days41.minus(days46);
        org.joda.time.Days days49 = days41.minus((-1));
        org.joda.time.DurationFieldType durationFieldType50 = days41.getFieldType();
        boolean boolean51 = days34.isGreaterThan(days41);
        org.joda.time.ReadableInterval readableInterval52 = null;
        org.joda.time.Days days53 = org.joda.time.Days.daysIn(readableInterval52);
        org.joda.time.Days days55 = days53.plus((int) (byte) 10);
        org.joda.time.Days days56 = days41.plus(days55);
        org.joda.time.MutablePeriod mutablePeriod57 = days55.toMutablePeriod();
        org.joda.time.PeriodType periodType58 = days55.getPeriodType();
        org.joda.time.Days days59 = days29.minus(days55);
        org.joda.time.Days days60 = days11.minus(days29);
        org.joda.time.Duration duration61 = days11.toStandardDuration();
        org.junit.Assert.assertNotNull(days0);
        org.junit.Assert.assertNotNull(days2);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(days5);
        org.junit.Assert.assertNotNull(days6);
        org.junit.Assert.assertNotNull(days8);
        org.junit.Assert.assertNotNull(duration9);
        org.junit.Assert.assertNotNull(durationFieldType10);
        org.junit.Assert.assertNotNull(days11);
        org.junit.Assert.assertNotNull(days12);
        org.junit.Assert.assertNotNull(days14);
        org.junit.Assert.assertNotNull(days16);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNotNull(days19);
        org.junit.Assert.assertNotNull(days20);
        org.junit.Assert.assertNotNull(days22);
        org.junit.Assert.assertNotNull(days24);
        org.junit.Assert.assertNotNull(durationFieldType25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 6 + "'", int26 == 6);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertNotNull(days29);
        org.junit.Assert.assertNotNull(days31);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertNotNull(days34);
        org.junit.Assert.assertNotNull(days35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(durationFieldType39);
        org.junit.Assert.assertNotNull(days41);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0);
        org.junit.Assert.assertNotNull(days44);
        org.junit.Assert.assertNotNull(days45);
        org.junit.Assert.assertNotNull(days47);
        org.junit.Assert.assertNotNull(days49);
        org.junit.Assert.assertNotNull(durationFieldType50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(days53);
        org.junit.Assert.assertNotNull(days55);
        org.junit.Assert.assertNotNull(days56);
        org.junit.Assert.assertNotNull(mutablePeriod57);
        org.junit.Assert.assertNotNull(periodType58);
        org.junit.Assert.assertNotNull(days59);
        org.junit.Assert.assertNotNull(days60);
        org.junit.Assert.assertNotNull(duration61);
    }

    @Test
    public void test0154() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0154");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Days days1 = org.joda.time.Days.daysIn(readableInterval0);
        int int3 = days1.getValue((int) (short) 0);
        org.joda.time.Days days4 = org.joda.time.Days.FIVE;
        org.joda.time.Days days5 = days1.minus(days4);
        org.joda.time.DurationFieldType durationFieldType6 = null;
        int int7 = days4.get(durationFieldType6);
        org.joda.time.DurationFieldType durationFieldType8 = null;
        int int9 = days4.get(durationFieldType8);
        boolean boolean11 = days4.equals((java.lang.Object) 0L);
        org.joda.time.DurationFieldType durationFieldType12 = days4.getFieldType();
        org.joda.time.Days days13 = days4.negated();
        org.joda.time.ReadableInterval readableInterval14 = null;
        org.joda.time.Days days15 = org.joda.time.Days.daysIn(readableInterval14);
        int int17 = days15.getValue((int) (short) 0);
        org.joda.time.Days days18 = org.joda.time.Days.FIVE;
        org.joda.time.Days days19 = days15.minus(days18);
        org.joda.time.DurationFieldType durationFieldType20 = null;
        int int21 = days18.get(durationFieldType20);
        org.joda.time.DurationFieldType durationFieldType22 = null;
        int int23 = days18.get(durationFieldType22);
        boolean boolean25 = days18.equals((java.lang.Object) 0L);
        int int26 = days18.getDays();
        org.joda.time.Days days27 = days13.minus(days18);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.DurationFieldType durationFieldType29 = days27.getFieldType(100);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 100");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(days1);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(days4);
        org.junit.Assert.assertNotNull(days5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(durationFieldType12);
        org.junit.Assert.assertNotNull(days13);
        org.junit.Assert.assertNotNull(days15);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNotNull(days18);
        org.junit.Assert.assertNotNull(days19);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 5 + "'", int26 == 5);
        org.junit.Assert.assertNotNull(days27);
    }

    @Test
    public void test0155() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0155");
        org.joda.time.Days days0 = org.joda.time.Days.THREE;
        org.joda.time.ReadableInterval readableInterval1 = null;
        org.joda.time.Days days2 = org.joda.time.Days.daysIn(readableInterval1);
        org.joda.time.ReadableInterval readableInterval3 = null;
        org.joda.time.Days days4 = org.joda.time.Days.daysIn(readableInterval3);
        int int6 = days4.getValue((int) (short) 0);
        org.joda.time.Days days7 = org.joda.time.Days.FIVE;
        org.joda.time.Days days8 = days4.minus(days7);
        org.joda.time.DurationFieldType durationFieldType9 = null;
        boolean boolean10 = days7.isSupported(durationFieldType9);
        org.joda.time.DurationFieldType durationFieldType12 = days7.getFieldType(0);
        int int13 = days2.get(durationFieldType12);
        org.joda.time.ReadableInterval readableInterval14 = null;
        org.joda.time.Days days15 = org.joda.time.Days.daysIn(readableInterval14);
        int int17 = days15.getValue((int) (short) 0);
        org.joda.time.Days days18 = org.joda.time.Days.FIVE;
        org.joda.time.Days days19 = days15.minus(days18);
        org.joda.time.DurationFieldType durationFieldType20 = null;
        int int21 = days18.get(durationFieldType20);
        org.joda.time.DurationFieldType durationFieldType22 = null;
        int int23 = days18.get(durationFieldType22);
        boolean boolean25 = days18.equals((java.lang.Object) 0L);
        boolean boolean26 = days2.isGreaterThan(days18);
        org.joda.time.ReadableInterval readableInterval27 = null;
        org.joda.time.Days days28 = org.joda.time.Days.daysIn(readableInterval27);
        int int30 = days28.getValue((int) (short) 0);
        org.joda.time.Days days31 = org.joda.time.Days.FIVE;
        org.joda.time.Days days32 = days28.minus(days31);
        org.joda.time.DurationFieldType durationFieldType33 = null;
        int int34 = days31.get(durationFieldType33);
        org.joda.time.DurationFieldType durationFieldType35 = null;
        int int36 = days31.get(durationFieldType35);
        boolean boolean38 = days31.equals((java.lang.Object) 0L);
        org.joda.time.Period period39 = days31.toPeriod();
        org.joda.time.Days days40 = days2.plus(days31);
        boolean boolean41 = days0.isGreaterThan(days40);
        org.joda.time.ReadableInterval readableInterval42 = null;
        org.joda.time.Days days43 = org.joda.time.Days.daysIn(readableInterval42);
        org.joda.time.Days days45 = days43.plus((int) (byte) 10);
        org.joda.time.Days days47 = days45.dividedBy((int) 'a');
        int int48 = days40.compareTo((org.joda.time.base.BaseSingleFieldPeriod) days45);
        org.joda.time.Days days50 = days45.dividedBy((int) ' ');
        int int51 = days50.size();
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.DurationFieldType durationFieldType53 = days50.getFieldType(42);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 42");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(days0);
        org.junit.Assert.assertNotNull(days2);
        org.junit.Assert.assertNotNull(days4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNotNull(days7);
        org.junit.Assert.assertNotNull(days8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(durationFieldType12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(days15);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNotNull(days18);
        org.junit.Assert.assertNotNull(days19);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(days28);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertNotNull(days31);
        org.junit.Assert.assertNotNull(days32);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(period39);
        org.junit.Assert.assertNotNull(days40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(days43);
        org.junit.Assert.assertNotNull(days45);
        org.junit.Assert.assertNotNull(days47);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + (-1) + "'", int48 == (-1));
        org.junit.Assert.assertNotNull(days50);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 1 + "'", int51 == 1);
    }

    @Test
    public void test0156() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0156");
        org.joda.time.Days days1 = org.joda.time.Days.days(2147483647);
        int int2 = days1.getDays();
        org.junit.Assert.assertNotNull(days1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 2147483647 + "'", int2 == 2147483647);
    }

    @Test
    public void test0157() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0157");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Days days1 = org.joda.time.Days.daysIn(readableInterval0);
        int int3 = days1.getValue((int) (short) 0);
        org.joda.time.Days days4 = org.joda.time.Days.FIVE;
        org.joda.time.Days days5 = days1.minus(days4);
        org.joda.time.Days days6 = null;
        org.joda.time.Days days7 = days1.minus(days6);
        org.joda.time.Days days9 = days7.minus(100);
        org.joda.time.ReadableInterval readableInterval10 = null;
        org.joda.time.Days days11 = org.joda.time.Days.daysIn(readableInterval10);
        int int13 = days11.getValue((int) (short) 0);
        org.joda.time.Days days14 = org.joda.time.Days.FIVE;
        org.joda.time.Days days15 = days11.minus(days14);
        org.joda.time.Days days16 = null;
        org.joda.time.Days days17 = days11.minus(days16);
        org.joda.time.Days days19 = days11.minus((-1));
        org.joda.time.Days days20 = days7.plus(days11);
        org.joda.time.ReadableInterval readableInterval21 = null;
        org.joda.time.Days days22 = org.joda.time.Days.daysIn(readableInterval21);
        int int24 = days22.getValue((int) (short) 0);
        org.joda.time.Days days25 = org.joda.time.Days.FIVE;
        org.joda.time.Days days26 = days22.minus(days25);
        org.joda.time.DurationFieldType durationFieldType27 = null;
        int int28 = days25.get(durationFieldType27);
        org.joda.time.DurationFieldType durationFieldType29 = null;
        int int30 = days25.get(durationFieldType29);
        boolean boolean32 = days25.equals((java.lang.Object) 0L);
        org.joda.time.DurationFieldType durationFieldType33 = days25.getFieldType();
        int int34 = days20.get(durationFieldType33);
        java.lang.Class<?> wildcardClass35 = durationFieldType33.getClass();
        org.junit.Assert.assertNotNull(days1);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(days4);
        org.junit.Assert.assertNotNull(days5);
        org.junit.Assert.assertNotNull(days7);
        org.junit.Assert.assertNotNull(days9);
        org.junit.Assert.assertNotNull(days11);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(days14);
        org.junit.Assert.assertNotNull(days15);
        org.junit.Assert.assertNotNull(days17);
        org.junit.Assert.assertNotNull(days19);
        org.junit.Assert.assertNotNull(days20);
        org.junit.Assert.assertNotNull(days22);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertNotNull(days25);
        org.junit.Assert.assertNotNull(days26);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(durationFieldType33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertNotNull(wildcardClass35);
    }

    @Test
    public void test0158() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0158");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Days days1 = org.joda.time.Days.daysIn(readableInterval0);
        int int3 = days1.getValue((int) (short) 0);
        org.joda.time.Days days4 = org.joda.time.Days.FIVE;
        org.joda.time.Days days5 = days1.minus(days4);
        org.joda.time.DurationFieldType durationFieldType6 = null;
        int int7 = days4.get(durationFieldType6);
        org.joda.time.DurationFieldType durationFieldType8 = null;
        int int9 = days4.get(durationFieldType8);
        boolean boolean11 = days4.equals((java.lang.Object) 0L);
        org.joda.time.DurationFieldType durationFieldType12 = days4.getFieldType();
        org.joda.time.Days days13 = days4.negated();
        org.joda.time.ReadableInterval readableInterval14 = null;
        org.joda.time.Days days15 = org.joda.time.Days.daysIn(readableInterval14);
        int int17 = days15.getValue((int) (short) 0);
        org.joda.time.Days days18 = org.joda.time.Days.FIVE;
        org.joda.time.Days days19 = days15.minus(days18);
        org.joda.time.DurationFieldType durationFieldType20 = null;
        int int21 = days18.get(durationFieldType20);
        org.joda.time.DurationFieldType durationFieldType22 = null;
        int int23 = days18.get(durationFieldType22);
        boolean boolean25 = days18.equals((java.lang.Object) 0L);
        int int26 = days18.getDays();
        org.joda.time.Days days27 = days13.minus(days18);
        org.joda.time.Days days28 = org.joda.time.Days.ZERO;
        org.joda.time.ReadableInterval readableInterval29 = null;
        org.joda.time.Days days30 = org.joda.time.Days.daysIn(readableInterval29);
        int int32 = days30.getValue((int) (short) 0);
        org.joda.time.Days days33 = org.joda.time.Days.FIVE;
        org.joda.time.Days days34 = days30.minus(days33);
        org.joda.time.Days days35 = null;
        org.joda.time.Days days36 = days30.minus(days35);
        org.joda.time.Duration duration37 = days30.toStandardDuration();
        org.joda.time.DurationFieldType durationFieldType38 = days30.getFieldType();
        org.joda.time.Days days39 = days28.minus(days30);
        org.joda.time.ReadableInterval readableInterval40 = null;
        org.joda.time.Days days41 = org.joda.time.Days.daysIn(readableInterval40);
        int int43 = days41.getValue((int) (short) 0);
        org.joda.time.Days days44 = org.joda.time.Days.FIVE;
        org.joda.time.Days days45 = days41.minus(days44);
        org.joda.time.DurationFieldType durationFieldType46 = null;
        int int47 = days44.get(durationFieldType46);
        org.joda.time.DurationFieldType durationFieldType48 = null;
        int int49 = days44.get(durationFieldType48);
        boolean boolean51 = days44.equals((java.lang.Object) 0L);
        org.joda.time.DurationFieldType durationFieldType52 = days44.getFieldType();
        org.joda.time.Days days53 = days44.negated();
        org.joda.time.ReadableInterval readableInterval54 = null;
        org.joda.time.Days days55 = org.joda.time.Days.daysIn(readableInterval54);
        int int57 = days55.getValue((int) (short) 0);
        org.joda.time.Days days58 = org.joda.time.Days.FIVE;
        org.joda.time.Days days59 = days55.minus(days58);
        org.joda.time.DurationFieldType durationFieldType60 = null;
        int int61 = days58.get(durationFieldType60);
        org.joda.time.DurationFieldType durationFieldType62 = null;
        int int63 = days58.get(durationFieldType62);
        boolean boolean65 = days58.equals((java.lang.Object) 0L);
        int int66 = days58.getDays();
        org.joda.time.Days days67 = days53.minus(days58);
        org.joda.time.Days days68 = days39.minus(days53);
        boolean boolean69 = days27.isLessThan(days39);
        org.joda.time.Days days70 = org.joda.time.Days.standardDaysIn((org.joda.time.ReadablePeriod) days39);
        org.junit.Assert.assertNotNull(days1);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(days4);
        org.junit.Assert.assertNotNull(days5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(durationFieldType12);
        org.junit.Assert.assertNotNull(days13);
        org.junit.Assert.assertNotNull(days15);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNotNull(days18);
        org.junit.Assert.assertNotNull(days19);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 5 + "'", int26 == 5);
        org.junit.Assert.assertNotNull(days27);
        org.junit.Assert.assertNotNull(days28);
        org.junit.Assert.assertNotNull(days30);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertNotNull(days33);
        org.junit.Assert.assertNotNull(days34);
        org.junit.Assert.assertNotNull(days36);
        org.junit.Assert.assertNotNull(duration37);
        org.junit.Assert.assertNotNull(durationFieldType38);
        org.junit.Assert.assertNotNull(days39);
        org.junit.Assert.assertNotNull(days41);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0);
        org.junit.Assert.assertNotNull(days44);
        org.junit.Assert.assertNotNull(days45);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 0 + "'", int47 == 0);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 0 + "'", int49 == 0);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(durationFieldType52);
        org.junit.Assert.assertNotNull(days53);
        org.junit.Assert.assertNotNull(days55);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 0 + "'", int57 == 0);
        org.junit.Assert.assertNotNull(days58);
        org.junit.Assert.assertNotNull(days59);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 0 + "'", int61 == 0);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 0 + "'", int63 == 0);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 5 + "'", int66 == 5);
        org.junit.Assert.assertNotNull(days67);
        org.junit.Assert.assertNotNull(days68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertNotNull(days70);
    }

    @Test
    public void test0159() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0159");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Days days1 = org.joda.time.Days.daysIn(readableInterval0);
        org.joda.time.Days days3 = days1.plus((int) (byte) 10);
        org.joda.time.Days days5 = days3.dividedBy((int) 'a');
        org.joda.time.Days days7 = days3.dividedBy(5);
        org.joda.time.Days days9 = days3.plus((int) (byte) -1);
        org.joda.time.Days days11 = days3.minus((int) (byte) 100);
        org.joda.time.Days days13 = days11.dividedBy((int) (byte) 100);
        org.joda.time.Days days14 = org.joda.time.Days.standardDaysIn((org.joda.time.ReadablePeriod) days11);
        org.junit.Assert.assertNotNull(days1);
        org.junit.Assert.assertNotNull(days3);
        org.junit.Assert.assertNotNull(days5);
        org.junit.Assert.assertNotNull(days7);
        org.junit.Assert.assertNotNull(days9);
        org.junit.Assert.assertNotNull(days11);
        org.junit.Assert.assertNotNull(days13);
        org.junit.Assert.assertNotNull(days14);
    }

    @Test
    public void test0160() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0160");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Days days1 = org.joda.time.Days.daysIn(readableInterval0);
        org.joda.time.Days days3 = days1.plus((int) (byte) 10);
        org.joda.time.Days days5 = days3.dividedBy((int) 'a');
        org.joda.time.Days days7 = days3.dividedBy(5);
        org.joda.time.Days days9 = days3.plus((int) (byte) -1);
        org.joda.time.Days days11 = days3.minus((int) (byte) 100);
        org.joda.time.Days days12 = days11.negated();
        int int13 = days11.size();
        org.joda.time.ReadableInterval readableInterval14 = null;
        org.joda.time.Days days15 = org.joda.time.Days.daysIn(readableInterval14);
        int int17 = days15.getValue((int) (short) 0);
        org.joda.time.Days days18 = org.joda.time.Days.FIVE;
        org.joda.time.Days days19 = days15.minus(days18);
        org.joda.time.Days days20 = null;
        org.joda.time.Days days21 = days15.minus(days20);
        org.joda.time.Duration duration22 = days15.toStandardDuration();
        org.joda.time.DurationFieldType durationFieldType23 = days15.getFieldType();
        org.joda.time.Days days24 = days11.minus(days15);
        org.joda.time.Days days25 = org.joda.time.Days.ZERO;
        org.joda.time.ReadableInterval readableInterval26 = null;
        org.joda.time.Days days27 = org.joda.time.Days.daysIn(readableInterval26);
        int int29 = days27.getValue((int) (short) 0);
        org.joda.time.Days days30 = org.joda.time.Days.FIVE;
        org.joda.time.Days days31 = days27.minus(days30);
        org.joda.time.Days days32 = null;
        org.joda.time.Days days33 = days27.minus(days32);
        org.joda.time.Duration duration34 = days27.toStandardDuration();
        org.joda.time.DurationFieldType durationFieldType35 = days27.getFieldType();
        org.joda.time.Days days36 = days25.minus(days27);
        org.joda.time.Days days38 = days36.plus((int) (byte) 100);
        org.joda.time.Days days39 = days36.negated();
        org.joda.time.Days days40 = days15.minus(days39);
        org.joda.time.ReadableInterval readableInterval41 = null;
        org.joda.time.Days days42 = org.joda.time.Days.daysIn(readableInterval41);
        int int44 = days42.getValue((int) (short) 0);
        org.joda.time.Period period45 = days42.toPeriod();
        org.joda.time.Days days46 = org.joda.time.Days.standardDaysIn((org.joda.time.ReadablePeriod) days42);
        org.joda.time.DurationFieldType durationFieldType47 = days42.getFieldType();
        int int48 = days39.get(durationFieldType47);
        org.junit.Assert.assertNotNull(days1);
        org.junit.Assert.assertNotNull(days3);
        org.junit.Assert.assertNotNull(days5);
        org.junit.Assert.assertNotNull(days7);
        org.junit.Assert.assertNotNull(days9);
        org.junit.Assert.assertNotNull(days11);
        org.junit.Assert.assertNotNull(days12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertNotNull(days15);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNotNull(days18);
        org.junit.Assert.assertNotNull(days19);
        org.junit.Assert.assertNotNull(days21);
        org.junit.Assert.assertNotNull(duration22);
        org.junit.Assert.assertNotNull(durationFieldType23);
        org.junit.Assert.assertNotNull(days24);
        org.junit.Assert.assertNotNull(days25);
        org.junit.Assert.assertNotNull(days27);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertNotNull(days30);
        org.junit.Assert.assertNotNull(days31);
        org.junit.Assert.assertNotNull(days33);
        org.junit.Assert.assertNotNull(duration34);
        org.junit.Assert.assertNotNull(durationFieldType35);
        org.junit.Assert.assertNotNull(days36);
        org.junit.Assert.assertNotNull(days38);
        org.junit.Assert.assertNotNull(days39);
        org.junit.Assert.assertNotNull(days40);
        org.junit.Assert.assertNotNull(days42);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 0 + "'", int44 == 0);
        org.junit.Assert.assertNotNull(period45);
        org.junit.Assert.assertNotNull(days46);
        org.junit.Assert.assertNotNull(durationFieldType47);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 0 + "'", int48 == 0);
    }

    @Test
    public void test0161() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0161");
        org.joda.time.Days days0 = org.joda.time.Days.SIX;
        org.joda.time.Days days2 = days0.plus(100);
        org.joda.time.Days days4 = days0.plus((int) (byte) 1);
        org.joda.time.ReadableInterval readableInterval5 = null;
        org.joda.time.Days days6 = org.joda.time.Days.daysIn(readableInterval5);
        org.joda.time.Days days8 = days6.plus((int) (byte) 10);
        org.joda.time.DurationFieldType durationFieldType9 = days8.getFieldType();
        org.joda.time.Days days11 = days8.plus(0);
        org.joda.time.ReadableInterval readableInterval12 = null;
        org.joda.time.Days days13 = org.joda.time.Days.daysIn(readableInterval12);
        int int15 = days13.getValue((int) (short) 0);
        org.joda.time.Days days16 = org.joda.time.Days.FIVE;
        org.joda.time.Days days17 = days13.minus(days16);
        org.joda.time.DurationFieldType durationFieldType18 = null;
        boolean boolean19 = days16.isSupported(durationFieldType18);
        org.joda.time.DurationFieldType durationFieldType21 = days16.getFieldType(0);
        org.joda.time.ReadableInterval readableInterval22 = null;
        org.joda.time.Days days23 = org.joda.time.Days.daysIn(readableInterval22);
        int int25 = days23.getValue((int) (short) 0);
        org.joda.time.Days days26 = org.joda.time.Days.FIVE;
        org.joda.time.Days days27 = days23.minus(days26);
        org.joda.time.Days days28 = null;
        org.joda.time.Days days29 = days23.minus(days28);
        org.joda.time.Days days31 = days23.minus((-1));
        org.joda.time.DurationFieldType durationFieldType32 = days23.getFieldType();
        boolean boolean33 = days16.isGreaterThan(days23);
        org.joda.time.ReadableInterval readableInterval34 = null;
        org.joda.time.Days days35 = org.joda.time.Days.daysIn(readableInterval34);
        org.joda.time.Days days37 = days35.plus((int) (byte) 10);
        org.joda.time.Days days38 = days23.plus(days37);
        int int39 = days11.compareTo((org.joda.time.base.BaseSingleFieldPeriod) days23);
        int int40 = days0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) days23);
        org.joda.time.ReadableInterval readableInterval41 = null;
        org.joda.time.Days days42 = org.joda.time.Days.daysIn(readableInterval41);
        int int44 = days42.getValue((int) (short) 0);
        org.joda.time.ReadableInterval readableInterval45 = null;
        org.joda.time.Days days46 = org.joda.time.Days.daysIn(readableInterval45);
        int int48 = days46.getValue((int) (short) 0);
        org.joda.time.Days days49 = org.joda.time.Days.FIVE;
        org.joda.time.Days days50 = days46.minus(days49);
        int int51 = days42.compareTo((org.joda.time.base.BaseSingleFieldPeriod) days49);
        org.joda.time.DurationFieldType durationFieldType52 = days49.getFieldType();
        org.joda.time.ReadableInterval readableInterval53 = null;
        org.joda.time.Days days54 = org.joda.time.Days.daysIn(readableInterval53);
        int int56 = days54.getValue((int) (short) 0);
        org.joda.time.Days days57 = org.joda.time.Days.FIVE;
        org.joda.time.Days days58 = days54.minus(days57);
        org.joda.time.DurationFieldType durationFieldType59 = null;
        boolean boolean60 = days57.isSupported(durationFieldType59);
        org.joda.time.DurationFieldType durationFieldType62 = days57.getFieldType(0);
        org.joda.time.ReadableInterval readableInterval63 = null;
        org.joda.time.Days days64 = org.joda.time.Days.daysIn(readableInterval63);
        int int66 = days64.getValue((int) (short) 0);
        org.joda.time.Days days67 = org.joda.time.Days.FIVE;
        org.joda.time.Days days68 = days64.minus(days67);
        org.joda.time.Days days69 = null;
        org.joda.time.Days days70 = days64.minus(days69);
        org.joda.time.Days days72 = days64.minus((-1));
        org.joda.time.DurationFieldType durationFieldType73 = days64.getFieldType();
        boolean boolean74 = days57.isGreaterThan(days64);
        org.joda.time.ReadableInterval readableInterval75 = null;
        org.joda.time.Days days76 = org.joda.time.Days.daysIn(readableInterval75);
        org.joda.time.Days days78 = days76.plus((int) (byte) 10);
        org.joda.time.Days days79 = days64.plus(days78);
        org.joda.time.Days days80 = org.joda.time.Days.standardDaysIn((org.joda.time.ReadablePeriod) days64);
        boolean boolean81 = days49.isLessThan(days80);
        org.joda.time.Days days82 = days0.plus(days80);
        int int83 = days0.size();
        org.junit.Assert.assertNotNull(days0);
        org.junit.Assert.assertNotNull(days2);
        org.junit.Assert.assertNotNull(days4);
        org.junit.Assert.assertNotNull(days6);
        org.junit.Assert.assertNotNull(days8);
        org.junit.Assert.assertNotNull(durationFieldType9);
        org.junit.Assert.assertNotNull(days11);
        org.junit.Assert.assertNotNull(days13);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNotNull(days16);
        org.junit.Assert.assertNotNull(days17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(durationFieldType21);
        org.junit.Assert.assertNotNull(days23);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertNotNull(days26);
        org.junit.Assert.assertNotNull(days27);
        org.junit.Assert.assertNotNull(days29);
        org.junit.Assert.assertNotNull(days31);
        org.junit.Assert.assertNotNull(durationFieldType32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(days35);
        org.junit.Assert.assertNotNull(days37);
        org.junit.Assert.assertNotNull(days38);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 1 + "'", int39 == 1);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 1 + "'", int40 == 1);
        org.junit.Assert.assertNotNull(days42);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 0 + "'", int44 == 0);
        org.junit.Assert.assertNotNull(days46);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 0 + "'", int48 == 0);
        org.junit.Assert.assertNotNull(days49);
        org.junit.Assert.assertNotNull(days50);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + (-1) + "'", int51 == (-1));
        org.junit.Assert.assertNotNull(durationFieldType52);
        org.junit.Assert.assertNotNull(days54);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 0 + "'", int56 == 0);
        org.junit.Assert.assertNotNull(days57);
        org.junit.Assert.assertNotNull(days58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(durationFieldType62);
        org.junit.Assert.assertNotNull(days64);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 0 + "'", int66 == 0);
        org.junit.Assert.assertNotNull(days67);
        org.junit.Assert.assertNotNull(days68);
        org.junit.Assert.assertNotNull(days70);
        org.junit.Assert.assertNotNull(days72);
        org.junit.Assert.assertNotNull(durationFieldType73);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertNotNull(days76);
        org.junit.Assert.assertNotNull(days78);
        org.junit.Assert.assertNotNull(days79);
        org.junit.Assert.assertNotNull(days80);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertNotNull(days82);
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + 1 + "'", int83 == 1);
    }

    @Test
    public void test0162() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0162");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Days days1 = org.joda.time.Days.daysIn(readableInterval0);
        org.joda.time.Days days3 = days1.plus((int) (byte) 10);
        int int4 = days3.getDays();
        org.joda.time.Period period5 = days3.toPeriod();
        java.lang.String str6 = days3.toString();
        org.junit.Assert.assertNotNull(days1);
        org.junit.Assert.assertNotNull(days3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 10 + "'", int4 == 10);
        org.junit.Assert.assertNotNull(period5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "P10D" + "'", str6, "P10D");
    }

    @Test
    public void test0163() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0163");
        org.joda.time.Days days1 = org.joda.time.Days.days((int) (short) 100);
        org.junit.Assert.assertNotNull(days1);
    }

    @Test
    public void test0164() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0164");
        org.joda.time.Days days0 = org.joda.time.Days.ZERO;
        org.joda.time.ReadableInterval readableInterval1 = null;
        org.joda.time.Days days2 = org.joda.time.Days.daysIn(readableInterval1);
        int int4 = days2.getValue((int) (short) 0);
        org.joda.time.Days days5 = org.joda.time.Days.FIVE;
        org.joda.time.Days days6 = days2.minus(days5);
        org.joda.time.Days days7 = null;
        org.joda.time.Days days8 = days2.minus(days7);
        org.joda.time.Duration duration9 = days2.toStandardDuration();
        org.joda.time.DurationFieldType durationFieldType10 = days2.getFieldType();
        org.joda.time.Days days11 = days0.minus(days2);
        org.joda.time.Days days12 = org.joda.time.Days.SIX;
        org.joda.time.Days days14 = days12.plus(100);
        org.joda.time.ReadableInterval readableInterval15 = null;
        org.joda.time.Days days16 = org.joda.time.Days.daysIn(readableInterval15);
        int int18 = days16.getValue((int) (short) 0);
        org.joda.time.Days days19 = org.joda.time.Days.FIVE;
        org.joda.time.Days days20 = days16.minus(days19);
        org.joda.time.Days days21 = null;
        org.joda.time.Days days22 = days16.minus(days21);
        org.joda.time.Days days24 = days16.minus((-1));
        org.joda.time.DurationFieldType durationFieldType25 = days16.getFieldType();
        int int26 = days12.get(durationFieldType25);
        int int27 = days11.get(durationFieldType25);
        org.joda.time.Days days29 = org.joda.time.Days.days(1);
        org.joda.time.ReadableInterval readableInterval30 = null;
        org.joda.time.Days days31 = org.joda.time.Days.daysIn(readableInterval30);
        int int33 = days31.getValue((int) (short) 0);
        org.joda.time.Days days34 = org.joda.time.Days.FIVE;
        org.joda.time.Days days35 = days31.minus(days34);
        org.joda.time.DurationFieldType durationFieldType36 = null;
        boolean boolean37 = days34.isSupported(durationFieldType36);
        org.joda.time.DurationFieldType durationFieldType39 = days34.getFieldType(0);
        org.joda.time.ReadableInterval readableInterval40 = null;
        org.joda.time.Days days41 = org.joda.time.Days.daysIn(readableInterval40);
        int int43 = days41.getValue((int) (short) 0);
        org.joda.time.Days days44 = org.joda.time.Days.FIVE;
        org.joda.time.Days days45 = days41.minus(days44);
        org.joda.time.Days days46 = null;
        org.joda.time.Days days47 = days41.minus(days46);
        org.joda.time.Days days49 = days41.minus((-1));
        org.joda.time.DurationFieldType durationFieldType50 = days41.getFieldType();
        boolean boolean51 = days34.isGreaterThan(days41);
        org.joda.time.ReadableInterval readableInterval52 = null;
        org.joda.time.Days days53 = org.joda.time.Days.daysIn(readableInterval52);
        org.joda.time.Days days55 = days53.plus((int) (byte) 10);
        org.joda.time.Days days56 = days41.plus(days55);
        org.joda.time.MutablePeriod mutablePeriod57 = days55.toMutablePeriod();
        org.joda.time.PeriodType periodType58 = days55.getPeriodType();
        org.joda.time.Days days59 = days29.minus(days55);
        org.joda.time.Days days60 = days11.minus(days29);
        org.joda.time.Days days62 = days60.plus(5);
        org.junit.Assert.assertNotNull(days0);
        org.junit.Assert.assertNotNull(days2);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(days5);
        org.junit.Assert.assertNotNull(days6);
        org.junit.Assert.assertNotNull(days8);
        org.junit.Assert.assertNotNull(duration9);
        org.junit.Assert.assertNotNull(durationFieldType10);
        org.junit.Assert.assertNotNull(days11);
        org.junit.Assert.assertNotNull(days12);
        org.junit.Assert.assertNotNull(days14);
        org.junit.Assert.assertNotNull(days16);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNotNull(days19);
        org.junit.Assert.assertNotNull(days20);
        org.junit.Assert.assertNotNull(days22);
        org.junit.Assert.assertNotNull(days24);
        org.junit.Assert.assertNotNull(durationFieldType25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 6 + "'", int26 == 6);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertNotNull(days29);
        org.junit.Assert.assertNotNull(days31);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertNotNull(days34);
        org.junit.Assert.assertNotNull(days35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(durationFieldType39);
        org.junit.Assert.assertNotNull(days41);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0);
        org.junit.Assert.assertNotNull(days44);
        org.junit.Assert.assertNotNull(days45);
        org.junit.Assert.assertNotNull(days47);
        org.junit.Assert.assertNotNull(days49);
        org.junit.Assert.assertNotNull(durationFieldType50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(days53);
        org.junit.Assert.assertNotNull(days55);
        org.junit.Assert.assertNotNull(days56);
        org.junit.Assert.assertNotNull(mutablePeriod57);
        org.junit.Assert.assertNotNull(periodType58);
        org.junit.Assert.assertNotNull(days59);
        org.junit.Assert.assertNotNull(days60);
        org.junit.Assert.assertNotNull(days62);
    }

    @Test
    public void test0165() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0165");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Days days1 = org.joda.time.Days.daysIn(readableInterval0);
        int int3 = days1.getValue((int) (short) 0);
        org.joda.time.Period period4 = days1.toPeriod();
        org.joda.time.Days days5 = org.joda.time.Days.standardDaysIn((org.joda.time.ReadablePeriod) days1);
        org.joda.time.Duration duration6 = days1.toStandardDuration();
        org.joda.time.Days days8 = days1.multipliedBy((int) (byte) 10);
        // The following exception was thrown during execution in test generation
        try {
            int int10 = days8.getValue(97);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 97");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(days1);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(days5);
        org.junit.Assert.assertNotNull(duration6);
        org.junit.Assert.assertNotNull(days8);
    }

    @Test
    public void test0166() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0166");
        org.joda.time.Days days1 = org.joda.time.Days.days((int) (byte) 10);
        org.joda.time.ReadableInterval readableInterval2 = null;
        org.joda.time.Days days3 = org.joda.time.Days.daysIn(readableInterval2);
        org.joda.time.Days days5 = days3.plus((int) (byte) 10);
        org.joda.time.MutablePeriod mutablePeriod6 = days3.toMutablePeriod();
        org.joda.time.Days days8 = days3.plus((int) (short) -1);
        org.joda.time.ReadableInterval readableInterval9 = null;
        org.joda.time.Days days10 = org.joda.time.Days.daysIn(readableInterval9);
        int int12 = days10.getValue((int) (short) 0);
        org.joda.time.Days days13 = org.joda.time.Days.FIVE;
        org.joda.time.Days days14 = days10.minus(days13);
        org.joda.time.Days days15 = null;
        org.joda.time.Days days16 = days10.minus(days15);
        org.joda.time.Days days18 = days10.minus((-1));
        int int19 = days10.size();
        boolean boolean20 = days3.isGreaterThan(days10);
        org.joda.time.DurationFieldType durationFieldType22 = days10.getFieldType((int) (short) 0);
        int int23 = days1.get(durationFieldType22);
        java.lang.Class<?> wildcardClass24 = days1.getClass();
        org.junit.Assert.assertNotNull(days1);
        org.junit.Assert.assertNotNull(days3);
        org.junit.Assert.assertNotNull(days5);
        org.junit.Assert.assertNotNull(mutablePeriod6);
        org.junit.Assert.assertNotNull(days8);
        org.junit.Assert.assertNotNull(days10);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNotNull(days13);
        org.junit.Assert.assertNotNull(days14);
        org.junit.Assert.assertNotNull(days16);
        org.junit.Assert.assertNotNull(days18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 1 + "'", int19 == 1);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(durationFieldType22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 10 + "'", int23 == 10);
        org.junit.Assert.assertNotNull(wildcardClass24);
    }

    @Test
    public void test0167() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0167");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Days days1 = org.joda.time.Days.daysIn(readableInterval0);
        int int3 = days1.getValue((int) (short) 0);
        org.joda.time.Days days4 = org.joda.time.Days.FIVE;
        org.joda.time.Days days5 = days1.minus(days4);
        org.joda.time.Days days6 = null;
        org.joda.time.Days days7 = days1.minus(days6);
        org.joda.time.ReadableInterval readableInterval8 = null;
        org.joda.time.Days days9 = org.joda.time.Days.daysIn(readableInterval8);
        org.joda.time.ReadableInterval readableInterval10 = null;
        org.joda.time.Days days11 = org.joda.time.Days.daysIn(readableInterval10);
        int int13 = days11.getValue((int) (short) 0);
        org.joda.time.Days days14 = org.joda.time.Days.FIVE;
        org.joda.time.Days days15 = days11.minus(days14);
        org.joda.time.DurationFieldType durationFieldType16 = null;
        boolean boolean17 = days14.isSupported(durationFieldType16);
        org.joda.time.DurationFieldType durationFieldType19 = days14.getFieldType(0);
        int int20 = days9.get(durationFieldType19);
        org.joda.time.PeriodType periodType21 = days9.getPeriodType();
        org.joda.time.Days days22 = days1.plus(days9);
        org.joda.time.Days days23 = org.joda.time.Days.standardDaysIn((org.joda.time.ReadablePeriod) days22);
        int int24 = days23.getDays();
        org.junit.Assert.assertNotNull(days1);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(days4);
        org.junit.Assert.assertNotNull(days5);
        org.junit.Assert.assertNotNull(days7);
        org.junit.Assert.assertNotNull(days9);
        org.junit.Assert.assertNotNull(days11);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(days14);
        org.junit.Assert.assertNotNull(days15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(durationFieldType19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertNotNull(periodType21);
        org.junit.Assert.assertNotNull(days22);
        org.junit.Assert.assertNotNull(days23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
    }

    @Test
    public void test0168() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0168");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Days days1 = org.joda.time.Days.daysIn(readableInterval0);
        int int3 = days1.getValue((int) (short) 0);
        org.joda.time.ReadableInterval readableInterval4 = null;
        org.joda.time.Days days5 = org.joda.time.Days.daysIn(readableInterval4);
        int int7 = days5.getValue((int) (short) 0);
        org.joda.time.Days days8 = org.joda.time.Days.FIVE;
        org.joda.time.Days days9 = days5.minus(days8);
        int int10 = days1.compareTo((org.joda.time.base.BaseSingleFieldPeriod) days8);
        org.joda.time.DurationFieldType durationFieldType11 = days8.getFieldType();
        java.lang.Class<?> wildcardClass12 = days8.getClass();
        org.junit.Assert.assertNotNull(days1);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(days5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(days8);
        org.junit.Assert.assertNotNull(days9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertNotNull(durationFieldType11);
        org.junit.Assert.assertNotNull(wildcardClass12);
    }

    @Test
    public void test0169() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0169");
        org.joda.time.Days days0 = org.joda.time.Days.MAX_VALUE;
        org.joda.time.Days days1 = days0.negated();
        org.joda.time.PeriodType periodType2 = days0.getPeriodType();
        org.joda.time.ReadableInterval readableInterval3 = null;
        org.joda.time.Days days4 = org.joda.time.Days.daysIn(readableInterval3);
        int int6 = days4.getValue((int) (short) 0);
        org.joda.time.Days days7 = org.joda.time.Days.FIVE;
        org.joda.time.Days days8 = days4.minus(days7);
        org.joda.time.DurationFieldType durationFieldType9 = null;
        int int10 = days7.get(durationFieldType9);
        org.joda.time.Days days12 = days7.dividedBy(100);
        int int13 = days0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) days7);
        int int14 = days0.getDays();
        java.lang.String str15 = days0.toString();
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Minutes minutes16 = days0.toStandardMinutes();
            org.junit.Assert.fail("Expected exception of type java.lang.ArithmeticException; message: Multiplication overflows an int: 2147483647 * 1440");
        } catch (java.lang.ArithmeticException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(days0);
        org.junit.Assert.assertNotNull(days1);
        org.junit.Assert.assertNotNull(periodType2);
        org.junit.Assert.assertNotNull(days4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNotNull(days7);
        org.junit.Assert.assertNotNull(days8);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(days12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 2147483647 + "'", int14 == 2147483647);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "P2147483647D" + "'", str15, "P2147483647D");
    }

    @Test
    public void test0170() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0170");
        org.joda.time.Days days0 = org.joda.time.Days.MAX_VALUE;
        org.joda.time.Days days1 = days0.negated();
        org.joda.time.PeriodType periodType2 = days0.getPeriodType();
        org.joda.time.ReadableInterval readableInterval3 = null;
        org.joda.time.Days days4 = org.joda.time.Days.daysIn(readableInterval3);
        int int6 = days4.getValue((int) (short) 0);
        org.joda.time.Days days7 = org.joda.time.Days.FIVE;
        org.joda.time.Days days8 = days4.minus(days7);
        org.joda.time.DurationFieldType durationFieldType9 = null;
        int int10 = days7.get(durationFieldType9);
        org.joda.time.Days days12 = days7.dividedBy(100);
        int int13 = days0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) days7);
        org.joda.time.PeriodType periodType14 = days7.getPeriodType();
        org.joda.time.Days days15 = org.joda.time.Days.TWO;
        org.joda.time.DurationFieldType durationFieldType16 = days15.getFieldType();
        int int17 = days7.get(durationFieldType16);
        org.joda.time.Days days18 = org.joda.time.Days.standardDaysIn((org.joda.time.ReadablePeriod) days7);
        org.joda.time.Days days20 = days7.dividedBy((int) (short) 100);
        org.junit.Assert.assertNotNull(days0);
        org.junit.Assert.assertNotNull(days1);
        org.junit.Assert.assertNotNull(periodType2);
        org.junit.Assert.assertNotNull(days4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNotNull(days7);
        org.junit.Assert.assertNotNull(days8);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(days12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertNotNull(periodType14);
        org.junit.Assert.assertNotNull(days15);
        org.junit.Assert.assertNotNull(durationFieldType16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 5 + "'", int17 == 5);
        org.junit.Assert.assertNotNull(days18);
        org.junit.Assert.assertNotNull(days20);
    }

    @Test
    public void test0171() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0171");
        org.joda.time.Days days0 = org.joda.time.Days.SIX;
        org.joda.time.Days days2 = days0.plus(100);
        org.joda.time.ReadableInterval readableInterval3 = null;
        org.joda.time.Days days4 = org.joda.time.Days.daysIn(readableInterval3);
        int int6 = days4.getValue((int) (short) 0);
        org.joda.time.Days days7 = org.joda.time.Days.FIVE;
        org.joda.time.Days days8 = days4.minus(days7);
        org.joda.time.Days days9 = null;
        org.joda.time.Days days10 = days4.minus(days9);
        org.joda.time.Days days12 = days4.minus((-1));
        org.joda.time.DurationFieldType durationFieldType13 = days4.getFieldType();
        int int14 = days0.get(durationFieldType13);
        org.joda.time.Days days15 = days0.negated();
        org.joda.time.ReadableInterval readableInterval16 = null;
        org.joda.time.Days days17 = org.joda.time.Days.daysIn(readableInterval16);
        int int19 = days17.getValue((int) (short) 0);
        org.joda.time.Days days20 = org.joda.time.Days.FIVE;
        org.joda.time.Days days21 = days17.minus(days20);
        org.joda.time.ReadableInterval readableInterval22 = null;
        org.joda.time.Days days23 = org.joda.time.Days.daysIn(readableInterval22);
        int int25 = days23.getValue((int) (short) 0);
        int int26 = days17.compareTo((org.joda.time.base.BaseSingleFieldPeriod) days23);
        org.joda.time.ReadableInterval readableInterval27 = null;
        org.joda.time.Days days28 = org.joda.time.Days.daysIn(readableInterval27);
        int int30 = days28.getValue((int) (short) 0);
        org.joda.time.Days days31 = org.joda.time.Days.FIVE;
        org.joda.time.Days days32 = days28.minus(days31);
        org.joda.time.DurationFieldType durationFieldType33 = null;
        int int34 = days31.get(durationFieldType33);
        org.joda.time.DurationFieldType durationFieldType35 = null;
        int int36 = days31.get(durationFieldType35);
        boolean boolean38 = days31.equals((java.lang.Object) false);
        boolean boolean39 = days23.equals((java.lang.Object) days31);
        boolean boolean40 = days15.isGreaterThan(days31);
        org.joda.time.DurationFieldType durationFieldType41 = days15.getFieldType();
        java.lang.String str42 = days15.toString();
        org.junit.Assert.assertNotNull(days0);
        org.junit.Assert.assertNotNull(days2);
        org.junit.Assert.assertNotNull(days4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNotNull(days7);
        org.junit.Assert.assertNotNull(days8);
        org.junit.Assert.assertNotNull(days10);
        org.junit.Assert.assertNotNull(days12);
        org.junit.Assert.assertNotNull(durationFieldType13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 6 + "'", int14 == 6);
        org.junit.Assert.assertNotNull(days15);
        org.junit.Assert.assertNotNull(days17);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertNotNull(days20);
        org.junit.Assert.assertNotNull(days21);
        org.junit.Assert.assertNotNull(days23);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertNotNull(days28);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertNotNull(days31);
        org.junit.Assert.assertNotNull(days32);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(durationFieldType41);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "P-6D" + "'", str42, "P-6D");
    }

    @Test
    public void test0172() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0172");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Days days1 = org.joda.time.Days.daysIn(readableInterval0);
        org.joda.time.Days days3 = days1.plus((int) (byte) 10);
        org.joda.time.Days days5 = days3.dividedBy((int) 'a');
        org.joda.time.Days days7 = days3.dividedBy(5);
        org.joda.time.Days days9 = days3.plus((int) (byte) -1);
        org.joda.time.Days days11 = days3.dividedBy((int) (byte) -1);
        java.lang.String str12 = days3.toString();
        int int13 = days3.size();
        org.junit.Assert.assertNotNull(days1);
        org.junit.Assert.assertNotNull(days3);
        org.junit.Assert.assertNotNull(days5);
        org.junit.Assert.assertNotNull(days7);
        org.junit.Assert.assertNotNull(days9);
        org.junit.Assert.assertNotNull(days11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "P10D" + "'", str12, "P10D");
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
    }

    @Test
    public void test0173() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0173");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Days days1 = org.joda.time.Days.daysIn(readableInterval0);
        org.joda.time.Days days3 = days1.plus((int) (byte) 10);
        org.joda.time.MutablePeriod mutablePeriod4 = days1.toMutablePeriod();
        org.joda.time.Days days6 = days1.plus((int) (short) -1);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.DurationFieldType durationFieldType8 = days6.getFieldType(10);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 10");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(days1);
        org.junit.Assert.assertNotNull(days3);
        org.junit.Assert.assertNotNull(mutablePeriod4);
        org.junit.Assert.assertNotNull(days6);
    }

    @Test
    public void test0174() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0174");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Days days1 = org.joda.time.Days.daysIn(readableInterval0);
        int int3 = days1.getValue((int) (short) 0);
        org.joda.time.Days days4 = org.joda.time.Days.FIVE;
        org.joda.time.Days days5 = days1.minus(days4);
        org.joda.time.Days days6 = null;
        org.joda.time.Days days7 = days1.minus(days6);
        org.joda.time.Days days9 = days7.minus(100);
        org.joda.time.Days days10 = days7.negated();
        org.joda.time.Days days12 = days10.multipliedBy(0);
        org.junit.Assert.assertNotNull(days1);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(days4);
        org.junit.Assert.assertNotNull(days5);
        org.junit.Assert.assertNotNull(days7);
        org.junit.Assert.assertNotNull(days9);
        org.junit.Assert.assertNotNull(days10);
        org.junit.Assert.assertNotNull(days12);
    }

    @Test
    public void test0175() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0175");
        org.joda.time.ReadablePeriod readablePeriod0 = null;
        org.joda.time.Days days1 = org.joda.time.Days.standardDaysIn(readablePeriod0);
        org.junit.Assert.assertNotNull(days1);
    }

    @Test
    public void test0176() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0176");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Days days1 = org.joda.time.Days.daysIn(readableInterval0);
        org.joda.time.Days days3 = days1.plus((int) (byte) 10);
        org.joda.time.Days days5 = days3.dividedBy((int) 'a');
        org.joda.time.Days days7 = days3.dividedBy(5);
        org.joda.time.Days days9 = days3.plus((int) (byte) -1);
        org.joda.time.Days days11 = days3.minus((int) (byte) 100);
        org.joda.time.Days days12 = days11.negated();
        int int13 = days11.size();
        org.joda.time.ReadableInterval readableInterval14 = null;
        org.joda.time.Days days15 = org.joda.time.Days.daysIn(readableInterval14);
        int int17 = days15.getValue((int) (short) 0);
        org.joda.time.Days days18 = org.joda.time.Days.FIVE;
        org.joda.time.Days days19 = days15.minus(days18);
        org.joda.time.Days days20 = null;
        org.joda.time.Days days21 = days15.minus(days20);
        org.joda.time.Duration duration22 = days15.toStandardDuration();
        org.joda.time.DurationFieldType durationFieldType23 = days15.getFieldType();
        org.joda.time.Days days24 = days11.minus(days15);
        org.joda.time.ReadableInterval readableInterval25 = null;
        org.joda.time.Days days26 = org.joda.time.Days.daysIn(readableInterval25);
        org.joda.time.Days days28 = days26.plus((int) (byte) 10);
        int int29 = days28.getDays();
        int int30 = days28.getDays();
        boolean boolean31 = days15.equals((java.lang.Object) days28);
        org.joda.time.Days days33 = days15.dividedBy(8);
        org.joda.time.Days days34 = org.joda.time.Days.SIX;
        org.joda.time.Days days36 = days34.plus(100);
        org.joda.time.ReadableInterval readableInterval37 = null;
        org.joda.time.Days days38 = org.joda.time.Days.daysIn(readableInterval37);
        int int40 = days38.getValue((int) (short) 0);
        org.joda.time.Days days41 = org.joda.time.Days.FIVE;
        org.joda.time.Days days42 = days38.minus(days41);
        org.joda.time.Days days43 = null;
        org.joda.time.Days days44 = days38.minus(days43);
        org.joda.time.Days days46 = days38.minus((-1));
        org.joda.time.DurationFieldType durationFieldType47 = days38.getFieldType();
        int int48 = days34.get(durationFieldType47);
        org.joda.time.ReadableInterval readableInterval49 = null;
        org.joda.time.Days days50 = org.joda.time.Days.daysIn(readableInterval49);
        int int52 = days50.getValue((int) (short) 0);
        org.joda.time.Days days53 = org.joda.time.Days.FIVE;
        org.joda.time.Days days54 = days50.minus(days53);
        org.joda.time.Days days55 = null;
        org.joda.time.Days days56 = days50.minus(days55);
        org.joda.time.Days days58 = days50.minus((-1));
        org.joda.time.DurationFieldType durationFieldType59 = days50.getFieldType();
        org.joda.time.ReadableInterval readableInterval60 = null;
        org.joda.time.Days days61 = org.joda.time.Days.daysIn(readableInterval60);
        org.joda.time.Days days63 = days61.plus((int) (byte) 10);
        org.joda.time.Days days65 = days63.dividedBy((int) 'a');
        org.joda.time.Days days67 = days63.plus((int) ' ');
        org.joda.time.Days days68 = org.joda.time.Days.standardDaysIn((org.joda.time.ReadablePeriod) days67);
        int int69 = days68.size();
        boolean boolean70 = days50.isGreaterThan(days68);
        org.joda.time.Days days71 = days34.minus(days50);
        org.joda.time.ReadableInterval readableInterval72 = null;
        org.joda.time.Days days73 = org.joda.time.Days.daysIn(readableInterval72);
        org.joda.time.Days days75 = days73.plus((int) (byte) 10);
        org.joda.time.Days days77 = days75.dividedBy((int) 'a');
        org.joda.time.Days days79 = days75.dividedBy(5);
        boolean boolean80 = days50.equals((java.lang.Object) days75);
        org.joda.time.Days days81 = days15.minus(days50);
        java.lang.String str82 = days50.toString();
        org.junit.Assert.assertNotNull(days1);
        org.junit.Assert.assertNotNull(days3);
        org.junit.Assert.assertNotNull(days5);
        org.junit.Assert.assertNotNull(days7);
        org.junit.Assert.assertNotNull(days9);
        org.junit.Assert.assertNotNull(days11);
        org.junit.Assert.assertNotNull(days12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertNotNull(days15);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNotNull(days18);
        org.junit.Assert.assertNotNull(days19);
        org.junit.Assert.assertNotNull(days21);
        org.junit.Assert.assertNotNull(duration22);
        org.junit.Assert.assertNotNull(durationFieldType23);
        org.junit.Assert.assertNotNull(days24);
        org.junit.Assert.assertNotNull(days26);
        org.junit.Assert.assertNotNull(days28);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 10 + "'", int29 == 10);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 10 + "'", int30 == 10);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(days33);
        org.junit.Assert.assertNotNull(days34);
        org.junit.Assert.assertNotNull(days36);
        org.junit.Assert.assertNotNull(days38);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertNotNull(days41);
        org.junit.Assert.assertNotNull(days42);
        org.junit.Assert.assertNotNull(days44);
        org.junit.Assert.assertNotNull(days46);
        org.junit.Assert.assertNotNull(durationFieldType47);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 6 + "'", int48 == 6);
        org.junit.Assert.assertNotNull(days50);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 0 + "'", int52 == 0);
        org.junit.Assert.assertNotNull(days53);
        org.junit.Assert.assertNotNull(days54);
        org.junit.Assert.assertNotNull(days56);
        org.junit.Assert.assertNotNull(days58);
        org.junit.Assert.assertNotNull(durationFieldType59);
        org.junit.Assert.assertNotNull(days61);
        org.junit.Assert.assertNotNull(days63);
        org.junit.Assert.assertNotNull(days65);
        org.junit.Assert.assertNotNull(days67);
        org.junit.Assert.assertNotNull(days68);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 1 + "'", int69 == 1);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(days71);
        org.junit.Assert.assertNotNull(days73);
        org.junit.Assert.assertNotNull(days75);
        org.junit.Assert.assertNotNull(days77);
        org.junit.Assert.assertNotNull(days79);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertNotNull(days81);
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "P0D" + "'", str82, "P0D");
    }

    @Test
    public void test0177() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0177");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Days days1 = org.joda.time.Days.daysIn(readableInterval0);
        org.joda.time.ReadableInterval readableInterval2 = null;
        org.joda.time.Days days3 = org.joda.time.Days.daysIn(readableInterval2);
        int int5 = days3.getValue((int) (short) 0);
        org.joda.time.Days days6 = org.joda.time.Days.FIVE;
        org.joda.time.Days days7 = days3.minus(days6);
        org.joda.time.DurationFieldType durationFieldType8 = null;
        boolean boolean9 = days6.isSupported(durationFieldType8);
        org.joda.time.DurationFieldType durationFieldType11 = days6.getFieldType(0);
        int int12 = days1.get(durationFieldType11);
        org.joda.time.ReadableInterval readableInterval13 = null;
        org.joda.time.Days days14 = org.joda.time.Days.daysIn(readableInterval13);
        int int16 = days14.getValue((int) (short) 0);
        org.joda.time.Days days17 = org.joda.time.Days.FIVE;
        org.joda.time.Days days18 = days14.minus(days17);
        org.joda.time.DurationFieldType durationFieldType19 = null;
        int int20 = days17.get(durationFieldType19);
        org.joda.time.DurationFieldType durationFieldType21 = null;
        int int22 = days17.get(durationFieldType21);
        boolean boolean24 = days17.equals((java.lang.Object) 0L);
        boolean boolean25 = days1.isGreaterThan(days17);
        org.joda.time.ReadableInterval readableInterval26 = null;
        org.joda.time.Days days27 = org.joda.time.Days.daysIn(readableInterval26);
        int int29 = days27.getValue((int) (short) 0);
        org.joda.time.Days days30 = org.joda.time.Days.FIVE;
        org.joda.time.Days days31 = days27.minus(days30);
        org.joda.time.Days days32 = null;
        org.joda.time.Days days33 = days27.minus(days32);
        org.joda.time.ReadableInterval readableInterval34 = null;
        org.joda.time.Days days35 = org.joda.time.Days.daysIn(readableInterval34);
        org.joda.time.ReadableInterval readableInterval36 = null;
        org.joda.time.Days days37 = org.joda.time.Days.daysIn(readableInterval36);
        int int39 = days37.getValue((int) (short) 0);
        org.joda.time.Days days40 = org.joda.time.Days.FIVE;
        org.joda.time.Days days41 = days37.minus(days40);
        org.joda.time.DurationFieldType durationFieldType42 = null;
        boolean boolean43 = days40.isSupported(durationFieldType42);
        org.joda.time.DurationFieldType durationFieldType45 = days40.getFieldType(0);
        int int46 = days35.get(durationFieldType45);
        org.joda.time.PeriodType periodType47 = days35.getPeriodType();
        org.joda.time.Days days48 = days27.plus(days35);
        java.lang.String str49 = days35.toString();
        boolean boolean50 = days17.isLessThan(days35);
        int int51 = days35.size();
        org.junit.Assert.assertNotNull(days1);
        org.junit.Assert.assertNotNull(days3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(days6);
        org.junit.Assert.assertNotNull(days7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(durationFieldType11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNotNull(days14);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertNotNull(days17);
        org.junit.Assert.assertNotNull(days18);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(days27);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertNotNull(days30);
        org.junit.Assert.assertNotNull(days31);
        org.junit.Assert.assertNotNull(days33);
        org.junit.Assert.assertNotNull(days35);
        org.junit.Assert.assertNotNull(days37);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertNotNull(days40);
        org.junit.Assert.assertNotNull(days41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(durationFieldType45);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 0 + "'", int46 == 0);
        org.junit.Assert.assertNotNull(periodType47);
        org.junit.Assert.assertNotNull(days48);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "P0D" + "'", str49, "P0D");
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 1 + "'", int51 == 1);
    }

    @Test
    public void test0178() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0178");
        org.joda.time.Days days0 = org.joda.time.Days.SEVEN;
        org.joda.time.Days days2 = days0.plus(1);
        java.lang.String str3 = days0.toString();
        org.joda.time.ReadableInterval readableInterval4 = null;
        org.joda.time.Days days5 = org.joda.time.Days.daysIn(readableInterval4);
        org.joda.time.ReadableInterval readableInterval6 = null;
        org.joda.time.Days days7 = org.joda.time.Days.daysIn(readableInterval6);
        int int9 = days7.getValue((int) (short) 0);
        org.joda.time.Days days10 = org.joda.time.Days.FIVE;
        org.joda.time.Days days11 = days7.minus(days10);
        org.joda.time.DurationFieldType durationFieldType12 = null;
        boolean boolean13 = days10.isSupported(durationFieldType12);
        org.joda.time.DurationFieldType durationFieldType15 = days10.getFieldType(0);
        int int16 = days5.get(durationFieldType15);
        org.joda.time.ReadableInterval readableInterval17 = null;
        org.joda.time.Days days18 = org.joda.time.Days.daysIn(readableInterval17);
        int int20 = days18.getValue((int) (short) 0);
        org.joda.time.Days days21 = org.joda.time.Days.FIVE;
        org.joda.time.Days days22 = days18.minus(days21);
        org.joda.time.DurationFieldType durationFieldType23 = null;
        int int24 = days21.get(durationFieldType23);
        org.joda.time.DurationFieldType durationFieldType25 = null;
        int int26 = days21.get(durationFieldType25);
        boolean boolean28 = days21.equals((java.lang.Object) 0L);
        boolean boolean29 = days5.isGreaterThan(days21);
        org.joda.time.ReadableInterval readableInterval30 = null;
        org.joda.time.Days days31 = org.joda.time.Days.daysIn(readableInterval30);
        int int33 = days31.getValue((int) (short) 0);
        org.joda.time.Days days34 = org.joda.time.Days.FIVE;
        org.joda.time.Days days35 = days31.minus(days34);
        org.joda.time.DurationFieldType durationFieldType36 = null;
        int int37 = days34.get(durationFieldType36);
        org.joda.time.DurationFieldType durationFieldType38 = null;
        int int39 = days34.get(durationFieldType38);
        boolean boolean41 = days34.equals((java.lang.Object) 0L);
        org.joda.time.Period period42 = days34.toPeriod();
        org.joda.time.Days days43 = days5.plus(days34);
        org.joda.time.ReadableInterval readableInterval44 = null;
        org.joda.time.Days days45 = org.joda.time.Days.daysIn(readableInterval44);
        int int47 = days45.getValue((int) (short) 0);
        org.joda.time.Days days48 = org.joda.time.Days.FIVE;
        org.joda.time.Days days49 = days45.minus(days48);
        org.joda.time.DurationFieldType durationFieldType50 = null;
        int int51 = days48.get(durationFieldType50);
        boolean boolean52 = days43.isGreaterThan(days48);
        boolean boolean53 = days0.equals((java.lang.Object) days43);
        java.lang.Class<?> wildcardClass54 = days0.getClass();
        org.junit.Assert.assertNotNull(days0);
        org.junit.Assert.assertNotNull(days2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "P7D" + "'", str3, "P7D");
        org.junit.Assert.assertNotNull(days5);
        org.junit.Assert.assertNotNull(days7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNotNull(days10);
        org.junit.Assert.assertNotNull(days11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(durationFieldType15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertNotNull(days18);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertNotNull(days21);
        org.junit.Assert.assertNotNull(days22);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(days31);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertNotNull(days34);
        org.junit.Assert.assertNotNull(days35);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(period42);
        org.junit.Assert.assertNotNull(days43);
        org.junit.Assert.assertNotNull(days45);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 0 + "'", int47 == 0);
        org.junit.Assert.assertNotNull(days48);
        org.junit.Assert.assertNotNull(days49);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 0 + "'", int51 == 0);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(wildcardClass54);
    }

    @Test
    public void test0179() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0179");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Days days1 = org.joda.time.Days.daysIn(readableInterval0);
        org.joda.time.Days days3 = days1.plus((int) (byte) 10);
        org.joda.time.MutablePeriod mutablePeriod4 = days1.toMutablePeriod();
        org.joda.time.Days days6 = days1.plus((int) (short) -1);
        org.joda.time.ReadableInterval readableInterval7 = null;
        org.joda.time.Days days8 = org.joda.time.Days.daysIn(readableInterval7);
        int int10 = days8.getValue((int) (short) 0);
        org.joda.time.Days days11 = org.joda.time.Days.FIVE;
        org.joda.time.Days days12 = days8.minus(days11);
        org.joda.time.Days days13 = null;
        org.joda.time.Days days14 = days8.minus(days13);
        org.joda.time.Days days16 = days8.minus((-1));
        int int17 = days8.size();
        boolean boolean18 = days1.isGreaterThan(days8);
        org.joda.time.Days days20 = days1.plus((int) 'a');
        // The following exception was thrown during execution in test generation
        try {
            int int22 = days1.getValue((int) (short) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 10");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(days1);
        org.junit.Assert.assertNotNull(days3);
        org.junit.Assert.assertNotNull(mutablePeriod4);
        org.junit.Assert.assertNotNull(days6);
        org.junit.Assert.assertNotNull(days8);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(days11);
        org.junit.Assert.assertNotNull(days12);
        org.junit.Assert.assertNotNull(days14);
        org.junit.Assert.assertNotNull(days16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 1 + "'", int17 == 1);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(days20);
    }

    @Test
    public void test0180() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0180");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Days days1 = org.joda.time.Days.daysIn(readableInterval0);
        int int3 = days1.getValue((int) (short) 0);
        org.joda.time.Days days4 = org.joda.time.Days.FIVE;
        org.joda.time.Days days5 = days1.minus(days4);
        org.joda.time.DurationFieldType durationFieldType6 = null;
        int int7 = days4.get(durationFieldType6);
        org.joda.time.Days days9 = days4.dividedBy(100);
        org.joda.time.Days days11 = days4.multipliedBy((int) 'a');
        org.joda.time.Duration duration12 = days11.toStandardDuration();
        org.junit.Assert.assertNotNull(days1);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(days4);
        org.junit.Assert.assertNotNull(days5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(days9);
        org.junit.Assert.assertNotNull(days11);
        org.junit.Assert.assertNotNull(duration12);
    }

    @Test
    public void test0181() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0181");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Days days1 = org.joda.time.Days.daysIn(readableInterval0);
        int int3 = days1.getValue((int) (short) 0);
        org.joda.time.Days days4 = org.joda.time.Days.FIVE;
        org.joda.time.Days days5 = days1.minus(days4);
        org.joda.time.Days days6 = null;
        org.joda.time.Days days7 = days1.minus(days6);
        org.joda.time.ReadableInterval readableInterval8 = null;
        org.joda.time.Days days9 = org.joda.time.Days.daysIn(readableInterval8);
        org.joda.time.ReadableInterval readableInterval10 = null;
        org.joda.time.Days days11 = org.joda.time.Days.daysIn(readableInterval10);
        int int13 = days11.getValue((int) (short) 0);
        org.joda.time.Days days14 = org.joda.time.Days.FIVE;
        org.joda.time.Days days15 = days11.minus(days14);
        org.joda.time.DurationFieldType durationFieldType16 = null;
        boolean boolean17 = days14.isSupported(durationFieldType16);
        org.joda.time.DurationFieldType durationFieldType19 = days14.getFieldType(0);
        int int20 = days9.get(durationFieldType19);
        org.joda.time.PeriodType periodType21 = days9.getPeriodType();
        org.joda.time.Days days22 = days1.plus(days9);
        org.joda.time.DurationFieldType durationFieldType23 = days1.getFieldType();
        org.joda.time.PeriodType periodType24 = days1.getPeriodType();
        org.junit.Assert.assertNotNull(days1);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(days4);
        org.junit.Assert.assertNotNull(days5);
        org.junit.Assert.assertNotNull(days7);
        org.junit.Assert.assertNotNull(days9);
        org.junit.Assert.assertNotNull(days11);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(days14);
        org.junit.Assert.assertNotNull(days15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(durationFieldType19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertNotNull(periodType21);
        org.junit.Assert.assertNotNull(days22);
        org.junit.Assert.assertNotNull(durationFieldType23);
        org.junit.Assert.assertNotNull(periodType24);
    }

    @Test
    public void test0182() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0182");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Days days1 = org.joda.time.Days.daysIn(readableInterval0);
        org.joda.time.Days days3 = days1.plus((int) (byte) 10);
        org.joda.time.DurationFieldType durationFieldType4 = days3.getFieldType();
        org.joda.time.Days days6 = days3.plus(0);
        int int7 = days6.size();
        org.joda.time.PeriodType periodType8 = days6.getPeriodType();
        org.joda.time.ReadableInterval readableInterval9 = null;
        org.joda.time.Days days10 = org.joda.time.Days.daysIn(readableInterval9);
        int int12 = days10.getValue((int) (short) 0);
        org.joda.time.ReadableInterval readableInterval13 = null;
        org.joda.time.Days days14 = org.joda.time.Days.daysIn(readableInterval13);
        int int16 = days14.getValue((int) (short) 0);
        org.joda.time.Days days17 = org.joda.time.Days.FIVE;
        org.joda.time.Days days18 = days14.minus(days17);
        int int19 = days10.compareTo((org.joda.time.base.BaseSingleFieldPeriod) days17);
        java.lang.String str20 = days10.toString();
        org.joda.time.Days days22 = days10.plus((int) '4');
        org.joda.time.ReadableInterval readableInterval23 = null;
        org.joda.time.Days days24 = org.joda.time.Days.daysIn(readableInterval23);
        int int26 = days24.getValue((int) (short) 0);
        org.joda.time.Days days27 = org.joda.time.Days.FIVE;
        org.joda.time.Days days28 = days24.minus(days27);
        org.joda.time.DurationFieldType durationFieldType29 = null;
        boolean boolean30 = days27.isSupported(durationFieldType29);
        org.joda.time.DurationFieldType durationFieldType32 = days27.getFieldType(0);
        org.joda.time.ReadableInterval readableInterval33 = null;
        org.joda.time.Days days34 = org.joda.time.Days.daysIn(readableInterval33);
        int int36 = days34.getValue((int) (short) 0);
        org.joda.time.Days days37 = org.joda.time.Days.FIVE;
        org.joda.time.Days days38 = days34.minus(days37);
        org.joda.time.Days days39 = null;
        org.joda.time.Days days40 = days34.minus(days39);
        org.joda.time.Days days42 = days34.minus((-1));
        org.joda.time.DurationFieldType durationFieldType43 = days34.getFieldType();
        boolean boolean44 = days27.isGreaterThan(days34);
        org.joda.time.ReadableInterval readableInterval45 = null;
        org.joda.time.Days days46 = org.joda.time.Days.daysIn(readableInterval45);
        org.joda.time.Days days48 = days46.plus((int) (byte) 10);
        org.joda.time.Days days49 = days34.plus(days48);
        org.joda.time.ReadableInterval readableInterval50 = null;
        org.joda.time.Days days51 = org.joda.time.Days.daysIn(readableInterval50);
        int int53 = days51.getValue((int) (short) 0);
        org.joda.time.Days days54 = org.joda.time.Days.FIVE;
        org.joda.time.Days days55 = days51.minus(days54);
        org.joda.time.Days days56 = null;
        org.joda.time.Days days57 = days51.minus(days56);
        org.joda.time.Duration duration58 = days51.toStandardDuration();
        org.joda.time.Days days59 = days49.minus(days51);
        org.joda.time.Duration duration60 = days59.toStandardDuration();
        org.joda.time.PeriodType periodType61 = days59.getPeriodType();
        org.joda.time.Days days62 = days22.plus(days59);
        org.joda.time.Days days63 = org.joda.time.Days.SIX;
        org.joda.time.Days days65 = days63.plus(100);
        org.joda.time.ReadableInterval readableInterval66 = null;
        org.joda.time.Days days67 = org.joda.time.Days.daysIn(readableInterval66);
        int int69 = days67.getValue((int) (short) 0);
        org.joda.time.Days days70 = org.joda.time.Days.FIVE;
        org.joda.time.Days days71 = days67.minus(days70);
        org.joda.time.Days days72 = null;
        org.joda.time.Days days73 = days67.minus(days72);
        org.joda.time.Days days75 = days67.minus((-1));
        org.joda.time.DurationFieldType durationFieldType76 = days67.getFieldType();
        int int77 = days63.get(durationFieldType76);
        int int78 = days59.get(durationFieldType76);
        boolean boolean79 = days6.equals((java.lang.Object) int78);
        org.joda.time.Period period80 = days6.toPeriod();
        org.joda.time.Days days82 = days6.plus(8);
        org.junit.Assert.assertNotNull(days1);
        org.junit.Assert.assertNotNull(days3);
        org.junit.Assert.assertNotNull(durationFieldType4);
        org.junit.Assert.assertNotNull(days6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertNotNull(periodType8);
        org.junit.Assert.assertNotNull(days10);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNotNull(days14);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertNotNull(days17);
        org.junit.Assert.assertNotNull(days18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "P0D" + "'", str20, "P0D");
        org.junit.Assert.assertNotNull(days22);
        org.junit.Assert.assertNotNull(days24);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertNotNull(days27);
        org.junit.Assert.assertNotNull(days28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(durationFieldType32);
        org.junit.Assert.assertNotNull(days34);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertNotNull(days37);
        org.junit.Assert.assertNotNull(days38);
        org.junit.Assert.assertNotNull(days40);
        org.junit.Assert.assertNotNull(days42);
        org.junit.Assert.assertNotNull(durationFieldType43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(days46);
        org.junit.Assert.assertNotNull(days48);
        org.junit.Assert.assertNotNull(days49);
        org.junit.Assert.assertNotNull(days51);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 0 + "'", int53 == 0);
        org.junit.Assert.assertNotNull(days54);
        org.junit.Assert.assertNotNull(days55);
        org.junit.Assert.assertNotNull(days57);
        org.junit.Assert.assertNotNull(duration58);
        org.junit.Assert.assertNotNull(days59);
        org.junit.Assert.assertNotNull(duration60);
        org.junit.Assert.assertNotNull(periodType61);
        org.junit.Assert.assertNotNull(days62);
        org.junit.Assert.assertNotNull(days63);
        org.junit.Assert.assertNotNull(days65);
        org.junit.Assert.assertNotNull(days67);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 0 + "'", int69 == 0);
        org.junit.Assert.assertNotNull(days70);
        org.junit.Assert.assertNotNull(days71);
        org.junit.Assert.assertNotNull(days73);
        org.junit.Assert.assertNotNull(days75);
        org.junit.Assert.assertNotNull(durationFieldType76);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 6 + "'", int77 == 6);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 10 + "'", int78 == 10);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertNotNull(period80);
        org.junit.Assert.assertNotNull(days82);
    }

    @Test
    public void test0183() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0183");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Days days1 = org.joda.time.Days.daysIn(readableInterval0);
        org.joda.time.Days days3 = days1.plus((int) (byte) 10);
        org.joda.time.Days days5 = days3.dividedBy((int) 'a');
        org.joda.time.Days days7 = days3.plus((int) ' ');
        org.joda.time.Days days8 = org.joda.time.Days.standardDaysIn((org.joda.time.ReadablePeriod) days7);
        org.joda.time.Days days10 = days8.minus((int) '#');
        org.joda.time.ReadableInterval readableInterval11 = null;
        org.joda.time.Days days12 = org.joda.time.Days.daysIn(readableInterval11);
        int int14 = days12.getValue((int) (short) 0);
        org.joda.time.Days days15 = org.joda.time.Days.FIVE;
        org.joda.time.Days days16 = days12.minus(days15);
        org.joda.time.Days days17 = null;
        org.joda.time.Days days18 = days12.minus(days17);
        org.joda.time.ReadableInterval readableInterval19 = null;
        org.joda.time.Days days20 = org.joda.time.Days.daysIn(readableInterval19);
        org.joda.time.ReadableInterval readableInterval21 = null;
        org.joda.time.Days days22 = org.joda.time.Days.daysIn(readableInterval21);
        int int24 = days22.getValue((int) (short) 0);
        org.joda.time.Days days25 = org.joda.time.Days.FIVE;
        org.joda.time.Days days26 = days22.minus(days25);
        org.joda.time.DurationFieldType durationFieldType27 = null;
        boolean boolean28 = days25.isSupported(durationFieldType27);
        org.joda.time.DurationFieldType durationFieldType30 = days25.getFieldType(0);
        int int31 = days20.get(durationFieldType30);
        org.joda.time.PeriodType periodType32 = days20.getPeriodType();
        org.joda.time.Days days33 = days12.plus(days20);
        org.joda.time.ReadableInterval readableInterval34 = null;
        org.joda.time.Days days35 = org.joda.time.Days.daysIn(readableInterval34);
        int int37 = days35.getValue((int) (short) 0);
        org.joda.time.Days days38 = org.joda.time.Days.FIVE;
        org.joda.time.Days days39 = days35.minus(days38);
        org.joda.time.Days days40 = null;
        org.joda.time.Days days41 = days35.minus(days40);
        org.joda.time.Days days43 = days41.minus(100);
        org.joda.time.ReadableInterval readableInterval44 = null;
        org.joda.time.Days days45 = org.joda.time.Days.daysIn(readableInterval44);
        int int47 = days45.getValue((int) (short) 0);
        org.joda.time.Days days48 = org.joda.time.Days.FIVE;
        org.joda.time.Days days49 = days45.minus(days48);
        org.joda.time.Days days50 = null;
        org.joda.time.Days days51 = days45.minus(days50);
        org.joda.time.Days days53 = days45.minus((-1));
        org.joda.time.Days days54 = days41.plus(days45);
        boolean boolean55 = days33.equals((java.lang.Object) days45);
        boolean boolean56 = days10.equals((java.lang.Object) days33);
        java.lang.String str57 = days10.toString();
        org.joda.time.Days days58 = days10.negated();
        org.junit.Assert.assertNotNull(days1);
        org.junit.Assert.assertNotNull(days3);
        org.junit.Assert.assertNotNull(days5);
        org.junit.Assert.assertNotNull(days7);
        org.junit.Assert.assertNotNull(days8);
        org.junit.Assert.assertNotNull(days10);
        org.junit.Assert.assertNotNull(days12);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNotNull(days15);
        org.junit.Assert.assertNotNull(days16);
        org.junit.Assert.assertNotNull(days18);
        org.junit.Assert.assertNotNull(days20);
        org.junit.Assert.assertNotNull(days22);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertNotNull(days25);
        org.junit.Assert.assertNotNull(days26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(durationFieldType30);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertNotNull(periodType32);
        org.junit.Assert.assertNotNull(days33);
        org.junit.Assert.assertNotNull(days35);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0);
        org.junit.Assert.assertNotNull(days38);
        org.junit.Assert.assertNotNull(days39);
        org.junit.Assert.assertNotNull(days41);
        org.junit.Assert.assertNotNull(days43);
        org.junit.Assert.assertNotNull(days45);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 0 + "'", int47 == 0);
        org.junit.Assert.assertNotNull(days48);
        org.junit.Assert.assertNotNull(days49);
        org.junit.Assert.assertNotNull(days51);
        org.junit.Assert.assertNotNull(days53);
        org.junit.Assert.assertNotNull(days54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "P7D" + "'", str57, "P7D");
        org.junit.Assert.assertNotNull(days58);
    }

    @Test
    public void test0184() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0184");
        org.joda.time.Days days0 = org.joda.time.Days.SIX;
        org.joda.time.Days days2 = days0.plus(100);
        int int3 = days0.size();
        org.joda.time.Days days5 = days0.minus(97);
        org.joda.time.Days days6 = org.joda.time.Days.SIX;
        org.joda.time.Days days8 = days6.plus(100);
        org.joda.time.Days days10 = days6.plus((int) (byte) 1);
        org.joda.time.ReadableInterval readableInterval11 = null;
        org.joda.time.Days days12 = org.joda.time.Days.daysIn(readableInterval11);
        org.joda.time.Days days14 = days12.plus((int) (byte) 10);
        org.joda.time.DurationFieldType durationFieldType15 = days14.getFieldType();
        org.joda.time.Days days17 = days14.plus(0);
        org.joda.time.ReadableInterval readableInterval18 = null;
        org.joda.time.Days days19 = org.joda.time.Days.daysIn(readableInterval18);
        int int21 = days19.getValue((int) (short) 0);
        org.joda.time.Days days22 = org.joda.time.Days.FIVE;
        org.joda.time.Days days23 = days19.minus(days22);
        org.joda.time.DurationFieldType durationFieldType24 = null;
        boolean boolean25 = days22.isSupported(durationFieldType24);
        org.joda.time.DurationFieldType durationFieldType27 = days22.getFieldType(0);
        org.joda.time.ReadableInterval readableInterval28 = null;
        org.joda.time.Days days29 = org.joda.time.Days.daysIn(readableInterval28);
        int int31 = days29.getValue((int) (short) 0);
        org.joda.time.Days days32 = org.joda.time.Days.FIVE;
        org.joda.time.Days days33 = days29.minus(days32);
        org.joda.time.Days days34 = null;
        org.joda.time.Days days35 = days29.minus(days34);
        org.joda.time.Days days37 = days29.minus((-1));
        org.joda.time.DurationFieldType durationFieldType38 = days29.getFieldType();
        boolean boolean39 = days22.isGreaterThan(days29);
        org.joda.time.ReadableInterval readableInterval40 = null;
        org.joda.time.Days days41 = org.joda.time.Days.daysIn(readableInterval40);
        org.joda.time.Days days43 = days41.plus((int) (byte) 10);
        org.joda.time.Days days44 = days29.plus(days43);
        int int45 = days17.compareTo((org.joda.time.base.BaseSingleFieldPeriod) days29);
        int int46 = days6.compareTo((org.joda.time.base.BaseSingleFieldPeriod) days29);
        org.joda.time.ReadableInterval readableInterval47 = null;
        org.joda.time.Days days48 = org.joda.time.Days.daysIn(readableInterval47);
        int int50 = days48.getValue((int) (short) 0);
        org.joda.time.ReadableInterval readableInterval51 = null;
        org.joda.time.Days days52 = org.joda.time.Days.daysIn(readableInterval51);
        int int54 = days52.getValue((int) (short) 0);
        org.joda.time.Days days55 = org.joda.time.Days.FIVE;
        org.joda.time.Days days56 = days52.minus(days55);
        int int57 = days48.compareTo((org.joda.time.base.BaseSingleFieldPeriod) days55);
        org.joda.time.DurationFieldType durationFieldType58 = days55.getFieldType();
        org.joda.time.ReadableInterval readableInterval59 = null;
        org.joda.time.Days days60 = org.joda.time.Days.daysIn(readableInterval59);
        int int62 = days60.getValue((int) (short) 0);
        org.joda.time.Days days63 = org.joda.time.Days.FIVE;
        org.joda.time.Days days64 = days60.minus(days63);
        org.joda.time.DurationFieldType durationFieldType65 = null;
        boolean boolean66 = days63.isSupported(durationFieldType65);
        org.joda.time.DurationFieldType durationFieldType68 = days63.getFieldType(0);
        org.joda.time.ReadableInterval readableInterval69 = null;
        org.joda.time.Days days70 = org.joda.time.Days.daysIn(readableInterval69);
        int int72 = days70.getValue((int) (short) 0);
        org.joda.time.Days days73 = org.joda.time.Days.FIVE;
        org.joda.time.Days days74 = days70.minus(days73);
        org.joda.time.Days days75 = null;
        org.joda.time.Days days76 = days70.minus(days75);
        org.joda.time.Days days78 = days70.minus((-1));
        org.joda.time.DurationFieldType durationFieldType79 = days70.getFieldType();
        boolean boolean80 = days63.isGreaterThan(days70);
        org.joda.time.ReadableInterval readableInterval81 = null;
        org.joda.time.Days days82 = org.joda.time.Days.daysIn(readableInterval81);
        org.joda.time.Days days84 = days82.plus((int) (byte) 10);
        org.joda.time.Days days85 = days70.plus(days84);
        org.joda.time.Days days86 = org.joda.time.Days.standardDaysIn((org.joda.time.ReadablePeriod) days70);
        boolean boolean87 = days55.isLessThan(days86);
        org.joda.time.Days days88 = days6.plus(days86);
        int int89 = days5.compareTo((org.joda.time.base.BaseSingleFieldPeriod) days86);
        org.junit.Assert.assertNotNull(days0);
        org.junit.Assert.assertNotNull(days2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertNotNull(days5);
        org.junit.Assert.assertNotNull(days6);
        org.junit.Assert.assertNotNull(days8);
        org.junit.Assert.assertNotNull(days10);
        org.junit.Assert.assertNotNull(days12);
        org.junit.Assert.assertNotNull(days14);
        org.junit.Assert.assertNotNull(durationFieldType15);
        org.junit.Assert.assertNotNull(days17);
        org.junit.Assert.assertNotNull(days19);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertNotNull(days22);
        org.junit.Assert.assertNotNull(days23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(durationFieldType27);
        org.junit.Assert.assertNotNull(days29);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertNotNull(days32);
        org.junit.Assert.assertNotNull(days33);
        org.junit.Assert.assertNotNull(days35);
        org.junit.Assert.assertNotNull(days37);
        org.junit.Assert.assertNotNull(durationFieldType38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(days41);
        org.junit.Assert.assertNotNull(days43);
        org.junit.Assert.assertNotNull(days44);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 1 + "'", int45 == 1);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 1 + "'", int46 == 1);
        org.junit.Assert.assertNotNull(days48);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 0 + "'", int50 == 0);
        org.junit.Assert.assertNotNull(days52);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 0 + "'", int54 == 0);
        org.junit.Assert.assertNotNull(days55);
        org.junit.Assert.assertNotNull(days56);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + (-1) + "'", int57 == (-1));
        org.junit.Assert.assertNotNull(durationFieldType58);
        org.junit.Assert.assertNotNull(days60);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 0 + "'", int62 == 0);
        org.junit.Assert.assertNotNull(days63);
        org.junit.Assert.assertNotNull(days64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(durationFieldType68);
        org.junit.Assert.assertNotNull(days70);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 0 + "'", int72 == 0);
        org.junit.Assert.assertNotNull(days73);
        org.junit.Assert.assertNotNull(days74);
        org.junit.Assert.assertNotNull(days76);
        org.junit.Assert.assertNotNull(days78);
        org.junit.Assert.assertNotNull(durationFieldType79);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertNotNull(days82);
        org.junit.Assert.assertNotNull(days84);
        org.junit.Assert.assertNotNull(days85);
        org.junit.Assert.assertNotNull(days86);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertNotNull(days88);
        org.junit.Assert.assertTrue("'" + int89 + "' != '" + (-1) + "'", int89 == (-1));
    }

    @Test
    public void test0185() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0185");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Days days1 = org.joda.time.Days.daysIn(readableInterval0);
        int int3 = days1.getValue((int) (short) 0);
        org.joda.time.Days days4 = org.joda.time.Days.FIVE;
        org.joda.time.Days days5 = days1.minus(days4);
        org.joda.time.Days days6 = org.joda.time.Days.FIVE;
        org.joda.time.ReadableInterval readableInterval7 = null;
        org.joda.time.Days days8 = org.joda.time.Days.daysIn(readableInterval7);
        int int10 = days8.getValue((int) (short) 0);
        org.joda.time.ReadableInterval readableInterval11 = null;
        org.joda.time.Days days12 = org.joda.time.Days.daysIn(readableInterval11);
        int int14 = days12.getValue((int) (short) 0);
        org.joda.time.Days days15 = org.joda.time.Days.FIVE;
        org.joda.time.Days days16 = days12.minus(days15);
        int int17 = days8.compareTo((org.joda.time.base.BaseSingleFieldPeriod) days15);
        org.joda.time.ReadableInterval readableInterval18 = null;
        org.joda.time.Days days19 = org.joda.time.Days.daysIn(readableInterval18);
        int int21 = days19.getValue((int) (short) 0);
        org.joda.time.Days days22 = org.joda.time.Days.FIVE;
        org.joda.time.Days days23 = days19.minus(days22);
        org.joda.time.DurationFieldType durationFieldType24 = null;
        boolean boolean25 = days22.isSupported(durationFieldType24);
        org.joda.time.DurationFieldType durationFieldType27 = days22.getFieldType(0);
        int int28 = days8.get(durationFieldType27);
        boolean boolean29 = days6.isSupported(durationFieldType27);
        org.joda.time.Days days30 = days4.plus(days6);
        org.joda.time.ReadableInterval readableInterval31 = null;
        org.joda.time.Days days32 = org.joda.time.Days.daysIn(readableInterval31);
        int int34 = days32.getValue((int) (short) 0);
        org.joda.time.ReadableInterval readableInterval35 = null;
        org.joda.time.Days days36 = org.joda.time.Days.daysIn(readableInterval35);
        int int38 = days36.getValue((int) (short) 0);
        org.joda.time.Days days39 = org.joda.time.Days.FIVE;
        org.joda.time.Days days40 = days36.minus(days39);
        int int41 = days32.compareTo((org.joda.time.base.BaseSingleFieldPeriod) days39);
        java.lang.String str42 = days32.toString();
        org.joda.time.Days days44 = days32.plus((int) '4');
        org.joda.time.PeriodType periodType45 = days44.getPeriodType();
        int int46 = days44.getDays();
        boolean boolean47 = days30.isGreaterThan(days44);
        org.joda.time.Days days49 = days44.plus((int) (byte) -1);
        org.joda.time.ReadableInterval readableInterval50 = null;
        org.joda.time.Days days51 = org.joda.time.Days.daysIn(readableInterval50);
        int int53 = days51.getValue((int) (short) 0);
        org.joda.time.Days days54 = org.joda.time.Days.FIVE;
        org.joda.time.Days days55 = days51.minus(days54);
        org.joda.time.DurationFieldType durationFieldType56 = null;
        boolean boolean57 = days54.isSupported(durationFieldType56);
        org.joda.time.DurationFieldType durationFieldType59 = days54.getFieldType(0);
        org.joda.time.ReadableInterval readableInterval60 = null;
        org.joda.time.Days days61 = org.joda.time.Days.daysIn(readableInterval60);
        int int63 = days61.getValue((int) (short) 0);
        org.joda.time.Days days64 = org.joda.time.Days.FIVE;
        org.joda.time.Days days65 = days61.minus(days64);
        org.joda.time.Days days66 = null;
        org.joda.time.Days days67 = days61.minus(days66);
        org.joda.time.Days days69 = days61.minus((-1));
        org.joda.time.DurationFieldType durationFieldType70 = days61.getFieldType();
        boolean boolean71 = days54.isGreaterThan(days61);
        org.joda.time.ReadableInterval readableInterval72 = null;
        org.joda.time.Days days73 = org.joda.time.Days.daysIn(readableInterval72);
        org.joda.time.Days days75 = days73.plus((int) (byte) 10);
        org.joda.time.Days days76 = days61.plus(days75);
        org.joda.time.ReadableInterval readableInterval77 = null;
        org.joda.time.Days days78 = org.joda.time.Days.daysIn(readableInterval77);
        int int80 = days78.getValue((int) (short) 0);
        org.joda.time.Days days81 = org.joda.time.Days.FIVE;
        org.joda.time.Days days82 = days78.minus(days81);
        org.joda.time.Days days83 = null;
        org.joda.time.Days days84 = days78.minus(days83);
        org.joda.time.Duration duration85 = days78.toStandardDuration();
        org.joda.time.Days days86 = days76.minus(days78);
        boolean boolean87 = days49.equals((java.lang.Object) days76);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.DurationFieldType durationFieldType89 = days76.getFieldType((int) ' ');
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 32");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(days1);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(days4);
        org.junit.Assert.assertNotNull(days5);
        org.junit.Assert.assertNotNull(days6);
        org.junit.Assert.assertNotNull(days8);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(days12);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNotNull(days15);
        org.junit.Assert.assertNotNull(days16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertNotNull(days19);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertNotNull(days22);
        org.junit.Assert.assertNotNull(days23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(durationFieldType27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(days30);
        org.junit.Assert.assertNotNull(days32);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertNotNull(days36);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 0 + "'", int38 == 0);
        org.junit.Assert.assertNotNull(days39);
        org.junit.Assert.assertNotNull(days40);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + (-1) + "'", int41 == (-1));
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "P0D" + "'", str42, "P0D");
        org.junit.Assert.assertNotNull(days44);
        org.junit.Assert.assertNotNull(periodType45);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 52 + "'", int46 == 52);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(days49);
        org.junit.Assert.assertNotNull(days51);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 0 + "'", int53 == 0);
        org.junit.Assert.assertNotNull(days54);
        org.junit.Assert.assertNotNull(days55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(durationFieldType59);
        org.junit.Assert.assertNotNull(days61);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 0 + "'", int63 == 0);
        org.junit.Assert.assertNotNull(days64);
        org.junit.Assert.assertNotNull(days65);
        org.junit.Assert.assertNotNull(days67);
        org.junit.Assert.assertNotNull(days69);
        org.junit.Assert.assertNotNull(durationFieldType70);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertNotNull(days73);
        org.junit.Assert.assertNotNull(days75);
        org.junit.Assert.assertNotNull(days76);
        org.junit.Assert.assertNotNull(days78);
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + 0 + "'", int80 == 0);
        org.junit.Assert.assertNotNull(days81);
        org.junit.Assert.assertNotNull(days82);
        org.junit.Assert.assertNotNull(days84);
        org.junit.Assert.assertNotNull(duration85);
        org.junit.Assert.assertNotNull(days86);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
    }

    @Test
    public void test0186() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0186");
        org.joda.time.Days days0 = org.joda.time.Days.MAX_VALUE;
        int int1 = days0.getDays();
        org.joda.time.Days days2 = org.joda.time.Days.standardDaysIn((org.joda.time.ReadablePeriod) days0);
        java.lang.Class<?> wildcardClass3 = days2.getClass();
        org.junit.Assert.assertNotNull(days0);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 2147483647 + "'", int1 == 2147483647);
        org.junit.Assert.assertNotNull(days2);
        org.junit.Assert.assertNotNull(wildcardClass3);
    }

    @Test
    public void test0187() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0187");
        org.joda.time.Days days1 = org.joda.time.Days.days((int) 'a');
        org.joda.time.Days days2 = org.joda.time.Days.SIX;
        org.joda.time.Days days4 = days2.plus(100);
        org.joda.time.ReadableInterval readableInterval5 = null;
        org.joda.time.Days days6 = org.joda.time.Days.daysIn(readableInterval5);
        int int8 = days6.getValue((int) (short) 0);
        org.joda.time.Days days9 = org.joda.time.Days.FIVE;
        org.joda.time.Days days10 = days6.minus(days9);
        org.joda.time.Days days11 = null;
        org.joda.time.Days days12 = days6.minus(days11);
        org.joda.time.Days days14 = days6.minus((-1));
        org.joda.time.DurationFieldType durationFieldType15 = days6.getFieldType();
        int int16 = days2.get(durationFieldType15);
        int int17 = days1.get(durationFieldType15);
        org.joda.time.Days days19 = org.joda.time.Days.days((-1));
        boolean boolean20 = days1.isGreaterThan(days19);
        org.joda.time.Days days22 = days1.dividedBy(2147483647);
        org.joda.time.PeriodType periodType23 = days1.getPeriodType();
        org.junit.Assert.assertNotNull(days1);
        org.junit.Assert.assertNotNull(days2);
        org.junit.Assert.assertNotNull(days4);
        org.junit.Assert.assertNotNull(days6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNotNull(days9);
        org.junit.Assert.assertNotNull(days10);
        org.junit.Assert.assertNotNull(days12);
        org.junit.Assert.assertNotNull(days14);
        org.junit.Assert.assertNotNull(durationFieldType15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 6 + "'", int16 == 6);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 97 + "'", int17 == 97);
        org.junit.Assert.assertNotNull(days19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(days22);
        org.junit.Assert.assertNotNull(periodType23);
    }

    @Test
    public void test0188() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0188");
        org.joda.time.Days days0 = org.joda.time.Days.ONE;
        org.joda.time.Days days2 = org.joda.time.Days.parseDays("P51D");
        org.joda.time.Days days4 = days2.plus((int) ' ');
        int int5 = days2.size();
        int int6 = days2.getDays();
        org.joda.time.Days days8 = org.joda.time.Days.parseDays("P0D");
        org.joda.time.ReadableInterval readableInterval9 = null;
        org.joda.time.Days days10 = org.joda.time.Days.daysIn(readableInterval9);
        org.joda.time.Days days12 = days10.plus((int) (byte) 10);
        org.joda.time.MutablePeriod mutablePeriod13 = days10.toMutablePeriod();
        int int14 = days10.size();
        int int15 = days8.compareTo((org.joda.time.base.BaseSingleFieldPeriod) days10);
        org.joda.time.Days days16 = days10.negated();
        org.joda.time.ReadableInterval readableInterval17 = null;
        org.joda.time.Days days18 = org.joda.time.Days.daysIn(readableInterval17);
        int int20 = days18.getValue((int) (short) 0);
        org.joda.time.Days days21 = org.joda.time.Days.FIVE;
        org.joda.time.Days days22 = days18.minus(days21);
        org.joda.time.ReadableInterval readableInterval23 = null;
        org.joda.time.Days days24 = org.joda.time.Days.daysIn(readableInterval23);
        int int26 = days24.getValue((int) (short) 0);
        org.joda.time.Days days27 = org.joda.time.Days.FIVE;
        org.joda.time.Days days28 = days24.minus(days27);
        org.joda.time.ReadableInterval readableInterval29 = null;
        org.joda.time.Days days30 = org.joda.time.Days.daysIn(readableInterval29);
        int int32 = days30.getValue((int) (short) 0);
        int int33 = days24.compareTo((org.joda.time.base.BaseSingleFieldPeriod) days30);
        org.joda.time.ReadableInterval readableInterval34 = null;
        org.joda.time.Days days35 = org.joda.time.Days.daysIn(readableInterval34);
        int int37 = days35.getValue((int) (short) 0);
        org.joda.time.Days days38 = org.joda.time.Days.FIVE;
        org.joda.time.Days days39 = days35.minus(days38);
        org.joda.time.DurationFieldType durationFieldType40 = null;
        int int41 = days38.get(durationFieldType40);
        org.joda.time.DurationFieldType durationFieldType42 = null;
        int int43 = days38.get(durationFieldType42);
        boolean boolean45 = days38.equals((java.lang.Object) false);
        boolean boolean46 = days30.equals((java.lang.Object) days38);
        org.joda.time.ReadableInterval readableInterval47 = null;
        org.joda.time.Days days48 = org.joda.time.Days.daysIn(readableInterval47);
        int int50 = days48.getValue((int) (short) 0);
        org.joda.time.Days days51 = org.joda.time.Days.FIVE;
        org.joda.time.Days days52 = days48.minus(days51);
        org.joda.time.DurationFieldType durationFieldType53 = null;
        boolean boolean54 = days51.isSupported(durationFieldType53);
        org.joda.time.DurationFieldType durationFieldType56 = days51.getFieldType(0);
        int int57 = days38.get(durationFieldType56);
        boolean boolean58 = days18.isSupported(durationFieldType56);
        org.joda.time.ReadableInterval readableInterval59 = null;
        org.joda.time.Days days60 = org.joda.time.Days.daysIn(readableInterval59);
        org.joda.time.Days days62 = days60.plus((int) (byte) 10);
        org.joda.time.MutablePeriod mutablePeriod63 = days60.toMutablePeriod();
        org.joda.time.Days days65 = days60.plus((int) (short) -1);
        org.joda.time.ReadableInterval readableInterval66 = null;
        org.joda.time.Days days67 = org.joda.time.Days.daysIn(readableInterval66);
        org.joda.time.Days days69 = days67.plus((int) (byte) 10);
        org.joda.time.Days days71 = days69.dividedBy((int) 'a');
        org.joda.time.Days days73 = days69.plus((int) ' ');
        org.joda.time.Days days74 = org.joda.time.Days.standardDaysIn((org.joda.time.ReadablePeriod) days73);
        org.joda.time.ReadableInterval readableInterval75 = null;
        org.joda.time.Days days76 = org.joda.time.Days.daysIn(readableInterval75);
        int int78 = days76.getValue((int) (short) 0);
        org.joda.time.Days days79 = org.joda.time.Days.FIVE;
        org.joda.time.Days days80 = days76.minus(days79);
        org.joda.time.DurationFieldType durationFieldType81 = null;
        boolean boolean82 = days79.isSupported(durationFieldType81);
        org.joda.time.DurationFieldType durationFieldType84 = days79.getFieldType(0);
        int int85 = days74.get(durationFieldType84);
        int int86 = days65.get(durationFieldType84);
        int int87 = days18.get(durationFieldType84);
        int int88 = days16.get(durationFieldType84);
        int int89 = days2.get(durationFieldType84);
        int int90 = days0.get(durationFieldType84);
        org.junit.Assert.assertNotNull(days0);
        org.junit.Assert.assertNotNull(days2);
        org.junit.Assert.assertNotNull(days4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 51 + "'", int6 == 51);
        org.junit.Assert.assertNotNull(days8);
        org.junit.Assert.assertNotNull(days10);
        org.junit.Assert.assertNotNull(days12);
        org.junit.Assert.assertNotNull(mutablePeriod13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 1 + "'", int14 == 1);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNotNull(days16);
        org.junit.Assert.assertNotNull(days18);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertNotNull(days21);
        org.junit.Assert.assertNotNull(days22);
        org.junit.Assert.assertNotNull(days24);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertNotNull(days27);
        org.junit.Assert.assertNotNull(days28);
        org.junit.Assert.assertNotNull(days30);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertNotNull(days35);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0);
        org.junit.Assert.assertNotNull(days38);
        org.junit.Assert.assertNotNull(days39);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(days48);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 0 + "'", int50 == 0);
        org.junit.Assert.assertNotNull(days51);
        org.junit.Assert.assertNotNull(days52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(durationFieldType56);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 5 + "'", int57 == 5);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(days60);
        org.junit.Assert.assertNotNull(days62);
        org.junit.Assert.assertNotNull(mutablePeriod63);
        org.junit.Assert.assertNotNull(days65);
        org.junit.Assert.assertNotNull(days67);
        org.junit.Assert.assertNotNull(days69);
        org.junit.Assert.assertNotNull(days71);
        org.junit.Assert.assertNotNull(days73);
        org.junit.Assert.assertNotNull(days74);
        org.junit.Assert.assertNotNull(days76);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 0 + "'", int78 == 0);
        org.junit.Assert.assertNotNull(days79);
        org.junit.Assert.assertNotNull(days80);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertNotNull(durationFieldType84);
        org.junit.Assert.assertTrue("'" + int85 + "' != '" + 42 + "'", int85 == 42);
        org.junit.Assert.assertTrue("'" + int86 + "' != '" + (-1) + "'", int86 == (-1));
        org.junit.Assert.assertTrue("'" + int87 + "' != '" + 0 + "'", int87 == 0);
        org.junit.Assert.assertTrue("'" + int88 + "' != '" + 0 + "'", int88 == 0);
        org.junit.Assert.assertTrue("'" + int89 + "' != '" + 51 + "'", int89 == 51);
        org.junit.Assert.assertTrue("'" + int90 + "' != '" + 1 + "'", int90 == 1);
    }

    @Test
    public void test0189() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0189");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Days days1 = org.joda.time.Days.daysIn(readableInterval0);
        org.joda.time.Days days3 = days1.plus((int) (byte) 10);
        org.joda.time.Days days5 = days3.dividedBy((int) 'a');
        org.joda.time.Days days7 = days3.dividedBy(5);
        org.joda.time.Days days9 = days3.plus((int) (byte) -1);
        org.joda.time.Days days11 = days3.dividedBy((int) (byte) -1);
        org.joda.time.ReadableInterval readableInterval12 = null;
        org.joda.time.Days days13 = org.joda.time.Days.daysIn(readableInterval12);
        int int15 = days13.getValue((int) (short) 0);
        org.joda.time.Days days16 = org.joda.time.Days.FIVE;
        org.joda.time.Days days17 = days13.minus(days16);
        org.joda.time.Days days18 = null;
        org.joda.time.Days days19 = days13.minus(days18);
        org.joda.time.ReadableInterval readableInterval20 = null;
        org.joda.time.Days days21 = org.joda.time.Days.daysIn(readableInterval20);
        int int23 = days21.getValue((int) (short) 0);
        org.joda.time.Days days24 = org.joda.time.Days.FIVE;
        org.joda.time.Days days25 = days21.minus(days24);
        org.joda.time.DurationFieldType durationFieldType26 = null;
        int int27 = days24.get(durationFieldType26);
        org.joda.time.DurationFieldType durationFieldType28 = null;
        int int29 = days24.get(durationFieldType28);
        boolean boolean31 = days24.equals((java.lang.Object) 0L);
        int int32 = days13.compareTo((org.joda.time.base.BaseSingleFieldPeriod) days24);
        boolean boolean33 = days11.equals((java.lang.Object) days24);
        org.joda.time.ReadableInterval readableInterval34 = null;
        org.joda.time.Days days35 = org.joda.time.Days.daysIn(readableInterval34);
        int int37 = days35.getValue((int) (short) 0);
        org.joda.time.ReadableInterval readableInterval38 = null;
        org.joda.time.Days days39 = org.joda.time.Days.daysIn(readableInterval38);
        int int41 = days39.getValue((int) (short) 0);
        org.joda.time.Days days42 = org.joda.time.Days.FIVE;
        org.joda.time.Days days43 = days39.minus(days42);
        int int44 = days35.compareTo((org.joda.time.base.BaseSingleFieldPeriod) days42);
        java.lang.String str45 = days35.toString();
        org.joda.time.Days days47 = days35.plus((int) '4');
        org.joda.time.ReadableInterval readableInterval48 = null;
        org.joda.time.Days days49 = org.joda.time.Days.daysIn(readableInterval48);
        int int51 = days49.getValue((int) (short) 0);
        org.joda.time.Days days52 = org.joda.time.Days.FIVE;
        org.joda.time.Days days53 = days49.minus(days52);
        org.joda.time.DurationFieldType durationFieldType54 = null;
        boolean boolean55 = days52.isSupported(durationFieldType54);
        org.joda.time.DurationFieldType durationFieldType57 = days52.getFieldType(0);
        org.joda.time.ReadableInterval readableInterval58 = null;
        org.joda.time.Days days59 = org.joda.time.Days.daysIn(readableInterval58);
        int int61 = days59.getValue((int) (short) 0);
        org.joda.time.Days days62 = org.joda.time.Days.FIVE;
        org.joda.time.Days days63 = days59.minus(days62);
        org.joda.time.Days days64 = null;
        org.joda.time.Days days65 = days59.minus(days64);
        org.joda.time.Days days67 = days59.minus((-1));
        org.joda.time.DurationFieldType durationFieldType68 = days59.getFieldType();
        boolean boolean69 = days52.isGreaterThan(days59);
        org.joda.time.ReadableInterval readableInterval70 = null;
        org.joda.time.Days days71 = org.joda.time.Days.daysIn(readableInterval70);
        org.joda.time.Days days73 = days71.plus((int) (byte) 10);
        org.joda.time.Days days74 = days59.plus(days73);
        org.joda.time.ReadableInterval readableInterval75 = null;
        org.joda.time.Days days76 = org.joda.time.Days.daysIn(readableInterval75);
        int int78 = days76.getValue((int) (short) 0);
        org.joda.time.Days days79 = org.joda.time.Days.FIVE;
        org.joda.time.Days days80 = days76.minus(days79);
        org.joda.time.Days days81 = null;
        org.joda.time.Days days82 = days76.minus(days81);
        org.joda.time.Duration duration83 = days76.toStandardDuration();
        org.joda.time.Days days84 = days74.minus(days76);
        org.joda.time.Duration duration85 = days84.toStandardDuration();
        org.joda.time.PeriodType periodType86 = days84.getPeriodType();
        org.joda.time.Days days87 = days47.plus(days84);
        boolean boolean88 = days11.isLessThan(days87);
        org.joda.time.PeriodType periodType89 = days11.getPeriodType();
        org.junit.Assert.assertNotNull(days1);
        org.junit.Assert.assertNotNull(days3);
        org.junit.Assert.assertNotNull(days5);
        org.junit.Assert.assertNotNull(days7);
        org.junit.Assert.assertNotNull(days9);
        org.junit.Assert.assertNotNull(days11);
        org.junit.Assert.assertNotNull(days13);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNotNull(days16);
        org.junit.Assert.assertNotNull(days17);
        org.junit.Assert.assertNotNull(days19);
        org.junit.Assert.assertNotNull(days21);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertNotNull(days24);
        org.junit.Assert.assertNotNull(days25);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(days35);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0);
        org.junit.Assert.assertNotNull(days39);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0);
        org.junit.Assert.assertNotNull(days42);
        org.junit.Assert.assertNotNull(days43);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1));
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "P0D" + "'", str45, "P0D");
        org.junit.Assert.assertNotNull(days47);
        org.junit.Assert.assertNotNull(days49);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 0 + "'", int51 == 0);
        org.junit.Assert.assertNotNull(days52);
        org.junit.Assert.assertNotNull(days53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(durationFieldType57);
        org.junit.Assert.assertNotNull(days59);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 0 + "'", int61 == 0);
        org.junit.Assert.assertNotNull(days62);
        org.junit.Assert.assertNotNull(days63);
        org.junit.Assert.assertNotNull(days65);
        org.junit.Assert.assertNotNull(days67);
        org.junit.Assert.assertNotNull(durationFieldType68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertNotNull(days71);
        org.junit.Assert.assertNotNull(days73);
        org.junit.Assert.assertNotNull(days74);
        org.junit.Assert.assertNotNull(days76);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 0 + "'", int78 == 0);
        org.junit.Assert.assertNotNull(days79);
        org.junit.Assert.assertNotNull(days80);
        org.junit.Assert.assertNotNull(days82);
        org.junit.Assert.assertNotNull(duration83);
        org.junit.Assert.assertNotNull(days84);
        org.junit.Assert.assertNotNull(duration85);
        org.junit.Assert.assertNotNull(periodType86);
        org.junit.Assert.assertNotNull(days87);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + true + "'", boolean88 == true);
        org.junit.Assert.assertNotNull(periodType89);
    }

    @Test
    public void test0190() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0190");
        org.joda.time.Days days0 = org.joda.time.Days.ZERO;
        org.joda.time.ReadableInterval readableInterval1 = null;
        org.joda.time.Days days2 = org.joda.time.Days.daysIn(readableInterval1);
        int int4 = days2.getValue((int) (short) 0);
        org.joda.time.Days days5 = org.joda.time.Days.FIVE;
        org.joda.time.Days days6 = days2.minus(days5);
        org.joda.time.Days days7 = null;
        org.joda.time.Days days8 = days2.minus(days7);
        org.joda.time.Duration duration9 = days2.toStandardDuration();
        org.joda.time.DurationFieldType durationFieldType10 = days2.getFieldType();
        org.joda.time.Days days11 = days0.minus(days2);
        org.joda.time.Days days12 = org.joda.time.Days.SIX;
        org.joda.time.Days days14 = days12.plus(100);
        org.joda.time.ReadableInterval readableInterval15 = null;
        org.joda.time.Days days16 = org.joda.time.Days.daysIn(readableInterval15);
        int int18 = days16.getValue((int) (short) 0);
        org.joda.time.Days days19 = org.joda.time.Days.FIVE;
        org.joda.time.Days days20 = days16.minus(days19);
        org.joda.time.Days days21 = null;
        org.joda.time.Days days22 = days16.minus(days21);
        org.joda.time.Days days24 = days16.minus((-1));
        org.joda.time.DurationFieldType durationFieldType25 = days16.getFieldType();
        int int26 = days12.get(durationFieldType25);
        int int27 = days11.get(durationFieldType25);
        org.joda.time.Days days29 = org.joda.time.Days.days(1);
        org.joda.time.ReadableInterval readableInterval30 = null;
        org.joda.time.Days days31 = org.joda.time.Days.daysIn(readableInterval30);
        int int33 = days31.getValue((int) (short) 0);
        org.joda.time.Days days34 = org.joda.time.Days.FIVE;
        org.joda.time.Days days35 = days31.minus(days34);
        org.joda.time.DurationFieldType durationFieldType36 = null;
        boolean boolean37 = days34.isSupported(durationFieldType36);
        org.joda.time.DurationFieldType durationFieldType39 = days34.getFieldType(0);
        org.joda.time.ReadableInterval readableInterval40 = null;
        org.joda.time.Days days41 = org.joda.time.Days.daysIn(readableInterval40);
        int int43 = days41.getValue((int) (short) 0);
        org.joda.time.Days days44 = org.joda.time.Days.FIVE;
        org.joda.time.Days days45 = days41.minus(days44);
        org.joda.time.Days days46 = null;
        org.joda.time.Days days47 = days41.minus(days46);
        org.joda.time.Days days49 = days41.minus((-1));
        org.joda.time.DurationFieldType durationFieldType50 = days41.getFieldType();
        boolean boolean51 = days34.isGreaterThan(days41);
        org.joda.time.ReadableInterval readableInterval52 = null;
        org.joda.time.Days days53 = org.joda.time.Days.daysIn(readableInterval52);
        org.joda.time.Days days55 = days53.plus((int) (byte) 10);
        org.joda.time.Days days56 = days41.plus(days55);
        org.joda.time.MutablePeriod mutablePeriod57 = days55.toMutablePeriod();
        org.joda.time.PeriodType periodType58 = days55.getPeriodType();
        org.joda.time.Days days59 = days29.minus(days55);
        org.joda.time.Days days60 = days11.minus(days29);
        org.joda.time.Days days61 = org.joda.time.Days.standardDaysIn((org.joda.time.ReadablePeriod) days29);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Days days63 = days29.dividedBy(0);
            org.junit.Assert.fail("Expected exception of type java.lang.ArithmeticException; message: / by zero");
        } catch (java.lang.ArithmeticException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(days0);
        org.junit.Assert.assertNotNull(days2);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(days5);
        org.junit.Assert.assertNotNull(days6);
        org.junit.Assert.assertNotNull(days8);
        org.junit.Assert.assertNotNull(duration9);
        org.junit.Assert.assertNotNull(durationFieldType10);
        org.junit.Assert.assertNotNull(days11);
        org.junit.Assert.assertNotNull(days12);
        org.junit.Assert.assertNotNull(days14);
        org.junit.Assert.assertNotNull(days16);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNotNull(days19);
        org.junit.Assert.assertNotNull(days20);
        org.junit.Assert.assertNotNull(days22);
        org.junit.Assert.assertNotNull(days24);
        org.junit.Assert.assertNotNull(durationFieldType25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 6 + "'", int26 == 6);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertNotNull(days29);
        org.junit.Assert.assertNotNull(days31);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertNotNull(days34);
        org.junit.Assert.assertNotNull(days35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(durationFieldType39);
        org.junit.Assert.assertNotNull(days41);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0);
        org.junit.Assert.assertNotNull(days44);
        org.junit.Assert.assertNotNull(days45);
        org.junit.Assert.assertNotNull(days47);
        org.junit.Assert.assertNotNull(days49);
        org.junit.Assert.assertNotNull(durationFieldType50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(days53);
        org.junit.Assert.assertNotNull(days55);
        org.junit.Assert.assertNotNull(days56);
        org.junit.Assert.assertNotNull(mutablePeriod57);
        org.junit.Assert.assertNotNull(periodType58);
        org.junit.Assert.assertNotNull(days59);
        org.junit.Assert.assertNotNull(days60);
        org.junit.Assert.assertNotNull(days61);
    }

    @Test
    public void test0191() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0191");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Days days1 = org.joda.time.Days.daysIn(readableInterval0);
        org.joda.time.ReadableInterval readableInterval2 = null;
        org.joda.time.Days days3 = org.joda.time.Days.daysIn(readableInterval2);
        int int5 = days3.getValue((int) (short) 0);
        org.joda.time.Days days6 = org.joda.time.Days.FIVE;
        org.joda.time.Days days7 = days3.minus(days6);
        org.joda.time.DurationFieldType durationFieldType8 = null;
        boolean boolean9 = days6.isSupported(durationFieldType8);
        org.joda.time.DurationFieldType durationFieldType11 = days6.getFieldType(0);
        int int12 = days1.get(durationFieldType11);
        org.joda.time.ReadableInterval readableInterval13 = null;
        org.joda.time.Days days14 = org.joda.time.Days.daysIn(readableInterval13);
        int int16 = days14.getValue((int) (short) 0);
        org.joda.time.ReadableInterval readableInterval17 = null;
        org.joda.time.Days days18 = org.joda.time.Days.daysIn(readableInterval17);
        int int20 = days18.getValue((int) (short) 0);
        org.joda.time.Days days21 = org.joda.time.Days.FIVE;
        org.joda.time.Days days22 = days18.minus(days21);
        int int23 = days14.compareTo((org.joda.time.base.BaseSingleFieldPeriod) days21);
        java.lang.String str24 = days14.toString();
        org.joda.time.Days days25 = null;
        boolean boolean26 = days14.isGreaterThan(days25);
        org.joda.time.Period period27 = days14.toPeriod();
        org.joda.time.Days days28 = days1.plus(days14);
        org.joda.time.Days days29 = days28.negated();
        org.junit.Assert.assertNotNull(days1);
        org.junit.Assert.assertNotNull(days3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(days6);
        org.junit.Assert.assertNotNull(days7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(durationFieldType11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNotNull(days14);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertNotNull(days18);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertNotNull(days21);
        org.junit.Assert.assertNotNull(days22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "P0D" + "'", str24, "P0D");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(period27);
        org.junit.Assert.assertNotNull(days28);
        org.junit.Assert.assertNotNull(days29);
    }

    @Test
    public void test0192() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0192");
        org.joda.time.Days days0 = org.joda.time.Days.SIX;
        org.joda.time.Days days2 = days0.plus(100);
        org.joda.time.Days days4 = days0.plus((int) (byte) 1);
        int int5 = days4.size();
        // The following exception was thrown during execution in test generation
        try {
            int int7 = days4.getValue((int) (short) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 1");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(days0);
        org.junit.Assert.assertNotNull(days2);
        org.junit.Assert.assertNotNull(days4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
    }

    @Test
    public void test0193() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0193");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Days days1 = org.joda.time.Days.daysIn(readableInterval0);
        org.joda.time.Days days3 = days1.plus((int) (byte) 10);
        org.joda.time.Days days5 = days3.dividedBy((int) 'a');
        org.joda.time.Days days7 = days3.dividedBy(5);
        org.joda.time.Days days9 = days3.plus((int) (byte) -1);
        org.joda.time.Days days11 = days3.dividedBy((int) (byte) -1);
        java.lang.String str12 = days3.toString();
        java.lang.Class<?> wildcardClass13 = days3.getClass();
        org.junit.Assert.assertNotNull(days1);
        org.junit.Assert.assertNotNull(days3);
        org.junit.Assert.assertNotNull(days5);
        org.junit.Assert.assertNotNull(days7);
        org.junit.Assert.assertNotNull(days9);
        org.junit.Assert.assertNotNull(days11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "P10D" + "'", str12, "P10D");
        org.junit.Assert.assertNotNull(wildcardClass13);
    }

    @Test
    public void test0194() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0194");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Days days1 = org.joda.time.Days.daysIn(readableInterval0);
        org.joda.time.Days days3 = days1.plus((int) (byte) 10);
        org.joda.time.Days days5 = days3.dividedBy((int) 'a');
        org.joda.time.Days days7 = days3.plus((int) ' ');
        org.joda.time.Days days8 = org.joda.time.Days.standardDaysIn((org.joda.time.ReadablePeriod) days7);
        org.joda.time.Days days10 = days8.minus((int) '#');
        org.joda.time.ReadableInterval readableInterval11 = null;
        org.joda.time.Days days12 = org.joda.time.Days.daysIn(readableInterval11);
        int int14 = days12.getValue((int) (short) 0);
        org.joda.time.Days days15 = org.joda.time.Days.FIVE;
        org.joda.time.Days days16 = days12.minus(days15);
        org.joda.time.Days days17 = null;
        org.joda.time.Days days18 = days12.minus(days17);
        org.joda.time.ReadableInterval readableInterval19 = null;
        org.joda.time.Days days20 = org.joda.time.Days.daysIn(readableInterval19);
        org.joda.time.ReadableInterval readableInterval21 = null;
        org.joda.time.Days days22 = org.joda.time.Days.daysIn(readableInterval21);
        int int24 = days22.getValue((int) (short) 0);
        org.joda.time.Days days25 = org.joda.time.Days.FIVE;
        org.joda.time.Days days26 = days22.minus(days25);
        org.joda.time.DurationFieldType durationFieldType27 = null;
        boolean boolean28 = days25.isSupported(durationFieldType27);
        org.joda.time.DurationFieldType durationFieldType30 = days25.getFieldType(0);
        int int31 = days20.get(durationFieldType30);
        org.joda.time.PeriodType periodType32 = days20.getPeriodType();
        org.joda.time.Days days33 = days12.plus(days20);
        org.joda.time.ReadableInterval readableInterval34 = null;
        org.joda.time.Days days35 = org.joda.time.Days.daysIn(readableInterval34);
        int int37 = days35.getValue((int) (short) 0);
        org.joda.time.Days days38 = org.joda.time.Days.FIVE;
        org.joda.time.Days days39 = days35.minus(days38);
        org.joda.time.Days days40 = null;
        org.joda.time.Days days41 = days35.minus(days40);
        org.joda.time.Days days43 = days41.minus(100);
        org.joda.time.ReadableInterval readableInterval44 = null;
        org.joda.time.Days days45 = org.joda.time.Days.daysIn(readableInterval44);
        int int47 = days45.getValue((int) (short) 0);
        org.joda.time.Days days48 = org.joda.time.Days.FIVE;
        org.joda.time.Days days49 = days45.minus(days48);
        org.joda.time.Days days50 = null;
        org.joda.time.Days days51 = days45.minus(days50);
        org.joda.time.Days days53 = days45.minus((-1));
        org.joda.time.Days days54 = days41.plus(days45);
        boolean boolean55 = days33.equals((java.lang.Object) days45);
        boolean boolean56 = days10.equals((java.lang.Object) days33);
        java.lang.String str57 = days10.toString();
        org.joda.time.Days days58 = org.joda.time.Days.SEVEN;
        org.joda.time.Days days60 = days58.plus(1);
        org.joda.time.ReadableInterval readableInterval61 = null;
        org.joda.time.Days days62 = org.joda.time.Days.daysIn(readableInterval61);
        org.joda.time.Days days64 = days62.plus((int) (byte) 10);
        org.joda.time.DurationFieldType durationFieldType65 = days64.getFieldType();
        int int66 = days60.get(durationFieldType65);
        int int67 = days10.get(durationFieldType65);
        org.junit.Assert.assertNotNull(days1);
        org.junit.Assert.assertNotNull(days3);
        org.junit.Assert.assertNotNull(days5);
        org.junit.Assert.assertNotNull(days7);
        org.junit.Assert.assertNotNull(days8);
        org.junit.Assert.assertNotNull(days10);
        org.junit.Assert.assertNotNull(days12);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNotNull(days15);
        org.junit.Assert.assertNotNull(days16);
        org.junit.Assert.assertNotNull(days18);
        org.junit.Assert.assertNotNull(days20);
        org.junit.Assert.assertNotNull(days22);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertNotNull(days25);
        org.junit.Assert.assertNotNull(days26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(durationFieldType30);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertNotNull(periodType32);
        org.junit.Assert.assertNotNull(days33);
        org.junit.Assert.assertNotNull(days35);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0);
        org.junit.Assert.assertNotNull(days38);
        org.junit.Assert.assertNotNull(days39);
        org.junit.Assert.assertNotNull(days41);
        org.junit.Assert.assertNotNull(days43);
        org.junit.Assert.assertNotNull(days45);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 0 + "'", int47 == 0);
        org.junit.Assert.assertNotNull(days48);
        org.junit.Assert.assertNotNull(days49);
        org.junit.Assert.assertNotNull(days51);
        org.junit.Assert.assertNotNull(days53);
        org.junit.Assert.assertNotNull(days54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "P7D" + "'", str57, "P7D");
        org.junit.Assert.assertNotNull(days58);
        org.junit.Assert.assertNotNull(days60);
        org.junit.Assert.assertNotNull(days62);
        org.junit.Assert.assertNotNull(days64);
        org.junit.Assert.assertNotNull(durationFieldType65);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 8 + "'", int66 == 8);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 7 + "'", int67 == 7);
    }

    @Test
    public void test0195() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0195");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Days days1 = org.joda.time.Days.daysIn(readableInterval0);
        org.joda.time.Days days3 = days1.plus((int) (byte) 10);
        org.joda.time.Days days5 = days3.dividedBy((int) 'a');
        org.joda.time.Days days7 = days3.plus((int) ' ');
        org.joda.time.Days days8 = org.joda.time.Days.standardDaysIn((org.joda.time.ReadablePeriod) days7);
        org.joda.time.Days days10 = days8.minus((int) '#');
        org.joda.time.Days days12 = days8.multipliedBy((int) (short) 1);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Days days14 = days12.minus((-2147483648));
            org.junit.Assert.fail("Expected exception of type java.lang.ArithmeticException; message: Integer.MIN_VALUE cannot be negated");
        } catch (java.lang.ArithmeticException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(days1);
        org.junit.Assert.assertNotNull(days3);
        org.junit.Assert.assertNotNull(days5);
        org.junit.Assert.assertNotNull(days7);
        org.junit.Assert.assertNotNull(days8);
        org.junit.Assert.assertNotNull(days10);
        org.junit.Assert.assertNotNull(days12);
    }

    @Test
    public void test0196() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0196");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Days days1 = org.joda.time.Days.daysIn(readableInterval0);
        int int3 = days1.getValue((int) (short) 0);
        org.joda.time.Days days4 = org.joda.time.Days.FIVE;
        org.joda.time.Days days5 = days1.minus(days4);
        org.joda.time.Days days6 = null;
        org.joda.time.Days days7 = days1.minus(days6);
        org.joda.time.ReadableInterval readableInterval8 = null;
        org.joda.time.Days days9 = org.joda.time.Days.daysIn(readableInterval8);
        org.joda.time.ReadableInterval readableInterval10 = null;
        org.joda.time.Days days11 = org.joda.time.Days.daysIn(readableInterval10);
        int int13 = days11.getValue((int) (short) 0);
        org.joda.time.Days days14 = org.joda.time.Days.FIVE;
        org.joda.time.Days days15 = days11.minus(days14);
        org.joda.time.DurationFieldType durationFieldType16 = null;
        boolean boolean17 = days14.isSupported(durationFieldType16);
        org.joda.time.DurationFieldType durationFieldType19 = days14.getFieldType(0);
        int int20 = days9.get(durationFieldType19);
        org.joda.time.PeriodType periodType21 = days9.getPeriodType();
        org.joda.time.Days days22 = days1.plus(days9);
        org.joda.time.DurationFieldType durationFieldType23 = days1.getFieldType();
        org.joda.time.Days days25 = days1.plus(51);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.DurationFieldType durationFieldType27 = days25.getFieldType((int) (short) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 10");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(days1);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(days4);
        org.junit.Assert.assertNotNull(days5);
        org.junit.Assert.assertNotNull(days7);
        org.junit.Assert.assertNotNull(days9);
        org.junit.Assert.assertNotNull(days11);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(days14);
        org.junit.Assert.assertNotNull(days15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(durationFieldType19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertNotNull(periodType21);
        org.junit.Assert.assertNotNull(days22);
        org.junit.Assert.assertNotNull(durationFieldType23);
        org.junit.Assert.assertNotNull(days25);
    }

    @Test
    public void test0197() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0197");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Days days1 = org.joda.time.Days.daysIn(readableInterval0);
        int int3 = days1.getValue((int) (short) 0);
        org.joda.time.Days days4 = org.joda.time.Days.FIVE;
        org.joda.time.Days days5 = days1.minus(days4);
        org.joda.time.Days days6 = null;
        org.joda.time.Days days7 = days1.minus(days6);
        org.joda.time.Days days9 = days7.minus(100);
        org.joda.time.Days days10 = days7.negated();
        org.joda.time.Days days12 = days7.dividedBy(20);
        org.junit.Assert.assertNotNull(days1);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(days4);
        org.junit.Assert.assertNotNull(days5);
        org.junit.Assert.assertNotNull(days7);
        org.junit.Assert.assertNotNull(days9);
        org.junit.Assert.assertNotNull(days10);
        org.junit.Assert.assertNotNull(days12);
    }

    @Test
    public void test0198() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0198");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Days days1 = org.joda.time.Days.daysIn(readableInterval0);
        org.joda.time.Days days3 = days1.plus((int) (byte) 10);
        org.joda.time.Days days5 = days3.dividedBy((int) 'a');
        org.joda.time.Days days7 = days3.plus((int) ' ');
        org.joda.time.Days days8 = org.joda.time.Days.standardDaysIn((org.joda.time.ReadablePeriod) days7);
        org.joda.time.Days days10 = days8.minus((int) '#');
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.DurationFieldType durationFieldType12 = days10.getFieldType((-1));
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: -1");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(days1);
        org.junit.Assert.assertNotNull(days3);
        org.junit.Assert.assertNotNull(days5);
        org.junit.Assert.assertNotNull(days7);
        org.junit.Assert.assertNotNull(days8);
        org.junit.Assert.assertNotNull(days10);
    }

    @Test
    public void test0199() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0199");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Days days1 = org.joda.time.Days.daysIn(readableInterval0);
        int int3 = days1.getValue((int) (short) 0);
        org.joda.time.Days days4 = org.joda.time.Days.FIVE;
        org.joda.time.Days days5 = days1.minus(days4);
        org.joda.time.DurationFieldType durationFieldType6 = null;
        int int7 = days4.get(durationFieldType6);
        org.joda.time.DurationFieldType durationFieldType8 = null;
        int int9 = days4.get(durationFieldType8);
        boolean boolean11 = days4.equals((java.lang.Object) 0L);
        org.joda.time.DurationFieldType durationFieldType12 = days4.getFieldType();
        org.joda.time.Days days13 = days4.negated();
        org.joda.time.ReadableInterval readableInterval14 = null;
        org.joda.time.Days days15 = org.joda.time.Days.daysIn(readableInterval14);
        int int17 = days15.getValue((int) (short) 0);
        org.joda.time.Days days18 = org.joda.time.Days.FIVE;
        org.joda.time.Days days19 = days15.minus(days18);
        org.joda.time.DurationFieldType durationFieldType20 = null;
        int int21 = days18.get(durationFieldType20);
        org.joda.time.DurationFieldType durationFieldType22 = null;
        int int23 = days18.get(durationFieldType22);
        boolean boolean25 = days18.equals((java.lang.Object) 0L);
        int int26 = days18.getDays();
        org.joda.time.Days days27 = days13.minus(days18);
        org.joda.time.Days days28 = org.joda.time.Days.ZERO;
        org.joda.time.ReadableInterval readableInterval29 = null;
        org.joda.time.Days days30 = org.joda.time.Days.daysIn(readableInterval29);
        int int32 = days30.getValue((int) (short) 0);
        org.joda.time.Days days33 = org.joda.time.Days.FIVE;
        org.joda.time.Days days34 = days30.minus(days33);
        org.joda.time.Days days35 = null;
        org.joda.time.Days days36 = days30.minus(days35);
        org.joda.time.Duration duration37 = days30.toStandardDuration();
        org.joda.time.DurationFieldType durationFieldType38 = days30.getFieldType();
        org.joda.time.Days days39 = days28.minus(days30);
        org.joda.time.ReadableInterval readableInterval40 = null;
        org.joda.time.Days days41 = org.joda.time.Days.daysIn(readableInterval40);
        int int43 = days41.getValue((int) (short) 0);
        org.joda.time.Days days44 = org.joda.time.Days.FIVE;
        org.joda.time.Days days45 = days41.minus(days44);
        org.joda.time.DurationFieldType durationFieldType46 = null;
        int int47 = days44.get(durationFieldType46);
        org.joda.time.DurationFieldType durationFieldType48 = null;
        int int49 = days44.get(durationFieldType48);
        boolean boolean51 = days44.equals((java.lang.Object) 0L);
        org.joda.time.DurationFieldType durationFieldType52 = days44.getFieldType();
        org.joda.time.Days days53 = days44.negated();
        org.joda.time.ReadableInterval readableInterval54 = null;
        org.joda.time.Days days55 = org.joda.time.Days.daysIn(readableInterval54);
        int int57 = days55.getValue((int) (short) 0);
        org.joda.time.Days days58 = org.joda.time.Days.FIVE;
        org.joda.time.Days days59 = days55.minus(days58);
        org.joda.time.DurationFieldType durationFieldType60 = null;
        int int61 = days58.get(durationFieldType60);
        org.joda.time.DurationFieldType durationFieldType62 = null;
        int int63 = days58.get(durationFieldType62);
        boolean boolean65 = days58.equals((java.lang.Object) 0L);
        int int66 = days58.getDays();
        org.joda.time.Days days67 = days53.minus(days58);
        org.joda.time.Days days68 = days39.minus(days53);
        boolean boolean69 = days27.isLessThan(days39);
        org.joda.time.Days days71 = days27.plus((int) 'a');
        org.joda.time.Days days73 = days71.dividedBy((int) '#');
        org.joda.time.Period period74 = days71.toPeriod();
        org.junit.Assert.assertNotNull(days1);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(days4);
        org.junit.Assert.assertNotNull(days5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(durationFieldType12);
        org.junit.Assert.assertNotNull(days13);
        org.junit.Assert.assertNotNull(days15);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNotNull(days18);
        org.junit.Assert.assertNotNull(days19);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 5 + "'", int26 == 5);
        org.junit.Assert.assertNotNull(days27);
        org.junit.Assert.assertNotNull(days28);
        org.junit.Assert.assertNotNull(days30);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertNotNull(days33);
        org.junit.Assert.assertNotNull(days34);
        org.junit.Assert.assertNotNull(days36);
        org.junit.Assert.assertNotNull(duration37);
        org.junit.Assert.assertNotNull(durationFieldType38);
        org.junit.Assert.assertNotNull(days39);
        org.junit.Assert.assertNotNull(days41);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0);
        org.junit.Assert.assertNotNull(days44);
        org.junit.Assert.assertNotNull(days45);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 0 + "'", int47 == 0);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 0 + "'", int49 == 0);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(durationFieldType52);
        org.junit.Assert.assertNotNull(days53);
        org.junit.Assert.assertNotNull(days55);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 0 + "'", int57 == 0);
        org.junit.Assert.assertNotNull(days58);
        org.junit.Assert.assertNotNull(days59);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 0 + "'", int61 == 0);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 0 + "'", int63 == 0);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 5 + "'", int66 == 5);
        org.junit.Assert.assertNotNull(days67);
        org.junit.Assert.assertNotNull(days68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertNotNull(days71);
        org.junit.Assert.assertNotNull(days73);
        org.junit.Assert.assertNotNull(period74);
    }

    @Test
    public void test0200() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0200");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Days days1 = org.joda.time.Days.daysIn(readableInterval0);
        int int3 = days1.getValue((int) (short) 0);
        org.joda.time.Days days4 = org.joda.time.Days.FIVE;
        org.joda.time.Days days5 = days1.minus(days4);
        org.joda.time.Days days6 = null;
        org.joda.time.Days days7 = days1.minus(days6);
        org.joda.time.Days days9 = days7.minus(100);
        org.joda.time.Days days10 = org.joda.time.Days.standardDaysIn((org.joda.time.ReadablePeriod) days9);
        org.joda.time.ReadableInterval readableInterval11 = null;
        org.joda.time.Days days12 = org.joda.time.Days.daysIn(readableInterval11);
        int int14 = days12.getValue((int) (short) 0);
        org.joda.time.Days days15 = org.joda.time.Days.FIVE;
        org.joda.time.Days days16 = days12.minus(days15);
        org.joda.time.Days days17 = org.joda.time.Days.FIVE;
        org.joda.time.ReadableInterval readableInterval18 = null;
        org.joda.time.Days days19 = org.joda.time.Days.daysIn(readableInterval18);
        int int21 = days19.getValue((int) (short) 0);
        org.joda.time.ReadableInterval readableInterval22 = null;
        org.joda.time.Days days23 = org.joda.time.Days.daysIn(readableInterval22);
        int int25 = days23.getValue((int) (short) 0);
        org.joda.time.Days days26 = org.joda.time.Days.FIVE;
        org.joda.time.Days days27 = days23.minus(days26);
        int int28 = days19.compareTo((org.joda.time.base.BaseSingleFieldPeriod) days26);
        org.joda.time.ReadableInterval readableInterval29 = null;
        org.joda.time.Days days30 = org.joda.time.Days.daysIn(readableInterval29);
        int int32 = days30.getValue((int) (short) 0);
        org.joda.time.Days days33 = org.joda.time.Days.FIVE;
        org.joda.time.Days days34 = days30.minus(days33);
        org.joda.time.DurationFieldType durationFieldType35 = null;
        boolean boolean36 = days33.isSupported(durationFieldType35);
        org.joda.time.DurationFieldType durationFieldType38 = days33.getFieldType(0);
        int int39 = days19.get(durationFieldType38);
        boolean boolean40 = days17.isSupported(durationFieldType38);
        org.joda.time.Days days41 = days15.plus(days17);
        org.joda.time.ReadableInterval readableInterval42 = null;
        org.joda.time.Days days43 = org.joda.time.Days.daysIn(readableInterval42);
        int int45 = days43.getValue((int) (short) 0);
        org.joda.time.ReadableInterval readableInterval46 = null;
        org.joda.time.Days days47 = org.joda.time.Days.daysIn(readableInterval46);
        int int49 = days47.getValue((int) (short) 0);
        org.joda.time.Days days50 = org.joda.time.Days.FIVE;
        org.joda.time.Days days51 = days47.minus(days50);
        int int52 = days43.compareTo((org.joda.time.base.BaseSingleFieldPeriod) days50);
        java.lang.String str53 = days43.toString();
        org.joda.time.Days days55 = days43.plus((int) '4');
        org.joda.time.PeriodType periodType56 = days55.getPeriodType();
        int int57 = days55.getDays();
        boolean boolean58 = days41.isGreaterThan(days55);
        org.joda.time.Days days60 = days55.plus((int) (byte) -1);
        int int62 = days60.getValue(0);
        boolean boolean63 = days10.isLessThan(days60);
        org.joda.time.MutablePeriod mutablePeriod64 = days60.toMutablePeriod();
        org.junit.Assert.assertNotNull(days1);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(days4);
        org.junit.Assert.assertNotNull(days5);
        org.junit.Assert.assertNotNull(days7);
        org.junit.Assert.assertNotNull(days9);
        org.junit.Assert.assertNotNull(days10);
        org.junit.Assert.assertNotNull(days12);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNotNull(days15);
        org.junit.Assert.assertNotNull(days16);
        org.junit.Assert.assertNotNull(days17);
        org.junit.Assert.assertNotNull(days19);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertNotNull(days23);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertNotNull(days26);
        org.junit.Assert.assertNotNull(days27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertNotNull(days30);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertNotNull(days33);
        org.junit.Assert.assertNotNull(days34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(durationFieldType38);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(days41);
        org.junit.Assert.assertNotNull(days43);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 0 + "'", int45 == 0);
        org.junit.Assert.assertNotNull(days47);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 0 + "'", int49 == 0);
        org.junit.Assert.assertNotNull(days50);
        org.junit.Assert.assertNotNull(days51);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + (-1) + "'", int52 == (-1));
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "P0D" + "'", str53, "P0D");
        org.junit.Assert.assertNotNull(days55);
        org.junit.Assert.assertNotNull(periodType56);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 52 + "'", int57 == 52);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(days60);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 51 + "'", int62 == 51);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(mutablePeriod64);
    }

    @Test
    public void test0201() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0201");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Days days1 = org.joda.time.Days.daysIn(readableInterval0);
        int int3 = days1.getValue((int) (short) 0);
        org.joda.time.Days days4 = org.joda.time.Days.FIVE;
        org.joda.time.Days days5 = days1.minus(days4);
        org.joda.time.DurationFieldType durationFieldType6 = null;
        boolean boolean7 = days4.isSupported(durationFieldType6);
        org.joda.time.DurationFieldType durationFieldType9 = days4.getFieldType(0);
        org.joda.time.Period period10 = days4.toPeriod();
        int int12 = days4.getValue(0);
        org.joda.time.Days days14 = days4.dividedBy((int) (byte) 1);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.DurationFieldType durationFieldType16 = days4.getFieldType((int) '4');
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 52");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(days1);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(days4);
        org.junit.Assert.assertNotNull(days5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(durationFieldType9);
        org.junit.Assert.assertNotNull(period10);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 5 + "'", int12 == 5);
        org.junit.Assert.assertNotNull(days14);
    }

    @Test
    public void test0202() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0202");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Days days1 = org.joda.time.Days.daysIn(readableInterval0);
        org.joda.time.Days days3 = days1.plus((int) (byte) 10);
        org.joda.time.Days days5 = days3.dividedBy((int) 'a');
        org.joda.time.Days days7 = days3.dividedBy(5);
        org.joda.time.Days days9 = days3.plus((int) (byte) -1);
        org.joda.time.Days days11 = days3.minus((int) (byte) 100);
        org.joda.time.Days days12 = days11.negated();
        int int13 = days11.size();
        org.joda.time.ReadableInterval readableInterval14 = null;
        org.joda.time.Days days15 = org.joda.time.Days.daysIn(readableInterval14);
        int int17 = days15.getValue((int) (short) 0);
        org.joda.time.Days days18 = org.joda.time.Days.FIVE;
        org.joda.time.Days days19 = days15.minus(days18);
        org.joda.time.Days days20 = null;
        org.joda.time.Days days21 = days15.minus(days20);
        org.joda.time.Duration duration22 = days15.toStandardDuration();
        org.joda.time.DurationFieldType durationFieldType23 = days15.getFieldType();
        org.joda.time.Days days24 = days11.minus(days15);
        org.joda.time.ReadableInterval readableInterval25 = null;
        org.joda.time.Days days26 = org.joda.time.Days.daysIn(readableInterval25);
        org.joda.time.Days days28 = days26.plus((int) (byte) 10);
        int int29 = days28.getDays();
        int int30 = days28.getDays();
        boolean boolean31 = days15.equals((java.lang.Object) days28);
        org.joda.time.Days days33 = days15.dividedBy(8);
        org.joda.time.Days days34 = org.joda.time.Days.SIX;
        org.joda.time.Days days36 = days34.plus(100);
        org.joda.time.ReadableInterval readableInterval37 = null;
        org.joda.time.Days days38 = org.joda.time.Days.daysIn(readableInterval37);
        int int40 = days38.getValue((int) (short) 0);
        org.joda.time.Days days41 = org.joda.time.Days.FIVE;
        org.joda.time.Days days42 = days38.minus(days41);
        org.joda.time.Days days43 = null;
        org.joda.time.Days days44 = days38.minus(days43);
        org.joda.time.Days days46 = days38.minus((-1));
        org.joda.time.DurationFieldType durationFieldType47 = days38.getFieldType();
        int int48 = days34.get(durationFieldType47);
        org.joda.time.ReadableInterval readableInterval49 = null;
        org.joda.time.Days days50 = org.joda.time.Days.daysIn(readableInterval49);
        int int52 = days50.getValue((int) (short) 0);
        org.joda.time.Days days53 = org.joda.time.Days.FIVE;
        org.joda.time.Days days54 = days50.minus(days53);
        org.joda.time.Days days55 = null;
        org.joda.time.Days days56 = days50.minus(days55);
        org.joda.time.Days days58 = days50.minus((-1));
        org.joda.time.DurationFieldType durationFieldType59 = days50.getFieldType();
        org.joda.time.ReadableInterval readableInterval60 = null;
        org.joda.time.Days days61 = org.joda.time.Days.daysIn(readableInterval60);
        org.joda.time.Days days63 = days61.plus((int) (byte) 10);
        org.joda.time.Days days65 = days63.dividedBy((int) 'a');
        org.joda.time.Days days67 = days63.plus((int) ' ');
        org.joda.time.Days days68 = org.joda.time.Days.standardDaysIn((org.joda.time.ReadablePeriod) days67);
        int int69 = days68.size();
        boolean boolean70 = days50.isGreaterThan(days68);
        org.joda.time.Days days71 = days34.minus(days50);
        org.joda.time.ReadableInterval readableInterval72 = null;
        org.joda.time.Days days73 = org.joda.time.Days.daysIn(readableInterval72);
        org.joda.time.Days days75 = days73.plus((int) (byte) 10);
        org.joda.time.Days days77 = days75.dividedBy((int) 'a');
        org.joda.time.Days days79 = days75.dividedBy(5);
        boolean boolean80 = days50.equals((java.lang.Object) days75);
        org.joda.time.Days days81 = days15.minus(days50);
        org.joda.time.Days days82 = org.joda.time.Days.standardDaysIn((org.joda.time.ReadablePeriod) days50);
        org.joda.time.ReadableInterval readableInterval83 = null;
        org.joda.time.Days days84 = org.joda.time.Days.daysIn(readableInterval83);
        org.joda.time.Days days86 = days84.plus((int) (byte) 10);
        org.joda.time.DurationFieldType durationFieldType87 = days84.getFieldType();
        boolean boolean88 = days82.isSupported(durationFieldType87);
        org.junit.Assert.assertNotNull(days1);
        org.junit.Assert.assertNotNull(days3);
        org.junit.Assert.assertNotNull(days5);
        org.junit.Assert.assertNotNull(days7);
        org.junit.Assert.assertNotNull(days9);
        org.junit.Assert.assertNotNull(days11);
        org.junit.Assert.assertNotNull(days12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertNotNull(days15);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNotNull(days18);
        org.junit.Assert.assertNotNull(days19);
        org.junit.Assert.assertNotNull(days21);
        org.junit.Assert.assertNotNull(duration22);
        org.junit.Assert.assertNotNull(durationFieldType23);
        org.junit.Assert.assertNotNull(days24);
        org.junit.Assert.assertNotNull(days26);
        org.junit.Assert.assertNotNull(days28);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 10 + "'", int29 == 10);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 10 + "'", int30 == 10);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(days33);
        org.junit.Assert.assertNotNull(days34);
        org.junit.Assert.assertNotNull(days36);
        org.junit.Assert.assertNotNull(days38);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertNotNull(days41);
        org.junit.Assert.assertNotNull(days42);
        org.junit.Assert.assertNotNull(days44);
        org.junit.Assert.assertNotNull(days46);
        org.junit.Assert.assertNotNull(durationFieldType47);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 6 + "'", int48 == 6);
        org.junit.Assert.assertNotNull(days50);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 0 + "'", int52 == 0);
        org.junit.Assert.assertNotNull(days53);
        org.junit.Assert.assertNotNull(days54);
        org.junit.Assert.assertNotNull(days56);
        org.junit.Assert.assertNotNull(days58);
        org.junit.Assert.assertNotNull(durationFieldType59);
        org.junit.Assert.assertNotNull(days61);
        org.junit.Assert.assertNotNull(days63);
        org.junit.Assert.assertNotNull(days65);
        org.junit.Assert.assertNotNull(days67);
        org.junit.Assert.assertNotNull(days68);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 1 + "'", int69 == 1);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(days71);
        org.junit.Assert.assertNotNull(days73);
        org.junit.Assert.assertNotNull(days75);
        org.junit.Assert.assertNotNull(days77);
        org.junit.Assert.assertNotNull(days79);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertNotNull(days81);
        org.junit.Assert.assertNotNull(days82);
        org.junit.Assert.assertNotNull(days84);
        org.junit.Assert.assertNotNull(days86);
        org.junit.Assert.assertNotNull(durationFieldType87);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + true + "'", boolean88 == true);
    }

    @Test
    public void test0203() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0203");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Days days1 = org.joda.time.Days.daysIn(readableInterval0);
        int int3 = days1.getValue((int) (short) 0);
        org.joda.time.Days days4 = org.joda.time.Days.FIVE;
        org.joda.time.Days days5 = days1.minus(days4);
        org.joda.time.DurationFieldType durationFieldType6 = null;
        boolean boolean7 = days4.isSupported(durationFieldType6);
        org.joda.time.DurationFieldType durationFieldType9 = days4.getFieldType(0);
        org.joda.time.Period period10 = days4.toPeriod();
        int int12 = days4.getValue(0);
        org.joda.time.Days days14 = days4.dividedBy((int) (byte) 1);
        java.lang.String str15 = days14.toString();
        org.junit.Assert.assertNotNull(days1);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(days4);
        org.junit.Assert.assertNotNull(days5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(durationFieldType9);
        org.junit.Assert.assertNotNull(period10);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 5 + "'", int12 == 5);
        org.junit.Assert.assertNotNull(days14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "P5D" + "'", str15, "P5D");
    }

    @Test
    public void test0204() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0204");
        org.joda.time.Days days0 = org.joda.time.Days.ZERO;
        org.joda.time.ReadableInterval readableInterval1 = null;
        org.joda.time.Days days2 = org.joda.time.Days.daysIn(readableInterval1);
        int int4 = days2.getValue((int) (short) 0);
        org.joda.time.Days days5 = org.joda.time.Days.FIVE;
        org.joda.time.Days days6 = days2.minus(days5);
        org.joda.time.Days days7 = null;
        org.joda.time.Days days8 = days2.minus(days7);
        org.joda.time.Duration duration9 = days2.toStandardDuration();
        org.joda.time.DurationFieldType durationFieldType10 = days2.getFieldType();
        org.joda.time.Days days11 = days0.minus(days2);
        int int12 = days11.getDays();
        org.joda.time.ReadableInterval readableInterval13 = null;
        org.joda.time.Days days14 = org.joda.time.Days.daysIn(readableInterval13);
        org.joda.time.ReadableInterval readableInterval15 = null;
        org.joda.time.Days days16 = org.joda.time.Days.daysIn(readableInterval15);
        int int18 = days16.getValue((int) (short) 0);
        org.joda.time.Days days19 = org.joda.time.Days.FIVE;
        org.joda.time.Days days20 = days16.minus(days19);
        org.joda.time.DurationFieldType durationFieldType21 = null;
        boolean boolean22 = days19.isSupported(durationFieldType21);
        org.joda.time.DurationFieldType durationFieldType24 = days19.getFieldType(0);
        int int25 = days14.get(durationFieldType24);
        org.joda.time.PeriodType periodType26 = days14.getPeriodType();
        org.joda.time.Days days28 = days14.multipliedBy((int) (short) -1);
        org.joda.time.MutablePeriod mutablePeriod29 = days14.toMutablePeriod();
        org.joda.time.Days days30 = days11.minus(days14);
        org.joda.time.Duration duration31 = days30.toStandardDuration();
        java.lang.Class<?> wildcardClass32 = days30.getClass();
        org.junit.Assert.assertNotNull(days0);
        org.junit.Assert.assertNotNull(days2);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(days5);
        org.junit.Assert.assertNotNull(days6);
        org.junit.Assert.assertNotNull(days8);
        org.junit.Assert.assertNotNull(duration9);
        org.junit.Assert.assertNotNull(durationFieldType10);
        org.junit.Assert.assertNotNull(days11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNotNull(days14);
        org.junit.Assert.assertNotNull(days16);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNotNull(days19);
        org.junit.Assert.assertNotNull(days20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(durationFieldType24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertNotNull(periodType26);
        org.junit.Assert.assertNotNull(days28);
        org.junit.Assert.assertNotNull(mutablePeriod29);
        org.junit.Assert.assertNotNull(days30);
        org.junit.Assert.assertNotNull(duration31);
        org.junit.Assert.assertNotNull(wildcardClass32);
    }

    @Test
    public void test0205() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0205");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Days days1 = org.joda.time.Days.daysIn(readableInterval0);
        int int3 = days1.getValue((int) (short) 0);
        org.joda.time.Period period4 = days1.toPeriod();
        org.joda.time.Days days5 = org.joda.time.Days.standardDaysIn((org.joda.time.ReadablePeriod) period4);
        org.joda.time.ReadableInterval readableInterval6 = null;
        org.joda.time.Days days7 = org.joda.time.Days.daysIn(readableInterval6);
        int int9 = days7.getValue((int) (short) 0);
        org.joda.time.Days days10 = org.joda.time.Days.FIVE;
        org.joda.time.Days days11 = days7.minus(days10);
        org.joda.time.DurationFieldType durationFieldType12 = null;
        int int13 = days10.get(durationFieldType12);
        org.joda.time.DurationFieldType durationFieldType14 = null;
        int int15 = days10.get(durationFieldType14);
        boolean boolean17 = days10.equals((java.lang.Object) false);
        int int18 = days10.getDays();
        boolean boolean19 = days5.isGreaterThan(days10);
        org.joda.time.MutablePeriod mutablePeriod20 = days5.toMutablePeriod();
        org.joda.time.ReadableInterval readableInterval21 = null;
        org.joda.time.Days days22 = org.joda.time.Days.daysIn(readableInterval21);
        org.joda.time.Days days24 = days22.plus((int) (byte) 10);
        int int25 = days24.getDays();
        org.joda.time.ReadableInterval readableInterval26 = null;
        org.joda.time.Days days27 = org.joda.time.Days.daysIn(readableInterval26);
        int int29 = days27.getValue((int) (short) 0);
        org.joda.time.Days days30 = org.joda.time.Days.FIVE;
        org.joda.time.Days days31 = days27.minus(days30);
        org.joda.time.Days days32 = null;
        org.joda.time.Days days33 = days27.minus(days32);
        org.joda.time.Days days35 = days27.minus((-1));
        org.joda.time.DurationFieldType durationFieldType36 = days27.getFieldType();
        int int37 = days24.get(durationFieldType36);
        boolean boolean38 = days5.isSupported(durationFieldType36);
        java.lang.Class<?> wildcardClass39 = durationFieldType36.getClass();
        org.junit.Assert.assertNotNull(days1);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(days5);
        org.junit.Assert.assertNotNull(days7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNotNull(days10);
        org.junit.Assert.assertNotNull(days11);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 5 + "'", int18 == 5);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(mutablePeriod20);
        org.junit.Assert.assertNotNull(days22);
        org.junit.Assert.assertNotNull(days24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 10 + "'", int25 == 10);
        org.junit.Assert.assertNotNull(days27);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertNotNull(days30);
        org.junit.Assert.assertNotNull(days31);
        org.junit.Assert.assertNotNull(days33);
        org.junit.Assert.assertNotNull(days35);
        org.junit.Assert.assertNotNull(durationFieldType36);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 10 + "'", int37 == 10);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(wildcardClass39);
    }

    @Test
    public void test0206() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0206");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Days days1 = org.joda.time.Days.daysIn(readableInterval0);
        org.joda.time.Days days3 = days1.plus((int) (byte) 10);
        org.joda.time.Days days5 = days3.dividedBy((int) 'a');
        org.joda.time.Days days7 = days3.plus((int) ' ');
        org.joda.time.Days days8 = org.joda.time.Days.standardDaysIn((org.joda.time.ReadablePeriod) days7);
        org.joda.time.ReadableInterval readableInterval9 = null;
        org.joda.time.Days days10 = org.joda.time.Days.daysIn(readableInterval9);
        int int12 = days10.getValue((int) (short) 0);
        org.joda.time.ReadableInterval readableInterval13 = null;
        org.joda.time.Days days14 = org.joda.time.Days.daysIn(readableInterval13);
        int int16 = days14.getValue((int) (short) 0);
        org.joda.time.Days days17 = org.joda.time.Days.FIVE;
        org.joda.time.Days days18 = days14.minus(days17);
        int int19 = days10.compareTo((org.joda.time.base.BaseSingleFieldPeriod) days17);
        java.lang.String str20 = days10.toString();
        org.joda.time.Days days22 = days10.plus((int) '4');
        org.joda.time.PeriodType periodType23 = days22.getPeriodType();
        int int24 = days22.getDays();
        org.joda.time.Days days26 = days22.minus((int) ' ');
        org.joda.time.ReadableInterval readableInterval27 = null;
        org.joda.time.Days days28 = org.joda.time.Days.daysIn(readableInterval27);
        org.joda.time.Days days30 = days28.plus((int) (byte) 10);
        org.joda.time.Days days32 = days30.dividedBy((int) 'a');
        org.joda.time.Days days34 = days30.dividedBy(5);
        org.joda.time.Days days36 = days30.plus((int) (byte) -1);
        org.joda.time.Days days37 = days22.plus(days30);
        boolean boolean38 = days8.isLessThan(days37);
        org.joda.time.Period period39 = days8.toPeriod();
        java.lang.String str40 = days8.toString();
        org.junit.Assert.assertNotNull(days1);
        org.junit.Assert.assertNotNull(days3);
        org.junit.Assert.assertNotNull(days5);
        org.junit.Assert.assertNotNull(days7);
        org.junit.Assert.assertNotNull(days8);
        org.junit.Assert.assertNotNull(days10);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNotNull(days14);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertNotNull(days17);
        org.junit.Assert.assertNotNull(days18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "P0D" + "'", str20, "P0D");
        org.junit.Assert.assertNotNull(days22);
        org.junit.Assert.assertNotNull(periodType23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 52 + "'", int24 == 52);
        org.junit.Assert.assertNotNull(days26);
        org.junit.Assert.assertNotNull(days28);
        org.junit.Assert.assertNotNull(days30);
        org.junit.Assert.assertNotNull(days32);
        org.junit.Assert.assertNotNull(days34);
        org.junit.Assert.assertNotNull(days36);
        org.junit.Assert.assertNotNull(days37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(period39);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "P42D" + "'", str40, "P42D");
    }

    @Test
    public void test0207() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0207");
        org.joda.time.Days days0 = org.joda.time.Days.SIX;
        org.joda.time.Days days2 = days0.plus(100);
        org.joda.time.ReadableInterval readableInterval3 = null;
        org.joda.time.Days days4 = org.joda.time.Days.daysIn(readableInterval3);
        int int6 = days4.getValue((int) (short) 0);
        org.joda.time.Days days7 = org.joda.time.Days.FIVE;
        org.joda.time.Days days8 = days4.minus(days7);
        org.joda.time.Days days9 = null;
        org.joda.time.Days days10 = days4.minus(days9);
        org.joda.time.Days days12 = days4.minus((-1));
        org.joda.time.DurationFieldType durationFieldType13 = days4.getFieldType();
        int int14 = days0.get(durationFieldType13);
        org.joda.time.Days days15 = org.joda.time.Days.standardDaysIn((org.joda.time.ReadablePeriod) days0);
        java.lang.Class<?> wildcardClass16 = days15.getClass();
        org.junit.Assert.assertNotNull(days0);
        org.junit.Assert.assertNotNull(days2);
        org.junit.Assert.assertNotNull(days4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNotNull(days7);
        org.junit.Assert.assertNotNull(days8);
        org.junit.Assert.assertNotNull(days10);
        org.junit.Assert.assertNotNull(days12);
        org.junit.Assert.assertNotNull(durationFieldType13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 6 + "'", int14 == 6);
        org.junit.Assert.assertNotNull(days15);
        org.junit.Assert.assertNotNull(wildcardClass16);
    }

    @Test
    public void test0208() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0208");
        org.joda.time.Days days1 = org.joda.time.Days.days((int) (byte) 1);
        int int2 = days1.size();
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.DurationFieldType durationFieldType4 = days1.getFieldType(3);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 3");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(days1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
    }

    @Test
    public void test0209() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0209");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Days days1 = org.joda.time.Days.daysIn(readableInterval0);
        int int3 = days1.getValue((int) (short) 0);
        org.joda.time.Period period4 = days1.toPeriod();
        org.joda.time.Days days5 = org.joda.time.Days.standardDaysIn((org.joda.time.ReadablePeriod) days1);
        org.joda.time.Duration duration6 = days1.toStandardDuration();
        org.joda.time.Days days8 = days1.multipliedBy((int) (byte) 10);
        org.joda.time.ReadableInterval readableInterval9 = null;
        org.joda.time.Days days10 = org.joda.time.Days.daysIn(readableInterval9);
        org.joda.time.Days days12 = days10.plus((int) (byte) 10);
        org.joda.time.Days days14 = days12.dividedBy((int) 'a');
        org.joda.time.Days days16 = days12.plus((int) ' ');
        org.joda.time.Days days17 = org.joda.time.Days.standardDaysIn((org.joda.time.ReadablePeriod) days16);
        org.joda.time.Days days19 = days17.minus((int) '#');
        org.joda.time.Days days21 = days17.multipliedBy((int) (short) 1);
        int int22 = days1.compareTo((org.joda.time.base.BaseSingleFieldPeriod) days21);
        org.joda.time.Days days23 = org.joda.time.Days.ZERO;
        org.joda.time.ReadableInterval readableInterval24 = null;
        org.joda.time.Days days25 = org.joda.time.Days.daysIn(readableInterval24);
        int int27 = days25.getValue((int) (short) 0);
        org.joda.time.Days days28 = org.joda.time.Days.FIVE;
        org.joda.time.Days days29 = days25.minus(days28);
        org.joda.time.Days days30 = null;
        org.joda.time.Days days31 = days25.minus(days30);
        org.joda.time.Duration duration32 = days25.toStandardDuration();
        org.joda.time.DurationFieldType durationFieldType33 = days25.getFieldType();
        org.joda.time.Days days34 = days23.minus(days25);
        org.joda.time.Days days35 = org.joda.time.Days.SIX;
        org.joda.time.Days days37 = days35.plus(100);
        org.joda.time.ReadableInterval readableInterval38 = null;
        org.joda.time.Days days39 = org.joda.time.Days.daysIn(readableInterval38);
        int int41 = days39.getValue((int) (short) 0);
        org.joda.time.Days days42 = org.joda.time.Days.FIVE;
        org.joda.time.Days days43 = days39.minus(days42);
        org.joda.time.Days days44 = null;
        org.joda.time.Days days45 = days39.minus(days44);
        org.joda.time.Days days47 = days39.minus((-1));
        org.joda.time.DurationFieldType durationFieldType48 = days39.getFieldType();
        int int49 = days35.get(durationFieldType48);
        int int50 = days34.get(durationFieldType48);
        int int51 = days21.get(durationFieldType48);
        org.junit.Assert.assertNotNull(days1);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(days5);
        org.junit.Assert.assertNotNull(duration6);
        org.junit.Assert.assertNotNull(days8);
        org.junit.Assert.assertNotNull(days10);
        org.junit.Assert.assertNotNull(days12);
        org.junit.Assert.assertNotNull(days14);
        org.junit.Assert.assertNotNull(days16);
        org.junit.Assert.assertNotNull(days17);
        org.junit.Assert.assertNotNull(days19);
        org.junit.Assert.assertNotNull(days21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertNotNull(days23);
        org.junit.Assert.assertNotNull(days25);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertNotNull(days28);
        org.junit.Assert.assertNotNull(days29);
        org.junit.Assert.assertNotNull(days31);
        org.junit.Assert.assertNotNull(duration32);
        org.junit.Assert.assertNotNull(durationFieldType33);
        org.junit.Assert.assertNotNull(days34);
        org.junit.Assert.assertNotNull(days35);
        org.junit.Assert.assertNotNull(days37);
        org.junit.Assert.assertNotNull(days39);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0);
        org.junit.Assert.assertNotNull(days42);
        org.junit.Assert.assertNotNull(days43);
        org.junit.Assert.assertNotNull(days45);
        org.junit.Assert.assertNotNull(days47);
        org.junit.Assert.assertNotNull(durationFieldType48);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 6 + "'", int49 == 6);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 0 + "'", int50 == 0);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 42 + "'", int51 == 42);
    }

    @Test
    public void test0210() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0210");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Days days1 = org.joda.time.Days.daysIn(readableInterval0);
        int int3 = days1.getValue((int) (short) 0);
        org.joda.time.Days days4 = org.joda.time.Days.FIVE;
        org.joda.time.Days days5 = days1.minus(days4);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.DurationFieldType durationFieldType7 = days4.getFieldType((int) '#');
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 35");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(days1);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(days4);
        org.junit.Assert.assertNotNull(days5);
    }

    @Test
    public void test0211() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0211");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Days days1 = org.joda.time.Days.daysIn(readableInterval0);
        int int3 = days1.getValue((int) (short) 0);
        org.joda.time.Days days4 = org.joda.time.Days.FIVE;
        org.joda.time.Days days5 = days1.minus(days4);
        org.joda.time.DurationFieldType durationFieldType6 = null;
        boolean boolean7 = days4.isSupported(durationFieldType6);
        org.joda.time.DurationFieldType durationFieldType9 = days4.getFieldType(0);
        org.joda.time.ReadableInterval readableInterval10 = null;
        org.joda.time.Days days11 = org.joda.time.Days.daysIn(readableInterval10);
        int int13 = days11.getValue((int) (short) 0);
        org.joda.time.Days days14 = org.joda.time.Days.FIVE;
        org.joda.time.Days days15 = days11.minus(days14);
        org.joda.time.Days days16 = null;
        org.joda.time.Days days17 = days11.minus(days16);
        org.joda.time.Days days19 = days11.minus((-1));
        org.joda.time.DurationFieldType durationFieldType20 = days11.getFieldType();
        boolean boolean21 = days4.isGreaterThan(days11);
        org.joda.time.ReadableInterval readableInterval22 = null;
        org.joda.time.Days days23 = org.joda.time.Days.daysIn(readableInterval22);
        org.joda.time.Days days25 = days23.plus((int) (byte) 10);
        org.joda.time.Days days26 = days11.plus(days25);
        org.joda.time.ReadableInterval readableInterval27 = null;
        org.joda.time.Days days28 = org.joda.time.Days.daysIn(readableInterval27);
        int int30 = days28.getValue((int) (short) 0);
        org.joda.time.Days days31 = org.joda.time.Days.FIVE;
        org.joda.time.Days days32 = days28.minus(days31);
        org.joda.time.Days days33 = null;
        org.joda.time.Days days34 = days28.minus(days33);
        org.joda.time.Duration duration35 = days28.toStandardDuration();
        org.joda.time.Days days36 = days26.minus(days28);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.DurationFieldType durationFieldType38 = days28.getFieldType((int) (byte) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 100");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(days1);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(days4);
        org.junit.Assert.assertNotNull(days5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(durationFieldType9);
        org.junit.Assert.assertNotNull(days11);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(days14);
        org.junit.Assert.assertNotNull(days15);
        org.junit.Assert.assertNotNull(days17);
        org.junit.Assert.assertNotNull(days19);
        org.junit.Assert.assertNotNull(durationFieldType20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(days23);
        org.junit.Assert.assertNotNull(days25);
        org.junit.Assert.assertNotNull(days26);
        org.junit.Assert.assertNotNull(days28);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertNotNull(days31);
        org.junit.Assert.assertNotNull(days32);
        org.junit.Assert.assertNotNull(days34);
        org.junit.Assert.assertNotNull(duration35);
        org.junit.Assert.assertNotNull(days36);
    }

    @Test
    public void test0212() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0212");
        org.joda.time.Days days0 = org.joda.time.Days.MAX_VALUE;
        org.joda.time.Days days1 = days0.negated();
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Days days3 = days1.dividedBy(0);
            org.junit.Assert.fail("Expected exception of type java.lang.ArithmeticException; message: / by zero");
        } catch (java.lang.ArithmeticException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(days0);
        org.junit.Assert.assertNotNull(days1);
    }

    @Test
    public void test0213() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0213");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Days days1 = org.joda.time.Days.daysIn(readableInterval0);
        org.joda.time.Days days3 = days1.plus((int) (byte) 10);
        org.joda.time.MutablePeriod mutablePeriod4 = days1.toMutablePeriod();
        int int5 = days1.size();
        java.lang.String str6 = days1.toString();
        org.junit.Assert.assertNotNull(days1);
        org.junit.Assert.assertNotNull(days3);
        org.junit.Assert.assertNotNull(mutablePeriod4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "P0D" + "'", str6, "P0D");
    }

    @Test
    public void test0214() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0214");
        org.joda.time.Days days1 = org.joda.time.Days.parseDays("P0D");
        org.joda.time.ReadableInterval readableInterval2 = null;
        org.joda.time.Days days3 = org.joda.time.Days.daysIn(readableInterval2);
        org.joda.time.Days days5 = days3.plus((int) (byte) 10);
        org.joda.time.MutablePeriod mutablePeriod6 = days3.toMutablePeriod();
        int int7 = days3.size();
        int int8 = days1.compareTo((org.joda.time.base.BaseSingleFieldPeriod) days3);
        org.joda.time.Duration duration9 = days3.toStandardDuration();
        org.junit.Assert.assertNotNull(days1);
        org.junit.Assert.assertNotNull(days3);
        org.junit.Assert.assertNotNull(days5);
        org.junit.Assert.assertNotNull(mutablePeriod6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNotNull(duration9);
    }

    @Test
    public void test0215() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0215");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Days days1 = org.joda.time.Days.daysIn(readableInterval0);
        int int3 = days1.getValue((int) (short) 0);
        org.joda.time.Days days4 = org.joda.time.Days.FIVE;
        org.joda.time.Days days5 = days1.minus(days4);
        org.joda.time.Days days6 = null;
        org.joda.time.Days days7 = days1.minus(days6);
        org.joda.time.ReadableInterval readableInterval8 = null;
        org.joda.time.Days days9 = org.joda.time.Days.daysIn(readableInterval8);
        int int11 = days9.getValue((int) (short) 0);
        org.joda.time.Days days12 = org.joda.time.Days.FIVE;
        org.joda.time.Days days13 = days9.minus(days12);
        org.joda.time.DurationFieldType durationFieldType14 = null;
        int int15 = days12.get(durationFieldType14);
        org.joda.time.DurationFieldType durationFieldType16 = null;
        int int17 = days12.get(durationFieldType16);
        boolean boolean19 = days12.equals((java.lang.Object) 0L);
        int int20 = days1.compareTo((org.joda.time.base.BaseSingleFieldPeriod) days12);
        org.joda.time.Days days22 = days1.minus(52);
        org.joda.time.Days days24 = days22.dividedBy((-1));
        org.joda.time.Days days26 = days24.dividedBy(8);
        int int27 = days24.size();
        org.junit.Assert.assertNotNull(days1);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(days4);
        org.junit.Assert.assertNotNull(days5);
        org.junit.Assert.assertNotNull(days7);
        org.junit.Assert.assertNotNull(days9);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNotNull(days12);
        org.junit.Assert.assertNotNull(days13);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
        org.junit.Assert.assertNotNull(days22);
        org.junit.Assert.assertNotNull(days24);
        org.junit.Assert.assertNotNull(days26);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 1 + "'", int27 == 1);
    }

    @Test
    public void test0216() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0216");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Days days1 = org.joda.time.Days.daysIn(readableInterval0);
        int int3 = days1.getValue((int) (short) 0);
        org.joda.time.Days days4 = org.joda.time.Days.FIVE;
        org.joda.time.Days days5 = days1.minus(days4);
        org.joda.time.DurationFieldType durationFieldType6 = null;
        boolean boolean7 = days4.isSupported(durationFieldType6);
        org.joda.time.DurationFieldType durationFieldType9 = days4.getFieldType(0);
        org.joda.time.Period period10 = days4.toPeriod();
        int int12 = days4.getValue(0);
        org.joda.time.PeriodType periodType13 = days4.getPeriodType();
        org.junit.Assert.assertNotNull(days1);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(days4);
        org.junit.Assert.assertNotNull(days5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(durationFieldType9);
        org.junit.Assert.assertNotNull(period10);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 5 + "'", int12 == 5);
        org.junit.Assert.assertNotNull(periodType13);
    }

    @Test
    public void test0217() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0217");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Days days1 = org.joda.time.Days.daysIn(readableInterval0);
        int int3 = days1.getValue((int) (short) 0);
        org.joda.time.Days days4 = org.joda.time.Days.FIVE;
        org.joda.time.Days days5 = days1.minus(days4);
        org.joda.time.Days days6 = null;
        org.joda.time.Days days7 = days1.minus(days6);
        org.joda.time.ReadableInterval readableInterval8 = null;
        org.joda.time.Days days9 = org.joda.time.Days.daysIn(readableInterval8);
        int int11 = days9.getValue((int) (short) 0);
        org.joda.time.Days days12 = org.joda.time.Days.FIVE;
        org.joda.time.Days days13 = days9.minus(days12);
        org.joda.time.DurationFieldType durationFieldType14 = null;
        int int15 = days12.get(durationFieldType14);
        org.joda.time.DurationFieldType durationFieldType16 = null;
        int int17 = days12.get(durationFieldType16);
        boolean boolean19 = days12.equals((java.lang.Object) 0L);
        int int20 = days1.compareTo((org.joda.time.base.BaseSingleFieldPeriod) days12);
        org.joda.time.ReadableInterval readableInterval21 = null;
        org.joda.time.Days days22 = org.joda.time.Days.daysIn(readableInterval21);
        int int24 = days22.getValue((int) (short) 0);
        org.joda.time.ReadableInterval readableInterval25 = null;
        org.joda.time.Days days26 = org.joda.time.Days.daysIn(readableInterval25);
        int int28 = days26.getValue((int) (short) 0);
        org.joda.time.Days days29 = org.joda.time.Days.FIVE;
        org.joda.time.Days days30 = days26.minus(days29);
        int int31 = days22.compareTo((org.joda.time.base.BaseSingleFieldPeriod) days29);
        org.joda.time.MutablePeriod mutablePeriod32 = days29.toMutablePeriod();
        org.joda.time.Days days33 = days29.negated();
        org.joda.time.Days days34 = days1.plus(days29);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.DurationFieldType durationFieldType36 = days34.getFieldType((int) (short) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 100");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(days1);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(days4);
        org.junit.Assert.assertNotNull(days5);
        org.junit.Assert.assertNotNull(days7);
        org.junit.Assert.assertNotNull(days9);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNotNull(days12);
        org.junit.Assert.assertNotNull(days13);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
        org.junit.Assert.assertNotNull(days22);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertNotNull(days26);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertNotNull(days29);
        org.junit.Assert.assertNotNull(days30);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertNotNull(mutablePeriod32);
        org.junit.Assert.assertNotNull(days33);
        org.junit.Assert.assertNotNull(days34);
    }

    @Test
    public void test0218() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0218");
        org.joda.time.Days days0 = org.joda.time.Days.THREE;
        org.joda.time.ReadableInterval readableInterval1 = null;
        org.joda.time.Days days2 = org.joda.time.Days.daysIn(readableInterval1);
        org.joda.time.ReadableInterval readableInterval3 = null;
        org.joda.time.Days days4 = org.joda.time.Days.daysIn(readableInterval3);
        int int6 = days4.getValue((int) (short) 0);
        org.joda.time.Days days7 = org.joda.time.Days.FIVE;
        org.joda.time.Days days8 = days4.minus(days7);
        org.joda.time.DurationFieldType durationFieldType9 = null;
        boolean boolean10 = days7.isSupported(durationFieldType9);
        org.joda.time.DurationFieldType durationFieldType12 = days7.getFieldType(0);
        int int13 = days2.get(durationFieldType12);
        org.joda.time.ReadableInterval readableInterval14 = null;
        org.joda.time.Days days15 = org.joda.time.Days.daysIn(readableInterval14);
        int int17 = days15.getValue((int) (short) 0);
        org.joda.time.Days days18 = org.joda.time.Days.FIVE;
        org.joda.time.Days days19 = days15.minus(days18);
        org.joda.time.DurationFieldType durationFieldType20 = null;
        int int21 = days18.get(durationFieldType20);
        org.joda.time.DurationFieldType durationFieldType22 = null;
        int int23 = days18.get(durationFieldType22);
        boolean boolean25 = days18.equals((java.lang.Object) 0L);
        boolean boolean26 = days2.isGreaterThan(days18);
        org.joda.time.ReadableInterval readableInterval27 = null;
        org.joda.time.Days days28 = org.joda.time.Days.daysIn(readableInterval27);
        int int30 = days28.getValue((int) (short) 0);
        org.joda.time.Days days31 = org.joda.time.Days.FIVE;
        org.joda.time.Days days32 = days28.minus(days31);
        org.joda.time.DurationFieldType durationFieldType33 = null;
        int int34 = days31.get(durationFieldType33);
        org.joda.time.DurationFieldType durationFieldType35 = null;
        int int36 = days31.get(durationFieldType35);
        boolean boolean38 = days31.equals((java.lang.Object) 0L);
        org.joda.time.Period period39 = days31.toPeriod();
        org.joda.time.Days days40 = days2.plus(days31);
        boolean boolean41 = days0.isGreaterThan(days40);
        org.joda.time.Period period42 = days40.toPeriod();
        org.junit.Assert.assertNotNull(days0);
        org.junit.Assert.assertNotNull(days2);
        org.junit.Assert.assertNotNull(days4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNotNull(days7);
        org.junit.Assert.assertNotNull(days8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(durationFieldType12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(days15);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNotNull(days18);
        org.junit.Assert.assertNotNull(days19);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(days28);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertNotNull(days31);
        org.junit.Assert.assertNotNull(days32);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(period39);
        org.junit.Assert.assertNotNull(days40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(period42);
    }

    @Test
    public void test0219() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0219");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Days days1 = org.joda.time.Days.daysIn(readableInterval0);
        int int3 = days1.getValue((int) (short) 0);
        org.joda.time.ReadableInterval readableInterval4 = null;
        org.joda.time.Days days5 = org.joda.time.Days.daysIn(readableInterval4);
        int int7 = days5.getValue((int) (short) 0);
        org.joda.time.Days days8 = org.joda.time.Days.FIVE;
        org.joda.time.Days days9 = days5.minus(days8);
        int int10 = days1.compareTo((org.joda.time.base.BaseSingleFieldPeriod) days8);
        java.lang.String str11 = days1.toString();
        org.joda.time.Days days12 = null;
        boolean boolean13 = days1.isGreaterThan(days12);
        org.joda.time.Period period14 = days1.toPeriod();
        org.joda.time.Duration duration15 = days1.toStandardDuration();
        org.joda.time.Days days17 = days1.multipliedBy(2147483647);
        org.joda.time.Period period18 = days1.toPeriod();
        // The following exception was thrown during execution in test generation
        try {
            int int20 = days1.getValue((int) '4');
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 52");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(days1);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(days5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(days8);
        org.junit.Assert.assertNotNull(days9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "P0D" + "'", str11, "P0D");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(period14);
        org.junit.Assert.assertNotNull(duration15);
        org.junit.Assert.assertNotNull(days17);
        org.junit.Assert.assertNotNull(period18);
    }

    @Test
    public void test0220() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0220");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Days days1 = org.joda.time.Days.daysIn(readableInterval0);
        int int3 = days1.getValue((int) (short) 0);
        org.joda.time.Days days4 = org.joda.time.Days.FIVE;
        org.joda.time.Days days5 = days1.minus(days4);
        org.joda.time.ReadableInterval readableInterval6 = null;
        org.joda.time.Days days7 = org.joda.time.Days.daysIn(readableInterval6);
        int int9 = days7.getValue((int) (short) 0);
        int int10 = days1.compareTo((org.joda.time.base.BaseSingleFieldPeriod) days7);
        org.joda.time.ReadableInterval readableInterval11 = null;
        org.joda.time.Days days12 = org.joda.time.Days.daysIn(readableInterval11);
        int int14 = days12.getValue((int) (short) 0);
        org.joda.time.Days days15 = org.joda.time.Days.FIVE;
        org.joda.time.Days days16 = days12.minus(days15);
        org.joda.time.DurationFieldType durationFieldType17 = null;
        int int18 = days15.get(durationFieldType17);
        org.joda.time.DurationFieldType durationFieldType19 = null;
        int int20 = days15.get(durationFieldType19);
        boolean boolean22 = days15.equals((java.lang.Object) false);
        boolean boolean23 = days7.equals((java.lang.Object) days15);
        org.joda.time.ReadableInterval readableInterval24 = null;
        org.joda.time.Days days25 = org.joda.time.Days.daysIn(readableInterval24);
        int int27 = days25.getValue((int) (short) 0);
        org.joda.time.Days days28 = org.joda.time.Days.FIVE;
        org.joda.time.Days days29 = days25.minus(days28);
        org.joda.time.Days days30 = null;
        org.joda.time.Days days31 = days25.minus(days30);
        org.joda.time.Days days33 = days25.minus((-1));
        int int34 = days25.size();
        org.joda.time.Days days35 = days15.minus(days25);
        org.joda.time.Days days37 = org.joda.time.Days.days((int) (byte) 10);
        org.joda.time.ReadableInterval readableInterval38 = null;
        org.joda.time.Days days39 = org.joda.time.Days.daysIn(readableInterval38);
        org.joda.time.Days days41 = days39.plus((int) (byte) 10);
        org.joda.time.MutablePeriod mutablePeriod42 = days39.toMutablePeriod();
        org.joda.time.Days days44 = days39.plus((int) (short) -1);
        org.joda.time.ReadableInterval readableInterval45 = null;
        org.joda.time.Days days46 = org.joda.time.Days.daysIn(readableInterval45);
        int int48 = days46.getValue((int) (short) 0);
        org.joda.time.Days days49 = org.joda.time.Days.FIVE;
        org.joda.time.Days days50 = days46.minus(days49);
        org.joda.time.Days days51 = null;
        org.joda.time.Days days52 = days46.minus(days51);
        org.joda.time.Days days54 = days46.minus((-1));
        int int55 = days46.size();
        boolean boolean56 = days39.isGreaterThan(days46);
        org.joda.time.DurationFieldType durationFieldType58 = days46.getFieldType((int) (short) 0);
        int int59 = days37.get(durationFieldType58);
        boolean boolean60 = days25.isSupported(durationFieldType58);
        org.joda.time.PeriodType periodType61 = days25.getPeriodType();
        org.joda.time.Duration duration62 = days25.toStandardDuration();
        org.junit.Assert.assertNotNull(days1);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(days4);
        org.junit.Assert.assertNotNull(days5);
        org.junit.Assert.assertNotNull(days7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(days12);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNotNull(days15);
        org.junit.Assert.assertNotNull(days16);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(days25);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertNotNull(days28);
        org.junit.Assert.assertNotNull(days29);
        org.junit.Assert.assertNotNull(days31);
        org.junit.Assert.assertNotNull(days33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 1 + "'", int34 == 1);
        org.junit.Assert.assertNotNull(days35);
        org.junit.Assert.assertNotNull(days37);
        org.junit.Assert.assertNotNull(days39);
        org.junit.Assert.assertNotNull(days41);
        org.junit.Assert.assertNotNull(mutablePeriod42);
        org.junit.Assert.assertNotNull(days44);
        org.junit.Assert.assertNotNull(days46);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 0 + "'", int48 == 0);
        org.junit.Assert.assertNotNull(days49);
        org.junit.Assert.assertNotNull(days50);
        org.junit.Assert.assertNotNull(days52);
        org.junit.Assert.assertNotNull(days54);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 1 + "'", int55 == 1);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(durationFieldType58);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 10 + "'", int59 == 10);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(periodType61);
        org.junit.Assert.assertNotNull(duration62);
    }

    @Test
    public void test0221() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0221");
        org.joda.time.Days days0 = org.joda.time.Days.SIX;
        org.joda.time.Days days2 = days0.plus(100);
        org.joda.time.Days days4 = days2.dividedBy(10);
        org.joda.time.MutablePeriod mutablePeriod5 = days2.toMutablePeriod();
        org.junit.Assert.assertNotNull(days0);
        org.junit.Assert.assertNotNull(days2);
        org.junit.Assert.assertNotNull(days4);
        org.junit.Assert.assertNotNull(mutablePeriod5);
    }

    @Test
    public void test0222() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0222");
        org.joda.time.Days days0 = org.joda.time.Days.MAX_VALUE;
        org.joda.time.Days days1 = days0.negated();
        org.joda.time.PeriodType periodType2 = days0.getPeriodType();
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Hours hours3 = days0.toStandardHours();
            org.junit.Assert.fail("Expected exception of type java.lang.ArithmeticException; message: Multiplication overflows an int: 2147483647 * 24");
        } catch (java.lang.ArithmeticException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(days0);
        org.junit.Assert.assertNotNull(days1);
        org.junit.Assert.assertNotNull(periodType2);
    }

    @Test
    public void test0223() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0223");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Days days1 = org.joda.time.Days.daysIn(readableInterval0);
        int int3 = days1.getValue((int) (short) 0);
        org.joda.time.Days days4 = org.joda.time.Days.FIVE;
        org.joda.time.Days days5 = days1.minus(days4);
        org.joda.time.Days days6 = null;
        org.joda.time.Days days7 = days1.minus(days6);
        org.joda.time.ReadableInterval readableInterval8 = null;
        org.joda.time.Days days9 = org.joda.time.Days.daysIn(readableInterval8);
        int int11 = days9.getValue((int) (short) 0);
        org.joda.time.Days days12 = org.joda.time.Days.FIVE;
        org.joda.time.Days days13 = days9.minus(days12);
        org.joda.time.DurationFieldType durationFieldType14 = null;
        int int15 = days12.get(durationFieldType14);
        org.joda.time.DurationFieldType durationFieldType16 = null;
        int int17 = days12.get(durationFieldType16);
        boolean boolean19 = days12.equals((java.lang.Object) 0L);
        int int20 = days1.compareTo((org.joda.time.base.BaseSingleFieldPeriod) days12);
        org.joda.time.Days days22 = days1.minus(52);
        int int23 = days1.getDays();
        org.joda.time.ReadableInterval readableInterval24 = null;
        org.joda.time.Days days25 = org.joda.time.Days.daysIn(readableInterval24);
        int int27 = days25.getValue((int) (short) 0);
        org.joda.time.Days days28 = org.joda.time.Days.FIVE;
        org.joda.time.Days days29 = days25.minus(days28);
        org.joda.time.DurationFieldType durationFieldType30 = null;
        int int31 = days28.get(durationFieldType30);
        org.joda.time.DurationFieldType durationFieldType32 = null;
        int int33 = days28.get(durationFieldType32);
        boolean boolean35 = days28.equals((java.lang.Object) false);
        org.joda.time.Days days37 = days28.minus((int) (short) 10);
        org.joda.time.Period period38 = days28.toPeriod();
        boolean boolean39 = days1.equals((java.lang.Object) days28);
        org.junit.Assert.assertNotNull(days1);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(days4);
        org.junit.Assert.assertNotNull(days5);
        org.junit.Assert.assertNotNull(days7);
        org.junit.Assert.assertNotNull(days9);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNotNull(days12);
        org.junit.Assert.assertNotNull(days13);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
        org.junit.Assert.assertNotNull(days22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertNotNull(days25);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertNotNull(days28);
        org.junit.Assert.assertNotNull(days29);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(days37);
        org.junit.Assert.assertNotNull(period38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
    }

    @Test
    public void test0224() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0224");
        org.joda.time.Days days1 = org.joda.time.Days.parseDays("P0D");
        org.joda.time.ReadableInterval readableInterval2 = null;
        org.joda.time.Days days3 = org.joda.time.Days.daysIn(readableInterval2);
        org.joda.time.Days days5 = days3.plus((int) (byte) 10);
        org.joda.time.MutablePeriod mutablePeriod6 = days3.toMutablePeriod();
        int int7 = days3.size();
        int int8 = days1.compareTo((org.joda.time.base.BaseSingleFieldPeriod) days3);
        org.joda.time.Days days10 = org.joda.time.Days.days((int) 'a');
        org.joda.time.Days days11 = org.joda.time.Days.SIX;
        org.joda.time.Days days13 = days11.plus(100);
        org.joda.time.ReadableInterval readableInterval14 = null;
        org.joda.time.Days days15 = org.joda.time.Days.daysIn(readableInterval14);
        int int17 = days15.getValue((int) (short) 0);
        org.joda.time.Days days18 = org.joda.time.Days.FIVE;
        org.joda.time.Days days19 = days15.minus(days18);
        org.joda.time.Days days20 = null;
        org.joda.time.Days days21 = days15.minus(days20);
        org.joda.time.Days days23 = days15.minus((-1));
        org.joda.time.DurationFieldType durationFieldType24 = days15.getFieldType();
        int int25 = days11.get(durationFieldType24);
        int int26 = days10.get(durationFieldType24);
        org.joda.time.Days days28 = org.joda.time.Days.days((-1));
        boolean boolean29 = days10.isGreaterThan(days28);
        org.joda.time.Days days30 = null;
        boolean boolean31 = days10.isLessThan(days30);
        org.joda.time.Days days32 = days1.minus(days10);
        org.joda.time.ReadableInterval readableInterval33 = null;
        org.joda.time.Days days34 = org.joda.time.Days.daysIn(readableInterval33);
        int int36 = days34.getValue((int) (short) 0);
        org.joda.time.Days days37 = org.joda.time.Days.FIVE;
        org.joda.time.Days days38 = days34.minus(days37);
        org.joda.time.Days days39 = days32.minus(days38);
        org.joda.time.ReadableInterval readableInterval40 = null;
        org.joda.time.Days days41 = org.joda.time.Days.daysIn(readableInterval40);
        int int43 = days41.getValue((int) (short) 0);
        org.joda.time.Days days44 = org.joda.time.Days.FIVE;
        org.joda.time.Days days45 = days41.minus(days44);
        org.joda.time.DurationFieldType durationFieldType46 = null;
        boolean boolean47 = days44.isSupported(durationFieldType46);
        org.joda.time.DurationFieldType durationFieldType49 = days44.getFieldType(0);
        org.joda.time.ReadableInterval readableInterval50 = null;
        org.joda.time.Days days51 = org.joda.time.Days.daysIn(readableInterval50);
        int int53 = days51.getValue((int) (short) 0);
        org.joda.time.Days days54 = org.joda.time.Days.FIVE;
        org.joda.time.Days days55 = days51.minus(days54);
        org.joda.time.Days days56 = null;
        org.joda.time.Days days57 = days51.minus(days56);
        org.joda.time.Days days59 = days51.minus((-1));
        org.joda.time.DurationFieldType durationFieldType60 = days51.getFieldType();
        boolean boolean61 = days44.isGreaterThan(days51);
        org.joda.time.ReadableInterval readableInterval62 = null;
        org.joda.time.Days days63 = org.joda.time.Days.daysIn(readableInterval62);
        org.joda.time.Days days65 = days63.plus((int) (byte) 10);
        org.joda.time.Days days66 = days51.plus(days65);
        org.joda.time.Days days67 = days32.plus(days51);
        // The following exception was thrown during execution in test generation
        try {
            int int69 = days51.getValue(8);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 8");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(days1);
        org.junit.Assert.assertNotNull(days3);
        org.junit.Assert.assertNotNull(days5);
        org.junit.Assert.assertNotNull(mutablePeriod6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNotNull(days10);
        org.junit.Assert.assertNotNull(days11);
        org.junit.Assert.assertNotNull(days13);
        org.junit.Assert.assertNotNull(days15);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNotNull(days18);
        org.junit.Assert.assertNotNull(days19);
        org.junit.Assert.assertNotNull(days21);
        org.junit.Assert.assertNotNull(days23);
        org.junit.Assert.assertNotNull(durationFieldType24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 6 + "'", int25 == 6);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 97 + "'", int26 == 97);
        org.junit.Assert.assertNotNull(days28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(days32);
        org.junit.Assert.assertNotNull(days34);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertNotNull(days37);
        org.junit.Assert.assertNotNull(days38);
        org.junit.Assert.assertNotNull(days39);
        org.junit.Assert.assertNotNull(days41);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0);
        org.junit.Assert.assertNotNull(days44);
        org.junit.Assert.assertNotNull(days45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(durationFieldType49);
        org.junit.Assert.assertNotNull(days51);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 0 + "'", int53 == 0);
        org.junit.Assert.assertNotNull(days54);
        org.junit.Assert.assertNotNull(days55);
        org.junit.Assert.assertNotNull(days57);
        org.junit.Assert.assertNotNull(days59);
        org.junit.Assert.assertNotNull(durationFieldType60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(days63);
        org.junit.Assert.assertNotNull(days65);
        org.junit.Assert.assertNotNull(days66);
        org.junit.Assert.assertNotNull(days67);
    }

    @Test
    public void test0225() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0225");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Days days1 = org.joda.time.Days.daysIn(readableInterval0);
        org.joda.time.ReadableInterval readableInterval2 = null;
        org.joda.time.Days days3 = org.joda.time.Days.daysIn(readableInterval2);
        int int5 = days3.getValue((int) (short) 0);
        org.joda.time.Days days6 = org.joda.time.Days.FIVE;
        org.joda.time.Days days7 = days3.minus(days6);
        org.joda.time.DurationFieldType durationFieldType8 = null;
        boolean boolean9 = days6.isSupported(durationFieldType8);
        org.joda.time.DurationFieldType durationFieldType11 = days6.getFieldType(0);
        int int12 = days1.get(durationFieldType11);
        org.joda.time.ReadableInterval readableInterval13 = null;
        org.joda.time.Days days14 = org.joda.time.Days.daysIn(readableInterval13);
        int int16 = days14.getValue((int) (short) 0);
        org.joda.time.Days days17 = org.joda.time.Days.FIVE;
        org.joda.time.Days days18 = days14.minus(days17);
        org.joda.time.DurationFieldType durationFieldType19 = null;
        int int20 = days17.get(durationFieldType19);
        org.joda.time.DurationFieldType durationFieldType21 = null;
        int int22 = days17.get(durationFieldType21);
        boolean boolean24 = days17.equals((java.lang.Object) 0L);
        boolean boolean25 = days1.isGreaterThan(days17);
        org.joda.time.ReadableInterval readableInterval26 = null;
        org.joda.time.Days days27 = org.joda.time.Days.daysIn(readableInterval26);
        int int29 = days27.getValue((int) (short) 0);
        org.joda.time.Days days30 = org.joda.time.Days.FIVE;
        org.joda.time.Days days31 = days27.minus(days30);
        org.joda.time.DurationFieldType durationFieldType32 = null;
        int int33 = days30.get(durationFieldType32);
        org.joda.time.DurationFieldType durationFieldType34 = null;
        int int35 = days30.get(durationFieldType34);
        boolean boolean37 = days30.equals((java.lang.Object) 0L);
        org.joda.time.Period period38 = days30.toPeriod();
        org.joda.time.Days days39 = days1.plus(days30);
        org.joda.time.ReadableInterval readableInterval40 = null;
        org.joda.time.Days days41 = org.joda.time.Days.daysIn(readableInterval40);
        int int43 = days41.getValue((int) (short) 0);
        org.joda.time.Period period44 = days41.toPeriod();
        org.joda.time.Days days45 = org.joda.time.Days.standardDaysIn((org.joda.time.ReadablePeriod) days41);
        boolean boolean46 = days1.equals((java.lang.Object) days45);
        org.joda.time.Days days47 = org.joda.time.Days.standardDaysIn((org.joda.time.ReadablePeriod) days1);
        org.joda.time.Days days48 = days1.negated();
        org.joda.time.Days days49 = org.joda.time.Days.THREE;
        org.joda.time.ReadableInterval readableInterval50 = null;
        org.joda.time.Days days51 = org.joda.time.Days.daysIn(readableInterval50);
        org.joda.time.ReadableInterval readableInterval52 = null;
        org.joda.time.Days days53 = org.joda.time.Days.daysIn(readableInterval52);
        int int55 = days53.getValue((int) (short) 0);
        org.joda.time.Days days56 = org.joda.time.Days.FIVE;
        org.joda.time.Days days57 = days53.minus(days56);
        org.joda.time.DurationFieldType durationFieldType58 = null;
        boolean boolean59 = days56.isSupported(durationFieldType58);
        org.joda.time.DurationFieldType durationFieldType61 = days56.getFieldType(0);
        int int62 = days51.get(durationFieldType61);
        org.joda.time.ReadableInterval readableInterval63 = null;
        org.joda.time.Days days64 = org.joda.time.Days.daysIn(readableInterval63);
        int int66 = days64.getValue((int) (short) 0);
        org.joda.time.ReadableInterval readableInterval67 = null;
        org.joda.time.Days days68 = org.joda.time.Days.daysIn(readableInterval67);
        int int70 = days68.getValue((int) (short) 0);
        org.joda.time.Days days71 = org.joda.time.Days.FIVE;
        org.joda.time.Days days72 = days68.minus(days71);
        int int73 = days64.compareTo((org.joda.time.base.BaseSingleFieldPeriod) days71);
        java.lang.String str74 = days64.toString();
        org.joda.time.Days days75 = null;
        boolean boolean76 = days64.isGreaterThan(days75);
        org.joda.time.Period period77 = days64.toPeriod();
        org.joda.time.Days days78 = days51.plus(days64);
        boolean boolean79 = days49.isLessThan(days64);
        org.joda.time.Days days81 = org.joda.time.Days.parseDays("P0D");
        org.joda.time.ReadableInterval readableInterval82 = null;
        org.joda.time.Days days83 = org.joda.time.Days.daysIn(readableInterval82);
        org.joda.time.Days days85 = days83.plus((int) (byte) 10);
        org.joda.time.MutablePeriod mutablePeriod86 = days83.toMutablePeriod();
        int int87 = days83.size();
        int int88 = days81.compareTo((org.joda.time.base.BaseSingleFieldPeriod) days83);
        org.joda.time.Days days90 = days81.minus(0);
        org.joda.time.Days days91 = days90.negated();
        int int92 = days64.compareTo((org.joda.time.base.BaseSingleFieldPeriod) days91);
        boolean boolean93 = days48.isGreaterThan(days91);
        org.junit.Assert.assertNotNull(days1);
        org.junit.Assert.assertNotNull(days3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(days6);
        org.junit.Assert.assertNotNull(days7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(durationFieldType11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNotNull(days14);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertNotNull(days17);
        org.junit.Assert.assertNotNull(days18);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(days27);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertNotNull(days30);
        org.junit.Assert.assertNotNull(days31);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(period38);
        org.junit.Assert.assertNotNull(days39);
        org.junit.Assert.assertNotNull(days41);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0);
        org.junit.Assert.assertNotNull(period44);
        org.junit.Assert.assertNotNull(days45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(days47);
        org.junit.Assert.assertNotNull(days48);
        org.junit.Assert.assertNotNull(days49);
        org.junit.Assert.assertNotNull(days51);
        org.junit.Assert.assertNotNull(days53);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 0 + "'", int55 == 0);
        org.junit.Assert.assertNotNull(days56);
        org.junit.Assert.assertNotNull(days57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(durationFieldType61);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 0 + "'", int62 == 0);
        org.junit.Assert.assertNotNull(days64);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 0 + "'", int66 == 0);
        org.junit.Assert.assertNotNull(days68);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 0 + "'", int70 == 0);
        org.junit.Assert.assertNotNull(days71);
        org.junit.Assert.assertNotNull(days72);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + (-1) + "'", int73 == (-1));
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "P0D" + "'", str74, "P0D");
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNotNull(period77);
        org.junit.Assert.assertNotNull(days78);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertNotNull(days81);
        org.junit.Assert.assertNotNull(days83);
        org.junit.Assert.assertNotNull(days85);
        org.junit.Assert.assertNotNull(mutablePeriod86);
        org.junit.Assert.assertTrue("'" + int87 + "' != '" + 1 + "'", int87 == 1);
        org.junit.Assert.assertTrue("'" + int88 + "' != '" + 0 + "'", int88 == 0);
        org.junit.Assert.assertNotNull(days90);
        org.junit.Assert.assertNotNull(days91);
        org.junit.Assert.assertTrue("'" + int92 + "' != '" + 0 + "'", int92 == 0);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
    }

    @Test
    public void test0226() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0226");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Days days1 = org.joda.time.Days.daysIn(readableInterval0);
        org.joda.time.Days days3 = days1.plus((int) (byte) 10);
        org.joda.time.Days days5 = days3.dividedBy((int) 'a');
        org.joda.time.Days days7 = days3.dividedBy(5);
        org.joda.time.Days days9 = days3.plus((int) (byte) -1);
        org.joda.time.Days days11 = days3.dividedBy((int) (byte) -1);
        org.joda.time.ReadableInterval readableInterval12 = null;
        org.joda.time.Days days13 = org.joda.time.Days.daysIn(readableInterval12);
        int int15 = days13.getValue((int) (short) 0);
        org.joda.time.Days days16 = org.joda.time.Days.FIVE;
        org.joda.time.Days days17 = days13.minus(days16);
        org.joda.time.DurationFieldType durationFieldType18 = null;
        boolean boolean19 = days16.isSupported(durationFieldType18);
        org.joda.time.DurationFieldType durationFieldType21 = days16.getFieldType(0);
        org.joda.time.Period period22 = days16.toPeriod();
        int int24 = days16.getValue(0);
        org.joda.time.Days days26 = days16.dividedBy((int) (byte) 1);
        org.joda.time.Days days27 = days3.minus(days26);
        org.joda.time.Days days29 = days26.plus((int) (byte) 100);
        // The following exception was thrown during execution in test generation
        try {
            int int31 = days26.getValue(3);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 3");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(days1);
        org.junit.Assert.assertNotNull(days3);
        org.junit.Assert.assertNotNull(days5);
        org.junit.Assert.assertNotNull(days7);
        org.junit.Assert.assertNotNull(days9);
        org.junit.Assert.assertNotNull(days11);
        org.junit.Assert.assertNotNull(days13);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNotNull(days16);
        org.junit.Assert.assertNotNull(days17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(durationFieldType21);
        org.junit.Assert.assertNotNull(period22);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 5 + "'", int24 == 5);
        org.junit.Assert.assertNotNull(days26);
        org.junit.Assert.assertNotNull(days27);
        org.junit.Assert.assertNotNull(days29);
    }

    @Test
    public void test0227() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0227");
        org.joda.time.Days days1 = org.joda.time.Days.parseDays("P0D");
        org.joda.time.ReadableInterval readableInterval2 = null;
        org.joda.time.Days days3 = org.joda.time.Days.daysIn(readableInterval2);
        org.joda.time.Days days5 = days3.plus((int) (byte) 10);
        org.joda.time.MutablePeriod mutablePeriod6 = days3.toMutablePeriod();
        int int7 = days3.size();
        int int8 = days1.compareTo((org.joda.time.base.BaseSingleFieldPeriod) days3);
        org.joda.time.Days days10 = days1.minus(0);
        org.joda.time.Days days11 = days10.negated();
        org.joda.time.DurationFieldType durationFieldType12 = days10.getFieldType();
        org.joda.time.Days days14 = days10.plus((-90));
        int int15 = days14.size();
        org.junit.Assert.assertNotNull(days1);
        org.junit.Assert.assertNotNull(days3);
        org.junit.Assert.assertNotNull(days5);
        org.junit.Assert.assertNotNull(mutablePeriod6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNotNull(days10);
        org.junit.Assert.assertNotNull(days11);
        org.junit.Assert.assertNotNull(durationFieldType12);
        org.junit.Assert.assertNotNull(days14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1 + "'", int15 == 1);
    }

    @Test
    public void test0228() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0228");
        org.joda.time.Days days0 = org.joda.time.Days.MAX_VALUE;
        org.joda.time.Days days1 = days0.negated();
        org.joda.time.Period period2 = days1.toPeriod();
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Hours hours3 = days1.toStandardHours();
            org.junit.Assert.fail("Expected exception of type java.lang.ArithmeticException; message: Multiplication overflows an int: -2147483647 * 24");
        } catch (java.lang.ArithmeticException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(days0);
        org.junit.Assert.assertNotNull(days1);
        org.junit.Assert.assertNotNull(period2);
    }

    @Test
    public void test0229() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0229");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Days days1 = org.joda.time.Days.daysIn(readableInterval0);
        int int3 = days1.getValue((int) (short) 0);
        org.joda.time.Days days4 = org.joda.time.Days.FIVE;
        org.joda.time.Days days5 = days1.minus(days4);
        org.joda.time.Days days6 = null;
        org.joda.time.Days days7 = days1.minus(days6);
        org.joda.time.Days days9 = days7.minus(100);
        org.joda.time.Days days10 = org.joda.time.Days.standardDaysIn((org.joda.time.ReadablePeriod) days9);
        org.joda.time.Days days12 = days9.multipliedBy(0);
        org.joda.time.Days days14 = days9.dividedBy((int) '4');
        java.lang.Class<?> wildcardClass15 = days14.getClass();
        org.junit.Assert.assertNotNull(days1);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(days4);
        org.junit.Assert.assertNotNull(days5);
        org.junit.Assert.assertNotNull(days7);
        org.junit.Assert.assertNotNull(days9);
        org.junit.Assert.assertNotNull(days10);
        org.junit.Assert.assertNotNull(days12);
        org.junit.Assert.assertNotNull(days14);
        org.junit.Assert.assertNotNull(wildcardClass15);
    }

    @Test
    public void test0230() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0230");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Days days1 = org.joda.time.Days.daysIn(readableInterval0);
        int int3 = days1.getValue((int) (short) 0);
        org.joda.time.Days days4 = org.joda.time.Days.FIVE;
        org.joda.time.Days days5 = days1.minus(days4);
        org.joda.time.DurationFieldType durationFieldType6 = null;
        boolean boolean7 = days4.isSupported(durationFieldType6);
        org.joda.time.DurationFieldType durationFieldType9 = days4.getFieldType(0);
        org.joda.time.ReadableInterval readableInterval10 = null;
        org.joda.time.Days days11 = org.joda.time.Days.daysIn(readableInterval10);
        int int13 = days11.getValue((int) (short) 0);
        org.joda.time.Days days14 = org.joda.time.Days.FIVE;
        org.joda.time.Days days15 = days11.minus(days14);
        org.joda.time.Days days16 = null;
        org.joda.time.Days days17 = days11.minus(days16);
        org.joda.time.Days days19 = days11.minus((-1));
        org.joda.time.DurationFieldType durationFieldType20 = days11.getFieldType();
        boolean boolean21 = days4.isGreaterThan(days11);
        org.joda.time.ReadableInterval readableInterval22 = null;
        org.joda.time.Days days23 = org.joda.time.Days.daysIn(readableInterval22);
        org.joda.time.Days days25 = days23.plus((int) (byte) 10);
        org.joda.time.Days days26 = days11.plus(days25);
        org.joda.time.ReadableInterval readableInterval27 = null;
        org.joda.time.Days days28 = org.joda.time.Days.daysIn(readableInterval27);
        int int30 = days28.getValue((int) (short) 0);
        org.joda.time.Days days31 = org.joda.time.Days.FIVE;
        org.joda.time.Days days32 = days28.minus(days31);
        org.joda.time.Days days33 = null;
        org.joda.time.Days days34 = days28.minus(days33);
        org.joda.time.Duration duration35 = days28.toStandardDuration();
        org.joda.time.Days days36 = days26.minus(days28);
        org.joda.time.Days days38 = days28.multipliedBy(5);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.DurationFieldType durationFieldType40 = days28.getFieldType(5);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 5");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(days1);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(days4);
        org.junit.Assert.assertNotNull(days5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(durationFieldType9);
        org.junit.Assert.assertNotNull(days11);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(days14);
        org.junit.Assert.assertNotNull(days15);
        org.junit.Assert.assertNotNull(days17);
        org.junit.Assert.assertNotNull(days19);
        org.junit.Assert.assertNotNull(durationFieldType20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(days23);
        org.junit.Assert.assertNotNull(days25);
        org.junit.Assert.assertNotNull(days26);
        org.junit.Assert.assertNotNull(days28);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertNotNull(days31);
        org.junit.Assert.assertNotNull(days32);
        org.junit.Assert.assertNotNull(days34);
        org.junit.Assert.assertNotNull(duration35);
        org.junit.Assert.assertNotNull(days36);
        org.junit.Assert.assertNotNull(days38);
    }

    @Test
    public void test0231() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0231");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Days days1 = org.joda.time.Days.daysIn(readableInterval0);
        org.joda.time.ReadableInterval readableInterval2 = null;
        org.joda.time.Days days3 = org.joda.time.Days.daysIn(readableInterval2);
        int int5 = days3.getValue((int) (short) 0);
        org.joda.time.Days days6 = org.joda.time.Days.FIVE;
        org.joda.time.Days days7 = days3.minus(days6);
        org.joda.time.DurationFieldType durationFieldType8 = null;
        boolean boolean9 = days6.isSupported(durationFieldType8);
        org.joda.time.DurationFieldType durationFieldType11 = days6.getFieldType(0);
        int int12 = days1.get(durationFieldType11);
        org.joda.time.ReadableInterval readableInterval13 = null;
        org.joda.time.Days days14 = org.joda.time.Days.daysIn(readableInterval13);
        int int16 = days14.getValue((int) (short) 0);
        org.joda.time.Days days17 = org.joda.time.Days.FIVE;
        org.joda.time.Days days18 = days14.minus(days17);
        org.joda.time.DurationFieldType durationFieldType19 = null;
        int int20 = days17.get(durationFieldType19);
        org.joda.time.DurationFieldType durationFieldType21 = null;
        int int22 = days17.get(durationFieldType21);
        boolean boolean24 = days17.equals((java.lang.Object) 0L);
        boolean boolean25 = days1.isGreaterThan(days17);
        org.joda.time.ReadableInterval readableInterval26 = null;
        org.joda.time.Days days27 = org.joda.time.Days.daysIn(readableInterval26);
        int int29 = days27.getValue((int) (short) 0);
        org.joda.time.Days days30 = org.joda.time.Days.FIVE;
        org.joda.time.Days days31 = days27.minus(days30);
        org.joda.time.DurationFieldType durationFieldType32 = null;
        int int33 = days30.get(durationFieldType32);
        org.joda.time.DurationFieldType durationFieldType34 = null;
        int int35 = days30.get(durationFieldType34);
        boolean boolean37 = days30.equals((java.lang.Object) 0L);
        org.joda.time.Period period38 = days30.toPeriod();
        org.joda.time.Days days39 = days1.plus(days30);
        org.joda.time.ReadableInterval readableInterval40 = null;
        org.joda.time.Days days41 = org.joda.time.Days.daysIn(readableInterval40);
        int int43 = days41.getValue((int) (short) 0);
        org.joda.time.Period period44 = days41.toPeriod();
        org.joda.time.Days days45 = org.joda.time.Days.standardDaysIn((org.joda.time.ReadablePeriod) days41);
        boolean boolean46 = days1.equals((java.lang.Object) days45);
        org.joda.time.ReadableInterval readableInterval47 = null;
        org.joda.time.Days days48 = org.joda.time.Days.daysIn(readableInterval47);
        int int50 = days48.getValue((int) (short) 0);
        org.joda.time.Days days51 = org.joda.time.Days.FIVE;
        org.joda.time.Days days52 = days48.minus(days51);
        org.joda.time.DurationFieldType durationFieldType53 = null;
        boolean boolean54 = days51.isSupported(durationFieldType53);
        org.joda.time.DurationFieldType durationFieldType56 = days51.getFieldType(0);
        boolean boolean57 = days45.isSupported(durationFieldType56);
        org.joda.time.PeriodType periodType58 = days45.getPeriodType();
        org.joda.time.Days days59 = org.joda.time.Days.FIVE;
        org.joda.time.ReadableInterval readableInterval60 = null;
        org.joda.time.Days days61 = org.joda.time.Days.daysIn(readableInterval60);
        int int63 = days61.getValue((int) (short) 0);
        org.joda.time.ReadableInterval readableInterval64 = null;
        org.joda.time.Days days65 = org.joda.time.Days.daysIn(readableInterval64);
        int int67 = days65.getValue((int) (short) 0);
        org.joda.time.Days days68 = org.joda.time.Days.FIVE;
        org.joda.time.Days days69 = days65.minus(days68);
        int int70 = days61.compareTo((org.joda.time.base.BaseSingleFieldPeriod) days68);
        org.joda.time.ReadableInterval readableInterval71 = null;
        org.joda.time.Days days72 = org.joda.time.Days.daysIn(readableInterval71);
        int int74 = days72.getValue((int) (short) 0);
        org.joda.time.Days days75 = org.joda.time.Days.FIVE;
        org.joda.time.Days days76 = days72.minus(days75);
        org.joda.time.DurationFieldType durationFieldType77 = null;
        boolean boolean78 = days75.isSupported(durationFieldType77);
        org.joda.time.DurationFieldType durationFieldType80 = days75.getFieldType(0);
        int int81 = days61.get(durationFieldType80);
        boolean boolean82 = days59.isSupported(durationFieldType80);
        boolean boolean83 = days45.isSupported(durationFieldType80);
        org.joda.time.Days days84 = null;
        boolean boolean85 = days45.isLessThan(days84);
        org.junit.Assert.assertNotNull(days1);
        org.junit.Assert.assertNotNull(days3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(days6);
        org.junit.Assert.assertNotNull(days7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(durationFieldType11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNotNull(days14);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertNotNull(days17);
        org.junit.Assert.assertNotNull(days18);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(days27);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertNotNull(days30);
        org.junit.Assert.assertNotNull(days31);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(period38);
        org.junit.Assert.assertNotNull(days39);
        org.junit.Assert.assertNotNull(days41);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0);
        org.junit.Assert.assertNotNull(period44);
        org.junit.Assert.assertNotNull(days45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(days48);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 0 + "'", int50 == 0);
        org.junit.Assert.assertNotNull(days51);
        org.junit.Assert.assertNotNull(days52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(durationFieldType56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(periodType58);
        org.junit.Assert.assertNotNull(days59);
        org.junit.Assert.assertNotNull(days61);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 0 + "'", int63 == 0);
        org.junit.Assert.assertNotNull(days65);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 0 + "'", int67 == 0);
        org.junit.Assert.assertNotNull(days68);
        org.junit.Assert.assertNotNull(days69);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + (-1) + "'", int70 == (-1));
        org.junit.Assert.assertNotNull(days72);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 0 + "'", int74 == 0);
        org.junit.Assert.assertNotNull(days75);
        org.junit.Assert.assertNotNull(days76);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertNotNull(durationFieldType80);
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + 0 + "'", int81 == 0);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
    }

    @Test
    public void test0232() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0232");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Days days1 = org.joda.time.Days.daysIn(readableInterval0);
        int int3 = days1.getValue((int) (short) 0);
        org.joda.time.Days days4 = org.joda.time.Days.FIVE;
        org.joda.time.Days days5 = days1.minus(days4);
        org.joda.time.DurationFieldType durationFieldType6 = null;
        boolean boolean7 = days4.isSupported(durationFieldType6);
        org.joda.time.DurationFieldType durationFieldType9 = days4.getFieldType(0);
        org.joda.time.ReadableInterval readableInterval10 = null;
        org.joda.time.Days days11 = org.joda.time.Days.daysIn(readableInterval10);
        int int13 = days11.getValue((int) (short) 0);
        org.joda.time.Days days14 = org.joda.time.Days.FIVE;
        org.joda.time.Days days15 = days11.minus(days14);
        org.joda.time.Days days16 = null;
        org.joda.time.Days days17 = days11.minus(days16);
        org.joda.time.Days days19 = days11.minus((-1));
        org.joda.time.DurationFieldType durationFieldType20 = days11.getFieldType();
        boolean boolean21 = days4.isGreaterThan(days11);
        org.joda.time.ReadableInterval readableInterval22 = null;
        org.joda.time.Days days23 = org.joda.time.Days.daysIn(readableInterval22);
        org.joda.time.Days days25 = days23.plus((int) (byte) 10);
        org.joda.time.Days days26 = days11.plus(days25);
        org.joda.time.ReadableInterval readableInterval27 = null;
        org.joda.time.Days days28 = org.joda.time.Days.daysIn(readableInterval27);
        int int30 = days28.getValue((int) (short) 0);
        org.joda.time.Days days31 = org.joda.time.Days.FIVE;
        org.joda.time.Days days32 = days28.minus(days31);
        org.joda.time.Days days33 = null;
        org.joda.time.Days days34 = days28.minus(days33);
        org.joda.time.Duration duration35 = days28.toStandardDuration();
        org.joda.time.Days days36 = days26.minus(days28);
        org.joda.time.ReadableInterval readableInterval37 = null;
        org.joda.time.Days days38 = org.joda.time.Days.daysIn(readableInterval37);
        int int40 = days38.getValue((int) (short) 0);
        org.joda.time.ReadableInterval readableInterval41 = null;
        org.joda.time.Days days42 = org.joda.time.Days.daysIn(readableInterval41);
        int int44 = days42.getValue((int) (short) 0);
        org.joda.time.Days days45 = org.joda.time.Days.FIVE;
        org.joda.time.Days days46 = days42.minus(days45);
        int int47 = days38.compareTo((org.joda.time.base.BaseSingleFieldPeriod) days45);
        org.joda.time.ReadableInterval readableInterval48 = null;
        org.joda.time.Days days49 = org.joda.time.Days.daysIn(readableInterval48);
        int int51 = days49.getValue((int) (short) 0);
        org.joda.time.Days days52 = org.joda.time.Days.FIVE;
        org.joda.time.Days days53 = days49.minus(days52);
        org.joda.time.DurationFieldType durationFieldType54 = null;
        boolean boolean55 = days52.isSupported(durationFieldType54);
        org.joda.time.DurationFieldType durationFieldType57 = days52.getFieldType(0);
        int int58 = days38.get(durationFieldType57);
        boolean boolean59 = days28.isSupported(durationFieldType57);
        org.joda.time.Days days60 = days28.negated();
        int int62 = days28.getValue(0);
        org.junit.Assert.assertNotNull(days1);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(days4);
        org.junit.Assert.assertNotNull(days5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(durationFieldType9);
        org.junit.Assert.assertNotNull(days11);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(days14);
        org.junit.Assert.assertNotNull(days15);
        org.junit.Assert.assertNotNull(days17);
        org.junit.Assert.assertNotNull(days19);
        org.junit.Assert.assertNotNull(durationFieldType20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(days23);
        org.junit.Assert.assertNotNull(days25);
        org.junit.Assert.assertNotNull(days26);
        org.junit.Assert.assertNotNull(days28);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertNotNull(days31);
        org.junit.Assert.assertNotNull(days32);
        org.junit.Assert.assertNotNull(days34);
        org.junit.Assert.assertNotNull(duration35);
        org.junit.Assert.assertNotNull(days36);
        org.junit.Assert.assertNotNull(days38);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertNotNull(days42);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 0 + "'", int44 == 0);
        org.junit.Assert.assertNotNull(days45);
        org.junit.Assert.assertNotNull(days46);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + (-1) + "'", int47 == (-1));
        org.junit.Assert.assertNotNull(days49);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 0 + "'", int51 == 0);
        org.junit.Assert.assertNotNull(days52);
        org.junit.Assert.assertNotNull(days53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(durationFieldType57);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 0 + "'", int58 == 0);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(days60);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 0 + "'", int62 == 0);
    }

    @Test
    public void test0233() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0233");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Days days1 = org.joda.time.Days.daysIn(readableInterval0);
        org.joda.time.ReadableInterval readableInterval2 = null;
        org.joda.time.Days days3 = org.joda.time.Days.daysIn(readableInterval2);
        int int5 = days3.getValue((int) (short) 0);
        org.joda.time.Days days6 = org.joda.time.Days.FIVE;
        org.joda.time.Days days7 = days3.minus(days6);
        org.joda.time.DurationFieldType durationFieldType8 = null;
        boolean boolean9 = days6.isSupported(durationFieldType8);
        org.joda.time.DurationFieldType durationFieldType11 = days6.getFieldType(0);
        int int12 = days1.get(durationFieldType11);
        org.joda.time.PeriodType periodType13 = days1.getPeriodType();
        org.joda.time.Days days15 = days1.minus(3);
        org.joda.time.MutablePeriod mutablePeriod16 = days15.toMutablePeriod();
        org.junit.Assert.assertNotNull(days1);
        org.junit.Assert.assertNotNull(days3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(days6);
        org.junit.Assert.assertNotNull(days7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(durationFieldType11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNotNull(periodType13);
        org.junit.Assert.assertNotNull(days15);
        org.junit.Assert.assertNotNull(mutablePeriod16);
    }

    @Test
    public void test0234() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0234");
        org.joda.time.Days days1 = org.joda.time.Days.parseDays("P5D");
        org.joda.time.Minutes minutes2 = days1.toStandardMinutes();
        org.junit.Assert.assertNotNull(days1);
        org.junit.Assert.assertNotNull(minutes2);
    }

    @Test
    public void test0235() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0235");
        org.joda.time.Days days0 = org.joda.time.Days.ZERO;
        org.joda.time.ReadableInterval readableInterval1 = null;
        org.joda.time.Days days2 = org.joda.time.Days.daysIn(readableInterval1);
        int int4 = days2.getValue((int) (short) 0);
        org.joda.time.Days days5 = org.joda.time.Days.FIVE;
        org.joda.time.Days days6 = days2.minus(days5);
        org.joda.time.Days days7 = null;
        org.joda.time.Days days8 = days2.minus(days7);
        org.joda.time.Duration duration9 = days2.toStandardDuration();
        org.joda.time.DurationFieldType durationFieldType10 = days2.getFieldType();
        org.joda.time.Days days11 = days0.minus(days2);
        org.joda.time.ReadableInterval readableInterval12 = null;
        org.joda.time.Days days13 = org.joda.time.Days.daysIn(readableInterval12);
        org.joda.time.Days days15 = days13.plus((int) (byte) 10);
        org.joda.time.ReadableInterval readableInterval16 = null;
        org.joda.time.Days days17 = org.joda.time.Days.daysIn(readableInterval16);
        org.joda.time.ReadableInterval readableInterval18 = null;
        org.joda.time.Days days19 = org.joda.time.Days.daysIn(readableInterval18);
        int int21 = days19.getValue((int) (short) 0);
        org.joda.time.Days days22 = org.joda.time.Days.FIVE;
        org.joda.time.Days days23 = days19.minus(days22);
        org.joda.time.DurationFieldType durationFieldType24 = null;
        boolean boolean25 = days22.isSupported(durationFieldType24);
        org.joda.time.DurationFieldType durationFieldType27 = days22.getFieldType(0);
        int int28 = days17.get(durationFieldType27);
        int int29 = days15.get(durationFieldType27);
        int int30 = days0.get(durationFieldType27);
        org.joda.time.ReadableInterval readableInterval31 = null;
        org.joda.time.Days days32 = org.joda.time.Days.daysIn(readableInterval31);
        int int34 = days32.getValue((int) (short) 0);
        org.joda.time.Days days35 = org.joda.time.Days.FIVE;
        org.joda.time.Days days36 = days32.minus(days35);
        org.joda.time.Days days37 = null;
        org.joda.time.Days days38 = days32.minus(days37);
        org.joda.time.Days days40 = days38.minus(100);
        int int41 = days38.getDays();
        org.joda.time.Days days42 = days0.minus(days38);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.DurationFieldType durationFieldType44 = days0.getFieldType(8);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 8");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(days0);
        org.junit.Assert.assertNotNull(days2);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(days5);
        org.junit.Assert.assertNotNull(days6);
        org.junit.Assert.assertNotNull(days8);
        org.junit.Assert.assertNotNull(duration9);
        org.junit.Assert.assertNotNull(durationFieldType10);
        org.junit.Assert.assertNotNull(days11);
        org.junit.Assert.assertNotNull(days13);
        org.junit.Assert.assertNotNull(days15);
        org.junit.Assert.assertNotNull(days17);
        org.junit.Assert.assertNotNull(days19);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertNotNull(days22);
        org.junit.Assert.assertNotNull(days23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(durationFieldType27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 10 + "'", int29 == 10);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertNotNull(days32);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertNotNull(days35);
        org.junit.Assert.assertNotNull(days36);
        org.junit.Assert.assertNotNull(days38);
        org.junit.Assert.assertNotNull(days40);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0);
        org.junit.Assert.assertNotNull(days42);
    }

    @Test
    public void test0236() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0236");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Days days1 = org.joda.time.Days.daysIn(readableInterval0);
        int int3 = days1.getValue((int) (short) 0);
        org.joda.time.Days days4 = org.joda.time.Days.FIVE;
        org.joda.time.Days days5 = days1.minus(days4);
        org.joda.time.DurationFieldType durationFieldType6 = null;
        int int7 = days4.get(durationFieldType6);
        org.joda.time.DurationFieldType durationFieldType8 = null;
        int int9 = days4.get(durationFieldType8);
        boolean boolean11 = days4.equals((java.lang.Object) 0L);
        int int12 = days4.getDays();
        org.joda.time.DurationFieldType durationFieldType13 = days4.getFieldType();
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Days days15 = days4.dividedBy(0);
            org.junit.Assert.fail("Expected exception of type java.lang.ArithmeticException; message: / by zero");
        } catch (java.lang.ArithmeticException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(days1);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(days4);
        org.junit.Assert.assertNotNull(days5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 5 + "'", int12 == 5);
        org.junit.Assert.assertNotNull(durationFieldType13);
    }

    @Test
    public void test0237() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0237");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Days days1 = org.joda.time.Days.daysIn(readableInterval0);
        org.joda.time.Days days3 = days1.plus((int) (byte) 10);
        int int4 = days3.getDays();
        int int5 = days3.getDays();
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.DurationFieldType durationFieldType7 = days3.getFieldType(100);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 100");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(days1);
        org.junit.Assert.assertNotNull(days3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 10 + "'", int4 == 10);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 10 + "'", int5 == 10);
    }

    @Test
    public void test0238() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0238");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Days days1 = org.joda.time.Days.daysIn(readableInterval0);
        int int3 = days1.getValue((int) (short) 0);
        org.joda.time.Days days4 = org.joda.time.Days.FIVE;
        org.joda.time.Days days5 = days1.minus(days4);
        org.joda.time.DurationFieldType durationFieldType6 = null;
        boolean boolean7 = days4.isSupported(durationFieldType6);
        org.joda.time.DurationFieldType durationFieldType9 = days4.getFieldType(0);
        org.joda.time.ReadableInterval readableInterval10 = null;
        org.joda.time.Days days11 = org.joda.time.Days.daysIn(readableInterval10);
        int int13 = days11.getValue((int) (short) 0);
        org.joda.time.Days days14 = org.joda.time.Days.FIVE;
        org.joda.time.Days days15 = days11.minus(days14);
        org.joda.time.Days days16 = null;
        org.joda.time.Days days17 = days11.minus(days16);
        org.joda.time.Days days19 = days11.minus((-1));
        org.joda.time.DurationFieldType durationFieldType20 = days11.getFieldType();
        boolean boolean21 = days4.isGreaterThan(days11);
        org.joda.time.ReadableInterval readableInterval22 = null;
        org.joda.time.Days days23 = org.joda.time.Days.daysIn(readableInterval22);
        org.joda.time.Days days25 = days23.plus((int) (byte) 10);
        org.joda.time.Days days26 = days11.plus(days25);
        org.joda.time.ReadableInterval readableInterval27 = null;
        org.joda.time.Days days28 = org.joda.time.Days.daysIn(readableInterval27);
        int int30 = days28.getValue((int) (short) 0);
        org.joda.time.Days days31 = org.joda.time.Days.FIVE;
        org.joda.time.Days days32 = days28.minus(days31);
        org.joda.time.Days days33 = null;
        org.joda.time.Days days34 = days28.minus(days33);
        org.joda.time.Duration duration35 = days28.toStandardDuration();
        org.joda.time.Days days36 = days26.minus(days28);
        org.joda.time.ReadableInterval readableInterval37 = null;
        org.joda.time.Days days38 = org.joda.time.Days.daysIn(readableInterval37);
        int int40 = days38.getValue((int) (short) 0);
        org.joda.time.ReadableInterval readableInterval41 = null;
        org.joda.time.Days days42 = org.joda.time.Days.daysIn(readableInterval41);
        int int44 = days42.getValue((int) (short) 0);
        org.joda.time.Days days45 = org.joda.time.Days.FIVE;
        org.joda.time.Days days46 = days42.minus(days45);
        int int47 = days38.compareTo((org.joda.time.base.BaseSingleFieldPeriod) days45);
        org.joda.time.ReadableInterval readableInterval48 = null;
        org.joda.time.Days days49 = org.joda.time.Days.daysIn(readableInterval48);
        int int51 = days49.getValue((int) (short) 0);
        org.joda.time.Days days52 = org.joda.time.Days.FIVE;
        org.joda.time.Days days53 = days49.minus(days52);
        org.joda.time.DurationFieldType durationFieldType54 = null;
        boolean boolean55 = days52.isSupported(durationFieldType54);
        org.joda.time.DurationFieldType durationFieldType57 = days52.getFieldType(0);
        int int58 = days38.get(durationFieldType57);
        boolean boolean59 = days28.isSupported(durationFieldType57);
        org.joda.time.Days days60 = days28.negated();
        java.lang.String str61 = days28.toString();
        java.lang.String str62 = days28.toString();
        org.junit.Assert.assertNotNull(days1);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(days4);
        org.junit.Assert.assertNotNull(days5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(durationFieldType9);
        org.junit.Assert.assertNotNull(days11);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(days14);
        org.junit.Assert.assertNotNull(days15);
        org.junit.Assert.assertNotNull(days17);
        org.junit.Assert.assertNotNull(days19);
        org.junit.Assert.assertNotNull(durationFieldType20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(days23);
        org.junit.Assert.assertNotNull(days25);
        org.junit.Assert.assertNotNull(days26);
        org.junit.Assert.assertNotNull(days28);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertNotNull(days31);
        org.junit.Assert.assertNotNull(days32);
        org.junit.Assert.assertNotNull(days34);
        org.junit.Assert.assertNotNull(duration35);
        org.junit.Assert.assertNotNull(days36);
        org.junit.Assert.assertNotNull(days38);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertNotNull(days42);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 0 + "'", int44 == 0);
        org.junit.Assert.assertNotNull(days45);
        org.junit.Assert.assertNotNull(days46);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + (-1) + "'", int47 == (-1));
        org.junit.Assert.assertNotNull(days49);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 0 + "'", int51 == 0);
        org.junit.Assert.assertNotNull(days52);
        org.junit.Assert.assertNotNull(days53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(durationFieldType57);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 0 + "'", int58 == 0);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(days60);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "P0D" + "'", str61, "P0D");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "P0D" + "'", str62, "P0D");
    }

    @Test
    public void test0239() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0239");
        org.joda.time.Days days1 = org.joda.time.Days.parseDays("P51D");
        org.joda.time.Days days3 = days1.plus((int) ' ');
        int int4 = days1.size();
        org.joda.time.Duration duration5 = days1.toStandardDuration();
        org.junit.Assert.assertNotNull(days1);
        org.junit.Assert.assertNotNull(days3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 1 + "'", int4 == 1);
        org.junit.Assert.assertNotNull(duration5);
    }

    @Test
    public void test0240() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0240");
        org.joda.time.Days days1 = org.joda.time.Days.parseDays("P0D");
        org.joda.time.ReadableInterval readableInterval2 = null;
        org.joda.time.Days days3 = org.joda.time.Days.daysIn(readableInterval2);
        org.joda.time.Days days5 = days3.plus((int) (byte) 10);
        org.joda.time.MutablePeriod mutablePeriod6 = days3.toMutablePeriod();
        int int7 = days3.size();
        int int8 = days1.compareTo((org.joda.time.base.BaseSingleFieldPeriod) days3);
        org.joda.time.Days days10 = days1.minus(0);
        org.joda.time.Days days11 = days10.negated();
        org.joda.time.DurationFieldType durationFieldType12 = days11.getFieldType();
        org.joda.time.base.BaseSingleFieldPeriod baseSingleFieldPeriod13 = null;
        // The following exception was thrown during execution in test generation
        try {
            int int14 = days11.compareTo(baseSingleFieldPeriod13);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(days1);
        org.junit.Assert.assertNotNull(days3);
        org.junit.Assert.assertNotNull(days5);
        org.junit.Assert.assertNotNull(mutablePeriod6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNotNull(days10);
        org.junit.Assert.assertNotNull(days11);
        org.junit.Assert.assertNotNull(durationFieldType12);
    }

    @Test
    public void test0241() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0241");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Days days1 = org.joda.time.Days.daysIn(readableInterval0);
        int int3 = days1.getValue((int) (short) 0);
        org.joda.time.Days days4 = org.joda.time.Days.FIVE;
        org.joda.time.Days days5 = days1.minus(days4);
        org.joda.time.Days days6 = null;
        org.joda.time.Days days7 = days1.minus(days6);
        org.joda.time.Days days9 = days7.minus(100);
        org.joda.time.Days days10 = org.joda.time.Days.standardDaysIn((org.joda.time.ReadablePeriod) days9);
        org.joda.time.Days days12 = days9.multipliedBy(0);
        org.joda.time.Days days14 = days12.multipliedBy((int) (short) -1);
        org.junit.Assert.assertNotNull(days1);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(days4);
        org.junit.Assert.assertNotNull(days5);
        org.junit.Assert.assertNotNull(days7);
        org.junit.Assert.assertNotNull(days9);
        org.junit.Assert.assertNotNull(days10);
        org.junit.Assert.assertNotNull(days12);
        org.junit.Assert.assertNotNull(days14);
    }

    @Test
    public void test0242() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0242");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Days days1 = org.joda.time.Days.daysIn(readableInterval0);
        int int3 = days1.getValue((int) (short) 0);
        org.joda.time.Days days4 = org.joda.time.Days.FIVE;
        org.joda.time.Days days5 = days1.minus(days4);
        org.joda.time.DurationFieldType durationFieldType6 = null;
        boolean boolean7 = days4.isSupported(durationFieldType6);
        org.joda.time.DurationFieldType durationFieldType9 = days4.getFieldType(0);
        org.joda.time.Period period10 = days4.toPeriod();
        org.joda.time.Days days11 = org.joda.time.Days.MAX_VALUE;
        org.joda.time.Days days12 = days11.negated();
        org.joda.time.PeriodType periodType13 = days11.getPeriodType();
        org.joda.time.ReadableInterval readableInterval14 = null;
        org.joda.time.Days days15 = org.joda.time.Days.daysIn(readableInterval14);
        int int17 = days15.getValue((int) (short) 0);
        org.joda.time.Days days18 = org.joda.time.Days.FIVE;
        org.joda.time.Days days19 = days15.minus(days18);
        org.joda.time.DurationFieldType durationFieldType20 = null;
        int int21 = days18.get(durationFieldType20);
        org.joda.time.Days days23 = days18.dividedBy(100);
        int int24 = days11.compareTo((org.joda.time.base.BaseSingleFieldPeriod) days18);
        org.joda.time.PeriodType periodType25 = days18.getPeriodType();
        org.joda.time.DurationFieldType durationFieldType26 = days18.getFieldType();
        boolean boolean27 = days4.isSupported(durationFieldType26);
        org.junit.Assert.assertNotNull(days1);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(days4);
        org.junit.Assert.assertNotNull(days5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(durationFieldType9);
        org.junit.Assert.assertNotNull(period10);
        org.junit.Assert.assertNotNull(days11);
        org.junit.Assert.assertNotNull(days12);
        org.junit.Assert.assertNotNull(periodType13);
        org.junit.Assert.assertNotNull(days15);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNotNull(days18);
        org.junit.Assert.assertNotNull(days19);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertNotNull(days23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 1 + "'", int24 == 1);
        org.junit.Assert.assertNotNull(periodType25);
        org.junit.Assert.assertNotNull(durationFieldType26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
    }

    @Test
    public void test0243() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0243");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Days days1 = org.joda.time.Days.daysIn(readableInterval0);
        int int3 = days1.getValue((int) (short) 0);
        org.joda.time.Days days4 = org.joda.time.Days.FIVE;
        org.joda.time.Days days5 = days1.minus(days4);
        org.joda.time.Days days6 = null;
        org.joda.time.Days days7 = days1.minus(days6);
        org.joda.time.Duration duration8 = days1.toStandardDuration();
        org.joda.time.Days days9 = org.joda.time.Days.ZERO;
        org.joda.time.ReadableInterval readableInterval10 = null;
        org.joda.time.Days days11 = org.joda.time.Days.daysIn(readableInterval10);
        int int13 = days11.getValue((int) (short) 0);
        org.joda.time.Days days14 = org.joda.time.Days.FIVE;
        org.joda.time.Days days15 = days11.minus(days14);
        org.joda.time.Days days16 = null;
        org.joda.time.Days days17 = days11.minus(days16);
        org.joda.time.Duration duration18 = days11.toStandardDuration();
        org.joda.time.DurationFieldType durationFieldType19 = days11.getFieldType();
        org.joda.time.Days days20 = days9.minus(days11);
        org.joda.time.ReadableInterval readableInterval21 = null;
        org.joda.time.Days days22 = org.joda.time.Days.daysIn(readableInterval21);
        org.joda.time.Days days24 = days22.plus((int) (byte) 10);
        org.joda.time.ReadableInterval readableInterval25 = null;
        org.joda.time.Days days26 = org.joda.time.Days.daysIn(readableInterval25);
        org.joda.time.ReadableInterval readableInterval27 = null;
        org.joda.time.Days days28 = org.joda.time.Days.daysIn(readableInterval27);
        int int30 = days28.getValue((int) (short) 0);
        org.joda.time.Days days31 = org.joda.time.Days.FIVE;
        org.joda.time.Days days32 = days28.minus(days31);
        org.joda.time.DurationFieldType durationFieldType33 = null;
        boolean boolean34 = days31.isSupported(durationFieldType33);
        org.joda.time.DurationFieldType durationFieldType36 = days31.getFieldType(0);
        int int37 = days26.get(durationFieldType36);
        int int38 = days24.get(durationFieldType36);
        int int39 = days9.get(durationFieldType36);
        int int40 = days1.get(durationFieldType36);
        org.junit.Assert.assertNotNull(days1);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(days4);
        org.junit.Assert.assertNotNull(days5);
        org.junit.Assert.assertNotNull(days7);
        org.junit.Assert.assertNotNull(duration8);
        org.junit.Assert.assertNotNull(days9);
        org.junit.Assert.assertNotNull(days11);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(days14);
        org.junit.Assert.assertNotNull(days15);
        org.junit.Assert.assertNotNull(days17);
        org.junit.Assert.assertNotNull(duration18);
        org.junit.Assert.assertNotNull(durationFieldType19);
        org.junit.Assert.assertNotNull(days20);
        org.junit.Assert.assertNotNull(days22);
        org.junit.Assert.assertNotNull(days24);
        org.junit.Assert.assertNotNull(days26);
        org.junit.Assert.assertNotNull(days28);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertNotNull(days31);
        org.junit.Assert.assertNotNull(days32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(durationFieldType36);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 10 + "'", int38 == 10);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
    }

    @Test
    public void test0244() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0244");
        org.joda.time.Days days0 = org.joda.time.Days.MIN_VALUE;
        int int1 = days0.getDays();
        org.joda.time.Weeks weeks2 = days0.toStandardWeeks();
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Hours hours3 = days0.toStandardHours();
            org.junit.Assert.fail("Expected exception of type java.lang.ArithmeticException; message: Multiplication overflows an int: -2147483648 * 24");
        } catch (java.lang.ArithmeticException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(days0);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + (-2147483648) + "'", int1 == (-2147483648));
        org.junit.Assert.assertNotNull(weeks2);
    }

    @Test
    public void test0245() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0245");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Days days1 = org.joda.time.Days.daysIn(readableInterval0);
        org.joda.time.ReadableInterval readableInterval2 = null;
        org.joda.time.Days days3 = org.joda.time.Days.daysIn(readableInterval2);
        int int5 = days3.getValue((int) (short) 0);
        org.joda.time.Days days6 = org.joda.time.Days.FIVE;
        org.joda.time.Days days7 = days3.minus(days6);
        org.joda.time.DurationFieldType durationFieldType8 = null;
        boolean boolean9 = days6.isSupported(durationFieldType8);
        org.joda.time.DurationFieldType durationFieldType11 = days6.getFieldType(0);
        int int12 = days1.get(durationFieldType11);
        org.joda.time.ReadableInterval readableInterval13 = null;
        org.joda.time.Days days14 = org.joda.time.Days.daysIn(readableInterval13);
        int int16 = days14.getValue((int) (short) 0);
        org.joda.time.Days days17 = org.joda.time.Days.FIVE;
        org.joda.time.Days days18 = days14.minus(days17);
        org.joda.time.DurationFieldType durationFieldType19 = null;
        int int20 = days17.get(durationFieldType19);
        org.joda.time.DurationFieldType durationFieldType21 = null;
        int int22 = days17.get(durationFieldType21);
        boolean boolean24 = days17.equals((java.lang.Object) 0L);
        boolean boolean25 = days1.isGreaterThan(days17);
        org.joda.time.ReadableInterval readableInterval26 = null;
        org.joda.time.Days days27 = org.joda.time.Days.daysIn(readableInterval26);
        int int29 = days27.getValue((int) (short) 0);
        org.joda.time.Days days30 = org.joda.time.Days.FIVE;
        org.joda.time.Days days31 = days27.minus(days30);
        org.joda.time.DurationFieldType durationFieldType32 = null;
        int int33 = days30.get(durationFieldType32);
        org.joda.time.DurationFieldType durationFieldType34 = null;
        int int35 = days30.get(durationFieldType34);
        boolean boolean37 = days30.equals((java.lang.Object) 0L);
        org.joda.time.Period period38 = days30.toPeriod();
        org.joda.time.Days days39 = days1.plus(days30);
        org.joda.time.ReadableInterval readableInterval40 = null;
        org.joda.time.Days days41 = org.joda.time.Days.daysIn(readableInterval40);
        int int43 = days41.getValue((int) (short) 0);
        org.joda.time.Period period44 = days41.toPeriod();
        org.joda.time.Days days45 = org.joda.time.Days.standardDaysIn((org.joda.time.ReadablePeriod) days41);
        boolean boolean46 = days1.equals((java.lang.Object) days45);
        org.joda.time.Days days48 = days45.multipliedBy(0);
        org.joda.time.Days days50 = days45.multipliedBy(5);
        org.joda.time.Days days52 = days50.dividedBy(5);
        org.joda.time.ReadableInterval readableInterval53 = null;
        org.joda.time.Days days54 = org.joda.time.Days.daysIn(readableInterval53);
        int int56 = days54.getValue((int) (short) 0);
        org.joda.time.Days days57 = org.joda.time.Days.FIVE;
        org.joda.time.Days days58 = days54.minus(days57);
        org.joda.time.Days days59 = null;
        org.joda.time.Days days60 = days54.minus(days59);
        org.joda.time.Days days62 = days54.minus((-1));
        org.joda.time.DurationFieldType durationFieldType63 = days54.getFieldType();
        boolean boolean64 = days50.isSupported(durationFieldType63);
        org.joda.time.Days days65 = days50.negated();
        org.junit.Assert.assertNotNull(days1);
        org.junit.Assert.assertNotNull(days3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(days6);
        org.junit.Assert.assertNotNull(days7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(durationFieldType11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNotNull(days14);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertNotNull(days17);
        org.junit.Assert.assertNotNull(days18);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(days27);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertNotNull(days30);
        org.junit.Assert.assertNotNull(days31);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(period38);
        org.junit.Assert.assertNotNull(days39);
        org.junit.Assert.assertNotNull(days41);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0);
        org.junit.Assert.assertNotNull(period44);
        org.junit.Assert.assertNotNull(days45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(days48);
        org.junit.Assert.assertNotNull(days50);
        org.junit.Assert.assertNotNull(days52);
        org.junit.Assert.assertNotNull(days54);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 0 + "'", int56 == 0);
        org.junit.Assert.assertNotNull(days57);
        org.junit.Assert.assertNotNull(days58);
        org.junit.Assert.assertNotNull(days60);
        org.junit.Assert.assertNotNull(days62);
        org.junit.Assert.assertNotNull(durationFieldType63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(days65);
    }

    @Test
    public void test0246() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0246");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Days days1 = org.joda.time.Days.daysIn(readableInterval0);
        int int3 = days1.getValue((int) (short) 0);
        org.joda.time.Days days4 = org.joda.time.Days.FIVE;
        org.joda.time.Days days5 = days1.minus(days4);
        org.joda.time.ReadableInterval readableInterval6 = null;
        org.joda.time.Days days7 = org.joda.time.Days.daysIn(readableInterval6);
        int int9 = days7.getValue((int) (short) 0);
        int int10 = days1.compareTo((org.joda.time.base.BaseSingleFieldPeriod) days7);
        org.joda.time.ReadableInterval readableInterval11 = null;
        org.joda.time.Days days12 = org.joda.time.Days.daysIn(readableInterval11);
        int int14 = days12.getValue((int) (short) 0);
        org.joda.time.Days days15 = org.joda.time.Days.FIVE;
        org.joda.time.Days days16 = days12.minus(days15);
        org.joda.time.DurationFieldType durationFieldType17 = null;
        int int18 = days15.get(durationFieldType17);
        org.joda.time.DurationFieldType durationFieldType19 = null;
        int int20 = days15.get(durationFieldType19);
        boolean boolean22 = days15.equals((java.lang.Object) false);
        boolean boolean23 = days7.equals((java.lang.Object) days15);
        org.joda.time.ReadableInterval readableInterval24 = null;
        org.joda.time.Days days25 = org.joda.time.Days.daysIn(readableInterval24);
        int int27 = days25.getValue((int) (short) 0);
        org.joda.time.Days days28 = org.joda.time.Days.FIVE;
        org.joda.time.Days days29 = days25.minus(days28);
        org.joda.time.Days days30 = null;
        org.joda.time.Days days31 = days25.minus(days30);
        org.joda.time.Days days33 = days25.minus((-1));
        int int34 = days25.size();
        org.joda.time.Days days35 = days15.minus(days25);
        org.joda.time.ReadableInterval readableInterval36 = null;
        org.joda.time.Days days37 = org.joda.time.Days.daysIn(readableInterval36);
        org.joda.time.ReadableInterval readableInterval38 = null;
        org.joda.time.Days days39 = org.joda.time.Days.daysIn(readableInterval38);
        int int41 = days39.getValue((int) (short) 0);
        org.joda.time.Days days42 = org.joda.time.Days.FIVE;
        org.joda.time.Days days43 = days39.minus(days42);
        org.joda.time.DurationFieldType durationFieldType44 = null;
        boolean boolean45 = days42.isSupported(durationFieldType44);
        org.joda.time.DurationFieldType durationFieldType47 = days42.getFieldType(0);
        int int48 = days37.get(durationFieldType47);
        org.joda.time.ReadableInterval readableInterval49 = null;
        org.joda.time.Days days50 = org.joda.time.Days.daysIn(readableInterval49);
        int int52 = days50.getValue((int) (short) 0);
        org.joda.time.Days days53 = org.joda.time.Days.FIVE;
        org.joda.time.Days days54 = days50.minus(days53);
        org.joda.time.DurationFieldType durationFieldType55 = null;
        int int56 = days53.get(durationFieldType55);
        org.joda.time.DurationFieldType durationFieldType57 = null;
        int int58 = days53.get(durationFieldType57);
        boolean boolean60 = days53.equals((java.lang.Object) 0L);
        boolean boolean61 = days37.isGreaterThan(days53);
        org.joda.time.ReadableInterval readableInterval62 = null;
        org.joda.time.Days days63 = org.joda.time.Days.daysIn(readableInterval62);
        int int65 = days63.getValue((int) (short) 0);
        org.joda.time.Days days66 = org.joda.time.Days.FIVE;
        org.joda.time.Days days67 = days63.minus(days66);
        org.joda.time.DurationFieldType durationFieldType68 = null;
        int int69 = days66.get(durationFieldType68);
        org.joda.time.DurationFieldType durationFieldType70 = null;
        int int71 = days66.get(durationFieldType70);
        boolean boolean73 = days66.equals((java.lang.Object) 0L);
        org.joda.time.Period period74 = days66.toPeriod();
        org.joda.time.Days days75 = days37.plus(days66);
        org.joda.time.ReadableInterval readableInterval76 = null;
        org.joda.time.Days days77 = org.joda.time.Days.daysIn(readableInterval76);
        int int79 = days77.getValue((int) (short) 0);
        org.joda.time.Period period80 = days77.toPeriod();
        org.joda.time.Days days81 = org.joda.time.Days.standardDaysIn((org.joda.time.ReadablePeriod) days77);
        boolean boolean82 = days37.equals((java.lang.Object) days81);
        boolean boolean83 = days35.isLessThan(days37);
        org.joda.time.PeriodType periodType84 = days37.getPeriodType();
        org.junit.Assert.assertNotNull(days1);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(days4);
        org.junit.Assert.assertNotNull(days5);
        org.junit.Assert.assertNotNull(days7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(days12);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNotNull(days15);
        org.junit.Assert.assertNotNull(days16);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(days25);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertNotNull(days28);
        org.junit.Assert.assertNotNull(days29);
        org.junit.Assert.assertNotNull(days31);
        org.junit.Assert.assertNotNull(days33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 1 + "'", int34 == 1);
        org.junit.Assert.assertNotNull(days35);
        org.junit.Assert.assertNotNull(days37);
        org.junit.Assert.assertNotNull(days39);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0);
        org.junit.Assert.assertNotNull(days42);
        org.junit.Assert.assertNotNull(days43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(durationFieldType47);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 0 + "'", int48 == 0);
        org.junit.Assert.assertNotNull(days50);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 0 + "'", int52 == 0);
        org.junit.Assert.assertNotNull(days53);
        org.junit.Assert.assertNotNull(days54);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 0 + "'", int56 == 0);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 0 + "'", int58 == 0);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(days63);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 0 + "'", int65 == 0);
        org.junit.Assert.assertNotNull(days66);
        org.junit.Assert.assertNotNull(days67);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 0 + "'", int69 == 0);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 0 + "'", int71 == 0);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(period74);
        org.junit.Assert.assertNotNull(days75);
        org.junit.Assert.assertNotNull(days77);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + 0 + "'", int79 == 0);
        org.junit.Assert.assertNotNull(period80);
        org.junit.Assert.assertNotNull(days81);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertNotNull(periodType84);
    }

    @Test
    public void test0247() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0247");
        org.joda.time.Days days0 = org.joda.time.Days.ZERO;
        org.joda.time.ReadableInterval readableInterval1 = null;
        org.joda.time.Days days2 = org.joda.time.Days.daysIn(readableInterval1);
        int int4 = days2.getValue((int) (short) 0);
        org.joda.time.Days days5 = org.joda.time.Days.FIVE;
        org.joda.time.Days days6 = days2.minus(days5);
        org.joda.time.Days days7 = null;
        org.joda.time.Days days8 = days2.minus(days7);
        org.joda.time.Duration duration9 = days2.toStandardDuration();
        org.joda.time.DurationFieldType durationFieldType10 = days2.getFieldType();
        org.joda.time.Days days11 = days0.minus(days2);
        org.joda.time.ReadableInterval readableInterval12 = null;
        org.joda.time.Days days13 = org.joda.time.Days.daysIn(readableInterval12);
        org.joda.time.Days days15 = days13.plus((int) (byte) 10);
        org.joda.time.MutablePeriod mutablePeriod16 = days13.toMutablePeriod();
        org.joda.time.Days days17 = days2.plus(days13);
        java.lang.String str18 = days2.toString();
        java.lang.Class<?> wildcardClass19 = days2.getClass();
        org.junit.Assert.assertNotNull(days0);
        org.junit.Assert.assertNotNull(days2);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(days5);
        org.junit.Assert.assertNotNull(days6);
        org.junit.Assert.assertNotNull(days8);
        org.junit.Assert.assertNotNull(duration9);
        org.junit.Assert.assertNotNull(durationFieldType10);
        org.junit.Assert.assertNotNull(days11);
        org.junit.Assert.assertNotNull(days13);
        org.junit.Assert.assertNotNull(days15);
        org.junit.Assert.assertNotNull(mutablePeriod16);
        org.junit.Assert.assertNotNull(days17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "P0D" + "'", str18, "P0D");
        org.junit.Assert.assertNotNull(wildcardClass19);
    }

    @Test
    public void test0248() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0248");
        org.joda.time.Days days0 = org.joda.time.Days.SIX;
        org.joda.time.Days days2 = days0.plus(100);
        org.joda.time.ReadableInterval readableInterval3 = null;
        org.joda.time.Days days4 = org.joda.time.Days.daysIn(readableInterval3);
        int int6 = days4.getValue((int) (short) 0);
        org.joda.time.Days days7 = org.joda.time.Days.FIVE;
        org.joda.time.Days days8 = days4.minus(days7);
        org.joda.time.Days days9 = null;
        org.joda.time.Days days10 = days4.minus(days9);
        org.joda.time.Days days12 = days4.minus((-1));
        org.joda.time.DurationFieldType durationFieldType13 = days4.getFieldType();
        int int14 = days0.get(durationFieldType13);
        org.joda.time.Days days15 = days0.negated();
        org.joda.time.ReadableInterval readableInterval16 = null;
        org.joda.time.Days days17 = org.joda.time.Days.daysIn(readableInterval16);
        int int19 = days17.getValue((int) (short) 0);
        org.joda.time.Days days20 = org.joda.time.Days.FIVE;
        org.joda.time.Days days21 = days17.minus(days20);
        org.joda.time.ReadableInterval readableInterval22 = null;
        org.joda.time.Days days23 = org.joda.time.Days.daysIn(readableInterval22);
        int int25 = days23.getValue((int) (short) 0);
        int int26 = days17.compareTo((org.joda.time.base.BaseSingleFieldPeriod) days23);
        org.joda.time.ReadableInterval readableInterval27 = null;
        org.joda.time.Days days28 = org.joda.time.Days.daysIn(readableInterval27);
        int int30 = days28.getValue((int) (short) 0);
        org.joda.time.Days days31 = org.joda.time.Days.FIVE;
        org.joda.time.Days days32 = days28.minus(days31);
        org.joda.time.DurationFieldType durationFieldType33 = null;
        int int34 = days31.get(durationFieldType33);
        org.joda.time.DurationFieldType durationFieldType35 = null;
        int int36 = days31.get(durationFieldType35);
        boolean boolean38 = days31.equals((java.lang.Object) false);
        boolean boolean39 = days23.equals((java.lang.Object) days31);
        boolean boolean40 = days15.isGreaterThan(days31);
        org.joda.time.ReadableInterval readableInterval41 = null;
        org.joda.time.Days days42 = org.joda.time.Days.daysIn(readableInterval41);
        int int44 = days42.getValue((int) (short) 0);
        org.joda.time.ReadableInterval readableInterval45 = null;
        org.joda.time.Days days46 = org.joda.time.Days.daysIn(readableInterval45);
        int int48 = days46.getValue((int) (short) 0);
        org.joda.time.Days days49 = org.joda.time.Days.FIVE;
        org.joda.time.Days days50 = days46.minus(days49);
        int int51 = days42.compareTo((org.joda.time.base.BaseSingleFieldPeriod) days49);
        java.lang.String str52 = days42.toString();
        org.joda.time.Days days54 = days42.plus((int) '4');
        org.joda.time.ReadableInterval readableInterval55 = null;
        org.joda.time.Days days56 = org.joda.time.Days.daysIn(readableInterval55);
        int int58 = days56.getValue((int) (short) 0);
        org.joda.time.Days days59 = org.joda.time.Days.FIVE;
        org.joda.time.Days days60 = days56.minus(days59);
        org.joda.time.DurationFieldType durationFieldType61 = null;
        boolean boolean62 = days59.isSupported(durationFieldType61);
        org.joda.time.DurationFieldType durationFieldType64 = days59.getFieldType(0);
        org.joda.time.ReadableInterval readableInterval65 = null;
        org.joda.time.Days days66 = org.joda.time.Days.daysIn(readableInterval65);
        int int68 = days66.getValue((int) (short) 0);
        org.joda.time.Days days69 = org.joda.time.Days.FIVE;
        org.joda.time.Days days70 = days66.minus(days69);
        org.joda.time.Days days71 = null;
        org.joda.time.Days days72 = days66.minus(days71);
        org.joda.time.Days days74 = days66.minus((-1));
        org.joda.time.DurationFieldType durationFieldType75 = days66.getFieldType();
        boolean boolean76 = days59.isGreaterThan(days66);
        org.joda.time.ReadableInterval readableInterval77 = null;
        org.joda.time.Days days78 = org.joda.time.Days.daysIn(readableInterval77);
        org.joda.time.Days days80 = days78.plus((int) (byte) 10);
        org.joda.time.Days days81 = days66.plus(days80);
        org.joda.time.ReadableInterval readableInterval82 = null;
        org.joda.time.Days days83 = org.joda.time.Days.daysIn(readableInterval82);
        int int85 = days83.getValue((int) (short) 0);
        org.joda.time.Days days86 = org.joda.time.Days.FIVE;
        org.joda.time.Days days87 = days83.minus(days86);
        org.joda.time.Days days88 = null;
        org.joda.time.Days days89 = days83.minus(days88);
        org.joda.time.Duration duration90 = days83.toStandardDuration();
        org.joda.time.Days days91 = days81.minus(days83);
        org.joda.time.Duration duration92 = days91.toStandardDuration();
        org.joda.time.PeriodType periodType93 = days91.getPeriodType();
        org.joda.time.Days days94 = days54.plus(days91);
        int int95 = days15.compareTo((org.joda.time.base.BaseSingleFieldPeriod) days94);
        org.joda.time.Days days96 = null;
        boolean boolean97 = days94.isGreaterThan(days96);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.DurationFieldType durationFieldType99 = days94.getFieldType((int) (byte) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 1");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(days0);
        org.junit.Assert.assertNotNull(days2);
        org.junit.Assert.assertNotNull(days4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNotNull(days7);
        org.junit.Assert.assertNotNull(days8);
        org.junit.Assert.assertNotNull(days10);
        org.junit.Assert.assertNotNull(days12);
        org.junit.Assert.assertNotNull(durationFieldType13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 6 + "'", int14 == 6);
        org.junit.Assert.assertNotNull(days15);
        org.junit.Assert.assertNotNull(days17);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertNotNull(days20);
        org.junit.Assert.assertNotNull(days21);
        org.junit.Assert.assertNotNull(days23);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertNotNull(days28);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertNotNull(days31);
        org.junit.Assert.assertNotNull(days32);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(days42);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 0 + "'", int44 == 0);
        org.junit.Assert.assertNotNull(days46);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 0 + "'", int48 == 0);
        org.junit.Assert.assertNotNull(days49);
        org.junit.Assert.assertNotNull(days50);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + (-1) + "'", int51 == (-1));
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "P0D" + "'", str52, "P0D");
        org.junit.Assert.assertNotNull(days54);
        org.junit.Assert.assertNotNull(days56);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 0 + "'", int58 == 0);
        org.junit.Assert.assertNotNull(days59);
        org.junit.Assert.assertNotNull(days60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(durationFieldType64);
        org.junit.Assert.assertNotNull(days66);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 0 + "'", int68 == 0);
        org.junit.Assert.assertNotNull(days69);
        org.junit.Assert.assertNotNull(days70);
        org.junit.Assert.assertNotNull(days72);
        org.junit.Assert.assertNotNull(days74);
        org.junit.Assert.assertNotNull(durationFieldType75);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertNotNull(days78);
        org.junit.Assert.assertNotNull(days80);
        org.junit.Assert.assertNotNull(days81);
        org.junit.Assert.assertNotNull(days83);
        org.junit.Assert.assertTrue("'" + int85 + "' != '" + 0 + "'", int85 == 0);
        org.junit.Assert.assertNotNull(days86);
        org.junit.Assert.assertNotNull(days87);
        org.junit.Assert.assertNotNull(days89);
        org.junit.Assert.assertNotNull(duration90);
        org.junit.Assert.assertNotNull(days91);
        org.junit.Assert.assertNotNull(duration92);
        org.junit.Assert.assertNotNull(periodType93);
        org.junit.Assert.assertNotNull(days94);
        org.junit.Assert.assertTrue("'" + int95 + "' != '" + (-1) + "'", int95 == (-1));
        org.junit.Assert.assertTrue("'" + boolean97 + "' != '" + true + "'", boolean97 == true);
    }

    @Test
    public void test0249() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0249");
        org.joda.time.Days days0 = org.joda.time.Days.SIX;
        org.joda.time.Days days2 = days0.plus(100);
        org.joda.time.ReadableInterval readableInterval3 = null;
        org.joda.time.Days days4 = org.joda.time.Days.daysIn(readableInterval3);
        int int6 = days4.getValue((int) (short) 0);
        org.joda.time.Days days7 = org.joda.time.Days.FIVE;
        org.joda.time.Days days8 = days4.minus(days7);
        org.joda.time.Days days9 = null;
        org.joda.time.Days days10 = days4.minus(days9);
        org.joda.time.Days days12 = days4.minus((-1));
        org.joda.time.DurationFieldType durationFieldType13 = days4.getFieldType();
        int int14 = days0.get(durationFieldType13);
        org.joda.time.Days days15 = org.joda.time.Days.SEVEN;
        org.joda.time.Days days17 = days15.plus(1);
        java.lang.String str18 = days15.toString();
        org.joda.time.ReadableInterval readableInterval19 = null;
        org.joda.time.Days days20 = org.joda.time.Days.daysIn(readableInterval19);
        org.joda.time.ReadableInterval readableInterval21 = null;
        org.joda.time.Days days22 = org.joda.time.Days.daysIn(readableInterval21);
        int int24 = days22.getValue((int) (short) 0);
        org.joda.time.Days days25 = org.joda.time.Days.FIVE;
        org.joda.time.Days days26 = days22.minus(days25);
        org.joda.time.DurationFieldType durationFieldType27 = null;
        boolean boolean28 = days25.isSupported(durationFieldType27);
        org.joda.time.DurationFieldType durationFieldType30 = days25.getFieldType(0);
        int int31 = days20.get(durationFieldType30);
        org.joda.time.ReadableInterval readableInterval32 = null;
        org.joda.time.Days days33 = org.joda.time.Days.daysIn(readableInterval32);
        int int35 = days33.getValue((int) (short) 0);
        org.joda.time.Days days36 = org.joda.time.Days.FIVE;
        org.joda.time.Days days37 = days33.minus(days36);
        org.joda.time.DurationFieldType durationFieldType38 = null;
        int int39 = days36.get(durationFieldType38);
        org.joda.time.DurationFieldType durationFieldType40 = null;
        int int41 = days36.get(durationFieldType40);
        boolean boolean43 = days36.equals((java.lang.Object) 0L);
        boolean boolean44 = days20.isGreaterThan(days36);
        org.joda.time.ReadableInterval readableInterval45 = null;
        org.joda.time.Days days46 = org.joda.time.Days.daysIn(readableInterval45);
        int int48 = days46.getValue((int) (short) 0);
        org.joda.time.Days days49 = org.joda.time.Days.FIVE;
        org.joda.time.Days days50 = days46.minus(days49);
        org.joda.time.DurationFieldType durationFieldType51 = null;
        int int52 = days49.get(durationFieldType51);
        org.joda.time.DurationFieldType durationFieldType53 = null;
        int int54 = days49.get(durationFieldType53);
        boolean boolean56 = days49.equals((java.lang.Object) 0L);
        org.joda.time.Period period57 = days49.toPeriod();
        org.joda.time.Days days58 = days20.plus(days49);
        org.joda.time.ReadableInterval readableInterval59 = null;
        org.joda.time.Days days60 = org.joda.time.Days.daysIn(readableInterval59);
        int int62 = days60.getValue((int) (short) 0);
        org.joda.time.Days days63 = org.joda.time.Days.FIVE;
        org.joda.time.Days days64 = days60.minus(days63);
        org.joda.time.DurationFieldType durationFieldType65 = null;
        int int66 = days63.get(durationFieldType65);
        boolean boolean67 = days58.isGreaterThan(days63);
        boolean boolean68 = days15.equals((java.lang.Object) days58);
        boolean boolean69 = days0.isGreaterThan(days58);
        org.junit.Assert.assertNotNull(days0);
        org.junit.Assert.assertNotNull(days2);
        org.junit.Assert.assertNotNull(days4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNotNull(days7);
        org.junit.Assert.assertNotNull(days8);
        org.junit.Assert.assertNotNull(days10);
        org.junit.Assert.assertNotNull(days12);
        org.junit.Assert.assertNotNull(durationFieldType13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 6 + "'", int14 == 6);
        org.junit.Assert.assertNotNull(days15);
        org.junit.Assert.assertNotNull(days17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "P7D" + "'", str18, "P7D");
        org.junit.Assert.assertNotNull(days20);
        org.junit.Assert.assertNotNull(days22);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertNotNull(days25);
        org.junit.Assert.assertNotNull(days26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(durationFieldType30);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertNotNull(days33);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertNotNull(days36);
        org.junit.Assert.assertNotNull(days37);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(days46);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 0 + "'", int48 == 0);
        org.junit.Assert.assertNotNull(days49);
        org.junit.Assert.assertNotNull(days50);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 0 + "'", int52 == 0);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 0 + "'", int54 == 0);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(period57);
        org.junit.Assert.assertNotNull(days58);
        org.junit.Assert.assertNotNull(days60);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 0 + "'", int62 == 0);
        org.junit.Assert.assertNotNull(days63);
        org.junit.Assert.assertNotNull(days64);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 0 + "'", int66 == 0);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
    }

    @Test
    public void test0250() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0250");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Days days1 = org.joda.time.Days.daysIn(readableInterval0);
        int int3 = days1.getValue((int) (short) 0);
        org.joda.time.Days days4 = org.joda.time.Days.FIVE;
        org.joda.time.Days days5 = days1.minus(days4);
        org.joda.time.DurationFieldType durationFieldType6 = null;
        int int7 = days4.get(durationFieldType6);
        org.joda.time.DurationFieldType durationFieldType8 = null;
        int int9 = days4.get(durationFieldType8);
        boolean boolean11 = days4.equals((java.lang.Object) 0L);
        org.joda.time.Period period12 = days4.toPeriod();
        java.lang.Class<?> wildcardClass13 = period12.getClass();
        org.junit.Assert.assertNotNull(days1);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(days4);
        org.junit.Assert.assertNotNull(days5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(period12);
        org.junit.Assert.assertNotNull(wildcardClass13);
    }

    @Test
    public void test0251() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0251");
        org.joda.time.Days days0 = org.joda.time.Days.MAX_VALUE;
        org.joda.time.Days days1 = days0.negated();
        org.joda.time.PeriodType periodType2 = days0.getPeriodType();
        org.joda.time.ReadableInterval readableInterval3 = null;
        org.joda.time.Days days4 = org.joda.time.Days.daysIn(readableInterval3);
        int int6 = days4.getValue((int) (short) 0);
        org.joda.time.Days days7 = org.joda.time.Days.FIVE;
        org.joda.time.Days days8 = days4.minus(days7);
        org.joda.time.DurationFieldType durationFieldType9 = null;
        int int10 = days7.get(durationFieldType9);
        org.joda.time.Days days12 = days7.dividedBy(100);
        int int13 = days0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) days7);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.DurationFieldType durationFieldType15 = days7.getFieldType(10);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 10");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(days0);
        org.junit.Assert.assertNotNull(days1);
        org.junit.Assert.assertNotNull(periodType2);
        org.junit.Assert.assertNotNull(days4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNotNull(days7);
        org.junit.Assert.assertNotNull(days8);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(days12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
    }

    @Test
    public void test0252() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0252");
        org.joda.time.Days days0 = org.joda.time.Days.MAX_VALUE;
        org.joda.time.Days days1 = days0.negated();
        org.joda.time.PeriodType periodType2 = days0.getPeriodType();
        org.joda.time.ReadableInterval readableInterval3 = null;
        org.joda.time.Days days4 = org.joda.time.Days.daysIn(readableInterval3);
        int int6 = days4.getValue((int) (short) 0);
        org.joda.time.Days days7 = org.joda.time.Days.FIVE;
        org.joda.time.Days days8 = days4.minus(days7);
        org.joda.time.DurationFieldType durationFieldType9 = null;
        int int10 = days7.get(durationFieldType9);
        org.joda.time.Days days12 = days7.dividedBy(100);
        int int13 = days0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) days7);
        org.joda.time.MutablePeriod mutablePeriod14 = days0.toMutablePeriod();
        org.joda.time.Days days15 = days0.negated();
        java.lang.String str16 = days15.toString();
        org.junit.Assert.assertNotNull(days0);
        org.junit.Assert.assertNotNull(days1);
        org.junit.Assert.assertNotNull(periodType2);
        org.junit.Assert.assertNotNull(days4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNotNull(days7);
        org.junit.Assert.assertNotNull(days8);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(days12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertNotNull(mutablePeriod14);
        org.junit.Assert.assertNotNull(days15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "P-2147483647D" + "'", str16, "P-2147483647D");
    }

    @Test
    public void test0253() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0253");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Days days1 = org.joda.time.Days.daysIn(readableInterval0);
        org.joda.time.Days days3 = days1.plus((int) (byte) 10);
        org.joda.time.Days days5 = days3.dividedBy((int) 'a');
        org.joda.time.Days days7 = days3.dividedBy(5);
        org.joda.time.Days days9 = days3.plus((int) (byte) -1);
        org.joda.time.Days days11 = days3.minus((int) (byte) 100);
        org.joda.time.Days days12 = days11.negated();
        org.joda.time.DurationFieldType durationFieldType13 = days12.getFieldType();
        org.junit.Assert.assertNotNull(days1);
        org.junit.Assert.assertNotNull(days3);
        org.junit.Assert.assertNotNull(days5);
        org.junit.Assert.assertNotNull(days7);
        org.junit.Assert.assertNotNull(days9);
        org.junit.Assert.assertNotNull(days11);
        org.junit.Assert.assertNotNull(days12);
        org.junit.Assert.assertNotNull(durationFieldType13);
    }

    @Test
    public void test0254() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0254");
        org.joda.time.Days days1 = org.joda.time.Days.days(1);
        org.joda.time.ReadableInterval readableInterval2 = null;
        org.joda.time.Days days3 = org.joda.time.Days.daysIn(readableInterval2);
        int int5 = days3.getValue((int) (short) 0);
        org.joda.time.Days days6 = org.joda.time.Days.FIVE;
        org.joda.time.Days days7 = days3.minus(days6);
        org.joda.time.DurationFieldType durationFieldType8 = null;
        boolean boolean9 = days6.isSupported(durationFieldType8);
        org.joda.time.DurationFieldType durationFieldType11 = days6.getFieldType(0);
        org.joda.time.ReadableInterval readableInterval12 = null;
        org.joda.time.Days days13 = org.joda.time.Days.daysIn(readableInterval12);
        int int15 = days13.getValue((int) (short) 0);
        org.joda.time.Days days16 = org.joda.time.Days.FIVE;
        org.joda.time.Days days17 = days13.minus(days16);
        org.joda.time.Days days18 = null;
        org.joda.time.Days days19 = days13.minus(days18);
        org.joda.time.Days days21 = days13.minus((-1));
        org.joda.time.DurationFieldType durationFieldType22 = days13.getFieldType();
        boolean boolean23 = days6.isGreaterThan(days13);
        org.joda.time.ReadableInterval readableInterval24 = null;
        org.joda.time.Days days25 = org.joda.time.Days.daysIn(readableInterval24);
        org.joda.time.Days days27 = days25.plus((int) (byte) 10);
        org.joda.time.Days days28 = days13.plus(days27);
        org.joda.time.MutablePeriod mutablePeriod29 = days27.toMutablePeriod();
        org.joda.time.PeriodType periodType30 = days27.getPeriodType();
        org.joda.time.Days days31 = days1.minus(days27);
        org.joda.time.Period period32 = days31.toPeriod();
        int int33 = days31.getDays();
        org.junit.Assert.assertNotNull(days1);
        org.junit.Assert.assertNotNull(days3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(days6);
        org.junit.Assert.assertNotNull(days7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(durationFieldType11);
        org.junit.Assert.assertNotNull(days13);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNotNull(days16);
        org.junit.Assert.assertNotNull(days17);
        org.junit.Assert.assertNotNull(days19);
        org.junit.Assert.assertNotNull(days21);
        org.junit.Assert.assertNotNull(durationFieldType22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(days25);
        org.junit.Assert.assertNotNull(days27);
        org.junit.Assert.assertNotNull(days28);
        org.junit.Assert.assertNotNull(mutablePeriod29);
        org.junit.Assert.assertNotNull(periodType30);
        org.junit.Assert.assertNotNull(days31);
        org.junit.Assert.assertNotNull(period32);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + (-9) + "'", int33 == (-9));
    }

    @Test
    public void test0255() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0255");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Days days1 = org.joda.time.Days.daysIn(readableInterval0);
        int int3 = days1.getValue((int) (short) 0);
        org.joda.time.Days days4 = org.joda.time.Days.FIVE;
        org.joda.time.Days days5 = days1.minus(days4);
        org.joda.time.DurationFieldType durationFieldType6 = null;
        boolean boolean7 = days4.isSupported(durationFieldType6);
        org.joda.time.DurationFieldType durationFieldType9 = days4.getFieldType(0);
        org.joda.time.Period period10 = days4.toPeriod();
        int int12 = days4.getValue(0);
        org.joda.time.Days days13 = org.joda.time.Days.TWO;
        org.joda.time.DurationFieldType durationFieldType14 = days13.getFieldType();
        int int15 = days4.get(durationFieldType14);
        org.joda.time.Days days17 = days4.minus((int) (short) -1);
        org.joda.time.Period period18 = days4.toPeriod();
        java.lang.Class<?> wildcardClass19 = days4.getClass();
        org.junit.Assert.assertNotNull(days1);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(days4);
        org.junit.Assert.assertNotNull(days5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(durationFieldType9);
        org.junit.Assert.assertNotNull(period10);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 5 + "'", int12 == 5);
        org.junit.Assert.assertNotNull(days13);
        org.junit.Assert.assertNotNull(durationFieldType14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 5 + "'", int15 == 5);
        org.junit.Assert.assertNotNull(days17);
        org.junit.Assert.assertNotNull(period18);
        org.junit.Assert.assertNotNull(wildcardClass19);
    }

    @Test
    public void test0256() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0256");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Days days1 = org.joda.time.Days.daysIn(readableInterval0);
        int int3 = days1.getValue((int) (short) 0);
        org.joda.time.Days days4 = org.joda.time.Days.FIVE;
        org.joda.time.Days days5 = days1.minus(days4);
        org.joda.time.DurationFieldType durationFieldType6 = null;
        boolean boolean7 = days4.isSupported(durationFieldType6);
        org.joda.time.DurationFieldType durationFieldType9 = days4.getFieldType(0);
        org.joda.time.ReadableInterval readableInterval10 = null;
        org.joda.time.Days days11 = org.joda.time.Days.daysIn(readableInterval10);
        int int13 = days11.getValue((int) (short) 0);
        org.joda.time.Days days14 = org.joda.time.Days.FIVE;
        org.joda.time.Days days15 = days11.minus(days14);
        org.joda.time.Days days16 = null;
        org.joda.time.Days days17 = days11.minus(days16);
        org.joda.time.Days days19 = days11.minus((-1));
        org.joda.time.DurationFieldType durationFieldType20 = days11.getFieldType();
        boolean boolean21 = days4.isGreaterThan(days11);
        org.joda.time.ReadableInterval readableInterval22 = null;
        org.joda.time.Days days23 = org.joda.time.Days.daysIn(readableInterval22);
        org.joda.time.Days days25 = days23.plus((int) (byte) 10);
        org.joda.time.Days days26 = days11.plus(days25);
        org.joda.time.Days days27 = org.joda.time.Days.standardDaysIn((org.joda.time.ReadablePeriod) days11);
        org.joda.time.Days days28 = org.joda.time.Days.THREE;
        org.joda.time.ReadableInterval readableInterval29 = null;
        org.joda.time.Days days30 = org.joda.time.Days.daysIn(readableInterval29);
        org.joda.time.ReadableInterval readableInterval31 = null;
        org.joda.time.Days days32 = org.joda.time.Days.daysIn(readableInterval31);
        int int34 = days32.getValue((int) (short) 0);
        org.joda.time.Days days35 = org.joda.time.Days.FIVE;
        org.joda.time.Days days36 = days32.minus(days35);
        org.joda.time.DurationFieldType durationFieldType37 = null;
        boolean boolean38 = days35.isSupported(durationFieldType37);
        org.joda.time.DurationFieldType durationFieldType40 = days35.getFieldType(0);
        int int41 = days30.get(durationFieldType40);
        org.joda.time.ReadableInterval readableInterval42 = null;
        org.joda.time.Days days43 = org.joda.time.Days.daysIn(readableInterval42);
        int int45 = days43.getValue((int) (short) 0);
        org.joda.time.Days days46 = org.joda.time.Days.FIVE;
        org.joda.time.Days days47 = days43.minus(days46);
        org.joda.time.DurationFieldType durationFieldType48 = null;
        int int49 = days46.get(durationFieldType48);
        org.joda.time.DurationFieldType durationFieldType50 = null;
        int int51 = days46.get(durationFieldType50);
        boolean boolean53 = days46.equals((java.lang.Object) 0L);
        boolean boolean54 = days30.isGreaterThan(days46);
        org.joda.time.ReadableInterval readableInterval55 = null;
        org.joda.time.Days days56 = org.joda.time.Days.daysIn(readableInterval55);
        int int58 = days56.getValue((int) (short) 0);
        org.joda.time.Days days59 = org.joda.time.Days.FIVE;
        org.joda.time.Days days60 = days56.minus(days59);
        org.joda.time.DurationFieldType durationFieldType61 = null;
        int int62 = days59.get(durationFieldType61);
        org.joda.time.DurationFieldType durationFieldType63 = null;
        int int64 = days59.get(durationFieldType63);
        boolean boolean66 = days59.equals((java.lang.Object) 0L);
        org.joda.time.Period period67 = days59.toPeriod();
        org.joda.time.Days days68 = days30.plus(days59);
        boolean boolean69 = days28.isGreaterThan(days68);
        org.joda.time.ReadableInterval readableInterval70 = null;
        org.joda.time.Days days71 = org.joda.time.Days.daysIn(readableInterval70);
        int int73 = days71.getValue((int) (short) 0);
        org.joda.time.Days days74 = org.joda.time.Days.FIVE;
        org.joda.time.Days days75 = days71.minus(days74);
        org.joda.time.Days days76 = null;
        org.joda.time.Days days77 = days71.minus(days76);
        boolean boolean78 = days28.equals((java.lang.Object) days77);
        org.joda.time.Days days79 = days28.negated();
        int int80 = days28.size();
        boolean boolean81 = days27.isLessThan(days28);
        org.junit.Assert.assertNotNull(days1);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(days4);
        org.junit.Assert.assertNotNull(days5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(durationFieldType9);
        org.junit.Assert.assertNotNull(days11);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(days14);
        org.junit.Assert.assertNotNull(days15);
        org.junit.Assert.assertNotNull(days17);
        org.junit.Assert.assertNotNull(days19);
        org.junit.Assert.assertNotNull(durationFieldType20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(days23);
        org.junit.Assert.assertNotNull(days25);
        org.junit.Assert.assertNotNull(days26);
        org.junit.Assert.assertNotNull(days27);
        org.junit.Assert.assertNotNull(days28);
        org.junit.Assert.assertNotNull(days30);
        org.junit.Assert.assertNotNull(days32);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertNotNull(days35);
        org.junit.Assert.assertNotNull(days36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(durationFieldType40);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0);
        org.junit.Assert.assertNotNull(days43);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 0 + "'", int45 == 0);
        org.junit.Assert.assertNotNull(days46);
        org.junit.Assert.assertNotNull(days47);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 0 + "'", int49 == 0);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 0 + "'", int51 == 0);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(days56);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 0 + "'", int58 == 0);
        org.junit.Assert.assertNotNull(days59);
        org.junit.Assert.assertNotNull(days60);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 0 + "'", int62 == 0);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 0 + "'", int64 == 0);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(period67);
        org.junit.Assert.assertNotNull(days68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(days71);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 0 + "'", int73 == 0);
        org.junit.Assert.assertNotNull(days74);
        org.junit.Assert.assertNotNull(days75);
        org.junit.Assert.assertNotNull(days77);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertNotNull(days79);
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + 1 + "'", int80 == 1);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
    }

    @Test
    public void test0257() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0257");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Days days1 = org.joda.time.Days.daysIn(readableInterval0);
        int int3 = days1.getValue((int) (short) 0);
        org.joda.time.Days days4 = org.joda.time.Days.FIVE;
        org.joda.time.Days days5 = days1.minus(days4);
        org.joda.time.DurationFieldType durationFieldType6 = null;
        boolean boolean7 = days4.isSupported(durationFieldType6);
        org.joda.time.DurationFieldType durationFieldType9 = days4.getFieldType(0);
        org.joda.time.ReadableInterval readableInterval10 = null;
        org.joda.time.Days days11 = org.joda.time.Days.daysIn(readableInterval10);
        int int13 = days11.getValue((int) (short) 0);
        org.joda.time.Days days14 = org.joda.time.Days.FIVE;
        org.joda.time.Days days15 = days11.minus(days14);
        org.joda.time.Days days16 = null;
        org.joda.time.Days days17 = days11.minus(days16);
        org.joda.time.Days days19 = days11.minus((-1));
        org.joda.time.DurationFieldType durationFieldType20 = days11.getFieldType();
        boolean boolean21 = days4.isGreaterThan(days11);
        org.joda.time.Days days22 = org.joda.time.Days.THREE;
        org.joda.time.ReadableInterval readableInterval23 = null;
        org.joda.time.Days days24 = org.joda.time.Days.daysIn(readableInterval23);
        org.joda.time.ReadableInterval readableInterval25 = null;
        org.joda.time.Days days26 = org.joda.time.Days.daysIn(readableInterval25);
        int int28 = days26.getValue((int) (short) 0);
        org.joda.time.Days days29 = org.joda.time.Days.FIVE;
        org.joda.time.Days days30 = days26.minus(days29);
        org.joda.time.DurationFieldType durationFieldType31 = null;
        boolean boolean32 = days29.isSupported(durationFieldType31);
        org.joda.time.DurationFieldType durationFieldType34 = days29.getFieldType(0);
        int int35 = days24.get(durationFieldType34);
        org.joda.time.ReadableInterval readableInterval36 = null;
        org.joda.time.Days days37 = org.joda.time.Days.daysIn(readableInterval36);
        int int39 = days37.getValue((int) (short) 0);
        org.joda.time.ReadableInterval readableInterval40 = null;
        org.joda.time.Days days41 = org.joda.time.Days.daysIn(readableInterval40);
        int int43 = days41.getValue((int) (short) 0);
        org.joda.time.Days days44 = org.joda.time.Days.FIVE;
        org.joda.time.Days days45 = days41.minus(days44);
        int int46 = days37.compareTo((org.joda.time.base.BaseSingleFieldPeriod) days44);
        java.lang.String str47 = days37.toString();
        org.joda.time.Days days48 = null;
        boolean boolean49 = days37.isGreaterThan(days48);
        org.joda.time.Period period50 = days37.toPeriod();
        org.joda.time.Days days51 = days24.plus(days37);
        boolean boolean52 = days22.isLessThan(days37);
        org.joda.time.Days days53 = days4.minus(days22);
        java.lang.String str54 = days22.toString();
        org.junit.Assert.assertNotNull(days1);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(days4);
        org.junit.Assert.assertNotNull(days5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(durationFieldType9);
        org.junit.Assert.assertNotNull(days11);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(days14);
        org.junit.Assert.assertNotNull(days15);
        org.junit.Assert.assertNotNull(days17);
        org.junit.Assert.assertNotNull(days19);
        org.junit.Assert.assertNotNull(durationFieldType20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(days22);
        org.junit.Assert.assertNotNull(days24);
        org.junit.Assert.assertNotNull(days26);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertNotNull(days29);
        org.junit.Assert.assertNotNull(days30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(durationFieldType34);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertNotNull(days37);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertNotNull(days41);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0);
        org.junit.Assert.assertNotNull(days44);
        org.junit.Assert.assertNotNull(days45);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + (-1) + "'", int46 == (-1));
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "P0D" + "'", str47, "P0D");
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(period50);
        org.junit.Assert.assertNotNull(days51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(days53);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "P3D" + "'", str54, "P3D");
    }

    @Test
    public void test0258() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0258");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Days days1 = org.joda.time.Days.daysIn(readableInterval0);
        int int3 = days1.getValue((int) (short) 0);
        org.joda.time.Days days4 = org.joda.time.Days.FIVE;
        org.joda.time.Days days5 = days1.minus(days4);
        org.joda.time.DurationFieldType durationFieldType6 = null;
        boolean boolean7 = days4.isSupported(durationFieldType6);
        org.joda.time.DurationFieldType durationFieldType9 = days4.getFieldType(0);
        org.joda.time.Period period10 = days4.toPeriod();
        int int12 = days4.getValue(0);
        int int13 = days4.getDays();
        org.joda.time.Days days15 = days4.multipliedBy(10);
        // The following exception was thrown during execution in test generation
        try {
            int int17 = days4.getValue(51);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 51");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(days1);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(days4);
        org.junit.Assert.assertNotNull(days5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(durationFieldType9);
        org.junit.Assert.assertNotNull(period10);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 5 + "'", int12 == 5);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 5 + "'", int13 == 5);
        org.junit.Assert.assertNotNull(days15);
    }

    @Test
    public void test0259() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0259");
        org.joda.time.Days days1 = org.joda.time.Days.days(1);
        org.joda.time.ReadableInterval readableInterval2 = null;
        org.joda.time.Days days3 = org.joda.time.Days.daysIn(readableInterval2);
        int int5 = days3.getValue((int) (short) 0);
        org.joda.time.Days days6 = org.joda.time.Days.FIVE;
        org.joda.time.Days days7 = days3.minus(days6);
        org.joda.time.DurationFieldType durationFieldType8 = null;
        boolean boolean9 = days6.isSupported(durationFieldType8);
        org.joda.time.DurationFieldType durationFieldType11 = days6.getFieldType(0);
        org.joda.time.ReadableInterval readableInterval12 = null;
        org.joda.time.Days days13 = org.joda.time.Days.daysIn(readableInterval12);
        int int15 = days13.getValue((int) (short) 0);
        org.joda.time.Days days16 = org.joda.time.Days.FIVE;
        org.joda.time.Days days17 = days13.minus(days16);
        org.joda.time.Days days18 = null;
        org.joda.time.Days days19 = days13.minus(days18);
        org.joda.time.Days days21 = days13.minus((-1));
        org.joda.time.DurationFieldType durationFieldType22 = days13.getFieldType();
        boolean boolean23 = days6.isGreaterThan(days13);
        org.joda.time.ReadableInterval readableInterval24 = null;
        org.joda.time.Days days25 = org.joda.time.Days.daysIn(readableInterval24);
        org.joda.time.Days days27 = days25.plus((int) (byte) 10);
        org.joda.time.Days days28 = days13.plus(days27);
        org.joda.time.MutablePeriod mutablePeriod29 = days27.toMutablePeriod();
        org.joda.time.PeriodType periodType30 = days27.getPeriodType();
        org.joda.time.Days days31 = days1.minus(days27);
        org.joda.time.Days days33 = days1.minus((int) (byte) 10);
        org.joda.time.Days days35 = days33.dividedBy(6);
        org.junit.Assert.assertNotNull(days1);
        org.junit.Assert.assertNotNull(days3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(days6);
        org.junit.Assert.assertNotNull(days7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(durationFieldType11);
        org.junit.Assert.assertNotNull(days13);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNotNull(days16);
        org.junit.Assert.assertNotNull(days17);
        org.junit.Assert.assertNotNull(days19);
        org.junit.Assert.assertNotNull(days21);
        org.junit.Assert.assertNotNull(durationFieldType22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(days25);
        org.junit.Assert.assertNotNull(days27);
        org.junit.Assert.assertNotNull(days28);
        org.junit.Assert.assertNotNull(mutablePeriod29);
        org.junit.Assert.assertNotNull(periodType30);
        org.junit.Assert.assertNotNull(days31);
        org.junit.Assert.assertNotNull(days33);
        org.junit.Assert.assertNotNull(days35);
    }

    @Test
    public void test0260() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0260");
        org.joda.time.Days days1 = org.joda.time.Days.parseDays("P10D");
        org.junit.Assert.assertNotNull(days1);
    }

    @Test
    public void test0261() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0261");
        org.joda.time.Days days1 = org.joda.time.Days.parseDays("P51D");
        org.joda.time.Days days3 = days1.plus((int) ' ');
        int int4 = days1.size();
        int int5 = days1.getDays();
        org.joda.time.Days days7 = days1.multipliedBy((-1));
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.DurationFieldType durationFieldType9 = days1.getFieldType((int) '4');
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 52");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(days1);
        org.junit.Assert.assertNotNull(days3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 1 + "'", int4 == 1);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 51 + "'", int5 == 51);
        org.junit.Assert.assertNotNull(days7);
    }

    @Test
    public void test0262() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0262");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Days days1 = org.joda.time.Days.daysIn(readableInterval0);
        int int3 = days1.getValue((int) (short) 0);
        org.joda.time.Period period4 = days1.toPeriod();
        org.joda.time.Days days5 = org.joda.time.Days.standardDaysIn((org.joda.time.ReadablePeriod) days1);
        org.joda.time.DurationFieldType durationFieldType6 = days1.getFieldType();
        org.joda.time.ReadableInterval readableInterval7 = null;
        org.joda.time.Days days8 = org.joda.time.Days.daysIn(readableInterval7);
        int int10 = days8.getValue((int) (short) 0);
        org.joda.time.Days days11 = org.joda.time.Days.FIVE;
        org.joda.time.Days days12 = days8.minus(days11);
        org.joda.time.Days days13 = null;
        org.joda.time.Days days14 = days8.minus(days13);
        org.joda.time.Duration duration15 = days8.toStandardDuration();
        org.joda.time.DurationFieldType durationFieldType16 = days8.getFieldType();
        org.joda.time.ReadableInterval readableInterval17 = null;
        org.joda.time.Days days18 = org.joda.time.Days.daysIn(readableInterval17);
        int int20 = days18.getValue((int) (short) 0);
        org.joda.time.Days days21 = org.joda.time.Days.FIVE;
        org.joda.time.Days days22 = days18.minus(days21);
        org.joda.time.DurationFieldType durationFieldType23 = null;
        boolean boolean24 = days21.isSupported(durationFieldType23);
        org.joda.time.DurationFieldType durationFieldType26 = days21.getFieldType(0);
        org.joda.time.ReadableInterval readableInterval27 = null;
        org.joda.time.Days days28 = org.joda.time.Days.daysIn(readableInterval27);
        int int30 = days28.getValue((int) (short) 0);
        org.joda.time.Days days31 = org.joda.time.Days.FIVE;
        org.joda.time.Days days32 = days28.minus(days31);
        org.joda.time.Days days33 = null;
        org.joda.time.Days days34 = days28.minus(days33);
        org.joda.time.Days days36 = days28.minus((-1));
        org.joda.time.DurationFieldType durationFieldType37 = days28.getFieldType();
        boolean boolean38 = days21.isGreaterThan(days28);
        org.joda.time.ReadableInterval readableInterval39 = null;
        org.joda.time.Days days40 = org.joda.time.Days.daysIn(readableInterval39);
        org.joda.time.Days days42 = days40.plus((int) (byte) 10);
        org.joda.time.Days days43 = days28.plus(days42);
        org.joda.time.ReadableInterval readableInterval44 = null;
        org.joda.time.Days days45 = org.joda.time.Days.daysIn(readableInterval44);
        int int47 = days45.getValue((int) (short) 0);
        org.joda.time.Days days48 = org.joda.time.Days.FIVE;
        org.joda.time.Days days49 = days45.minus(days48);
        org.joda.time.Days days50 = null;
        org.joda.time.Days days51 = days45.minus(days50);
        org.joda.time.Duration duration52 = days45.toStandardDuration();
        org.joda.time.Days days53 = days43.minus(days45);
        org.joda.time.Duration duration54 = days53.toStandardDuration();
        org.joda.time.Days days56 = days53.minus(5);
        org.joda.time.ReadableInterval readableInterval57 = null;
        org.joda.time.Days days58 = org.joda.time.Days.daysIn(readableInterval57);
        org.joda.time.Days days60 = days58.plus((int) (byte) 10);
        org.joda.time.Days days61 = days56.plus(days58);
        boolean boolean62 = days8.equals((java.lang.Object) days58);
        org.joda.time.Days days63 = days1.minus(days8);
        org.junit.Assert.assertNotNull(days1);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(days5);
        org.junit.Assert.assertNotNull(durationFieldType6);
        org.junit.Assert.assertNotNull(days8);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(days11);
        org.junit.Assert.assertNotNull(days12);
        org.junit.Assert.assertNotNull(days14);
        org.junit.Assert.assertNotNull(duration15);
        org.junit.Assert.assertNotNull(durationFieldType16);
        org.junit.Assert.assertNotNull(days18);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertNotNull(days21);
        org.junit.Assert.assertNotNull(days22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(durationFieldType26);
        org.junit.Assert.assertNotNull(days28);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertNotNull(days31);
        org.junit.Assert.assertNotNull(days32);
        org.junit.Assert.assertNotNull(days34);
        org.junit.Assert.assertNotNull(days36);
        org.junit.Assert.assertNotNull(durationFieldType37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(days40);
        org.junit.Assert.assertNotNull(days42);
        org.junit.Assert.assertNotNull(days43);
        org.junit.Assert.assertNotNull(days45);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 0 + "'", int47 == 0);
        org.junit.Assert.assertNotNull(days48);
        org.junit.Assert.assertNotNull(days49);
        org.junit.Assert.assertNotNull(days51);
        org.junit.Assert.assertNotNull(duration52);
        org.junit.Assert.assertNotNull(days53);
        org.junit.Assert.assertNotNull(duration54);
        org.junit.Assert.assertNotNull(days56);
        org.junit.Assert.assertNotNull(days58);
        org.junit.Assert.assertNotNull(days60);
        org.junit.Assert.assertNotNull(days61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNotNull(days63);
    }

    @Test
    public void test0263() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0263");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Days days1 = org.joda.time.Days.daysIn(readableInterval0);
        int int3 = days1.getValue((int) (short) 0);
        org.joda.time.Days days4 = org.joda.time.Days.FIVE;
        org.joda.time.Days days5 = days1.minus(days4);
        org.joda.time.ReadableInterval readableInterval6 = null;
        org.joda.time.Days days7 = org.joda.time.Days.daysIn(readableInterval6);
        int int9 = days7.getValue((int) (short) 0);
        int int10 = days1.compareTo((org.joda.time.base.BaseSingleFieldPeriod) days7);
        org.joda.time.ReadableInterval readableInterval11 = null;
        org.joda.time.Days days12 = org.joda.time.Days.daysIn(readableInterval11);
        int int14 = days12.getValue((int) (short) 0);
        org.joda.time.Days days15 = org.joda.time.Days.FIVE;
        org.joda.time.Days days16 = days12.minus(days15);
        org.joda.time.DurationFieldType durationFieldType17 = null;
        int int18 = days15.get(durationFieldType17);
        org.joda.time.DurationFieldType durationFieldType19 = null;
        int int20 = days15.get(durationFieldType19);
        boolean boolean22 = days15.equals((java.lang.Object) false);
        boolean boolean23 = days7.equals((java.lang.Object) days15);
        org.joda.time.ReadableInterval readableInterval24 = null;
        org.joda.time.Days days25 = org.joda.time.Days.daysIn(readableInterval24);
        int int27 = days25.getValue((int) (short) 0);
        org.joda.time.Days days28 = org.joda.time.Days.FIVE;
        org.joda.time.Days days29 = days25.minus(days28);
        org.joda.time.Days days30 = null;
        org.joda.time.Days days31 = days25.minus(days30);
        org.joda.time.Days days33 = days25.minus((-1));
        int int34 = days25.size();
        org.joda.time.Days days35 = days15.minus(days25);
        org.joda.time.ReadableInterval readableInterval36 = null;
        org.joda.time.Days days37 = org.joda.time.Days.daysIn(readableInterval36);
        org.joda.time.ReadableInterval readableInterval38 = null;
        org.joda.time.Days days39 = org.joda.time.Days.daysIn(readableInterval38);
        int int41 = days39.getValue((int) (short) 0);
        org.joda.time.Days days42 = org.joda.time.Days.FIVE;
        org.joda.time.Days days43 = days39.minus(days42);
        org.joda.time.DurationFieldType durationFieldType44 = null;
        boolean boolean45 = days42.isSupported(durationFieldType44);
        org.joda.time.DurationFieldType durationFieldType47 = days42.getFieldType(0);
        int int48 = days37.get(durationFieldType47);
        org.joda.time.ReadableInterval readableInterval49 = null;
        org.joda.time.Days days50 = org.joda.time.Days.daysIn(readableInterval49);
        int int52 = days50.getValue((int) (short) 0);
        org.joda.time.Days days53 = org.joda.time.Days.FIVE;
        org.joda.time.Days days54 = days50.minus(days53);
        org.joda.time.DurationFieldType durationFieldType55 = null;
        int int56 = days53.get(durationFieldType55);
        org.joda.time.DurationFieldType durationFieldType57 = null;
        int int58 = days53.get(durationFieldType57);
        boolean boolean60 = days53.equals((java.lang.Object) 0L);
        boolean boolean61 = days37.isGreaterThan(days53);
        org.joda.time.ReadableInterval readableInterval62 = null;
        org.joda.time.Days days63 = org.joda.time.Days.daysIn(readableInterval62);
        int int65 = days63.getValue((int) (short) 0);
        org.joda.time.Days days66 = org.joda.time.Days.FIVE;
        org.joda.time.Days days67 = days63.minus(days66);
        org.joda.time.DurationFieldType durationFieldType68 = null;
        int int69 = days66.get(durationFieldType68);
        org.joda.time.DurationFieldType durationFieldType70 = null;
        int int71 = days66.get(durationFieldType70);
        boolean boolean73 = days66.equals((java.lang.Object) 0L);
        org.joda.time.Period period74 = days66.toPeriod();
        org.joda.time.Days days75 = days37.plus(days66);
        org.joda.time.ReadableInterval readableInterval76 = null;
        org.joda.time.Days days77 = org.joda.time.Days.daysIn(readableInterval76);
        int int79 = days77.getValue((int) (short) 0);
        org.joda.time.Period period80 = days77.toPeriod();
        org.joda.time.Days days81 = org.joda.time.Days.standardDaysIn((org.joda.time.ReadablePeriod) days77);
        boolean boolean82 = days37.equals((java.lang.Object) days81);
        boolean boolean83 = days35.isLessThan(days37);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.DurationFieldType durationFieldType85 = days37.getFieldType(52);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 52");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(days1);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(days4);
        org.junit.Assert.assertNotNull(days5);
        org.junit.Assert.assertNotNull(days7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(days12);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNotNull(days15);
        org.junit.Assert.assertNotNull(days16);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(days25);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertNotNull(days28);
        org.junit.Assert.assertNotNull(days29);
        org.junit.Assert.assertNotNull(days31);
        org.junit.Assert.assertNotNull(days33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 1 + "'", int34 == 1);
        org.junit.Assert.assertNotNull(days35);
        org.junit.Assert.assertNotNull(days37);
        org.junit.Assert.assertNotNull(days39);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0);
        org.junit.Assert.assertNotNull(days42);
        org.junit.Assert.assertNotNull(days43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(durationFieldType47);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 0 + "'", int48 == 0);
        org.junit.Assert.assertNotNull(days50);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 0 + "'", int52 == 0);
        org.junit.Assert.assertNotNull(days53);
        org.junit.Assert.assertNotNull(days54);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 0 + "'", int56 == 0);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 0 + "'", int58 == 0);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(days63);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 0 + "'", int65 == 0);
        org.junit.Assert.assertNotNull(days66);
        org.junit.Assert.assertNotNull(days67);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 0 + "'", int69 == 0);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 0 + "'", int71 == 0);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(period74);
        org.junit.Assert.assertNotNull(days75);
        org.junit.Assert.assertNotNull(days77);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + 0 + "'", int79 == 0);
        org.junit.Assert.assertNotNull(period80);
        org.junit.Assert.assertNotNull(days81);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
    }

    @Test
    public void test0264() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0264");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Days days1 = org.joda.time.Days.daysIn(readableInterval0);
        int int3 = days1.getValue((int) (short) 0);
        org.joda.time.ReadableInterval readableInterval4 = null;
        org.joda.time.Days days5 = org.joda.time.Days.daysIn(readableInterval4);
        int int7 = days5.getValue((int) (short) 0);
        org.joda.time.Days days8 = org.joda.time.Days.FIVE;
        org.joda.time.Days days9 = days5.minus(days8);
        int int10 = days1.compareTo((org.joda.time.base.BaseSingleFieldPeriod) days8);
        java.lang.String str11 = days1.toString();
        org.joda.time.Days days13 = days1.plus((int) '4');
        org.joda.time.ReadableInterval readableInterval14 = null;
        org.joda.time.Days days15 = org.joda.time.Days.daysIn(readableInterval14);
        int int17 = days15.getValue((int) (short) 0);
        org.joda.time.Days days18 = org.joda.time.Days.FIVE;
        org.joda.time.Days days19 = days15.minus(days18);
        org.joda.time.DurationFieldType durationFieldType20 = null;
        boolean boolean21 = days18.isSupported(durationFieldType20);
        org.joda.time.DurationFieldType durationFieldType23 = days18.getFieldType(0);
        org.joda.time.ReadableInterval readableInterval24 = null;
        org.joda.time.Days days25 = org.joda.time.Days.daysIn(readableInterval24);
        int int27 = days25.getValue((int) (short) 0);
        org.joda.time.Days days28 = org.joda.time.Days.FIVE;
        org.joda.time.Days days29 = days25.minus(days28);
        org.joda.time.Days days30 = null;
        org.joda.time.Days days31 = days25.minus(days30);
        org.joda.time.Days days33 = days25.minus((-1));
        org.joda.time.DurationFieldType durationFieldType34 = days25.getFieldType();
        boolean boolean35 = days18.isGreaterThan(days25);
        org.joda.time.ReadableInterval readableInterval36 = null;
        org.joda.time.Days days37 = org.joda.time.Days.daysIn(readableInterval36);
        org.joda.time.Days days39 = days37.plus((int) (byte) 10);
        org.joda.time.Days days40 = days25.plus(days39);
        org.joda.time.ReadableInterval readableInterval41 = null;
        org.joda.time.Days days42 = org.joda.time.Days.daysIn(readableInterval41);
        int int44 = days42.getValue((int) (short) 0);
        org.joda.time.Days days45 = org.joda.time.Days.FIVE;
        org.joda.time.Days days46 = days42.minus(days45);
        org.joda.time.Days days47 = null;
        org.joda.time.Days days48 = days42.minus(days47);
        org.joda.time.Duration duration49 = days42.toStandardDuration();
        org.joda.time.Days days50 = days40.minus(days42);
        org.joda.time.Duration duration51 = days50.toStandardDuration();
        org.joda.time.PeriodType periodType52 = days50.getPeriodType();
        org.joda.time.Days days53 = days13.plus(days50);
        org.joda.time.ReadableInterval readableInterval54 = null;
        org.joda.time.Days days55 = org.joda.time.Days.daysIn(readableInterval54);
        int int57 = days55.getValue((int) (short) 0);
        org.joda.time.ReadableInterval readableInterval58 = null;
        org.joda.time.Days days59 = org.joda.time.Days.daysIn(readableInterval58);
        int int61 = days59.getValue((int) (short) 0);
        org.joda.time.Days days62 = org.joda.time.Days.FIVE;
        org.joda.time.Days days63 = days59.minus(days62);
        int int64 = days55.compareTo((org.joda.time.base.BaseSingleFieldPeriod) days62);
        org.joda.time.MutablePeriod mutablePeriod65 = days62.toMutablePeriod();
        boolean boolean66 = days53.isLessThan(days62);
        java.lang.Class<?> wildcardClass67 = days53.getClass();
        org.junit.Assert.assertNotNull(days1);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(days5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(days8);
        org.junit.Assert.assertNotNull(days9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "P0D" + "'", str11, "P0D");
        org.junit.Assert.assertNotNull(days13);
        org.junit.Assert.assertNotNull(days15);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNotNull(days18);
        org.junit.Assert.assertNotNull(days19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(durationFieldType23);
        org.junit.Assert.assertNotNull(days25);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertNotNull(days28);
        org.junit.Assert.assertNotNull(days29);
        org.junit.Assert.assertNotNull(days31);
        org.junit.Assert.assertNotNull(days33);
        org.junit.Assert.assertNotNull(durationFieldType34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(days37);
        org.junit.Assert.assertNotNull(days39);
        org.junit.Assert.assertNotNull(days40);
        org.junit.Assert.assertNotNull(days42);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 0 + "'", int44 == 0);
        org.junit.Assert.assertNotNull(days45);
        org.junit.Assert.assertNotNull(days46);
        org.junit.Assert.assertNotNull(days48);
        org.junit.Assert.assertNotNull(duration49);
        org.junit.Assert.assertNotNull(days50);
        org.junit.Assert.assertNotNull(duration51);
        org.junit.Assert.assertNotNull(periodType52);
        org.junit.Assert.assertNotNull(days53);
        org.junit.Assert.assertNotNull(days55);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 0 + "'", int57 == 0);
        org.junit.Assert.assertNotNull(days59);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 0 + "'", int61 == 0);
        org.junit.Assert.assertNotNull(days62);
        org.junit.Assert.assertNotNull(days63);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + (-1) + "'", int64 == (-1));
        org.junit.Assert.assertNotNull(mutablePeriod65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(wildcardClass67);
    }

    @Test
    public void test0265() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0265");
        org.joda.time.Days days1 = org.joda.time.Days.days((int) 'a');
        org.joda.time.Days days2 = days1.negated();
        org.joda.time.Days days4 = days2.multipliedBy((int) (byte) 1);
        // The following exception was thrown during execution in test generation
        try {
            int int6 = days4.getValue(5);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 5");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(days1);
        org.junit.Assert.assertNotNull(days2);
        org.junit.Assert.assertNotNull(days4);
    }

    @Test
    public void test0266() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0266");
        org.joda.time.Days days1 = org.joda.time.Days.days(97);
        org.joda.time.Seconds seconds2 = days1.toStandardSeconds();
        org.junit.Assert.assertNotNull(days1);
        org.junit.Assert.assertNotNull(seconds2);
    }

    @Test
    public void test0267() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0267");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Days days1 = org.joda.time.Days.daysIn(readableInterval0);
        org.joda.time.Days days3 = days1.plus((int) (byte) 10);
        org.joda.time.Days days5 = days3.dividedBy((int) 'a');
        java.lang.Class<?> wildcardClass6 = days3.getClass();
        org.junit.Assert.assertNotNull(days1);
        org.junit.Assert.assertNotNull(days3);
        org.junit.Assert.assertNotNull(days5);
        org.junit.Assert.assertNotNull(wildcardClass6);
    }

    @Test
    public void test0268() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0268");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Days days1 = org.joda.time.Days.daysIn(readableInterval0);
        int int3 = days1.getValue((int) (short) 0);
        org.joda.time.Days days4 = org.joda.time.Days.FIVE;
        org.joda.time.Days days5 = days1.minus(days4);
        org.joda.time.Days days6 = null;
        org.joda.time.Days days7 = days1.minus(days6);
        org.joda.time.ReadableInterval readableInterval8 = null;
        org.joda.time.Days days9 = org.joda.time.Days.daysIn(readableInterval8);
        int int11 = days9.getValue((int) (short) 0);
        org.joda.time.Days days12 = org.joda.time.Days.FIVE;
        org.joda.time.Days days13 = days9.minus(days12);
        org.joda.time.DurationFieldType durationFieldType14 = null;
        int int15 = days12.get(durationFieldType14);
        org.joda.time.DurationFieldType durationFieldType16 = null;
        int int17 = days12.get(durationFieldType16);
        boolean boolean19 = days12.equals((java.lang.Object) 0L);
        int int20 = days1.compareTo((org.joda.time.base.BaseSingleFieldPeriod) days12);
        org.joda.time.Days days22 = days1.minus(52);
        org.joda.time.Days days24 = days22.dividedBy((-1));
        org.joda.time.Days days26 = org.joda.time.Days.days(1);
        org.joda.time.ReadableInterval readableInterval27 = null;
        org.joda.time.Days days28 = org.joda.time.Days.daysIn(readableInterval27);
        int int30 = days28.getValue((int) (short) 0);
        org.joda.time.Days days31 = org.joda.time.Days.FIVE;
        org.joda.time.Days days32 = days28.minus(days31);
        org.joda.time.DurationFieldType durationFieldType33 = null;
        boolean boolean34 = days31.isSupported(durationFieldType33);
        org.joda.time.DurationFieldType durationFieldType36 = days31.getFieldType(0);
        org.joda.time.ReadableInterval readableInterval37 = null;
        org.joda.time.Days days38 = org.joda.time.Days.daysIn(readableInterval37);
        int int40 = days38.getValue((int) (short) 0);
        org.joda.time.Days days41 = org.joda.time.Days.FIVE;
        org.joda.time.Days days42 = days38.minus(days41);
        org.joda.time.Days days43 = null;
        org.joda.time.Days days44 = days38.minus(days43);
        org.joda.time.Days days46 = days38.minus((-1));
        org.joda.time.DurationFieldType durationFieldType47 = days38.getFieldType();
        boolean boolean48 = days31.isGreaterThan(days38);
        org.joda.time.ReadableInterval readableInterval49 = null;
        org.joda.time.Days days50 = org.joda.time.Days.daysIn(readableInterval49);
        org.joda.time.Days days52 = days50.plus((int) (byte) 10);
        org.joda.time.Days days53 = days38.plus(days52);
        org.joda.time.MutablePeriod mutablePeriod54 = days52.toMutablePeriod();
        org.joda.time.PeriodType periodType55 = days52.getPeriodType();
        org.joda.time.Days days56 = days26.minus(days52);
        org.joda.time.Period period57 = days56.toPeriod();
        boolean boolean58 = days24.isGreaterThan(days56);
        org.joda.time.Duration duration59 = days56.toStandardDuration();
        org.junit.Assert.assertNotNull(days1);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(days4);
        org.junit.Assert.assertNotNull(days5);
        org.junit.Assert.assertNotNull(days7);
        org.junit.Assert.assertNotNull(days9);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNotNull(days12);
        org.junit.Assert.assertNotNull(days13);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
        org.junit.Assert.assertNotNull(days22);
        org.junit.Assert.assertNotNull(days24);
        org.junit.Assert.assertNotNull(days26);
        org.junit.Assert.assertNotNull(days28);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertNotNull(days31);
        org.junit.Assert.assertNotNull(days32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(durationFieldType36);
        org.junit.Assert.assertNotNull(days38);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertNotNull(days41);
        org.junit.Assert.assertNotNull(days42);
        org.junit.Assert.assertNotNull(days44);
        org.junit.Assert.assertNotNull(days46);
        org.junit.Assert.assertNotNull(durationFieldType47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(days50);
        org.junit.Assert.assertNotNull(days52);
        org.junit.Assert.assertNotNull(days53);
        org.junit.Assert.assertNotNull(mutablePeriod54);
        org.junit.Assert.assertNotNull(periodType55);
        org.junit.Assert.assertNotNull(days56);
        org.junit.Assert.assertNotNull(period57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(duration59);
    }

    @Test
    public void test0269() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0269");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Days days1 = org.joda.time.Days.daysIn(readableInterval0);
        org.joda.time.ReadableInterval readableInterval2 = null;
        org.joda.time.Days days3 = org.joda.time.Days.daysIn(readableInterval2);
        int int5 = days3.getValue((int) (short) 0);
        org.joda.time.Days days6 = org.joda.time.Days.FIVE;
        org.joda.time.Days days7 = days3.minus(days6);
        org.joda.time.DurationFieldType durationFieldType8 = null;
        boolean boolean9 = days6.isSupported(durationFieldType8);
        org.joda.time.DurationFieldType durationFieldType11 = days6.getFieldType(0);
        int int12 = days1.get(durationFieldType11);
        org.joda.time.ReadableInterval readableInterval13 = null;
        org.joda.time.Days days14 = org.joda.time.Days.daysIn(readableInterval13);
        int int16 = days14.getValue((int) (short) 0);
        org.joda.time.Days days17 = org.joda.time.Days.FIVE;
        org.joda.time.Days days18 = days14.minus(days17);
        org.joda.time.DurationFieldType durationFieldType19 = null;
        int int20 = days17.get(durationFieldType19);
        org.joda.time.DurationFieldType durationFieldType21 = null;
        int int22 = days17.get(durationFieldType21);
        boolean boolean24 = days17.equals((java.lang.Object) 0L);
        boolean boolean25 = days1.isGreaterThan(days17);
        org.joda.time.ReadableInterval readableInterval26 = null;
        org.joda.time.Days days27 = org.joda.time.Days.daysIn(readableInterval26);
        int int29 = days27.getValue((int) (short) 0);
        org.joda.time.Days days30 = org.joda.time.Days.FIVE;
        org.joda.time.Days days31 = days27.minus(days30);
        org.joda.time.DurationFieldType durationFieldType32 = null;
        int int33 = days30.get(durationFieldType32);
        org.joda.time.DurationFieldType durationFieldType34 = null;
        int int35 = days30.get(durationFieldType34);
        boolean boolean37 = days30.equals((java.lang.Object) 0L);
        org.joda.time.Period period38 = days30.toPeriod();
        org.joda.time.Days days39 = days1.plus(days30);
        org.joda.time.ReadableInterval readableInterval40 = null;
        org.joda.time.Days days41 = org.joda.time.Days.daysIn(readableInterval40);
        int int43 = days41.getValue((int) (short) 0);
        org.joda.time.Period period44 = days41.toPeriod();
        org.joda.time.Days days45 = org.joda.time.Days.standardDaysIn((org.joda.time.ReadablePeriod) days41);
        boolean boolean46 = days1.equals((java.lang.Object) days45);
        org.joda.time.Days days48 = days45.multipliedBy(0);
        org.joda.time.Days days50 = days45.multipliedBy(5);
        org.joda.time.Days days51 = org.joda.time.Days.SIX;
        org.joda.time.Days days53 = days51.plus(100);
        org.joda.time.ReadableInterval readableInterval54 = null;
        org.joda.time.Days days55 = org.joda.time.Days.daysIn(readableInterval54);
        int int57 = days55.getValue((int) (short) 0);
        org.joda.time.Days days58 = org.joda.time.Days.FIVE;
        org.joda.time.Days days59 = days55.minus(days58);
        org.joda.time.Days days60 = null;
        org.joda.time.Days days61 = days55.minus(days60);
        org.joda.time.Days days63 = days55.minus((-1));
        org.joda.time.DurationFieldType durationFieldType64 = days55.getFieldType();
        int int65 = days51.get(durationFieldType64);
        org.joda.time.Days days66 = days51.negated();
        boolean boolean67 = days45.isLessThan(days66);
        org.joda.time.ReadableInterval readableInterval68 = null;
        org.joda.time.Days days69 = org.joda.time.Days.daysIn(readableInterval68);
        int int71 = days69.getValue((int) (short) 0);
        org.joda.time.Period period72 = days69.toPeriod();
        org.joda.time.Days days73 = org.joda.time.Days.standardDaysIn((org.joda.time.ReadablePeriod) period72);
        org.joda.time.Period period74 = days73.toPeriod();
        org.joda.time.Days days75 = days66.plus(days73);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.DurationFieldType durationFieldType77 = days75.getFieldType((int) (short) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 10");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(days1);
        org.junit.Assert.assertNotNull(days3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(days6);
        org.junit.Assert.assertNotNull(days7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(durationFieldType11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNotNull(days14);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertNotNull(days17);
        org.junit.Assert.assertNotNull(days18);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(days27);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertNotNull(days30);
        org.junit.Assert.assertNotNull(days31);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(period38);
        org.junit.Assert.assertNotNull(days39);
        org.junit.Assert.assertNotNull(days41);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0);
        org.junit.Assert.assertNotNull(period44);
        org.junit.Assert.assertNotNull(days45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(days48);
        org.junit.Assert.assertNotNull(days50);
        org.junit.Assert.assertNotNull(days51);
        org.junit.Assert.assertNotNull(days53);
        org.junit.Assert.assertNotNull(days55);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 0 + "'", int57 == 0);
        org.junit.Assert.assertNotNull(days58);
        org.junit.Assert.assertNotNull(days59);
        org.junit.Assert.assertNotNull(days61);
        org.junit.Assert.assertNotNull(days63);
        org.junit.Assert.assertNotNull(durationFieldType64);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 6 + "'", int65 == 6);
        org.junit.Assert.assertNotNull(days66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(days69);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 0 + "'", int71 == 0);
        org.junit.Assert.assertNotNull(period72);
        org.junit.Assert.assertNotNull(days73);
        org.junit.Assert.assertNotNull(period74);
        org.junit.Assert.assertNotNull(days75);
    }

    @Test
    public void test0270() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0270");
        org.joda.time.Days days1 = org.joda.time.Days.parseDays("P485D");
        org.joda.time.ReadableInterval readableInterval2 = null;
        org.joda.time.Days days3 = org.joda.time.Days.daysIn(readableInterval2);
        int int5 = days3.getValue((int) (short) 0);
        org.joda.time.Days days6 = org.joda.time.Days.FIVE;
        org.joda.time.Days days7 = days3.minus(days6);
        org.joda.time.DurationFieldType durationFieldType8 = null;
        boolean boolean9 = days6.isSupported(durationFieldType8);
        org.joda.time.DurationFieldType durationFieldType11 = days6.getFieldType(0);
        org.joda.time.ReadableInterval readableInterval12 = null;
        org.joda.time.Days days13 = org.joda.time.Days.daysIn(readableInterval12);
        int int15 = days13.getValue((int) (short) 0);
        org.joda.time.Days days16 = org.joda.time.Days.FIVE;
        org.joda.time.Days days17 = days13.minus(days16);
        org.joda.time.Days days18 = null;
        org.joda.time.Days days19 = days13.minus(days18);
        org.joda.time.Days days21 = days13.minus((-1));
        org.joda.time.DurationFieldType durationFieldType22 = days13.getFieldType();
        boolean boolean23 = days6.isGreaterThan(days13);
        org.joda.time.ReadableInterval readableInterval24 = null;
        org.joda.time.Days days25 = org.joda.time.Days.daysIn(readableInterval24);
        org.joda.time.Days days27 = days25.plus((int) (byte) 10);
        org.joda.time.Days days29 = days27.dividedBy((int) 'a');
        org.joda.time.Days days31 = days27.dividedBy(5);
        org.joda.time.Days days33 = days27.plus((int) (byte) -1);
        org.joda.time.Days days35 = days27.minus((int) (byte) 100);
        int int36 = days35.getDays();
        boolean boolean37 = days13.isGreaterThan(days35);
        org.joda.time.MutablePeriod mutablePeriod38 = days35.toMutablePeriod();
        org.joda.time.Days days39 = org.joda.time.Days.standardDaysIn((org.joda.time.ReadablePeriod) days35);
        org.joda.time.Days days41 = days35.multipliedBy((int) (short) 1);
        org.joda.time.Days days42 = org.joda.time.Days.FOUR;
        org.joda.time.ReadableInterval readableInterval43 = null;
        org.joda.time.Days days44 = org.joda.time.Days.daysIn(readableInterval43);
        int int46 = days44.getValue((int) (short) 0);
        org.joda.time.Days days47 = org.joda.time.Days.FIVE;
        org.joda.time.Days days48 = days44.minus(days47);
        org.joda.time.DurationFieldType durationFieldType49 = null;
        boolean boolean50 = days47.isSupported(durationFieldType49);
        org.joda.time.DurationFieldType durationFieldType52 = days47.getFieldType(0);
        org.joda.time.ReadableInterval readableInterval53 = null;
        org.joda.time.Days days54 = org.joda.time.Days.daysIn(readableInterval53);
        int int56 = days54.getValue((int) (short) 0);
        org.joda.time.Days days57 = org.joda.time.Days.FIVE;
        org.joda.time.Days days58 = days54.minus(days57);
        org.joda.time.Days days59 = null;
        org.joda.time.Days days60 = days54.minus(days59);
        org.joda.time.Days days62 = days54.minus((-1));
        org.joda.time.DurationFieldType durationFieldType63 = days54.getFieldType();
        boolean boolean64 = days47.isGreaterThan(days54);
        org.joda.time.ReadableInterval readableInterval65 = null;
        org.joda.time.Days days66 = org.joda.time.Days.daysIn(readableInterval65);
        org.joda.time.Days days68 = days66.plus((int) (byte) 10);
        org.joda.time.Days days69 = days54.plus(days68);
        org.joda.time.ReadableInterval readableInterval70 = null;
        org.joda.time.Days days71 = org.joda.time.Days.daysIn(readableInterval70);
        int int73 = days71.getValue((int) (short) 0);
        org.joda.time.Days days74 = org.joda.time.Days.FIVE;
        org.joda.time.Days days75 = days71.minus(days74);
        org.joda.time.Days days76 = null;
        org.joda.time.Days days77 = days71.minus(days76);
        org.joda.time.Duration duration78 = days71.toStandardDuration();
        org.joda.time.Days days79 = days69.minus(days71);
        org.joda.time.Days days81 = days71.multipliedBy(5);
        org.joda.time.Days days82 = days42.plus(days71);
        boolean boolean83 = days35.isLessThan(days42);
        org.joda.time.Days days85 = days42.multipliedBy((int) ' ');
        boolean boolean86 = days1.isGreaterThan(days85);
        org.joda.time.Days days87 = null;
        boolean boolean88 = days1.isLessThan(days87);
        org.junit.Assert.assertNotNull(days1);
        org.junit.Assert.assertNotNull(days3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(days6);
        org.junit.Assert.assertNotNull(days7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(durationFieldType11);
        org.junit.Assert.assertNotNull(days13);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNotNull(days16);
        org.junit.Assert.assertNotNull(days17);
        org.junit.Assert.assertNotNull(days19);
        org.junit.Assert.assertNotNull(days21);
        org.junit.Assert.assertNotNull(durationFieldType22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(days25);
        org.junit.Assert.assertNotNull(days27);
        org.junit.Assert.assertNotNull(days29);
        org.junit.Assert.assertNotNull(days31);
        org.junit.Assert.assertNotNull(days33);
        org.junit.Assert.assertNotNull(days35);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-90) + "'", int36 == (-90));
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(mutablePeriod38);
        org.junit.Assert.assertNotNull(days39);
        org.junit.Assert.assertNotNull(days41);
        org.junit.Assert.assertNotNull(days42);
        org.junit.Assert.assertNotNull(days44);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 0 + "'", int46 == 0);
        org.junit.Assert.assertNotNull(days47);
        org.junit.Assert.assertNotNull(days48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(durationFieldType52);
        org.junit.Assert.assertNotNull(days54);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 0 + "'", int56 == 0);
        org.junit.Assert.assertNotNull(days57);
        org.junit.Assert.assertNotNull(days58);
        org.junit.Assert.assertNotNull(days60);
        org.junit.Assert.assertNotNull(days62);
        org.junit.Assert.assertNotNull(durationFieldType63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(days66);
        org.junit.Assert.assertNotNull(days68);
        org.junit.Assert.assertNotNull(days69);
        org.junit.Assert.assertNotNull(days71);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 0 + "'", int73 == 0);
        org.junit.Assert.assertNotNull(days74);
        org.junit.Assert.assertNotNull(days75);
        org.junit.Assert.assertNotNull(days77);
        org.junit.Assert.assertNotNull(duration78);
        org.junit.Assert.assertNotNull(days79);
        org.junit.Assert.assertNotNull(days81);
        org.junit.Assert.assertNotNull(days82);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertNotNull(days85);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
    }

    @Test
    public void test0271() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0271");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Days days1 = org.joda.time.Days.daysIn(readableInterval0);
        int int3 = days1.getValue((int) (short) 0);
        org.joda.time.Days days4 = org.joda.time.Days.FIVE;
        org.joda.time.Days days5 = days1.minus(days4);
        org.joda.time.Days days6 = null;
        org.joda.time.Days days7 = days1.minus(days6);
        org.joda.time.Days days9 = days7.minus(100);
        org.joda.time.ReadableInterval readableInterval10 = null;
        org.joda.time.Days days11 = org.joda.time.Days.daysIn(readableInterval10);
        int int13 = days11.getValue((int) (short) 0);
        org.joda.time.Days days14 = org.joda.time.Days.FIVE;
        org.joda.time.Days days15 = days11.minus(days14);
        org.joda.time.Days days16 = null;
        org.joda.time.Days days17 = days11.minus(days16);
        org.joda.time.Days days19 = days11.minus((-1));
        org.joda.time.Days days20 = days7.plus(days11);
        org.joda.time.Days days21 = org.joda.time.Days.standardDaysIn((org.joda.time.ReadablePeriod) days11);
        org.joda.time.Days days23 = days11.minus(51);
        org.junit.Assert.assertNotNull(days1);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(days4);
        org.junit.Assert.assertNotNull(days5);
        org.junit.Assert.assertNotNull(days7);
        org.junit.Assert.assertNotNull(days9);
        org.junit.Assert.assertNotNull(days11);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(days14);
        org.junit.Assert.assertNotNull(days15);
        org.junit.Assert.assertNotNull(days17);
        org.junit.Assert.assertNotNull(days19);
        org.junit.Assert.assertNotNull(days20);
        org.junit.Assert.assertNotNull(days21);
        org.junit.Assert.assertNotNull(days23);
    }

    @Test
    public void test0272() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0272");
        org.joda.time.Days days0 = org.joda.time.Days.THREE;
        org.joda.time.ReadableInterval readableInterval1 = null;
        org.joda.time.Days days2 = org.joda.time.Days.daysIn(readableInterval1);
        org.joda.time.ReadableInterval readableInterval3 = null;
        org.joda.time.Days days4 = org.joda.time.Days.daysIn(readableInterval3);
        int int6 = days4.getValue((int) (short) 0);
        org.joda.time.Days days7 = org.joda.time.Days.FIVE;
        org.joda.time.Days days8 = days4.minus(days7);
        org.joda.time.DurationFieldType durationFieldType9 = null;
        boolean boolean10 = days7.isSupported(durationFieldType9);
        org.joda.time.DurationFieldType durationFieldType12 = days7.getFieldType(0);
        int int13 = days2.get(durationFieldType12);
        org.joda.time.ReadableInterval readableInterval14 = null;
        org.joda.time.Days days15 = org.joda.time.Days.daysIn(readableInterval14);
        int int17 = days15.getValue((int) (short) 0);
        org.joda.time.Days days18 = org.joda.time.Days.FIVE;
        org.joda.time.Days days19 = days15.minus(days18);
        org.joda.time.DurationFieldType durationFieldType20 = null;
        int int21 = days18.get(durationFieldType20);
        org.joda.time.DurationFieldType durationFieldType22 = null;
        int int23 = days18.get(durationFieldType22);
        boolean boolean25 = days18.equals((java.lang.Object) 0L);
        boolean boolean26 = days2.isGreaterThan(days18);
        org.joda.time.ReadableInterval readableInterval27 = null;
        org.joda.time.Days days28 = org.joda.time.Days.daysIn(readableInterval27);
        int int30 = days28.getValue((int) (short) 0);
        org.joda.time.Days days31 = org.joda.time.Days.FIVE;
        org.joda.time.Days days32 = days28.minus(days31);
        org.joda.time.DurationFieldType durationFieldType33 = null;
        int int34 = days31.get(durationFieldType33);
        org.joda.time.DurationFieldType durationFieldType35 = null;
        int int36 = days31.get(durationFieldType35);
        boolean boolean38 = days31.equals((java.lang.Object) 0L);
        org.joda.time.Period period39 = days31.toPeriod();
        org.joda.time.Days days40 = days2.plus(days31);
        boolean boolean41 = days0.isGreaterThan(days40);
        org.joda.time.Days days43 = days40.dividedBy(42);
        org.joda.time.PeriodType periodType44 = days40.getPeriodType();
        org.joda.time.PeriodType periodType45 = days40.getPeriodType();
        int int46 = days40.size();
        org.joda.time.ReadableInterval readableInterval47 = null;
        org.joda.time.Days days48 = org.joda.time.Days.daysIn(readableInterval47);
        int int50 = days48.getValue((int) (short) 0);
        org.joda.time.ReadableInterval readableInterval51 = null;
        org.joda.time.Days days52 = org.joda.time.Days.daysIn(readableInterval51);
        int int54 = days52.getValue((int) (short) 0);
        org.joda.time.Days days55 = org.joda.time.Days.FIVE;
        org.joda.time.Days days56 = days52.minus(days55);
        int int57 = days48.compareTo((org.joda.time.base.BaseSingleFieldPeriod) days55);
        org.joda.time.DurationFieldType durationFieldType58 = days55.getFieldType();
        org.joda.time.DurationFieldType durationFieldType60 = days55.getFieldType((int) (byte) 0);
        int int61 = days40.get(durationFieldType60);
        org.junit.Assert.assertNotNull(days0);
        org.junit.Assert.assertNotNull(days2);
        org.junit.Assert.assertNotNull(days4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNotNull(days7);
        org.junit.Assert.assertNotNull(days8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(durationFieldType12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(days15);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNotNull(days18);
        org.junit.Assert.assertNotNull(days19);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(days28);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertNotNull(days31);
        org.junit.Assert.assertNotNull(days32);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(period39);
        org.junit.Assert.assertNotNull(days40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(days43);
        org.junit.Assert.assertNotNull(periodType44);
        org.junit.Assert.assertNotNull(periodType45);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 1 + "'", int46 == 1);
        org.junit.Assert.assertNotNull(days48);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 0 + "'", int50 == 0);
        org.junit.Assert.assertNotNull(days52);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 0 + "'", int54 == 0);
        org.junit.Assert.assertNotNull(days55);
        org.junit.Assert.assertNotNull(days56);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + (-1) + "'", int57 == (-1));
        org.junit.Assert.assertNotNull(durationFieldType58);
        org.junit.Assert.assertNotNull(durationFieldType60);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 5 + "'", int61 == 5);
    }

    @Test
    public void test0273() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0273");
        org.joda.time.Days days0 = org.joda.time.Days.THREE;
        org.joda.time.ReadableInterval readableInterval1 = null;
        org.joda.time.Days days2 = org.joda.time.Days.daysIn(readableInterval1);
        org.joda.time.ReadableInterval readableInterval3 = null;
        org.joda.time.Days days4 = org.joda.time.Days.daysIn(readableInterval3);
        int int6 = days4.getValue((int) (short) 0);
        org.joda.time.Days days7 = org.joda.time.Days.FIVE;
        org.joda.time.Days days8 = days4.minus(days7);
        org.joda.time.DurationFieldType durationFieldType9 = null;
        boolean boolean10 = days7.isSupported(durationFieldType9);
        org.joda.time.DurationFieldType durationFieldType12 = days7.getFieldType(0);
        int int13 = days2.get(durationFieldType12);
        org.joda.time.ReadableInterval readableInterval14 = null;
        org.joda.time.Days days15 = org.joda.time.Days.daysIn(readableInterval14);
        int int17 = days15.getValue((int) (short) 0);
        org.joda.time.Days days18 = org.joda.time.Days.FIVE;
        org.joda.time.Days days19 = days15.minus(days18);
        org.joda.time.DurationFieldType durationFieldType20 = null;
        int int21 = days18.get(durationFieldType20);
        org.joda.time.DurationFieldType durationFieldType22 = null;
        int int23 = days18.get(durationFieldType22);
        boolean boolean25 = days18.equals((java.lang.Object) 0L);
        boolean boolean26 = days2.isGreaterThan(days18);
        org.joda.time.ReadableInterval readableInterval27 = null;
        org.joda.time.Days days28 = org.joda.time.Days.daysIn(readableInterval27);
        int int30 = days28.getValue((int) (short) 0);
        org.joda.time.Days days31 = org.joda.time.Days.FIVE;
        org.joda.time.Days days32 = days28.minus(days31);
        org.joda.time.DurationFieldType durationFieldType33 = null;
        int int34 = days31.get(durationFieldType33);
        org.joda.time.DurationFieldType durationFieldType35 = null;
        int int36 = days31.get(durationFieldType35);
        boolean boolean38 = days31.equals((java.lang.Object) 0L);
        org.joda.time.Period period39 = days31.toPeriod();
        org.joda.time.Days days40 = days2.plus(days31);
        boolean boolean41 = days0.isGreaterThan(days40);
        org.joda.time.Days days42 = org.joda.time.Days.ZERO;
        org.joda.time.ReadableInterval readableInterval43 = null;
        org.joda.time.Days days44 = org.joda.time.Days.daysIn(readableInterval43);
        int int46 = days44.getValue((int) (short) 0);
        org.joda.time.Days days47 = org.joda.time.Days.FIVE;
        org.joda.time.Days days48 = days44.minus(days47);
        org.joda.time.Days days49 = null;
        org.joda.time.Days days50 = days44.minus(days49);
        org.joda.time.Duration duration51 = days44.toStandardDuration();
        org.joda.time.DurationFieldType durationFieldType52 = days44.getFieldType();
        org.joda.time.Days days53 = days42.minus(days44);
        org.joda.time.Days days55 = days53.plus((int) (byte) 100);
        boolean boolean56 = days0.isLessThan(days55);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.DurationFieldType durationFieldType58 = days0.getFieldType((int) (short) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 1");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(days0);
        org.junit.Assert.assertNotNull(days2);
        org.junit.Assert.assertNotNull(days4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNotNull(days7);
        org.junit.Assert.assertNotNull(days8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(durationFieldType12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(days15);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNotNull(days18);
        org.junit.Assert.assertNotNull(days19);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(days28);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertNotNull(days31);
        org.junit.Assert.assertNotNull(days32);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(period39);
        org.junit.Assert.assertNotNull(days40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(days42);
        org.junit.Assert.assertNotNull(days44);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 0 + "'", int46 == 0);
        org.junit.Assert.assertNotNull(days47);
        org.junit.Assert.assertNotNull(days48);
        org.junit.Assert.assertNotNull(days50);
        org.junit.Assert.assertNotNull(duration51);
        org.junit.Assert.assertNotNull(durationFieldType52);
        org.junit.Assert.assertNotNull(days53);
        org.junit.Assert.assertNotNull(days55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
    }

    @Test
    public void test0274() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0274");
        org.joda.time.Days days0 = org.joda.time.Days.MAX_VALUE;
        org.joda.time.Days days1 = days0.negated();
        org.joda.time.PeriodType periodType2 = days0.getPeriodType();
        org.joda.time.ReadableInterval readableInterval3 = null;
        org.joda.time.Days days4 = org.joda.time.Days.daysIn(readableInterval3);
        int int6 = days4.getValue((int) (short) 0);
        org.joda.time.Days days7 = org.joda.time.Days.FIVE;
        org.joda.time.Days days8 = days4.minus(days7);
        org.joda.time.DurationFieldType durationFieldType9 = null;
        int int10 = days7.get(durationFieldType9);
        org.joda.time.Days days12 = days7.dividedBy(100);
        int int13 = days0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) days7);
        int int14 = days0.getDays();
        java.lang.String str15 = days0.toString();
        org.joda.time.Period period16 = days0.toPeriod();
        org.joda.time.ReadableInterval readableInterval17 = null;
        org.joda.time.Days days18 = org.joda.time.Days.daysIn(readableInterval17);
        int int20 = days18.getValue((int) (short) 0);
        org.joda.time.ReadableInterval readableInterval21 = null;
        org.joda.time.Days days22 = org.joda.time.Days.daysIn(readableInterval21);
        int int24 = days22.getValue((int) (short) 0);
        org.joda.time.Days days25 = org.joda.time.Days.FIVE;
        org.joda.time.Days days26 = days22.minus(days25);
        int int27 = days18.compareTo((org.joda.time.base.BaseSingleFieldPeriod) days25);
        java.lang.String str28 = days18.toString();
        org.joda.time.Days days29 = null;
        boolean boolean30 = days18.isGreaterThan(days29);
        org.joda.time.Period period31 = days18.toPeriod();
        org.joda.time.MutablePeriod mutablePeriod32 = days18.toMutablePeriod();
        boolean boolean33 = days0.isLessThan(days18);
        org.junit.Assert.assertNotNull(days0);
        org.junit.Assert.assertNotNull(days1);
        org.junit.Assert.assertNotNull(periodType2);
        org.junit.Assert.assertNotNull(days4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNotNull(days7);
        org.junit.Assert.assertNotNull(days8);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(days12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 2147483647 + "'", int14 == 2147483647);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "P2147483647D" + "'", str15, "P2147483647D");
        org.junit.Assert.assertNotNull(period16);
        org.junit.Assert.assertNotNull(days18);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertNotNull(days22);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertNotNull(days25);
        org.junit.Assert.assertNotNull(days26);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "P0D" + "'", str28, "P0D");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(period31);
        org.junit.Assert.assertNotNull(mutablePeriod32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
    }

    @Test
    public void test0275() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0275");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Days days1 = org.joda.time.Days.daysIn(readableInterval0);
        int int3 = days1.getValue((int) (short) 0);
        org.joda.time.ReadableInterval readableInterval4 = null;
        org.joda.time.Days days5 = org.joda.time.Days.daysIn(readableInterval4);
        int int7 = days5.getValue((int) (short) 0);
        org.joda.time.Days days8 = org.joda.time.Days.FIVE;
        org.joda.time.Days days9 = days5.minus(days8);
        int int10 = days1.compareTo((org.joda.time.base.BaseSingleFieldPeriod) days8);
        java.lang.String str11 = days1.toString();
        org.joda.time.Days days13 = days1.plus((int) '4');
        org.joda.time.PeriodType periodType14 = days13.getPeriodType();
        int int15 = days13.getDays();
        org.joda.time.Days days17 = days13.minus((int) ' ');
        int int18 = days13.getDays();
        org.junit.Assert.assertNotNull(days1);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(days5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(days8);
        org.junit.Assert.assertNotNull(days9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "P0D" + "'", str11, "P0D");
        org.junit.Assert.assertNotNull(days13);
        org.junit.Assert.assertNotNull(periodType14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 52 + "'", int15 == 52);
        org.junit.Assert.assertNotNull(days17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 52 + "'", int18 == 52);
    }

    @Test
    public void test0276() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0276");
        org.joda.time.Days days1 = org.joda.time.Days.days(97);
        org.joda.time.Days days3 = org.joda.time.Days.days((int) 'a');
        org.joda.time.Days days4 = org.joda.time.Days.SIX;
        org.joda.time.Days days6 = days4.plus(100);
        org.joda.time.ReadableInterval readableInterval7 = null;
        org.joda.time.Days days8 = org.joda.time.Days.daysIn(readableInterval7);
        int int10 = days8.getValue((int) (short) 0);
        org.joda.time.Days days11 = org.joda.time.Days.FIVE;
        org.joda.time.Days days12 = days8.minus(days11);
        org.joda.time.Days days13 = null;
        org.joda.time.Days days14 = days8.minus(days13);
        org.joda.time.Days days16 = days8.minus((-1));
        org.joda.time.DurationFieldType durationFieldType17 = days8.getFieldType();
        int int18 = days4.get(durationFieldType17);
        int int19 = days3.get(durationFieldType17);
        org.joda.time.Days days21 = org.joda.time.Days.days((-1));
        boolean boolean22 = days3.isGreaterThan(days21);
        org.joda.time.Days days24 = days3.dividedBy(2147483647);
        boolean boolean25 = days1.isLessThan(days3);
        org.joda.time.DurationFieldType durationFieldType26 = null;
        boolean boolean27 = days1.isSupported(durationFieldType26);
        org.junit.Assert.assertNotNull(days1);
        org.junit.Assert.assertNotNull(days3);
        org.junit.Assert.assertNotNull(days4);
        org.junit.Assert.assertNotNull(days6);
        org.junit.Assert.assertNotNull(days8);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(days11);
        org.junit.Assert.assertNotNull(days12);
        org.junit.Assert.assertNotNull(days14);
        org.junit.Assert.assertNotNull(days16);
        org.junit.Assert.assertNotNull(durationFieldType17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 6 + "'", int18 == 6);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 97 + "'", int19 == 97);
        org.junit.Assert.assertNotNull(days21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(days24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
    }

    @Test
    public void test0277() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0277");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Days days1 = org.joda.time.Days.daysIn(readableInterval0);
        org.joda.time.Days days3 = days1.plus((int) (byte) 10);
        org.joda.time.DurationFieldType durationFieldType4 = days3.getFieldType();
        org.joda.time.Days days6 = days3.plus(0);
        org.joda.time.Period period7 = days3.toPeriod();
        org.joda.time.Days days9 = days3.minus(0);
        org.junit.Assert.assertNotNull(days1);
        org.junit.Assert.assertNotNull(days3);
        org.junit.Assert.assertNotNull(durationFieldType4);
        org.junit.Assert.assertNotNull(days6);
        org.junit.Assert.assertNotNull(period7);
        org.junit.Assert.assertNotNull(days9);
    }

    @Test
    public void test0278() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0278");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Days days1 = org.joda.time.Days.daysIn(readableInterval0);
        org.joda.time.Days days3 = days1.plus((int) (byte) 10);
        org.joda.time.Days days5 = days3.dividedBy((int) 'a');
        org.joda.time.Days days7 = days3.dividedBy(5);
        org.joda.time.Days days9 = days3.plus((int) (byte) -1);
        org.joda.time.Days days11 = days3.minus((int) (byte) 100);
        org.joda.time.Days days12 = days11.negated();
        int int13 = days11.size();
        org.joda.time.ReadableInterval readableInterval14 = null;
        org.joda.time.Days days15 = org.joda.time.Days.daysIn(readableInterval14);
        int int17 = days15.getValue((int) (short) 0);
        org.joda.time.Days days18 = org.joda.time.Days.FIVE;
        org.joda.time.Days days19 = days15.minus(days18);
        org.joda.time.Days days20 = null;
        org.joda.time.Days days21 = days15.minus(days20);
        org.joda.time.Duration duration22 = days15.toStandardDuration();
        org.joda.time.DurationFieldType durationFieldType23 = days15.getFieldType();
        org.joda.time.Days days24 = days11.minus(days15);
        org.joda.time.ReadableInterval readableInterval25 = null;
        org.joda.time.Days days26 = org.joda.time.Days.daysIn(readableInterval25);
        org.joda.time.Days days28 = days26.plus((int) (byte) 10);
        int int29 = days28.getDays();
        int int30 = days28.getDays();
        boolean boolean31 = days15.equals((java.lang.Object) days28);
        org.joda.time.Days days33 = days15.dividedBy(8);
        org.joda.time.Days days34 = org.joda.time.Days.MAX_VALUE;
        org.joda.time.Days days35 = days34.negated();
        org.joda.time.PeriodType periodType36 = days34.getPeriodType();
        org.joda.time.ReadableInterval readableInterval37 = null;
        org.joda.time.Days days38 = org.joda.time.Days.daysIn(readableInterval37);
        int int40 = days38.getValue((int) (short) 0);
        org.joda.time.Days days41 = org.joda.time.Days.FIVE;
        org.joda.time.Days days42 = days38.minus(days41);
        org.joda.time.DurationFieldType durationFieldType43 = null;
        int int44 = days41.get(durationFieldType43);
        org.joda.time.Days days46 = days41.dividedBy(100);
        int int47 = days34.compareTo((org.joda.time.base.BaseSingleFieldPeriod) days41);
        org.joda.time.MutablePeriod mutablePeriod48 = days34.toMutablePeriod();
        org.joda.time.Days days49 = days33.plus(days34);
        org.joda.time.ReadableInterval readableInterval50 = null;
        org.joda.time.Days days51 = org.joda.time.Days.daysIn(readableInterval50);
        int int53 = days51.getValue((int) (short) 0);
        org.joda.time.ReadableInterval readableInterval54 = null;
        org.joda.time.Days days55 = org.joda.time.Days.daysIn(readableInterval54);
        int int57 = days55.getValue((int) (short) 0);
        org.joda.time.Days days58 = org.joda.time.Days.FIVE;
        org.joda.time.Days days59 = days55.minus(days58);
        int int60 = days51.compareTo((org.joda.time.base.BaseSingleFieldPeriod) days58);
        org.joda.time.ReadableInterval readableInterval61 = null;
        org.joda.time.Days days62 = org.joda.time.Days.daysIn(readableInterval61);
        int int64 = days62.getValue((int) (short) 0);
        org.joda.time.Days days65 = org.joda.time.Days.FIVE;
        org.joda.time.Days days66 = days62.minus(days65);
        org.joda.time.DurationFieldType durationFieldType67 = null;
        boolean boolean68 = days65.isSupported(durationFieldType67);
        org.joda.time.DurationFieldType durationFieldType70 = days65.getFieldType(0);
        int int71 = days51.get(durationFieldType70);
        boolean boolean72 = days34.isSupported(durationFieldType70);
        org.junit.Assert.assertNotNull(days1);
        org.junit.Assert.assertNotNull(days3);
        org.junit.Assert.assertNotNull(days5);
        org.junit.Assert.assertNotNull(days7);
        org.junit.Assert.assertNotNull(days9);
        org.junit.Assert.assertNotNull(days11);
        org.junit.Assert.assertNotNull(days12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertNotNull(days15);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNotNull(days18);
        org.junit.Assert.assertNotNull(days19);
        org.junit.Assert.assertNotNull(days21);
        org.junit.Assert.assertNotNull(duration22);
        org.junit.Assert.assertNotNull(durationFieldType23);
        org.junit.Assert.assertNotNull(days24);
        org.junit.Assert.assertNotNull(days26);
        org.junit.Assert.assertNotNull(days28);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 10 + "'", int29 == 10);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 10 + "'", int30 == 10);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(days33);
        org.junit.Assert.assertNotNull(days34);
        org.junit.Assert.assertNotNull(days35);
        org.junit.Assert.assertNotNull(periodType36);
        org.junit.Assert.assertNotNull(days38);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertNotNull(days41);
        org.junit.Assert.assertNotNull(days42);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 0 + "'", int44 == 0);
        org.junit.Assert.assertNotNull(days46);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 1 + "'", int47 == 1);
        org.junit.Assert.assertNotNull(mutablePeriod48);
        org.junit.Assert.assertNotNull(days49);
        org.junit.Assert.assertNotNull(days51);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 0 + "'", int53 == 0);
        org.junit.Assert.assertNotNull(days55);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 0 + "'", int57 == 0);
        org.junit.Assert.assertNotNull(days58);
        org.junit.Assert.assertNotNull(days59);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + (-1) + "'", int60 == (-1));
        org.junit.Assert.assertNotNull(days62);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 0 + "'", int64 == 0);
        org.junit.Assert.assertNotNull(days65);
        org.junit.Assert.assertNotNull(days66);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(durationFieldType70);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 0 + "'", int71 == 0);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
    }

    @Test
    public void test0279() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0279");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Days days1 = org.joda.time.Days.daysIn(readableInterval0);
        int int3 = days1.getValue((int) (short) 0);
        org.joda.time.Days days4 = org.joda.time.Days.FIVE;
        org.joda.time.Days days5 = days1.minus(days4);
        org.joda.time.DurationFieldType durationFieldType6 = null;
        boolean boolean7 = days4.isSupported(durationFieldType6);
        org.joda.time.DurationFieldType durationFieldType9 = days4.getFieldType(0);
        org.joda.time.ReadableInterval readableInterval10 = null;
        org.joda.time.Days days11 = org.joda.time.Days.daysIn(readableInterval10);
        int int13 = days11.getValue((int) (short) 0);
        org.joda.time.Days days14 = org.joda.time.Days.FIVE;
        org.joda.time.Days days15 = days11.minus(days14);
        org.joda.time.Days days16 = null;
        org.joda.time.Days days17 = days11.minus(days16);
        org.joda.time.Days days19 = days11.minus((-1));
        org.joda.time.DurationFieldType durationFieldType20 = days11.getFieldType();
        boolean boolean21 = days4.isGreaterThan(days11);
        org.joda.time.ReadableInterval readableInterval22 = null;
        org.joda.time.Days days23 = org.joda.time.Days.daysIn(readableInterval22);
        org.joda.time.Days days25 = days23.plus((int) (byte) 10);
        org.joda.time.Days days26 = days11.plus(days25);
        org.joda.time.Days days27 = org.joda.time.Days.standardDaysIn((org.joda.time.ReadablePeriod) days11);
        org.joda.time.Duration duration28 = days27.toStandardDuration();
        org.joda.time.Days days30 = days27.multipliedBy((int) (byte) 1);
        org.joda.time.Days days32 = days27.plus((int) (short) -1);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.DurationFieldType durationFieldType34 = days27.getFieldType((int) ' ');
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 32");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(days1);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(days4);
        org.junit.Assert.assertNotNull(days5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(durationFieldType9);
        org.junit.Assert.assertNotNull(days11);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(days14);
        org.junit.Assert.assertNotNull(days15);
        org.junit.Assert.assertNotNull(days17);
        org.junit.Assert.assertNotNull(days19);
        org.junit.Assert.assertNotNull(durationFieldType20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(days23);
        org.junit.Assert.assertNotNull(days25);
        org.junit.Assert.assertNotNull(days26);
        org.junit.Assert.assertNotNull(days27);
        org.junit.Assert.assertNotNull(duration28);
        org.junit.Assert.assertNotNull(days30);
        org.junit.Assert.assertNotNull(days32);
    }

    @Test
    public void test0280() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0280");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Days days1 = org.joda.time.Days.daysIn(readableInterval0);
        org.joda.time.Days days3 = days1.plus((int) (byte) 10);
        org.joda.time.Days days5 = days3.dividedBy((int) 'a');
        org.joda.time.Days days7 = days3.plus((int) ' ');
        org.joda.time.Days days8 = org.joda.time.Days.standardDaysIn((org.joda.time.ReadablePeriod) days7);
        org.joda.time.ReadableInterval readableInterval9 = null;
        org.joda.time.Days days10 = org.joda.time.Days.daysIn(readableInterval9);
        int int12 = days10.getValue((int) (short) 0);
        org.joda.time.ReadableInterval readableInterval13 = null;
        org.joda.time.Days days14 = org.joda.time.Days.daysIn(readableInterval13);
        int int16 = days14.getValue((int) (short) 0);
        org.joda.time.Days days17 = org.joda.time.Days.FIVE;
        org.joda.time.Days days18 = days14.minus(days17);
        int int19 = days10.compareTo((org.joda.time.base.BaseSingleFieldPeriod) days17);
        java.lang.String str20 = days10.toString();
        org.joda.time.Days days22 = days10.plus((int) '4');
        org.joda.time.PeriodType periodType23 = days22.getPeriodType();
        int int24 = days22.getDays();
        org.joda.time.Days days26 = days22.minus((int) ' ');
        org.joda.time.ReadableInterval readableInterval27 = null;
        org.joda.time.Days days28 = org.joda.time.Days.daysIn(readableInterval27);
        org.joda.time.Days days30 = days28.plus((int) (byte) 10);
        org.joda.time.Days days32 = days30.dividedBy((int) 'a');
        org.joda.time.Days days34 = days30.dividedBy(5);
        org.joda.time.Days days36 = days30.plus((int) (byte) -1);
        org.joda.time.Days days37 = days22.plus(days30);
        boolean boolean38 = days8.isLessThan(days37);
        org.joda.time.ReadableInterval readableInterval39 = null;
        org.joda.time.Days days40 = org.joda.time.Days.daysIn(readableInterval39);
        org.joda.time.Days days42 = days40.plus((int) (byte) 10);
        int int43 = days42.getDays();
        int int44 = days42.getDays();
        boolean boolean45 = days8.isGreaterThan(days42);
        org.joda.time.Days days47 = days8.plus(42);
        org.junit.Assert.assertNotNull(days1);
        org.junit.Assert.assertNotNull(days3);
        org.junit.Assert.assertNotNull(days5);
        org.junit.Assert.assertNotNull(days7);
        org.junit.Assert.assertNotNull(days8);
        org.junit.Assert.assertNotNull(days10);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNotNull(days14);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertNotNull(days17);
        org.junit.Assert.assertNotNull(days18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "P0D" + "'", str20, "P0D");
        org.junit.Assert.assertNotNull(days22);
        org.junit.Assert.assertNotNull(periodType23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 52 + "'", int24 == 52);
        org.junit.Assert.assertNotNull(days26);
        org.junit.Assert.assertNotNull(days28);
        org.junit.Assert.assertNotNull(days30);
        org.junit.Assert.assertNotNull(days32);
        org.junit.Assert.assertNotNull(days34);
        org.junit.Assert.assertNotNull(days36);
        org.junit.Assert.assertNotNull(days37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(days40);
        org.junit.Assert.assertNotNull(days42);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 10 + "'", int43 == 10);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 10 + "'", int44 == 10);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(days47);
    }

    @Test
    public void test0281() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0281");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Days days1 = org.joda.time.Days.daysIn(readableInterval0);
        org.joda.time.Days days3 = days1.plus((int) (byte) 10);
        boolean boolean5 = days1.equals((java.lang.Object) '4');
        org.joda.time.Days days7 = days1.plus(0);
        org.junit.Assert.assertNotNull(days1);
        org.junit.Assert.assertNotNull(days3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(days7);
    }

    @Test
    public void test0282() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0282");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Days days1 = org.joda.time.Days.daysIn(readableInterval0);
        int int3 = days1.getValue((int) (short) 0);
        org.joda.time.Days days4 = org.joda.time.Days.FIVE;
        org.joda.time.Days days5 = days1.minus(days4);
        org.joda.time.Days days6 = null;
        org.joda.time.Days days7 = days1.minus(days6);
        org.joda.time.ReadableInterval readableInterval8 = null;
        org.joda.time.Days days9 = org.joda.time.Days.daysIn(readableInterval8);
        int int11 = days9.getValue((int) (short) 0);
        org.joda.time.Days days12 = org.joda.time.Days.FIVE;
        org.joda.time.Days days13 = days9.minus(days12);
        org.joda.time.DurationFieldType durationFieldType14 = null;
        int int15 = days12.get(durationFieldType14);
        org.joda.time.DurationFieldType durationFieldType16 = null;
        int int17 = days12.get(durationFieldType16);
        boolean boolean19 = days12.equals((java.lang.Object) 0L);
        int int20 = days1.compareTo((org.joda.time.base.BaseSingleFieldPeriod) days12);
        int int21 = days12.size();
        org.joda.time.Days days23 = days12.plus((int) '#');
        org.junit.Assert.assertNotNull(days1);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(days4);
        org.junit.Assert.assertNotNull(days5);
        org.junit.Assert.assertNotNull(days7);
        org.junit.Assert.assertNotNull(days9);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNotNull(days12);
        org.junit.Assert.assertNotNull(days13);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 1 + "'", int21 == 1);
        org.junit.Assert.assertNotNull(days23);
    }

    @Test
    public void test0283() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0283");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Days days1 = org.joda.time.Days.daysIn(readableInterval0);
        org.joda.time.ReadableInterval readableInterval2 = null;
        org.joda.time.Days days3 = org.joda.time.Days.daysIn(readableInterval2);
        int int5 = days3.getValue((int) (short) 0);
        org.joda.time.ReadableInterval readableInterval6 = null;
        org.joda.time.Days days7 = org.joda.time.Days.daysIn(readableInterval6);
        int int9 = days7.getValue((int) (short) 0);
        org.joda.time.Days days10 = org.joda.time.Days.FIVE;
        org.joda.time.Days days11 = days7.minus(days10);
        int int12 = days3.compareTo((org.joda.time.base.BaseSingleFieldPeriod) days10);
        org.joda.time.DurationFieldType durationFieldType13 = days10.getFieldType();
        org.joda.time.DurationFieldType durationFieldType15 = days10.getFieldType((int) (byte) 0);
        boolean boolean16 = days1.isLessThan(days10);
        org.joda.time.Days days17 = org.joda.time.Days.standardDaysIn((org.joda.time.ReadablePeriod) days1);
        org.junit.Assert.assertNotNull(days1);
        org.junit.Assert.assertNotNull(days3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(days7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNotNull(days10);
        org.junit.Assert.assertNotNull(days11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(durationFieldType13);
        org.junit.Assert.assertNotNull(durationFieldType15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(days17);
    }

    @Test
    public void test0284() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0284");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Days days1 = org.joda.time.Days.daysIn(readableInterval0);
        int int3 = days1.getValue((int) (short) 0);
        org.joda.time.Days days4 = org.joda.time.Days.FIVE;
        org.joda.time.Days days5 = days1.minus(days4);
        org.joda.time.ReadableInterval readableInterval6 = null;
        org.joda.time.Days days7 = org.joda.time.Days.daysIn(readableInterval6);
        int int9 = days7.getValue((int) (short) 0);
        int int10 = days1.compareTo((org.joda.time.base.BaseSingleFieldPeriod) days7);
        org.joda.time.ReadableInterval readableInterval11 = null;
        org.joda.time.Days days12 = org.joda.time.Days.daysIn(readableInterval11);
        int int14 = days12.getValue((int) (short) 0);
        org.joda.time.Days days15 = org.joda.time.Days.FIVE;
        org.joda.time.Days days16 = days12.minus(days15);
        org.joda.time.DurationFieldType durationFieldType17 = null;
        int int18 = days15.get(durationFieldType17);
        org.joda.time.DurationFieldType durationFieldType19 = null;
        int int20 = days15.get(durationFieldType19);
        boolean boolean22 = days15.equals((java.lang.Object) false);
        boolean boolean23 = days7.equals((java.lang.Object) days15);
        org.joda.time.ReadableInterval readableInterval24 = null;
        org.joda.time.Days days25 = org.joda.time.Days.daysIn(readableInterval24);
        int int27 = days25.getValue((int) (short) 0);
        org.joda.time.Days days28 = org.joda.time.Days.FIVE;
        org.joda.time.Days days29 = days25.minus(days28);
        org.joda.time.Days days30 = null;
        org.joda.time.Days days31 = days25.minus(days30);
        org.joda.time.Days days33 = days25.minus((-1));
        int int34 = days25.size();
        org.joda.time.Days days35 = days15.minus(days25);
        org.joda.time.ReadableInterval readableInterval36 = null;
        org.joda.time.Days days37 = org.joda.time.Days.daysIn(readableInterval36);
        org.joda.time.ReadableInterval readableInterval38 = null;
        org.joda.time.Days days39 = org.joda.time.Days.daysIn(readableInterval38);
        int int41 = days39.getValue((int) (short) 0);
        org.joda.time.Days days42 = org.joda.time.Days.FIVE;
        org.joda.time.Days days43 = days39.minus(days42);
        org.joda.time.DurationFieldType durationFieldType44 = null;
        boolean boolean45 = days42.isSupported(durationFieldType44);
        org.joda.time.DurationFieldType durationFieldType47 = days42.getFieldType(0);
        int int48 = days37.get(durationFieldType47);
        org.joda.time.ReadableInterval readableInterval49 = null;
        org.joda.time.Days days50 = org.joda.time.Days.daysIn(readableInterval49);
        int int52 = days50.getValue((int) (short) 0);
        org.joda.time.Days days53 = org.joda.time.Days.FIVE;
        org.joda.time.Days days54 = days50.minus(days53);
        org.joda.time.DurationFieldType durationFieldType55 = null;
        int int56 = days53.get(durationFieldType55);
        org.joda.time.DurationFieldType durationFieldType57 = null;
        int int58 = days53.get(durationFieldType57);
        boolean boolean60 = days53.equals((java.lang.Object) 0L);
        boolean boolean61 = days37.isGreaterThan(days53);
        org.joda.time.ReadableInterval readableInterval62 = null;
        org.joda.time.Days days63 = org.joda.time.Days.daysIn(readableInterval62);
        int int65 = days63.getValue((int) (short) 0);
        org.joda.time.Days days66 = org.joda.time.Days.FIVE;
        org.joda.time.Days days67 = days63.minus(days66);
        org.joda.time.DurationFieldType durationFieldType68 = null;
        int int69 = days66.get(durationFieldType68);
        org.joda.time.DurationFieldType durationFieldType70 = null;
        int int71 = days66.get(durationFieldType70);
        boolean boolean73 = days66.equals((java.lang.Object) 0L);
        org.joda.time.Period period74 = days66.toPeriod();
        org.joda.time.Days days75 = days37.plus(days66);
        org.joda.time.ReadableInterval readableInterval76 = null;
        org.joda.time.Days days77 = org.joda.time.Days.daysIn(readableInterval76);
        int int79 = days77.getValue((int) (short) 0);
        org.joda.time.Period period80 = days77.toPeriod();
        org.joda.time.Days days81 = org.joda.time.Days.standardDaysIn((org.joda.time.ReadablePeriod) days77);
        boolean boolean82 = days37.equals((java.lang.Object) days81);
        boolean boolean83 = days35.isLessThan(days37);
        org.joda.time.ReadableInterval readableInterval84 = null;
        org.joda.time.Days days85 = org.joda.time.Days.daysIn(readableInterval84);
        int int87 = days85.getValue((int) (short) 0);
        org.joda.time.ReadableInterval readableInterval88 = null;
        org.joda.time.Days days89 = org.joda.time.Days.daysIn(readableInterval88);
        int int91 = days89.getValue((int) (short) 0);
        org.joda.time.Days days92 = org.joda.time.Days.FIVE;
        org.joda.time.Days days93 = days89.minus(days92);
        int int94 = days85.compareTo((org.joda.time.base.BaseSingleFieldPeriod) days92);
        org.joda.time.MutablePeriod mutablePeriod95 = days92.toMutablePeriod();
        org.joda.time.Days days96 = days92.negated();
        int int97 = days35.compareTo((org.joda.time.base.BaseSingleFieldPeriod) days96);
        // The following exception was thrown during execution in test generation
        try {
            int int99 = days35.getValue((int) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: -1");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(days1);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(days4);
        org.junit.Assert.assertNotNull(days5);
        org.junit.Assert.assertNotNull(days7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(days12);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNotNull(days15);
        org.junit.Assert.assertNotNull(days16);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(days25);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertNotNull(days28);
        org.junit.Assert.assertNotNull(days29);
        org.junit.Assert.assertNotNull(days31);
        org.junit.Assert.assertNotNull(days33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 1 + "'", int34 == 1);
        org.junit.Assert.assertNotNull(days35);
        org.junit.Assert.assertNotNull(days37);
        org.junit.Assert.assertNotNull(days39);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0);
        org.junit.Assert.assertNotNull(days42);
        org.junit.Assert.assertNotNull(days43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(durationFieldType47);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 0 + "'", int48 == 0);
        org.junit.Assert.assertNotNull(days50);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 0 + "'", int52 == 0);
        org.junit.Assert.assertNotNull(days53);
        org.junit.Assert.assertNotNull(days54);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 0 + "'", int56 == 0);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 0 + "'", int58 == 0);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(days63);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 0 + "'", int65 == 0);
        org.junit.Assert.assertNotNull(days66);
        org.junit.Assert.assertNotNull(days67);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 0 + "'", int69 == 0);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 0 + "'", int71 == 0);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(period74);
        org.junit.Assert.assertNotNull(days75);
        org.junit.Assert.assertNotNull(days77);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + 0 + "'", int79 == 0);
        org.junit.Assert.assertNotNull(period80);
        org.junit.Assert.assertNotNull(days81);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertNotNull(days85);
        org.junit.Assert.assertTrue("'" + int87 + "' != '" + 0 + "'", int87 == 0);
        org.junit.Assert.assertNotNull(days89);
        org.junit.Assert.assertTrue("'" + int91 + "' != '" + 0 + "'", int91 == 0);
        org.junit.Assert.assertNotNull(days92);
        org.junit.Assert.assertNotNull(days93);
        org.junit.Assert.assertTrue("'" + int94 + "' != '" + (-1) + "'", int94 == (-1));
        org.junit.Assert.assertNotNull(mutablePeriod95);
        org.junit.Assert.assertNotNull(days96);
        org.junit.Assert.assertTrue("'" + int97 + "' != '" + 1 + "'", int97 == 1);
    }

    @Test
    public void test0285() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0285");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Days days1 = org.joda.time.Days.daysIn(readableInterval0);
        int int3 = days1.getValue((int) (short) 0);
        org.joda.time.Days days4 = org.joda.time.Days.FIVE;
        org.joda.time.Days days5 = days1.minus(days4);
        org.joda.time.Days days6 = null;
        org.joda.time.Days days7 = days1.minus(days6);
        org.joda.time.ReadableInterval readableInterval8 = null;
        org.joda.time.Days days9 = org.joda.time.Days.daysIn(readableInterval8);
        int int11 = days9.getValue((int) (short) 0);
        org.joda.time.Days days12 = org.joda.time.Days.FIVE;
        org.joda.time.Days days13 = days9.minus(days12);
        org.joda.time.DurationFieldType durationFieldType14 = null;
        int int15 = days12.get(durationFieldType14);
        org.joda.time.DurationFieldType durationFieldType16 = null;
        int int17 = days12.get(durationFieldType16);
        boolean boolean19 = days12.equals((java.lang.Object) 0L);
        int int20 = days1.compareTo((org.joda.time.base.BaseSingleFieldPeriod) days12);
        org.joda.time.Days days22 = days1.minus(52);
        org.joda.time.Period period23 = days1.toPeriod();
        org.joda.time.Days days24 = days1.negated();
        org.joda.time.Duration duration25 = days24.toStandardDuration();
        org.junit.Assert.assertNotNull(days1);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(days4);
        org.junit.Assert.assertNotNull(days5);
        org.junit.Assert.assertNotNull(days7);
        org.junit.Assert.assertNotNull(days9);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNotNull(days12);
        org.junit.Assert.assertNotNull(days13);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
        org.junit.Assert.assertNotNull(days22);
        org.junit.Assert.assertNotNull(period23);
        org.junit.Assert.assertNotNull(days24);
        org.junit.Assert.assertNotNull(duration25);
    }

    @Test
    public void test0286() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0286");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Days days1 = org.joda.time.Days.daysIn(readableInterval0);
        int int3 = days1.getValue((int) (short) 0);
        org.joda.time.Days days4 = org.joda.time.Days.FIVE;
        org.joda.time.Days days5 = days1.minus(days4);
        org.joda.time.DurationFieldType durationFieldType6 = null;
        int int7 = days4.get(durationFieldType6);
        int int8 = days4.getDays();
        org.joda.time.Days days9 = days4.negated();
        int int10 = days9.size();
        org.joda.time.ReadableInterval readableInterval11 = null;
        org.joda.time.Days days12 = org.joda.time.Days.daysIn(readableInterval11);
        int int14 = days12.getValue((int) (short) 0);
        org.joda.time.Days days15 = org.joda.time.Days.FIVE;
        org.joda.time.Days days16 = days12.minus(days15);
        org.joda.time.ReadableInterval readableInterval17 = null;
        org.joda.time.Days days18 = org.joda.time.Days.daysIn(readableInterval17);
        int int20 = days18.getValue((int) (short) 0);
        int int21 = days12.compareTo((org.joda.time.base.BaseSingleFieldPeriod) days18);
        int int22 = days9.compareTo((org.joda.time.base.BaseSingleFieldPeriod) days12);
        org.joda.time.ReadableInterval readableInterval23 = null;
        org.joda.time.Days days24 = org.joda.time.Days.daysIn(readableInterval23);
        int int26 = days24.getValue((int) (short) 0);
        org.joda.time.Days days27 = org.joda.time.Days.FIVE;
        org.joda.time.Days days28 = days24.minus(days27);
        org.joda.time.DurationFieldType durationFieldType29 = null;
        boolean boolean30 = days27.isSupported(durationFieldType29);
        org.joda.time.DurationFieldType durationFieldType32 = days27.getFieldType(0);
        org.joda.time.ReadableInterval readableInterval33 = null;
        org.joda.time.Days days34 = org.joda.time.Days.daysIn(readableInterval33);
        int int36 = days34.getValue((int) (short) 0);
        org.joda.time.Days days37 = org.joda.time.Days.FIVE;
        org.joda.time.Days days38 = days34.minus(days37);
        org.joda.time.Days days39 = null;
        org.joda.time.Days days40 = days34.minus(days39);
        org.joda.time.Days days42 = days34.minus((-1));
        org.joda.time.DurationFieldType durationFieldType43 = days34.getFieldType();
        boolean boolean44 = days27.isGreaterThan(days34);
        org.joda.time.ReadableInterval readableInterval45 = null;
        org.joda.time.Days days46 = org.joda.time.Days.daysIn(readableInterval45);
        org.joda.time.Days days48 = days46.plus((int) (byte) 10);
        org.joda.time.Days days49 = days34.plus(days48);
        org.joda.time.ReadableInterval readableInterval50 = null;
        org.joda.time.Days days51 = org.joda.time.Days.daysIn(readableInterval50);
        int int53 = days51.getValue((int) (short) 0);
        org.joda.time.Days days54 = org.joda.time.Days.FIVE;
        org.joda.time.Days days55 = days51.minus(days54);
        org.joda.time.Days days56 = null;
        org.joda.time.Days days57 = days51.minus(days56);
        org.joda.time.Duration duration58 = days51.toStandardDuration();
        org.joda.time.Days days59 = days49.minus(days51);
        org.joda.time.Duration duration60 = days59.toStandardDuration();
        org.joda.time.Days days62 = days59.minus(5);
        org.joda.time.Days days63 = org.joda.time.Days.standardDaysIn((org.joda.time.ReadablePeriod) days59);
        boolean boolean64 = days9.isLessThan(days63);
        org.joda.time.Days days65 = org.joda.time.Days.MAX_VALUE;
        int int66 = days65.getDays();
        org.joda.time.Days days67 = days63.minus(days65);
        org.joda.time.ReadableInterval readableInterval68 = null;
        org.joda.time.Days days69 = org.joda.time.Days.daysIn(readableInterval68);
        int int71 = days69.getValue((int) (short) 0);
        org.joda.time.Period period72 = days69.toPeriod();
        org.joda.time.Days days73 = org.joda.time.Days.standardDaysIn((org.joda.time.ReadablePeriod) days69);
        org.joda.time.Duration duration74 = days69.toStandardDuration();
        org.joda.time.DurationFieldType durationFieldType76 = days69.getFieldType((int) (short) 0);
        boolean boolean77 = days67.isSupported(durationFieldType76);
        org.junit.Assert.assertNotNull(days1);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(days4);
        org.junit.Assert.assertNotNull(days5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 5 + "'", int8 == 5);
        org.junit.Assert.assertNotNull(days9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1 + "'", int10 == 1);
        org.junit.Assert.assertNotNull(days12);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNotNull(days15);
        org.junit.Assert.assertNotNull(days16);
        org.junit.Assert.assertNotNull(days18);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertNotNull(days24);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertNotNull(days27);
        org.junit.Assert.assertNotNull(days28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(durationFieldType32);
        org.junit.Assert.assertNotNull(days34);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertNotNull(days37);
        org.junit.Assert.assertNotNull(days38);
        org.junit.Assert.assertNotNull(days40);
        org.junit.Assert.assertNotNull(days42);
        org.junit.Assert.assertNotNull(durationFieldType43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(days46);
        org.junit.Assert.assertNotNull(days48);
        org.junit.Assert.assertNotNull(days49);
        org.junit.Assert.assertNotNull(days51);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 0 + "'", int53 == 0);
        org.junit.Assert.assertNotNull(days54);
        org.junit.Assert.assertNotNull(days55);
        org.junit.Assert.assertNotNull(days57);
        org.junit.Assert.assertNotNull(duration58);
        org.junit.Assert.assertNotNull(days59);
        org.junit.Assert.assertNotNull(duration60);
        org.junit.Assert.assertNotNull(days62);
        org.junit.Assert.assertNotNull(days63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(days65);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 2147483647 + "'", int66 == 2147483647);
        org.junit.Assert.assertNotNull(days67);
        org.junit.Assert.assertNotNull(days69);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 0 + "'", int71 == 0);
        org.junit.Assert.assertNotNull(period72);
        org.junit.Assert.assertNotNull(days73);
        org.junit.Assert.assertNotNull(duration74);
        org.junit.Assert.assertNotNull(durationFieldType76);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
    }

    @Test
    public void test0287() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0287");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Days days1 = org.joda.time.Days.daysIn(readableInterval0);
        int int3 = days1.getValue((int) (short) 0);
        org.joda.time.Days days4 = org.joda.time.Days.FIVE;
        org.joda.time.Days days5 = days1.minus(days4);
        org.joda.time.DurationFieldType durationFieldType6 = null;
        boolean boolean7 = days4.isSupported(durationFieldType6);
        org.joda.time.DurationFieldType durationFieldType9 = days4.getFieldType(0);
        org.joda.time.ReadableInterval readableInterval10 = null;
        org.joda.time.Days days11 = org.joda.time.Days.daysIn(readableInterval10);
        int int13 = days11.getValue((int) (short) 0);
        org.joda.time.Days days14 = org.joda.time.Days.FIVE;
        org.joda.time.Days days15 = days11.minus(days14);
        org.joda.time.Days days16 = null;
        org.joda.time.Days days17 = days11.minus(days16);
        org.joda.time.Days days19 = days11.minus((-1));
        org.joda.time.DurationFieldType durationFieldType20 = days11.getFieldType();
        boolean boolean21 = days4.isGreaterThan(days11);
        org.joda.time.Days days22 = org.joda.time.Days.THREE;
        org.joda.time.ReadableInterval readableInterval23 = null;
        org.joda.time.Days days24 = org.joda.time.Days.daysIn(readableInterval23);
        org.joda.time.ReadableInterval readableInterval25 = null;
        org.joda.time.Days days26 = org.joda.time.Days.daysIn(readableInterval25);
        int int28 = days26.getValue((int) (short) 0);
        org.joda.time.Days days29 = org.joda.time.Days.FIVE;
        org.joda.time.Days days30 = days26.minus(days29);
        org.joda.time.DurationFieldType durationFieldType31 = null;
        boolean boolean32 = days29.isSupported(durationFieldType31);
        org.joda.time.DurationFieldType durationFieldType34 = days29.getFieldType(0);
        int int35 = days24.get(durationFieldType34);
        org.joda.time.ReadableInterval readableInterval36 = null;
        org.joda.time.Days days37 = org.joda.time.Days.daysIn(readableInterval36);
        int int39 = days37.getValue((int) (short) 0);
        org.joda.time.ReadableInterval readableInterval40 = null;
        org.joda.time.Days days41 = org.joda.time.Days.daysIn(readableInterval40);
        int int43 = days41.getValue((int) (short) 0);
        org.joda.time.Days days44 = org.joda.time.Days.FIVE;
        org.joda.time.Days days45 = days41.minus(days44);
        int int46 = days37.compareTo((org.joda.time.base.BaseSingleFieldPeriod) days44);
        java.lang.String str47 = days37.toString();
        org.joda.time.Days days48 = null;
        boolean boolean49 = days37.isGreaterThan(days48);
        org.joda.time.Period period50 = days37.toPeriod();
        org.joda.time.Days days51 = days24.plus(days37);
        boolean boolean52 = days22.isLessThan(days37);
        org.joda.time.Days days53 = days4.minus(days22);
        org.joda.time.Days days55 = days53.plus((int) (byte) 10);
        org.junit.Assert.assertNotNull(days1);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(days4);
        org.junit.Assert.assertNotNull(days5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(durationFieldType9);
        org.junit.Assert.assertNotNull(days11);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(days14);
        org.junit.Assert.assertNotNull(days15);
        org.junit.Assert.assertNotNull(days17);
        org.junit.Assert.assertNotNull(days19);
        org.junit.Assert.assertNotNull(durationFieldType20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(days22);
        org.junit.Assert.assertNotNull(days24);
        org.junit.Assert.assertNotNull(days26);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertNotNull(days29);
        org.junit.Assert.assertNotNull(days30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(durationFieldType34);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertNotNull(days37);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertNotNull(days41);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0);
        org.junit.Assert.assertNotNull(days44);
        org.junit.Assert.assertNotNull(days45);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + (-1) + "'", int46 == (-1));
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "P0D" + "'", str47, "P0D");
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(period50);
        org.junit.Assert.assertNotNull(days51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(days53);
        org.junit.Assert.assertNotNull(days55);
    }

    @Test
    public void test0288() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0288");
        org.joda.time.Days days0 = org.joda.time.Days.ZERO;
        org.joda.time.ReadableInterval readableInterval1 = null;
        org.joda.time.Days days2 = org.joda.time.Days.daysIn(readableInterval1);
        int int4 = days2.getValue((int) (short) 0);
        org.joda.time.Days days5 = org.joda.time.Days.FIVE;
        org.joda.time.Days days6 = days2.minus(days5);
        org.joda.time.Days days7 = null;
        org.joda.time.Days days8 = days2.minus(days7);
        org.joda.time.Duration duration9 = days2.toStandardDuration();
        org.joda.time.DurationFieldType durationFieldType10 = days2.getFieldType();
        org.joda.time.Days days11 = days0.minus(days2);
        org.joda.time.Days days13 = days11.plus((int) (byte) 100);
        org.joda.time.ReadableInterval readableInterval14 = null;
        org.joda.time.Days days15 = org.joda.time.Days.daysIn(readableInterval14);
        int int17 = days15.getValue((int) (short) 0);
        org.joda.time.ReadableInterval readableInterval18 = null;
        org.joda.time.Days days19 = org.joda.time.Days.daysIn(readableInterval18);
        int int21 = days19.getValue((int) (short) 0);
        org.joda.time.Days days22 = org.joda.time.Days.FIVE;
        org.joda.time.Days days23 = days19.minus(days22);
        int int24 = days15.compareTo((org.joda.time.base.BaseSingleFieldPeriod) days22);
        java.lang.String str25 = days15.toString();
        org.joda.time.Days days27 = days15.plus((int) '4');
        org.joda.time.ReadableInterval readableInterval28 = null;
        org.joda.time.Days days29 = org.joda.time.Days.daysIn(readableInterval28);
        int int31 = days29.getValue((int) (short) 0);
        org.joda.time.Days days32 = org.joda.time.Days.FIVE;
        org.joda.time.Days days33 = days29.minus(days32);
        org.joda.time.DurationFieldType durationFieldType34 = null;
        boolean boolean35 = days32.isSupported(durationFieldType34);
        org.joda.time.DurationFieldType durationFieldType37 = days32.getFieldType(0);
        org.joda.time.ReadableInterval readableInterval38 = null;
        org.joda.time.Days days39 = org.joda.time.Days.daysIn(readableInterval38);
        int int41 = days39.getValue((int) (short) 0);
        org.joda.time.Days days42 = org.joda.time.Days.FIVE;
        org.joda.time.Days days43 = days39.minus(days42);
        org.joda.time.Days days44 = null;
        org.joda.time.Days days45 = days39.minus(days44);
        org.joda.time.Days days47 = days39.minus((-1));
        org.joda.time.DurationFieldType durationFieldType48 = days39.getFieldType();
        boolean boolean49 = days32.isGreaterThan(days39);
        org.joda.time.ReadableInterval readableInterval50 = null;
        org.joda.time.Days days51 = org.joda.time.Days.daysIn(readableInterval50);
        org.joda.time.Days days53 = days51.plus((int) (byte) 10);
        org.joda.time.Days days54 = days39.plus(days53);
        org.joda.time.ReadableInterval readableInterval55 = null;
        org.joda.time.Days days56 = org.joda.time.Days.daysIn(readableInterval55);
        int int58 = days56.getValue((int) (short) 0);
        org.joda.time.Days days59 = org.joda.time.Days.FIVE;
        org.joda.time.Days days60 = days56.minus(days59);
        org.joda.time.Days days61 = null;
        org.joda.time.Days days62 = days56.minus(days61);
        org.joda.time.Duration duration63 = days56.toStandardDuration();
        org.joda.time.Days days64 = days54.minus(days56);
        org.joda.time.Duration duration65 = days64.toStandardDuration();
        org.joda.time.PeriodType periodType66 = days64.getPeriodType();
        org.joda.time.Days days67 = days27.plus(days64);
        org.joda.time.Days days68 = org.joda.time.Days.SIX;
        org.joda.time.Days days70 = days68.plus(100);
        org.joda.time.ReadableInterval readableInterval71 = null;
        org.joda.time.Days days72 = org.joda.time.Days.daysIn(readableInterval71);
        int int74 = days72.getValue((int) (short) 0);
        org.joda.time.Days days75 = org.joda.time.Days.FIVE;
        org.joda.time.Days days76 = days72.minus(days75);
        org.joda.time.Days days77 = null;
        org.joda.time.Days days78 = days72.minus(days77);
        org.joda.time.Days days80 = days72.minus((-1));
        org.joda.time.DurationFieldType durationFieldType81 = days72.getFieldType();
        int int82 = days68.get(durationFieldType81);
        int int83 = days64.get(durationFieldType81);
        org.joda.time.Days days85 = days64.dividedBy(10);
        int int86 = days11.compareTo((org.joda.time.base.BaseSingleFieldPeriod) days85);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.DurationFieldType durationFieldType88 = days85.getFieldType((int) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: -1");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(days0);
        org.junit.Assert.assertNotNull(days2);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(days5);
        org.junit.Assert.assertNotNull(days6);
        org.junit.Assert.assertNotNull(days8);
        org.junit.Assert.assertNotNull(duration9);
        org.junit.Assert.assertNotNull(durationFieldType10);
        org.junit.Assert.assertNotNull(days11);
        org.junit.Assert.assertNotNull(days13);
        org.junit.Assert.assertNotNull(days15);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNotNull(days19);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertNotNull(days22);
        org.junit.Assert.assertNotNull(days23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "P0D" + "'", str25, "P0D");
        org.junit.Assert.assertNotNull(days27);
        org.junit.Assert.assertNotNull(days29);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertNotNull(days32);
        org.junit.Assert.assertNotNull(days33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(durationFieldType37);
        org.junit.Assert.assertNotNull(days39);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0);
        org.junit.Assert.assertNotNull(days42);
        org.junit.Assert.assertNotNull(days43);
        org.junit.Assert.assertNotNull(days45);
        org.junit.Assert.assertNotNull(days47);
        org.junit.Assert.assertNotNull(durationFieldType48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(days51);
        org.junit.Assert.assertNotNull(days53);
        org.junit.Assert.assertNotNull(days54);
        org.junit.Assert.assertNotNull(days56);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 0 + "'", int58 == 0);
        org.junit.Assert.assertNotNull(days59);
        org.junit.Assert.assertNotNull(days60);
        org.junit.Assert.assertNotNull(days62);
        org.junit.Assert.assertNotNull(duration63);
        org.junit.Assert.assertNotNull(days64);
        org.junit.Assert.assertNotNull(duration65);
        org.junit.Assert.assertNotNull(periodType66);
        org.junit.Assert.assertNotNull(days67);
        org.junit.Assert.assertNotNull(days68);
        org.junit.Assert.assertNotNull(days70);
        org.junit.Assert.assertNotNull(days72);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 0 + "'", int74 == 0);
        org.junit.Assert.assertNotNull(days75);
        org.junit.Assert.assertNotNull(days76);
        org.junit.Assert.assertNotNull(days78);
        org.junit.Assert.assertNotNull(days80);
        org.junit.Assert.assertNotNull(durationFieldType81);
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + 6 + "'", int82 == 6);
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + 10 + "'", int83 == 10);
        org.junit.Assert.assertNotNull(days85);
        org.junit.Assert.assertTrue("'" + int86 + "' != '" + (-1) + "'", int86 == (-1));
    }

    @Test
    public void test0289() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0289");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Days days1 = org.joda.time.Days.daysIn(readableInterval0);
        int int3 = days1.getValue((int) (short) 0);
        org.joda.time.Days days4 = org.joda.time.Days.FIVE;
        org.joda.time.Days days5 = days1.minus(days4);
        org.joda.time.DurationFieldType durationFieldType6 = null;
        int int7 = days4.get(durationFieldType6);
        org.joda.time.DurationFieldType durationFieldType8 = null;
        int int9 = days4.get(durationFieldType8);
        boolean boolean11 = days4.equals((java.lang.Object) 0L);
        int int12 = days4.getDays();
        org.joda.time.DurationFieldType durationFieldType13 = days4.getFieldType();
        java.lang.Class<?> wildcardClass14 = days4.getClass();
        org.junit.Assert.assertNotNull(days1);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(days4);
        org.junit.Assert.assertNotNull(days5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 5 + "'", int12 == 5);
        org.junit.Assert.assertNotNull(durationFieldType13);
        org.junit.Assert.assertNotNull(wildcardClass14);
    }

    @Test
    public void test0290() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0290");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Days days1 = org.joda.time.Days.daysIn(readableInterval0);
        int int3 = days1.getValue((int) (short) 0);
        org.joda.time.Days days4 = org.joda.time.Days.FIVE;
        org.joda.time.Days days5 = days1.minus(days4);
        org.joda.time.Days days6 = null;
        org.joda.time.Days days7 = days1.minus(days6);
        org.joda.time.MutablePeriod mutablePeriod8 = days7.toMutablePeriod();
        org.joda.time.ReadableInterval readableInterval9 = null;
        org.joda.time.Days days10 = org.joda.time.Days.daysIn(readableInterval9);
        int int12 = days10.getValue((int) (short) 0);
        org.joda.time.Days days13 = org.joda.time.Days.FIVE;
        org.joda.time.Days days14 = days10.minus(days13);
        org.joda.time.Days days15 = null;
        org.joda.time.Days days16 = days10.minus(days15);
        org.joda.time.Days days18 = days16.minus(100);
        org.joda.time.ReadableInterval readableInterval19 = null;
        org.joda.time.Days days20 = org.joda.time.Days.daysIn(readableInterval19);
        int int22 = days20.getValue((int) (short) 0);
        org.joda.time.Days days23 = org.joda.time.Days.FIVE;
        org.joda.time.Days days24 = days20.minus(days23);
        org.joda.time.Days days25 = null;
        org.joda.time.Days days26 = days20.minus(days25);
        org.joda.time.Days days28 = days20.minus((-1));
        org.joda.time.Days days29 = days16.plus(days20);
        org.joda.time.ReadableInterval readableInterval30 = null;
        org.joda.time.Days days31 = org.joda.time.Days.daysIn(readableInterval30);
        int int33 = days31.getValue((int) (short) 0);
        org.joda.time.Days days34 = org.joda.time.Days.FIVE;
        org.joda.time.Days days35 = days31.minus(days34);
        org.joda.time.DurationFieldType durationFieldType36 = null;
        int int37 = days34.get(durationFieldType36);
        org.joda.time.DurationFieldType durationFieldType38 = null;
        int int39 = days34.get(durationFieldType38);
        boolean boolean41 = days34.equals((java.lang.Object) 0L);
        org.joda.time.DurationFieldType durationFieldType42 = days34.getFieldType();
        int int43 = days29.get(durationFieldType42);
        int int44 = days7.get(durationFieldType42);
        org.joda.time.Days days46 = days7.minus(52);
        org.junit.Assert.assertNotNull(days1);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(days4);
        org.junit.Assert.assertNotNull(days5);
        org.junit.Assert.assertNotNull(days7);
        org.junit.Assert.assertNotNull(mutablePeriod8);
        org.junit.Assert.assertNotNull(days10);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNotNull(days13);
        org.junit.Assert.assertNotNull(days14);
        org.junit.Assert.assertNotNull(days16);
        org.junit.Assert.assertNotNull(days18);
        org.junit.Assert.assertNotNull(days20);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertNotNull(days23);
        org.junit.Assert.assertNotNull(days24);
        org.junit.Assert.assertNotNull(days26);
        org.junit.Assert.assertNotNull(days28);
        org.junit.Assert.assertNotNull(days29);
        org.junit.Assert.assertNotNull(days31);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertNotNull(days34);
        org.junit.Assert.assertNotNull(days35);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(durationFieldType42);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 0 + "'", int44 == 0);
        org.junit.Assert.assertNotNull(days46);
    }

    @Test
    public void test0291() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0291");
        org.joda.time.Days days0 = org.joda.time.Days.THREE;
        org.joda.time.ReadableInterval readableInterval1 = null;
        org.joda.time.Days days2 = org.joda.time.Days.daysIn(readableInterval1);
        org.joda.time.ReadableInterval readableInterval3 = null;
        org.joda.time.Days days4 = org.joda.time.Days.daysIn(readableInterval3);
        int int6 = days4.getValue((int) (short) 0);
        org.joda.time.Days days7 = org.joda.time.Days.FIVE;
        org.joda.time.Days days8 = days4.minus(days7);
        org.joda.time.DurationFieldType durationFieldType9 = null;
        boolean boolean10 = days7.isSupported(durationFieldType9);
        org.joda.time.DurationFieldType durationFieldType12 = days7.getFieldType(0);
        int int13 = days2.get(durationFieldType12);
        org.joda.time.ReadableInterval readableInterval14 = null;
        org.joda.time.Days days15 = org.joda.time.Days.daysIn(readableInterval14);
        int int17 = days15.getValue((int) (short) 0);
        org.joda.time.Days days18 = org.joda.time.Days.FIVE;
        org.joda.time.Days days19 = days15.minus(days18);
        org.joda.time.DurationFieldType durationFieldType20 = null;
        int int21 = days18.get(durationFieldType20);
        org.joda.time.DurationFieldType durationFieldType22 = null;
        int int23 = days18.get(durationFieldType22);
        boolean boolean25 = days18.equals((java.lang.Object) 0L);
        boolean boolean26 = days2.isGreaterThan(days18);
        org.joda.time.ReadableInterval readableInterval27 = null;
        org.joda.time.Days days28 = org.joda.time.Days.daysIn(readableInterval27);
        int int30 = days28.getValue((int) (short) 0);
        org.joda.time.Days days31 = org.joda.time.Days.FIVE;
        org.joda.time.Days days32 = days28.minus(days31);
        org.joda.time.DurationFieldType durationFieldType33 = null;
        int int34 = days31.get(durationFieldType33);
        org.joda.time.DurationFieldType durationFieldType35 = null;
        int int36 = days31.get(durationFieldType35);
        boolean boolean38 = days31.equals((java.lang.Object) 0L);
        org.joda.time.Period period39 = days31.toPeriod();
        org.joda.time.Days days40 = days2.plus(days31);
        boolean boolean41 = days0.isGreaterThan(days40);
        org.joda.time.ReadableInterval readableInterval42 = null;
        org.joda.time.Days days43 = org.joda.time.Days.daysIn(readableInterval42);
        int int45 = days43.getValue((int) (short) 0);
        org.joda.time.Days days46 = org.joda.time.Days.FIVE;
        org.joda.time.Days days47 = days43.minus(days46);
        org.joda.time.Days days48 = null;
        org.joda.time.Days days49 = days43.minus(days48);
        boolean boolean50 = days0.equals((java.lang.Object) days49);
        int int51 = days0.size();
        org.joda.time.Period period52 = days0.toPeriod();
        org.joda.time.Duration duration53 = days0.toStandardDuration();
        org.junit.Assert.assertNotNull(days0);
        org.junit.Assert.assertNotNull(days2);
        org.junit.Assert.assertNotNull(days4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNotNull(days7);
        org.junit.Assert.assertNotNull(days8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(durationFieldType12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(days15);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNotNull(days18);
        org.junit.Assert.assertNotNull(days19);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(days28);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertNotNull(days31);
        org.junit.Assert.assertNotNull(days32);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(period39);
        org.junit.Assert.assertNotNull(days40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(days43);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 0 + "'", int45 == 0);
        org.junit.Assert.assertNotNull(days46);
        org.junit.Assert.assertNotNull(days47);
        org.junit.Assert.assertNotNull(days49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 1 + "'", int51 == 1);
        org.junit.Assert.assertNotNull(period52);
        org.junit.Assert.assertNotNull(duration53);
    }

    @Test
    public void test0292() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0292");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Days days1 = org.joda.time.Days.daysIn(readableInterval0);
        int int3 = days1.getValue((int) (short) 0);
        org.joda.time.Days days4 = org.joda.time.Days.FIVE;
        org.joda.time.Days days5 = days1.minus(days4);
        org.joda.time.DurationFieldType durationFieldType6 = null;
        int int7 = days4.get(durationFieldType6);
        org.joda.time.Days days9 = days4.dividedBy(100);
        org.joda.time.ReadableInterval readableInterval10 = null;
        org.joda.time.Days days11 = org.joda.time.Days.daysIn(readableInterval10);
        org.joda.time.Days days13 = days11.plus((int) (byte) 10);
        org.joda.time.Days days15 = days13.dividedBy((int) 'a');
        org.joda.time.Days days17 = days13.dividedBy(5);
        org.joda.time.Days days19 = days13.plus((int) (byte) -1);
        org.joda.time.Days days21 = days13.minus((int) (byte) 100);
        org.joda.time.Days days23 = days21.dividedBy((int) (byte) 100);
        org.joda.time.DurationFieldType durationFieldType24 = days21.getFieldType();
        boolean boolean25 = days4.isSupported(durationFieldType24);
        org.junit.Assert.assertNotNull(days1);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(days4);
        org.junit.Assert.assertNotNull(days5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(days9);
        org.junit.Assert.assertNotNull(days11);
        org.junit.Assert.assertNotNull(days13);
        org.junit.Assert.assertNotNull(days15);
        org.junit.Assert.assertNotNull(days17);
        org.junit.Assert.assertNotNull(days19);
        org.junit.Assert.assertNotNull(days21);
        org.junit.Assert.assertNotNull(days23);
        org.junit.Assert.assertNotNull(durationFieldType24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
    }

    @Test
    public void test0293() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0293");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Days days1 = org.joda.time.Days.daysIn(readableInterval0);
        org.joda.time.ReadableInterval readableInterval2 = null;
        org.joda.time.Days days3 = org.joda.time.Days.daysIn(readableInterval2);
        int int5 = days3.getValue((int) (short) 0);
        org.joda.time.Days days6 = org.joda.time.Days.FIVE;
        org.joda.time.Days days7 = days3.minus(days6);
        org.joda.time.DurationFieldType durationFieldType8 = null;
        boolean boolean9 = days6.isSupported(durationFieldType8);
        org.joda.time.DurationFieldType durationFieldType11 = days6.getFieldType(0);
        int int12 = days1.get(durationFieldType11);
        org.joda.time.PeriodType periodType13 = days1.getPeriodType();
        org.joda.time.Days days15 = days1.multipliedBy((int) (short) -1);
        org.joda.time.MutablePeriod mutablePeriod16 = days1.toMutablePeriod();
        org.joda.time.base.BaseSingleFieldPeriod baseSingleFieldPeriod17 = null;
        // The following exception was thrown during execution in test generation
        try {
            int int18 = days1.compareTo(baseSingleFieldPeriod17);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(days1);
        org.junit.Assert.assertNotNull(days3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(days6);
        org.junit.Assert.assertNotNull(days7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(durationFieldType11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNotNull(periodType13);
        org.junit.Assert.assertNotNull(days15);
        org.junit.Assert.assertNotNull(mutablePeriod16);
    }

    @Test
    public void test0294() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0294");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Days days1 = org.joda.time.Days.daysIn(readableInterval0);
        int int3 = days1.getValue((int) (short) 0);
        org.joda.time.ReadableInterval readableInterval4 = null;
        org.joda.time.Days days5 = org.joda.time.Days.daysIn(readableInterval4);
        int int7 = days5.getValue((int) (short) 0);
        org.joda.time.Days days8 = org.joda.time.Days.FIVE;
        org.joda.time.Days days9 = days5.minus(days8);
        int int10 = days1.compareTo((org.joda.time.base.BaseSingleFieldPeriod) days8);
        java.lang.String str11 = days1.toString();
        org.joda.time.Days days13 = days1.plus((int) '4');
        org.joda.time.ReadableInterval readableInterval14 = null;
        org.joda.time.Days days15 = org.joda.time.Days.daysIn(readableInterval14);
        int int17 = days15.getValue((int) (short) 0);
        org.joda.time.Days days18 = org.joda.time.Days.FIVE;
        org.joda.time.Days days19 = days15.minus(days18);
        org.joda.time.DurationFieldType durationFieldType20 = null;
        boolean boolean21 = days18.isSupported(durationFieldType20);
        org.joda.time.DurationFieldType durationFieldType23 = days18.getFieldType(0);
        org.joda.time.ReadableInterval readableInterval24 = null;
        org.joda.time.Days days25 = org.joda.time.Days.daysIn(readableInterval24);
        int int27 = days25.getValue((int) (short) 0);
        org.joda.time.Days days28 = org.joda.time.Days.FIVE;
        org.joda.time.Days days29 = days25.minus(days28);
        org.joda.time.Days days30 = null;
        org.joda.time.Days days31 = days25.minus(days30);
        org.joda.time.Days days33 = days25.minus((-1));
        org.joda.time.DurationFieldType durationFieldType34 = days25.getFieldType();
        boolean boolean35 = days18.isGreaterThan(days25);
        org.joda.time.ReadableInterval readableInterval36 = null;
        org.joda.time.Days days37 = org.joda.time.Days.daysIn(readableInterval36);
        org.joda.time.Days days39 = days37.plus((int) (byte) 10);
        org.joda.time.Days days40 = days25.plus(days39);
        org.joda.time.ReadableInterval readableInterval41 = null;
        org.joda.time.Days days42 = org.joda.time.Days.daysIn(readableInterval41);
        int int44 = days42.getValue((int) (short) 0);
        org.joda.time.Days days45 = org.joda.time.Days.FIVE;
        org.joda.time.Days days46 = days42.minus(days45);
        org.joda.time.Days days47 = null;
        org.joda.time.Days days48 = days42.minus(days47);
        org.joda.time.Duration duration49 = days42.toStandardDuration();
        org.joda.time.Days days50 = days40.minus(days42);
        org.joda.time.Duration duration51 = days50.toStandardDuration();
        org.joda.time.PeriodType periodType52 = days50.getPeriodType();
        org.joda.time.Days days53 = days13.plus(days50);
        org.joda.time.PeriodType periodType54 = days53.getPeriodType();
        java.lang.Class<?> wildcardClass55 = days53.getClass();
        org.junit.Assert.assertNotNull(days1);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(days5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(days8);
        org.junit.Assert.assertNotNull(days9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "P0D" + "'", str11, "P0D");
        org.junit.Assert.assertNotNull(days13);
        org.junit.Assert.assertNotNull(days15);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNotNull(days18);
        org.junit.Assert.assertNotNull(days19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(durationFieldType23);
        org.junit.Assert.assertNotNull(days25);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertNotNull(days28);
        org.junit.Assert.assertNotNull(days29);
        org.junit.Assert.assertNotNull(days31);
        org.junit.Assert.assertNotNull(days33);
        org.junit.Assert.assertNotNull(durationFieldType34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(days37);
        org.junit.Assert.assertNotNull(days39);
        org.junit.Assert.assertNotNull(days40);
        org.junit.Assert.assertNotNull(days42);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 0 + "'", int44 == 0);
        org.junit.Assert.assertNotNull(days45);
        org.junit.Assert.assertNotNull(days46);
        org.junit.Assert.assertNotNull(days48);
        org.junit.Assert.assertNotNull(duration49);
        org.junit.Assert.assertNotNull(days50);
        org.junit.Assert.assertNotNull(duration51);
        org.junit.Assert.assertNotNull(periodType52);
        org.junit.Assert.assertNotNull(days53);
        org.junit.Assert.assertNotNull(periodType54);
        org.junit.Assert.assertNotNull(wildcardClass55);
    }

    @Test
    public void test0295() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0295");
        org.joda.time.Days days0 = org.joda.time.Days.SIX;
        org.joda.time.Days days2 = days0.plus(100);
        int int3 = days0.getDays();
        org.joda.time.Days days5 = days0.multipliedBy(52);
        org.joda.time.Period period6 = days5.toPeriod();
        org.junit.Assert.assertNotNull(days0);
        org.junit.Assert.assertNotNull(days2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 6 + "'", int3 == 6);
        org.junit.Assert.assertNotNull(days5);
        org.junit.Assert.assertNotNull(period6);
    }

    @Test
    public void test0296() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0296");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Days days1 = org.joda.time.Days.daysIn(readableInterval0);
        int int3 = days1.getValue((int) (short) 0);
        org.joda.time.ReadableInterval readableInterval4 = null;
        org.joda.time.Days days5 = org.joda.time.Days.daysIn(readableInterval4);
        int int7 = days5.getValue((int) (short) 0);
        org.joda.time.Days days8 = org.joda.time.Days.FIVE;
        org.joda.time.Days days9 = days5.minus(days8);
        int int10 = days1.compareTo((org.joda.time.base.BaseSingleFieldPeriod) days8);
        java.lang.String str11 = days1.toString();
        org.joda.time.Days days13 = days1.plus((int) '4');
        org.joda.time.ReadableInterval readableInterval14 = null;
        org.joda.time.Days days15 = org.joda.time.Days.daysIn(readableInterval14);
        int int17 = days15.getValue((int) (short) 0);
        org.joda.time.Days days18 = org.joda.time.Days.FIVE;
        org.joda.time.Days days19 = days15.minus(days18);
        org.joda.time.DurationFieldType durationFieldType20 = null;
        boolean boolean21 = days18.isSupported(durationFieldType20);
        org.joda.time.DurationFieldType durationFieldType23 = days18.getFieldType(0);
        org.joda.time.ReadableInterval readableInterval24 = null;
        org.joda.time.Days days25 = org.joda.time.Days.daysIn(readableInterval24);
        int int27 = days25.getValue((int) (short) 0);
        org.joda.time.Days days28 = org.joda.time.Days.FIVE;
        org.joda.time.Days days29 = days25.minus(days28);
        org.joda.time.Days days30 = null;
        org.joda.time.Days days31 = days25.minus(days30);
        org.joda.time.Days days33 = days25.minus((-1));
        org.joda.time.DurationFieldType durationFieldType34 = days25.getFieldType();
        boolean boolean35 = days18.isGreaterThan(days25);
        org.joda.time.ReadableInterval readableInterval36 = null;
        org.joda.time.Days days37 = org.joda.time.Days.daysIn(readableInterval36);
        org.joda.time.Days days39 = days37.plus((int) (byte) 10);
        org.joda.time.Days days40 = days25.plus(days39);
        org.joda.time.ReadableInterval readableInterval41 = null;
        org.joda.time.Days days42 = org.joda.time.Days.daysIn(readableInterval41);
        int int44 = days42.getValue((int) (short) 0);
        org.joda.time.Days days45 = org.joda.time.Days.FIVE;
        org.joda.time.Days days46 = days42.minus(days45);
        org.joda.time.Days days47 = null;
        org.joda.time.Days days48 = days42.minus(days47);
        org.joda.time.Duration duration49 = days42.toStandardDuration();
        org.joda.time.Days days50 = days40.minus(days42);
        org.joda.time.Duration duration51 = days50.toStandardDuration();
        org.joda.time.PeriodType periodType52 = days50.getPeriodType();
        org.joda.time.Days days53 = days13.plus(days50);
        org.joda.time.Days days54 = days50.negated();
        org.joda.time.ReadableInterval readableInterval55 = null;
        org.joda.time.Days days56 = org.joda.time.Days.daysIn(readableInterval55);
        int int58 = days56.getValue((int) (short) 0);
        org.joda.time.Days days59 = org.joda.time.Days.FIVE;
        org.joda.time.Days days60 = days56.minus(days59);
        org.joda.time.DurationFieldType durationFieldType61 = null;
        boolean boolean62 = days59.isSupported(durationFieldType61);
        org.joda.time.DurationFieldType durationFieldType64 = days59.getFieldType(0);
        org.joda.time.ReadableInterval readableInterval65 = null;
        org.joda.time.Days days66 = org.joda.time.Days.daysIn(readableInterval65);
        int int68 = days66.getValue((int) (short) 0);
        org.joda.time.Days days69 = org.joda.time.Days.FIVE;
        org.joda.time.Days days70 = days66.minus(days69);
        org.joda.time.Days days71 = null;
        org.joda.time.Days days72 = days66.minus(days71);
        org.joda.time.Days days74 = days66.minus((-1));
        org.joda.time.DurationFieldType durationFieldType75 = days66.getFieldType();
        boolean boolean76 = days59.isGreaterThan(days66);
        org.joda.time.ReadableInterval readableInterval77 = null;
        org.joda.time.Days days78 = org.joda.time.Days.daysIn(readableInterval77);
        org.joda.time.Days days80 = days78.plus((int) (byte) 10);
        org.joda.time.Days days82 = days80.dividedBy((int) 'a');
        org.joda.time.Days days84 = days80.dividedBy(5);
        org.joda.time.Days days86 = days80.plus((int) (byte) -1);
        org.joda.time.Days days88 = days80.minus((int) (byte) 100);
        int int89 = days88.getDays();
        boolean boolean90 = days66.isGreaterThan(days88);
        org.joda.time.MutablePeriod mutablePeriod91 = days88.toMutablePeriod();
        org.joda.time.Days days92 = org.joda.time.Days.standardDaysIn((org.joda.time.ReadablePeriod) days88);
        boolean boolean93 = days50.equals((java.lang.Object) days92);
        org.joda.time.Duration duration94 = days92.toStandardDuration();
        org.junit.Assert.assertNotNull(days1);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(days5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(days8);
        org.junit.Assert.assertNotNull(days9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "P0D" + "'", str11, "P0D");
        org.junit.Assert.assertNotNull(days13);
        org.junit.Assert.assertNotNull(days15);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNotNull(days18);
        org.junit.Assert.assertNotNull(days19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(durationFieldType23);
        org.junit.Assert.assertNotNull(days25);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertNotNull(days28);
        org.junit.Assert.assertNotNull(days29);
        org.junit.Assert.assertNotNull(days31);
        org.junit.Assert.assertNotNull(days33);
        org.junit.Assert.assertNotNull(durationFieldType34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(days37);
        org.junit.Assert.assertNotNull(days39);
        org.junit.Assert.assertNotNull(days40);
        org.junit.Assert.assertNotNull(days42);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 0 + "'", int44 == 0);
        org.junit.Assert.assertNotNull(days45);
        org.junit.Assert.assertNotNull(days46);
        org.junit.Assert.assertNotNull(days48);
        org.junit.Assert.assertNotNull(duration49);
        org.junit.Assert.assertNotNull(days50);
        org.junit.Assert.assertNotNull(duration51);
        org.junit.Assert.assertNotNull(periodType52);
        org.junit.Assert.assertNotNull(days53);
        org.junit.Assert.assertNotNull(days54);
        org.junit.Assert.assertNotNull(days56);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 0 + "'", int58 == 0);
        org.junit.Assert.assertNotNull(days59);
        org.junit.Assert.assertNotNull(days60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(durationFieldType64);
        org.junit.Assert.assertNotNull(days66);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 0 + "'", int68 == 0);
        org.junit.Assert.assertNotNull(days69);
        org.junit.Assert.assertNotNull(days70);
        org.junit.Assert.assertNotNull(days72);
        org.junit.Assert.assertNotNull(days74);
        org.junit.Assert.assertNotNull(durationFieldType75);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertNotNull(days78);
        org.junit.Assert.assertNotNull(days80);
        org.junit.Assert.assertNotNull(days82);
        org.junit.Assert.assertNotNull(days84);
        org.junit.Assert.assertNotNull(days86);
        org.junit.Assert.assertNotNull(days88);
        org.junit.Assert.assertTrue("'" + int89 + "' != '" + (-90) + "'", int89 == (-90));
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + true + "'", boolean90 == true);
        org.junit.Assert.assertNotNull(mutablePeriod91);
        org.junit.Assert.assertNotNull(days92);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
        org.junit.Assert.assertNotNull(duration94);
    }

    @Test
    public void test0297() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0297");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Days days1 = org.joda.time.Days.daysIn(readableInterval0);
        int int3 = days1.getValue((int) (short) 0);
        org.joda.time.Period period4 = days1.toPeriod();
        org.joda.time.Days days5 = org.joda.time.Days.standardDaysIn((org.joda.time.ReadablePeriod) days1);
        org.joda.time.Days days6 = org.joda.time.Days.THREE;
        org.joda.time.ReadableInterval readableInterval7 = null;
        org.joda.time.Days days8 = org.joda.time.Days.daysIn(readableInterval7);
        org.joda.time.ReadableInterval readableInterval9 = null;
        org.joda.time.Days days10 = org.joda.time.Days.daysIn(readableInterval9);
        int int12 = days10.getValue((int) (short) 0);
        org.joda.time.Days days13 = org.joda.time.Days.FIVE;
        org.joda.time.Days days14 = days10.minus(days13);
        org.joda.time.DurationFieldType durationFieldType15 = null;
        boolean boolean16 = days13.isSupported(durationFieldType15);
        org.joda.time.DurationFieldType durationFieldType18 = days13.getFieldType(0);
        int int19 = days8.get(durationFieldType18);
        org.joda.time.ReadableInterval readableInterval20 = null;
        org.joda.time.Days days21 = org.joda.time.Days.daysIn(readableInterval20);
        int int23 = days21.getValue((int) (short) 0);
        org.joda.time.Days days24 = org.joda.time.Days.FIVE;
        org.joda.time.Days days25 = days21.minus(days24);
        org.joda.time.DurationFieldType durationFieldType26 = null;
        int int27 = days24.get(durationFieldType26);
        org.joda.time.DurationFieldType durationFieldType28 = null;
        int int29 = days24.get(durationFieldType28);
        boolean boolean31 = days24.equals((java.lang.Object) 0L);
        boolean boolean32 = days8.isGreaterThan(days24);
        org.joda.time.ReadableInterval readableInterval33 = null;
        org.joda.time.Days days34 = org.joda.time.Days.daysIn(readableInterval33);
        int int36 = days34.getValue((int) (short) 0);
        org.joda.time.Days days37 = org.joda.time.Days.FIVE;
        org.joda.time.Days days38 = days34.minus(days37);
        org.joda.time.DurationFieldType durationFieldType39 = null;
        int int40 = days37.get(durationFieldType39);
        org.joda.time.DurationFieldType durationFieldType41 = null;
        int int42 = days37.get(durationFieldType41);
        boolean boolean44 = days37.equals((java.lang.Object) 0L);
        org.joda.time.Period period45 = days37.toPeriod();
        org.joda.time.Days days46 = days8.plus(days37);
        boolean boolean47 = days6.isGreaterThan(days46);
        org.joda.time.Days days49 = days46.dividedBy(42);
        boolean boolean50 = days5.isLessThan(days46);
        int int51 = days5.size();
        org.junit.Assert.assertNotNull(days1);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(days5);
        org.junit.Assert.assertNotNull(days6);
        org.junit.Assert.assertNotNull(days8);
        org.junit.Assert.assertNotNull(days10);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNotNull(days13);
        org.junit.Assert.assertNotNull(days14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(durationFieldType18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertNotNull(days21);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertNotNull(days24);
        org.junit.Assert.assertNotNull(days25);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(days34);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertNotNull(days37);
        org.junit.Assert.assertNotNull(days38);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(period45);
        org.junit.Assert.assertNotNull(days46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(days49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 1 + "'", int51 == 1);
    }

    @Test
    public void test0298() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0298");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Days days1 = org.joda.time.Days.daysIn(readableInterval0);
        org.joda.time.ReadableInterval readableInterval2 = null;
        org.joda.time.Days days3 = org.joda.time.Days.daysIn(readableInterval2);
        int int5 = days3.getValue((int) (short) 0);
        org.joda.time.Days days6 = org.joda.time.Days.FIVE;
        org.joda.time.Days days7 = days3.minus(days6);
        org.joda.time.DurationFieldType durationFieldType8 = null;
        boolean boolean9 = days6.isSupported(durationFieldType8);
        org.joda.time.DurationFieldType durationFieldType11 = days6.getFieldType(0);
        int int12 = days1.get(durationFieldType11);
        org.joda.time.ReadableInterval readableInterval13 = null;
        org.joda.time.Days days14 = org.joda.time.Days.daysIn(readableInterval13);
        int int16 = days14.getValue((int) (short) 0);
        org.joda.time.Days days17 = org.joda.time.Days.FIVE;
        org.joda.time.Days days18 = days14.minus(days17);
        org.joda.time.DurationFieldType durationFieldType19 = null;
        int int20 = days17.get(durationFieldType19);
        org.joda.time.DurationFieldType durationFieldType21 = null;
        int int22 = days17.get(durationFieldType21);
        boolean boolean24 = days17.equals((java.lang.Object) 0L);
        boolean boolean25 = days1.isGreaterThan(days17);
        org.joda.time.ReadableInterval readableInterval26 = null;
        org.joda.time.Days days27 = org.joda.time.Days.daysIn(readableInterval26);
        int int29 = days27.getValue((int) (short) 0);
        org.joda.time.Days days30 = org.joda.time.Days.FIVE;
        org.joda.time.Days days31 = days27.minus(days30);
        org.joda.time.DurationFieldType durationFieldType32 = null;
        int int33 = days30.get(durationFieldType32);
        org.joda.time.DurationFieldType durationFieldType34 = null;
        int int35 = days30.get(durationFieldType34);
        boolean boolean37 = days30.equals((java.lang.Object) 0L);
        org.joda.time.Period period38 = days30.toPeriod();
        org.joda.time.Days days39 = days1.plus(days30);
        org.joda.time.ReadableInterval readableInterval40 = null;
        org.joda.time.Days days41 = org.joda.time.Days.daysIn(readableInterval40);
        int int43 = days41.getValue((int) (short) 0);
        org.joda.time.Period period44 = days41.toPeriod();
        org.joda.time.Days days45 = org.joda.time.Days.standardDaysIn((org.joda.time.ReadablePeriod) days41);
        boolean boolean46 = days1.equals((java.lang.Object) days45);
        org.joda.time.ReadableInterval readableInterval47 = null;
        org.joda.time.Days days48 = org.joda.time.Days.daysIn(readableInterval47);
        int int50 = days48.getValue((int) (short) 0);
        org.joda.time.Days days51 = org.joda.time.Days.FIVE;
        org.joda.time.Days days52 = days48.minus(days51);
        org.joda.time.DurationFieldType durationFieldType53 = null;
        boolean boolean54 = days51.isSupported(durationFieldType53);
        org.joda.time.DurationFieldType durationFieldType56 = days51.getFieldType(0);
        boolean boolean57 = days45.isSupported(durationFieldType56);
        org.joda.time.PeriodType periodType58 = days45.getPeriodType();
        org.joda.time.Days days59 = null;
        org.joda.time.Days days60 = days45.minus(days59);
        org.joda.time.ReadableInterval readableInterval61 = null;
        org.joda.time.Days days62 = org.joda.time.Days.daysIn(readableInterval61);
        int int64 = days62.getValue((int) (short) 0);
        org.joda.time.Days days65 = org.joda.time.Days.FIVE;
        org.joda.time.Days days66 = days62.minus(days65);
        org.joda.time.Days days67 = null;
        org.joda.time.Days days68 = days62.minus(days67);
        org.joda.time.Days days70 = days68.minus(100);
        org.joda.time.ReadableInterval readableInterval71 = null;
        org.joda.time.Days days72 = org.joda.time.Days.daysIn(readableInterval71);
        int int74 = days72.getValue((int) (short) 0);
        org.joda.time.Days days75 = org.joda.time.Days.FIVE;
        org.joda.time.Days days76 = days72.minus(days75);
        org.joda.time.Days days77 = null;
        org.joda.time.Days days78 = days72.minus(days77);
        org.joda.time.Days days80 = days72.minus((-1));
        org.joda.time.Days days81 = days68.plus(days72);
        boolean boolean82 = days45.isGreaterThan(days81);
        int int83 = days81.size();
        org.junit.Assert.assertNotNull(days1);
        org.junit.Assert.assertNotNull(days3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(days6);
        org.junit.Assert.assertNotNull(days7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(durationFieldType11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNotNull(days14);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertNotNull(days17);
        org.junit.Assert.assertNotNull(days18);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(days27);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertNotNull(days30);
        org.junit.Assert.assertNotNull(days31);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(period38);
        org.junit.Assert.assertNotNull(days39);
        org.junit.Assert.assertNotNull(days41);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0);
        org.junit.Assert.assertNotNull(period44);
        org.junit.Assert.assertNotNull(days45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(days48);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 0 + "'", int50 == 0);
        org.junit.Assert.assertNotNull(days51);
        org.junit.Assert.assertNotNull(days52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(durationFieldType56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(periodType58);
        org.junit.Assert.assertNotNull(days60);
        org.junit.Assert.assertNotNull(days62);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 0 + "'", int64 == 0);
        org.junit.Assert.assertNotNull(days65);
        org.junit.Assert.assertNotNull(days66);
        org.junit.Assert.assertNotNull(days68);
        org.junit.Assert.assertNotNull(days70);
        org.junit.Assert.assertNotNull(days72);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 0 + "'", int74 == 0);
        org.junit.Assert.assertNotNull(days75);
        org.junit.Assert.assertNotNull(days76);
        org.junit.Assert.assertNotNull(days78);
        org.junit.Assert.assertNotNull(days80);
        org.junit.Assert.assertNotNull(days81);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + 1 + "'", int83 == 1);
    }

    @Test
    public void test0299() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0299");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Days days1 = org.joda.time.Days.daysIn(readableInterval0);
        int int3 = days1.getValue((int) (short) 0);
        org.joda.time.Days days4 = org.joda.time.Days.FIVE;
        org.joda.time.Days days5 = days1.minus(days4);
        org.joda.time.DurationFieldType durationFieldType6 = null;
        boolean boolean7 = days4.isSupported(durationFieldType6);
        org.joda.time.DurationFieldType durationFieldType9 = days4.getFieldType(0);
        org.joda.time.ReadableInterval readableInterval10 = null;
        org.joda.time.Days days11 = org.joda.time.Days.daysIn(readableInterval10);
        int int13 = days11.getValue((int) (short) 0);
        org.joda.time.Days days14 = org.joda.time.Days.FIVE;
        org.joda.time.Days days15 = days11.minus(days14);
        org.joda.time.Days days16 = null;
        org.joda.time.Days days17 = days11.minus(days16);
        org.joda.time.Days days19 = days11.minus((-1));
        org.joda.time.DurationFieldType durationFieldType20 = days11.getFieldType();
        boolean boolean21 = days4.isGreaterThan(days11);
        org.joda.time.ReadableInterval readableInterval22 = null;
        org.joda.time.Days days23 = org.joda.time.Days.daysIn(readableInterval22);
        org.joda.time.Days days25 = days23.plus((int) (byte) 10);
        org.joda.time.Days days26 = days11.plus(days25);
        org.joda.time.ReadableInterval readableInterval27 = null;
        org.joda.time.Days days28 = org.joda.time.Days.daysIn(readableInterval27);
        int int30 = days28.getValue((int) (short) 0);
        org.joda.time.Days days31 = org.joda.time.Days.FIVE;
        org.joda.time.Days days32 = days28.minus(days31);
        org.joda.time.Days days33 = null;
        org.joda.time.Days days34 = days28.minus(days33);
        org.joda.time.Duration duration35 = days28.toStandardDuration();
        org.joda.time.Days days36 = days26.minus(days28);
        org.joda.time.Days days38 = days28.multipliedBy(5);
        org.joda.time.Days days39 = days38.negated();
        org.joda.time.Days days41 = days38.minus(2147483647);
        org.joda.time.Days days43 = days38.multipliedBy((-9));
        java.lang.Class<?> wildcardClass44 = days38.getClass();
        org.junit.Assert.assertNotNull(days1);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(days4);
        org.junit.Assert.assertNotNull(days5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(durationFieldType9);
        org.junit.Assert.assertNotNull(days11);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(days14);
        org.junit.Assert.assertNotNull(days15);
        org.junit.Assert.assertNotNull(days17);
        org.junit.Assert.assertNotNull(days19);
        org.junit.Assert.assertNotNull(durationFieldType20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(days23);
        org.junit.Assert.assertNotNull(days25);
        org.junit.Assert.assertNotNull(days26);
        org.junit.Assert.assertNotNull(days28);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertNotNull(days31);
        org.junit.Assert.assertNotNull(days32);
        org.junit.Assert.assertNotNull(days34);
        org.junit.Assert.assertNotNull(duration35);
        org.junit.Assert.assertNotNull(days36);
        org.junit.Assert.assertNotNull(days38);
        org.junit.Assert.assertNotNull(days39);
        org.junit.Assert.assertNotNull(days41);
        org.junit.Assert.assertNotNull(days43);
        org.junit.Assert.assertNotNull(wildcardClass44);
    }

    @Test
    public void test0300() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0300");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Days days1 = org.joda.time.Days.daysIn(readableInterval0);
        org.joda.time.Days days3 = days1.plus((int) (byte) 10);
        org.joda.time.Days days5 = days3.dividedBy((int) 'a');
        org.joda.time.Days days7 = days3.dividedBy(5);
        org.joda.time.Days days9 = days3.plus((int) (byte) -1);
        org.joda.time.Days days11 = days3.minus((int) (byte) 100);
        org.joda.time.Days days13 = days11.dividedBy((int) (byte) 100);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.DurationFieldType durationFieldType15 = days11.getFieldType(6);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 6");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(days1);
        org.junit.Assert.assertNotNull(days3);
        org.junit.Assert.assertNotNull(days5);
        org.junit.Assert.assertNotNull(days7);
        org.junit.Assert.assertNotNull(days9);
        org.junit.Assert.assertNotNull(days11);
        org.junit.Assert.assertNotNull(days13);
    }

    @Test
    public void test0301() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0301");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Days days1 = org.joda.time.Days.daysIn(readableInterval0);
        int int3 = days1.getValue((int) (short) 0);
        org.joda.time.Days days4 = org.joda.time.Days.FIVE;
        org.joda.time.Days days5 = days1.minus(days4);
        org.joda.time.DurationFieldType durationFieldType6 = null;
        boolean boolean7 = days4.isSupported(durationFieldType6);
        org.joda.time.DurationFieldType durationFieldType9 = days4.getFieldType(0);
        org.joda.time.ReadableInterval readableInterval10 = null;
        org.joda.time.Days days11 = org.joda.time.Days.daysIn(readableInterval10);
        int int13 = days11.getValue((int) (short) 0);
        org.joda.time.Days days14 = org.joda.time.Days.FIVE;
        org.joda.time.Days days15 = days11.minus(days14);
        org.joda.time.Days days16 = null;
        org.joda.time.Days days17 = days11.minus(days16);
        org.joda.time.Days days19 = days11.minus((-1));
        org.joda.time.DurationFieldType durationFieldType20 = days11.getFieldType();
        boolean boolean21 = days4.isGreaterThan(days11);
        org.joda.time.ReadableInterval readableInterval22 = null;
        org.joda.time.Days days23 = org.joda.time.Days.daysIn(readableInterval22);
        org.joda.time.Days days25 = days23.plus((int) (byte) 10);
        org.joda.time.Days days27 = days25.dividedBy((int) 'a');
        org.joda.time.Days days29 = days25.dividedBy(5);
        org.joda.time.Days days31 = days25.plus((int) (byte) -1);
        org.joda.time.Days days33 = days25.minus((int) (byte) 100);
        int int34 = days33.getDays();
        boolean boolean35 = days11.isGreaterThan(days33);
        org.joda.time.MutablePeriod mutablePeriod36 = days33.toMutablePeriod();
        org.joda.time.Days days37 = org.joda.time.Days.standardDaysIn((org.joda.time.ReadablePeriod) days33);
        org.joda.time.Days days39 = days33.dividedBy((-9));
        org.junit.Assert.assertNotNull(days1);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(days4);
        org.junit.Assert.assertNotNull(days5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(durationFieldType9);
        org.junit.Assert.assertNotNull(days11);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(days14);
        org.junit.Assert.assertNotNull(days15);
        org.junit.Assert.assertNotNull(days17);
        org.junit.Assert.assertNotNull(days19);
        org.junit.Assert.assertNotNull(durationFieldType20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(days23);
        org.junit.Assert.assertNotNull(days25);
        org.junit.Assert.assertNotNull(days27);
        org.junit.Assert.assertNotNull(days29);
        org.junit.Assert.assertNotNull(days31);
        org.junit.Assert.assertNotNull(days33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + (-90) + "'", int34 == (-90));
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(mutablePeriod36);
        org.junit.Assert.assertNotNull(days37);
        org.junit.Assert.assertNotNull(days39);
    }

    @Test
    public void test0302() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0302");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Days days1 = org.joda.time.Days.daysIn(readableInterval0);
        org.joda.time.Days days3 = days1.minus((int) (byte) 0);
        org.joda.time.Days days4 = null;
        org.joda.time.Days days5 = days1.minus(days4);
        org.junit.Assert.assertNotNull(days1);
        org.junit.Assert.assertNotNull(days3);
        org.junit.Assert.assertNotNull(days5);
    }

    @Test
    public void test0303() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0303");
        org.joda.time.Days days0 = org.joda.time.Days.THREE;
        org.joda.time.ReadableInterval readableInterval1 = null;
        org.joda.time.Days days2 = org.joda.time.Days.daysIn(readableInterval1);
        org.joda.time.ReadableInterval readableInterval3 = null;
        org.joda.time.Days days4 = org.joda.time.Days.daysIn(readableInterval3);
        int int6 = days4.getValue((int) (short) 0);
        org.joda.time.Days days7 = org.joda.time.Days.FIVE;
        org.joda.time.Days days8 = days4.minus(days7);
        org.joda.time.DurationFieldType durationFieldType9 = null;
        boolean boolean10 = days7.isSupported(durationFieldType9);
        org.joda.time.DurationFieldType durationFieldType12 = days7.getFieldType(0);
        int int13 = days2.get(durationFieldType12);
        org.joda.time.ReadableInterval readableInterval14 = null;
        org.joda.time.Days days15 = org.joda.time.Days.daysIn(readableInterval14);
        int int17 = days15.getValue((int) (short) 0);
        org.joda.time.Days days18 = org.joda.time.Days.FIVE;
        org.joda.time.Days days19 = days15.minus(days18);
        org.joda.time.DurationFieldType durationFieldType20 = null;
        int int21 = days18.get(durationFieldType20);
        org.joda.time.DurationFieldType durationFieldType22 = null;
        int int23 = days18.get(durationFieldType22);
        boolean boolean25 = days18.equals((java.lang.Object) 0L);
        boolean boolean26 = days2.isGreaterThan(days18);
        org.joda.time.ReadableInterval readableInterval27 = null;
        org.joda.time.Days days28 = org.joda.time.Days.daysIn(readableInterval27);
        int int30 = days28.getValue((int) (short) 0);
        org.joda.time.Days days31 = org.joda.time.Days.FIVE;
        org.joda.time.Days days32 = days28.minus(days31);
        org.joda.time.DurationFieldType durationFieldType33 = null;
        int int34 = days31.get(durationFieldType33);
        org.joda.time.DurationFieldType durationFieldType35 = null;
        int int36 = days31.get(durationFieldType35);
        boolean boolean38 = days31.equals((java.lang.Object) 0L);
        org.joda.time.Period period39 = days31.toPeriod();
        org.joda.time.Days days40 = days2.plus(days31);
        boolean boolean41 = days0.isGreaterThan(days40);
        org.joda.time.Days days42 = days40.negated();
        org.joda.time.ReadableInterval readableInterval43 = null;
        org.joda.time.Days days44 = org.joda.time.Days.daysIn(readableInterval43);
        org.joda.time.Days days46 = days44.plus((int) (byte) 10);
        org.joda.time.Days days48 = days46.dividedBy((int) 'a');
        org.joda.time.ReadableInterval readableInterval49 = null;
        org.joda.time.Days days50 = org.joda.time.Days.daysIn(readableInterval49);
        int int52 = days50.getValue((int) (short) 0);
        org.joda.time.Days days53 = org.joda.time.Days.FIVE;
        org.joda.time.Days days54 = days50.minus(days53);
        org.joda.time.DurationFieldType durationFieldType55 = null;
        boolean boolean56 = days53.isSupported(durationFieldType55);
        org.joda.time.DurationFieldType durationFieldType58 = days53.getFieldType(0);
        org.joda.time.Period period59 = days53.toPeriod();
        int int61 = days53.getValue(0);
        int int62 = days53.getDays();
        org.joda.time.Days days64 = days53.multipliedBy(10);
        boolean boolean65 = days46.equals((java.lang.Object) days53);
        org.joda.time.Days days66 = days40.minus(days53);
        org.joda.time.Days days68 = days40.multipliedBy((int) (short) 1);
        org.junit.Assert.assertNotNull(days0);
        org.junit.Assert.assertNotNull(days2);
        org.junit.Assert.assertNotNull(days4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNotNull(days7);
        org.junit.Assert.assertNotNull(days8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(durationFieldType12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(days15);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNotNull(days18);
        org.junit.Assert.assertNotNull(days19);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(days28);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertNotNull(days31);
        org.junit.Assert.assertNotNull(days32);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(period39);
        org.junit.Assert.assertNotNull(days40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(days42);
        org.junit.Assert.assertNotNull(days44);
        org.junit.Assert.assertNotNull(days46);
        org.junit.Assert.assertNotNull(days48);
        org.junit.Assert.assertNotNull(days50);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 0 + "'", int52 == 0);
        org.junit.Assert.assertNotNull(days53);
        org.junit.Assert.assertNotNull(days54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(durationFieldType58);
        org.junit.Assert.assertNotNull(period59);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 5 + "'", int61 == 5);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 5 + "'", int62 == 5);
        org.junit.Assert.assertNotNull(days64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(days66);
        org.junit.Assert.assertNotNull(days68);
    }

    @Test
    public void test0304() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0304");
        org.joda.time.Days days0 = org.joda.time.Days.SEVEN;
        org.joda.time.Days days2 = days0.plus(1);
        org.joda.time.Days days4 = org.joda.time.Days.days((int) 'a');
        org.joda.time.Days days5 = org.joda.time.Days.SIX;
        org.joda.time.Days days7 = days5.plus(100);
        org.joda.time.ReadableInterval readableInterval8 = null;
        org.joda.time.Days days9 = org.joda.time.Days.daysIn(readableInterval8);
        int int11 = days9.getValue((int) (short) 0);
        org.joda.time.Days days12 = org.joda.time.Days.FIVE;
        org.joda.time.Days days13 = days9.minus(days12);
        org.joda.time.Days days14 = null;
        org.joda.time.Days days15 = days9.minus(days14);
        org.joda.time.Days days17 = days9.minus((-1));
        org.joda.time.DurationFieldType durationFieldType18 = days9.getFieldType();
        int int19 = days5.get(durationFieldType18);
        int int20 = days4.get(durationFieldType18);
        org.joda.time.Days days21 = days2.plus(days4);
        java.lang.Class<?> wildcardClass22 = days4.getClass();
        org.junit.Assert.assertNotNull(days0);
        org.junit.Assert.assertNotNull(days2);
        org.junit.Assert.assertNotNull(days4);
        org.junit.Assert.assertNotNull(days5);
        org.junit.Assert.assertNotNull(days7);
        org.junit.Assert.assertNotNull(days9);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNotNull(days12);
        org.junit.Assert.assertNotNull(days13);
        org.junit.Assert.assertNotNull(days15);
        org.junit.Assert.assertNotNull(days17);
        org.junit.Assert.assertNotNull(durationFieldType18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 6 + "'", int19 == 6);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 97 + "'", int20 == 97);
        org.junit.Assert.assertNotNull(days21);
        org.junit.Assert.assertNotNull(wildcardClass22);
    }

    @Test
    public void test0305() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0305");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Days days1 = org.joda.time.Days.daysIn(readableInterval0);
        org.joda.time.ReadableInterval readableInterval2 = null;
        org.joda.time.Days days3 = org.joda.time.Days.daysIn(readableInterval2);
        int int5 = days3.getValue((int) (short) 0);
        org.joda.time.Days days6 = org.joda.time.Days.FIVE;
        org.joda.time.Days days7 = days3.minus(days6);
        org.joda.time.DurationFieldType durationFieldType8 = null;
        boolean boolean9 = days6.isSupported(durationFieldType8);
        org.joda.time.DurationFieldType durationFieldType11 = days6.getFieldType(0);
        int int12 = days1.get(durationFieldType11);
        org.joda.time.ReadableInterval readableInterval13 = null;
        org.joda.time.Days days14 = org.joda.time.Days.daysIn(readableInterval13);
        int int16 = days14.getValue((int) (short) 0);
        org.joda.time.Days days17 = org.joda.time.Days.FIVE;
        org.joda.time.Days days18 = days14.minus(days17);
        org.joda.time.DurationFieldType durationFieldType19 = null;
        int int20 = days17.get(durationFieldType19);
        org.joda.time.DurationFieldType durationFieldType21 = null;
        int int22 = days17.get(durationFieldType21);
        boolean boolean24 = days17.equals((java.lang.Object) 0L);
        boolean boolean25 = days1.isGreaterThan(days17);
        org.joda.time.ReadableInterval readableInterval26 = null;
        org.joda.time.Days days27 = org.joda.time.Days.daysIn(readableInterval26);
        int int29 = days27.getValue((int) (short) 0);
        org.joda.time.Days days30 = org.joda.time.Days.FIVE;
        org.joda.time.Days days31 = days27.minus(days30);
        org.joda.time.DurationFieldType durationFieldType32 = null;
        int int33 = days30.get(durationFieldType32);
        org.joda.time.DurationFieldType durationFieldType34 = null;
        int int35 = days30.get(durationFieldType34);
        boolean boolean37 = days30.equals((java.lang.Object) 0L);
        org.joda.time.Period period38 = days30.toPeriod();
        org.joda.time.Days days39 = days1.plus(days30);
        org.joda.time.Days days41 = days39.minus((int) (byte) -1);
        org.joda.time.ReadableInterval readableInterval42 = null;
        org.joda.time.Days days43 = org.joda.time.Days.daysIn(readableInterval42);
        org.joda.time.Days days45 = days43.plus((int) (byte) 10);
        org.joda.time.DurationFieldType durationFieldType46 = days45.getFieldType();
        org.joda.time.Days days48 = days45.plus(0);
        int int49 = days48.size();
        org.joda.time.Days days50 = days39.plus(days48);
        org.joda.time.Days days51 = org.joda.time.Days.MAX_VALUE;
        org.joda.time.Days days52 = days51.negated();
        org.joda.time.PeriodType periodType53 = days51.getPeriodType();
        org.joda.time.ReadableInterval readableInterval54 = null;
        org.joda.time.Days days55 = org.joda.time.Days.daysIn(readableInterval54);
        int int57 = days55.getValue((int) (short) 0);
        org.joda.time.Days days58 = org.joda.time.Days.FIVE;
        org.joda.time.Days days59 = days55.minus(days58);
        org.joda.time.DurationFieldType durationFieldType60 = null;
        int int61 = days58.get(durationFieldType60);
        org.joda.time.Days days63 = days58.dividedBy(100);
        int int64 = days51.compareTo((org.joda.time.base.BaseSingleFieldPeriod) days58);
        org.joda.time.MutablePeriod mutablePeriod65 = days51.toMutablePeriod();
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Days days66 = days48.plus(days51);
            org.junit.Assert.fail("Expected exception of type java.lang.ArithmeticException; message: The calculation caused an overflow: 10 + 2147483647");
        } catch (java.lang.ArithmeticException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(days1);
        org.junit.Assert.assertNotNull(days3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(days6);
        org.junit.Assert.assertNotNull(days7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(durationFieldType11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNotNull(days14);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertNotNull(days17);
        org.junit.Assert.assertNotNull(days18);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(days27);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertNotNull(days30);
        org.junit.Assert.assertNotNull(days31);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(period38);
        org.junit.Assert.assertNotNull(days39);
        org.junit.Assert.assertNotNull(days41);
        org.junit.Assert.assertNotNull(days43);
        org.junit.Assert.assertNotNull(days45);
        org.junit.Assert.assertNotNull(durationFieldType46);
        org.junit.Assert.assertNotNull(days48);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 1 + "'", int49 == 1);
        org.junit.Assert.assertNotNull(days50);
        org.junit.Assert.assertNotNull(days51);
        org.junit.Assert.assertNotNull(days52);
        org.junit.Assert.assertNotNull(periodType53);
        org.junit.Assert.assertNotNull(days55);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 0 + "'", int57 == 0);
        org.junit.Assert.assertNotNull(days58);
        org.junit.Assert.assertNotNull(days59);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 0 + "'", int61 == 0);
        org.junit.Assert.assertNotNull(days63);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 1 + "'", int64 == 1);
        org.junit.Assert.assertNotNull(mutablePeriod65);
    }

    @Test
    public void test0306() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0306");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Days days1 = org.joda.time.Days.daysIn(readableInterval0);
        int int3 = days1.getValue((int) (short) 0);
        org.joda.time.Days days4 = org.joda.time.Days.FIVE;
        org.joda.time.Days days5 = days1.minus(days4);
        org.joda.time.Days days6 = null;
        org.joda.time.Days days7 = days1.minus(days6);
        org.joda.time.Duration duration8 = days1.toStandardDuration();
        java.lang.Class<?> wildcardClass9 = days1.getClass();
        org.junit.Assert.assertNotNull(days1);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(days4);
        org.junit.Assert.assertNotNull(days5);
        org.junit.Assert.assertNotNull(days7);
        org.junit.Assert.assertNotNull(duration8);
        org.junit.Assert.assertNotNull(wildcardClass9);
    }

    @Test
    public void test0307() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0307");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Days days1 = org.joda.time.Days.daysIn(readableInterval0);
        org.joda.time.Days days3 = days1.plus((int) (byte) 10);
        org.joda.time.Days days5 = days3.dividedBy((int) 'a');
        org.joda.time.Days days7 = days3.dividedBy(5);
        org.joda.time.Days days9 = days3.plus((int) (byte) -1);
        org.joda.time.Days days11 = days3.minus((int) (byte) 100);
        org.joda.time.Days days13 = days11.dividedBy((int) (byte) 100);
        org.joda.time.Period period14 = days11.toPeriod();
        org.junit.Assert.assertNotNull(days1);
        org.junit.Assert.assertNotNull(days3);
        org.junit.Assert.assertNotNull(days5);
        org.junit.Assert.assertNotNull(days7);
        org.junit.Assert.assertNotNull(days9);
        org.junit.Assert.assertNotNull(days11);
        org.junit.Assert.assertNotNull(days13);
        org.junit.Assert.assertNotNull(period14);
    }

    @Test
    public void test0308() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0308");
        org.joda.time.Days days1 = org.joda.time.Days.parseDays("P0D");
        org.joda.time.Days days2 = days1.negated();
        org.junit.Assert.assertNotNull(days1);
        org.junit.Assert.assertNotNull(days2);
    }

    @Test
    public void test0309() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0309");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Days days1 = org.joda.time.Days.daysIn(readableInterval0);
        int int3 = days1.getValue((int) (short) 0);
        org.joda.time.Days days4 = org.joda.time.Days.FIVE;
        org.joda.time.Days days5 = days1.minus(days4);
        org.joda.time.DurationFieldType durationFieldType6 = null;
        boolean boolean7 = days4.isSupported(durationFieldType6);
        org.joda.time.DurationFieldType durationFieldType9 = days4.getFieldType(0);
        org.joda.time.ReadableInterval readableInterval10 = null;
        org.joda.time.Days days11 = org.joda.time.Days.daysIn(readableInterval10);
        int int13 = days11.getValue((int) (short) 0);
        org.joda.time.Days days14 = org.joda.time.Days.FIVE;
        org.joda.time.Days days15 = days11.minus(days14);
        org.joda.time.Days days16 = null;
        org.joda.time.Days days17 = days11.minus(days16);
        org.joda.time.Days days19 = days11.minus((-1));
        org.joda.time.DurationFieldType durationFieldType20 = days11.getFieldType();
        boolean boolean21 = days4.isGreaterThan(days11);
        org.joda.time.ReadableInterval readableInterval22 = null;
        org.joda.time.Days days23 = org.joda.time.Days.daysIn(readableInterval22);
        org.joda.time.Days days25 = days23.plus((int) (byte) 10);
        org.joda.time.Days days26 = days11.plus(days25);
        org.joda.time.Period period27 = days26.toPeriod();
        org.joda.time.Days days28 = org.joda.time.Days.standardDaysIn((org.joda.time.ReadablePeriod) period27);
        java.lang.Class<?> wildcardClass29 = days28.getClass();
        org.junit.Assert.assertNotNull(days1);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(days4);
        org.junit.Assert.assertNotNull(days5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(durationFieldType9);
        org.junit.Assert.assertNotNull(days11);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(days14);
        org.junit.Assert.assertNotNull(days15);
        org.junit.Assert.assertNotNull(days17);
        org.junit.Assert.assertNotNull(days19);
        org.junit.Assert.assertNotNull(durationFieldType20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(days23);
        org.junit.Assert.assertNotNull(days25);
        org.junit.Assert.assertNotNull(days26);
        org.junit.Assert.assertNotNull(period27);
        org.junit.Assert.assertNotNull(days28);
        org.junit.Assert.assertNotNull(wildcardClass29);
    }

    @Test
    public void test0310() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0310");
        org.joda.time.Days days1 = org.joda.time.Days.parseDays("P51D");
        org.joda.time.Days days3 = days1.plus((int) ' ');
        int int4 = days1.size();
        int int5 = days1.getDays();
        org.joda.time.Days days7 = days1.multipliedBy((-1));
        org.joda.time.ReadableInterval readableInterval8 = null;
        org.joda.time.Days days9 = org.joda.time.Days.daysIn(readableInterval8);
        org.joda.time.Days days11 = days9.plus((int) (byte) 10);
        org.joda.time.MutablePeriod mutablePeriod12 = days9.toMutablePeriod();
        int int13 = days9.size();
        int int14 = days1.compareTo((org.joda.time.base.BaseSingleFieldPeriod) days9);
        org.junit.Assert.assertNotNull(days1);
        org.junit.Assert.assertNotNull(days3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 1 + "'", int4 == 1);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 51 + "'", int5 == 51);
        org.junit.Assert.assertNotNull(days7);
        org.junit.Assert.assertNotNull(days9);
        org.junit.Assert.assertNotNull(days11);
        org.junit.Assert.assertNotNull(mutablePeriod12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 1 + "'", int14 == 1);
    }

    @Test
    public void test0311() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0311");
        org.joda.time.Days days1 = org.joda.time.Days.days(6);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Days days3 = days1.multipliedBy((-2147483648));
            org.junit.Assert.fail("Expected exception of type java.lang.ArithmeticException; message: Multiplication overflows an int: 6 * -2147483648");
        } catch (java.lang.ArithmeticException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(days1);
    }

    @Test
    public void test0312() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0312");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Days days1 = org.joda.time.Days.daysIn(readableInterval0);
        org.joda.time.Days days3 = days1.plus((int) (byte) 10);
        org.joda.time.Days days5 = days3.dividedBy((int) 'a');
        org.joda.time.Days days7 = days3.plus((int) ' ');
        org.joda.time.Days days8 = org.joda.time.Days.standardDaysIn((org.joda.time.ReadablePeriod) days7);
        org.joda.time.ReadableInterval readableInterval9 = null;
        org.joda.time.Days days10 = org.joda.time.Days.daysIn(readableInterval9);
        int int12 = days10.getValue((int) (short) 0);
        org.joda.time.ReadableInterval readableInterval13 = null;
        org.joda.time.Days days14 = org.joda.time.Days.daysIn(readableInterval13);
        int int16 = days14.getValue((int) (short) 0);
        org.joda.time.Days days17 = org.joda.time.Days.FIVE;
        org.joda.time.Days days18 = days14.minus(days17);
        int int19 = days10.compareTo((org.joda.time.base.BaseSingleFieldPeriod) days17);
        java.lang.String str20 = days10.toString();
        org.joda.time.Days days22 = days10.plus((int) '4');
        org.joda.time.PeriodType periodType23 = days22.getPeriodType();
        int int24 = days22.getDays();
        org.joda.time.Days days26 = days22.minus((int) ' ');
        org.joda.time.ReadableInterval readableInterval27 = null;
        org.joda.time.Days days28 = org.joda.time.Days.daysIn(readableInterval27);
        org.joda.time.Days days30 = days28.plus((int) (byte) 10);
        org.joda.time.Days days32 = days30.dividedBy((int) 'a');
        org.joda.time.Days days34 = days30.dividedBy(5);
        org.joda.time.Days days36 = days30.plus((int) (byte) -1);
        org.joda.time.Days days37 = days22.plus(days30);
        boolean boolean38 = days8.isLessThan(days37);
        org.joda.time.Period period39 = days8.toPeriod();
        org.joda.time.ReadableInterval readableInterval40 = null;
        org.joda.time.Days days41 = org.joda.time.Days.daysIn(readableInterval40);
        int int43 = days41.getValue((int) (short) 0);
        org.joda.time.ReadableInterval readableInterval44 = null;
        org.joda.time.Days days45 = org.joda.time.Days.daysIn(readableInterval44);
        int int47 = days45.getValue((int) (short) 0);
        org.joda.time.Days days48 = org.joda.time.Days.FIVE;
        org.joda.time.Days days49 = days45.minus(days48);
        int int50 = days41.compareTo((org.joda.time.base.BaseSingleFieldPeriod) days48);
        org.joda.time.MutablePeriod mutablePeriod51 = days48.toMutablePeriod();
        org.joda.time.ReadableInterval readableInterval52 = null;
        org.joda.time.Days days53 = org.joda.time.Days.daysIn(readableInterval52);
        int int55 = days53.getValue((int) (short) 0);
        org.joda.time.ReadableInterval readableInterval56 = null;
        org.joda.time.Days days57 = org.joda.time.Days.daysIn(readableInterval56);
        int int59 = days57.getValue((int) (short) 0);
        org.joda.time.Days days60 = org.joda.time.Days.FIVE;
        org.joda.time.Days days61 = days57.minus(days60);
        int int62 = days53.compareTo((org.joda.time.base.BaseSingleFieldPeriod) days60);
        org.joda.time.ReadableInterval readableInterval63 = null;
        org.joda.time.Days days64 = org.joda.time.Days.daysIn(readableInterval63);
        int int66 = days64.getValue((int) (short) 0);
        org.joda.time.Days days67 = org.joda.time.Days.FIVE;
        org.joda.time.Days days68 = days64.minus(days67);
        org.joda.time.DurationFieldType durationFieldType69 = null;
        boolean boolean70 = days67.isSupported(durationFieldType69);
        org.joda.time.DurationFieldType durationFieldType72 = days67.getFieldType(0);
        int int73 = days53.get(durationFieldType72);
        boolean boolean74 = days48.isSupported(durationFieldType72);
        boolean boolean75 = days8.isSupported(durationFieldType72);
        int int76 = days8.size();
        org.junit.Assert.assertNotNull(days1);
        org.junit.Assert.assertNotNull(days3);
        org.junit.Assert.assertNotNull(days5);
        org.junit.Assert.assertNotNull(days7);
        org.junit.Assert.assertNotNull(days8);
        org.junit.Assert.assertNotNull(days10);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNotNull(days14);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertNotNull(days17);
        org.junit.Assert.assertNotNull(days18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "P0D" + "'", str20, "P0D");
        org.junit.Assert.assertNotNull(days22);
        org.junit.Assert.assertNotNull(periodType23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 52 + "'", int24 == 52);
        org.junit.Assert.assertNotNull(days26);
        org.junit.Assert.assertNotNull(days28);
        org.junit.Assert.assertNotNull(days30);
        org.junit.Assert.assertNotNull(days32);
        org.junit.Assert.assertNotNull(days34);
        org.junit.Assert.assertNotNull(days36);
        org.junit.Assert.assertNotNull(days37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(period39);
        org.junit.Assert.assertNotNull(days41);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0);
        org.junit.Assert.assertNotNull(days45);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 0 + "'", int47 == 0);
        org.junit.Assert.assertNotNull(days48);
        org.junit.Assert.assertNotNull(days49);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + (-1) + "'", int50 == (-1));
        org.junit.Assert.assertNotNull(mutablePeriod51);
        org.junit.Assert.assertNotNull(days53);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 0 + "'", int55 == 0);
        org.junit.Assert.assertNotNull(days57);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 0 + "'", int59 == 0);
        org.junit.Assert.assertNotNull(days60);
        org.junit.Assert.assertNotNull(days61);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + (-1) + "'", int62 == (-1));
        org.junit.Assert.assertNotNull(days64);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 0 + "'", int66 == 0);
        org.junit.Assert.assertNotNull(days67);
        org.junit.Assert.assertNotNull(days68);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(durationFieldType72);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 0 + "'", int73 == 0);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + 1 + "'", int76 == 1);
    }

    @Test
    public void test0313() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0313");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Days days1 = org.joda.time.Days.daysIn(readableInterval0);
        int int3 = days1.getValue((int) (short) 0);
        org.joda.time.Days days4 = org.joda.time.Days.FIVE;
        org.joda.time.Days days5 = days1.minus(days4);
        org.joda.time.Days days6 = null;
        org.joda.time.Days days7 = days1.minus(days6);
        org.joda.time.ReadableInterval readableInterval8 = null;
        org.joda.time.Days days9 = org.joda.time.Days.daysIn(readableInterval8);
        int int11 = days9.getValue((int) (short) 0);
        org.joda.time.Days days12 = org.joda.time.Days.FIVE;
        org.joda.time.Days days13 = days9.minus(days12);
        org.joda.time.DurationFieldType durationFieldType14 = null;
        int int15 = days12.get(durationFieldType14);
        org.joda.time.DurationFieldType durationFieldType16 = null;
        int int17 = days12.get(durationFieldType16);
        boolean boolean19 = days12.equals((java.lang.Object) 0L);
        int int20 = days1.compareTo((org.joda.time.base.BaseSingleFieldPeriod) days12);
        org.joda.time.Days days22 = days1.minus(52);
        org.joda.time.Period period23 = days1.toPeriod();
        java.lang.String str24 = days1.toString();
        org.junit.Assert.assertNotNull(days1);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(days4);
        org.junit.Assert.assertNotNull(days5);
        org.junit.Assert.assertNotNull(days7);
        org.junit.Assert.assertNotNull(days9);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNotNull(days12);
        org.junit.Assert.assertNotNull(days13);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
        org.junit.Assert.assertNotNull(days22);
        org.junit.Assert.assertNotNull(period23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "P0D" + "'", str24, "P0D");
    }

    @Test
    public void test0314() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0314");
        org.joda.time.Days days1 = org.joda.time.Days.days(1);
        org.joda.time.Days days2 = days1.negated();
        org.joda.time.Days days4 = days1.plus((-47));
        org.joda.time.Days days6 = org.joda.time.Days.days(1);
        org.joda.time.ReadableInterval readableInterval7 = null;
        org.joda.time.Days days8 = org.joda.time.Days.daysIn(readableInterval7);
        int int10 = days8.getValue((int) (short) 0);
        org.joda.time.Days days11 = org.joda.time.Days.FIVE;
        org.joda.time.Days days12 = days8.minus(days11);
        org.joda.time.DurationFieldType durationFieldType13 = null;
        boolean boolean14 = days11.isSupported(durationFieldType13);
        org.joda.time.DurationFieldType durationFieldType16 = days11.getFieldType(0);
        org.joda.time.ReadableInterval readableInterval17 = null;
        org.joda.time.Days days18 = org.joda.time.Days.daysIn(readableInterval17);
        int int20 = days18.getValue((int) (short) 0);
        org.joda.time.Days days21 = org.joda.time.Days.FIVE;
        org.joda.time.Days days22 = days18.minus(days21);
        org.joda.time.Days days23 = null;
        org.joda.time.Days days24 = days18.minus(days23);
        org.joda.time.Days days26 = days18.minus((-1));
        org.joda.time.DurationFieldType durationFieldType27 = days18.getFieldType();
        boolean boolean28 = days11.isGreaterThan(days18);
        org.joda.time.ReadableInterval readableInterval29 = null;
        org.joda.time.Days days30 = org.joda.time.Days.daysIn(readableInterval29);
        org.joda.time.Days days32 = days30.plus((int) (byte) 10);
        org.joda.time.Days days33 = days18.plus(days32);
        org.joda.time.MutablePeriod mutablePeriod34 = days32.toMutablePeriod();
        org.joda.time.PeriodType periodType35 = days32.getPeriodType();
        org.joda.time.Days days36 = days6.minus(days32);
        org.joda.time.Days days38 = days6.minus((int) (byte) 10);
        org.joda.time.Days days40 = days6.multipliedBy(0);
        org.joda.time.DurationFieldType durationFieldType41 = days6.getFieldType();
        int int42 = days4.get(durationFieldType41);
        org.junit.Assert.assertNotNull(days1);
        org.junit.Assert.assertNotNull(days2);
        org.junit.Assert.assertNotNull(days4);
        org.junit.Assert.assertNotNull(days6);
        org.junit.Assert.assertNotNull(days8);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(days11);
        org.junit.Assert.assertNotNull(days12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(durationFieldType16);
        org.junit.Assert.assertNotNull(days18);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertNotNull(days21);
        org.junit.Assert.assertNotNull(days22);
        org.junit.Assert.assertNotNull(days24);
        org.junit.Assert.assertNotNull(days26);
        org.junit.Assert.assertNotNull(durationFieldType27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(days30);
        org.junit.Assert.assertNotNull(days32);
        org.junit.Assert.assertNotNull(days33);
        org.junit.Assert.assertNotNull(mutablePeriod34);
        org.junit.Assert.assertNotNull(periodType35);
        org.junit.Assert.assertNotNull(days36);
        org.junit.Assert.assertNotNull(days38);
        org.junit.Assert.assertNotNull(days40);
        org.junit.Assert.assertNotNull(durationFieldType41);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + (-46) + "'", int42 == (-46));
    }

    @Test
    public void test0315() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0315");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Days days1 = org.joda.time.Days.daysIn(readableInterval0);
        int int3 = days1.getValue((int) (short) 0);
        org.joda.time.Days days4 = org.joda.time.Days.FIVE;
        org.joda.time.Days days5 = days1.minus(days4);
        org.joda.time.DurationFieldType durationFieldType6 = null;
        int int7 = days4.get(durationFieldType6);
        int int8 = days4.getDays();
        org.joda.time.Days days9 = days4.negated();
        org.joda.time.Days days11 = days4.plus(5);
        org.joda.time.Period period12 = days11.toPeriod();
        org.junit.Assert.assertNotNull(days1);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(days4);
        org.junit.Assert.assertNotNull(days5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 5 + "'", int8 == 5);
        org.junit.Assert.assertNotNull(days9);
        org.junit.Assert.assertNotNull(days11);
        org.junit.Assert.assertNotNull(period12);
    }

    @Test
    public void test0316() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0316");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Days days1 = org.joda.time.Days.daysIn(readableInterval0);
        int int3 = days1.getValue((int) (short) 0);
        org.joda.time.Period period4 = days1.toPeriod();
        org.joda.time.Days days5 = org.joda.time.Days.standardDaysIn((org.joda.time.ReadablePeriod) days1);
        org.joda.time.Days days6 = org.joda.time.Days.THREE;
        org.joda.time.ReadableInterval readableInterval7 = null;
        org.joda.time.Days days8 = org.joda.time.Days.daysIn(readableInterval7);
        org.joda.time.ReadableInterval readableInterval9 = null;
        org.joda.time.Days days10 = org.joda.time.Days.daysIn(readableInterval9);
        int int12 = days10.getValue((int) (short) 0);
        org.joda.time.Days days13 = org.joda.time.Days.FIVE;
        org.joda.time.Days days14 = days10.minus(days13);
        org.joda.time.DurationFieldType durationFieldType15 = null;
        boolean boolean16 = days13.isSupported(durationFieldType15);
        org.joda.time.DurationFieldType durationFieldType18 = days13.getFieldType(0);
        int int19 = days8.get(durationFieldType18);
        org.joda.time.ReadableInterval readableInterval20 = null;
        org.joda.time.Days days21 = org.joda.time.Days.daysIn(readableInterval20);
        int int23 = days21.getValue((int) (short) 0);
        org.joda.time.Days days24 = org.joda.time.Days.FIVE;
        org.joda.time.Days days25 = days21.minus(days24);
        org.joda.time.DurationFieldType durationFieldType26 = null;
        int int27 = days24.get(durationFieldType26);
        org.joda.time.DurationFieldType durationFieldType28 = null;
        int int29 = days24.get(durationFieldType28);
        boolean boolean31 = days24.equals((java.lang.Object) 0L);
        boolean boolean32 = days8.isGreaterThan(days24);
        org.joda.time.ReadableInterval readableInterval33 = null;
        org.joda.time.Days days34 = org.joda.time.Days.daysIn(readableInterval33);
        int int36 = days34.getValue((int) (short) 0);
        org.joda.time.Days days37 = org.joda.time.Days.FIVE;
        org.joda.time.Days days38 = days34.minus(days37);
        org.joda.time.DurationFieldType durationFieldType39 = null;
        int int40 = days37.get(durationFieldType39);
        org.joda.time.DurationFieldType durationFieldType41 = null;
        int int42 = days37.get(durationFieldType41);
        boolean boolean44 = days37.equals((java.lang.Object) 0L);
        org.joda.time.Period period45 = days37.toPeriod();
        org.joda.time.Days days46 = days8.plus(days37);
        boolean boolean47 = days6.isGreaterThan(days46);
        org.joda.time.Days days49 = days46.dividedBy(42);
        boolean boolean50 = days5.isLessThan(days46);
        org.joda.time.MutablePeriod mutablePeriod51 = days5.toMutablePeriod();
        // The following exception was thrown during execution in test generation
        try {
            int int53 = days5.getValue((int) 'a');
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 97");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(days1);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(days5);
        org.junit.Assert.assertNotNull(days6);
        org.junit.Assert.assertNotNull(days8);
        org.junit.Assert.assertNotNull(days10);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNotNull(days13);
        org.junit.Assert.assertNotNull(days14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(durationFieldType18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertNotNull(days21);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertNotNull(days24);
        org.junit.Assert.assertNotNull(days25);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(days34);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertNotNull(days37);
        org.junit.Assert.assertNotNull(days38);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(period45);
        org.junit.Assert.assertNotNull(days46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(days49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(mutablePeriod51);
    }

    @Test
    public void test0317() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0317");
        org.joda.time.Days days1 = org.joda.time.Days.parseDays("P0D");
        org.joda.time.ReadableInterval readableInterval2 = null;
        org.joda.time.Days days3 = org.joda.time.Days.daysIn(readableInterval2);
        org.joda.time.Days days5 = days3.plus((int) (byte) 10);
        org.joda.time.MutablePeriod mutablePeriod6 = days3.toMutablePeriod();
        int int7 = days3.size();
        int int8 = days1.compareTo((org.joda.time.base.BaseSingleFieldPeriod) days3);
        org.joda.time.Days days10 = org.joda.time.Days.days((int) 'a');
        org.joda.time.Days days11 = org.joda.time.Days.SIX;
        org.joda.time.Days days13 = days11.plus(100);
        org.joda.time.ReadableInterval readableInterval14 = null;
        org.joda.time.Days days15 = org.joda.time.Days.daysIn(readableInterval14);
        int int17 = days15.getValue((int) (short) 0);
        org.joda.time.Days days18 = org.joda.time.Days.FIVE;
        org.joda.time.Days days19 = days15.minus(days18);
        org.joda.time.Days days20 = null;
        org.joda.time.Days days21 = days15.minus(days20);
        org.joda.time.Days days23 = days15.minus((-1));
        org.joda.time.DurationFieldType durationFieldType24 = days15.getFieldType();
        int int25 = days11.get(durationFieldType24);
        int int26 = days10.get(durationFieldType24);
        org.joda.time.Days days28 = org.joda.time.Days.days((-1));
        boolean boolean29 = days10.isGreaterThan(days28);
        org.joda.time.Days days30 = null;
        boolean boolean31 = days10.isLessThan(days30);
        org.joda.time.Days days32 = days1.minus(days10);
        org.joda.time.Period period33 = days32.toPeriod();
        org.joda.time.Days days34 = days32.negated();
        org.joda.time.Days days36 = days34.multipliedBy((int) (byte) 100);
        org.junit.Assert.assertNotNull(days1);
        org.junit.Assert.assertNotNull(days3);
        org.junit.Assert.assertNotNull(days5);
        org.junit.Assert.assertNotNull(mutablePeriod6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNotNull(days10);
        org.junit.Assert.assertNotNull(days11);
        org.junit.Assert.assertNotNull(days13);
        org.junit.Assert.assertNotNull(days15);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNotNull(days18);
        org.junit.Assert.assertNotNull(days19);
        org.junit.Assert.assertNotNull(days21);
        org.junit.Assert.assertNotNull(days23);
        org.junit.Assert.assertNotNull(durationFieldType24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 6 + "'", int25 == 6);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 97 + "'", int26 == 97);
        org.junit.Assert.assertNotNull(days28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(days32);
        org.junit.Assert.assertNotNull(period33);
        org.junit.Assert.assertNotNull(days34);
        org.junit.Assert.assertNotNull(days36);
    }

    @Test
    public void test0318() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0318");
        org.joda.time.Days days1 = org.joda.time.Days.parseDays("P-6D");
        org.joda.time.Days days2 = org.joda.time.Days.standardDaysIn((org.joda.time.ReadablePeriod) days1);
        org.junit.Assert.assertNotNull(days1);
        org.junit.Assert.assertNotNull(days2);
    }

    @Test
    public void test0319() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0319");
        org.joda.time.Days days1 = org.joda.time.Days.parseDays("P-2147483647D");
        org.junit.Assert.assertNotNull(days1);
    }

    @Test
    public void test0320() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0320");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Days days1 = org.joda.time.Days.daysIn(readableInterval0);
        int int3 = days1.getValue((int) (short) 0);
        org.joda.time.Days days4 = org.joda.time.Days.FIVE;
        org.joda.time.Days days5 = days1.minus(days4);
        org.joda.time.ReadableInterval readableInterval6 = null;
        org.joda.time.Days days7 = org.joda.time.Days.daysIn(readableInterval6);
        int int9 = days7.getValue((int) (short) 0);
        int int10 = days1.compareTo((org.joda.time.base.BaseSingleFieldPeriod) days7);
        org.joda.time.ReadableInterval readableInterval11 = null;
        org.joda.time.Days days12 = org.joda.time.Days.daysIn(readableInterval11);
        int int14 = days12.getValue((int) (short) 0);
        org.joda.time.Days days15 = org.joda.time.Days.FIVE;
        org.joda.time.Days days16 = days12.minus(days15);
        org.joda.time.DurationFieldType durationFieldType17 = null;
        int int18 = days15.get(durationFieldType17);
        org.joda.time.DurationFieldType durationFieldType19 = null;
        int int20 = days15.get(durationFieldType19);
        boolean boolean22 = days15.equals((java.lang.Object) false);
        boolean boolean23 = days7.equals((java.lang.Object) days15);
        org.joda.time.ReadableInterval readableInterval24 = null;
        org.joda.time.Days days25 = org.joda.time.Days.daysIn(readableInterval24);
        int int27 = days25.getValue((int) (short) 0);
        org.joda.time.Days days28 = org.joda.time.Days.FIVE;
        org.joda.time.Days days29 = days25.minus(days28);
        org.joda.time.Days days30 = null;
        org.joda.time.Days days31 = days25.minus(days30);
        org.joda.time.Days days33 = days25.minus((-1));
        int int34 = days25.size();
        org.joda.time.Days days35 = days15.minus(days25);
        org.joda.time.Days days37 = org.joda.time.Days.days((int) (byte) 10);
        org.joda.time.ReadableInterval readableInterval38 = null;
        org.joda.time.Days days39 = org.joda.time.Days.daysIn(readableInterval38);
        org.joda.time.Days days41 = days39.plus((int) (byte) 10);
        org.joda.time.MutablePeriod mutablePeriod42 = days39.toMutablePeriod();
        org.joda.time.Days days44 = days39.plus((int) (short) -1);
        org.joda.time.ReadableInterval readableInterval45 = null;
        org.joda.time.Days days46 = org.joda.time.Days.daysIn(readableInterval45);
        int int48 = days46.getValue((int) (short) 0);
        org.joda.time.Days days49 = org.joda.time.Days.FIVE;
        org.joda.time.Days days50 = days46.minus(days49);
        org.joda.time.Days days51 = null;
        org.joda.time.Days days52 = days46.minus(days51);
        org.joda.time.Days days54 = days46.minus((-1));
        int int55 = days46.size();
        boolean boolean56 = days39.isGreaterThan(days46);
        org.joda.time.DurationFieldType durationFieldType58 = days46.getFieldType((int) (short) 0);
        int int59 = days37.get(durationFieldType58);
        boolean boolean60 = days25.isSupported(durationFieldType58);
        org.joda.time.PeriodType periodType61 = days25.getPeriodType();
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Days days63 = days25.dividedBy(0);
            org.junit.Assert.fail("Expected exception of type java.lang.ArithmeticException; message: / by zero");
        } catch (java.lang.ArithmeticException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(days1);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(days4);
        org.junit.Assert.assertNotNull(days5);
        org.junit.Assert.assertNotNull(days7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(days12);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNotNull(days15);
        org.junit.Assert.assertNotNull(days16);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(days25);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertNotNull(days28);
        org.junit.Assert.assertNotNull(days29);
        org.junit.Assert.assertNotNull(days31);
        org.junit.Assert.assertNotNull(days33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 1 + "'", int34 == 1);
        org.junit.Assert.assertNotNull(days35);
        org.junit.Assert.assertNotNull(days37);
        org.junit.Assert.assertNotNull(days39);
        org.junit.Assert.assertNotNull(days41);
        org.junit.Assert.assertNotNull(mutablePeriod42);
        org.junit.Assert.assertNotNull(days44);
        org.junit.Assert.assertNotNull(days46);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 0 + "'", int48 == 0);
        org.junit.Assert.assertNotNull(days49);
        org.junit.Assert.assertNotNull(days50);
        org.junit.Assert.assertNotNull(days52);
        org.junit.Assert.assertNotNull(days54);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 1 + "'", int55 == 1);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(durationFieldType58);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 10 + "'", int59 == 10);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(periodType61);
    }

    @Test
    public void test0321() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0321");
        org.joda.time.Days days1 = org.joda.time.Days.days(10);
        org.joda.time.PeriodType periodType2 = days1.getPeriodType();
        int int3 = days1.size();
        org.junit.Assert.assertNotNull(days1);
        org.junit.Assert.assertNotNull(periodType2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
    }

    @Test
    public void test0322() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0322");
        org.joda.time.Days days0 = org.joda.time.Days.SIX;
        org.joda.time.Days days2 = days0.plus(100);
        org.joda.time.Days days4 = days0.plus((int) (byte) 1);
        int int5 = days4.size();
        org.joda.time.Duration duration6 = days4.toStandardDuration();
        org.junit.Assert.assertNotNull(days0);
        org.junit.Assert.assertNotNull(days2);
        org.junit.Assert.assertNotNull(days4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
        org.junit.Assert.assertNotNull(duration6);
    }

    @Test
    public void test0323() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0323");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Days days1 = org.joda.time.Days.daysIn(readableInterval0);
        int int3 = days1.getValue((int) (short) 0);
        org.joda.time.Days days4 = org.joda.time.Days.FIVE;
        org.joda.time.Days days5 = days1.minus(days4);
        org.joda.time.DurationFieldType durationFieldType6 = null;
        int int7 = days4.get(durationFieldType6);
        org.joda.time.DurationFieldType durationFieldType8 = null;
        int int9 = days4.get(durationFieldType8);
        boolean boolean11 = days4.equals((java.lang.Object) 0L);
        int int12 = days4.getDays();
        org.joda.time.ReadableInterval readableInterval13 = null;
        org.joda.time.Days days14 = org.joda.time.Days.daysIn(readableInterval13);
        int int16 = days14.getValue((int) (short) 0);
        org.joda.time.Days days17 = org.joda.time.Days.FIVE;
        org.joda.time.Days days18 = days14.minus(days17);
        org.joda.time.DurationFieldType durationFieldType19 = null;
        int int20 = days17.get(durationFieldType19);
        org.joda.time.DurationFieldType durationFieldType21 = null;
        int int22 = days17.get(durationFieldType21);
        boolean boolean24 = days17.equals((java.lang.Object) false);
        int int25 = days17.getDays();
        org.joda.time.MutablePeriod mutablePeriod26 = days17.toMutablePeriod();
        boolean boolean27 = days4.isGreaterThan(days17);
        org.junit.Assert.assertNotNull(days1);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(days4);
        org.junit.Assert.assertNotNull(days5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 5 + "'", int12 == 5);
        org.junit.Assert.assertNotNull(days14);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertNotNull(days17);
        org.junit.Assert.assertNotNull(days18);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 5 + "'", int25 == 5);
        org.junit.Assert.assertNotNull(mutablePeriod26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
    }

    @Test
    public void test0324() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0324");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Days days1 = org.joda.time.Days.daysIn(readableInterval0);
        int int3 = days1.getValue((int) (short) 0);
        org.joda.time.Days days4 = org.joda.time.Days.FIVE;
        org.joda.time.Days days5 = days1.minus(days4);
        org.joda.time.ReadableInterval readableInterval6 = null;
        org.joda.time.Days days7 = org.joda.time.Days.daysIn(readableInterval6);
        int int9 = days7.getValue((int) (short) 0);
        int int10 = days1.compareTo((org.joda.time.base.BaseSingleFieldPeriod) days7);
        org.joda.time.ReadableInterval readableInterval11 = null;
        org.joda.time.Days days12 = org.joda.time.Days.daysIn(readableInterval11);
        int int14 = days12.getValue((int) (short) 0);
        org.joda.time.Days days15 = org.joda.time.Days.FIVE;
        org.joda.time.Days days16 = days12.minus(days15);
        org.joda.time.DurationFieldType durationFieldType17 = null;
        int int18 = days15.get(durationFieldType17);
        org.joda.time.DurationFieldType durationFieldType19 = null;
        int int20 = days15.get(durationFieldType19);
        boolean boolean22 = days15.equals((java.lang.Object) false);
        boolean boolean23 = days7.equals((java.lang.Object) days15);
        org.joda.time.ReadableInterval readableInterval24 = null;
        org.joda.time.Days days25 = org.joda.time.Days.daysIn(readableInterval24);
        int int27 = days25.getValue((int) (short) 0);
        org.joda.time.Days days28 = org.joda.time.Days.FIVE;
        org.joda.time.Days days29 = days25.minus(days28);
        org.joda.time.Days days30 = null;
        org.joda.time.Days days31 = days25.minus(days30);
        org.joda.time.Days days33 = days25.minus((-1));
        int int34 = days25.size();
        org.joda.time.Days days35 = days15.minus(days25);
        org.joda.time.MutablePeriod mutablePeriod36 = days35.toMutablePeriod();
        org.joda.time.MutablePeriod mutablePeriod37 = days35.toMutablePeriod();
        org.junit.Assert.assertNotNull(days1);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(days4);
        org.junit.Assert.assertNotNull(days5);
        org.junit.Assert.assertNotNull(days7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(days12);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNotNull(days15);
        org.junit.Assert.assertNotNull(days16);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(days25);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertNotNull(days28);
        org.junit.Assert.assertNotNull(days29);
        org.junit.Assert.assertNotNull(days31);
        org.junit.Assert.assertNotNull(days33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 1 + "'", int34 == 1);
        org.junit.Assert.assertNotNull(days35);
        org.junit.Assert.assertNotNull(mutablePeriod36);
        org.junit.Assert.assertNotNull(mutablePeriod37);
    }

    @Test
    public void test0325() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0325");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Days days1 = org.joda.time.Days.daysIn(readableInterval0);
        org.joda.time.ReadableInterval readableInterval2 = null;
        org.joda.time.Days days3 = org.joda.time.Days.daysIn(readableInterval2);
        int int5 = days3.getValue((int) (short) 0);
        org.joda.time.Days days6 = org.joda.time.Days.FIVE;
        org.joda.time.Days days7 = days3.minus(days6);
        org.joda.time.DurationFieldType durationFieldType8 = null;
        boolean boolean9 = days6.isSupported(durationFieldType8);
        org.joda.time.DurationFieldType durationFieldType11 = days6.getFieldType(0);
        int int12 = days1.get(durationFieldType11);
        org.joda.time.ReadableInterval readableInterval13 = null;
        org.joda.time.Days days14 = org.joda.time.Days.daysIn(readableInterval13);
        int int16 = days14.getValue((int) (short) 0);
        org.joda.time.Days days17 = org.joda.time.Days.FIVE;
        org.joda.time.Days days18 = days14.minus(days17);
        org.joda.time.DurationFieldType durationFieldType19 = null;
        int int20 = days17.get(durationFieldType19);
        org.joda.time.DurationFieldType durationFieldType21 = null;
        int int22 = days17.get(durationFieldType21);
        boolean boolean24 = days17.equals((java.lang.Object) 0L);
        boolean boolean25 = days1.isGreaterThan(days17);
        org.joda.time.ReadableInterval readableInterval26 = null;
        org.joda.time.Days days27 = org.joda.time.Days.daysIn(readableInterval26);
        int int29 = days27.getValue((int) (short) 0);
        org.joda.time.Days days30 = org.joda.time.Days.FIVE;
        org.joda.time.Days days31 = days27.minus(days30);
        org.joda.time.DurationFieldType durationFieldType32 = null;
        int int33 = days30.get(durationFieldType32);
        org.joda.time.DurationFieldType durationFieldType34 = null;
        int int35 = days30.get(durationFieldType34);
        boolean boolean37 = days30.equals((java.lang.Object) 0L);
        org.joda.time.Period period38 = days30.toPeriod();
        org.joda.time.Days days39 = days1.plus(days30);
        org.joda.time.ReadableInterval readableInterval40 = null;
        org.joda.time.Days days41 = org.joda.time.Days.daysIn(readableInterval40);
        int int43 = days41.getValue((int) (short) 0);
        org.joda.time.Period period44 = days41.toPeriod();
        org.joda.time.Days days45 = org.joda.time.Days.standardDaysIn((org.joda.time.ReadablePeriod) days41);
        boolean boolean46 = days1.equals((java.lang.Object) days45);
        org.joda.time.ReadableInterval readableInterval47 = null;
        org.joda.time.Days days48 = org.joda.time.Days.daysIn(readableInterval47);
        int int50 = days48.getValue((int) (short) 0);
        org.joda.time.Days days51 = org.joda.time.Days.FIVE;
        org.joda.time.Days days52 = days48.minus(days51);
        org.joda.time.DurationFieldType durationFieldType53 = null;
        boolean boolean54 = days51.isSupported(durationFieldType53);
        org.joda.time.DurationFieldType durationFieldType56 = days51.getFieldType(0);
        boolean boolean57 = days45.isSupported(durationFieldType56);
        org.joda.time.Days days59 = days45.plus((int) (byte) 100);
        org.joda.time.Days days60 = days59.negated();
        org.joda.time.Duration duration61 = days60.toStandardDuration();
        org.junit.Assert.assertNotNull(days1);
        org.junit.Assert.assertNotNull(days3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(days6);
        org.junit.Assert.assertNotNull(days7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(durationFieldType11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNotNull(days14);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertNotNull(days17);
        org.junit.Assert.assertNotNull(days18);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(days27);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertNotNull(days30);
        org.junit.Assert.assertNotNull(days31);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(period38);
        org.junit.Assert.assertNotNull(days39);
        org.junit.Assert.assertNotNull(days41);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0);
        org.junit.Assert.assertNotNull(period44);
        org.junit.Assert.assertNotNull(days45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(days48);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 0 + "'", int50 == 0);
        org.junit.Assert.assertNotNull(days51);
        org.junit.Assert.assertNotNull(days52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(durationFieldType56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(days59);
        org.junit.Assert.assertNotNull(days60);
        org.junit.Assert.assertNotNull(duration61);
    }

    @Test
    public void test0326() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0326");
        org.joda.time.Days days0 = org.joda.time.Days.THREE;
        org.joda.time.ReadableInterval readableInterval1 = null;
        org.joda.time.Days days2 = org.joda.time.Days.daysIn(readableInterval1);
        org.joda.time.ReadableInterval readableInterval3 = null;
        org.joda.time.Days days4 = org.joda.time.Days.daysIn(readableInterval3);
        int int6 = days4.getValue((int) (short) 0);
        org.joda.time.Days days7 = org.joda.time.Days.FIVE;
        org.joda.time.Days days8 = days4.minus(days7);
        org.joda.time.DurationFieldType durationFieldType9 = null;
        boolean boolean10 = days7.isSupported(durationFieldType9);
        org.joda.time.DurationFieldType durationFieldType12 = days7.getFieldType(0);
        int int13 = days2.get(durationFieldType12);
        org.joda.time.ReadableInterval readableInterval14 = null;
        org.joda.time.Days days15 = org.joda.time.Days.daysIn(readableInterval14);
        int int17 = days15.getValue((int) (short) 0);
        org.joda.time.Days days18 = org.joda.time.Days.FIVE;
        org.joda.time.Days days19 = days15.minus(days18);
        org.joda.time.DurationFieldType durationFieldType20 = null;
        int int21 = days18.get(durationFieldType20);
        org.joda.time.DurationFieldType durationFieldType22 = null;
        int int23 = days18.get(durationFieldType22);
        boolean boolean25 = days18.equals((java.lang.Object) 0L);
        boolean boolean26 = days2.isGreaterThan(days18);
        org.joda.time.ReadableInterval readableInterval27 = null;
        org.joda.time.Days days28 = org.joda.time.Days.daysIn(readableInterval27);
        int int30 = days28.getValue((int) (short) 0);
        org.joda.time.Days days31 = org.joda.time.Days.FIVE;
        org.joda.time.Days days32 = days28.minus(days31);
        org.joda.time.DurationFieldType durationFieldType33 = null;
        int int34 = days31.get(durationFieldType33);
        org.joda.time.DurationFieldType durationFieldType35 = null;
        int int36 = days31.get(durationFieldType35);
        boolean boolean38 = days31.equals((java.lang.Object) 0L);
        org.joda.time.Period period39 = days31.toPeriod();
        org.joda.time.Days days40 = days2.plus(days31);
        boolean boolean41 = days0.isGreaterThan(days40);
        org.joda.time.Days days43 = days40.dividedBy(42);
        org.joda.time.PeriodType periodType44 = days40.getPeriodType();
        org.joda.time.PeriodType periodType45 = days40.getPeriodType();
        org.joda.time.Days days46 = org.joda.time.Days.SEVEN;
        org.joda.time.Days days48 = days46.plus(1);
        java.lang.String str49 = days46.toString();
        org.joda.time.Days days50 = org.joda.time.Days.standardDaysIn((org.joda.time.ReadablePeriod) days46);
        org.joda.time.Days days51 = days40.minus(days46);
        org.joda.time.ReadableInterval readableInterval52 = null;
        org.joda.time.Days days53 = org.joda.time.Days.daysIn(readableInterval52);
        int int55 = days53.getValue((int) (short) 0);
        org.joda.time.Days days56 = org.joda.time.Days.FIVE;
        org.joda.time.Days days57 = days53.minus(days56);
        org.joda.time.Days days59 = days53.plus((int) (byte) 0);
        org.joda.time.Days days61 = days59.plus(0);
        org.joda.time.Days days62 = days40.plus(days61);
        org.junit.Assert.assertNotNull(days0);
        org.junit.Assert.assertNotNull(days2);
        org.junit.Assert.assertNotNull(days4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNotNull(days7);
        org.junit.Assert.assertNotNull(days8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(durationFieldType12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(days15);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNotNull(days18);
        org.junit.Assert.assertNotNull(days19);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(days28);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertNotNull(days31);
        org.junit.Assert.assertNotNull(days32);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(period39);
        org.junit.Assert.assertNotNull(days40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(days43);
        org.junit.Assert.assertNotNull(periodType44);
        org.junit.Assert.assertNotNull(periodType45);
        org.junit.Assert.assertNotNull(days46);
        org.junit.Assert.assertNotNull(days48);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "P7D" + "'", str49, "P7D");
        org.junit.Assert.assertNotNull(days50);
        org.junit.Assert.assertNotNull(days51);
        org.junit.Assert.assertNotNull(days53);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 0 + "'", int55 == 0);
        org.junit.Assert.assertNotNull(days56);
        org.junit.Assert.assertNotNull(days57);
        org.junit.Assert.assertNotNull(days59);
        org.junit.Assert.assertNotNull(days61);
        org.junit.Assert.assertNotNull(days62);
    }

    @Test
    public void test0327() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0327");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Days days1 = org.joda.time.Days.daysIn(readableInterval0);
        int int3 = days1.getValue((int) (short) 0);
        org.joda.time.ReadableInterval readableInterval4 = null;
        org.joda.time.Days days5 = org.joda.time.Days.daysIn(readableInterval4);
        int int7 = days5.getValue((int) (short) 0);
        org.joda.time.Days days8 = org.joda.time.Days.FIVE;
        org.joda.time.Days days9 = days5.minus(days8);
        int int10 = days1.compareTo((org.joda.time.base.BaseSingleFieldPeriod) days8);
        java.lang.String str11 = days1.toString();
        org.joda.time.Days days13 = days1.plus((int) '4');
        org.joda.time.PeriodType periodType14 = days13.getPeriodType();
        int int15 = days13.getDays();
        org.joda.time.Days days17 = days13.minus((int) ' ');
        org.joda.time.ReadableInterval readableInterval18 = null;
        org.joda.time.Days days19 = org.joda.time.Days.daysIn(readableInterval18);
        org.joda.time.Days days21 = days19.plus((int) (byte) 10);
        org.joda.time.Days days23 = days21.dividedBy((int) 'a');
        org.joda.time.Days days25 = days21.dividedBy(5);
        org.joda.time.Days days27 = days21.plus((int) (byte) -1);
        org.joda.time.Days days28 = days13.plus(days21);
        org.joda.time.DurationFieldType durationFieldType29 = days28.getFieldType();
        org.joda.time.Days days31 = org.joda.time.Days.days((int) 'a');
        org.joda.time.Days days32 = org.joda.time.Days.SIX;
        org.joda.time.Days days34 = days32.plus(100);
        org.joda.time.ReadableInterval readableInterval35 = null;
        org.joda.time.Days days36 = org.joda.time.Days.daysIn(readableInterval35);
        int int38 = days36.getValue((int) (short) 0);
        org.joda.time.Days days39 = org.joda.time.Days.FIVE;
        org.joda.time.Days days40 = days36.minus(days39);
        org.joda.time.Days days41 = null;
        org.joda.time.Days days42 = days36.minus(days41);
        org.joda.time.Days days44 = days36.minus((-1));
        org.joda.time.DurationFieldType durationFieldType45 = days36.getFieldType();
        int int46 = days32.get(durationFieldType45);
        int int47 = days31.get(durationFieldType45);
        org.joda.time.Days days49 = org.joda.time.Days.days((-1));
        boolean boolean50 = days31.isGreaterThan(days49);
        boolean boolean51 = days28.isGreaterThan(days31);
        org.joda.time.Duration duration52 = days28.toStandardDuration();
        org.junit.Assert.assertNotNull(days1);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(days5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(days8);
        org.junit.Assert.assertNotNull(days9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "P0D" + "'", str11, "P0D");
        org.junit.Assert.assertNotNull(days13);
        org.junit.Assert.assertNotNull(periodType14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 52 + "'", int15 == 52);
        org.junit.Assert.assertNotNull(days17);
        org.junit.Assert.assertNotNull(days19);
        org.junit.Assert.assertNotNull(days21);
        org.junit.Assert.assertNotNull(days23);
        org.junit.Assert.assertNotNull(days25);
        org.junit.Assert.assertNotNull(days27);
        org.junit.Assert.assertNotNull(days28);
        org.junit.Assert.assertNotNull(durationFieldType29);
        org.junit.Assert.assertNotNull(days31);
        org.junit.Assert.assertNotNull(days32);
        org.junit.Assert.assertNotNull(days34);
        org.junit.Assert.assertNotNull(days36);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 0 + "'", int38 == 0);
        org.junit.Assert.assertNotNull(days39);
        org.junit.Assert.assertNotNull(days40);
        org.junit.Assert.assertNotNull(days42);
        org.junit.Assert.assertNotNull(days44);
        org.junit.Assert.assertNotNull(durationFieldType45);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 6 + "'", int46 == 6);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 97 + "'", int47 == 97);
        org.junit.Assert.assertNotNull(days49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(duration52);
    }

    @Test
    public void test0328() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0328");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Days days1 = org.joda.time.Days.daysIn(readableInterval0);
        org.joda.time.ReadableInterval readableInterval2 = null;
        org.joda.time.Days days3 = org.joda.time.Days.daysIn(readableInterval2);
        int int5 = days3.getValue((int) (short) 0);
        org.joda.time.Days days6 = org.joda.time.Days.FIVE;
        org.joda.time.Days days7 = days3.minus(days6);
        org.joda.time.DurationFieldType durationFieldType8 = null;
        boolean boolean9 = days6.isSupported(durationFieldType8);
        org.joda.time.DurationFieldType durationFieldType11 = days6.getFieldType(0);
        int int12 = days1.get(durationFieldType11);
        org.joda.time.ReadableInterval readableInterval13 = null;
        org.joda.time.Days days14 = org.joda.time.Days.daysIn(readableInterval13);
        int int16 = days14.getValue((int) (short) 0);
        org.joda.time.Days days17 = org.joda.time.Days.FIVE;
        org.joda.time.Days days18 = days14.minus(days17);
        org.joda.time.DurationFieldType durationFieldType19 = null;
        int int20 = days17.get(durationFieldType19);
        org.joda.time.DurationFieldType durationFieldType21 = null;
        int int22 = days17.get(durationFieldType21);
        boolean boolean24 = days17.equals((java.lang.Object) 0L);
        boolean boolean25 = days1.isGreaterThan(days17);
        org.joda.time.ReadableInterval readableInterval26 = null;
        org.joda.time.Days days27 = org.joda.time.Days.daysIn(readableInterval26);
        int int29 = days27.getValue((int) (short) 0);
        org.joda.time.Days days30 = org.joda.time.Days.FIVE;
        org.joda.time.Days days31 = days27.minus(days30);
        org.joda.time.DurationFieldType durationFieldType32 = null;
        int int33 = days30.get(durationFieldType32);
        org.joda.time.DurationFieldType durationFieldType34 = null;
        int int35 = days30.get(durationFieldType34);
        boolean boolean37 = days30.equals((java.lang.Object) 0L);
        org.joda.time.Period period38 = days30.toPeriod();
        org.joda.time.Days days39 = days1.plus(days30);
        org.joda.time.Days days41 = days30.minus(10);
        java.lang.Class<?> wildcardClass42 = days41.getClass();
        org.junit.Assert.assertNotNull(days1);
        org.junit.Assert.assertNotNull(days3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(days6);
        org.junit.Assert.assertNotNull(days7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(durationFieldType11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNotNull(days14);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertNotNull(days17);
        org.junit.Assert.assertNotNull(days18);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(days27);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertNotNull(days30);
        org.junit.Assert.assertNotNull(days31);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(period38);
        org.junit.Assert.assertNotNull(days39);
        org.junit.Assert.assertNotNull(days41);
        org.junit.Assert.assertNotNull(wildcardClass42);
    }

    @Test
    public void test0329() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0329");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Days days1 = org.joda.time.Days.daysIn(readableInterval0);
        org.joda.time.Days days3 = days1.plus((int) (byte) 10);
        org.joda.time.Days days5 = days3.dividedBy((int) 'a');
        org.joda.time.Days days7 = days3.dividedBy(5);
        org.joda.time.Days days9 = days3.plus((int) (byte) -1);
        org.joda.time.Days days11 = days3.dividedBy((int) (byte) -1);
        // The following exception was thrown during execution in test generation
        try {
            int int13 = days3.getValue(100);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 100");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(days1);
        org.junit.Assert.assertNotNull(days3);
        org.junit.Assert.assertNotNull(days5);
        org.junit.Assert.assertNotNull(days7);
        org.junit.Assert.assertNotNull(days9);
        org.junit.Assert.assertNotNull(days11);
    }

    @Test
    public void test0330() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0330");
        org.joda.time.Days days1 = org.joda.time.Days.days(7);
        java.lang.Class<?> wildcardClass2 = days1.getClass();
        org.junit.Assert.assertNotNull(days1);
        org.junit.Assert.assertNotNull(wildcardClass2);
    }

    @Test
    public void test0331() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0331");
        org.joda.time.Days days0 = org.joda.time.Days.ZERO;
        org.joda.time.ReadableInterval readableInterval1 = null;
        org.joda.time.Days days2 = org.joda.time.Days.daysIn(readableInterval1);
        int int4 = days2.getValue((int) (short) 0);
        org.joda.time.Days days5 = org.joda.time.Days.FIVE;
        org.joda.time.Days days6 = days2.minus(days5);
        org.joda.time.Days days7 = null;
        org.joda.time.Days days8 = days2.minus(days7);
        org.joda.time.Duration duration9 = days2.toStandardDuration();
        org.joda.time.DurationFieldType durationFieldType10 = days2.getFieldType();
        org.joda.time.Days days11 = days0.minus(days2);
        org.joda.time.ReadableInterval readableInterval12 = null;
        org.joda.time.Days days13 = org.joda.time.Days.daysIn(readableInterval12);
        int int15 = days13.getValue((int) (short) 0);
        org.joda.time.Days days16 = org.joda.time.Days.FIVE;
        org.joda.time.Days days17 = days13.minus(days16);
        org.joda.time.DurationFieldType durationFieldType18 = null;
        int int19 = days16.get(durationFieldType18);
        org.joda.time.DurationFieldType durationFieldType20 = null;
        int int21 = days16.get(durationFieldType20);
        boolean boolean23 = days16.equals((java.lang.Object) 0L);
        org.joda.time.DurationFieldType durationFieldType24 = days16.getFieldType();
        org.joda.time.Days days25 = days16.negated();
        org.joda.time.ReadableInterval readableInterval26 = null;
        org.joda.time.Days days27 = org.joda.time.Days.daysIn(readableInterval26);
        int int29 = days27.getValue((int) (short) 0);
        org.joda.time.Days days30 = org.joda.time.Days.FIVE;
        org.joda.time.Days days31 = days27.minus(days30);
        org.joda.time.DurationFieldType durationFieldType32 = null;
        int int33 = days30.get(durationFieldType32);
        org.joda.time.DurationFieldType durationFieldType34 = null;
        int int35 = days30.get(durationFieldType34);
        boolean boolean37 = days30.equals((java.lang.Object) 0L);
        int int38 = days30.getDays();
        org.joda.time.Days days39 = days25.minus(days30);
        org.joda.time.Days days40 = days11.minus(days25);
        org.joda.time.Duration duration41 = days40.toStandardDuration();
        org.joda.time.ReadableInterval readableInterval42 = null;
        org.joda.time.Days days43 = org.joda.time.Days.daysIn(readableInterval42);
        org.joda.time.Days days45 = days43.plus((int) (byte) 10);
        java.lang.String str46 = days45.toString();
        org.joda.time.PeriodType periodType47 = days45.getPeriodType();
        org.joda.time.ReadableInterval readableInterval48 = null;
        org.joda.time.Days days49 = org.joda.time.Days.daysIn(readableInterval48);
        int int51 = days49.getValue((int) (short) 0);
        org.joda.time.ReadableInterval readableInterval52 = null;
        org.joda.time.Days days53 = org.joda.time.Days.daysIn(readableInterval52);
        int int55 = days53.getValue((int) (short) 0);
        org.joda.time.Days days56 = org.joda.time.Days.FIVE;
        org.joda.time.Days days57 = days53.minus(days56);
        int int58 = days49.compareTo((org.joda.time.base.BaseSingleFieldPeriod) days56);
        java.lang.String str59 = days49.toString();
        org.joda.time.Days days61 = days49.plus((int) '4');
        org.joda.time.PeriodType periodType62 = days61.getPeriodType();
        int int63 = days61.getDays();
        org.joda.time.Days days65 = days61.minus((int) ' ');
        org.joda.time.ReadableInterval readableInterval66 = null;
        org.joda.time.Days days67 = org.joda.time.Days.daysIn(readableInterval66);
        org.joda.time.Days days69 = days67.plus((int) (byte) 10);
        org.joda.time.Days days71 = days69.dividedBy((int) 'a');
        org.joda.time.Days days73 = days69.dividedBy(5);
        org.joda.time.Days days75 = days69.plus((int) (byte) -1);
        org.joda.time.Days days76 = days61.plus(days69);
        boolean boolean77 = days45.isLessThan(days61);
        org.joda.time.ReadableInterval readableInterval78 = null;
        org.joda.time.Days days79 = org.joda.time.Days.daysIn(readableInterval78);
        org.joda.time.Days days81 = days79.plus((int) (byte) 10);
        org.joda.time.ReadableInterval readableInterval82 = null;
        org.joda.time.Days days83 = org.joda.time.Days.daysIn(readableInterval82);
        org.joda.time.ReadableInterval readableInterval84 = null;
        org.joda.time.Days days85 = org.joda.time.Days.daysIn(readableInterval84);
        int int87 = days85.getValue((int) (short) 0);
        org.joda.time.Days days88 = org.joda.time.Days.FIVE;
        org.joda.time.Days days89 = days85.minus(days88);
        org.joda.time.DurationFieldType durationFieldType90 = null;
        boolean boolean91 = days88.isSupported(durationFieldType90);
        org.joda.time.DurationFieldType durationFieldType93 = days88.getFieldType(0);
        int int94 = days83.get(durationFieldType93);
        int int95 = days81.get(durationFieldType93);
        boolean boolean96 = days45.isSupported(durationFieldType93);
        boolean boolean97 = days40.isSupported(durationFieldType93);
        org.joda.time.MutablePeriod mutablePeriod98 = days40.toMutablePeriod();
        org.junit.Assert.assertNotNull(days0);
        org.junit.Assert.assertNotNull(days2);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(days5);
        org.junit.Assert.assertNotNull(days6);
        org.junit.Assert.assertNotNull(days8);
        org.junit.Assert.assertNotNull(duration9);
        org.junit.Assert.assertNotNull(durationFieldType10);
        org.junit.Assert.assertNotNull(days11);
        org.junit.Assert.assertNotNull(days13);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNotNull(days16);
        org.junit.Assert.assertNotNull(days17);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(durationFieldType24);
        org.junit.Assert.assertNotNull(days25);
        org.junit.Assert.assertNotNull(days27);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertNotNull(days30);
        org.junit.Assert.assertNotNull(days31);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 5 + "'", int38 == 5);
        org.junit.Assert.assertNotNull(days39);
        org.junit.Assert.assertNotNull(days40);
        org.junit.Assert.assertNotNull(duration41);
        org.junit.Assert.assertNotNull(days43);
        org.junit.Assert.assertNotNull(days45);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "P10D" + "'", str46, "P10D");
        org.junit.Assert.assertNotNull(periodType47);
        org.junit.Assert.assertNotNull(days49);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 0 + "'", int51 == 0);
        org.junit.Assert.assertNotNull(days53);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 0 + "'", int55 == 0);
        org.junit.Assert.assertNotNull(days56);
        org.junit.Assert.assertNotNull(days57);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + (-1) + "'", int58 == (-1));
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "P0D" + "'", str59, "P0D");
        org.junit.Assert.assertNotNull(days61);
        org.junit.Assert.assertNotNull(periodType62);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 52 + "'", int63 == 52);
        org.junit.Assert.assertNotNull(days65);
        org.junit.Assert.assertNotNull(days67);
        org.junit.Assert.assertNotNull(days69);
        org.junit.Assert.assertNotNull(days71);
        org.junit.Assert.assertNotNull(days73);
        org.junit.Assert.assertNotNull(days75);
        org.junit.Assert.assertNotNull(days76);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertNotNull(days79);
        org.junit.Assert.assertNotNull(days81);
        org.junit.Assert.assertNotNull(days83);
        org.junit.Assert.assertNotNull(days85);
        org.junit.Assert.assertTrue("'" + int87 + "' != '" + 0 + "'", int87 == 0);
        org.junit.Assert.assertNotNull(days88);
        org.junit.Assert.assertNotNull(days89);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
        org.junit.Assert.assertNotNull(durationFieldType93);
        org.junit.Assert.assertTrue("'" + int94 + "' != '" + 0 + "'", int94 == 0);
        org.junit.Assert.assertTrue("'" + int95 + "' != '" + 10 + "'", int95 == 10);
        org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + true + "'", boolean96 == true);
        org.junit.Assert.assertTrue("'" + boolean97 + "' != '" + true + "'", boolean97 == true);
        org.junit.Assert.assertNotNull(mutablePeriod98);
    }

    @Test
    public void test0332() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0332");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Days days1 = org.joda.time.Days.daysIn(readableInterval0);
        org.joda.time.ReadableInterval readableInterval2 = null;
        org.joda.time.Days days3 = org.joda.time.Days.daysIn(readableInterval2);
        int int5 = days3.getValue((int) (short) 0);
        org.joda.time.Days days6 = org.joda.time.Days.FIVE;
        org.joda.time.Days days7 = days3.minus(days6);
        org.joda.time.DurationFieldType durationFieldType8 = null;
        boolean boolean9 = days6.isSupported(durationFieldType8);
        org.joda.time.DurationFieldType durationFieldType11 = days6.getFieldType(0);
        int int12 = days1.get(durationFieldType11);
        org.joda.time.ReadableInterval readableInterval13 = null;
        org.joda.time.Days days14 = org.joda.time.Days.daysIn(readableInterval13);
        int int16 = days14.getValue((int) (short) 0);
        org.joda.time.Days days17 = org.joda.time.Days.FIVE;
        org.joda.time.Days days18 = days14.minus(days17);
        org.joda.time.DurationFieldType durationFieldType19 = null;
        int int20 = days17.get(durationFieldType19);
        org.joda.time.DurationFieldType durationFieldType21 = null;
        int int22 = days17.get(durationFieldType21);
        boolean boolean24 = days17.equals((java.lang.Object) 0L);
        boolean boolean25 = days1.isGreaterThan(days17);
        org.joda.time.ReadableInterval readableInterval26 = null;
        org.joda.time.Days days27 = org.joda.time.Days.daysIn(readableInterval26);
        int int29 = days27.getValue((int) (short) 0);
        org.joda.time.Days days30 = org.joda.time.Days.FIVE;
        org.joda.time.Days days31 = days27.minus(days30);
        org.joda.time.DurationFieldType durationFieldType32 = null;
        int int33 = days30.get(durationFieldType32);
        org.joda.time.DurationFieldType durationFieldType34 = null;
        int int35 = days30.get(durationFieldType34);
        boolean boolean37 = days30.equals((java.lang.Object) 0L);
        org.joda.time.Period period38 = days30.toPeriod();
        org.joda.time.Days days39 = days1.plus(days30);
        org.joda.time.ReadableInterval readableInterval40 = null;
        org.joda.time.Days days41 = org.joda.time.Days.daysIn(readableInterval40);
        int int43 = days41.getValue((int) (short) 0);
        org.joda.time.Period period44 = days41.toPeriod();
        org.joda.time.Days days45 = org.joda.time.Days.standardDaysIn((org.joda.time.ReadablePeriod) days41);
        boolean boolean46 = days1.equals((java.lang.Object) days45);
        org.joda.time.ReadableInterval readableInterval47 = null;
        org.joda.time.Days days48 = org.joda.time.Days.daysIn(readableInterval47);
        int int50 = days48.getValue((int) (short) 0);
        org.joda.time.Days days51 = org.joda.time.Days.FIVE;
        org.joda.time.Days days52 = days48.minus(days51);
        org.joda.time.DurationFieldType durationFieldType53 = null;
        boolean boolean54 = days51.isSupported(durationFieldType53);
        org.joda.time.DurationFieldType durationFieldType56 = days51.getFieldType(0);
        boolean boolean57 = days45.isSupported(durationFieldType56);
        org.joda.time.PeriodType periodType58 = days45.getPeriodType();
        org.joda.time.Days days59 = null;
        org.joda.time.Days days60 = days45.minus(days59);
        org.joda.time.ReadableInterval readableInterval61 = null;
        org.joda.time.Days days62 = org.joda.time.Days.daysIn(readableInterval61);
        int int64 = days62.getValue((int) (short) 0);
        org.joda.time.Days days65 = org.joda.time.Days.FIVE;
        org.joda.time.Days days66 = days62.minus(days65);
        org.joda.time.Days days67 = null;
        org.joda.time.Days days68 = days62.minus(days67);
        org.joda.time.Days days70 = days68.minus(100);
        org.joda.time.ReadableInterval readableInterval71 = null;
        org.joda.time.Days days72 = org.joda.time.Days.daysIn(readableInterval71);
        int int74 = days72.getValue((int) (short) 0);
        org.joda.time.Days days75 = org.joda.time.Days.FIVE;
        org.joda.time.Days days76 = days72.minus(days75);
        org.joda.time.Days days77 = null;
        org.joda.time.Days days78 = days72.minus(days77);
        org.joda.time.Days days80 = days72.minus((-1));
        org.joda.time.Days days81 = days68.plus(days72);
        boolean boolean82 = days45.isGreaterThan(days81);
        java.lang.Class<?> wildcardClass83 = days81.getClass();
        org.junit.Assert.assertNotNull(days1);
        org.junit.Assert.assertNotNull(days3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(days6);
        org.junit.Assert.assertNotNull(days7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(durationFieldType11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNotNull(days14);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertNotNull(days17);
        org.junit.Assert.assertNotNull(days18);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(days27);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertNotNull(days30);
        org.junit.Assert.assertNotNull(days31);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(period38);
        org.junit.Assert.assertNotNull(days39);
        org.junit.Assert.assertNotNull(days41);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0);
        org.junit.Assert.assertNotNull(period44);
        org.junit.Assert.assertNotNull(days45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(days48);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 0 + "'", int50 == 0);
        org.junit.Assert.assertNotNull(days51);
        org.junit.Assert.assertNotNull(days52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(durationFieldType56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(periodType58);
        org.junit.Assert.assertNotNull(days60);
        org.junit.Assert.assertNotNull(days62);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 0 + "'", int64 == 0);
        org.junit.Assert.assertNotNull(days65);
        org.junit.Assert.assertNotNull(days66);
        org.junit.Assert.assertNotNull(days68);
        org.junit.Assert.assertNotNull(days70);
        org.junit.Assert.assertNotNull(days72);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 0 + "'", int74 == 0);
        org.junit.Assert.assertNotNull(days75);
        org.junit.Assert.assertNotNull(days76);
        org.junit.Assert.assertNotNull(days78);
        org.junit.Assert.assertNotNull(days80);
        org.junit.Assert.assertNotNull(days81);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertNotNull(wildcardClass83);
    }

    @Test
    public void test0333() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0333");
        org.joda.time.Days days0 = org.joda.time.Days.TWO;
        org.joda.time.DurationFieldType durationFieldType1 = days0.getFieldType();
        org.joda.time.Weeks weeks2 = days0.toStandardWeeks();
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.DurationFieldType durationFieldType4 = days0.getFieldType((-10));
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: -10");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(days0);
        org.junit.Assert.assertNotNull(durationFieldType1);
        org.junit.Assert.assertNotNull(weeks2);
    }

    @Test
    public void test0334() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0334");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Days days1 = org.joda.time.Days.daysIn(readableInterval0);
        int int3 = days1.getValue((int) (short) 0);
        org.joda.time.Days days4 = org.joda.time.Days.FIVE;
        org.joda.time.Days days5 = days1.minus(days4);
        org.joda.time.Days days6 = null;
        org.joda.time.Days days7 = days1.minus(days6);
        org.joda.time.ReadableInterval readableInterval8 = null;
        org.joda.time.Days days9 = org.joda.time.Days.daysIn(readableInterval8);
        org.joda.time.ReadableInterval readableInterval10 = null;
        org.joda.time.Days days11 = org.joda.time.Days.daysIn(readableInterval10);
        int int13 = days11.getValue((int) (short) 0);
        org.joda.time.Days days14 = org.joda.time.Days.FIVE;
        org.joda.time.Days days15 = days11.minus(days14);
        org.joda.time.DurationFieldType durationFieldType16 = null;
        boolean boolean17 = days14.isSupported(durationFieldType16);
        org.joda.time.DurationFieldType durationFieldType19 = days14.getFieldType(0);
        int int20 = days9.get(durationFieldType19);
        org.joda.time.PeriodType periodType21 = days9.getPeriodType();
        org.joda.time.Days days22 = days1.plus(days9);
        org.joda.time.Days days23 = org.joda.time.Days.standardDaysIn((org.joda.time.ReadablePeriod) days22);
        org.joda.time.Days days25 = days22.dividedBy((-2147483648));
        org.junit.Assert.assertNotNull(days1);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(days4);
        org.junit.Assert.assertNotNull(days5);
        org.junit.Assert.assertNotNull(days7);
        org.junit.Assert.assertNotNull(days9);
        org.junit.Assert.assertNotNull(days11);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(days14);
        org.junit.Assert.assertNotNull(days15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(durationFieldType19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertNotNull(periodType21);
        org.junit.Assert.assertNotNull(days22);
        org.junit.Assert.assertNotNull(days23);
        org.junit.Assert.assertNotNull(days25);
    }

    @Test
    public void test0335() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0335");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Days days1 = org.joda.time.Days.daysIn(readableInterval0);
        int int3 = days1.getValue((int) (short) 0);
        org.joda.time.Days days4 = org.joda.time.Days.FIVE;
        org.joda.time.Days days5 = days1.minus(days4);
        org.joda.time.DurationFieldType durationFieldType6 = null;
        boolean boolean7 = days4.isSupported(durationFieldType6);
        org.joda.time.DurationFieldType durationFieldType9 = days4.getFieldType(0);
        org.joda.time.Days days11 = days4.multipliedBy(1);
        org.joda.time.ReadableInterval readableInterval12 = null;
        org.joda.time.Days days13 = org.joda.time.Days.daysIn(readableInterval12);
        org.joda.time.Days days15 = days13.plus((int) (byte) 10);
        org.joda.time.Days days17 = days15.dividedBy((int) 'a');
        org.joda.time.Days days19 = days15.dividedBy(5);
        org.joda.time.Days days21 = days19.minus(10);
        boolean boolean22 = days11.equals((java.lang.Object) days19);
        org.joda.time.Days days23 = org.joda.time.Days.standardDaysIn((org.joda.time.ReadablePeriod) days11);
        org.junit.Assert.assertNotNull(days1);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(days4);
        org.junit.Assert.assertNotNull(days5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(durationFieldType9);
        org.junit.Assert.assertNotNull(days11);
        org.junit.Assert.assertNotNull(days13);
        org.junit.Assert.assertNotNull(days15);
        org.junit.Assert.assertNotNull(days17);
        org.junit.Assert.assertNotNull(days19);
        org.junit.Assert.assertNotNull(days21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(days23);
    }

    @Test
    public void test0336() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0336");
        org.joda.time.Days days0 = org.joda.time.Days.THREE;
        org.joda.time.ReadableInterval readableInterval1 = null;
        org.joda.time.Days days2 = org.joda.time.Days.daysIn(readableInterval1);
        org.joda.time.ReadableInterval readableInterval3 = null;
        org.joda.time.Days days4 = org.joda.time.Days.daysIn(readableInterval3);
        int int6 = days4.getValue((int) (short) 0);
        org.joda.time.Days days7 = org.joda.time.Days.FIVE;
        org.joda.time.Days days8 = days4.minus(days7);
        org.joda.time.DurationFieldType durationFieldType9 = null;
        boolean boolean10 = days7.isSupported(durationFieldType9);
        org.joda.time.DurationFieldType durationFieldType12 = days7.getFieldType(0);
        int int13 = days2.get(durationFieldType12);
        org.joda.time.ReadableInterval readableInterval14 = null;
        org.joda.time.Days days15 = org.joda.time.Days.daysIn(readableInterval14);
        int int17 = days15.getValue((int) (short) 0);
        org.joda.time.Days days18 = org.joda.time.Days.FIVE;
        org.joda.time.Days days19 = days15.minus(days18);
        org.joda.time.DurationFieldType durationFieldType20 = null;
        int int21 = days18.get(durationFieldType20);
        org.joda.time.DurationFieldType durationFieldType22 = null;
        int int23 = days18.get(durationFieldType22);
        boolean boolean25 = days18.equals((java.lang.Object) 0L);
        boolean boolean26 = days2.isGreaterThan(days18);
        org.joda.time.ReadableInterval readableInterval27 = null;
        org.joda.time.Days days28 = org.joda.time.Days.daysIn(readableInterval27);
        int int30 = days28.getValue((int) (short) 0);
        org.joda.time.Days days31 = org.joda.time.Days.FIVE;
        org.joda.time.Days days32 = days28.minus(days31);
        org.joda.time.DurationFieldType durationFieldType33 = null;
        int int34 = days31.get(durationFieldType33);
        org.joda.time.DurationFieldType durationFieldType35 = null;
        int int36 = days31.get(durationFieldType35);
        boolean boolean38 = days31.equals((java.lang.Object) 0L);
        org.joda.time.Period period39 = days31.toPeriod();
        org.joda.time.Days days40 = days2.plus(days31);
        boolean boolean41 = days0.isGreaterThan(days40);
        org.joda.time.Days days43 = days40.dividedBy(42);
        org.joda.time.PeriodType periodType44 = days40.getPeriodType();
        org.joda.time.PeriodType periodType45 = days40.getPeriodType();
        int int46 = days40.size();
        org.joda.time.Days days48 = days40.plus(6);
        org.junit.Assert.assertNotNull(days0);
        org.junit.Assert.assertNotNull(days2);
        org.junit.Assert.assertNotNull(days4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNotNull(days7);
        org.junit.Assert.assertNotNull(days8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(durationFieldType12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(days15);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNotNull(days18);
        org.junit.Assert.assertNotNull(days19);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(days28);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertNotNull(days31);
        org.junit.Assert.assertNotNull(days32);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(period39);
        org.junit.Assert.assertNotNull(days40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(days43);
        org.junit.Assert.assertNotNull(periodType44);
        org.junit.Assert.assertNotNull(periodType45);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 1 + "'", int46 == 1);
        org.junit.Assert.assertNotNull(days48);
    }

    @Test
    public void test0337() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0337");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Days days1 = org.joda.time.Days.daysIn(readableInterval0);
        org.joda.time.Days days3 = days1.plus((int) (byte) 10);
        org.joda.time.DurationFieldType durationFieldType4 = days3.getFieldType();
        org.joda.time.Days days6 = days3.plus(0);
        int int8 = days6.getValue(0);
        java.lang.Class<?> wildcardClass9 = days6.getClass();
        org.junit.Assert.assertNotNull(days1);
        org.junit.Assert.assertNotNull(days3);
        org.junit.Assert.assertNotNull(durationFieldType4);
        org.junit.Assert.assertNotNull(days6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 10 + "'", int8 == 10);
        org.junit.Assert.assertNotNull(wildcardClass9);
    }

    @Test
    public void test0338() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0338");
        org.joda.time.Days days0 = org.joda.time.Days.FIVE;
        org.joda.time.ReadableInterval readableInterval1 = null;
        org.joda.time.Days days2 = org.joda.time.Days.daysIn(readableInterval1);
        org.joda.time.Days days4 = days2.plus((int) (byte) 10);
        org.joda.time.DurationFieldType durationFieldType5 = days4.getFieldType();
        org.joda.time.Days days7 = days4.plus(0);
        org.joda.time.ReadableInterval readableInterval8 = null;
        org.joda.time.Days days9 = org.joda.time.Days.daysIn(readableInterval8);
        int int11 = days9.getValue((int) (short) 0);
        org.joda.time.Days days12 = org.joda.time.Days.FIVE;
        org.joda.time.Days days13 = days9.minus(days12);
        org.joda.time.DurationFieldType durationFieldType14 = null;
        boolean boolean15 = days12.isSupported(durationFieldType14);
        org.joda.time.DurationFieldType durationFieldType17 = days12.getFieldType(0);
        org.joda.time.ReadableInterval readableInterval18 = null;
        org.joda.time.Days days19 = org.joda.time.Days.daysIn(readableInterval18);
        int int21 = days19.getValue((int) (short) 0);
        org.joda.time.Days days22 = org.joda.time.Days.FIVE;
        org.joda.time.Days days23 = days19.minus(days22);
        org.joda.time.Days days24 = null;
        org.joda.time.Days days25 = days19.minus(days24);
        org.joda.time.Days days27 = days19.minus((-1));
        org.joda.time.DurationFieldType durationFieldType28 = days19.getFieldType();
        boolean boolean29 = days12.isGreaterThan(days19);
        org.joda.time.ReadableInterval readableInterval30 = null;
        org.joda.time.Days days31 = org.joda.time.Days.daysIn(readableInterval30);
        org.joda.time.Days days33 = days31.plus((int) (byte) 10);
        org.joda.time.Days days34 = days19.plus(days33);
        int int35 = days7.compareTo((org.joda.time.base.BaseSingleFieldPeriod) days19);
        boolean boolean36 = days0.equals((java.lang.Object) days7);
        org.joda.time.PeriodType periodType37 = days0.getPeriodType();
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.DurationFieldType durationFieldType39 = days0.getFieldType((int) (short) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 1");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(days0);
        org.junit.Assert.assertNotNull(days2);
        org.junit.Assert.assertNotNull(days4);
        org.junit.Assert.assertNotNull(durationFieldType5);
        org.junit.Assert.assertNotNull(days7);
        org.junit.Assert.assertNotNull(days9);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNotNull(days12);
        org.junit.Assert.assertNotNull(days13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(durationFieldType17);
        org.junit.Assert.assertNotNull(days19);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertNotNull(days22);
        org.junit.Assert.assertNotNull(days23);
        org.junit.Assert.assertNotNull(days25);
        org.junit.Assert.assertNotNull(days27);
        org.junit.Assert.assertNotNull(durationFieldType28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(days31);
        org.junit.Assert.assertNotNull(days33);
        org.junit.Assert.assertNotNull(days34);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 1 + "'", int35 == 1);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(periodType37);
    }

    @Test
    public void test0339() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0339");
        org.joda.time.Days days0 = org.joda.time.Days.ZERO;
        org.joda.time.ReadableInterval readableInterval1 = null;
        org.joda.time.Days days2 = org.joda.time.Days.daysIn(readableInterval1);
        int int4 = days2.getValue((int) (short) 0);
        org.joda.time.Days days5 = org.joda.time.Days.FIVE;
        org.joda.time.Days days6 = days2.minus(days5);
        org.joda.time.Days days7 = null;
        org.joda.time.Days days8 = days2.minus(days7);
        org.joda.time.Duration duration9 = days2.toStandardDuration();
        org.joda.time.DurationFieldType durationFieldType10 = days2.getFieldType();
        org.joda.time.Days days11 = days0.minus(days2);
        org.joda.time.Days days13 = days11.plus((int) (byte) 100);
        // The following exception was thrown during execution in test generation
        try {
            int int15 = days13.getValue(2147483647);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 2147483647");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(days0);
        org.junit.Assert.assertNotNull(days2);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(days5);
        org.junit.Assert.assertNotNull(days6);
        org.junit.Assert.assertNotNull(days8);
        org.junit.Assert.assertNotNull(duration9);
        org.junit.Assert.assertNotNull(durationFieldType10);
        org.junit.Assert.assertNotNull(days11);
        org.junit.Assert.assertNotNull(days13);
    }

    @Test
    public void test0340() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0340");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Days days1 = org.joda.time.Days.daysIn(readableInterval0);
        org.joda.time.Days days3 = days1.plus((int) (byte) 10);
        org.joda.time.Days days5 = days3.dividedBy((int) 'a');
        org.joda.time.Days days7 = days3.dividedBy(5);
        org.joda.time.Days days9 = days3.plus((int) (byte) -1);
        org.joda.time.Days days11 = days3.minus((int) (byte) 100);
        org.joda.time.Days days13 = days11.dividedBy((int) (byte) 100);
        org.joda.time.Days days15 = days11.minus((int) (short) 0);
        org.joda.time.DurationFieldType durationFieldType16 = days15.getFieldType();
        org.junit.Assert.assertNotNull(days1);
        org.junit.Assert.assertNotNull(days3);
        org.junit.Assert.assertNotNull(days5);
        org.junit.Assert.assertNotNull(days7);
        org.junit.Assert.assertNotNull(days9);
        org.junit.Assert.assertNotNull(days11);
        org.junit.Assert.assertNotNull(days13);
        org.junit.Assert.assertNotNull(days15);
        org.junit.Assert.assertNotNull(durationFieldType16);
    }

    @Test
    public void test0341() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0341");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Days days1 = org.joda.time.Days.daysIn(readableInterval0);
        org.joda.time.Days days3 = days1.plus((int) (byte) 10);
        org.joda.time.Days days5 = days3.dividedBy((int) 'a');
        org.joda.time.Days days7 = days3.dividedBy(5);
        org.joda.time.Days days9 = days3.plus((int) (byte) -1);
        org.joda.time.Days days11 = days3.minus((int) (byte) 100);
        org.joda.time.Days days12 = days11.negated();
        int int13 = days11.size();
        org.joda.time.ReadableInterval readableInterval14 = null;
        org.joda.time.Days days15 = org.joda.time.Days.daysIn(readableInterval14);
        int int17 = days15.getValue((int) (short) 0);
        org.joda.time.Days days18 = org.joda.time.Days.FIVE;
        org.joda.time.Days days19 = days15.minus(days18);
        org.joda.time.Days days20 = null;
        org.joda.time.Days days21 = days15.minus(days20);
        org.joda.time.Duration duration22 = days15.toStandardDuration();
        org.joda.time.DurationFieldType durationFieldType23 = days15.getFieldType();
        org.joda.time.Days days24 = days11.minus(days15);
        org.joda.time.ReadableInterval readableInterval25 = null;
        org.joda.time.Days days26 = org.joda.time.Days.daysIn(readableInterval25);
        org.joda.time.Days days28 = days26.plus((int) (byte) 10);
        int int29 = days28.getDays();
        int int30 = days28.getDays();
        boolean boolean31 = days15.equals((java.lang.Object) days28);
        org.joda.time.Days days33 = days15.dividedBy(8);
        org.joda.time.ReadableInterval readableInterval34 = null;
        org.joda.time.Days days35 = org.joda.time.Days.daysIn(readableInterval34);
        int int37 = days35.getValue((int) (short) 0);
        org.joda.time.Days days38 = org.joda.time.Days.FIVE;
        org.joda.time.Days days39 = days35.minus(days38);
        org.joda.time.DurationFieldType durationFieldType40 = null;
        boolean boolean41 = days38.isSupported(durationFieldType40);
        org.joda.time.DurationFieldType durationFieldType43 = days38.getFieldType(0);
        org.joda.time.ReadableInterval readableInterval44 = null;
        org.joda.time.Days days45 = org.joda.time.Days.daysIn(readableInterval44);
        int int47 = days45.getValue((int) (short) 0);
        org.joda.time.Days days48 = org.joda.time.Days.FIVE;
        org.joda.time.Days days49 = days45.minus(days48);
        org.joda.time.Days days50 = null;
        org.joda.time.Days days51 = days45.minus(days50);
        org.joda.time.Days days53 = days45.minus((-1));
        org.joda.time.DurationFieldType durationFieldType54 = days45.getFieldType();
        boolean boolean55 = days38.isGreaterThan(days45);
        org.joda.time.Days days56 = org.joda.time.Days.THREE;
        org.joda.time.ReadableInterval readableInterval57 = null;
        org.joda.time.Days days58 = org.joda.time.Days.daysIn(readableInterval57);
        org.joda.time.ReadableInterval readableInterval59 = null;
        org.joda.time.Days days60 = org.joda.time.Days.daysIn(readableInterval59);
        int int62 = days60.getValue((int) (short) 0);
        org.joda.time.Days days63 = org.joda.time.Days.FIVE;
        org.joda.time.Days days64 = days60.minus(days63);
        org.joda.time.DurationFieldType durationFieldType65 = null;
        boolean boolean66 = days63.isSupported(durationFieldType65);
        org.joda.time.DurationFieldType durationFieldType68 = days63.getFieldType(0);
        int int69 = days58.get(durationFieldType68);
        org.joda.time.ReadableInterval readableInterval70 = null;
        org.joda.time.Days days71 = org.joda.time.Days.daysIn(readableInterval70);
        int int73 = days71.getValue((int) (short) 0);
        org.joda.time.ReadableInterval readableInterval74 = null;
        org.joda.time.Days days75 = org.joda.time.Days.daysIn(readableInterval74);
        int int77 = days75.getValue((int) (short) 0);
        org.joda.time.Days days78 = org.joda.time.Days.FIVE;
        org.joda.time.Days days79 = days75.minus(days78);
        int int80 = days71.compareTo((org.joda.time.base.BaseSingleFieldPeriod) days78);
        java.lang.String str81 = days71.toString();
        org.joda.time.Days days82 = null;
        boolean boolean83 = days71.isGreaterThan(days82);
        org.joda.time.Period period84 = days71.toPeriod();
        org.joda.time.Days days85 = days58.plus(days71);
        boolean boolean86 = days56.isLessThan(days71);
        org.joda.time.Days days87 = days38.minus(days56);
        java.lang.Object obj88 = null;
        boolean boolean89 = days56.equals(obj88);
        org.joda.time.Days days90 = days15.minus(days56);
        org.joda.time.DurationFieldType durationFieldType91 = days15.getFieldType();
        java.lang.Class<?> wildcardClass92 = durationFieldType91.getClass();
        org.junit.Assert.assertNotNull(days1);
        org.junit.Assert.assertNotNull(days3);
        org.junit.Assert.assertNotNull(days5);
        org.junit.Assert.assertNotNull(days7);
        org.junit.Assert.assertNotNull(days9);
        org.junit.Assert.assertNotNull(days11);
        org.junit.Assert.assertNotNull(days12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertNotNull(days15);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNotNull(days18);
        org.junit.Assert.assertNotNull(days19);
        org.junit.Assert.assertNotNull(days21);
        org.junit.Assert.assertNotNull(duration22);
        org.junit.Assert.assertNotNull(durationFieldType23);
        org.junit.Assert.assertNotNull(days24);
        org.junit.Assert.assertNotNull(days26);
        org.junit.Assert.assertNotNull(days28);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 10 + "'", int29 == 10);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 10 + "'", int30 == 10);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(days33);
        org.junit.Assert.assertNotNull(days35);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0);
        org.junit.Assert.assertNotNull(days38);
        org.junit.Assert.assertNotNull(days39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(durationFieldType43);
        org.junit.Assert.assertNotNull(days45);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 0 + "'", int47 == 0);
        org.junit.Assert.assertNotNull(days48);
        org.junit.Assert.assertNotNull(days49);
        org.junit.Assert.assertNotNull(days51);
        org.junit.Assert.assertNotNull(days53);
        org.junit.Assert.assertNotNull(durationFieldType54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(days56);
        org.junit.Assert.assertNotNull(days58);
        org.junit.Assert.assertNotNull(days60);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 0 + "'", int62 == 0);
        org.junit.Assert.assertNotNull(days63);
        org.junit.Assert.assertNotNull(days64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(durationFieldType68);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 0 + "'", int69 == 0);
        org.junit.Assert.assertNotNull(days71);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 0 + "'", int73 == 0);
        org.junit.Assert.assertNotNull(days75);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 0 + "'", int77 == 0);
        org.junit.Assert.assertNotNull(days78);
        org.junit.Assert.assertNotNull(days79);
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + (-1) + "'", int80 == (-1));
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "P0D" + "'", str81, "P0D");
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertNotNull(period84);
        org.junit.Assert.assertNotNull(days85);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertNotNull(days87);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertNotNull(days90);
        org.junit.Assert.assertNotNull(durationFieldType91);
        org.junit.Assert.assertNotNull(wildcardClass92);
    }

    @Test
    public void test0342() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0342");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Days days1 = org.joda.time.Days.daysIn(readableInterval0);
        int int3 = days1.getValue((int) (short) 0);
        org.joda.time.Days days4 = org.joda.time.Days.FIVE;
        org.joda.time.Days days5 = days1.minus(days4);
        org.joda.time.ReadableInterval readableInterval6 = null;
        org.joda.time.Days days7 = org.joda.time.Days.daysIn(readableInterval6);
        int int9 = days7.getValue((int) (short) 0);
        org.joda.time.Days days10 = org.joda.time.Days.FIVE;
        org.joda.time.Days days11 = days7.minus(days10);
        org.joda.time.ReadableInterval readableInterval12 = null;
        org.joda.time.Days days13 = org.joda.time.Days.daysIn(readableInterval12);
        int int15 = days13.getValue((int) (short) 0);
        int int16 = days7.compareTo((org.joda.time.base.BaseSingleFieldPeriod) days13);
        org.joda.time.ReadableInterval readableInterval17 = null;
        org.joda.time.Days days18 = org.joda.time.Days.daysIn(readableInterval17);
        int int20 = days18.getValue((int) (short) 0);
        org.joda.time.Days days21 = org.joda.time.Days.FIVE;
        org.joda.time.Days days22 = days18.minus(days21);
        org.joda.time.DurationFieldType durationFieldType23 = null;
        int int24 = days21.get(durationFieldType23);
        org.joda.time.DurationFieldType durationFieldType25 = null;
        int int26 = days21.get(durationFieldType25);
        boolean boolean28 = days21.equals((java.lang.Object) false);
        boolean boolean29 = days13.equals((java.lang.Object) days21);
        org.joda.time.ReadableInterval readableInterval30 = null;
        org.joda.time.Days days31 = org.joda.time.Days.daysIn(readableInterval30);
        int int33 = days31.getValue((int) (short) 0);
        org.joda.time.Days days34 = org.joda.time.Days.FIVE;
        org.joda.time.Days days35 = days31.minus(days34);
        org.joda.time.DurationFieldType durationFieldType36 = null;
        boolean boolean37 = days34.isSupported(durationFieldType36);
        org.joda.time.DurationFieldType durationFieldType39 = days34.getFieldType(0);
        int int40 = days21.get(durationFieldType39);
        boolean boolean41 = days1.isSupported(durationFieldType39);
        java.lang.Class<?> wildcardClass42 = durationFieldType39.getClass();
        org.junit.Assert.assertNotNull(days1);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(days4);
        org.junit.Assert.assertNotNull(days5);
        org.junit.Assert.assertNotNull(days7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNotNull(days10);
        org.junit.Assert.assertNotNull(days11);
        org.junit.Assert.assertNotNull(days13);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertNotNull(days18);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertNotNull(days21);
        org.junit.Assert.assertNotNull(days22);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(days31);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertNotNull(days34);
        org.junit.Assert.assertNotNull(days35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(durationFieldType39);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 5 + "'", int40 == 5);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(wildcardClass42);
    }

    @Test
    public void test0343() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0343");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Days days1 = org.joda.time.Days.daysIn(readableInterval0);
        int int3 = days1.getValue((int) (short) 0);
        org.joda.time.Days days4 = org.joda.time.Days.FIVE;
        org.joda.time.Days days5 = days1.minus(days4);
        org.joda.time.DurationFieldType durationFieldType6 = null;
        boolean boolean7 = days4.isSupported(durationFieldType6);
        org.joda.time.DurationFieldType durationFieldType9 = days4.getFieldType(0);
        org.joda.time.ReadableInterval readableInterval10 = null;
        org.joda.time.Days days11 = org.joda.time.Days.daysIn(readableInterval10);
        int int13 = days11.getValue((int) (short) 0);
        org.joda.time.Days days14 = org.joda.time.Days.FIVE;
        org.joda.time.Days days15 = days11.minus(days14);
        org.joda.time.Days days16 = null;
        org.joda.time.Days days17 = days11.minus(days16);
        org.joda.time.Days days19 = days11.minus((-1));
        org.joda.time.DurationFieldType durationFieldType20 = days11.getFieldType();
        boolean boolean21 = days4.isGreaterThan(days11);
        org.joda.time.Days days22 = org.joda.time.Days.standardDaysIn((org.joda.time.ReadablePeriod) days11);
        int int23 = days11.getDays();
        org.junit.Assert.assertNotNull(days1);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(days4);
        org.junit.Assert.assertNotNull(days5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(durationFieldType9);
        org.junit.Assert.assertNotNull(days11);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(days14);
        org.junit.Assert.assertNotNull(days15);
        org.junit.Assert.assertNotNull(days17);
        org.junit.Assert.assertNotNull(days19);
        org.junit.Assert.assertNotNull(durationFieldType20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(days22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
    }

    @Test
    public void test0344() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0344");
        org.joda.time.Days days0 = org.joda.time.Days.THREE;
        org.joda.time.ReadableInterval readableInterval1 = null;
        org.joda.time.Days days2 = org.joda.time.Days.daysIn(readableInterval1);
        org.joda.time.ReadableInterval readableInterval3 = null;
        org.joda.time.Days days4 = org.joda.time.Days.daysIn(readableInterval3);
        int int6 = days4.getValue((int) (short) 0);
        org.joda.time.Days days7 = org.joda.time.Days.FIVE;
        org.joda.time.Days days8 = days4.minus(days7);
        org.joda.time.DurationFieldType durationFieldType9 = null;
        boolean boolean10 = days7.isSupported(durationFieldType9);
        org.joda.time.DurationFieldType durationFieldType12 = days7.getFieldType(0);
        int int13 = days2.get(durationFieldType12);
        org.joda.time.ReadableInterval readableInterval14 = null;
        org.joda.time.Days days15 = org.joda.time.Days.daysIn(readableInterval14);
        int int17 = days15.getValue((int) (short) 0);
        org.joda.time.Days days18 = org.joda.time.Days.FIVE;
        org.joda.time.Days days19 = days15.minus(days18);
        org.joda.time.DurationFieldType durationFieldType20 = null;
        int int21 = days18.get(durationFieldType20);
        org.joda.time.DurationFieldType durationFieldType22 = null;
        int int23 = days18.get(durationFieldType22);
        boolean boolean25 = days18.equals((java.lang.Object) 0L);
        boolean boolean26 = days2.isGreaterThan(days18);
        org.joda.time.ReadableInterval readableInterval27 = null;
        org.joda.time.Days days28 = org.joda.time.Days.daysIn(readableInterval27);
        int int30 = days28.getValue((int) (short) 0);
        org.joda.time.Days days31 = org.joda.time.Days.FIVE;
        org.joda.time.Days days32 = days28.minus(days31);
        org.joda.time.DurationFieldType durationFieldType33 = null;
        int int34 = days31.get(durationFieldType33);
        org.joda.time.DurationFieldType durationFieldType35 = null;
        int int36 = days31.get(durationFieldType35);
        boolean boolean38 = days31.equals((java.lang.Object) 0L);
        org.joda.time.Period period39 = days31.toPeriod();
        org.joda.time.Days days40 = days2.plus(days31);
        boolean boolean41 = days0.isGreaterThan(days40);
        org.joda.time.Days days42 = org.joda.time.Days.ZERO;
        org.joda.time.ReadableInterval readableInterval43 = null;
        org.joda.time.Days days44 = org.joda.time.Days.daysIn(readableInterval43);
        int int46 = days44.getValue((int) (short) 0);
        org.joda.time.Days days47 = org.joda.time.Days.FIVE;
        org.joda.time.Days days48 = days44.minus(days47);
        org.joda.time.Days days49 = null;
        org.joda.time.Days days50 = days44.minus(days49);
        org.joda.time.Duration duration51 = days44.toStandardDuration();
        org.joda.time.DurationFieldType durationFieldType52 = days44.getFieldType();
        org.joda.time.Days days53 = days42.minus(days44);
        org.joda.time.Days days55 = days53.plus((int) (byte) 100);
        boolean boolean56 = days0.isLessThan(days55);
        int int57 = days0.getDays();
        // The following exception was thrown during execution in test generation
        try {
            int int59 = days0.getValue(6);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 6");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(days0);
        org.junit.Assert.assertNotNull(days2);
        org.junit.Assert.assertNotNull(days4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNotNull(days7);
        org.junit.Assert.assertNotNull(days8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(durationFieldType12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(days15);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNotNull(days18);
        org.junit.Assert.assertNotNull(days19);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(days28);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertNotNull(days31);
        org.junit.Assert.assertNotNull(days32);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(period39);
        org.junit.Assert.assertNotNull(days40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(days42);
        org.junit.Assert.assertNotNull(days44);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 0 + "'", int46 == 0);
        org.junit.Assert.assertNotNull(days47);
        org.junit.Assert.assertNotNull(days48);
        org.junit.Assert.assertNotNull(days50);
        org.junit.Assert.assertNotNull(duration51);
        org.junit.Assert.assertNotNull(durationFieldType52);
        org.junit.Assert.assertNotNull(days53);
        org.junit.Assert.assertNotNull(days55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 3 + "'", int57 == 3);
    }

    @Test
    public void test0345() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0345");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Days days1 = org.joda.time.Days.daysIn(readableInterval0);
        org.joda.time.Days days3 = days1.plus((int) (byte) 10);
        org.joda.time.MutablePeriod mutablePeriod4 = days1.toMutablePeriod();
        org.joda.time.Days days6 = days1.plus((int) (short) -1);
        org.joda.time.Days days7 = days6.negated();
        org.joda.time.Days days9 = days6.dividedBy(8);
        org.junit.Assert.assertNotNull(days1);
        org.junit.Assert.assertNotNull(days3);
        org.junit.Assert.assertNotNull(mutablePeriod4);
        org.junit.Assert.assertNotNull(days6);
        org.junit.Assert.assertNotNull(days7);
        org.junit.Assert.assertNotNull(days9);
    }

    @Test
    public void test0346() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0346");
        org.joda.time.Days days0 = org.joda.time.Days.MAX_VALUE;
        int int1 = days0.getDays();
        org.joda.time.DurationFieldType durationFieldType2 = days0.getFieldType();
        org.joda.time.ReadableInterval readableInterval3 = null;
        org.joda.time.Days days4 = org.joda.time.Days.daysIn(readableInterval3);
        org.joda.time.Days days6 = days4.plus((int) (byte) 10);
        org.joda.time.Days days8 = days6.dividedBy((int) 'a');
        org.joda.time.Days days10 = days6.plus((int) ' ');
        org.joda.time.Days days12 = days10.multipliedBy(5);
        int int13 = days0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) days10);
        org.joda.time.ReadableInterval readableInterval14 = null;
        org.joda.time.Days days15 = org.joda.time.Days.daysIn(readableInterval14);
        int int17 = days15.getValue((int) (short) 0);
        org.joda.time.Days days18 = org.joda.time.Days.FIVE;
        org.joda.time.Days days19 = days15.minus(days18);
        org.joda.time.Days days20 = null;
        org.joda.time.Days days21 = days15.minus(days20);
        org.joda.time.Days days23 = days15.minus((-1));
        int int24 = days15.getDays();
        boolean boolean25 = days10.equals((java.lang.Object) int24);
        org.joda.time.Duration duration26 = days10.toStandardDuration();
        org.junit.Assert.assertNotNull(days0);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 2147483647 + "'", int1 == 2147483647);
        org.junit.Assert.assertNotNull(durationFieldType2);
        org.junit.Assert.assertNotNull(days4);
        org.junit.Assert.assertNotNull(days6);
        org.junit.Assert.assertNotNull(days8);
        org.junit.Assert.assertNotNull(days10);
        org.junit.Assert.assertNotNull(days12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertNotNull(days15);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNotNull(days18);
        org.junit.Assert.assertNotNull(days19);
        org.junit.Assert.assertNotNull(days21);
        org.junit.Assert.assertNotNull(days23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(duration26);
    }

    @Test
    public void test0347() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0347");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Days days1 = org.joda.time.Days.daysIn(readableInterval0);
        org.joda.time.ReadableInterval readableInterval2 = null;
        org.joda.time.Days days3 = org.joda.time.Days.daysIn(readableInterval2);
        int int5 = days3.getValue((int) (short) 0);
        org.joda.time.Days days6 = org.joda.time.Days.FIVE;
        org.joda.time.Days days7 = days3.minus(days6);
        org.joda.time.DurationFieldType durationFieldType8 = null;
        boolean boolean9 = days6.isSupported(durationFieldType8);
        org.joda.time.DurationFieldType durationFieldType11 = days6.getFieldType(0);
        int int12 = days1.get(durationFieldType11);
        org.joda.time.ReadableInterval readableInterval13 = null;
        org.joda.time.Days days14 = org.joda.time.Days.daysIn(readableInterval13);
        int int16 = days14.getValue((int) (short) 0);
        org.joda.time.Days days17 = org.joda.time.Days.FIVE;
        org.joda.time.Days days18 = days14.minus(days17);
        org.joda.time.DurationFieldType durationFieldType19 = null;
        int int20 = days17.get(durationFieldType19);
        org.joda.time.DurationFieldType durationFieldType21 = null;
        int int22 = days17.get(durationFieldType21);
        boolean boolean24 = days17.equals((java.lang.Object) 0L);
        boolean boolean25 = days1.isGreaterThan(days17);
        org.joda.time.Duration duration26 = days17.toStandardDuration();
        org.joda.time.ReadableInterval readableInterval27 = null;
        org.joda.time.Days days28 = org.joda.time.Days.daysIn(readableInterval27);
        int int30 = days28.getValue((int) (short) 0);
        org.joda.time.Days days31 = org.joda.time.Days.FIVE;
        org.joda.time.Days days32 = days28.minus(days31);
        org.joda.time.Days days33 = null;
        org.joda.time.Days days34 = days28.minus(days33);
        org.joda.time.Days days36 = days34.minus(100);
        org.joda.time.Days days38 = days34.plus((int) (short) -1);
        boolean boolean39 = days17.isGreaterThan(days38);
        org.joda.time.ReadableInterval readableInterval40 = null;
        org.joda.time.Days days41 = org.joda.time.Days.daysIn(readableInterval40);
        org.joda.time.Days days43 = days41.plus((int) (byte) 10);
        org.joda.time.MutablePeriod mutablePeriod44 = days41.toMutablePeriod();
        org.joda.time.Days days46 = days41.plus((int) (short) -1);
        org.joda.time.ReadableInterval readableInterval47 = null;
        org.joda.time.Days days48 = org.joda.time.Days.daysIn(readableInterval47);
        int int50 = days48.getValue((int) (short) 0);
        org.joda.time.Days days51 = org.joda.time.Days.FIVE;
        org.joda.time.Days days52 = days48.minus(days51);
        org.joda.time.Days days53 = null;
        org.joda.time.Days days54 = days48.minus(days53);
        org.joda.time.Days days56 = days48.minus((-1));
        int int57 = days48.size();
        boolean boolean58 = days41.isGreaterThan(days48);
        int int59 = days17.compareTo((org.joda.time.base.BaseSingleFieldPeriod) days41);
        int int60 = days41.size();
        org.junit.Assert.assertNotNull(days1);
        org.junit.Assert.assertNotNull(days3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(days6);
        org.junit.Assert.assertNotNull(days7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(durationFieldType11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNotNull(days14);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertNotNull(days17);
        org.junit.Assert.assertNotNull(days18);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(duration26);
        org.junit.Assert.assertNotNull(days28);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertNotNull(days31);
        org.junit.Assert.assertNotNull(days32);
        org.junit.Assert.assertNotNull(days34);
        org.junit.Assert.assertNotNull(days36);
        org.junit.Assert.assertNotNull(days38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(days41);
        org.junit.Assert.assertNotNull(days43);
        org.junit.Assert.assertNotNull(mutablePeriod44);
        org.junit.Assert.assertNotNull(days46);
        org.junit.Assert.assertNotNull(days48);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 0 + "'", int50 == 0);
        org.junit.Assert.assertNotNull(days51);
        org.junit.Assert.assertNotNull(days52);
        org.junit.Assert.assertNotNull(days54);
        org.junit.Assert.assertNotNull(days56);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 1 + "'", int57 == 1);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 1 + "'", int59 == 1);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 1 + "'", int60 == 1);
    }

    @Test
    public void test0348() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0348");
        org.joda.time.Days days1 = org.joda.time.Days.days((-100));
        org.junit.Assert.assertNotNull(days1);
    }

    @Test
    public void test0349() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0349");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Days days1 = org.joda.time.Days.daysIn(readableInterval0);
        int int3 = days1.getValue((int) (short) 0);
        org.joda.time.Days days4 = org.joda.time.Days.FIVE;
        org.joda.time.Days days5 = days1.minus(days4);
        org.joda.time.ReadableInterval readableInterval6 = null;
        org.joda.time.Days days7 = org.joda.time.Days.daysIn(readableInterval6);
        int int9 = days7.getValue((int) (short) 0);
        org.joda.time.Days days10 = org.joda.time.Days.FIVE;
        org.joda.time.Days days11 = days7.minus(days10);
        org.joda.time.ReadableInterval readableInterval12 = null;
        org.joda.time.Days days13 = org.joda.time.Days.daysIn(readableInterval12);
        int int15 = days13.getValue((int) (short) 0);
        int int16 = days7.compareTo((org.joda.time.base.BaseSingleFieldPeriod) days13);
        org.joda.time.ReadableInterval readableInterval17 = null;
        org.joda.time.Days days18 = org.joda.time.Days.daysIn(readableInterval17);
        int int20 = days18.getValue((int) (short) 0);
        org.joda.time.Days days21 = org.joda.time.Days.FIVE;
        org.joda.time.Days days22 = days18.minus(days21);
        org.joda.time.DurationFieldType durationFieldType23 = null;
        int int24 = days21.get(durationFieldType23);
        org.joda.time.DurationFieldType durationFieldType25 = null;
        int int26 = days21.get(durationFieldType25);
        boolean boolean28 = days21.equals((java.lang.Object) false);
        boolean boolean29 = days13.equals((java.lang.Object) days21);
        org.joda.time.ReadableInterval readableInterval30 = null;
        org.joda.time.Days days31 = org.joda.time.Days.daysIn(readableInterval30);
        int int33 = days31.getValue((int) (short) 0);
        org.joda.time.Days days34 = org.joda.time.Days.FIVE;
        org.joda.time.Days days35 = days31.minus(days34);
        org.joda.time.DurationFieldType durationFieldType36 = null;
        boolean boolean37 = days34.isSupported(durationFieldType36);
        org.joda.time.DurationFieldType durationFieldType39 = days34.getFieldType(0);
        int int40 = days21.get(durationFieldType39);
        boolean boolean41 = days1.isSupported(durationFieldType39);
        java.lang.Class<?> wildcardClass42 = days1.getClass();
        org.junit.Assert.assertNotNull(days1);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(days4);
        org.junit.Assert.assertNotNull(days5);
        org.junit.Assert.assertNotNull(days7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNotNull(days10);
        org.junit.Assert.assertNotNull(days11);
        org.junit.Assert.assertNotNull(days13);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertNotNull(days18);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertNotNull(days21);
        org.junit.Assert.assertNotNull(days22);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(days31);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertNotNull(days34);
        org.junit.Assert.assertNotNull(days35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(durationFieldType39);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 5 + "'", int40 == 5);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(wildcardClass42);
    }

    @Test
    public void test0350() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0350");
        org.joda.time.Days days0 = org.joda.time.Days.ZERO;
        org.joda.time.ReadableInterval readableInterval1 = null;
        org.joda.time.Days days2 = org.joda.time.Days.daysIn(readableInterval1);
        int int4 = days2.getValue((int) (short) 0);
        org.joda.time.Days days5 = org.joda.time.Days.FIVE;
        org.joda.time.Days days6 = days2.minus(days5);
        org.joda.time.Days days7 = null;
        org.joda.time.Days days8 = days2.minus(days7);
        org.joda.time.Duration duration9 = days2.toStandardDuration();
        org.joda.time.DurationFieldType durationFieldType10 = days2.getFieldType();
        org.joda.time.Days days11 = days0.minus(days2);
        int int12 = days11.getDays();
        org.joda.time.Days days13 = org.joda.time.Days.standardDaysIn((org.joda.time.ReadablePeriod) days11);
        org.junit.Assert.assertNotNull(days0);
        org.junit.Assert.assertNotNull(days2);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(days5);
        org.junit.Assert.assertNotNull(days6);
        org.junit.Assert.assertNotNull(days8);
        org.junit.Assert.assertNotNull(duration9);
        org.junit.Assert.assertNotNull(durationFieldType10);
        org.junit.Assert.assertNotNull(days11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNotNull(days13);
    }

    @Test
    public void test0351() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0351");
        org.joda.time.Days days1 = org.joda.time.Days.days(1);
        org.joda.time.ReadableInterval readableInterval2 = null;
        org.joda.time.Days days3 = org.joda.time.Days.daysIn(readableInterval2);
        int int5 = days3.getValue((int) (short) 0);
        org.joda.time.Days days6 = org.joda.time.Days.FIVE;
        org.joda.time.Days days7 = days3.minus(days6);
        org.joda.time.DurationFieldType durationFieldType8 = null;
        boolean boolean9 = days6.isSupported(durationFieldType8);
        org.joda.time.DurationFieldType durationFieldType11 = days6.getFieldType(0);
        org.joda.time.ReadableInterval readableInterval12 = null;
        org.joda.time.Days days13 = org.joda.time.Days.daysIn(readableInterval12);
        int int15 = days13.getValue((int) (short) 0);
        org.joda.time.Days days16 = org.joda.time.Days.FIVE;
        org.joda.time.Days days17 = days13.minus(days16);
        org.joda.time.Days days18 = null;
        org.joda.time.Days days19 = days13.minus(days18);
        org.joda.time.Days days21 = days13.minus((-1));
        org.joda.time.DurationFieldType durationFieldType22 = days13.getFieldType();
        boolean boolean23 = days6.isGreaterThan(days13);
        org.joda.time.ReadableInterval readableInterval24 = null;
        org.joda.time.Days days25 = org.joda.time.Days.daysIn(readableInterval24);
        org.joda.time.Days days27 = days25.plus((int) (byte) 10);
        org.joda.time.Days days28 = days13.plus(days27);
        org.joda.time.MutablePeriod mutablePeriod29 = days27.toMutablePeriod();
        org.joda.time.PeriodType periodType30 = days27.getPeriodType();
        org.joda.time.Days days31 = days1.minus(days27);
        org.joda.time.Period period32 = days31.toPeriod();
        java.lang.Class<?> wildcardClass33 = period32.getClass();
        org.junit.Assert.assertNotNull(days1);
        org.junit.Assert.assertNotNull(days3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(days6);
        org.junit.Assert.assertNotNull(days7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(durationFieldType11);
        org.junit.Assert.assertNotNull(days13);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNotNull(days16);
        org.junit.Assert.assertNotNull(days17);
        org.junit.Assert.assertNotNull(days19);
        org.junit.Assert.assertNotNull(days21);
        org.junit.Assert.assertNotNull(durationFieldType22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(days25);
        org.junit.Assert.assertNotNull(days27);
        org.junit.Assert.assertNotNull(days28);
        org.junit.Assert.assertNotNull(mutablePeriod29);
        org.junit.Assert.assertNotNull(periodType30);
        org.junit.Assert.assertNotNull(days31);
        org.junit.Assert.assertNotNull(period32);
        org.junit.Assert.assertNotNull(wildcardClass33);
    }

    @Test
    public void test0352() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0352");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Days days1 = org.joda.time.Days.daysIn(readableInterval0);
        int int3 = days1.getValue((int) (short) 0);
        org.joda.time.Days days4 = org.joda.time.Days.FIVE;
        org.joda.time.Days days5 = days1.minus(days4);
        java.lang.Class<?> wildcardClass6 = days1.getClass();
        org.junit.Assert.assertNotNull(days1);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(days4);
        org.junit.Assert.assertNotNull(days5);
        org.junit.Assert.assertNotNull(wildcardClass6);
    }

    @Test
    public void test0353() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0353");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Days days1 = org.joda.time.Days.daysIn(readableInterval0);
        int int3 = days1.getValue((int) (short) 0);
        org.joda.time.Days days4 = org.joda.time.Days.FIVE;
        org.joda.time.Days days5 = days1.minus(days4);
        org.joda.time.DurationFieldType durationFieldType6 = null;
        int int7 = days4.get(durationFieldType6);
        int int8 = days4.getDays();
        org.joda.time.Days days9 = days4.negated();
        org.joda.time.Days days11 = days4.plus(5);
        org.joda.time.MutablePeriod mutablePeriod12 = days11.toMutablePeriod();
        org.junit.Assert.assertNotNull(days1);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(days4);
        org.junit.Assert.assertNotNull(days5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 5 + "'", int8 == 5);
        org.junit.Assert.assertNotNull(days9);
        org.junit.Assert.assertNotNull(days11);
        org.junit.Assert.assertNotNull(mutablePeriod12);
    }

    @Test
    public void test0354() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0354");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Days days1 = org.joda.time.Days.daysIn(readableInterval0);
        int int3 = days1.getValue((int) (short) 0);
        org.joda.time.Days days4 = org.joda.time.Days.FIVE;
        org.joda.time.Days days5 = days1.minus(days4);
        org.joda.time.DurationFieldType durationFieldType6 = null;
        boolean boolean7 = days4.isSupported(durationFieldType6);
        org.joda.time.DurationFieldType durationFieldType9 = days4.getFieldType(0);
        org.joda.time.ReadableInterval readableInterval10 = null;
        org.joda.time.Days days11 = org.joda.time.Days.daysIn(readableInterval10);
        int int13 = days11.getValue((int) (short) 0);
        org.joda.time.Days days14 = org.joda.time.Days.FIVE;
        org.joda.time.Days days15 = days11.minus(days14);
        org.joda.time.Days days16 = null;
        org.joda.time.Days days17 = days11.minus(days16);
        org.joda.time.Days days19 = days11.minus((-1));
        org.joda.time.DurationFieldType durationFieldType20 = days11.getFieldType();
        boolean boolean21 = days4.isGreaterThan(days11);
        org.joda.time.ReadableInterval readableInterval22 = null;
        org.joda.time.Days days23 = org.joda.time.Days.daysIn(readableInterval22);
        org.joda.time.Days days25 = days23.plus((int) (byte) 10);
        org.joda.time.Days days27 = days25.dividedBy((int) 'a');
        org.joda.time.Days days29 = days25.dividedBy(5);
        org.joda.time.Days days31 = days25.plus((int) (byte) -1);
        org.joda.time.Days days33 = days25.minus((int) (byte) 100);
        int int34 = days33.getDays();
        boolean boolean35 = days11.isGreaterThan(days33);
        int int36 = days11.getDays();
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.DurationFieldType durationFieldType38 = days11.getFieldType(1);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 1");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(days1);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(days4);
        org.junit.Assert.assertNotNull(days5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(durationFieldType9);
        org.junit.Assert.assertNotNull(days11);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(days14);
        org.junit.Assert.assertNotNull(days15);
        org.junit.Assert.assertNotNull(days17);
        org.junit.Assert.assertNotNull(days19);
        org.junit.Assert.assertNotNull(durationFieldType20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(days23);
        org.junit.Assert.assertNotNull(days25);
        org.junit.Assert.assertNotNull(days27);
        org.junit.Assert.assertNotNull(days29);
        org.junit.Assert.assertNotNull(days31);
        org.junit.Assert.assertNotNull(days33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + (-90) + "'", int34 == (-90));
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
    }

    @Test
    public void test0355() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0355");
        org.joda.time.Days days0 = org.joda.time.Days.ZERO;
        org.joda.time.ReadableInterval readableInterval1 = null;
        org.joda.time.Days days2 = org.joda.time.Days.daysIn(readableInterval1);
        int int4 = days2.getValue((int) (short) 0);
        org.joda.time.Days days5 = org.joda.time.Days.FIVE;
        org.joda.time.Days days6 = days2.minus(days5);
        org.joda.time.Days days7 = null;
        org.joda.time.Days days8 = days2.minus(days7);
        org.joda.time.Duration duration9 = days2.toStandardDuration();
        org.joda.time.DurationFieldType durationFieldType10 = days2.getFieldType();
        org.joda.time.Days days11 = days0.minus(days2);
        org.joda.time.Days days13 = days11.plus((int) (byte) 100);
        org.joda.time.ReadableInterval readableInterval14 = null;
        org.joda.time.Days days15 = org.joda.time.Days.daysIn(readableInterval14);
        int int17 = days15.getValue((int) (short) 0);
        org.joda.time.Days days18 = org.joda.time.Days.FIVE;
        org.joda.time.Days days19 = days15.minus(days18);
        org.joda.time.ReadableInterval readableInterval20 = null;
        org.joda.time.Days days21 = org.joda.time.Days.daysIn(readableInterval20);
        int int23 = days21.getValue((int) (short) 0);
        int int24 = days15.compareTo((org.joda.time.base.BaseSingleFieldPeriod) days21);
        org.joda.time.Days days25 = days13.minus(days15);
        org.joda.time.Period period26 = days13.toPeriod();
        org.junit.Assert.assertNotNull(days0);
        org.junit.Assert.assertNotNull(days2);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(days5);
        org.junit.Assert.assertNotNull(days6);
        org.junit.Assert.assertNotNull(days8);
        org.junit.Assert.assertNotNull(duration9);
        org.junit.Assert.assertNotNull(durationFieldType10);
        org.junit.Assert.assertNotNull(days11);
        org.junit.Assert.assertNotNull(days13);
        org.junit.Assert.assertNotNull(days15);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNotNull(days18);
        org.junit.Assert.assertNotNull(days19);
        org.junit.Assert.assertNotNull(days21);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertNotNull(days25);
        org.junit.Assert.assertNotNull(period26);
    }

    @Test
    public void test0356() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0356");
        org.joda.time.Days days1 = org.joda.time.Days.days((int) (byte) 1);
        org.joda.time.Days days3 = days1.multipliedBy((int) (byte) 10);
        org.joda.time.Days days4 = org.joda.time.Days.THREE;
        org.joda.time.ReadableInterval readableInterval5 = null;
        org.joda.time.Days days6 = org.joda.time.Days.daysIn(readableInterval5);
        org.joda.time.ReadableInterval readableInterval7 = null;
        org.joda.time.Days days8 = org.joda.time.Days.daysIn(readableInterval7);
        int int10 = days8.getValue((int) (short) 0);
        org.joda.time.Days days11 = org.joda.time.Days.FIVE;
        org.joda.time.Days days12 = days8.minus(days11);
        org.joda.time.DurationFieldType durationFieldType13 = null;
        boolean boolean14 = days11.isSupported(durationFieldType13);
        org.joda.time.DurationFieldType durationFieldType16 = days11.getFieldType(0);
        int int17 = days6.get(durationFieldType16);
        org.joda.time.ReadableInterval readableInterval18 = null;
        org.joda.time.Days days19 = org.joda.time.Days.daysIn(readableInterval18);
        int int21 = days19.getValue((int) (short) 0);
        org.joda.time.Days days22 = org.joda.time.Days.FIVE;
        org.joda.time.Days days23 = days19.minus(days22);
        org.joda.time.DurationFieldType durationFieldType24 = null;
        int int25 = days22.get(durationFieldType24);
        org.joda.time.DurationFieldType durationFieldType26 = null;
        int int27 = days22.get(durationFieldType26);
        boolean boolean29 = days22.equals((java.lang.Object) 0L);
        boolean boolean30 = days6.isGreaterThan(days22);
        org.joda.time.ReadableInterval readableInterval31 = null;
        org.joda.time.Days days32 = org.joda.time.Days.daysIn(readableInterval31);
        int int34 = days32.getValue((int) (short) 0);
        org.joda.time.Days days35 = org.joda.time.Days.FIVE;
        org.joda.time.Days days36 = days32.minus(days35);
        org.joda.time.DurationFieldType durationFieldType37 = null;
        int int38 = days35.get(durationFieldType37);
        org.joda.time.DurationFieldType durationFieldType39 = null;
        int int40 = days35.get(durationFieldType39);
        boolean boolean42 = days35.equals((java.lang.Object) 0L);
        org.joda.time.Period period43 = days35.toPeriod();
        org.joda.time.Days days44 = days6.plus(days35);
        boolean boolean45 = days4.isGreaterThan(days44);
        org.joda.time.Days days47 = days44.dividedBy(42);
        org.joda.time.PeriodType periodType48 = days44.getPeriodType();
        org.joda.time.Days days50 = days44.multipliedBy(42);
        org.joda.time.DurationFieldType durationFieldType51 = days44.getFieldType();
        int int52 = days1.get(durationFieldType51);
        org.joda.time.Days days54 = days1.multipliedBy((-100));
        org.junit.Assert.assertNotNull(days1);
        org.junit.Assert.assertNotNull(days3);
        org.junit.Assert.assertNotNull(days4);
        org.junit.Assert.assertNotNull(days6);
        org.junit.Assert.assertNotNull(days8);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(days11);
        org.junit.Assert.assertNotNull(days12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(durationFieldType16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNotNull(days19);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertNotNull(days22);
        org.junit.Assert.assertNotNull(days23);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(days32);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertNotNull(days35);
        org.junit.Assert.assertNotNull(days36);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 0 + "'", int38 == 0);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(period43);
        org.junit.Assert.assertNotNull(days44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(days47);
        org.junit.Assert.assertNotNull(periodType48);
        org.junit.Assert.assertNotNull(days50);
        org.junit.Assert.assertNotNull(durationFieldType51);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 1 + "'", int52 == 1);
        org.junit.Assert.assertNotNull(days54);
    }

    @Test
    public void test0357() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0357");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Days days1 = org.joda.time.Days.daysIn(readableInterval0);
        int int3 = days1.getValue((int) (short) 0);
        org.joda.time.Days days4 = org.joda.time.Days.FIVE;
        org.joda.time.Days days5 = days1.minus(days4);
        org.joda.time.Days days6 = null;
        org.joda.time.Days days7 = days1.minus(days6);
        org.joda.time.ReadableInterval readableInterval8 = null;
        org.joda.time.Days days9 = org.joda.time.Days.daysIn(readableInterval8);
        int int11 = days9.getValue((int) (short) 0);
        org.joda.time.Days days12 = org.joda.time.Days.FIVE;
        org.joda.time.Days days13 = days9.minus(days12);
        org.joda.time.DurationFieldType durationFieldType14 = null;
        int int15 = days12.get(durationFieldType14);
        org.joda.time.DurationFieldType durationFieldType16 = null;
        int int17 = days12.get(durationFieldType16);
        boolean boolean19 = days12.equals((java.lang.Object) 0L);
        int int20 = days1.compareTo((org.joda.time.base.BaseSingleFieldPeriod) days12);
        org.joda.time.Days days22 = days1.minus(52);
        org.joda.time.Days days24 = days22.dividedBy((-1));
        org.joda.time.Days days26 = org.joda.time.Days.days(1);
        org.joda.time.ReadableInterval readableInterval27 = null;
        org.joda.time.Days days28 = org.joda.time.Days.daysIn(readableInterval27);
        int int30 = days28.getValue((int) (short) 0);
        org.joda.time.Days days31 = org.joda.time.Days.FIVE;
        org.joda.time.Days days32 = days28.minus(days31);
        org.joda.time.DurationFieldType durationFieldType33 = null;
        boolean boolean34 = days31.isSupported(durationFieldType33);
        org.joda.time.DurationFieldType durationFieldType36 = days31.getFieldType(0);
        org.joda.time.ReadableInterval readableInterval37 = null;
        org.joda.time.Days days38 = org.joda.time.Days.daysIn(readableInterval37);
        int int40 = days38.getValue((int) (short) 0);
        org.joda.time.Days days41 = org.joda.time.Days.FIVE;
        org.joda.time.Days days42 = days38.minus(days41);
        org.joda.time.Days days43 = null;
        org.joda.time.Days days44 = days38.minus(days43);
        org.joda.time.Days days46 = days38.minus((-1));
        org.joda.time.DurationFieldType durationFieldType47 = days38.getFieldType();
        boolean boolean48 = days31.isGreaterThan(days38);
        org.joda.time.ReadableInterval readableInterval49 = null;
        org.joda.time.Days days50 = org.joda.time.Days.daysIn(readableInterval49);
        org.joda.time.Days days52 = days50.plus((int) (byte) 10);
        org.joda.time.Days days53 = days38.plus(days52);
        org.joda.time.MutablePeriod mutablePeriod54 = days52.toMutablePeriod();
        org.joda.time.PeriodType periodType55 = days52.getPeriodType();
        org.joda.time.Days days56 = days26.minus(days52);
        org.joda.time.Period period57 = days56.toPeriod();
        boolean boolean58 = days24.isGreaterThan(days56);
        java.lang.Class<?> wildcardClass59 = days56.getClass();
        org.junit.Assert.assertNotNull(days1);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(days4);
        org.junit.Assert.assertNotNull(days5);
        org.junit.Assert.assertNotNull(days7);
        org.junit.Assert.assertNotNull(days9);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNotNull(days12);
        org.junit.Assert.assertNotNull(days13);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
        org.junit.Assert.assertNotNull(days22);
        org.junit.Assert.assertNotNull(days24);
        org.junit.Assert.assertNotNull(days26);
        org.junit.Assert.assertNotNull(days28);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertNotNull(days31);
        org.junit.Assert.assertNotNull(days32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(durationFieldType36);
        org.junit.Assert.assertNotNull(days38);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertNotNull(days41);
        org.junit.Assert.assertNotNull(days42);
        org.junit.Assert.assertNotNull(days44);
        org.junit.Assert.assertNotNull(days46);
        org.junit.Assert.assertNotNull(durationFieldType47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(days50);
        org.junit.Assert.assertNotNull(days52);
        org.junit.Assert.assertNotNull(days53);
        org.junit.Assert.assertNotNull(mutablePeriod54);
        org.junit.Assert.assertNotNull(periodType55);
        org.junit.Assert.assertNotNull(days56);
        org.junit.Assert.assertNotNull(period57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(wildcardClass59);
    }

    @Test
    public void test0358() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0358");
        org.joda.time.Days days0 = org.joda.time.Days.SIX;
        org.joda.time.Days days2 = days0.plus(100);
        org.joda.time.Days days3 = org.joda.time.Days.standardDaysIn((org.joda.time.ReadablePeriod) days2);
        org.junit.Assert.assertNotNull(days0);
        org.junit.Assert.assertNotNull(days2);
        org.junit.Assert.assertNotNull(days3);
    }

    @Test
    public void test0359() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0359");
        org.joda.time.Days days1 = org.joda.time.Days.parseDays("P0D");
        org.joda.time.ReadableInterval readableInterval2 = null;
        org.joda.time.Days days3 = org.joda.time.Days.daysIn(readableInterval2);
        org.joda.time.Days days5 = days3.plus((int) (byte) 10);
        org.joda.time.MutablePeriod mutablePeriod6 = days3.toMutablePeriod();
        int int7 = days3.size();
        int int8 = days1.compareTo((org.joda.time.base.BaseSingleFieldPeriod) days3);
        org.joda.time.Days days10 = org.joda.time.Days.days((int) 'a');
        org.joda.time.Days days11 = org.joda.time.Days.SIX;
        org.joda.time.Days days13 = days11.plus(100);
        org.joda.time.ReadableInterval readableInterval14 = null;
        org.joda.time.Days days15 = org.joda.time.Days.daysIn(readableInterval14);
        int int17 = days15.getValue((int) (short) 0);
        org.joda.time.Days days18 = org.joda.time.Days.FIVE;
        org.joda.time.Days days19 = days15.minus(days18);
        org.joda.time.Days days20 = null;
        org.joda.time.Days days21 = days15.minus(days20);
        org.joda.time.Days days23 = days15.minus((-1));
        org.joda.time.DurationFieldType durationFieldType24 = days15.getFieldType();
        int int25 = days11.get(durationFieldType24);
        int int26 = days10.get(durationFieldType24);
        org.joda.time.Days days28 = org.joda.time.Days.days((-1));
        boolean boolean29 = days10.isGreaterThan(days28);
        org.joda.time.Days days30 = null;
        boolean boolean31 = days10.isLessThan(days30);
        org.joda.time.Days days32 = days1.minus(days10);
        org.joda.time.ReadableInterval readableInterval33 = null;
        org.joda.time.Days days34 = org.joda.time.Days.daysIn(readableInterval33);
        int int36 = days34.getValue((int) (short) 0);
        org.joda.time.Days days37 = org.joda.time.Days.FIVE;
        org.joda.time.Days days38 = days34.minus(days37);
        org.joda.time.Days days39 = days32.minus(days38);
        org.joda.time.ReadableInterval readableInterval40 = null;
        org.joda.time.Days days41 = org.joda.time.Days.daysIn(readableInterval40);
        int int43 = days41.getValue((int) (short) 0);
        org.joda.time.Days days44 = org.joda.time.Days.FIVE;
        org.joda.time.Days days45 = days41.minus(days44);
        org.joda.time.DurationFieldType durationFieldType46 = null;
        boolean boolean47 = days44.isSupported(durationFieldType46);
        org.joda.time.DurationFieldType durationFieldType49 = days44.getFieldType(0);
        org.joda.time.ReadableInterval readableInterval50 = null;
        org.joda.time.Days days51 = org.joda.time.Days.daysIn(readableInterval50);
        int int53 = days51.getValue((int) (short) 0);
        org.joda.time.Days days54 = org.joda.time.Days.FIVE;
        org.joda.time.Days days55 = days51.minus(days54);
        org.joda.time.Days days56 = null;
        org.joda.time.Days days57 = days51.minus(days56);
        org.joda.time.Days days59 = days51.minus((-1));
        org.joda.time.DurationFieldType durationFieldType60 = days51.getFieldType();
        boolean boolean61 = days44.isGreaterThan(days51);
        org.joda.time.ReadableInterval readableInterval62 = null;
        org.joda.time.Days days63 = org.joda.time.Days.daysIn(readableInterval62);
        org.joda.time.Days days65 = days63.plus((int) (byte) 10);
        org.joda.time.Days days66 = days51.plus(days65);
        org.joda.time.Days days67 = days32.plus(days51);
        // The following exception was thrown during execution in test generation
        try {
            int int69 = days51.getValue(51);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 51");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(days1);
        org.junit.Assert.assertNotNull(days3);
        org.junit.Assert.assertNotNull(days5);
        org.junit.Assert.assertNotNull(mutablePeriod6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNotNull(days10);
        org.junit.Assert.assertNotNull(days11);
        org.junit.Assert.assertNotNull(days13);
        org.junit.Assert.assertNotNull(days15);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNotNull(days18);
        org.junit.Assert.assertNotNull(days19);
        org.junit.Assert.assertNotNull(days21);
        org.junit.Assert.assertNotNull(days23);
        org.junit.Assert.assertNotNull(durationFieldType24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 6 + "'", int25 == 6);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 97 + "'", int26 == 97);
        org.junit.Assert.assertNotNull(days28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(days32);
        org.junit.Assert.assertNotNull(days34);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertNotNull(days37);
        org.junit.Assert.assertNotNull(days38);
        org.junit.Assert.assertNotNull(days39);
        org.junit.Assert.assertNotNull(days41);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0);
        org.junit.Assert.assertNotNull(days44);
        org.junit.Assert.assertNotNull(days45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(durationFieldType49);
        org.junit.Assert.assertNotNull(days51);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 0 + "'", int53 == 0);
        org.junit.Assert.assertNotNull(days54);
        org.junit.Assert.assertNotNull(days55);
        org.junit.Assert.assertNotNull(days57);
        org.junit.Assert.assertNotNull(days59);
        org.junit.Assert.assertNotNull(durationFieldType60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(days63);
        org.junit.Assert.assertNotNull(days65);
        org.junit.Assert.assertNotNull(days66);
        org.junit.Assert.assertNotNull(days67);
    }

    @Test
    public void test0360() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0360");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Days days1 = org.joda.time.Days.daysIn(readableInterval0);
        org.joda.time.Days days3 = days1.plus((int) (byte) 10);
        org.joda.time.Days days5 = days3.dividedBy((int) 'a');
        org.joda.time.Days days7 = days3.dividedBy(5);
        org.joda.time.Days days9 = days3.plus((int) (byte) -1);
        org.joda.time.Days days11 = days3.minus((int) (byte) 100);
        org.joda.time.Days days12 = org.joda.time.Days.SIX;
        org.joda.time.Days days14 = days12.plus(100);
        org.joda.time.ReadableInterval readableInterval15 = null;
        org.joda.time.Days days16 = org.joda.time.Days.daysIn(readableInterval15);
        int int18 = days16.getValue((int) (short) 0);
        org.joda.time.Days days19 = org.joda.time.Days.FIVE;
        org.joda.time.Days days20 = days16.minus(days19);
        org.joda.time.Days days21 = null;
        org.joda.time.Days days22 = days16.minus(days21);
        org.joda.time.Days days24 = days16.minus((-1));
        org.joda.time.DurationFieldType durationFieldType25 = days16.getFieldType();
        int int26 = days12.get(durationFieldType25);
        org.joda.time.ReadableInterval readableInterval27 = null;
        org.joda.time.Days days28 = org.joda.time.Days.daysIn(readableInterval27);
        int int30 = days28.getValue((int) (short) 0);
        org.joda.time.Days days31 = org.joda.time.Days.FIVE;
        org.joda.time.Days days32 = days28.minus(days31);
        org.joda.time.Days days33 = null;
        org.joda.time.Days days34 = days28.minus(days33);
        org.joda.time.Days days36 = days28.minus((-1));
        org.joda.time.DurationFieldType durationFieldType37 = days28.getFieldType();
        org.joda.time.ReadableInterval readableInterval38 = null;
        org.joda.time.Days days39 = org.joda.time.Days.daysIn(readableInterval38);
        org.joda.time.Days days41 = days39.plus((int) (byte) 10);
        org.joda.time.Days days43 = days41.dividedBy((int) 'a');
        org.joda.time.Days days45 = days41.plus((int) ' ');
        org.joda.time.Days days46 = org.joda.time.Days.standardDaysIn((org.joda.time.ReadablePeriod) days45);
        int int47 = days46.size();
        boolean boolean48 = days28.isGreaterThan(days46);
        org.joda.time.Days days49 = days12.minus(days28);
        org.joda.time.ReadableInterval readableInterval50 = null;
        org.joda.time.Days days51 = org.joda.time.Days.daysIn(readableInterval50);
        org.joda.time.Days days53 = days51.plus((int) (byte) 10);
        org.joda.time.Days days55 = days53.dividedBy((int) 'a');
        org.joda.time.Days days57 = days53.dividedBy(5);
        boolean boolean58 = days28.equals((java.lang.Object) days53);
        org.joda.time.Days days59 = days3.plus(days53);
        org.joda.time.Days days60 = org.joda.time.Days.SIX;
        org.joda.time.Days days62 = days60.plus(100);
        org.joda.time.Days days64 = days62.dividedBy(10);
        int int65 = days3.compareTo((org.joda.time.base.BaseSingleFieldPeriod) days62);
        org.junit.Assert.assertNotNull(days1);
        org.junit.Assert.assertNotNull(days3);
        org.junit.Assert.assertNotNull(days5);
        org.junit.Assert.assertNotNull(days7);
        org.junit.Assert.assertNotNull(days9);
        org.junit.Assert.assertNotNull(days11);
        org.junit.Assert.assertNotNull(days12);
        org.junit.Assert.assertNotNull(days14);
        org.junit.Assert.assertNotNull(days16);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNotNull(days19);
        org.junit.Assert.assertNotNull(days20);
        org.junit.Assert.assertNotNull(days22);
        org.junit.Assert.assertNotNull(days24);
        org.junit.Assert.assertNotNull(durationFieldType25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 6 + "'", int26 == 6);
        org.junit.Assert.assertNotNull(days28);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertNotNull(days31);
        org.junit.Assert.assertNotNull(days32);
        org.junit.Assert.assertNotNull(days34);
        org.junit.Assert.assertNotNull(days36);
        org.junit.Assert.assertNotNull(durationFieldType37);
        org.junit.Assert.assertNotNull(days39);
        org.junit.Assert.assertNotNull(days41);
        org.junit.Assert.assertNotNull(days43);
        org.junit.Assert.assertNotNull(days45);
        org.junit.Assert.assertNotNull(days46);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 1 + "'", int47 == 1);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(days49);
        org.junit.Assert.assertNotNull(days51);
        org.junit.Assert.assertNotNull(days53);
        org.junit.Assert.assertNotNull(days55);
        org.junit.Assert.assertNotNull(days57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(days59);
        org.junit.Assert.assertNotNull(days60);
        org.junit.Assert.assertNotNull(days62);
        org.junit.Assert.assertNotNull(days64);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + (-1) + "'", int65 == (-1));
    }

    @Test
    public void test0361() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0361");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Days days1 = org.joda.time.Days.daysIn(readableInterval0);
        org.joda.time.Days days3 = days1.plus((int) (byte) 10);
        org.joda.time.MutablePeriod mutablePeriod4 = days1.toMutablePeriod();
        int int5 = days1.size();
        org.joda.time.Days days7 = days1.minus(10);
        org.joda.time.Days days8 = org.joda.time.Days.standardDaysIn((org.joda.time.ReadablePeriod) days1);
        org.joda.time.ReadableInterval readableInterval9 = null;
        org.joda.time.Days days10 = org.joda.time.Days.daysIn(readableInterval9);
        org.joda.time.ReadableInterval readableInterval11 = null;
        org.joda.time.Days days12 = org.joda.time.Days.daysIn(readableInterval11);
        int int14 = days12.getValue((int) (short) 0);
        org.joda.time.Days days15 = org.joda.time.Days.FIVE;
        org.joda.time.Days days16 = days12.minus(days15);
        org.joda.time.DurationFieldType durationFieldType17 = null;
        boolean boolean18 = days15.isSupported(durationFieldType17);
        org.joda.time.DurationFieldType durationFieldType20 = days15.getFieldType(0);
        int int21 = days10.get(durationFieldType20);
        org.joda.time.ReadableInterval readableInterval22 = null;
        org.joda.time.Days days23 = org.joda.time.Days.daysIn(readableInterval22);
        int int25 = days23.getValue((int) (short) 0);
        org.joda.time.ReadableInterval readableInterval26 = null;
        org.joda.time.Days days27 = org.joda.time.Days.daysIn(readableInterval26);
        int int29 = days27.getValue((int) (short) 0);
        org.joda.time.Days days30 = org.joda.time.Days.FIVE;
        org.joda.time.Days days31 = days27.minus(days30);
        int int32 = days23.compareTo((org.joda.time.base.BaseSingleFieldPeriod) days30);
        java.lang.String str33 = days23.toString();
        org.joda.time.Days days34 = null;
        boolean boolean35 = days23.isGreaterThan(days34);
        org.joda.time.Period period36 = days23.toPeriod();
        org.joda.time.Days days37 = days10.plus(days23);
        org.joda.time.DurationFieldType durationFieldType38 = days23.getFieldType();
        int int39 = days8.get(durationFieldType38);
        org.junit.Assert.assertNotNull(days1);
        org.junit.Assert.assertNotNull(days3);
        org.junit.Assert.assertNotNull(mutablePeriod4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
        org.junit.Assert.assertNotNull(days7);
        org.junit.Assert.assertNotNull(days8);
        org.junit.Assert.assertNotNull(days10);
        org.junit.Assert.assertNotNull(days12);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNotNull(days15);
        org.junit.Assert.assertNotNull(days16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(durationFieldType20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertNotNull(days23);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertNotNull(days27);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertNotNull(days30);
        org.junit.Assert.assertNotNull(days31);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "P0D" + "'", str33, "P0D");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(period36);
        org.junit.Assert.assertNotNull(days37);
        org.junit.Assert.assertNotNull(durationFieldType38);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
    }

    @Test
    public void test0362() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0362");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Days days1 = org.joda.time.Days.daysIn(readableInterval0);
        org.joda.time.Days days3 = days1.plus((int) (byte) 10);
        org.joda.time.Days days5 = days3.dividedBy((int) 'a');
        org.joda.time.Days days7 = days3.plus((int) ' ');
        org.joda.time.Days days9 = days7.multipliedBy(5);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.DurationFieldType durationFieldType11 = days9.getFieldType((int) 'a');
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 97");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(days1);
        org.junit.Assert.assertNotNull(days3);
        org.junit.Assert.assertNotNull(days5);
        org.junit.Assert.assertNotNull(days7);
        org.junit.Assert.assertNotNull(days9);
    }

    @Test
    public void test0363() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0363");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Days days1 = org.joda.time.Days.daysIn(readableInterval0);
        int int3 = days1.getValue((int) (short) 0);
        org.joda.time.Period period4 = days1.toPeriod();
        org.joda.time.Days days5 = org.joda.time.Days.standardDaysIn((org.joda.time.ReadablePeriod) days1);
        org.joda.time.Duration duration6 = days1.toStandardDuration();
        int int7 = days1.size();
        org.joda.time.Days days8 = null;
        boolean boolean9 = days1.isGreaterThan(days8);
        org.junit.Assert.assertNotNull(days1);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(days5);
        org.junit.Assert.assertNotNull(duration6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
    }

    @Test
    public void test0364() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0364");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Days days1 = org.joda.time.Days.daysIn(readableInterval0);
        org.joda.time.Days days3 = days1.plus((int) (byte) 10);
        org.joda.time.Days days5 = days3.dividedBy((int) 'a');
        org.joda.time.Days days7 = days3.plus((int) ' ');
        org.joda.time.Days days8 = org.joda.time.Days.standardDaysIn((org.joda.time.ReadablePeriod) days7);
        org.joda.time.Days days10 = days8.minus((int) '#');
        org.joda.time.Days days12 = days8.multipliedBy((int) (short) 1);
        org.joda.time.Days days14 = days8.multipliedBy((-100));
        org.junit.Assert.assertNotNull(days1);
        org.junit.Assert.assertNotNull(days3);
        org.junit.Assert.assertNotNull(days5);
        org.junit.Assert.assertNotNull(days7);
        org.junit.Assert.assertNotNull(days8);
        org.junit.Assert.assertNotNull(days10);
        org.junit.Assert.assertNotNull(days12);
        org.junit.Assert.assertNotNull(days14);
    }

    @Test
    public void test0365() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0365");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Days days1 = org.joda.time.Days.daysIn(readableInterval0);
        org.joda.time.Days days3 = days1.plus((int) (byte) 10);
        org.joda.time.Days days5 = days3.dividedBy((int) 'a');
        org.joda.time.Days days7 = days3.dividedBy(5);
        org.joda.time.Days days9 = days3.plus((int) (byte) -1);
        org.joda.time.Days days11 = days3.dividedBy((int) (byte) -1);
        org.joda.time.ReadableInterval readableInterval12 = null;
        org.joda.time.Days days13 = org.joda.time.Days.daysIn(readableInterval12);
        int int15 = days13.getValue((int) (short) 0);
        org.joda.time.Days days16 = org.joda.time.Days.FIVE;
        org.joda.time.Days days17 = days13.minus(days16);
        org.joda.time.Days days18 = null;
        org.joda.time.Days days19 = days13.minus(days18);
        org.joda.time.ReadableInterval readableInterval20 = null;
        org.joda.time.Days days21 = org.joda.time.Days.daysIn(readableInterval20);
        int int23 = days21.getValue((int) (short) 0);
        org.joda.time.Days days24 = org.joda.time.Days.FIVE;
        org.joda.time.Days days25 = days21.minus(days24);
        org.joda.time.DurationFieldType durationFieldType26 = null;
        int int27 = days24.get(durationFieldType26);
        org.joda.time.DurationFieldType durationFieldType28 = null;
        int int29 = days24.get(durationFieldType28);
        boolean boolean31 = days24.equals((java.lang.Object) 0L);
        int int32 = days13.compareTo((org.joda.time.base.BaseSingleFieldPeriod) days24);
        boolean boolean33 = days11.equals((java.lang.Object) days24);
        org.joda.time.DurationFieldType durationFieldType34 = null;
        boolean boolean35 = days24.isSupported(durationFieldType34);
        org.junit.Assert.assertNotNull(days1);
        org.junit.Assert.assertNotNull(days3);
        org.junit.Assert.assertNotNull(days5);
        org.junit.Assert.assertNotNull(days7);
        org.junit.Assert.assertNotNull(days9);
        org.junit.Assert.assertNotNull(days11);
        org.junit.Assert.assertNotNull(days13);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNotNull(days16);
        org.junit.Assert.assertNotNull(days17);
        org.junit.Assert.assertNotNull(days19);
        org.junit.Assert.assertNotNull(days21);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertNotNull(days24);
        org.junit.Assert.assertNotNull(days25);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
    }

    @Test
    public void test0366() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0366");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Days days1 = org.joda.time.Days.daysIn(readableInterval0);
        org.joda.time.Days days3 = days1.plus((int) (byte) 10);
        org.joda.time.DurationFieldType durationFieldType4 = days3.getFieldType();
        org.joda.time.Days days6 = days3.plus(0);
        org.joda.time.ReadableInterval readableInterval7 = null;
        org.joda.time.Days days8 = org.joda.time.Days.daysIn(readableInterval7);
        int int10 = days8.getValue((int) (short) 0);
        org.joda.time.Days days11 = org.joda.time.Days.FIVE;
        org.joda.time.Days days12 = days8.minus(days11);
        org.joda.time.ReadableInterval readableInterval13 = null;
        org.joda.time.Days days14 = org.joda.time.Days.daysIn(readableInterval13);
        int int16 = days14.getValue((int) (short) 0);
        int int17 = days8.compareTo((org.joda.time.base.BaseSingleFieldPeriod) days14);
        org.joda.time.MutablePeriod mutablePeriod18 = days8.toMutablePeriod();
        org.joda.time.PeriodType periodType19 = days8.getPeriodType();
        boolean boolean20 = days3.equals((java.lang.Object) periodType19);
        org.junit.Assert.assertNotNull(days1);
        org.junit.Assert.assertNotNull(days3);
        org.junit.Assert.assertNotNull(durationFieldType4);
        org.junit.Assert.assertNotNull(days6);
        org.junit.Assert.assertNotNull(days8);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(days11);
        org.junit.Assert.assertNotNull(days12);
        org.junit.Assert.assertNotNull(days14);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNotNull(mutablePeriod18);
        org.junit.Assert.assertNotNull(periodType19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
    }

    @Test
    public void test0367() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0367");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Days days1 = org.joda.time.Days.daysIn(readableInterval0);
        int int3 = days1.getValue((int) (short) 0);
        org.joda.time.Days days4 = org.joda.time.Days.FIVE;
        org.joda.time.Days days5 = days1.minus(days4);
        org.joda.time.Days days6 = null;
        org.joda.time.Days days7 = days1.minus(days6);
        org.joda.time.Days days9 = days1.minus((-1));
        int int10 = days1.size();
        org.joda.time.DurationFieldType durationFieldType12 = days1.getFieldType(0);
        // The following exception was thrown during execution in test generation
        try {
            int int14 = days1.getValue(6);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 6");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(days1);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(days4);
        org.junit.Assert.assertNotNull(days5);
        org.junit.Assert.assertNotNull(days7);
        org.junit.Assert.assertNotNull(days9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1 + "'", int10 == 1);
        org.junit.Assert.assertNotNull(durationFieldType12);
    }

    @Test
    public void test0368() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0368");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Days days1 = org.joda.time.Days.daysIn(readableInterval0);
        int int3 = days1.getValue((int) (short) 0);
        org.joda.time.Days days4 = org.joda.time.Days.FIVE;
        org.joda.time.Days days5 = days1.minus(days4);
        org.joda.time.DurationFieldType durationFieldType6 = null;
        boolean boolean7 = days4.isSupported(durationFieldType6);
        org.joda.time.DurationFieldType durationFieldType9 = days4.getFieldType(0);
        org.joda.time.ReadableInterval readableInterval10 = null;
        org.joda.time.Days days11 = org.joda.time.Days.daysIn(readableInterval10);
        int int13 = days11.getValue((int) (short) 0);
        org.joda.time.Days days14 = org.joda.time.Days.FIVE;
        org.joda.time.Days days15 = days11.minus(days14);
        org.joda.time.Days days16 = null;
        org.joda.time.Days days17 = days11.minus(days16);
        org.joda.time.Days days19 = days11.minus((-1));
        org.joda.time.DurationFieldType durationFieldType20 = days11.getFieldType();
        boolean boolean21 = days4.isGreaterThan(days11);
        org.joda.time.ReadableInterval readableInterval22 = null;
        org.joda.time.Days days23 = org.joda.time.Days.daysIn(readableInterval22);
        org.joda.time.Days days25 = days23.plus((int) (byte) 10);
        org.joda.time.Days days26 = days11.plus(days25);
        org.joda.time.ReadableInterval readableInterval27 = null;
        org.joda.time.Days days28 = org.joda.time.Days.daysIn(readableInterval27);
        int int30 = days28.getValue((int) (short) 0);
        org.joda.time.Days days31 = org.joda.time.Days.FIVE;
        org.joda.time.Days days32 = days28.minus(days31);
        org.joda.time.Days days33 = null;
        org.joda.time.Days days34 = days28.minus(days33);
        org.joda.time.Duration duration35 = days28.toStandardDuration();
        org.joda.time.Days days36 = days26.minus(days28);
        org.joda.time.Duration duration37 = days36.toStandardDuration();
        org.joda.time.Days days39 = days36.minus(5);
        org.joda.time.ReadableInterval readableInterval40 = null;
        org.joda.time.Days days41 = org.joda.time.Days.daysIn(readableInterval40);
        org.joda.time.Days days43 = days41.plus((int) (byte) 10);
        org.joda.time.Days days44 = days39.plus(days41);
        org.joda.time.ReadableInterval readableInterval45 = null;
        org.joda.time.Days days46 = org.joda.time.Days.daysIn(readableInterval45);
        int int48 = days46.getValue((int) (short) 0);
        org.joda.time.Period period49 = days46.toPeriod();
        org.joda.time.Days days50 = org.joda.time.Days.standardDaysIn((org.joda.time.ReadablePeriod) period49);
        org.joda.time.ReadableInterval readableInterval51 = null;
        org.joda.time.Days days52 = org.joda.time.Days.daysIn(readableInterval51);
        int int54 = days52.getValue((int) (short) 0);
        org.joda.time.Days days55 = org.joda.time.Days.FIVE;
        org.joda.time.Days days56 = days52.minus(days55);
        org.joda.time.DurationFieldType durationFieldType57 = null;
        int int58 = days55.get(durationFieldType57);
        org.joda.time.DurationFieldType durationFieldType59 = null;
        int int60 = days55.get(durationFieldType59);
        boolean boolean62 = days55.equals((java.lang.Object) false);
        int int63 = days55.getDays();
        boolean boolean64 = days50.isGreaterThan(days55);
        boolean boolean65 = days39.isGreaterThan(days50);
        java.lang.String str66 = days39.toString();
        org.joda.time.PeriodType periodType67 = days39.getPeriodType();
        org.junit.Assert.assertNotNull(days1);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(days4);
        org.junit.Assert.assertNotNull(days5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(durationFieldType9);
        org.junit.Assert.assertNotNull(days11);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(days14);
        org.junit.Assert.assertNotNull(days15);
        org.junit.Assert.assertNotNull(days17);
        org.junit.Assert.assertNotNull(days19);
        org.junit.Assert.assertNotNull(durationFieldType20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(days23);
        org.junit.Assert.assertNotNull(days25);
        org.junit.Assert.assertNotNull(days26);
        org.junit.Assert.assertNotNull(days28);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertNotNull(days31);
        org.junit.Assert.assertNotNull(days32);
        org.junit.Assert.assertNotNull(days34);
        org.junit.Assert.assertNotNull(duration35);
        org.junit.Assert.assertNotNull(days36);
        org.junit.Assert.assertNotNull(duration37);
        org.junit.Assert.assertNotNull(days39);
        org.junit.Assert.assertNotNull(days41);
        org.junit.Assert.assertNotNull(days43);
        org.junit.Assert.assertNotNull(days44);
        org.junit.Assert.assertNotNull(days46);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 0 + "'", int48 == 0);
        org.junit.Assert.assertNotNull(period49);
        org.junit.Assert.assertNotNull(days50);
        org.junit.Assert.assertNotNull(days52);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 0 + "'", int54 == 0);
        org.junit.Assert.assertNotNull(days55);
        org.junit.Assert.assertNotNull(days56);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 0 + "'", int58 == 0);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 0 + "'", int60 == 0);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 5 + "'", int63 == 5);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "P5D" + "'", str66, "P5D");
        org.junit.Assert.assertNotNull(periodType67);
    }

    @Test
    public void test0369() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0369");
        org.joda.time.Days days1 = org.joda.time.Days.days(97);
        org.joda.time.Days days3 = org.joda.time.Days.days((int) 'a');
        org.joda.time.Days days4 = org.joda.time.Days.SIX;
        org.joda.time.Days days6 = days4.plus(100);
        org.joda.time.ReadableInterval readableInterval7 = null;
        org.joda.time.Days days8 = org.joda.time.Days.daysIn(readableInterval7);
        int int10 = days8.getValue((int) (short) 0);
        org.joda.time.Days days11 = org.joda.time.Days.FIVE;
        org.joda.time.Days days12 = days8.minus(days11);
        org.joda.time.Days days13 = null;
        org.joda.time.Days days14 = days8.minus(days13);
        org.joda.time.Days days16 = days8.minus((-1));
        org.joda.time.DurationFieldType durationFieldType17 = days8.getFieldType();
        int int18 = days4.get(durationFieldType17);
        int int19 = days3.get(durationFieldType17);
        org.joda.time.Days days21 = org.joda.time.Days.days((-1));
        boolean boolean22 = days3.isGreaterThan(days21);
        org.joda.time.Days days24 = days3.dividedBy(2147483647);
        boolean boolean25 = days1.isLessThan(days3);
        int int27 = days1.getValue((int) (byte) 0);
        int int28 = days1.getDays();
        org.junit.Assert.assertNotNull(days1);
        org.junit.Assert.assertNotNull(days3);
        org.junit.Assert.assertNotNull(days4);
        org.junit.Assert.assertNotNull(days6);
        org.junit.Assert.assertNotNull(days8);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(days11);
        org.junit.Assert.assertNotNull(days12);
        org.junit.Assert.assertNotNull(days14);
        org.junit.Assert.assertNotNull(days16);
        org.junit.Assert.assertNotNull(durationFieldType17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 6 + "'", int18 == 6);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 97 + "'", int19 == 97);
        org.junit.Assert.assertNotNull(days21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(days24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 97 + "'", int27 == 97);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 97 + "'", int28 == 97);
    }

    @Test
    public void test0370() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0370");
        org.joda.time.Days days0 = org.joda.time.Days.SIX;
        org.joda.time.Days days2 = days0.plus(100);
        org.joda.time.ReadableInterval readableInterval3 = null;
        org.joda.time.Days days4 = org.joda.time.Days.daysIn(readableInterval3);
        int int6 = days4.getValue((int) (short) 0);
        org.joda.time.Days days7 = org.joda.time.Days.FIVE;
        org.joda.time.Days days8 = days4.minus(days7);
        org.joda.time.Days days9 = null;
        org.joda.time.Days days10 = days4.minus(days9);
        org.joda.time.Days days12 = days4.minus((-1));
        org.joda.time.DurationFieldType durationFieldType13 = days4.getFieldType();
        int int14 = days0.get(durationFieldType13);
        org.joda.time.Days days15 = days0.negated();
        org.joda.time.ReadableInterval readableInterval16 = null;
        org.joda.time.Days days17 = org.joda.time.Days.daysIn(readableInterval16);
        int int19 = days17.getValue((int) (short) 0);
        org.joda.time.Days days20 = org.joda.time.Days.FIVE;
        org.joda.time.Days days21 = days17.minus(days20);
        org.joda.time.DurationFieldType durationFieldType22 = null;
        boolean boolean23 = days20.isSupported(durationFieldType22);
        org.joda.time.DurationFieldType durationFieldType25 = days20.getFieldType(0);
        org.joda.time.Period period26 = days20.toPeriod();
        int int28 = days20.getValue(0);
        org.joda.time.Days days29 = org.joda.time.Days.TWO;
        org.joda.time.DurationFieldType durationFieldType30 = days29.getFieldType();
        int int31 = days20.get(durationFieldType30);
        org.joda.time.Days days33 = days20.minus((int) (short) -1);
        org.joda.time.Days days34 = days15.plus(days20);
        java.lang.String str35 = days15.toString();
        org.junit.Assert.assertNotNull(days0);
        org.junit.Assert.assertNotNull(days2);
        org.junit.Assert.assertNotNull(days4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNotNull(days7);
        org.junit.Assert.assertNotNull(days8);
        org.junit.Assert.assertNotNull(days10);
        org.junit.Assert.assertNotNull(days12);
        org.junit.Assert.assertNotNull(durationFieldType13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 6 + "'", int14 == 6);
        org.junit.Assert.assertNotNull(days15);
        org.junit.Assert.assertNotNull(days17);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertNotNull(days20);
        org.junit.Assert.assertNotNull(days21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(durationFieldType25);
        org.junit.Assert.assertNotNull(period26);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 5 + "'", int28 == 5);
        org.junit.Assert.assertNotNull(days29);
        org.junit.Assert.assertNotNull(durationFieldType30);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 5 + "'", int31 == 5);
        org.junit.Assert.assertNotNull(days33);
        org.junit.Assert.assertNotNull(days34);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "P-6D" + "'", str35, "P-6D");
    }

    @Test
    public void test0371() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0371");
        org.joda.time.Days days1 = org.joda.time.Days.parseDays("P0D");
        org.joda.time.ReadableInterval readableInterval2 = null;
        org.joda.time.Days days3 = org.joda.time.Days.daysIn(readableInterval2);
        org.joda.time.Days days5 = days3.plus((int) (byte) 10);
        org.joda.time.MutablePeriod mutablePeriod6 = days3.toMutablePeriod();
        int int7 = days3.size();
        int int8 = days1.compareTo((org.joda.time.base.BaseSingleFieldPeriod) days3);
        org.joda.time.Days days10 = org.joda.time.Days.days((int) 'a');
        org.joda.time.Days days11 = org.joda.time.Days.SIX;
        org.joda.time.Days days13 = days11.plus(100);
        org.joda.time.ReadableInterval readableInterval14 = null;
        org.joda.time.Days days15 = org.joda.time.Days.daysIn(readableInterval14);
        int int17 = days15.getValue((int) (short) 0);
        org.joda.time.Days days18 = org.joda.time.Days.FIVE;
        org.joda.time.Days days19 = days15.minus(days18);
        org.joda.time.Days days20 = null;
        org.joda.time.Days days21 = days15.minus(days20);
        org.joda.time.Days days23 = days15.minus((-1));
        org.joda.time.DurationFieldType durationFieldType24 = days15.getFieldType();
        int int25 = days11.get(durationFieldType24);
        int int26 = days10.get(durationFieldType24);
        org.joda.time.Days days28 = org.joda.time.Days.days((-1));
        boolean boolean29 = days10.isGreaterThan(days28);
        org.joda.time.Days days30 = null;
        boolean boolean31 = days10.isLessThan(days30);
        org.joda.time.Days days32 = days1.minus(days10);
        org.joda.time.Days days33 = days10.negated();
        org.joda.time.Period period34 = days10.toPeriod();
        org.junit.Assert.assertNotNull(days1);
        org.junit.Assert.assertNotNull(days3);
        org.junit.Assert.assertNotNull(days5);
        org.junit.Assert.assertNotNull(mutablePeriod6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNotNull(days10);
        org.junit.Assert.assertNotNull(days11);
        org.junit.Assert.assertNotNull(days13);
        org.junit.Assert.assertNotNull(days15);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNotNull(days18);
        org.junit.Assert.assertNotNull(days19);
        org.junit.Assert.assertNotNull(days21);
        org.junit.Assert.assertNotNull(days23);
        org.junit.Assert.assertNotNull(durationFieldType24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 6 + "'", int25 == 6);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 97 + "'", int26 == 97);
        org.junit.Assert.assertNotNull(days28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(days32);
        org.junit.Assert.assertNotNull(days33);
        org.junit.Assert.assertNotNull(period34);
    }

    @Test
    public void test0372() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0372");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Days days1 = org.joda.time.Days.daysIn(readableInterval0);
        org.joda.time.Days days3 = days1.plus((int) (byte) 10);
        org.joda.time.Days days5 = days3.dividedBy((int) 'a');
        org.joda.time.Days days7 = days3.dividedBy(5);
        org.joda.time.Days days9 = days3.plus((int) (byte) -1);
        org.joda.time.Days days11 = days3.minus((int) (byte) 100);
        org.joda.time.DurationFieldType durationFieldType12 = days3.getFieldType();
        org.joda.time.Days days13 = org.joda.time.Days.standardDaysIn((org.joda.time.ReadablePeriod) days3);
        org.joda.time.Days days14 = org.joda.time.Days.ZERO;
        org.joda.time.ReadableInterval readableInterval15 = null;
        org.joda.time.Days days16 = org.joda.time.Days.daysIn(readableInterval15);
        int int18 = days16.getValue((int) (short) 0);
        org.joda.time.Days days19 = org.joda.time.Days.FIVE;
        org.joda.time.Days days20 = days16.minus(days19);
        org.joda.time.Days days21 = null;
        org.joda.time.Days days22 = days16.minus(days21);
        org.joda.time.Duration duration23 = days16.toStandardDuration();
        org.joda.time.DurationFieldType durationFieldType24 = days16.getFieldType();
        org.joda.time.Days days25 = days14.minus(days16);
        org.joda.time.Days days26 = org.joda.time.Days.SIX;
        org.joda.time.Days days28 = days26.plus(100);
        org.joda.time.ReadableInterval readableInterval29 = null;
        org.joda.time.Days days30 = org.joda.time.Days.daysIn(readableInterval29);
        int int32 = days30.getValue((int) (short) 0);
        org.joda.time.Days days33 = org.joda.time.Days.FIVE;
        org.joda.time.Days days34 = days30.minus(days33);
        org.joda.time.Days days35 = null;
        org.joda.time.Days days36 = days30.minus(days35);
        org.joda.time.Days days38 = days30.minus((-1));
        org.joda.time.DurationFieldType durationFieldType39 = days30.getFieldType();
        int int40 = days26.get(durationFieldType39);
        int int41 = days25.get(durationFieldType39);
        boolean boolean42 = days13.isGreaterThan(days25);
        org.junit.Assert.assertNotNull(days1);
        org.junit.Assert.assertNotNull(days3);
        org.junit.Assert.assertNotNull(days5);
        org.junit.Assert.assertNotNull(days7);
        org.junit.Assert.assertNotNull(days9);
        org.junit.Assert.assertNotNull(days11);
        org.junit.Assert.assertNotNull(durationFieldType12);
        org.junit.Assert.assertNotNull(days13);
        org.junit.Assert.assertNotNull(days14);
        org.junit.Assert.assertNotNull(days16);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNotNull(days19);
        org.junit.Assert.assertNotNull(days20);
        org.junit.Assert.assertNotNull(days22);
        org.junit.Assert.assertNotNull(duration23);
        org.junit.Assert.assertNotNull(durationFieldType24);
        org.junit.Assert.assertNotNull(days25);
        org.junit.Assert.assertNotNull(days26);
        org.junit.Assert.assertNotNull(days28);
        org.junit.Assert.assertNotNull(days30);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertNotNull(days33);
        org.junit.Assert.assertNotNull(days34);
        org.junit.Assert.assertNotNull(days36);
        org.junit.Assert.assertNotNull(days38);
        org.junit.Assert.assertNotNull(durationFieldType39);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 6 + "'", int40 == 6);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
    }

    @Test
    public void test0373() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0373");
        org.joda.time.Days days0 = org.joda.time.Days.MAX_VALUE;
        org.joda.time.Days days1 = days0.negated();
        org.joda.time.PeriodType periodType2 = days0.getPeriodType();
        org.joda.time.ReadableInterval readableInterval3 = null;
        org.joda.time.Days days4 = org.joda.time.Days.daysIn(readableInterval3);
        int int6 = days4.getValue((int) (short) 0);
        org.joda.time.Days days7 = org.joda.time.Days.FIVE;
        org.joda.time.Days days8 = days4.minus(days7);
        org.joda.time.DurationFieldType durationFieldType9 = null;
        int int10 = days7.get(durationFieldType9);
        org.joda.time.Days days12 = days7.dividedBy(100);
        int int13 = days0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) days7);
        org.joda.time.MutablePeriod mutablePeriod14 = days0.toMutablePeriod();
        org.joda.time.Days days15 = org.joda.time.Days.standardDaysIn((org.joda.time.ReadablePeriod) mutablePeriod14);
        java.lang.Class<?> wildcardClass16 = days15.getClass();
        org.junit.Assert.assertNotNull(days0);
        org.junit.Assert.assertNotNull(days1);
        org.junit.Assert.assertNotNull(periodType2);
        org.junit.Assert.assertNotNull(days4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNotNull(days7);
        org.junit.Assert.assertNotNull(days8);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(days12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertNotNull(mutablePeriod14);
        org.junit.Assert.assertNotNull(days15);
        org.junit.Assert.assertNotNull(wildcardClass16);
    }

    @Test
    public void test0374() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0374");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Days days1 = org.joda.time.Days.daysIn(readableInterval0);
        org.joda.time.Days days3 = days1.plus((int) (byte) 10);
        java.lang.String str4 = days3.toString();
        org.joda.time.PeriodType periodType5 = days3.getPeriodType();
        org.joda.time.Days days7 = days3.multipliedBy((int) (byte) 1);
        // The following exception was thrown during execution in test generation
        try {
            int int9 = days3.getValue(20);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 20");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(days1);
        org.junit.Assert.assertNotNull(days3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "P10D" + "'", str4, "P10D");
        org.junit.Assert.assertNotNull(periodType5);
        org.junit.Assert.assertNotNull(days7);
    }

    @Test
    public void test0375() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0375");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Days days1 = org.joda.time.Days.daysIn(readableInterval0);
        org.joda.time.Days days3 = days1.plus((int) (byte) 10);
        org.joda.time.Days days5 = days3.dividedBy((int) 'a');
        org.joda.time.Days days7 = days3.plus((int) ' ');
        org.joda.time.Days days8 = org.joda.time.Days.standardDaysIn((org.joda.time.ReadablePeriod) days7);
        org.joda.time.Days days10 = days8.minus((int) '#');
        org.joda.time.ReadableInterval readableInterval11 = null;
        org.joda.time.Days days12 = org.joda.time.Days.daysIn(readableInterval11);
        int int14 = days12.getValue((int) (short) 0);
        org.joda.time.Days days15 = org.joda.time.Days.FIVE;
        org.joda.time.Days days16 = days12.minus(days15);
        org.joda.time.Days days17 = null;
        org.joda.time.Days days18 = days12.minus(days17);
        org.joda.time.ReadableInterval readableInterval19 = null;
        org.joda.time.Days days20 = org.joda.time.Days.daysIn(readableInterval19);
        org.joda.time.ReadableInterval readableInterval21 = null;
        org.joda.time.Days days22 = org.joda.time.Days.daysIn(readableInterval21);
        int int24 = days22.getValue((int) (short) 0);
        org.joda.time.Days days25 = org.joda.time.Days.FIVE;
        org.joda.time.Days days26 = days22.minus(days25);
        org.joda.time.DurationFieldType durationFieldType27 = null;
        boolean boolean28 = days25.isSupported(durationFieldType27);
        org.joda.time.DurationFieldType durationFieldType30 = days25.getFieldType(0);
        int int31 = days20.get(durationFieldType30);
        org.joda.time.PeriodType periodType32 = days20.getPeriodType();
        org.joda.time.Days days33 = days12.plus(days20);
        org.joda.time.ReadableInterval readableInterval34 = null;
        org.joda.time.Days days35 = org.joda.time.Days.daysIn(readableInterval34);
        int int37 = days35.getValue((int) (short) 0);
        org.joda.time.Days days38 = org.joda.time.Days.FIVE;
        org.joda.time.Days days39 = days35.minus(days38);
        org.joda.time.Days days40 = null;
        org.joda.time.Days days41 = days35.minus(days40);
        org.joda.time.Days days43 = days41.minus(100);
        org.joda.time.ReadableInterval readableInterval44 = null;
        org.joda.time.Days days45 = org.joda.time.Days.daysIn(readableInterval44);
        int int47 = days45.getValue((int) (short) 0);
        org.joda.time.Days days48 = org.joda.time.Days.FIVE;
        org.joda.time.Days days49 = days45.minus(days48);
        org.joda.time.Days days50 = null;
        org.joda.time.Days days51 = days45.minus(days50);
        org.joda.time.Days days53 = days45.minus((-1));
        org.joda.time.Days days54 = days41.plus(days45);
        boolean boolean55 = days33.equals((java.lang.Object) days45);
        boolean boolean56 = days10.equals((java.lang.Object) days33);
        java.lang.String str57 = days10.toString();
        org.joda.time.Days days59 = days10.plus((int) (byte) 1);
        org.junit.Assert.assertNotNull(days1);
        org.junit.Assert.assertNotNull(days3);
        org.junit.Assert.assertNotNull(days5);
        org.junit.Assert.assertNotNull(days7);
        org.junit.Assert.assertNotNull(days8);
        org.junit.Assert.assertNotNull(days10);
        org.junit.Assert.assertNotNull(days12);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNotNull(days15);
        org.junit.Assert.assertNotNull(days16);
        org.junit.Assert.assertNotNull(days18);
        org.junit.Assert.assertNotNull(days20);
        org.junit.Assert.assertNotNull(days22);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertNotNull(days25);
        org.junit.Assert.assertNotNull(days26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(durationFieldType30);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertNotNull(periodType32);
        org.junit.Assert.assertNotNull(days33);
        org.junit.Assert.assertNotNull(days35);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0);
        org.junit.Assert.assertNotNull(days38);
        org.junit.Assert.assertNotNull(days39);
        org.junit.Assert.assertNotNull(days41);
        org.junit.Assert.assertNotNull(days43);
        org.junit.Assert.assertNotNull(days45);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 0 + "'", int47 == 0);
        org.junit.Assert.assertNotNull(days48);
        org.junit.Assert.assertNotNull(days49);
        org.junit.Assert.assertNotNull(days51);
        org.junit.Assert.assertNotNull(days53);
        org.junit.Assert.assertNotNull(days54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "P7D" + "'", str57, "P7D");
        org.junit.Assert.assertNotNull(days59);
    }

    @Test
    public void test0376() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0376");
        org.joda.time.Days days0 = org.joda.time.Days.TWO;
        org.joda.time.Days days2 = days0.dividedBy(52);
        org.joda.time.MutablePeriod mutablePeriod3 = days0.toMutablePeriod();
        org.junit.Assert.assertNotNull(days0);
        org.junit.Assert.assertNotNull(days2);
        org.junit.Assert.assertNotNull(mutablePeriod3);
    }

    @Test
    public void test0377() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0377");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Days days1 = org.joda.time.Days.daysIn(readableInterval0);
        int int3 = days1.getValue((int) (short) 0);
        org.joda.time.Days days4 = org.joda.time.Days.FIVE;
        org.joda.time.Days days5 = days1.minus(days4);
        org.joda.time.DurationFieldType durationFieldType6 = null;
        int int7 = days4.get(durationFieldType6);
        org.joda.time.DurationFieldType durationFieldType8 = null;
        int int9 = days4.get(durationFieldType8);
        boolean boolean11 = days4.equals((java.lang.Object) false);
        int int12 = days4.getDays();
        org.joda.time.Days days13 = days4.negated();
        org.joda.time.MutablePeriod mutablePeriod14 = days4.toMutablePeriod();
        org.junit.Assert.assertNotNull(days1);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(days4);
        org.junit.Assert.assertNotNull(days5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 5 + "'", int12 == 5);
        org.junit.Assert.assertNotNull(days13);
        org.junit.Assert.assertNotNull(mutablePeriod14);
    }

    @Test
    public void test0378() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0378");
        org.joda.time.Days days0 = org.joda.time.Days.MAX_VALUE;
        org.joda.time.Days days1 = days0.negated();
        org.joda.time.ReadableInterval readableInterval2 = null;
        org.joda.time.Days days3 = org.joda.time.Days.daysIn(readableInterval2);
        int int5 = days3.getValue((int) (short) 0);
        org.joda.time.Days days6 = org.joda.time.Days.FIVE;
        org.joda.time.Days days7 = days3.minus(days6);
        org.joda.time.Days days8 = null;
        org.joda.time.Days days9 = days3.minus(days8);
        org.joda.time.Days days11 = days3.minus((-1));
        org.joda.time.ReadableInterval readableInterval12 = null;
        org.joda.time.Days days13 = org.joda.time.Days.daysIn(readableInterval12);
        int int15 = days13.getValue((int) (short) 0);
        org.joda.time.Days days16 = org.joda.time.Days.FIVE;
        org.joda.time.Days days17 = days13.minus(days16);
        org.joda.time.Days days18 = null;
        org.joda.time.Days days19 = days13.minus(days18);
        boolean boolean20 = days11.isGreaterThan(days19);
        org.joda.time.Days days21 = days1.plus(days19);
        org.joda.time.DurationFieldType durationFieldType22 = days1.getFieldType();
        org.junit.Assert.assertNotNull(days0);
        org.junit.Assert.assertNotNull(days1);
        org.junit.Assert.assertNotNull(days3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(days6);
        org.junit.Assert.assertNotNull(days7);
        org.junit.Assert.assertNotNull(days9);
        org.junit.Assert.assertNotNull(days11);
        org.junit.Assert.assertNotNull(days13);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNotNull(days16);
        org.junit.Assert.assertNotNull(days17);
        org.junit.Assert.assertNotNull(days19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(days21);
        org.junit.Assert.assertNotNull(durationFieldType22);
    }

    @Test
    public void test0379() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0379");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Days days1 = org.joda.time.Days.daysIn(readableInterval0);
        int int3 = days1.getValue((int) (short) 0);
        org.joda.time.Days days4 = org.joda.time.Days.FIVE;
        org.joda.time.Days days5 = days1.minus(days4);
        org.joda.time.DurationFieldType durationFieldType6 = null;
        boolean boolean7 = days4.isSupported(durationFieldType6);
        org.joda.time.DurationFieldType durationFieldType9 = days4.getFieldType(0);
        org.joda.time.Days days11 = days4.multipliedBy(1);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.DurationFieldType durationFieldType13 = days4.getFieldType((int) 'a');
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 97");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(days1);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(days4);
        org.junit.Assert.assertNotNull(days5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(durationFieldType9);
        org.junit.Assert.assertNotNull(days11);
    }

    @Test
    public void test0380() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0380");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Days days1 = org.joda.time.Days.daysIn(readableInterval0);
        org.joda.time.Days days3 = days1.plus((int) (byte) 10);
        java.lang.String str4 = days3.toString();
        org.joda.time.PeriodType periodType5 = days3.getPeriodType();
        org.joda.time.Days days7 = days3.multipliedBy((int) (byte) 1);
        org.joda.time.Days days9 = org.joda.time.Days.days((int) (byte) 10);
        boolean boolean10 = days7.equals((java.lang.Object) (byte) 10);
        org.junit.Assert.assertNotNull(days1);
        org.junit.Assert.assertNotNull(days3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "P10D" + "'", str4, "P10D");
        org.junit.Assert.assertNotNull(periodType5);
        org.junit.Assert.assertNotNull(days7);
        org.junit.Assert.assertNotNull(days9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
    }

    @Test
    public void test0381() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0381");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Days days1 = org.joda.time.Days.daysIn(readableInterval0);
        int int3 = days1.getValue((int) (short) 0);
        org.joda.time.Days days4 = org.joda.time.Days.FIVE;
        org.joda.time.Days days5 = days1.minus(days4);
        org.joda.time.Days days6 = null;
        org.joda.time.Days days7 = days1.minus(days6);
        org.joda.time.ReadableInterval readableInterval8 = null;
        org.joda.time.Days days9 = org.joda.time.Days.daysIn(readableInterval8);
        org.joda.time.ReadableInterval readableInterval10 = null;
        org.joda.time.Days days11 = org.joda.time.Days.daysIn(readableInterval10);
        int int13 = days11.getValue((int) (short) 0);
        org.joda.time.Days days14 = org.joda.time.Days.FIVE;
        org.joda.time.Days days15 = days11.minus(days14);
        org.joda.time.DurationFieldType durationFieldType16 = null;
        boolean boolean17 = days14.isSupported(durationFieldType16);
        org.joda.time.DurationFieldType durationFieldType19 = days14.getFieldType(0);
        int int20 = days9.get(durationFieldType19);
        org.joda.time.PeriodType periodType21 = days9.getPeriodType();
        org.joda.time.Days days22 = days1.plus(days9);
        org.joda.time.DurationFieldType durationFieldType23 = days1.getFieldType();
        org.joda.time.Days days24 = days1.negated();
        org.junit.Assert.assertNotNull(days1);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(days4);
        org.junit.Assert.assertNotNull(days5);
        org.junit.Assert.assertNotNull(days7);
        org.junit.Assert.assertNotNull(days9);
        org.junit.Assert.assertNotNull(days11);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(days14);
        org.junit.Assert.assertNotNull(days15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(durationFieldType19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertNotNull(periodType21);
        org.junit.Assert.assertNotNull(days22);
        org.junit.Assert.assertNotNull(durationFieldType23);
        org.junit.Assert.assertNotNull(days24);
    }

    @Test
    public void test0382() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0382");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Days days1 = org.joda.time.Days.daysIn(readableInterval0);
        int int3 = days1.getValue((int) (short) 0);
        org.joda.time.Days days4 = org.joda.time.Days.FIVE;
        org.joda.time.Days days5 = days1.minus(days4);
        org.joda.time.Days days6 = null;
        org.joda.time.Days days7 = days1.minus(days6);
        org.joda.time.Days days9 = days7.minus(100);
        org.joda.time.Days days11 = days9.multipliedBy(8);
        org.junit.Assert.assertNotNull(days1);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(days4);
        org.junit.Assert.assertNotNull(days5);
        org.junit.Assert.assertNotNull(days7);
        org.junit.Assert.assertNotNull(days9);
        org.junit.Assert.assertNotNull(days11);
    }

    @Test
    public void test0383() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0383");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Days days1 = org.joda.time.Days.daysIn(readableInterval0);
        org.joda.time.Days days3 = days1.plus((int) (byte) 10);
        org.joda.time.DurationFieldType durationFieldType4 = days3.getFieldType();
        org.joda.time.Days days6 = days3.plus(0);
        org.joda.time.ReadableInterval readableInterval7 = null;
        org.joda.time.Days days8 = org.joda.time.Days.daysIn(readableInterval7);
        int int10 = days8.getValue((int) (short) 0);
        org.joda.time.Days days11 = org.joda.time.Days.FIVE;
        org.joda.time.Days days12 = days8.minus(days11);
        org.joda.time.DurationFieldType durationFieldType13 = null;
        boolean boolean14 = days11.isSupported(durationFieldType13);
        org.joda.time.DurationFieldType durationFieldType16 = days11.getFieldType(0);
        org.joda.time.ReadableInterval readableInterval17 = null;
        org.joda.time.Days days18 = org.joda.time.Days.daysIn(readableInterval17);
        int int20 = days18.getValue((int) (short) 0);
        org.joda.time.Days days21 = org.joda.time.Days.FIVE;
        org.joda.time.Days days22 = days18.minus(days21);
        org.joda.time.Days days23 = null;
        org.joda.time.Days days24 = days18.minus(days23);
        org.joda.time.Days days26 = days18.minus((-1));
        org.joda.time.DurationFieldType durationFieldType27 = days18.getFieldType();
        boolean boolean28 = days11.isGreaterThan(days18);
        org.joda.time.ReadableInterval readableInterval29 = null;
        org.joda.time.Days days30 = org.joda.time.Days.daysIn(readableInterval29);
        org.joda.time.Days days32 = days30.plus((int) (byte) 10);
        org.joda.time.Days days33 = days18.plus(days32);
        int int34 = days6.compareTo((org.joda.time.base.BaseSingleFieldPeriod) days18);
        int int36 = days6.getValue((int) (byte) 0);
        org.joda.time.Days days37 = org.joda.time.Days.THREE;
        org.joda.time.ReadableInterval readableInterval38 = null;
        org.joda.time.Days days39 = org.joda.time.Days.daysIn(readableInterval38);
        org.joda.time.ReadableInterval readableInterval40 = null;
        org.joda.time.Days days41 = org.joda.time.Days.daysIn(readableInterval40);
        int int43 = days41.getValue((int) (short) 0);
        org.joda.time.Days days44 = org.joda.time.Days.FIVE;
        org.joda.time.Days days45 = days41.minus(days44);
        org.joda.time.DurationFieldType durationFieldType46 = null;
        boolean boolean47 = days44.isSupported(durationFieldType46);
        org.joda.time.DurationFieldType durationFieldType49 = days44.getFieldType(0);
        int int50 = days39.get(durationFieldType49);
        org.joda.time.ReadableInterval readableInterval51 = null;
        org.joda.time.Days days52 = org.joda.time.Days.daysIn(readableInterval51);
        int int54 = days52.getValue((int) (short) 0);
        org.joda.time.Days days55 = org.joda.time.Days.FIVE;
        org.joda.time.Days days56 = days52.minus(days55);
        org.joda.time.DurationFieldType durationFieldType57 = null;
        int int58 = days55.get(durationFieldType57);
        org.joda.time.DurationFieldType durationFieldType59 = null;
        int int60 = days55.get(durationFieldType59);
        boolean boolean62 = days55.equals((java.lang.Object) 0L);
        boolean boolean63 = days39.isGreaterThan(days55);
        org.joda.time.ReadableInterval readableInterval64 = null;
        org.joda.time.Days days65 = org.joda.time.Days.daysIn(readableInterval64);
        int int67 = days65.getValue((int) (short) 0);
        org.joda.time.Days days68 = org.joda.time.Days.FIVE;
        org.joda.time.Days days69 = days65.minus(days68);
        org.joda.time.DurationFieldType durationFieldType70 = null;
        int int71 = days68.get(durationFieldType70);
        org.joda.time.DurationFieldType durationFieldType72 = null;
        int int73 = days68.get(durationFieldType72);
        boolean boolean75 = days68.equals((java.lang.Object) 0L);
        org.joda.time.Period period76 = days68.toPeriod();
        org.joda.time.Days days77 = days39.plus(days68);
        boolean boolean78 = days37.isGreaterThan(days77);
        org.joda.time.ReadableInterval readableInterval79 = null;
        org.joda.time.Days days80 = org.joda.time.Days.daysIn(readableInterval79);
        org.joda.time.Days days82 = days80.plus((int) (byte) 10);
        org.joda.time.Days days84 = days82.dividedBy((int) 'a');
        int int85 = days77.compareTo((org.joda.time.base.BaseSingleFieldPeriod) days82);
        boolean boolean86 = days6.isLessThan(days77);
        org.joda.time.ReadableInterval readableInterval87 = null;
        org.joda.time.Days days88 = org.joda.time.Days.daysIn(readableInterval87);
        org.joda.time.Days days90 = days88.plus((int) (byte) 10);
        org.joda.time.Days days92 = days90.dividedBy((int) 'a');
        org.joda.time.Days days94 = days90.dividedBy(5);
        org.joda.time.Days days96 = days90.plus((int) (byte) -1);
        org.joda.time.Days days97 = days6.plus(days90);
        org.joda.time.Days days98 = days6.negated();
        org.joda.time.PeriodType periodType99 = days98.getPeriodType();
        org.junit.Assert.assertNotNull(days1);
        org.junit.Assert.assertNotNull(days3);
        org.junit.Assert.assertNotNull(durationFieldType4);
        org.junit.Assert.assertNotNull(days6);
        org.junit.Assert.assertNotNull(days8);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(days11);
        org.junit.Assert.assertNotNull(days12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(durationFieldType16);
        org.junit.Assert.assertNotNull(days18);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertNotNull(days21);
        org.junit.Assert.assertNotNull(days22);
        org.junit.Assert.assertNotNull(days24);
        org.junit.Assert.assertNotNull(days26);
        org.junit.Assert.assertNotNull(durationFieldType27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(days30);
        org.junit.Assert.assertNotNull(days32);
        org.junit.Assert.assertNotNull(days33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 1 + "'", int34 == 1);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 10 + "'", int36 == 10);
        org.junit.Assert.assertNotNull(days37);
        org.junit.Assert.assertNotNull(days39);
        org.junit.Assert.assertNotNull(days41);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0);
        org.junit.Assert.assertNotNull(days44);
        org.junit.Assert.assertNotNull(days45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(durationFieldType49);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 0 + "'", int50 == 0);
        org.junit.Assert.assertNotNull(days52);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 0 + "'", int54 == 0);
        org.junit.Assert.assertNotNull(days55);
        org.junit.Assert.assertNotNull(days56);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 0 + "'", int58 == 0);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 0 + "'", int60 == 0);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(days65);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 0 + "'", int67 == 0);
        org.junit.Assert.assertNotNull(days68);
        org.junit.Assert.assertNotNull(days69);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 0 + "'", int71 == 0);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 0 + "'", int73 == 0);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNotNull(period76);
        org.junit.Assert.assertNotNull(days77);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertNotNull(days80);
        org.junit.Assert.assertNotNull(days82);
        org.junit.Assert.assertNotNull(days84);
        org.junit.Assert.assertTrue("'" + int85 + "' != '" + (-1) + "'", int85 == (-1));
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertNotNull(days88);
        org.junit.Assert.assertNotNull(days90);
        org.junit.Assert.assertNotNull(days92);
        org.junit.Assert.assertNotNull(days94);
        org.junit.Assert.assertNotNull(days96);
        org.junit.Assert.assertNotNull(days97);
        org.junit.Assert.assertNotNull(days98);
        org.junit.Assert.assertNotNull(periodType99);
    }

    @Test
    public void test0384() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0384");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Days days1 = org.joda.time.Days.daysIn(readableInterval0);
        int int3 = days1.getValue((int) (short) 0);
        org.joda.time.Days days4 = org.joda.time.Days.FIVE;
        org.joda.time.Days days5 = days1.minus(days4);
        org.joda.time.DurationFieldType durationFieldType6 = null;
        boolean boolean7 = days4.isSupported(durationFieldType6);
        org.joda.time.DurationFieldType durationFieldType9 = days4.getFieldType(0);
        org.joda.time.ReadableInterval readableInterval10 = null;
        org.joda.time.Days days11 = org.joda.time.Days.daysIn(readableInterval10);
        int int13 = days11.getValue((int) (short) 0);
        org.joda.time.Days days14 = org.joda.time.Days.FIVE;
        org.joda.time.Days days15 = days11.minus(days14);
        org.joda.time.Days days16 = null;
        org.joda.time.Days days17 = days11.minus(days16);
        org.joda.time.Days days19 = days11.minus((-1));
        org.joda.time.DurationFieldType durationFieldType20 = days11.getFieldType();
        boolean boolean21 = days4.isGreaterThan(days11);
        org.joda.time.ReadableInterval readableInterval22 = null;
        org.joda.time.Days days23 = org.joda.time.Days.daysIn(readableInterval22);
        org.joda.time.Days days25 = days23.plus((int) (byte) 10);
        org.joda.time.Days days26 = days11.plus(days25);
        org.joda.time.ReadableInterval readableInterval27 = null;
        org.joda.time.Days days28 = org.joda.time.Days.daysIn(readableInterval27);
        int int30 = days28.getValue((int) (short) 0);
        org.joda.time.Days days31 = org.joda.time.Days.FIVE;
        org.joda.time.Days days32 = days28.minus(days31);
        org.joda.time.Days days33 = null;
        org.joda.time.Days days34 = days28.minus(days33);
        org.joda.time.Duration duration35 = days28.toStandardDuration();
        org.joda.time.Days days36 = days26.minus(days28);
        org.joda.time.Duration duration37 = days36.toStandardDuration();
        org.joda.time.Days days39 = days36.minus(5);
        org.joda.time.ReadableInterval readableInterval40 = null;
        org.joda.time.Days days41 = org.joda.time.Days.daysIn(readableInterval40);
        org.joda.time.Days days43 = days41.plus((int) (byte) 10);
        org.joda.time.Days days44 = days39.plus(days41);
        org.joda.time.PeriodType periodType45 = days44.getPeriodType();
        java.lang.String str46 = days44.toString();
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.DurationFieldType durationFieldType48 = days44.getFieldType(5);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 5");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(days1);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(days4);
        org.junit.Assert.assertNotNull(days5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(durationFieldType9);
        org.junit.Assert.assertNotNull(days11);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(days14);
        org.junit.Assert.assertNotNull(days15);
        org.junit.Assert.assertNotNull(days17);
        org.junit.Assert.assertNotNull(days19);
        org.junit.Assert.assertNotNull(durationFieldType20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(days23);
        org.junit.Assert.assertNotNull(days25);
        org.junit.Assert.assertNotNull(days26);
        org.junit.Assert.assertNotNull(days28);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertNotNull(days31);
        org.junit.Assert.assertNotNull(days32);
        org.junit.Assert.assertNotNull(days34);
        org.junit.Assert.assertNotNull(duration35);
        org.junit.Assert.assertNotNull(days36);
        org.junit.Assert.assertNotNull(duration37);
        org.junit.Assert.assertNotNull(days39);
        org.junit.Assert.assertNotNull(days41);
        org.junit.Assert.assertNotNull(days43);
        org.junit.Assert.assertNotNull(days44);
        org.junit.Assert.assertNotNull(periodType45);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "P5D" + "'", str46, "P5D");
    }

    @Test
    public void test0385() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0385");
        org.joda.time.Days days0 = org.joda.time.Days.TWO;
        org.joda.time.Days days2 = days0.dividedBy(52);
        org.joda.time.Days days4 = days2.multipliedBy(8);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.DurationFieldType durationFieldType6 = days2.getFieldType(20);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 20");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(days0);
        org.junit.Assert.assertNotNull(days2);
        org.junit.Assert.assertNotNull(days4);
    }

    @Test
    public void test0386() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0386");
        org.joda.time.Days days1 = org.joda.time.Days.days((int) 'a');
        org.joda.time.Days days2 = org.joda.time.Days.SIX;
        org.joda.time.Days days4 = days2.plus(100);
        org.joda.time.ReadableInterval readableInterval5 = null;
        org.joda.time.Days days6 = org.joda.time.Days.daysIn(readableInterval5);
        int int8 = days6.getValue((int) (short) 0);
        org.joda.time.Days days9 = org.joda.time.Days.FIVE;
        org.joda.time.Days days10 = days6.minus(days9);
        org.joda.time.Days days11 = null;
        org.joda.time.Days days12 = days6.minus(days11);
        org.joda.time.Days days14 = days6.minus((-1));
        org.joda.time.DurationFieldType durationFieldType15 = days6.getFieldType();
        int int16 = days2.get(durationFieldType15);
        int int17 = days1.get(durationFieldType15);
        org.joda.time.Days days19 = org.joda.time.Days.days((-1));
        boolean boolean20 = days1.isGreaterThan(days19);
        org.joda.time.Days days22 = days1.dividedBy(2147483647);
        org.joda.time.Days days23 = org.joda.time.Days.THREE;
        org.joda.time.ReadableInterval readableInterval24 = null;
        org.joda.time.Days days25 = org.joda.time.Days.daysIn(readableInterval24);
        org.joda.time.ReadableInterval readableInterval26 = null;
        org.joda.time.Days days27 = org.joda.time.Days.daysIn(readableInterval26);
        int int29 = days27.getValue((int) (short) 0);
        org.joda.time.Days days30 = org.joda.time.Days.FIVE;
        org.joda.time.Days days31 = days27.minus(days30);
        org.joda.time.DurationFieldType durationFieldType32 = null;
        boolean boolean33 = days30.isSupported(durationFieldType32);
        org.joda.time.DurationFieldType durationFieldType35 = days30.getFieldType(0);
        int int36 = days25.get(durationFieldType35);
        org.joda.time.ReadableInterval readableInterval37 = null;
        org.joda.time.Days days38 = org.joda.time.Days.daysIn(readableInterval37);
        int int40 = days38.getValue((int) (short) 0);
        org.joda.time.Days days41 = org.joda.time.Days.FIVE;
        org.joda.time.Days days42 = days38.minus(days41);
        org.joda.time.DurationFieldType durationFieldType43 = null;
        int int44 = days41.get(durationFieldType43);
        org.joda.time.DurationFieldType durationFieldType45 = null;
        int int46 = days41.get(durationFieldType45);
        boolean boolean48 = days41.equals((java.lang.Object) 0L);
        boolean boolean49 = days25.isGreaterThan(days41);
        org.joda.time.ReadableInterval readableInterval50 = null;
        org.joda.time.Days days51 = org.joda.time.Days.daysIn(readableInterval50);
        int int53 = days51.getValue((int) (short) 0);
        org.joda.time.Days days54 = org.joda.time.Days.FIVE;
        org.joda.time.Days days55 = days51.minus(days54);
        org.joda.time.DurationFieldType durationFieldType56 = null;
        int int57 = days54.get(durationFieldType56);
        org.joda.time.DurationFieldType durationFieldType58 = null;
        int int59 = days54.get(durationFieldType58);
        boolean boolean61 = days54.equals((java.lang.Object) 0L);
        org.joda.time.Period period62 = days54.toPeriod();
        org.joda.time.Days days63 = days25.plus(days54);
        boolean boolean64 = days23.isGreaterThan(days63);
        org.joda.time.Days days65 = org.joda.time.Days.ZERO;
        org.joda.time.ReadableInterval readableInterval66 = null;
        org.joda.time.Days days67 = org.joda.time.Days.daysIn(readableInterval66);
        int int69 = days67.getValue((int) (short) 0);
        org.joda.time.Days days70 = org.joda.time.Days.FIVE;
        org.joda.time.Days days71 = days67.minus(days70);
        org.joda.time.Days days72 = null;
        org.joda.time.Days days73 = days67.minus(days72);
        org.joda.time.Duration duration74 = days67.toStandardDuration();
        org.joda.time.DurationFieldType durationFieldType75 = days67.getFieldType();
        org.joda.time.Days days76 = days65.minus(days67);
        org.joda.time.Days days78 = days76.plus((int) (byte) 100);
        boolean boolean79 = days23.isLessThan(days78);
        int int80 = days23.getDays();
        int int81 = days22.compareTo((org.joda.time.base.BaseSingleFieldPeriod) days23);
        org.joda.time.Days days83 = days22.dividedBy((-10));
        org.junit.Assert.assertNotNull(days1);
        org.junit.Assert.assertNotNull(days2);
        org.junit.Assert.assertNotNull(days4);
        org.junit.Assert.assertNotNull(days6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNotNull(days9);
        org.junit.Assert.assertNotNull(days10);
        org.junit.Assert.assertNotNull(days12);
        org.junit.Assert.assertNotNull(days14);
        org.junit.Assert.assertNotNull(durationFieldType15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 6 + "'", int16 == 6);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 97 + "'", int17 == 97);
        org.junit.Assert.assertNotNull(days19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(days22);
        org.junit.Assert.assertNotNull(days23);
        org.junit.Assert.assertNotNull(days25);
        org.junit.Assert.assertNotNull(days27);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertNotNull(days30);
        org.junit.Assert.assertNotNull(days31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(durationFieldType35);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertNotNull(days38);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertNotNull(days41);
        org.junit.Assert.assertNotNull(days42);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 0 + "'", int44 == 0);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 0 + "'", int46 == 0);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(days51);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 0 + "'", int53 == 0);
        org.junit.Assert.assertNotNull(days54);
        org.junit.Assert.assertNotNull(days55);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 0 + "'", int57 == 0);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 0 + "'", int59 == 0);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(period62);
        org.junit.Assert.assertNotNull(days63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(days65);
        org.junit.Assert.assertNotNull(days67);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 0 + "'", int69 == 0);
        org.junit.Assert.assertNotNull(days70);
        org.junit.Assert.assertNotNull(days71);
        org.junit.Assert.assertNotNull(days73);
        org.junit.Assert.assertNotNull(duration74);
        org.junit.Assert.assertNotNull(durationFieldType75);
        org.junit.Assert.assertNotNull(days76);
        org.junit.Assert.assertNotNull(days78);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + 3 + "'", int80 == 3);
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + (-1) + "'", int81 == (-1));
        org.junit.Assert.assertNotNull(days83);
    }

    @Test
    public void test0387() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0387");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Days days1 = org.joda.time.Days.daysIn(readableInterval0);
        org.joda.time.Days days3 = days1.plus((int) (byte) 10);
        org.joda.time.DurationFieldType durationFieldType4 = days3.getFieldType();
        org.joda.time.Days days6 = days3.plus(0);
        org.joda.time.ReadableInterval readableInterval7 = null;
        org.joda.time.Days days8 = org.joda.time.Days.daysIn(readableInterval7);
        int int10 = days8.getValue((int) (short) 0);
        org.joda.time.Days days11 = org.joda.time.Days.FIVE;
        org.joda.time.Days days12 = days8.minus(days11);
        org.joda.time.DurationFieldType durationFieldType13 = null;
        boolean boolean14 = days11.isSupported(durationFieldType13);
        org.joda.time.DurationFieldType durationFieldType16 = days11.getFieldType(0);
        org.joda.time.ReadableInterval readableInterval17 = null;
        org.joda.time.Days days18 = org.joda.time.Days.daysIn(readableInterval17);
        int int20 = days18.getValue((int) (short) 0);
        org.joda.time.Days days21 = org.joda.time.Days.FIVE;
        org.joda.time.Days days22 = days18.minus(days21);
        org.joda.time.Days days23 = null;
        org.joda.time.Days days24 = days18.minus(days23);
        org.joda.time.Days days26 = days18.minus((-1));
        org.joda.time.DurationFieldType durationFieldType27 = days18.getFieldType();
        boolean boolean28 = days11.isGreaterThan(days18);
        org.joda.time.ReadableInterval readableInterval29 = null;
        org.joda.time.Days days30 = org.joda.time.Days.daysIn(readableInterval29);
        org.joda.time.Days days32 = days30.plus((int) (byte) 10);
        org.joda.time.Days days33 = days18.plus(days32);
        int int34 = days6.compareTo((org.joda.time.base.BaseSingleFieldPeriod) days18);
        int int36 = days6.getValue((int) (byte) 0);
        org.joda.time.Days days37 = org.joda.time.Days.THREE;
        org.joda.time.ReadableInterval readableInterval38 = null;
        org.joda.time.Days days39 = org.joda.time.Days.daysIn(readableInterval38);
        org.joda.time.ReadableInterval readableInterval40 = null;
        org.joda.time.Days days41 = org.joda.time.Days.daysIn(readableInterval40);
        int int43 = days41.getValue((int) (short) 0);
        org.joda.time.Days days44 = org.joda.time.Days.FIVE;
        org.joda.time.Days days45 = days41.minus(days44);
        org.joda.time.DurationFieldType durationFieldType46 = null;
        boolean boolean47 = days44.isSupported(durationFieldType46);
        org.joda.time.DurationFieldType durationFieldType49 = days44.getFieldType(0);
        int int50 = days39.get(durationFieldType49);
        org.joda.time.ReadableInterval readableInterval51 = null;
        org.joda.time.Days days52 = org.joda.time.Days.daysIn(readableInterval51);
        int int54 = days52.getValue((int) (short) 0);
        org.joda.time.Days days55 = org.joda.time.Days.FIVE;
        org.joda.time.Days days56 = days52.minus(days55);
        org.joda.time.DurationFieldType durationFieldType57 = null;
        int int58 = days55.get(durationFieldType57);
        org.joda.time.DurationFieldType durationFieldType59 = null;
        int int60 = days55.get(durationFieldType59);
        boolean boolean62 = days55.equals((java.lang.Object) 0L);
        boolean boolean63 = days39.isGreaterThan(days55);
        org.joda.time.ReadableInterval readableInterval64 = null;
        org.joda.time.Days days65 = org.joda.time.Days.daysIn(readableInterval64);
        int int67 = days65.getValue((int) (short) 0);
        org.joda.time.Days days68 = org.joda.time.Days.FIVE;
        org.joda.time.Days days69 = days65.minus(days68);
        org.joda.time.DurationFieldType durationFieldType70 = null;
        int int71 = days68.get(durationFieldType70);
        org.joda.time.DurationFieldType durationFieldType72 = null;
        int int73 = days68.get(durationFieldType72);
        boolean boolean75 = days68.equals((java.lang.Object) 0L);
        org.joda.time.Period period76 = days68.toPeriod();
        org.joda.time.Days days77 = days39.plus(days68);
        boolean boolean78 = days37.isGreaterThan(days77);
        org.joda.time.ReadableInterval readableInterval79 = null;
        org.joda.time.Days days80 = org.joda.time.Days.daysIn(readableInterval79);
        org.joda.time.Days days82 = days80.plus((int) (byte) 10);
        org.joda.time.Days days84 = days82.dividedBy((int) 'a');
        int int85 = days77.compareTo((org.joda.time.base.BaseSingleFieldPeriod) days82);
        boolean boolean86 = days6.isLessThan(days77);
        org.joda.time.Days days88 = days6.plus((-1));
        int int89 = days88.size();
        org.junit.Assert.assertNotNull(days1);
        org.junit.Assert.assertNotNull(days3);
        org.junit.Assert.assertNotNull(durationFieldType4);
        org.junit.Assert.assertNotNull(days6);
        org.junit.Assert.assertNotNull(days8);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(days11);
        org.junit.Assert.assertNotNull(days12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(durationFieldType16);
        org.junit.Assert.assertNotNull(days18);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertNotNull(days21);
        org.junit.Assert.assertNotNull(days22);
        org.junit.Assert.assertNotNull(days24);
        org.junit.Assert.assertNotNull(days26);
        org.junit.Assert.assertNotNull(durationFieldType27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(days30);
        org.junit.Assert.assertNotNull(days32);
        org.junit.Assert.assertNotNull(days33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 1 + "'", int34 == 1);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 10 + "'", int36 == 10);
        org.junit.Assert.assertNotNull(days37);
        org.junit.Assert.assertNotNull(days39);
        org.junit.Assert.assertNotNull(days41);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0);
        org.junit.Assert.assertNotNull(days44);
        org.junit.Assert.assertNotNull(days45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(durationFieldType49);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 0 + "'", int50 == 0);
        org.junit.Assert.assertNotNull(days52);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 0 + "'", int54 == 0);
        org.junit.Assert.assertNotNull(days55);
        org.junit.Assert.assertNotNull(days56);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 0 + "'", int58 == 0);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 0 + "'", int60 == 0);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(days65);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 0 + "'", int67 == 0);
        org.junit.Assert.assertNotNull(days68);
        org.junit.Assert.assertNotNull(days69);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 0 + "'", int71 == 0);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 0 + "'", int73 == 0);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNotNull(period76);
        org.junit.Assert.assertNotNull(days77);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertNotNull(days80);
        org.junit.Assert.assertNotNull(days82);
        org.junit.Assert.assertNotNull(days84);
        org.junit.Assert.assertTrue("'" + int85 + "' != '" + (-1) + "'", int85 == (-1));
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertNotNull(days88);
        org.junit.Assert.assertTrue("'" + int89 + "' != '" + 1 + "'", int89 == 1);
    }

    @Test
    public void test0388() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0388");
        org.joda.time.Days days0 = org.joda.time.Days.MAX_VALUE;
        int int1 = days0.getDays();
        org.joda.time.Days days2 = org.joda.time.Days.standardDaysIn((org.joda.time.ReadablePeriod) days0);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Seconds seconds3 = days0.toStandardSeconds();
            org.junit.Assert.fail("Expected exception of type java.lang.ArithmeticException; message: Multiplication overflows an int: 2147483647 * 86400");
        } catch (java.lang.ArithmeticException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(days0);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 2147483647 + "'", int1 == 2147483647);
        org.junit.Assert.assertNotNull(days2);
    }

    @Test
    public void test0389() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0389");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Days days1 = org.joda.time.Days.daysIn(readableInterval0);
        int int3 = days1.getValue((int) (short) 0);
        org.joda.time.Days days4 = org.joda.time.Days.FIVE;
        org.joda.time.Days days5 = days1.minus(days4);
        org.joda.time.DurationFieldType durationFieldType6 = null;
        int int7 = days4.get(durationFieldType6);
        org.joda.time.DurationFieldType durationFieldType8 = null;
        int int9 = days4.get(durationFieldType8);
        boolean boolean11 = days4.equals((java.lang.Object) 0L);
        int int12 = days4.getDays();
        org.joda.time.Days days14 = days4.minus((int) ' ');
        java.lang.Class<?> wildcardClass15 = days14.getClass();
        org.junit.Assert.assertNotNull(days1);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(days4);
        org.junit.Assert.assertNotNull(days5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 5 + "'", int12 == 5);
        org.junit.Assert.assertNotNull(days14);
        org.junit.Assert.assertNotNull(wildcardClass15);
    }

    @Test
    public void test0390() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0390");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Days days1 = org.joda.time.Days.daysIn(readableInterval0);
        org.joda.time.Days days3 = days1.plus((int) (byte) 10);
        org.joda.time.Days days5 = days3.dividedBy((int) 'a');
        org.joda.time.Days days7 = days3.dividedBy(5);
        org.joda.time.Days days9 = days3.plus((int) (byte) -1);
        org.joda.time.Days days11 = days3.minus((int) (byte) 100);
        org.joda.time.Days days12 = days11.negated();
        int int13 = days11.size();
        org.joda.time.ReadableInterval readableInterval14 = null;
        org.joda.time.Days days15 = org.joda.time.Days.daysIn(readableInterval14);
        int int17 = days15.getValue((int) (short) 0);
        org.joda.time.Days days18 = org.joda.time.Days.FIVE;
        org.joda.time.Days days19 = days15.minus(days18);
        org.joda.time.Days days20 = null;
        org.joda.time.Days days21 = days15.minus(days20);
        org.joda.time.Duration duration22 = days15.toStandardDuration();
        org.joda.time.DurationFieldType durationFieldType23 = days15.getFieldType();
        org.joda.time.Days days24 = days11.minus(days15);
        org.joda.time.ReadableInterval readableInterval25 = null;
        org.joda.time.Days days26 = org.joda.time.Days.daysIn(readableInterval25);
        org.joda.time.Days days28 = days26.plus((int) (byte) 10);
        int int29 = days28.getDays();
        int int30 = days28.getDays();
        boolean boolean31 = days15.equals((java.lang.Object) days28);
        org.joda.time.Days days33 = days15.dividedBy(8);
        org.joda.time.Days days34 = org.joda.time.Days.SIX;
        org.joda.time.Days days36 = days34.plus(100);
        org.joda.time.ReadableInterval readableInterval37 = null;
        org.joda.time.Days days38 = org.joda.time.Days.daysIn(readableInterval37);
        int int40 = days38.getValue((int) (short) 0);
        org.joda.time.Days days41 = org.joda.time.Days.FIVE;
        org.joda.time.Days days42 = days38.minus(days41);
        org.joda.time.Days days43 = null;
        org.joda.time.Days days44 = days38.minus(days43);
        org.joda.time.Days days46 = days38.minus((-1));
        org.joda.time.DurationFieldType durationFieldType47 = days38.getFieldType();
        int int48 = days34.get(durationFieldType47);
        org.joda.time.ReadableInterval readableInterval49 = null;
        org.joda.time.Days days50 = org.joda.time.Days.daysIn(readableInterval49);
        int int52 = days50.getValue((int) (short) 0);
        org.joda.time.Days days53 = org.joda.time.Days.FIVE;
        org.joda.time.Days days54 = days50.minus(days53);
        org.joda.time.Days days55 = null;
        org.joda.time.Days days56 = days50.minus(days55);
        org.joda.time.Days days58 = days50.minus((-1));
        org.joda.time.DurationFieldType durationFieldType59 = days50.getFieldType();
        org.joda.time.ReadableInterval readableInterval60 = null;
        org.joda.time.Days days61 = org.joda.time.Days.daysIn(readableInterval60);
        org.joda.time.Days days63 = days61.plus((int) (byte) 10);
        org.joda.time.Days days65 = days63.dividedBy((int) 'a');
        org.joda.time.Days days67 = days63.plus((int) ' ');
        org.joda.time.Days days68 = org.joda.time.Days.standardDaysIn((org.joda.time.ReadablePeriod) days67);
        int int69 = days68.size();
        boolean boolean70 = days50.isGreaterThan(days68);
        org.joda.time.Days days71 = days34.minus(days50);
        org.joda.time.ReadableInterval readableInterval72 = null;
        org.joda.time.Days days73 = org.joda.time.Days.daysIn(readableInterval72);
        org.joda.time.Days days75 = days73.plus((int) (byte) 10);
        org.joda.time.Days days77 = days75.dividedBy((int) 'a');
        org.joda.time.Days days79 = days75.dividedBy(5);
        boolean boolean80 = days50.equals((java.lang.Object) days75);
        org.joda.time.Days days81 = days15.minus(days50);
        org.joda.time.MutablePeriod mutablePeriod82 = days15.toMutablePeriod();
        org.junit.Assert.assertNotNull(days1);
        org.junit.Assert.assertNotNull(days3);
        org.junit.Assert.assertNotNull(days5);
        org.junit.Assert.assertNotNull(days7);
        org.junit.Assert.assertNotNull(days9);
        org.junit.Assert.assertNotNull(days11);
        org.junit.Assert.assertNotNull(days12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertNotNull(days15);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNotNull(days18);
        org.junit.Assert.assertNotNull(days19);
        org.junit.Assert.assertNotNull(days21);
        org.junit.Assert.assertNotNull(duration22);
        org.junit.Assert.assertNotNull(durationFieldType23);
        org.junit.Assert.assertNotNull(days24);
        org.junit.Assert.assertNotNull(days26);
        org.junit.Assert.assertNotNull(days28);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 10 + "'", int29 == 10);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 10 + "'", int30 == 10);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(days33);
        org.junit.Assert.assertNotNull(days34);
        org.junit.Assert.assertNotNull(days36);
        org.junit.Assert.assertNotNull(days38);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertNotNull(days41);
        org.junit.Assert.assertNotNull(days42);
        org.junit.Assert.assertNotNull(days44);
        org.junit.Assert.assertNotNull(days46);
        org.junit.Assert.assertNotNull(durationFieldType47);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 6 + "'", int48 == 6);
        org.junit.Assert.assertNotNull(days50);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 0 + "'", int52 == 0);
        org.junit.Assert.assertNotNull(days53);
        org.junit.Assert.assertNotNull(days54);
        org.junit.Assert.assertNotNull(days56);
        org.junit.Assert.assertNotNull(days58);
        org.junit.Assert.assertNotNull(durationFieldType59);
        org.junit.Assert.assertNotNull(days61);
        org.junit.Assert.assertNotNull(days63);
        org.junit.Assert.assertNotNull(days65);
        org.junit.Assert.assertNotNull(days67);
        org.junit.Assert.assertNotNull(days68);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 1 + "'", int69 == 1);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(days71);
        org.junit.Assert.assertNotNull(days73);
        org.junit.Assert.assertNotNull(days75);
        org.junit.Assert.assertNotNull(days77);
        org.junit.Assert.assertNotNull(days79);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertNotNull(days81);
        org.junit.Assert.assertNotNull(mutablePeriod82);
    }

    @Test
    public void test0391() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0391");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Days days1 = org.joda.time.Days.daysIn(readableInterval0);
        int int3 = days1.getValue((int) (short) 0);
        org.joda.time.Days days4 = org.joda.time.Days.FIVE;
        org.joda.time.Days days5 = days1.minus(days4);
        org.joda.time.Days days6 = org.joda.time.Days.SIX;
        org.joda.time.Days days8 = days6.plus(100);
        org.joda.time.Days days10 = days6.plus((int) (byte) 1);
        org.joda.time.ReadableInterval readableInterval11 = null;
        org.joda.time.Days days12 = org.joda.time.Days.daysIn(readableInterval11);
        org.joda.time.Days days14 = days12.plus((int) (byte) 10);
        org.joda.time.DurationFieldType durationFieldType15 = days14.getFieldType();
        org.joda.time.Days days17 = days14.plus(0);
        org.joda.time.ReadableInterval readableInterval18 = null;
        org.joda.time.Days days19 = org.joda.time.Days.daysIn(readableInterval18);
        int int21 = days19.getValue((int) (short) 0);
        org.joda.time.Days days22 = org.joda.time.Days.FIVE;
        org.joda.time.Days days23 = days19.minus(days22);
        org.joda.time.DurationFieldType durationFieldType24 = null;
        boolean boolean25 = days22.isSupported(durationFieldType24);
        org.joda.time.DurationFieldType durationFieldType27 = days22.getFieldType(0);
        org.joda.time.ReadableInterval readableInterval28 = null;
        org.joda.time.Days days29 = org.joda.time.Days.daysIn(readableInterval28);
        int int31 = days29.getValue((int) (short) 0);
        org.joda.time.Days days32 = org.joda.time.Days.FIVE;
        org.joda.time.Days days33 = days29.minus(days32);
        org.joda.time.Days days34 = null;
        org.joda.time.Days days35 = days29.minus(days34);
        org.joda.time.Days days37 = days29.minus((-1));
        org.joda.time.DurationFieldType durationFieldType38 = days29.getFieldType();
        boolean boolean39 = days22.isGreaterThan(days29);
        org.joda.time.ReadableInterval readableInterval40 = null;
        org.joda.time.Days days41 = org.joda.time.Days.daysIn(readableInterval40);
        org.joda.time.Days days43 = days41.plus((int) (byte) 10);
        org.joda.time.Days days44 = days29.plus(days43);
        int int45 = days17.compareTo((org.joda.time.base.BaseSingleFieldPeriod) days29);
        int int46 = days6.compareTo((org.joda.time.base.BaseSingleFieldPeriod) days29);
        org.joda.time.ReadableInterval readableInterval47 = null;
        org.joda.time.Days days48 = org.joda.time.Days.daysIn(readableInterval47);
        int int50 = days48.getValue((int) (short) 0);
        org.joda.time.Days days51 = org.joda.time.Days.FIVE;
        org.joda.time.Days days52 = days48.minus(days51);
        org.joda.time.DurationFieldType durationFieldType53 = null;
        boolean boolean54 = days51.isSupported(durationFieldType53);
        org.joda.time.DurationFieldType durationFieldType56 = days51.getFieldType(0);
        org.joda.time.ReadableInterval readableInterval57 = null;
        org.joda.time.Days days58 = org.joda.time.Days.daysIn(readableInterval57);
        int int60 = days58.getValue((int) (short) 0);
        org.joda.time.Days days61 = org.joda.time.Days.FIVE;
        org.joda.time.Days days62 = days58.minus(days61);
        org.joda.time.Days days63 = null;
        org.joda.time.Days days64 = days58.minus(days63);
        org.joda.time.Days days66 = days58.minus((-1));
        org.joda.time.DurationFieldType durationFieldType67 = days58.getFieldType();
        boolean boolean68 = days51.isGreaterThan(days58);
        org.joda.time.ReadableInterval readableInterval69 = null;
        org.joda.time.Days days70 = org.joda.time.Days.daysIn(readableInterval69);
        org.joda.time.Days days72 = days70.plus((int) (byte) 10);
        org.joda.time.Days days73 = days58.plus(days72);
        org.joda.time.ReadableInterval readableInterval74 = null;
        org.joda.time.Days days75 = org.joda.time.Days.daysIn(readableInterval74);
        int int77 = days75.getValue((int) (short) 0);
        org.joda.time.Days days78 = org.joda.time.Days.FIVE;
        org.joda.time.Days days79 = days75.minus(days78);
        org.joda.time.Days days80 = null;
        org.joda.time.Days days81 = days75.minus(days80);
        org.joda.time.Duration duration82 = days75.toStandardDuration();
        org.joda.time.Days days83 = days73.minus(days75);
        org.joda.time.Days days85 = days75.multipliedBy(5);
        org.joda.time.Days days86 = days85.negated();
        org.joda.time.Days days87 = days6.minus(days85);
        boolean boolean88 = days4.isLessThan(days87);
        // The following exception was thrown during execution in test generation
        try {
            int int90 = days4.getValue((int) (short) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 100");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(days1);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(days4);
        org.junit.Assert.assertNotNull(days5);
        org.junit.Assert.assertNotNull(days6);
        org.junit.Assert.assertNotNull(days8);
        org.junit.Assert.assertNotNull(days10);
        org.junit.Assert.assertNotNull(days12);
        org.junit.Assert.assertNotNull(days14);
        org.junit.Assert.assertNotNull(durationFieldType15);
        org.junit.Assert.assertNotNull(days17);
        org.junit.Assert.assertNotNull(days19);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertNotNull(days22);
        org.junit.Assert.assertNotNull(days23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(durationFieldType27);
        org.junit.Assert.assertNotNull(days29);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertNotNull(days32);
        org.junit.Assert.assertNotNull(days33);
        org.junit.Assert.assertNotNull(days35);
        org.junit.Assert.assertNotNull(days37);
        org.junit.Assert.assertNotNull(durationFieldType38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(days41);
        org.junit.Assert.assertNotNull(days43);
        org.junit.Assert.assertNotNull(days44);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 1 + "'", int45 == 1);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 1 + "'", int46 == 1);
        org.junit.Assert.assertNotNull(days48);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 0 + "'", int50 == 0);
        org.junit.Assert.assertNotNull(days51);
        org.junit.Assert.assertNotNull(days52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(durationFieldType56);
        org.junit.Assert.assertNotNull(days58);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 0 + "'", int60 == 0);
        org.junit.Assert.assertNotNull(days61);
        org.junit.Assert.assertNotNull(days62);
        org.junit.Assert.assertNotNull(days64);
        org.junit.Assert.assertNotNull(days66);
        org.junit.Assert.assertNotNull(durationFieldType67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertNotNull(days70);
        org.junit.Assert.assertNotNull(days72);
        org.junit.Assert.assertNotNull(days73);
        org.junit.Assert.assertNotNull(days75);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 0 + "'", int77 == 0);
        org.junit.Assert.assertNotNull(days78);
        org.junit.Assert.assertNotNull(days79);
        org.junit.Assert.assertNotNull(days81);
        org.junit.Assert.assertNotNull(duration82);
        org.junit.Assert.assertNotNull(days83);
        org.junit.Assert.assertNotNull(days85);
        org.junit.Assert.assertNotNull(days86);
        org.junit.Assert.assertNotNull(days87);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + true + "'", boolean88 == true);
    }

    @Test
    public void test0392() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0392");
        org.joda.time.Days days0 = org.joda.time.Days.MAX_VALUE;
        org.joda.time.Days days1 = days0.negated();
        org.joda.time.PeriodType periodType2 = days0.getPeriodType();
        org.joda.time.ReadableInterval readableInterval3 = null;
        org.joda.time.Days days4 = org.joda.time.Days.daysIn(readableInterval3);
        org.joda.time.Days days6 = days4.plus((int) (byte) 10);
        org.joda.time.MutablePeriod mutablePeriod7 = days4.toMutablePeriod();
        org.joda.time.Days days9 = days4.plus((int) (short) -1);
        org.joda.time.ReadableInterval readableInterval10 = null;
        org.joda.time.Days days11 = org.joda.time.Days.daysIn(readableInterval10);
        int int13 = days11.getValue((int) (short) 0);
        org.joda.time.Days days14 = org.joda.time.Days.FIVE;
        org.joda.time.Days days15 = days11.minus(days14);
        org.joda.time.Days days16 = null;
        org.joda.time.Days days17 = days11.minus(days16);
        org.joda.time.Days days19 = days11.minus((-1));
        int int20 = days11.size();
        boolean boolean21 = days4.isGreaterThan(days11);
        org.joda.time.DurationFieldType durationFieldType23 = days11.getFieldType((int) (short) 0);
        boolean boolean24 = days0.isSupported(durationFieldType23);
        org.junit.Assert.assertNotNull(days0);
        org.junit.Assert.assertNotNull(days1);
        org.junit.Assert.assertNotNull(periodType2);
        org.junit.Assert.assertNotNull(days4);
        org.junit.Assert.assertNotNull(days6);
        org.junit.Assert.assertNotNull(mutablePeriod7);
        org.junit.Assert.assertNotNull(days9);
        org.junit.Assert.assertNotNull(days11);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(days14);
        org.junit.Assert.assertNotNull(days15);
        org.junit.Assert.assertNotNull(days17);
        org.junit.Assert.assertNotNull(days19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 1 + "'", int20 == 1);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(durationFieldType23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
    }

    @Test
    public void test0393() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0393");
        org.joda.time.Days days0 = org.joda.time.Days.SEVEN;
        org.joda.time.Days days2 = days0.plus(1);
        org.joda.time.ReadableInterval readableInterval3 = null;
        org.joda.time.Days days4 = org.joda.time.Days.daysIn(readableInterval3);
        int int6 = days4.getValue((int) (short) 0);
        org.joda.time.Days days7 = org.joda.time.Days.FIVE;
        org.joda.time.Days days8 = days4.minus(days7);
        org.joda.time.Days days9 = null;
        org.joda.time.Days days10 = days4.minus(days9);
        org.joda.time.Days days12 = days4.minus((-1));
        int int13 = days4.size();
        boolean boolean14 = days2.equals((java.lang.Object) days4);
        org.junit.Assert.assertNotNull(days0);
        org.junit.Assert.assertNotNull(days2);
        org.junit.Assert.assertNotNull(days4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNotNull(days7);
        org.junit.Assert.assertNotNull(days8);
        org.junit.Assert.assertNotNull(days10);
        org.junit.Assert.assertNotNull(days12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
    }

    @Test
    public void test0394() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0394");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Days days1 = org.joda.time.Days.daysIn(readableInterval0);
        org.joda.time.Days days3 = days1.plus((int) (byte) 10);
        org.joda.time.Days days5 = days3.dividedBy((int) 'a');
        org.joda.time.Days days7 = days3.dividedBy(5);
        org.joda.time.Days days9 = days3.plus((int) (byte) -1);
        org.joda.time.Days days11 = days3.minus((int) (byte) 100);
        org.joda.time.Days days12 = org.joda.time.Days.standardDaysIn((org.joda.time.ReadablePeriod) days3);
        org.joda.time.Days days13 = org.joda.time.Days.THREE;
        org.joda.time.ReadableInterval readableInterval14 = null;
        org.joda.time.Days days15 = org.joda.time.Days.daysIn(readableInterval14);
        org.joda.time.ReadableInterval readableInterval16 = null;
        org.joda.time.Days days17 = org.joda.time.Days.daysIn(readableInterval16);
        int int19 = days17.getValue((int) (short) 0);
        org.joda.time.Days days20 = org.joda.time.Days.FIVE;
        org.joda.time.Days days21 = days17.minus(days20);
        org.joda.time.DurationFieldType durationFieldType22 = null;
        boolean boolean23 = days20.isSupported(durationFieldType22);
        org.joda.time.DurationFieldType durationFieldType25 = days20.getFieldType(0);
        int int26 = days15.get(durationFieldType25);
        org.joda.time.ReadableInterval readableInterval27 = null;
        org.joda.time.Days days28 = org.joda.time.Days.daysIn(readableInterval27);
        int int30 = days28.getValue((int) (short) 0);
        org.joda.time.Days days31 = org.joda.time.Days.FIVE;
        org.joda.time.Days days32 = days28.minus(days31);
        org.joda.time.DurationFieldType durationFieldType33 = null;
        int int34 = days31.get(durationFieldType33);
        org.joda.time.DurationFieldType durationFieldType35 = null;
        int int36 = days31.get(durationFieldType35);
        boolean boolean38 = days31.equals((java.lang.Object) 0L);
        boolean boolean39 = days15.isGreaterThan(days31);
        org.joda.time.ReadableInterval readableInterval40 = null;
        org.joda.time.Days days41 = org.joda.time.Days.daysIn(readableInterval40);
        int int43 = days41.getValue((int) (short) 0);
        org.joda.time.Days days44 = org.joda.time.Days.FIVE;
        org.joda.time.Days days45 = days41.minus(days44);
        org.joda.time.DurationFieldType durationFieldType46 = null;
        int int47 = days44.get(durationFieldType46);
        org.joda.time.DurationFieldType durationFieldType48 = null;
        int int49 = days44.get(durationFieldType48);
        boolean boolean51 = days44.equals((java.lang.Object) 0L);
        org.joda.time.Period period52 = days44.toPeriod();
        org.joda.time.Days days53 = days15.plus(days44);
        boolean boolean54 = days13.isGreaterThan(days53);
        org.joda.time.ReadableInterval readableInterval55 = null;
        org.joda.time.Days days56 = org.joda.time.Days.daysIn(readableInterval55);
        org.joda.time.Days days58 = days56.plus((int) (byte) 10);
        org.joda.time.Days days60 = days58.dividedBy((int) 'a');
        int int61 = days53.compareTo((org.joda.time.base.BaseSingleFieldPeriod) days58);
        org.joda.time.Days days63 = days58.dividedBy((int) ' ');
        org.joda.time.ReadableInterval readableInterval64 = null;
        org.joda.time.Days days65 = org.joda.time.Days.daysIn(readableInterval64);
        int int67 = days65.getValue((int) (short) 0);
        org.joda.time.Days days68 = org.joda.time.Days.FIVE;
        org.joda.time.Days days69 = days65.minus(days68);
        org.joda.time.DurationFieldType durationFieldType70 = null;
        int int71 = days68.get(durationFieldType70);
        org.joda.time.DurationFieldType durationFieldType72 = null;
        int int73 = days68.get(durationFieldType72);
        boolean boolean75 = days68.equals((java.lang.Object) false);
        int int76 = days68.getDays();
        org.joda.time.Days days77 = days63.minus(days68);
        boolean boolean78 = days12.isGreaterThan(days68);
        org.joda.time.Days days79 = null;
        org.joda.time.Days days80 = days68.plus(days79);
        org.junit.Assert.assertNotNull(days1);
        org.junit.Assert.assertNotNull(days3);
        org.junit.Assert.assertNotNull(days5);
        org.junit.Assert.assertNotNull(days7);
        org.junit.Assert.assertNotNull(days9);
        org.junit.Assert.assertNotNull(days11);
        org.junit.Assert.assertNotNull(days12);
        org.junit.Assert.assertNotNull(days13);
        org.junit.Assert.assertNotNull(days15);
        org.junit.Assert.assertNotNull(days17);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertNotNull(days20);
        org.junit.Assert.assertNotNull(days21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(durationFieldType25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertNotNull(days28);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertNotNull(days31);
        org.junit.Assert.assertNotNull(days32);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(days41);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0);
        org.junit.Assert.assertNotNull(days44);
        org.junit.Assert.assertNotNull(days45);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 0 + "'", int47 == 0);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 0 + "'", int49 == 0);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(period52);
        org.junit.Assert.assertNotNull(days53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(days56);
        org.junit.Assert.assertNotNull(days58);
        org.junit.Assert.assertNotNull(days60);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + (-1) + "'", int61 == (-1));
        org.junit.Assert.assertNotNull(days63);
        org.junit.Assert.assertNotNull(days65);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 0 + "'", int67 == 0);
        org.junit.Assert.assertNotNull(days68);
        org.junit.Assert.assertNotNull(days69);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 0 + "'", int71 == 0);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 0 + "'", int73 == 0);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + 5 + "'", int76 == 5);
        org.junit.Assert.assertNotNull(days77);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertNotNull(days80);
    }

    @Test
    public void test0395() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0395");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Days days1 = org.joda.time.Days.daysIn(readableInterval0);
        org.joda.time.Days days3 = days1.plus((int) (byte) 10);
        org.joda.time.Days days5 = days3.dividedBy((int) 'a');
        org.joda.time.ReadableInterval readableInterval6 = null;
        org.joda.time.Days days7 = org.joda.time.Days.daysIn(readableInterval6);
        int int9 = days7.getValue((int) (short) 0);
        org.joda.time.Days days10 = org.joda.time.Days.FIVE;
        org.joda.time.Days days11 = days7.minus(days10);
        org.joda.time.DurationFieldType durationFieldType12 = null;
        boolean boolean13 = days10.isSupported(durationFieldType12);
        org.joda.time.DurationFieldType durationFieldType15 = days10.getFieldType(0);
        org.joda.time.Period period16 = days10.toPeriod();
        int int18 = days10.getValue(0);
        int int19 = days10.getDays();
        org.joda.time.Days days21 = days10.multipliedBy(10);
        boolean boolean22 = days3.equals((java.lang.Object) days10);
        org.joda.time.ReadableInterval readableInterval23 = null;
        org.joda.time.Days days24 = org.joda.time.Days.daysIn(readableInterval23);
        org.joda.time.Days days26 = days24.plus((int) (byte) 10);
        org.joda.time.Days days28 = days26.dividedBy((int) 'a');
        org.joda.time.DurationFieldType durationFieldType29 = days28.getFieldType();
        int int30 = days10.get(durationFieldType29);
        org.joda.time.ReadableInterval readableInterval31 = null;
        org.joda.time.Days days32 = org.joda.time.Days.daysIn(readableInterval31);
        int int34 = days32.getValue((int) (short) 0);
        org.joda.time.Days days35 = org.joda.time.Days.FIVE;
        org.joda.time.Days days36 = days32.minus(days35);
        org.joda.time.Days days37 = null;
        org.joda.time.Days days38 = days32.minus(days37);
        org.joda.time.Days days40 = days38.minus(100);
        org.joda.time.Days days41 = org.joda.time.Days.standardDaysIn((org.joda.time.ReadablePeriod) days40);
        org.joda.time.Days days43 = days40.multipliedBy(0);
        org.joda.time.Days days45 = days40.dividedBy((int) '4');
        boolean boolean46 = days10.isLessThan(days45);
        org.junit.Assert.assertNotNull(days1);
        org.junit.Assert.assertNotNull(days3);
        org.junit.Assert.assertNotNull(days5);
        org.junit.Assert.assertNotNull(days7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNotNull(days10);
        org.junit.Assert.assertNotNull(days11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(durationFieldType15);
        org.junit.Assert.assertNotNull(period16);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 5 + "'", int18 == 5);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 5 + "'", int19 == 5);
        org.junit.Assert.assertNotNull(days21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(days24);
        org.junit.Assert.assertNotNull(days26);
        org.junit.Assert.assertNotNull(days28);
        org.junit.Assert.assertNotNull(durationFieldType29);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 5 + "'", int30 == 5);
        org.junit.Assert.assertNotNull(days32);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertNotNull(days35);
        org.junit.Assert.assertNotNull(days36);
        org.junit.Assert.assertNotNull(days38);
        org.junit.Assert.assertNotNull(days40);
        org.junit.Assert.assertNotNull(days41);
        org.junit.Assert.assertNotNull(days43);
        org.junit.Assert.assertNotNull(days45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
    }

    @Test
    public void test0396() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0396");
        org.joda.time.Days days0 = org.joda.time.Days.ZERO;
        org.joda.time.ReadableInterval readableInterval1 = null;
        org.joda.time.Days days2 = org.joda.time.Days.daysIn(readableInterval1);
        int int4 = days2.getValue((int) (short) 0);
        org.joda.time.Days days5 = org.joda.time.Days.FIVE;
        org.joda.time.Days days6 = days2.minus(days5);
        org.joda.time.Days days7 = null;
        org.joda.time.Days days8 = days2.minus(days7);
        org.joda.time.Duration duration9 = days2.toStandardDuration();
        org.joda.time.DurationFieldType durationFieldType10 = days2.getFieldType();
        org.joda.time.Days days11 = days0.minus(days2);
        int int12 = days11.getDays();
        org.joda.time.ReadableInterval readableInterval13 = null;
        org.joda.time.Days days14 = org.joda.time.Days.daysIn(readableInterval13);
        org.joda.time.ReadableInterval readableInterval15 = null;
        org.joda.time.Days days16 = org.joda.time.Days.daysIn(readableInterval15);
        int int18 = days16.getValue((int) (short) 0);
        org.joda.time.Days days19 = org.joda.time.Days.FIVE;
        org.joda.time.Days days20 = days16.minus(days19);
        org.joda.time.DurationFieldType durationFieldType21 = null;
        boolean boolean22 = days19.isSupported(durationFieldType21);
        org.joda.time.DurationFieldType durationFieldType24 = days19.getFieldType(0);
        int int25 = days14.get(durationFieldType24);
        org.joda.time.PeriodType periodType26 = days14.getPeriodType();
        org.joda.time.Days days28 = days14.multipliedBy((int) (short) -1);
        org.joda.time.MutablePeriod mutablePeriod29 = days14.toMutablePeriod();
        org.joda.time.Days days30 = days11.minus(days14);
        org.joda.time.ReadableInterval readableInterval31 = null;
        org.joda.time.Days days32 = org.joda.time.Days.daysIn(readableInterval31);
        int int34 = days32.getValue((int) (short) 0);
        org.joda.time.ReadableInterval readableInterval35 = null;
        org.joda.time.Days days36 = org.joda.time.Days.daysIn(readableInterval35);
        int int38 = days36.getValue((int) (short) 0);
        org.joda.time.Days days39 = org.joda.time.Days.FIVE;
        org.joda.time.Days days40 = days36.minus(days39);
        int int41 = days32.compareTo((org.joda.time.base.BaseSingleFieldPeriod) days39);
        java.lang.String str42 = days32.toString();
        org.joda.time.Days days43 = null;
        boolean boolean44 = days32.isGreaterThan(days43);
        org.joda.time.Period period45 = days32.toPeriod();
        org.joda.time.MutablePeriod mutablePeriod46 = days32.toMutablePeriod();
        boolean boolean47 = days11.isGreaterThan(days32);
        org.joda.time.DurationFieldType durationFieldType48 = days11.getFieldType();
        org.junit.Assert.assertNotNull(days0);
        org.junit.Assert.assertNotNull(days2);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(days5);
        org.junit.Assert.assertNotNull(days6);
        org.junit.Assert.assertNotNull(days8);
        org.junit.Assert.assertNotNull(duration9);
        org.junit.Assert.assertNotNull(durationFieldType10);
        org.junit.Assert.assertNotNull(days11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNotNull(days14);
        org.junit.Assert.assertNotNull(days16);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNotNull(days19);
        org.junit.Assert.assertNotNull(days20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(durationFieldType24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertNotNull(periodType26);
        org.junit.Assert.assertNotNull(days28);
        org.junit.Assert.assertNotNull(mutablePeriod29);
        org.junit.Assert.assertNotNull(days30);
        org.junit.Assert.assertNotNull(days32);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertNotNull(days36);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 0 + "'", int38 == 0);
        org.junit.Assert.assertNotNull(days39);
        org.junit.Assert.assertNotNull(days40);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + (-1) + "'", int41 == (-1));
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "P0D" + "'", str42, "P0D");
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(period45);
        org.junit.Assert.assertNotNull(mutablePeriod46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(durationFieldType48);
    }

    @Test
    public void test0397() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0397");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Days days1 = org.joda.time.Days.daysIn(readableInterval0);
        int int3 = days1.getValue((int) (short) 0);
        org.joda.time.ReadableInterval readableInterval4 = null;
        org.joda.time.Days days5 = org.joda.time.Days.daysIn(readableInterval4);
        int int7 = days5.getValue((int) (short) 0);
        org.joda.time.Days days8 = org.joda.time.Days.FIVE;
        org.joda.time.Days days9 = days5.minus(days8);
        int int10 = days1.compareTo((org.joda.time.base.BaseSingleFieldPeriod) days8);
        org.joda.time.DurationFieldType durationFieldType11 = days8.getFieldType();
        org.joda.time.ReadableInterval readableInterval12 = null;
        org.joda.time.Days days13 = org.joda.time.Days.daysIn(readableInterval12);
        int int15 = days13.getValue((int) (short) 0);
        org.joda.time.Days days16 = org.joda.time.Days.FIVE;
        org.joda.time.Days days17 = days13.minus(days16);
        org.joda.time.DurationFieldType durationFieldType18 = null;
        boolean boolean19 = days16.isSupported(durationFieldType18);
        org.joda.time.DurationFieldType durationFieldType21 = days16.getFieldType(0);
        org.joda.time.ReadableInterval readableInterval22 = null;
        org.joda.time.Days days23 = org.joda.time.Days.daysIn(readableInterval22);
        int int25 = days23.getValue((int) (short) 0);
        org.joda.time.Days days26 = org.joda.time.Days.FIVE;
        org.joda.time.Days days27 = days23.minus(days26);
        org.joda.time.Days days28 = null;
        org.joda.time.Days days29 = days23.minus(days28);
        org.joda.time.Days days31 = days23.minus((-1));
        org.joda.time.DurationFieldType durationFieldType32 = days23.getFieldType();
        boolean boolean33 = days16.isGreaterThan(days23);
        org.joda.time.ReadableInterval readableInterval34 = null;
        org.joda.time.Days days35 = org.joda.time.Days.daysIn(readableInterval34);
        org.joda.time.Days days37 = days35.plus((int) (byte) 10);
        org.joda.time.Days days38 = days23.plus(days37);
        org.joda.time.Days days39 = org.joda.time.Days.standardDaysIn((org.joda.time.ReadablePeriod) days23);
        boolean boolean40 = days8.isLessThan(days39);
        org.joda.time.Days days42 = days8.minus(0);
        org.joda.time.Period period43 = days42.toPeriod();
        org.junit.Assert.assertNotNull(days1);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(days5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(days8);
        org.junit.Assert.assertNotNull(days9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertNotNull(durationFieldType11);
        org.junit.Assert.assertNotNull(days13);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNotNull(days16);
        org.junit.Assert.assertNotNull(days17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(durationFieldType21);
        org.junit.Assert.assertNotNull(days23);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertNotNull(days26);
        org.junit.Assert.assertNotNull(days27);
        org.junit.Assert.assertNotNull(days29);
        org.junit.Assert.assertNotNull(days31);
        org.junit.Assert.assertNotNull(durationFieldType32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(days35);
        org.junit.Assert.assertNotNull(days37);
        org.junit.Assert.assertNotNull(days38);
        org.junit.Assert.assertNotNull(days39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(days42);
        org.junit.Assert.assertNotNull(period43);
    }

    @Test
    public void test0398() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0398");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Days days1 = org.joda.time.Days.daysIn(readableInterval0);
        int int3 = days1.getValue((int) (short) 0);
        org.joda.time.Days days4 = org.joda.time.Days.FIVE;
        org.joda.time.Days days5 = days1.minus(days4);
        org.joda.time.Days days6 = null;
        org.joda.time.Days days7 = days1.minus(days6);
        org.joda.time.ReadableInterval readableInterval8 = null;
        org.joda.time.Days days9 = org.joda.time.Days.daysIn(readableInterval8);
        int int11 = days9.getValue((int) (short) 0);
        org.joda.time.Days days12 = org.joda.time.Days.FIVE;
        org.joda.time.Days days13 = days9.minus(days12);
        org.joda.time.DurationFieldType durationFieldType14 = null;
        int int15 = days12.get(durationFieldType14);
        org.joda.time.DurationFieldType durationFieldType16 = null;
        int int17 = days12.get(durationFieldType16);
        boolean boolean19 = days12.equals((java.lang.Object) 0L);
        int int20 = days1.compareTo((org.joda.time.base.BaseSingleFieldPeriod) days12);
        org.joda.time.Days days22 = days1.minus(52);
        int int23 = days1.getDays();
        java.lang.String str24 = days1.toString();
        org.junit.Assert.assertNotNull(days1);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(days4);
        org.junit.Assert.assertNotNull(days5);
        org.junit.Assert.assertNotNull(days7);
        org.junit.Assert.assertNotNull(days9);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNotNull(days12);
        org.junit.Assert.assertNotNull(days13);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
        org.junit.Assert.assertNotNull(days22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "P0D" + "'", str24, "P0D");
    }

    @Test
    public void test0399() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0399");
        org.joda.time.Days days1 = org.joda.time.Days.parseDays("P485D");
        org.joda.time.ReadableInterval readableInterval2 = null;
        org.joda.time.Days days3 = org.joda.time.Days.daysIn(readableInterval2);
        int int5 = days3.getValue((int) (short) 0);
        org.joda.time.Days days6 = org.joda.time.Days.FIVE;
        org.joda.time.Days days7 = days3.minus(days6);
        org.joda.time.Days days9 = days3.plus((int) (byte) 0);
        boolean boolean10 = days1.isGreaterThan(days3);
        org.joda.time.Period period11 = days3.toPeriod();
        org.junit.Assert.assertNotNull(days1);
        org.junit.Assert.assertNotNull(days3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(days6);
        org.junit.Assert.assertNotNull(days7);
        org.junit.Assert.assertNotNull(days9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(period11);
    }

    @Test
    public void test0400() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0400");
        org.joda.time.Days days0 = org.joda.time.Days.THREE;
        org.joda.time.ReadableInterval readableInterval1 = null;
        org.joda.time.Days days2 = org.joda.time.Days.daysIn(readableInterval1);
        org.joda.time.ReadableInterval readableInterval3 = null;
        org.joda.time.Days days4 = org.joda.time.Days.daysIn(readableInterval3);
        int int6 = days4.getValue((int) (short) 0);
        org.joda.time.Days days7 = org.joda.time.Days.FIVE;
        org.joda.time.Days days8 = days4.minus(days7);
        org.joda.time.DurationFieldType durationFieldType9 = null;
        boolean boolean10 = days7.isSupported(durationFieldType9);
        org.joda.time.DurationFieldType durationFieldType12 = days7.getFieldType(0);
        int int13 = days2.get(durationFieldType12);
        org.joda.time.ReadableInterval readableInterval14 = null;
        org.joda.time.Days days15 = org.joda.time.Days.daysIn(readableInterval14);
        int int17 = days15.getValue((int) (short) 0);
        org.joda.time.Days days18 = org.joda.time.Days.FIVE;
        org.joda.time.Days days19 = days15.minus(days18);
        org.joda.time.DurationFieldType durationFieldType20 = null;
        int int21 = days18.get(durationFieldType20);
        org.joda.time.DurationFieldType durationFieldType22 = null;
        int int23 = days18.get(durationFieldType22);
        boolean boolean25 = days18.equals((java.lang.Object) 0L);
        boolean boolean26 = days2.isGreaterThan(days18);
        org.joda.time.ReadableInterval readableInterval27 = null;
        org.joda.time.Days days28 = org.joda.time.Days.daysIn(readableInterval27);
        int int30 = days28.getValue((int) (short) 0);
        org.joda.time.Days days31 = org.joda.time.Days.FIVE;
        org.joda.time.Days days32 = days28.minus(days31);
        org.joda.time.DurationFieldType durationFieldType33 = null;
        int int34 = days31.get(durationFieldType33);
        org.joda.time.DurationFieldType durationFieldType35 = null;
        int int36 = days31.get(durationFieldType35);
        boolean boolean38 = days31.equals((java.lang.Object) 0L);
        org.joda.time.Period period39 = days31.toPeriod();
        org.joda.time.Days days40 = days2.plus(days31);
        boolean boolean41 = days0.isGreaterThan(days40);
        org.joda.time.Days days43 = days40.dividedBy(42);
        org.joda.time.PeriodType periodType44 = days40.getPeriodType();
        org.joda.time.ReadableInterval readableInterval45 = null;
        org.joda.time.Days days46 = org.joda.time.Days.daysIn(readableInterval45);
        org.joda.time.Days days48 = days46.plus((int) (byte) 10);
        org.joda.time.MutablePeriod mutablePeriod49 = days46.toMutablePeriod();
        int int50 = days46.size();
        org.joda.time.Days days52 = days46.minus(10);
        int int53 = days40.compareTo((org.joda.time.base.BaseSingleFieldPeriod) days46);
        int int54 = days46.size();
        org.junit.Assert.assertNotNull(days0);
        org.junit.Assert.assertNotNull(days2);
        org.junit.Assert.assertNotNull(days4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNotNull(days7);
        org.junit.Assert.assertNotNull(days8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(durationFieldType12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(days15);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNotNull(days18);
        org.junit.Assert.assertNotNull(days19);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(days28);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertNotNull(days31);
        org.junit.Assert.assertNotNull(days32);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(period39);
        org.junit.Assert.assertNotNull(days40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(days43);
        org.junit.Assert.assertNotNull(periodType44);
        org.junit.Assert.assertNotNull(days46);
        org.junit.Assert.assertNotNull(days48);
        org.junit.Assert.assertNotNull(mutablePeriod49);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 1 + "'", int50 == 1);
        org.junit.Assert.assertNotNull(days52);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 1 + "'", int53 == 1);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 1 + "'", int54 == 1);
    }

    @Test
    public void test0401() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0401");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Days days1 = org.joda.time.Days.daysIn(readableInterval0);
        org.joda.time.ReadableInterval readableInterval2 = null;
        org.joda.time.Days days3 = org.joda.time.Days.daysIn(readableInterval2);
        int int5 = days3.getValue((int) (short) 0);
        org.joda.time.Days days6 = org.joda.time.Days.FIVE;
        org.joda.time.Days days7 = days3.minus(days6);
        org.joda.time.DurationFieldType durationFieldType8 = null;
        boolean boolean9 = days6.isSupported(durationFieldType8);
        org.joda.time.DurationFieldType durationFieldType11 = days6.getFieldType(0);
        int int12 = days1.get(durationFieldType11);
        org.joda.time.ReadableInterval readableInterval13 = null;
        org.joda.time.Days days14 = org.joda.time.Days.daysIn(readableInterval13);
        int int16 = days14.getValue((int) (short) 0);
        org.joda.time.Days days17 = org.joda.time.Days.FIVE;
        org.joda.time.Days days18 = days14.minus(days17);
        org.joda.time.DurationFieldType durationFieldType19 = null;
        int int20 = days17.get(durationFieldType19);
        org.joda.time.DurationFieldType durationFieldType21 = null;
        int int22 = days17.get(durationFieldType21);
        boolean boolean24 = days17.equals((java.lang.Object) 0L);
        boolean boolean25 = days1.isGreaterThan(days17);
        java.lang.String str26 = days17.toString();
        org.junit.Assert.assertNotNull(days1);
        org.junit.Assert.assertNotNull(days3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(days6);
        org.junit.Assert.assertNotNull(days7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(durationFieldType11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNotNull(days14);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertNotNull(days17);
        org.junit.Assert.assertNotNull(days18);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "P5D" + "'", str26, "P5D");
    }

    @Test
    public void test0402() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0402");
        org.joda.time.Days days0 = org.joda.time.Days.MAX_VALUE;
        org.joda.time.Days days1 = days0.negated();
        org.joda.time.PeriodType periodType2 = days0.getPeriodType();
        org.joda.time.ReadableInterval readableInterval3 = null;
        org.joda.time.Days days4 = org.joda.time.Days.daysIn(readableInterval3);
        int int6 = days4.getValue((int) (short) 0);
        org.joda.time.Days days7 = org.joda.time.Days.FIVE;
        org.joda.time.Days days8 = days4.minus(days7);
        org.joda.time.DurationFieldType durationFieldType9 = null;
        int int10 = days7.get(durationFieldType9);
        org.joda.time.Days days12 = days7.dividedBy(100);
        int int13 = days0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) days7);
        int int14 = days0.getDays();
        java.lang.String str15 = days0.toString();
        org.joda.time.Days days16 = days0.negated();
        org.joda.time.MutablePeriod mutablePeriod17 = days16.toMutablePeriod();
        java.lang.String str18 = days16.toString();
        // The following exception was thrown during execution in test generation
        try {
            int int20 = days16.getValue((int) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: -1");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(days0);
        org.junit.Assert.assertNotNull(days1);
        org.junit.Assert.assertNotNull(periodType2);
        org.junit.Assert.assertNotNull(days4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNotNull(days7);
        org.junit.Assert.assertNotNull(days8);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(days12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 2147483647 + "'", int14 == 2147483647);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "P2147483647D" + "'", str15, "P2147483647D");
        org.junit.Assert.assertNotNull(days16);
        org.junit.Assert.assertNotNull(mutablePeriod17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "P-2147483647D" + "'", str18, "P-2147483647D");
    }

    @Test
    public void test0403() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0403");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Days days1 = org.joda.time.Days.daysIn(readableInterval0);
        int int3 = days1.getValue((int) (short) 0);
        org.joda.time.Days days4 = org.joda.time.Days.FIVE;
        org.joda.time.Days days5 = days1.minus(days4);
        org.joda.time.Days days6 = null;
        org.joda.time.Days days7 = days1.minus(days6);
        org.joda.time.Days days9 = days7.minus(100);
        org.joda.time.ReadableInterval readableInterval10 = null;
        org.joda.time.Days days11 = org.joda.time.Days.daysIn(readableInterval10);
        int int13 = days11.getValue((int) (short) 0);
        org.joda.time.Days days14 = org.joda.time.Days.FIVE;
        org.joda.time.Days days15 = days11.minus(days14);
        org.joda.time.Days days16 = null;
        org.joda.time.Days days17 = days11.minus(days16);
        org.joda.time.Days days19 = days11.minus((-1));
        org.joda.time.Days days20 = days7.plus(days11);
        org.joda.time.Days days21 = org.joda.time.Days.standardDaysIn((org.joda.time.ReadablePeriod) days11);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.DurationFieldType durationFieldType23 = days21.getFieldType((-1));
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: -1");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(days1);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(days4);
        org.junit.Assert.assertNotNull(days5);
        org.junit.Assert.assertNotNull(days7);
        org.junit.Assert.assertNotNull(days9);
        org.junit.Assert.assertNotNull(days11);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(days14);
        org.junit.Assert.assertNotNull(days15);
        org.junit.Assert.assertNotNull(days17);
        org.junit.Assert.assertNotNull(days19);
        org.junit.Assert.assertNotNull(days20);
        org.junit.Assert.assertNotNull(days21);
    }

    @Test
    public void test0404() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0404");
        org.joda.time.Days days1 = org.joda.time.Days.parseDays("P62D");
        org.joda.time.Days days3 = days1.dividedBy((-2147483648));
        org.joda.time.Days days5 = days3.plus((int) (byte) 10);
        java.lang.String str6 = days3.toString();
        org.junit.Assert.assertNotNull(days1);
        org.junit.Assert.assertNotNull(days3);
        org.junit.Assert.assertNotNull(days5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "P0D" + "'", str6, "P0D");
    }

    @Test
    public void test0405() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0405");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Days days1 = org.joda.time.Days.daysIn(readableInterval0);
        int int3 = days1.getValue((int) (short) 0);
        org.joda.time.ReadableInterval readableInterval4 = null;
        org.joda.time.Days days5 = org.joda.time.Days.daysIn(readableInterval4);
        int int7 = days5.getValue((int) (short) 0);
        org.joda.time.Days days8 = org.joda.time.Days.FIVE;
        org.joda.time.Days days9 = days5.minus(days8);
        int int10 = days1.compareTo((org.joda.time.base.BaseSingleFieldPeriod) days8);
        org.joda.time.MutablePeriod mutablePeriod11 = days8.toMutablePeriod();
        org.joda.time.ReadableInterval readableInterval12 = null;
        org.joda.time.Days days13 = org.joda.time.Days.daysIn(readableInterval12);
        org.joda.time.Days days15 = days13.plus((int) (byte) 10);
        java.lang.String str16 = days15.toString();
        org.joda.time.PeriodType periodType17 = days15.getPeriodType();
        org.joda.time.ReadableInterval readableInterval18 = null;
        org.joda.time.Days days19 = org.joda.time.Days.daysIn(readableInterval18);
        int int21 = days19.getValue((int) (short) 0);
        org.joda.time.ReadableInterval readableInterval22 = null;
        org.joda.time.Days days23 = org.joda.time.Days.daysIn(readableInterval22);
        int int25 = days23.getValue((int) (short) 0);
        org.joda.time.Days days26 = org.joda.time.Days.FIVE;
        org.joda.time.Days days27 = days23.minus(days26);
        int int28 = days19.compareTo((org.joda.time.base.BaseSingleFieldPeriod) days26);
        java.lang.String str29 = days19.toString();
        org.joda.time.Days days31 = days19.plus((int) '4');
        org.joda.time.PeriodType periodType32 = days31.getPeriodType();
        int int33 = days31.getDays();
        org.joda.time.Days days35 = days31.minus((int) ' ');
        org.joda.time.ReadableInterval readableInterval36 = null;
        org.joda.time.Days days37 = org.joda.time.Days.daysIn(readableInterval36);
        org.joda.time.Days days39 = days37.plus((int) (byte) 10);
        org.joda.time.Days days41 = days39.dividedBy((int) 'a');
        org.joda.time.Days days43 = days39.dividedBy(5);
        org.joda.time.Days days45 = days39.plus((int) (byte) -1);
        org.joda.time.Days days46 = days31.plus(days39);
        boolean boolean47 = days15.isLessThan(days31);
        org.joda.time.ReadableInterval readableInterval48 = null;
        org.joda.time.Days days49 = org.joda.time.Days.daysIn(readableInterval48);
        org.joda.time.Days days51 = days49.plus((int) (byte) 10);
        org.joda.time.ReadableInterval readableInterval52 = null;
        org.joda.time.Days days53 = org.joda.time.Days.daysIn(readableInterval52);
        org.joda.time.ReadableInterval readableInterval54 = null;
        org.joda.time.Days days55 = org.joda.time.Days.daysIn(readableInterval54);
        int int57 = days55.getValue((int) (short) 0);
        org.joda.time.Days days58 = org.joda.time.Days.FIVE;
        org.joda.time.Days days59 = days55.minus(days58);
        org.joda.time.DurationFieldType durationFieldType60 = null;
        boolean boolean61 = days58.isSupported(durationFieldType60);
        org.joda.time.DurationFieldType durationFieldType63 = days58.getFieldType(0);
        int int64 = days53.get(durationFieldType63);
        int int65 = days51.get(durationFieldType63);
        boolean boolean66 = days15.isSupported(durationFieldType63);
        int int67 = days8.get(durationFieldType63);
        org.junit.Assert.assertNotNull(days1);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(days5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(days8);
        org.junit.Assert.assertNotNull(days9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertNotNull(mutablePeriod11);
        org.junit.Assert.assertNotNull(days13);
        org.junit.Assert.assertNotNull(days15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "P10D" + "'", str16, "P10D");
        org.junit.Assert.assertNotNull(periodType17);
        org.junit.Assert.assertNotNull(days19);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertNotNull(days23);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertNotNull(days26);
        org.junit.Assert.assertNotNull(days27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "P0D" + "'", str29, "P0D");
        org.junit.Assert.assertNotNull(days31);
        org.junit.Assert.assertNotNull(periodType32);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 52 + "'", int33 == 52);
        org.junit.Assert.assertNotNull(days35);
        org.junit.Assert.assertNotNull(days37);
        org.junit.Assert.assertNotNull(days39);
        org.junit.Assert.assertNotNull(days41);
        org.junit.Assert.assertNotNull(days43);
        org.junit.Assert.assertNotNull(days45);
        org.junit.Assert.assertNotNull(days46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(days49);
        org.junit.Assert.assertNotNull(days51);
        org.junit.Assert.assertNotNull(days53);
        org.junit.Assert.assertNotNull(days55);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 0 + "'", int57 == 0);
        org.junit.Assert.assertNotNull(days58);
        org.junit.Assert.assertNotNull(days59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(durationFieldType63);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 0 + "'", int64 == 0);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 10 + "'", int65 == 10);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 5 + "'", int67 == 5);
    }

    @Test
    public void test0406() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0406");
        org.joda.time.Days days0 = org.joda.time.Days.SEVEN;
        org.joda.time.Days days2 = days0.plus(1);
        java.lang.String str3 = days0.toString();
        org.joda.time.Days days4 = org.joda.time.Days.standardDaysIn((org.joda.time.ReadablePeriod) days0);
        org.joda.time.Days days6 = days4.plus(7);
        org.junit.Assert.assertNotNull(days0);
        org.junit.Assert.assertNotNull(days2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "P7D" + "'", str3, "P7D");
        org.junit.Assert.assertNotNull(days4);
        org.junit.Assert.assertNotNull(days6);
    }

    @Test
    public void test0407() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0407");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Days days1 = org.joda.time.Days.daysIn(readableInterval0);
        int int3 = days1.getValue((int) (short) 0);
        org.joda.time.Days days4 = org.joda.time.Days.FIVE;
        org.joda.time.Days days5 = days1.minus(days4);
        org.joda.time.DurationFieldType durationFieldType6 = null;
        boolean boolean7 = days4.isSupported(durationFieldType6);
        org.joda.time.DurationFieldType durationFieldType9 = days4.getFieldType(0);
        org.joda.time.ReadableInterval readableInterval10 = null;
        org.joda.time.Days days11 = org.joda.time.Days.daysIn(readableInterval10);
        int int13 = days11.getValue((int) (short) 0);
        org.joda.time.Days days14 = org.joda.time.Days.FIVE;
        org.joda.time.Days days15 = days11.minus(days14);
        org.joda.time.Days days16 = null;
        org.joda.time.Days days17 = days11.minus(days16);
        org.joda.time.Days days19 = days11.minus((-1));
        org.joda.time.DurationFieldType durationFieldType20 = days11.getFieldType();
        boolean boolean21 = days4.isGreaterThan(days11);
        org.joda.time.Period period22 = days11.toPeriod();
        org.joda.time.ReadableInterval readableInterval23 = null;
        org.joda.time.Days days24 = org.joda.time.Days.daysIn(readableInterval23);
        int int26 = days24.getValue((int) (short) 0);
        org.joda.time.Period period27 = days24.toPeriod();
        org.joda.time.Days days28 = org.joda.time.Days.standardDaysIn((org.joda.time.ReadablePeriod) days24);
        org.joda.time.Duration duration29 = days24.toStandardDuration();
        org.joda.time.Days days31 = days24.multipliedBy((int) (byte) 10);
        java.lang.String str32 = days31.toString();
        boolean boolean33 = days11.isGreaterThan(days31);
        org.junit.Assert.assertNotNull(days1);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(days4);
        org.junit.Assert.assertNotNull(days5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(durationFieldType9);
        org.junit.Assert.assertNotNull(days11);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(days14);
        org.junit.Assert.assertNotNull(days15);
        org.junit.Assert.assertNotNull(days17);
        org.junit.Assert.assertNotNull(days19);
        org.junit.Assert.assertNotNull(durationFieldType20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(period22);
        org.junit.Assert.assertNotNull(days24);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertNotNull(period27);
        org.junit.Assert.assertNotNull(days28);
        org.junit.Assert.assertNotNull(duration29);
        org.junit.Assert.assertNotNull(days31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "P0D" + "'", str32, "P0D");
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
    }

    @Test
    public void test0408() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0408");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Days days1 = org.joda.time.Days.daysIn(readableInterval0);
        int int3 = days1.getValue((int) (short) 0);
        org.joda.time.Days days4 = org.joda.time.Days.FIVE;
        org.joda.time.Days days5 = days1.minus(days4);
        org.joda.time.DurationFieldType durationFieldType6 = null;
        boolean boolean7 = days4.isSupported(durationFieldType6);
        org.joda.time.DurationFieldType durationFieldType9 = days4.getFieldType(0);
        org.joda.time.ReadableInterval readableInterval10 = null;
        org.joda.time.Days days11 = org.joda.time.Days.daysIn(readableInterval10);
        int int13 = days11.getValue((int) (short) 0);
        org.joda.time.Days days14 = org.joda.time.Days.FIVE;
        org.joda.time.Days days15 = days11.minus(days14);
        org.joda.time.Days days16 = null;
        org.joda.time.Days days17 = days11.minus(days16);
        org.joda.time.Days days19 = days11.minus((-1));
        org.joda.time.DurationFieldType durationFieldType20 = days11.getFieldType();
        boolean boolean21 = days4.isGreaterThan(days11);
        org.joda.time.ReadableInterval readableInterval22 = null;
        org.joda.time.Days days23 = org.joda.time.Days.daysIn(readableInterval22);
        org.joda.time.Days days25 = days23.plus((int) (byte) 10);
        org.joda.time.Days days27 = days25.dividedBy((int) 'a');
        org.joda.time.Days days29 = days25.dividedBy(5);
        org.joda.time.Days days31 = days25.plus((int) (byte) -1);
        org.joda.time.Days days33 = days25.minus((int) (byte) 100);
        int int34 = days33.getDays();
        boolean boolean35 = days11.isGreaterThan(days33);
        org.joda.time.ReadableInterval readableInterval36 = null;
        org.joda.time.Days days37 = org.joda.time.Days.daysIn(readableInterval36);
        int int39 = days37.getValue((int) (short) 0);
        org.joda.time.Days days40 = org.joda.time.Days.FIVE;
        org.joda.time.Days days41 = days37.minus(days40);
        org.joda.time.ReadableInterval readableInterval42 = null;
        org.joda.time.Days days43 = org.joda.time.Days.daysIn(readableInterval42);
        int int45 = days43.getValue((int) (short) 0);
        int int46 = days37.compareTo((org.joda.time.base.BaseSingleFieldPeriod) days43);
        org.joda.time.ReadableInterval readableInterval47 = null;
        org.joda.time.Days days48 = org.joda.time.Days.daysIn(readableInterval47);
        int int50 = days48.getValue((int) (short) 0);
        org.joda.time.Days days51 = org.joda.time.Days.FIVE;
        org.joda.time.Days days52 = days48.minus(days51);
        org.joda.time.DurationFieldType durationFieldType53 = null;
        int int54 = days51.get(durationFieldType53);
        org.joda.time.DurationFieldType durationFieldType55 = null;
        int int56 = days51.get(durationFieldType55);
        boolean boolean58 = days51.equals((java.lang.Object) false);
        boolean boolean59 = days43.equals((java.lang.Object) days51);
        org.joda.time.ReadableInterval readableInterval60 = null;
        org.joda.time.Days days61 = org.joda.time.Days.daysIn(readableInterval60);
        int int63 = days61.getValue((int) (short) 0);
        org.joda.time.Days days64 = org.joda.time.Days.FIVE;
        org.joda.time.Days days65 = days61.minus(days64);
        org.joda.time.DurationFieldType durationFieldType66 = null;
        boolean boolean67 = days64.isSupported(durationFieldType66);
        org.joda.time.DurationFieldType durationFieldType69 = days64.getFieldType(0);
        int int70 = days51.get(durationFieldType69);
        boolean boolean71 = days11.equals((java.lang.Object) days51);
        org.joda.time.Days days73 = days51.minus((-90));
        org.junit.Assert.assertNotNull(days1);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(days4);
        org.junit.Assert.assertNotNull(days5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(durationFieldType9);
        org.junit.Assert.assertNotNull(days11);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(days14);
        org.junit.Assert.assertNotNull(days15);
        org.junit.Assert.assertNotNull(days17);
        org.junit.Assert.assertNotNull(days19);
        org.junit.Assert.assertNotNull(durationFieldType20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(days23);
        org.junit.Assert.assertNotNull(days25);
        org.junit.Assert.assertNotNull(days27);
        org.junit.Assert.assertNotNull(days29);
        org.junit.Assert.assertNotNull(days31);
        org.junit.Assert.assertNotNull(days33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + (-90) + "'", int34 == (-90));
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(days37);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertNotNull(days40);
        org.junit.Assert.assertNotNull(days41);
        org.junit.Assert.assertNotNull(days43);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 0 + "'", int45 == 0);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 0 + "'", int46 == 0);
        org.junit.Assert.assertNotNull(days48);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 0 + "'", int50 == 0);
        org.junit.Assert.assertNotNull(days51);
        org.junit.Assert.assertNotNull(days52);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 0 + "'", int54 == 0);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 0 + "'", int56 == 0);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(days61);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 0 + "'", int63 == 0);
        org.junit.Assert.assertNotNull(days64);
        org.junit.Assert.assertNotNull(days65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(durationFieldType69);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 5 + "'", int70 == 5);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(days73);
    }

    @Test
    public void test0409() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0409");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Days days1 = org.joda.time.Days.daysIn(readableInterval0);
        int int3 = days1.getValue((int) (short) 0);
        org.joda.time.ReadableInterval readableInterval4 = null;
        org.joda.time.Days days5 = org.joda.time.Days.daysIn(readableInterval4);
        int int7 = days5.getValue((int) (short) 0);
        org.joda.time.Days days8 = org.joda.time.Days.FIVE;
        org.joda.time.Days days9 = days5.minus(days8);
        int int10 = days1.compareTo((org.joda.time.base.BaseSingleFieldPeriod) days8);
        org.joda.time.MutablePeriod mutablePeriod11 = days8.toMutablePeriod();
        org.joda.time.Days days12 = days8.negated();
        org.joda.time.Days days14 = org.joda.time.Days.parseDays("P51D");
        org.joda.time.Days days16 = days14.plus((int) ' ');
        int int17 = days14.size();
        int int18 = days14.getDays();
        org.joda.time.Days days20 = days14.multipliedBy((-1));
        org.joda.time.Days days22 = org.joda.time.Days.days((int) '#');
        org.joda.time.DurationFieldType durationFieldType23 = days22.getFieldType();
        int int24 = days14.compareTo((org.joda.time.base.BaseSingleFieldPeriod) days22);
        boolean boolean25 = days12.isGreaterThan(days14);
        org.junit.Assert.assertNotNull(days1);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(days5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(days8);
        org.junit.Assert.assertNotNull(days9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertNotNull(mutablePeriod11);
        org.junit.Assert.assertNotNull(days12);
        org.junit.Assert.assertNotNull(days14);
        org.junit.Assert.assertNotNull(days16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 1 + "'", int17 == 1);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 51 + "'", int18 == 51);
        org.junit.Assert.assertNotNull(days20);
        org.junit.Assert.assertNotNull(days22);
        org.junit.Assert.assertNotNull(durationFieldType23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 1 + "'", int24 == 1);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
    }

    @Test
    public void test0410() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0410");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Days days1 = org.joda.time.Days.daysIn(readableInterval0);
        int int3 = days1.getValue((int) (short) 0);
        org.joda.time.Days days4 = org.joda.time.Days.FIVE;
        org.joda.time.Days days5 = days1.minus(days4);
        org.joda.time.DurationFieldType durationFieldType6 = null;
        int int7 = days4.get(durationFieldType6);
        org.joda.time.DurationFieldType durationFieldType8 = null;
        int int9 = days4.get(durationFieldType8);
        boolean boolean11 = days4.equals((java.lang.Object) 0L);
        org.joda.time.DurationFieldType durationFieldType12 = days4.getFieldType();
        org.joda.time.Days days13 = days4.negated();
        org.joda.time.ReadableInterval readableInterval14 = null;
        org.joda.time.Days days15 = org.joda.time.Days.daysIn(readableInterval14);
        int int17 = days15.getValue((int) (short) 0);
        org.joda.time.Days days18 = org.joda.time.Days.FIVE;
        org.joda.time.Days days19 = days15.minus(days18);
        org.joda.time.DurationFieldType durationFieldType20 = null;
        int int21 = days18.get(durationFieldType20);
        org.joda.time.DurationFieldType durationFieldType22 = null;
        int int23 = days18.get(durationFieldType22);
        boolean boolean25 = days18.equals((java.lang.Object) 0L);
        int int26 = days18.getDays();
        org.joda.time.Days days27 = days13.minus(days18);
        org.joda.time.Days days29 = org.joda.time.Days.parseDays("P0D");
        org.joda.time.ReadableInterval readableInterval30 = null;
        org.joda.time.Days days31 = org.joda.time.Days.daysIn(readableInterval30);
        org.joda.time.Days days33 = days31.plus((int) (byte) 10);
        org.joda.time.MutablePeriod mutablePeriod34 = days31.toMutablePeriod();
        int int35 = days31.size();
        int int36 = days29.compareTo((org.joda.time.base.BaseSingleFieldPeriod) days31);
        org.joda.time.Days days37 = days18.plus(days31);
        org.joda.time.ReadableInterval readableInterval38 = null;
        org.joda.time.Days days39 = org.joda.time.Days.daysIn(readableInterval38);
        int int41 = days39.getValue((int) (short) 0);
        org.joda.time.Days days42 = org.joda.time.Days.FIVE;
        org.joda.time.Days days43 = days39.minus(days42);
        org.joda.time.DurationFieldType durationFieldType44 = null;
        int int45 = days42.get(durationFieldType44);
        org.joda.time.DurationFieldType durationFieldType46 = null;
        int int47 = days42.get(durationFieldType46);
        boolean boolean49 = days42.equals((java.lang.Object) 0L);
        org.joda.time.DurationFieldType durationFieldType50 = days42.getFieldType();
        org.joda.time.Days days51 = days42.negated();
        org.joda.time.ReadableInterval readableInterval52 = null;
        org.joda.time.Days days53 = org.joda.time.Days.daysIn(readableInterval52);
        int int55 = days53.getValue((int) (short) 0);
        org.joda.time.Days days56 = org.joda.time.Days.FIVE;
        org.joda.time.Days days57 = days53.minus(days56);
        org.joda.time.DurationFieldType durationFieldType58 = null;
        int int59 = days56.get(durationFieldType58);
        org.joda.time.DurationFieldType durationFieldType60 = null;
        int int61 = days56.get(durationFieldType60);
        boolean boolean63 = days56.equals((java.lang.Object) 0L);
        int int64 = days56.getDays();
        org.joda.time.Days days65 = days51.minus(days56);
        org.joda.time.Duration duration66 = days65.toStandardDuration();
        boolean boolean67 = days18.equals((java.lang.Object) duration66);
        org.junit.Assert.assertNotNull(days1);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(days4);
        org.junit.Assert.assertNotNull(days5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(durationFieldType12);
        org.junit.Assert.assertNotNull(days13);
        org.junit.Assert.assertNotNull(days15);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNotNull(days18);
        org.junit.Assert.assertNotNull(days19);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 5 + "'", int26 == 5);
        org.junit.Assert.assertNotNull(days27);
        org.junit.Assert.assertNotNull(days29);
        org.junit.Assert.assertNotNull(days31);
        org.junit.Assert.assertNotNull(days33);
        org.junit.Assert.assertNotNull(mutablePeriod34);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 1 + "'", int35 == 1);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertNotNull(days37);
        org.junit.Assert.assertNotNull(days39);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0);
        org.junit.Assert.assertNotNull(days42);
        org.junit.Assert.assertNotNull(days43);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 0 + "'", int45 == 0);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 0 + "'", int47 == 0);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(durationFieldType50);
        org.junit.Assert.assertNotNull(days51);
        org.junit.Assert.assertNotNull(days53);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 0 + "'", int55 == 0);
        org.junit.Assert.assertNotNull(days56);
        org.junit.Assert.assertNotNull(days57);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 0 + "'", int59 == 0);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 0 + "'", int61 == 0);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 5 + "'", int64 == 5);
        org.junit.Assert.assertNotNull(days65);
        org.junit.Assert.assertNotNull(duration66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
    }

    @Test
    public void test0411() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0411");
        org.joda.time.Days days1 = org.joda.time.Days.days((int) 'a');
        org.joda.time.Days days2 = org.joda.time.Days.SIX;
        org.joda.time.Days days4 = days2.plus(100);
        org.joda.time.ReadableInterval readableInterval5 = null;
        org.joda.time.Days days6 = org.joda.time.Days.daysIn(readableInterval5);
        int int8 = days6.getValue((int) (short) 0);
        org.joda.time.Days days9 = org.joda.time.Days.FIVE;
        org.joda.time.Days days10 = days6.minus(days9);
        org.joda.time.Days days11 = null;
        org.joda.time.Days days12 = days6.minus(days11);
        org.joda.time.Days days14 = days6.minus((-1));
        org.joda.time.DurationFieldType durationFieldType15 = days6.getFieldType();
        int int16 = days2.get(durationFieldType15);
        int int17 = days1.get(durationFieldType15);
        org.joda.time.ReadableInterval readableInterval18 = null;
        org.joda.time.Days days19 = org.joda.time.Days.daysIn(readableInterval18);
        org.joda.time.ReadableInterval readableInterval20 = null;
        org.joda.time.Days days21 = org.joda.time.Days.daysIn(readableInterval20);
        int int23 = days21.getValue((int) (short) 0);
        org.joda.time.Days days24 = org.joda.time.Days.FIVE;
        org.joda.time.Days days25 = days21.minus(days24);
        org.joda.time.DurationFieldType durationFieldType26 = null;
        boolean boolean27 = days24.isSupported(durationFieldType26);
        org.joda.time.DurationFieldType durationFieldType29 = days24.getFieldType(0);
        int int30 = days19.get(durationFieldType29);
        org.joda.time.PeriodType periodType31 = days19.getPeriodType();
        org.joda.time.Days days33 = days19.multipliedBy((int) (short) -1);
        org.joda.time.MutablePeriod mutablePeriod34 = days19.toMutablePeriod();
        boolean boolean35 = days1.isGreaterThan(days19);
        org.junit.Assert.assertNotNull(days1);
        org.junit.Assert.assertNotNull(days2);
        org.junit.Assert.assertNotNull(days4);
        org.junit.Assert.assertNotNull(days6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNotNull(days9);
        org.junit.Assert.assertNotNull(days10);
        org.junit.Assert.assertNotNull(days12);
        org.junit.Assert.assertNotNull(days14);
        org.junit.Assert.assertNotNull(durationFieldType15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 6 + "'", int16 == 6);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 97 + "'", int17 == 97);
        org.junit.Assert.assertNotNull(days19);
        org.junit.Assert.assertNotNull(days21);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertNotNull(days24);
        org.junit.Assert.assertNotNull(days25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(durationFieldType29);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertNotNull(periodType31);
        org.junit.Assert.assertNotNull(days33);
        org.junit.Assert.assertNotNull(mutablePeriod34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
    }

    @Test
    public void test0412() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0412");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Days days1 = org.joda.time.Days.daysIn(readableInterval0);
        int int3 = days1.getValue((int) (short) 0);
        org.joda.time.Days days4 = org.joda.time.Days.FIVE;
        org.joda.time.Days days5 = days1.minus(days4);
        org.joda.time.Days days6 = null;
        org.joda.time.Days days7 = days1.minus(days6);
        org.joda.time.ReadableInterval readableInterval8 = null;
        org.joda.time.Days days9 = org.joda.time.Days.daysIn(readableInterval8);
        int int11 = days9.getValue((int) (short) 0);
        org.joda.time.Days days12 = org.joda.time.Days.FIVE;
        org.joda.time.Days days13 = days9.minus(days12);
        org.joda.time.DurationFieldType durationFieldType14 = null;
        int int15 = days12.get(durationFieldType14);
        org.joda.time.DurationFieldType durationFieldType16 = null;
        int int17 = days12.get(durationFieldType16);
        boolean boolean19 = days12.equals((java.lang.Object) 0L);
        int int20 = days1.compareTo((org.joda.time.base.BaseSingleFieldPeriod) days12);
        org.joda.time.Days days22 = days12.multipliedBy((int) (byte) 100);
        int int23 = days12.getDays();
        int int24 = days12.size();
        org.joda.time.Period period25 = days12.toPeriod();
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.DurationFieldType durationFieldType27 = days12.getFieldType(10);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 10");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(days1);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(days4);
        org.junit.Assert.assertNotNull(days5);
        org.junit.Assert.assertNotNull(days7);
        org.junit.Assert.assertNotNull(days9);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNotNull(days12);
        org.junit.Assert.assertNotNull(days13);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
        org.junit.Assert.assertNotNull(days22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 5 + "'", int23 == 5);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 1 + "'", int24 == 1);
        org.junit.Assert.assertNotNull(period25);
    }

    @Test
    public void test0413() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0413");
        org.joda.time.Days days0 = org.joda.time.Days.MAX_VALUE;
        org.joda.time.Days days1 = days0.negated();
        org.joda.time.ReadableInterval readableInterval2 = null;
        org.joda.time.Days days3 = org.joda.time.Days.daysIn(readableInterval2);
        int int5 = days3.getValue((int) (short) 0);
        org.joda.time.Days days6 = org.joda.time.Days.FIVE;
        org.joda.time.Days days7 = days3.minus(days6);
        org.joda.time.Days days8 = null;
        org.joda.time.Days days9 = days3.minus(days8);
        org.joda.time.Days days11 = days3.minus((-1));
        org.joda.time.ReadableInterval readableInterval12 = null;
        org.joda.time.Days days13 = org.joda.time.Days.daysIn(readableInterval12);
        int int15 = days13.getValue((int) (short) 0);
        org.joda.time.Days days16 = org.joda.time.Days.FIVE;
        org.joda.time.Days days17 = days13.minus(days16);
        org.joda.time.Days days18 = null;
        org.joda.time.Days days19 = days13.minus(days18);
        boolean boolean20 = days11.isGreaterThan(days19);
        org.joda.time.Days days21 = days1.plus(days19);
        java.lang.String str22 = days21.toString();
        org.junit.Assert.assertNotNull(days0);
        org.junit.Assert.assertNotNull(days1);
        org.junit.Assert.assertNotNull(days3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(days6);
        org.junit.Assert.assertNotNull(days7);
        org.junit.Assert.assertNotNull(days9);
        org.junit.Assert.assertNotNull(days11);
        org.junit.Assert.assertNotNull(days13);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNotNull(days16);
        org.junit.Assert.assertNotNull(days17);
        org.junit.Assert.assertNotNull(days19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(days21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "P-2147483647D" + "'", str22, "P-2147483647D");
    }

    @Test
    public void test0414() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0414");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Days days1 = org.joda.time.Days.daysIn(readableInterval0);
        int int3 = days1.getValue((int) (short) 0);
        org.joda.time.Days days4 = org.joda.time.Days.FIVE;
        org.joda.time.Days days5 = days1.minus(days4);
        org.joda.time.DurationFieldType durationFieldType6 = null;
        boolean boolean7 = days4.isSupported(durationFieldType6);
        org.joda.time.DurationFieldType durationFieldType9 = days4.getFieldType(0);
        org.joda.time.Period period10 = days4.toPeriod();
        int int12 = days4.getValue(0);
        org.joda.time.Days days14 = days4.dividedBy(52);
        org.joda.time.Days days16 = days4.minus((int) ' ');
        int int17 = days4.size();
        org.junit.Assert.assertNotNull(days1);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(days4);
        org.junit.Assert.assertNotNull(days5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(durationFieldType9);
        org.junit.Assert.assertNotNull(period10);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 5 + "'", int12 == 5);
        org.junit.Assert.assertNotNull(days14);
        org.junit.Assert.assertNotNull(days16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 1 + "'", int17 == 1);
    }

    @Test
    public void test0415() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0415");
        org.joda.time.Days days0 = org.joda.time.Days.THREE;
        org.joda.time.ReadableInterval readableInterval1 = null;
        org.joda.time.Days days2 = org.joda.time.Days.daysIn(readableInterval1);
        org.joda.time.ReadableInterval readableInterval3 = null;
        org.joda.time.Days days4 = org.joda.time.Days.daysIn(readableInterval3);
        int int6 = days4.getValue((int) (short) 0);
        org.joda.time.Days days7 = org.joda.time.Days.FIVE;
        org.joda.time.Days days8 = days4.minus(days7);
        org.joda.time.DurationFieldType durationFieldType9 = null;
        boolean boolean10 = days7.isSupported(durationFieldType9);
        org.joda.time.DurationFieldType durationFieldType12 = days7.getFieldType(0);
        int int13 = days2.get(durationFieldType12);
        org.joda.time.ReadableInterval readableInterval14 = null;
        org.joda.time.Days days15 = org.joda.time.Days.daysIn(readableInterval14);
        int int17 = days15.getValue((int) (short) 0);
        org.joda.time.Days days18 = org.joda.time.Days.FIVE;
        org.joda.time.Days days19 = days15.minus(days18);
        org.joda.time.DurationFieldType durationFieldType20 = null;
        int int21 = days18.get(durationFieldType20);
        org.joda.time.DurationFieldType durationFieldType22 = null;
        int int23 = days18.get(durationFieldType22);
        boolean boolean25 = days18.equals((java.lang.Object) 0L);
        boolean boolean26 = days2.isGreaterThan(days18);
        org.joda.time.ReadableInterval readableInterval27 = null;
        org.joda.time.Days days28 = org.joda.time.Days.daysIn(readableInterval27);
        int int30 = days28.getValue((int) (short) 0);
        org.joda.time.Days days31 = org.joda.time.Days.FIVE;
        org.joda.time.Days days32 = days28.minus(days31);
        org.joda.time.DurationFieldType durationFieldType33 = null;
        int int34 = days31.get(durationFieldType33);
        org.joda.time.DurationFieldType durationFieldType35 = null;
        int int36 = days31.get(durationFieldType35);
        boolean boolean38 = days31.equals((java.lang.Object) 0L);
        org.joda.time.Period period39 = days31.toPeriod();
        org.joda.time.Days days40 = days2.plus(days31);
        boolean boolean41 = days0.isGreaterThan(days40);
        org.joda.time.ReadableInterval readableInterval42 = null;
        org.joda.time.Days days43 = org.joda.time.Days.daysIn(readableInterval42);
        org.joda.time.Days days45 = days43.plus((int) (byte) 10);
        org.joda.time.Days days47 = days45.dividedBy((int) 'a');
        int int48 = days40.compareTo((org.joda.time.base.BaseSingleFieldPeriod) days45);
        org.joda.time.Days days50 = days45.dividedBy((int) ' ');
        org.joda.time.Days days52 = days45.minus((int) (byte) 100);
        org.joda.time.Days days53 = org.joda.time.Days.standardDaysIn((org.joda.time.ReadablePeriod) days52);
        org.joda.time.Days days54 = days53.negated();
        org.junit.Assert.assertNotNull(days0);
        org.junit.Assert.assertNotNull(days2);
        org.junit.Assert.assertNotNull(days4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNotNull(days7);
        org.junit.Assert.assertNotNull(days8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(durationFieldType12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(days15);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNotNull(days18);
        org.junit.Assert.assertNotNull(days19);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(days28);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertNotNull(days31);
        org.junit.Assert.assertNotNull(days32);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(period39);
        org.junit.Assert.assertNotNull(days40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(days43);
        org.junit.Assert.assertNotNull(days45);
        org.junit.Assert.assertNotNull(days47);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + (-1) + "'", int48 == (-1));
        org.junit.Assert.assertNotNull(days50);
        org.junit.Assert.assertNotNull(days52);
        org.junit.Assert.assertNotNull(days53);
        org.junit.Assert.assertNotNull(days54);
    }

    @Test
    public void test0416() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0416");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Days days1 = org.joda.time.Days.daysIn(readableInterval0);
        org.joda.time.Days days3 = days1.plus((int) (byte) 10);
        org.joda.time.Days days5 = days3.dividedBy((int) 'a');
        org.joda.time.Days days7 = days3.dividedBy(5);
        org.joda.time.Days days9 = days3.plus((int) (byte) -1);
        org.joda.time.Days days11 = days3.dividedBy((int) (byte) -1);
        org.joda.time.Period period12 = days3.toPeriod();
        org.joda.time.ReadableInterval readableInterval13 = null;
        org.joda.time.Days days14 = org.joda.time.Days.daysIn(readableInterval13);
        org.joda.time.Days days16 = days14.plus((int) (byte) 10);
        org.joda.time.MutablePeriod mutablePeriod17 = days14.toMutablePeriod();
        org.joda.time.Days days19 = days14.plus((int) (short) -1);
        org.joda.time.ReadableInterval readableInterval20 = null;
        org.joda.time.Days days21 = org.joda.time.Days.daysIn(readableInterval20);
        int int23 = days21.getValue((int) (short) 0);
        org.joda.time.Days days24 = org.joda.time.Days.FIVE;
        org.joda.time.Days days25 = days21.minus(days24);
        org.joda.time.Days days26 = null;
        org.joda.time.Days days27 = days21.minus(days26);
        org.joda.time.Days days29 = days21.minus((-1));
        int int30 = days21.size();
        boolean boolean31 = days14.isGreaterThan(days21);
        org.joda.time.Days days33 = days14.plus((int) 'a');
        org.joda.time.Days days34 = days14.negated();
        org.joda.time.ReadableInterval readableInterval35 = null;
        org.joda.time.Days days36 = org.joda.time.Days.daysIn(readableInterval35);
        int int38 = days36.getValue((int) (short) 0);
        org.joda.time.Days days39 = org.joda.time.Days.FIVE;
        org.joda.time.Days days40 = days36.minus(days39);
        org.joda.time.Days days41 = null;
        org.joda.time.Days days42 = days36.minus(days41);
        org.joda.time.ReadableInterval readableInterval43 = null;
        org.joda.time.Days days44 = org.joda.time.Days.daysIn(readableInterval43);
        int int46 = days44.getValue((int) (short) 0);
        org.joda.time.Days days47 = org.joda.time.Days.FIVE;
        org.joda.time.Days days48 = days44.minus(days47);
        org.joda.time.DurationFieldType durationFieldType49 = null;
        int int50 = days47.get(durationFieldType49);
        org.joda.time.DurationFieldType durationFieldType51 = null;
        int int52 = days47.get(durationFieldType51);
        boolean boolean54 = days47.equals((java.lang.Object) 0L);
        int int55 = days36.compareTo((org.joda.time.base.BaseSingleFieldPeriod) days47);
        org.joda.time.Days days57 = days36.minus(52);
        org.joda.time.Days days59 = days57.dividedBy((-1));
        org.joda.time.Days days61 = days59.dividedBy(8);
        boolean boolean62 = days34.isGreaterThan(days59);
        org.joda.time.Days days63 = days34.negated();
        boolean boolean64 = days3.equals((java.lang.Object) days63);
        org.junit.Assert.assertNotNull(days1);
        org.junit.Assert.assertNotNull(days3);
        org.junit.Assert.assertNotNull(days5);
        org.junit.Assert.assertNotNull(days7);
        org.junit.Assert.assertNotNull(days9);
        org.junit.Assert.assertNotNull(days11);
        org.junit.Assert.assertNotNull(period12);
        org.junit.Assert.assertNotNull(days14);
        org.junit.Assert.assertNotNull(days16);
        org.junit.Assert.assertNotNull(mutablePeriod17);
        org.junit.Assert.assertNotNull(days19);
        org.junit.Assert.assertNotNull(days21);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertNotNull(days24);
        org.junit.Assert.assertNotNull(days25);
        org.junit.Assert.assertNotNull(days27);
        org.junit.Assert.assertNotNull(days29);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 1 + "'", int30 == 1);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(days33);
        org.junit.Assert.assertNotNull(days34);
        org.junit.Assert.assertNotNull(days36);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 0 + "'", int38 == 0);
        org.junit.Assert.assertNotNull(days39);
        org.junit.Assert.assertNotNull(days40);
        org.junit.Assert.assertNotNull(days42);
        org.junit.Assert.assertNotNull(days44);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 0 + "'", int46 == 0);
        org.junit.Assert.assertNotNull(days47);
        org.junit.Assert.assertNotNull(days48);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 0 + "'", int50 == 0);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 0 + "'", int52 == 0);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + (-1) + "'", int55 == (-1));
        org.junit.Assert.assertNotNull(days57);
        org.junit.Assert.assertNotNull(days59);
        org.junit.Assert.assertNotNull(days61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(days63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
    }

    @Test
    public void test0417() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0417");
        org.joda.time.Days days1 = org.joda.time.Days.parseDays("P62D");
        org.joda.time.Days days3 = days1.dividedBy((-2147483648));
        org.joda.time.Days days5 = days3.plus((int) (byte) 10);
        org.joda.time.PeriodType periodType6 = days5.getPeriodType();
        org.junit.Assert.assertNotNull(days1);
        org.junit.Assert.assertNotNull(days3);
        org.junit.Assert.assertNotNull(days5);
        org.junit.Assert.assertNotNull(periodType6);
    }

    @Test
    public void test0418() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0418");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Days days1 = org.joda.time.Days.daysIn(readableInterval0);
        int int3 = days1.getValue((int) (short) 0);
        org.joda.time.Days days4 = org.joda.time.Days.FIVE;
        org.joda.time.Days days5 = days1.minus(days4);
        org.joda.time.DurationFieldType durationFieldType6 = null;
        boolean boolean7 = days4.isSupported(durationFieldType6);
        org.joda.time.DurationFieldType durationFieldType9 = days4.getFieldType(0);
        org.joda.time.ReadableInterval readableInterval10 = null;
        org.joda.time.Days days11 = org.joda.time.Days.daysIn(readableInterval10);
        int int13 = days11.getValue((int) (short) 0);
        org.joda.time.Days days14 = org.joda.time.Days.FIVE;
        org.joda.time.Days days15 = days11.minus(days14);
        org.joda.time.Days days16 = null;
        org.joda.time.Days days17 = days11.minus(days16);
        org.joda.time.Days days19 = days11.minus((-1));
        org.joda.time.DurationFieldType durationFieldType20 = days11.getFieldType();
        boolean boolean21 = days4.isGreaterThan(days11);
        org.joda.time.ReadableInterval readableInterval22 = null;
        org.joda.time.Days days23 = org.joda.time.Days.daysIn(readableInterval22);
        org.joda.time.Days days25 = days23.plus((int) (byte) 10);
        org.joda.time.Days days26 = days11.plus(days25);
        org.joda.time.ReadableInterval readableInterval27 = null;
        org.joda.time.Days days28 = org.joda.time.Days.daysIn(readableInterval27);
        int int30 = days28.getValue((int) (short) 0);
        org.joda.time.Days days31 = org.joda.time.Days.FIVE;
        org.joda.time.Days days32 = days28.minus(days31);
        org.joda.time.Days days33 = null;
        org.joda.time.Days days34 = days28.minus(days33);
        org.joda.time.Duration duration35 = days28.toStandardDuration();
        org.joda.time.Days days36 = days26.minus(days28);
        org.joda.time.Days days38 = days36.multipliedBy((int) (short) 0);
        int int39 = days38.size();
        org.joda.time.Days days41 = days38.dividedBy(52);
        org.junit.Assert.assertNotNull(days1);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(days4);
        org.junit.Assert.assertNotNull(days5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(durationFieldType9);
        org.junit.Assert.assertNotNull(days11);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(days14);
        org.junit.Assert.assertNotNull(days15);
        org.junit.Assert.assertNotNull(days17);
        org.junit.Assert.assertNotNull(days19);
        org.junit.Assert.assertNotNull(durationFieldType20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(days23);
        org.junit.Assert.assertNotNull(days25);
        org.junit.Assert.assertNotNull(days26);
        org.junit.Assert.assertNotNull(days28);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertNotNull(days31);
        org.junit.Assert.assertNotNull(days32);
        org.junit.Assert.assertNotNull(days34);
        org.junit.Assert.assertNotNull(duration35);
        org.junit.Assert.assertNotNull(days36);
        org.junit.Assert.assertNotNull(days38);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 1 + "'", int39 == 1);
        org.junit.Assert.assertNotNull(days41);
    }

    @Test
    public void test0419() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0419");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Days days1 = org.joda.time.Days.daysIn(readableInterval0);
        int int3 = days1.getValue((int) (short) 0);
        org.joda.time.Days days4 = org.joda.time.Days.FIVE;
        org.joda.time.Days days5 = days1.minus(days4);
        org.joda.time.Days days6 = null;
        org.joda.time.Days days7 = days1.minus(days6);
        org.joda.time.Days days9 = days7.minus(100);
        org.joda.time.ReadableInterval readableInterval10 = null;
        org.joda.time.Days days11 = org.joda.time.Days.daysIn(readableInterval10);
        int int13 = days11.getValue((int) (short) 0);
        org.joda.time.Days days14 = org.joda.time.Days.FIVE;
        org.joda.time.Days days15 = days11.minus(days14);
        org.joda.time.Days days16 = null;
        org.joda.time.Days days17 = days11.minus(days16);
        org.joda.time.Days days19 = days11.minus((-1));
        org.joda.time.Days days20 = days7.plus(days11);
        org.joda.time.Days days21 = org.joda.time.Days.standardDaysIn((org.joda.time.ReadablePeriod) days11);
        org.joda.time.ReadableInterval readableInterval22 = null;
        org.joda.time.Days days23 = org.joda.time.Days.daysIn(readableInterval22);
        int int25 = days23.getValue((int) (short) 0);
        org.joda.time.Days days26 = org.joda.time.Days.FIVE;
        org.joda.time.Days days27 = days23.minus(days26);
        org.joda.time.DurationFieldType durationFieldType28 = null;
        boolean boolean29 = days26.isSupported(durationFieldType28);
        org.joda.time.DurationFieldType durationFieldType31 = days26.getFieldType(0);
        org.joda.time.ReadableInterval readableInterval32 = null;
        org.joda.time.Days days33 = org.joda.time.Days.daysIn(readableInterval32);
        int int35 = days33.getValue((int) (short) 0);
        org.joda.time.Days days36 = org.joda.time.Days.FIVE;
        org.joda.time.Days days37 = days33.minus(days36);
        org.joda.time.Days days38 = null;
        org.joda.time.Days days39 = days33.minus(days38);
        org.joda.time.Days days41 = days33.minus((-1));
        org.joda.time.DurationFieldType durationFieldType42 = days33.getFieldType();
        boolean boolean43 = days26.isGreaterThan(days33);
        org.joda.time.ReadableInterval readableInterval44 = null;
        org.joda.time.Days days45 = org.joda.time.Days.daysIn(readableInterval44);
        org.joda.time.Days days47 = days45.plus((int) (byte) 10);
        org.joda.time.Days days48 = days33.plus(days47);
        boolean boolean49 = days21.isGreaterThan(days47);
        org.junit.Assert.assertNotNull(days1);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(days4);
        org.junit.Assert.assertNotNull(days5);
        org.junit.Assert.assertNotNull(days7);
        org.junit.Assert.assertNotNull(days9);
        org.junit.Assert.assertNotNull(days11);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(days14);
        org.junit.Assert.assertNotNull(days15);
        org.junit.Assert.assertNotNull(days17);
        org.junit.Assert.assertNotNull(days19);
        org.junit.Assert.assertNotNull(days20);
        org.junit.Assert.assertNotNull(days21);
        org.junit.Assert.assertNotNull(days23);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertNotNull(days26);
        org.junit.Assert.assertNotNull(days27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(durationFieldType31);
        org.junit.Assert.assertNotNull(days33);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertNotNull(days36);
        org.junit.Assert.assertNotNull(days37);
        org.junit.Assert.assertNotNull(days39);
        org.junit.Assert.assertNotNull(days41);
        org.junit.Assert.assertNotNull(durationFieldType42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(days45);
        org.junit.Assert.assertNotNull(days47);
        org.junit.Assert.assertNotNull(days48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
    }

    @Test
    public void test0420() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0420");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Days days1 = org.joda.time.Days.daysIn(readableInterval0);
        int int3 = days1.getValue((int) (short) 0);
        org.joda.time.Days days4 = org.joda.time.Days.FIVE;
        org.joda.time.Days days5 = days1.minus(days4);
        org.joda.time.ReadableInterval readableInterval6 = null;
        org.joda.time.Days days7 = org.joda.time.Days.daysIn(readableInterval6);
        int int9 = days7.getValue((int) (short) 0);
        int int10 = days1.compareTo((org.joda.time.base.BaseSingleFieldPeriod) days7);
        org.joda.time.ReadableInterval readableInterval11 = null;
        org.joda.time.Days days12 = org.joda.time.Days.daysIn(readableInterval11);
        int int14 = days12.getValue((int) (short) 0);
        org.joda.time.Days days15 = org.joda.time.Days.FIVE;
        org.joda.time.Days days16 = days12.minus(days15);
        org.joda.time.DurationFieldType durationFieldType17 = null;
        int int18 = days15.get(durationFieldType17);
        org.joda.time.DurationFieldType durationFieldType19 = null;
        int int20 = days15.get(durationFieldType19);
        boolean boolean22 = days15.equals((java.lang.Object) false);
        boolean boolean23 = days7.equals((java.lang.Object) days15);
        org.joda.time.ReadableInterval readableInterval24 = null;
        org.joda.time.Days days25 = org.joda.time.Days.daysIn(readableInterval24);
        int int27 = days25.getValue((int) (short) 0);
        org.joda.time.Days days28 = org.joda.time.Days.FIVE;
        org.joda.time.Days days29 = days25.minus(days28);
        org.joda.time.Days days30 = null;
        org.joda.time.Days days31 = days25.minus(days30);
        org.joda.time.Days days33 = days25.minus((-1));
        int int34 = days25.size();
        org.joda.time.Days days35 = days15.minus(days25);
        org.joda.time.Days days37 = org.joda.time.Days.days((int) (byte) 10);
        org.joda.time.ReadableInterval readableInterval38 = null;
        org.joda.time.Days days39 = org.joda.time.Days.daysIn(readableInterval38);
        org.joda.time.Days days41 = days39.plus((int) (byte) 10);
        org.joda.time.MutablePeriod mutablePeriod42 = days39.toMutablePeriod();
        org.joda.time.Days days44 = days39.plus((int) (short) -1);
        org.joda.time.ReadableInterval readableInterval45 = null;
        org.joda.time.Days days46 = org.joda.time.Days.daysIn(readableInterval45);
        int int48 = days46.getValue((int) (short) 0);
        org.joda.time.Days days49 = org.joda.time.Days.FIVE;
        org.joda.time.Days days50 = days46.minus(days49);
        org.joda.time.Days days51 = null;
        org.joda.time.Days days52 = days46.minus(days51);
        org.joda.time.Days days54 = days46.minus((-1));
        int int55 = days46.size();
        boolean boolean56 = days39.isGreaterThan(days46);
        org.joda.time.DurationFieldType durationFieldType58 = days46.getFieldType((int) (short) 0);
        int int59 = days37.get(durationFieldType58);
        boolean boolean60 = days25.isSupported(durationFieldType58);
        org.joda.time.PeriodType periodType61 = days25.getPeriodType();
        org.joda.time.ReadableInterval readableInterval62 = null;
        org.joda.time.Days days63 = org.joda.time.Days.daysIn(readableInterval62);
        int int65 = days63.getValue((int) (short) 0);
        org.joda.time.Days days66 = org.joda.time.Days.FIVE;
        org.joda.time.Days days67 = days63.minus(days66);
        org.joda.time.DurationFieldType durationFieldType68 = null;
        boolean boolean69 = days66.isSupported(durationFieldType68);
        org.joda.time.DurationFieldType durationFieldType71 = days66.getFieldType(0);
        org.joda.time.Period period72 = days66.toPeriod();
        int int74 = days66.getValue(0);
        org.joda.time.Days days75 = org.joda.time.Days.TWO;
        org.joda.time.DurationFieldType durationFieldType76 = days75.getFieldType();
        int int77 = days66.get(durationFieldType76);
        org.joda.time.Days days79 = days66.minus((int) (short) -1);
        org.joda.time.Days days81 = days66.minus((int) (short) -1);
        boolean boolean82 = days25.equals((java.lang.Object) days81);
        org.junit.Assert.assertNotNull(days1);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(days4);
        org.junit.Assert.assertNotNull(days5);
        org.junit.Assert.assertNotNull(days7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(days12);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNotNull(days15);
        org.junit.Assert.assertNotNull(days16);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(days25);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertNotNull(days28);
        org.junit.Assert.assertNotNull(days29);
        org.junit.Assert.assertNotNull(days31);
        org.junit.Assert.assertNotNull(days33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 1 + "'", int34 == 1);
        org.junit.Assert.assertNotNull(days35);
        org.junit.Assert.assertNotNull(days37);
        org.junit.Assert.assertNotNull(days39);
        org.junit.Assert.assertNotNull(days41);
        org.junit.Assert.assertNotNull(mutablePeriod42);
        org.junit.Assert.assertNotNull(days44);
        org.junit.Assert.assertNotNull(days46);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 0 + "'", int48 == 0);
        org.junit.Assert.assertNotNull(days49);
        org.junit.Assert.assertNotNull(days50);
        org.junit.Assert.assertNotNull(days52);
        org.junit.Assert.assertNotNull(days54);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 1 + "'", int55 == 1);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(durationFieldType58);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 10 + "'", int59 == 10);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(periodType61);
        org.junit.Assert.assertNotNull(days63);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 0 + "'", int65 == 0);
        org.junit.Assert.assertNotNull(days66);
        org.junit.Assert.assertNotNull(days67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(durationFieldType71);
        org.junit.Assert.assertNotNull(period72);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 5 + "'", int74 == 5);
        org.junit.Assert.assertNotNull(days75);
        org.junit.Assert.assertNotNull(durationFieldType76);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 5 + "'", int77 == 5);
        org.junit.Assert.assertNotNull(days79);
        org.junit.Assert.assertNotNull(days81);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
    }

    @Test
    public void test0421() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0421");
        org.joda.time.Days days0 = org.joda.time.Days.ZERO;
        org.joda.time.ReadableInterval readableInterval1 = null;
        org.joda.time.Days days2 = org.joda.time.Days.daysIn(readableInterval1);
        int int4 = days2.getValue((int) (short) 0);
        org.joda.time.Days days5 = org.joda.time.Days.FIVE;
        org.joda.time.Days days6 = days2.minus(days5);
        org.joda.time.Days days7 = null;
        org.joda.time.Days days8 = days2.minus(days7);
        org.joda.time.Duration duration9 = days2.toStandardDuration();
        org.joda.time.DurationFieldType durationFieldType10 = days2.getFieldType();
        org.joda.time.Days days11 = days0.minus(days2);
        org.joda.time.Days days13 = days11.plus((int) (byte) 100);
        org.joda.time.ReadableInterval readableInterval14 = null;
        org.joda.time.Days days15 = org.joda.time.Days.daysIn(readableInterval14);
        int int17 = days15.getValue((int) (short) 0);
        org.joda.time.ReadableInterval readableInterval18 = null;
        org.joda.time.Days days19 = org.joda.time.Days.daysIn(readableInterval18);
        int int21 = days19.getValue((int) (short) 0);
        org.joda.time.Days days22 = org.joda.time.Days.FIVE;
        org.joda.time.Days days23 = days19.minus(days22);
        int int24 = days15.compareTo((org.joda.time.base.BaseSingleFieldPeriod) days22);
        java.lang.String str25 = days15.toString();
        org.joda.time.Days days27 = days15.plus((int) '4');
        org.joda.time.ReadableInterval readableInterval28 = null;
        org.joda.time.Days days29 = org.joda.time.Days.daysIn(readableInterval28);
        int int31 = days29.getValue((int) (short) 0);
        org.joda.time.Days days32 = org.joda.time.Days.FIVE;
        org.joda.time.Days days33 = days29.minus(days32);
        org.joda.time.DurationFieldType durationFieldType34 = null;
        boolean boolean35 = days32.isSupported(durationFieldType34);
        org.joda.time.DurationFieldType durationFieldType37 = days32.getFieldType(0);
        org.joda.time.ReadableInterval readableInterval38 = null;
        org.joda.time.Days days39 = org.joda.time.Days.daysIn(readableInterval38);
        int int41 = days39.getValue((int) (short) 0);
        org.joda.time.Days days42 = org.joda.time.Days.FIVE;
        org.joda.time.Days days43 = days39.minus(days42);
        org.joda.time.Days days44 = null;
        org.joda.time.Days days45 = days39.minus(days44);
        org.joda.time.Days days47 = days39.minus((-1));
        org.joda.time.DurationFieldType durationFieldType48 = days39.getFieldType();
        boolean boolean49 = days32.isGreaterThan(days39);
        org.joda.time.ReadableInterval readableInterval50 = null;
        org.joda.time.Days days51 = org.joda.time.Days.daysIn(readableInterval50);
        org.joda.time.Days days53 = days51.plus((int) (byte) 10);
        org.joda.time.Days days54 = days39.plus(days53);
        org.joda.time.ReadableInterval readableInterval55 = null;
        org.joda.time.Days days56 = org.joda.time.Days.daysIn(readableInterval55);
        int int58 = days56.getValue((int) (short) 0);
        org.joda.time.Days days59 = org.joda.time.Days.FIVE;
        org.joda.time.Days days60 = days56.minus(days59);
        org.joda.time.Days days61 = null;
        org.joda.time.Days days62 = days56.minus(days61);
        org.joda.time.Duration duration63 = days56.toStandardDuration();
        org.joda.time.Days days64 = days54.minus(days56);
        org.joda.time.Duration duration65 = days64.toStandardDuration();
        org.joda.time.PeriodType periodType66 = days64.getPeriodType();
        org.joda.time.Days days67 = days27.plus(days64);
        org.joda.time.Days days68 = org.joda.time.Days.SIX;
        org.joda.time.Days days70 = days68.plus(100);
        org.joda.time.ReadableInterval readableInterval71 = null;
        org.joda.time.Days days72 = org.joda.time.Days.daysIn(readableInterval71);
        int int74 = days72.getValue((int) (short) 0);
        org.joda.time.Days days75 = org.joda.time.Days.FIVE;
        org.joda.time.Days days76 = days72.minus(days75);
        org.joda.time.Days days77 = null;
        org.joda.time.Days days78 = days72.minus(days77);
        org.joda.time.Days days80 = days72.minus((-1));
        org.joda.time.DurationFieldType durationFieldType81 = days72.getFieldType();
        int int82 = days68.get(durationFieldType81);
        int int83 = days64.get(durationFieldType81);
        org.joda.time.Days days85 = days64.dividedBy(10);
        int int86 = days11.compareTo((org.joda.time.base.BaseSingleFieldPeriod) days85);
        org.joda.time.Duration duration87 = days11.toStandardDuration();
        org.junit.Assert.assertNotNull(days0);
        org.junit.Assert.assertNotNull(days2);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(days5);
        org.junit.Assert.assertNotNull(days6);
        org.junit.Assert.assertNotNull(days8);
        org.junit.Assert.assertNotNull(duration9);
        org.junit.Assert.assertNotNull(durationFieldType10);
        org.junit.Assert.assertNotNull(days11);
        org.junit.Assert.assertNotNull(days13);
        org.junit.Assert.assertNotNull(days15);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNotNull(days19);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertNotNull(days22);
        org.junit.Assert.assertNotNull(days23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "P0D" + "'", str25, "P0D");
        org.junit.Assert.assertNotNull(days27);
        org.junit.Assert.assertNotNull(days29);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertNotNull(days32);
        org.junit.Assert.assertNotNull(days33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(durationFieldType37);
        org.junit.Assert.assertNotNull(days39);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0);
        org.junit.Assert.assertNotNull(days42);
        org.junit.Assert.assertNotNull(days43);
        org.junit.Assert.assertNotNull(days45);
        org.junit.Assert.assertNotNull(days47);
        org.junit.Assert.assertNotNull(durationFieldType48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(days51);
        org.junit.Assert.assertNotNull(days53);
        org.junit.Assert.assertNotNull(days54);
        org.junit.Assert.assertNotNull(days56);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 0 + "'", int58 == 0);
        org.junit.Assert.assertNotNull(days59);
        org.junit.Assert.assertNotNull(days60);
        org.junit.Assert.assertNotNull(days62);
        org.junit.Assert.assertNotNull(duration63);
        org.junit.Assert.assertNotNull(days64);
        org.junit.Assert.assertNotNull(duration65);
        org.junit.Assert.assertNotNull(periodType66);
        org.junit.Assert.assertNotNull(days67);
        org.junit.Assert.assertNotNull(days68);
        org.junit.Assert.assertNotNull(days70);
        org.junit.Assert.assertNotNull(days72);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 0 + "'", int74 == 0);
        org.junit.Assert.assertNotNull(days75);
        org.junit.Assert.assertNotNull(days76);
        org.junit.Assert.assertNotNull(days78);
        org.junit.Assert.assertNotNull(days80);
        org.junit.Assert.assertNotNull(durationFieldType81);
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + 6 + "'", int82 == 6);
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + 10 + "'", int83 == 10);
        org.junit.Assert.assertNotNull(days85);
        org.junit.Assert.assertTrue("'" + int86 + "' != '" + (-1) + "'", int86 == (-1));
        org.junit.Assert.assertNotNull(duration87);
    }

    @Test
    public void test0422() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0422");
        org.joda.time.Days days0 = org.joda.time.Days.TWO;
        org.joda.time.DurationFieldType durationFieldType1 = days0.getFieldType();
        org.joda.time.Days days3 = days0.minus((int) (byte) 1);
        org.joda.time.DurationFieldType durationFieldType4 = days0.getFieldType();
        org.junit.Assert.assertNotNull(days0);
        org.junit.Assert.assertNotNull(durationFieldType1);
        org.junit.Assert.assertNotNull(days3);
        org.junit.Assert.assertNotNull(durationFieldType4);
    }

    @Test
    public void test0423() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0423");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Days days1 = org.joda.time.Days.daysIn(readableInterval0);
        int int3 = days1.getValue((int) (short) 0);
        org.joda.time.ReadableInterval readableInterval4 = null;
        org.joda.time.Days days5 = org.joda.time.Days.daysIn(readableInterval4);
        int int7 = days5.getValue((int) (short) 0);
        org.joda.time.Days days8 = org.joda.time.Days.FIVE;
        org.joda.time.Days days9 = days5.minus(days8);
        int int10 = days1.compareTo((org.joda.time.base.BaseSingleFieldPeriod) days8);
        org.joda.time.DurationFieldType durationFieldType11 = days8.getFieldType();
        int int12 = days8.size();
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Days days14 = days8.minus((-2147483648));
            org.junit.Assert.fail("Expected exception of type java.lang.ArithmeticException; message: Integer.MIN_VALUE cannot be negated");
        } catch (java.lang.ArithmeticException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(days1);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(days5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(days8);
        org.junit.Assert.assertNotNull(days9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertNotNull(durationFieldType11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
    }

    @Test
    public void test0424() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0424");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Days days1 = org.joda.time.Days.daysIn(readableInterval0);
        int int3 = days1.getValue((int) (short) 0);
        org.joda.time.ReadableInterval readableInterval4 = null;
        org.joda.time.Days days5 = org.joda.time.Days.daysIn(readableInterval4);
        int int7 = days5.getValue((int) (short) 0);
        org.joda.time.Days days8 = org.joda.time.Days.FIVE;
        org.joda.time.Days days9 = days5.minus(days8);
        int int10 = days1.compareTo((org.joda.time.base.BaseSingleFieldPeriod) days8);
        java.lang.String str11 = days1.toString();
        org.joda.time.Days days13 = days1.plus((int) '4');
        org.joda.time.PeriodType periodType14 = days13.getPeriodType();
        int int15 = days13.getDays();
        org.joda.time.Days days17 = days13.minus((int) ' ');
        org.joda.time.ReadableInterval readableInterval18 = null;
        org.joda.time.Days days19 = org.joda.time.Days.daysIn(readableInterval18);
        org.joda.time.Days days21 = days19.plus((int) (byte) 10);
        org.joda.time.Days days23 = days21.dividedBy((int) 'a');
        org.joda.time.Days days25 = days21.dividedBy(5);
        org.joda.time.Days days27 = days21.plus((int) (byte) -1);
        org.joda.time.Days days28 = days13.plus(days21);
        org.joda.time.DurationFieldType durationFieldType29 = days28.getFieldType();
        org.joda.time.Days days31 = org.joda.time.Days.days((int) 'a');
        org.joda.time.Days days32 = org.joda.time.Days.SIX;
        org.joda.time.Days days34 = days32.plus(100);
        org.joda.time.ReadableInterval readableInterval35 = null;
        org.joda.time.Days days36 = org.joda.time.Days.daysIn(readableInterval35);
        int int38 = days36.getValue((int) (short) 0);
        org.joda.time.Days days39 = org.joda.time.Days.FIVE;
        org.joda.time.Days days40 = days36.minus(days39);
        org.joda.time.Days days41 = null;
        org.joda.time.Days days42 = days36.minus(days41);
        org.joda.time.Days days44 = days36.minus((-1));
        org.joda.time.DurationFieldType durationFieldType45 = days36.getFieldType();
        int int46 = days32.get(durationFieldType45);
        int int47 = days31.get(durationFieldType45);
        org.joda.time.Days days49 = org.joda.time.Days.days((-1));
        boolean boolean50 = days31.isGreaterThan(days49);
        boolean boolean51 = days28.isGreaterThan(days31);
        org.joda.time.Days days52 = org.joda.time.Days.standardDaysIn((org.joda.time.ReadablePeriod) days28);
        org.joda.time.ReadableInterval readableInterval53 = null;
        org.joda.time.Days days54 = org.joda.time.Days.daysIn(readableInterval53);
        int int56 = days54.getValue((int) (short) 0);
        org.joda.time.Days days57 = org.joda.time.Days.FIVE;
        org.joda.time.Days days58 = days54.minus(days57);
        org.joda.time.DurationFieldType durationFieldType59 = null;
        boolean boolean60 = days57.isSupported(durationFieldType59);
        org.joda.time.DurationFieldType durationFieldType62 = days57.getFieldType(0);
        org.joda.time.Period period63 = days57.toPeriod();
        int int65 = days57.getValue(0);
        org.joda.time.Days days66 = org.joda.time.Days.TWO;
        org.joda.time.DurationFieldType durationFieldType67 = days66.getFieldType();
        int int68 = days57.get(durationFieldType67);
        org.joda.time.Days days70 = days57.minus((int) (short) -1);
        org.joda.time.Period period71 = days57.toPeriod();
        boolean boolean72 = days28.isGreaterThan(days57);
        org.joda.time.ReadableInterval readableInterval73 = null;
        org.joda.time.Days days74 = org.joda.time.Days.daysIn(readableInterval73);
        int int76 = days74.getValue((int) (short) 0);
        org.joda.time.Days days77 = org.joda.time.Days.FIVE;
        org.joda.time.Days days78 = days74.minus(days77);
        org.joda.time.DurationFieldType durationFieldType79 = null;
        int int80 = days77.get(durationFieldType79);
        org.joda.time.DurationFieldType durationFieldType81 = null;
        int int82 = days77.get(durationFieldType81);
        boolean boolean84 = days77.equals((java.lang.Object) false);
        org.joda.time.Days days86 = days77.minus((int) (short) 10);
        org.joda.time.Days days88 = days86.minus(0);
        org.joda.time.Days days90 = days88.plus((int) ' ');
        boolean boolean91 = days28.isGreaterThan(days90);
        // The following exception was thrown during execution in test generation
        try {
            int int93 = days90.getValue((int) (short) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 1");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(days1);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(days5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(days8);
        org.junit.Assert.assertNotNull(days9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "P0D" + "'", str11, "P0D");
        org.junit.Assert.assertNotNull(days13);
        org.junit.Assert.assertNotNull(periodType14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 52 + "'", int15 == 52);
        org.junit.Assert.assertNotNull(days17);
        org.junit.Assert.assertNotNull(days19);
        org.junit.Assert.assertNotNull(days21);
        org.junit.Assert.assertNotNull(days23);
        org.junit.Assert.assertNotNull(days25);
        org.junit.Assert.assertNotNull(days27);
        org.junit.Assert.assertNotNull(days28);
        org.junit.Assert.assertNotNull(durationFieldType29);
        org.junit.Assert.assertNotNull(days31);
        org.junit.Assert.assertNotNull(days32);
        org.junit.Assert.assertNotNull(days34);
        org.junit.Assert.assertNotNull(days36);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 0 + "'", int38 == 0);
        org.junit.Assert.assertNotNull(days39);
        org.junit.Assert.assertNotNull(days40);
        org.junit.Assert.assertNotNull(days42);
        org.junit.Assert.assertNotNull(days44);
        org.junit.Assert.assertNotNull(durationFieldType45);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 6 + "'", int46 == 6);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 97 + "'", int47 == 97);
        org.junit.Assert.assertNotNull(days49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(days52);
        org.junit.Assert.assertNotNull(days54);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 0 + "'", int56 == 0);
        org.junit.Assert.assertNotNull(days57);
        org.junit.Assert.assertNotNull(days58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(durationFieldType62);
        org.junit.Assert.assertNotNull(period63);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 5 + "'", int65 == 5);
        org.junit.Assert.assertNotNull(days66);
        org.junit.Assert.assertNotNull(durationFieldType67);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 5 + "'", int68 == 5);
        org.junit.Assert.assertNotNull(days70);
        org.junit.Assert.assertNotNull(period71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertNotNull(days74);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + 0 + "'", int76 == 0);
        org.junit.Assert.assertNotNull(days77);
        org.junit.Assert.assertNotNull(days78);
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + 0 + "'", int80 == 0);
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + 0 + "'", int82 == 0);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertNotNull(days86);
        org.junit.Assert.assertNotNull(days88);
        org.junit.Assert.assertNotNull(days90);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + true + "'", boolean91 == true);
    }

    @Test
    public void test0425() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0425");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Days days1 = org.joda.time.Days.daysIn(readableInterval0);
        int int3 = days1.getValue((int) (short) 0);
        org.joda.time.Days days4 = org.joda.time.Days.FIVE;
        org.joda.time.Days days5 = days1.minus(days4);
        org.joda.time.ReadableInterval readableInterval6 = null;
        org.joda.time.Days days7 = org.joda.time.Days.daysIn(readableInterval6);
        int int9 = days7.getValue((int) (short) 0);
        int int10 = days1.compareTo((org.joda.time.base.BaseSingleFieldPeriod) days7);
        org.joda.time.ReadableInterval readableInterval11 = null;
        org.joda.time.Days days12 = org.joda.time.Days.daysIn(readableInterval11);
        int int14 = days12.getValue((int) (short) 0);
        org.joda.time.Days days15 = org.joda.time.Days.FIVE;
        org.joda.time.Days days16 = days12.minus(days15);
        org.joda.time.DurationFieldType durationFieldType17 = null;
        int int18 = days15.get(durationFieldType17);
        org.joda.time.DurationFieldType durationFieldType19 = null;
        int int20 = days15.get(durationFieldType19);
        boolean boolean22 = days15.equals((java.lang.Object) false);
        boolean boolean23 = days7.equals((java.lang.Object) days15);
        org.joda.time.ReadableInterval readableInterval24 = null;
        org.joda.time.Days days25 = org.joda.time.Days.daysIn(readableInterval24);
        int int27 = days25.getValue((int) (short) 0);
        org.joda.time.Days days28 = org.joda.time.Days.FIVE;
        org.joda.time.Days days29 = days25.minus(days28);
        org.joda.time.DurationFieldType durationFieldType30 = null;
        int int31 = days28.get(durationFieldType30);
        boolean boolean32 = days7.isGreaterThan(days28);
        org.junit.Assert.assertNotNull(days1);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(days4);
        org.junit.Assert.assertNotNull(days5);
        org.junit.Assert.assertNotNull(days7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(days12);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNotNull(days15);
        org.junit.Assert.assertNotNull(days16);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(days25);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertNotNull(days28);
        org.junit.Assert.assertNotNull(days29);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
    }

    @Test
    public void test0426() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0426");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Days days1 = org.joda.time.Days.daysIn(readableInterval0);
        org.joda.time.Days days3 = days1.plus((int) (byte) 10);
        org.joda.time.Days days5 = days3.dividedBy((int) 'a');
        org.joda.time.Days days7 = days3.dividedBy(5);
        org.joda.time.Days days9 = days3.plus((int) (byte) -1);
        org.joda.time.Days days11 = days3.minus((int) (byte) 100);
        org.joda.time.Days days12 = days11.negated();
        int int13 = days11.size();
        org.joda.time.ReadableInterval readableInterval14 = null;
        org.joda.time.Days days15 = org.joda.time.Days.daysIn(readableInterval14);
        int int17 = days15.getValue((int) (short) 0);
        org.joda.time.Days days18 = org.joda.time.Days.FIVE;
        org.joda.time.Days days19 = days15.minus(days18);
        org.joda.time.Days days20 = null;
        org.joda.time.Days days21 = days15.minus(days20);
        org.joda.time.Duration duration22 = days15.toStandardDuration();
        org.joda.time.DurationFieldType durationFieldType23 = days15.getFieldType();
        org.joda.time.Days days24 = days11.minus(days15);
        org.joda.time.ReadableInterval readableInterval25 = null;
        org.joda.time.Days days26 = org.joda.time.Days.daysIn(readableInterval25);
        org.joda.time.Days days28 = days26.plus((int) (byte) 10);
        int int29 = days28.getDays();
        int int30 = days28.getDays();
        boolean boolean31 = days15.equals((java.lang.Object) days28);
        org.joda.time.Days days33 = days15.dividedBy(8);
        org.joda.time.ReadableInterval readableInterval34 = null;
        org.joda.time.Days days35 = org.joda.time.Days.daysIn(readableInterval34);
        org.joda.time.Days days37 = days35.plus((int) (byte) 10);
        org.joda.time.Days days39 = days37.dividedBy((int) 'a');
        org.joda.time.Days days41 = days37.dividedBy(5);
        org.joda.time.Days days43 = days37.plus((int) (byte) -1);
        org.joda.time.Days days45 = days37.dividedBy((int) (byte) -1);
        org.joda.time.Days days47 = days45.minus((int) (short) 100);
        org.joda.time.DurationFieldType durationFieldType48 = days47.getFieldType();
        boolean boolean49 = days33.isLessThan(days47);
        java.lang.Class<?> wildcardClass50 = days33.getClass();
        org.junit.Assert.assertNotNull(days1);
        org.junit.Assert.assertNotNull(days3);
        org.junit.Assert.assertNotNull(days5);
        org.junit.Assert.assertNotNull(days7);
        org.junit.Assert.assertNotNull(days9);
        org.junit.Assert.assertNotNull(days11);
        org.junit.Assert.assertNotNull(days12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertNotNull(days15);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNotNull(days18);
        org.junit.Assert.assertNotNull(days19);
        org.junit.Assert.assertNotNull(days21);
        org.junit.Assert.assertNotNull(duration22);
        org.junit.Assert.assertNotNull(durationFieldType23);
        org.junit.Assert.assertNotNull(days24);
        org.junit.Assert.assertNotNull(days26);
        org.junit.Assert.assertNotNull(days28);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 10 + "'", int29 == 10);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 10 + "'", int30 == 10);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(days33);
        org.junit.Assert.assertNotNull(days35);
        org.junit.Assert.assertNotNull(days37);
        org.junit.Assert.assertNotNull(days39);
        org.junit.Assert.assertNotNull(days41);
        org.junit.Assert.assertNotNull(days43);
        org.junit.Assert.assertNotNull(days45);
        org.junit.Assert.assertNotNull(days47);
        org.junit.Assert.assertNotNull(durationFieldType48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(wildcardClass50);
    }

    @Test
    public void test0427() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0427");
        org.joda.time.Days days0 = org.joda.time.Days.SIX;
        org.joda.time.Days days2 = days0.plus(100);
        org.joda.time.ReadableInterval readableInterval3 = null;
        org.joda.time.Days days4 = org.joda.time.Days.daysIn(readableInterval3);
        org.joda.time.Days days6 = days4.plus((int) (byte) 10);
        org.joda.time.Days days8 = days6.dividedBy((int) 'a');
        org.joda.time.Days days10 = days6.dividedBy(5);
        org.joda.time.Days days12 = days6.plus((int) (byte) -1);
        org.joda.time.Days days14 = days6.minus((int) (byte) 100);
        org.joda.time.Days days15 = days14.negated();
        int int16 = days14.size();
        org.joda.time.ReadableInterval readableInterval17 = null;
        org.joda.time.Days days18 = org.joda.time.Days.daysIn(readableInterval17);
        int int20 = days18.getValue((int) (short) 0);
        org.joda.time.Days days21 = org.joda.time.Days.FIVE;
        org.joda.time.Days days22 = days18.minus(days21);
        org.joda.time.Days days23 = null;
        org.joda.time.Days days24 = days18.minus(days23);
        org.joda.time.Duration duration25 = days18.toStandardDuration();
        org.joda.time.DurationFieldType durationFieldType26 = days18.getFieldType();
        org.joda.time.Days days27 = days14.minus(days18);
        org.joda.time.ReadableInterval readableInterval28 = null;
        org.joda.time.Days days29 = org.joda.time.Days.daysIn(readableInterval28);
        org.joda.time.Days days31 = days29.plus((int) (byte) 10);
        int int32 = days31.getDays();
        int int33 = days31.getDays();
        boolean boolean34 = days18.equals((java.lang.Object) days31);
        org.joda.time.Days days35 = days0.minus(days18);
        org.joda.time.Days days37 = days0.minus((int) (byte) 1);
        org.junit.Assert.assertNotNull(days0);
        org.junit.Assert.assertNotNull(days2);
        org.junit.Assert.assertNotNull(days4);
        org.junit.Assert.assertNotNull(days6);
        org.junit.Assert.assertNotNull(days8);
        org.junit.Assert.assertNotNull(days10);
        org.junit.Assert.assertNotNull(days12);
        org.junit.Assert.assertNotNull(days14);
        org.junit.Assert.assertNotNull(days15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 1 + "'", int16 == 1);
        org.junit.Assert.assertNotNull(days18);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertNotNull(days21);
        org.junit.Assert.assertNotNull(days22);
        org.junit.Assert.assertNotNull(days24);
        org.junit.Assert.assertNotNull(duration25);
        org.junit.Assert.assertNotNull(durationFieldType26);
        org.junit.Assert.assertNotNull(days27);
        org.junit.Assert.assertNotNull(days29);
        org.junit.Assert.assertNotNull(days31);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 10 + "'", int32 == 10);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 10 + "'", int33 == 10);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(days35);
        org.junit.Assert.assertNotNull(days37);
    }

    @Test
    public void test0428() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0428");
        org.joda.time.Days days0 = org.joda.time.Days.ZERO;
        org.joda.time.ReadableInterval readableInterval1 = null;
        org.joda.time.Days days2 = org.joda.time.Days.daysIn(readableInterval1);
        int int4 = days2.getValue((int) (short) 0);
        org.joda.time.Days days5 = org.joda.time.Days.FIVE;
        org.joda.time.Days days6 = days2.minus(days5);
        org.joda.time.Days days7 = null;
        org.joda.time.Days days8 = days2.minus(days7);
        org.joda.time.Duration duration9 = days2.toStandardDuration();
        org.joda.time.DurationFieldType durationFieldType10 = days2.getFieldType();
        org.joda.time.Days days11 = days0.minus(days2);
        int int12 = days11.getDays();
        org.joda.time.ReadableInterval readableInterval13 = null;
        org.joda.time.Days days14 = org.joda.time.Days.daysIn(readableInterval13);
        int int16 = days14.getValue((int) (short) 0);
        org.joda.time.Days days17 = org.joda.time.Days.FIVE;
        org.joda.time.Days days18 = days14.minus(days17);
        org.joda.time.DurationFieldType durationFieldType19 = null;
        boolean boolean20 = days17.isSupported(durationFieldType19);
        org.joda.time.DurationFieldType durationFieldType22 = days17.getFieldType(0);
        org.joda.time.ReadableInterval readableInterval23 = null;
        org.joda.time.Days days24 = org.joda.time.Days.daysIn(readableInterval23);
        int int26 = days24.getValue((int) (short) 0);
        org.joda.time.Days days27 = org.joda.time.Days.FIVE;
        org.joda.time.Days days28 = days24.minus(days27);
        org.joda.time.Days days29 = null;
        org.joda.time.Days days30 = days24.minus(days29);
        org.joda.time.Days days32 = days24.minus((-1));
        org.joda.time.DurationFieldType durationFieldType33 = days24.getFieldType();
        boolean boolean34 = days17.isGreaterThan(days24);
        org.joda.time.ReadableInterval readableInterval35 = null;
        org.joda.time.Days days36 = org.joda.time.Days.daysIn(readableInterval35);
        org.joda.time.Days days38 = days36.plus((int) (byte) 10);
        org.joda.time.Days days39 = days24.plus(days38);
        org.joda.time.ReadableInterval readableInterval40 = null;
        org.joda.time.Days days41 = org.joda.time.Days.daysIn(readableInterval40);
        int int43 = days41.getValue((int) (short) 0);
        org.joda.time.Days days44 = org.joda.time.Days.FIVE;
        org.joda.time.Days days45 = days41.minus(days44);
        org.joda.time.Days days46 = null;
        org.joda.time.Days days47 = days41.minus(days46);
        org.joda.time.Duration duration48 = days41.toStandardDuration();
        org.joda.time.Days days49 = days39.minus(days41);
        org.joda.time.Days days51 = days41.multipliedBy(5);
        org.joda.time.ReadableInterval readableInterval52 = null;
        org.joda.time.Days days53 = org.joda.time.Days.daysIn(readableInterval52);
        int int55 = days53.getValue((int) (short) 0);
        org.joda.time.Days days56 = org.joda.time.Days.FIVE;
        org.joda.time.Days days57 = days53.minus(days56);
        org.joda.time.Days days58 = null;
        org.joda.time.Days days59 = days53.minus(days58);
        org.joda.time.Duration duration60 = days53.toStandardDuration();
        org.joda.time.DurationFieldType durationFieldType61 = days53.getFieldType();
        boolean boolean62 = days51.isSupported(durationFieldType61);
        org.joda.time.ReadableInterval readableInterval63 = null;
        org.joda.time.Days days64 = org.joda.time.Days.daysIn(readableInterval63);
        int int66 = days64.getValue((int) (short) 0);
        org.joda.time.Days days67 = org.joda.time.Days.FIVE;
        org.joda.time.Days days68 = days64.minus(days67);
        org.joda.time.Days days69 = null;
        org.joda.time.Days days70 = days64.minus(days69);
        org.joda.time.Days days72 = days64.minus((-1));
        org.joda.time.DurationFieldType durationFieldType73 = days64.getFieldType();
        org.joda.time.ReadableInterval readableInterval74 = null;
        org.joda.time.Days days75 = org.joda.time.Days.daysIn(readableInterval74);
        org.joda.time.Days days77 = days75.plus((int) (byte) 10);
        org.joda.time.Days days79 = days77.dividedBy((int) 'a');
        org.joda.time.Days days81 = days77.plus((int) ' ');
        org.joda.time.Days days82 = org.joda.time.Days.standardDaysIn((org.joda.time.ReadablePeriod) days81);
        int int83 = days82.size();
        boolean boolean84 = days64.isGreaterThan(days82);
        org.joda.time.DurationFieldType durationFieldType85 = days64.getFieldType();
        boolean boolean86 = days51.isSupported(durationFieldType85);
        boolean boolean87 = days11.isSupported(durationFieldType85);
        // The following exception was thrown during execution in test generation
        try {
            int int89 = days11.getValue(8);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 8");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(days0);
        org.junit.Assert.assertNotNull(days2);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(days5);
        org.junit.Assert.assertNotNull(days6);
        org.junit.Assert.assertNotNull(days8);
        org.junit.Assert.assertNotNull(duration9);
        org.junit.Assert.assertNotNull(durationFieldType10);
        org.junit.Assert.assertNotNull(days11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNotNull(days14);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertNotNull(days17);
        org.junit.Assert.assertNotNull(days18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(durationFieldType22);
        org.junit.Assert.assertNotNull(days24);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertNotNull(days27);
        org.junit.Assert.assertNotNull(days28);
        org.junit.Assert.assertNotNull(days30);
        org.junit.Assert.assertNotNull(days32);
        org.junit.Assert.assertNotNull(durationFieldType33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(days36);
        org.junit.Assert.assertNotNull(days38);
        org.junit.Assert.assertNotNull(days39);
        org.junit.Assert.assertNotNull(days41);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0);
        org.junit.Assert.assertNotNull(days44);
        org.junit.Assert.assertNotNull(days45);
        org.junit.Assert.assertNotNull(days47);
        org.junit.Assert.assertNotNull(duration48);
        org.junit.Assert.assertNotNull(days49);
        org.junit.Assert.assertNotNull(days51);
        org.junit.Assert.assertNotNull(days53);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 0 + "'", int55 == 0);
        org.junit.Assert.assertNotNull(days56);
        org.junit.Assert.assertNotNull(days57);
        org.junit.Assert.assertNotNull(days59);
        org.junit.Assert.assertNotNull(duration60);
        org.junit.Assert.assertNotNull(durationFieldType61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNotNull(days64);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 0 + "'", int66 == 0);
        org.junit.Assert.assertNotNull(days67);
        org.junit.Assert.assertNotNull(days68);
        org.junit.Assert.assertNotNull(days70);
        org.junit.Assert.assertNotNull(days72);
        org.junit.Assert.assertNotNull(durationFieldType73);
        org.junit.Assert.assertNotNull(days75);
        org.junit.Assert.assertNotNull(days77);
        org.junit.Assert.assertNotNull(days79);
        org.junit.Assert.assertNotNull(days81);
        org.junit.Assert.assertNotNull(days82);
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + 1 + "'", int83 == 1);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertNotNull(durationFieldType85);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + true + "'", boolean87 == true);
    }

    @Test
    public void test0429() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0429");
        org.joda.time.Days days0 = org.joda.time.Days.FIVE;
        org.joda.time.ReadableInterval readableInterval1 = null;
        org.joda.time.Days days2 = org.joda.time.Days.daysIn(readableInterval1);
        org.joda.time.Days days4 = days2.plus((int) (byte) 10);
        org.joda.time.DurationFieldType durationFieldType5 = days4.getFieldType();
        org.joda.time.Days days7 = days4.plus(0);
        org.joda.time.ReadableInterval readableInterval8 = null;
        org.joda.time.Days days9 = org.joda.time.Days.daysIn(readableInterval8);
        int int11 = days9.getValue((int) (short) 0);
        org.joda.time.Days days12 = org.joda.time.Days.FIVE;
        org.joda.time.Days days13 = days9.minus(days12);
        org.joda.time.DurationFieldType durationFieldType14 = null;
        boolean boolean15 = days12.isSupported(durationFieldType14);
        org.joda.time.DurationFieldType durationFieldType17 = days12.getFieldType(0);
        org.joda.time.ReadableInterval readableInterval18 = null;
        org.joda.time.Days days19 = org.joda.time.Days.daysIn(readableInterval18);
        int int21 = days19.getValue((int) (short) 0);
        org.joda.time.Days days22 = org.joda.time.Days.FIVE;
        org.joda.time.Days days23 = days19.minus(days22);
        org.joda.time.Days days24 = null;
        org.joda.time.Days days25 = days19.minus(days24);
        org.joda.time.Days days27 = days19.minus((-1));
        org.joda.time.DurationFieldType durationFieldType28 = days19.getFieldType();
        boolean boolean29 = days12.isGreaterThan(days19);
        org.joda.time.ReadableInterval readableInterval30 = null;
        org.joda.time.Days days31 = org.joda.time.Days.daysIn(readableInterval30);
        org.joda.time.Days days33 = days31.plus((int) (byte) 10);
        org.joda.time.Days days34 = days19.plus(days33);
        int int35 = days7.compareTo((org.joda.time.base.BaseSingleFieldPeriod) days19);
        boolean boolean36 = days0.equals((java.lang.Object) days7);
        org.joda.time.Days days38 = days7.minus((int) (byte) -1);
        org.joda.time.Days days40 = days38.minus((int) (byte) -1);
        int int41 = days38.size();
        org.junit.Assert.assertNotNull(days0);
        org.junit.Assert.assertNotNull(days2);
        org.junit.Assert.assertNotNull(days4);
        org.junit.Assert.assertNotNull(durationFieldType5);
        org.junit.Assert.assertNotNull(days7);
        org.junit.Assert.assertNotNull(days9);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNotNull(days12);
        org.junit.Assert.assertNotNull(days13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(durationFieldType17);
        org.junit.Assert.assertNotNull(days19);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertNotNull(days22);
        org.junit.Assert.assertNotNull(days23);
        org.junit.Assert.assertNotNull(days25);
        org.junit.Assert.assertNotNull(days27);
        org.junit.Assert.assertNotNull(durationFieldType28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(days31);
        org.junit.Assert.assertNotNull(days33);
        org.junit.Assert.assertNotNull(days34);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 1 + "'", int35 == 1);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(days38);
        org.junit.Assert.assertNotNull(days40);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 1 + "'", int41 == 1);
    }

    @Test
    public void test0430() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0430");
        org.joda.time.Days days0 = org.joda.time.Days.THREE;
        org.joda.time.ReadableInterval readableInterval1 = null;
        org.joda.time.Days days2 = org.joda.time.Days.daysIn(readableInterval1);
        org.joda.time.ReadableInterval readableInterval3 = null;
        org.joda.time.Days days4 = org.joda.time.Days.daysIn(readableInterval3);
        int int6 = days4.getValue((int) (short) 0);
        org.joda.time.Days days7 = org.joda.time.Days.FIVE;
        org.joda.time.Days days8 = days4.minus(days7);
        org.joda.time.DurationFieldType durationFieldType9 = null;
        boolean boolean10 = days7.isSupported(durationFieldType9);
        org.joda.time.DurationFieldType durationFieldType12 = days7.getFieldType(0);
        int int13 = days2.get(durationFieldType12);
        org.joda.time.ReadableInterval readableInterval14 = null;
        org.joda.time.Days days15 = org.joda.time.Days.daysIn(readableInterval14);
        int int17 = days15.getValue((int) (short) 0);
        org.joda.time.Days days18 = org.joda.time.Days.FIVE;
        org.joda.time.Days days19 = days15.minus(days18);
        org.joda.time.DurationFieldType durationFieldType20 = null;
        int int21 = days18.get(durationFieldType20);
        org.joda.time.DurationFieldType durationFieldType22 = null;
        int int23 = days18.get(durationFieldType22);
        boolean boolean25 = days18.equals((java.lang.Object) 0L);
        boolean boolean26 = days2.isGreaterThan(days18);
        org.joda.time.ReadableInterval readableInterval27 = null;
        org.joda.time.Days days28 = org.joda.time.Days.daysIn(readableInterval27);
        int int30 = days28.getValue((int) (short) 0);
        org.joda.time.Days days31 = org.joda.time.Days.FIVE;
        org.joda.time.Days days32 = days28.minus(days31);
        org.joda.time.DurationFieldType durationFieldType33 = null;
        int int34 = days31.get(durationFieldType33);
        org.joda.time.DurationFieldType durationFieldType35 = null;
        int int36 = days31.get(durationFieldType35);
        boolean boolean38 = days31.equals((java.lang.Object) 0L);
        org.joda.time.Period period39 = days31.toPeriod();
        org.joda.time.Days days40 = days2.plus(days31);
        boolean boolean41 = days0.isGreaterThan(days40);
        org.joda.time.ReadableInterval readableInterval42 = null;
        org.joda.time.Days days43 = org.joda.time.Days.daysIn(readableInterval42);
        org.joda.time.Days days45 = days43.plus((int) (byte) 10);
        org.joda.time.Days days47 = days45.dividedBy((int) 'a');
        int int48 = days40.compareTo((org.joda.time.base.BaseSingleFieldPeriod) days45);
        org.joda.time.Days days50 = days45.dividedBy((int) ' ');
        int int51 = days50.size();
        org.joda.time.Days days53 = days50.multipliedBy((-90));
        org.joda.time.Days days54 = days50.negated();
        org.junit.Assert.assertNotNull(days0);
        org.junit.Assert.assertNotNull(days2);
        org.junit.Assert.assertNotNull(days4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNotNull(days7);
        org.junit.Assert.assertNotNull(days8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(durationFieldType12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(days15);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNotNull(days18);
        org.junit.Assert.assertNotNull(days19);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(days28);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertNotNull(days31);
        org.junit.Assert.assertNotNull(days32);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(period39);
        org.junit.Assert.assertNotNull(days40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(days43);
        org.junit.Assert.assertNotNull(days45);
        org.junit.Assert.assertNotNull(days47);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + (-1) + "'", int48 == (-1));
        org.junit.Assert.assertNotNull(days50);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 1 + "'", int51 == 1);
        org.junit.Assert.assertNotNull(days53);
        org.junit.Assert.assertNotNull(days54);
    }

    @Test
    public void test0431() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0431");
        org.joda.time.Days days0 = org.joda.time.Days.SEVEN;
        org.joda.time.Days days2 = days0.plus(1);
        org.joda.time.Days days3 = days0.negated();
        org.joda.time.Period period4 = days0.toPeriod();
        org.junit.Assert.assertNotNull(days0);
        org.junit.Assert.assertNotNull(days2);
        org.junit.Assert.assertNotNull(days3);
        org.junit.Assert.assertNotNull(period4);
    }

    @Test
    public void test0432() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0432");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Days days1 = org.joda.time.Days.daysIn(readableInterval0);
        int int3 = days1.getValue((int) (short) 0);
        org.joda.time.Days days4 = org.joda.time.Days.FIVE;
        org.joda.time.Days days5 = days1.minus(days4);
        org.joda.time.Days days6 = null;
        org.joda.time.Days days7 = days1.minus(days6);
        org.joda.time.ReadableInterval readableInterval8 = null;
        org.joda.time.Days days9 = org.joda.time.Days.daysIn(readableInterval8);
        int int11 = days9.getValue((int) (short) 0);
        org.joda.time.Days days12 = org.joda.time.Days.FIVE;
        org.joda.time.Days days13 = days9.minus(days12);
        org.joda.time.DurationFieldType durationFieldType14 = null;
        int int15 = days12.get(durationFieldType14);
        org.joda.time.DurationFieldType durationFieldType16 = null;
        int int17 = days12.get(durationFieldType16);
        boolean boolean19 = days12.equals((java.lang.Object) 0L);
        int int20 = days1.compareTo((org.joda.time.base.BaseSingleFieldPeriod) days12);
        org.joda.time.Days days22 = days12.multipliedBy((int) (byte) 100);
        int int23 = days12.getDays();
        int int24 = days12.size();
        org.joda.time.Duration duration25 = days12.toStandardDuration();
        org.junit.Assert.assertNotNull(days1);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(days4);
        org.junit.Assert.assertNotNull(days5);
        org.junit.Assert.assertNotNull(days7);
        org.junit.Assert.assertNotNull(days9);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNotNull(days12);
        org.junit.Assert.assertNotNull(days13);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
        org.junit.Assert.assertNotNull(days22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 5 + "'", int23 == 5);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 1 + "'", int24 == 1);
        org.junit.Assert.assertNotNull(duration25);
    }

    @Test
    public void test0433() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0433");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Days days1 = org.joda.time.Days.daysIn(readableInterval0);
        org.joda.time.Days days3 = days1.plus((int) (byte) 10);
        org.joda.time.DurationFieldType durationFieldType4 = days3.getFieldType();
        org.joda.time.Days days6 = days3.plus(0);
        org.joda.time.ReadableInterval readableInterval7 = null;
        org.joda.time.Days days8 = org.joda.time.Days.daysIn(readableInterval7);
        int int10 = days8.getValue((int) (short) 0);
        org.joda.time.Days days11 = org.joda.time.Days.FIVE;
        org.joda.time.Days days12 = days8.minus(days11);
        java.lang.String str13 = days11.toString();
        org.joda.time.Days days14 = days6.minus(days11);
        org.joda.time.Days days15 = org.joda.time.Days.standardDaysIn((org.joda.time.ReadablePeriod) days14);
        org.joda.time.Days days16 = null;
        org.joda.time.Days days17 = days14.minus(days16);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.DurationFieldType durationFieldType19 = days14.getFieldType((int) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: -1");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(days1);
        org.junit.Assert.assertNotNull(days3);
        org.junit.Assert.assertNotNull(durationFieldType4);
        org.junit.Assert.assertNotNull(days6);
        org.junit.Assert.assertNotNull(days8);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(days11);
        org.junit.Assert.assertNotNull(days12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "P5D" + "'", str13, "P5D");
        org.junit.Assert.assertNotNull(days14);
        org.junit.Assert.assertNotNull(days15);
        org.junit.Assert.assertNotNull(days17);
    }

    @Test
    public void test0434() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0434");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Days days1 = org.joda.time.Days.daysIn(readableInterval0);
        org.joda.time.Days days3 = days1.plus((int) (byte) 10);
        org.joda.time.Days days5 = days3.dividedBy((int) 'a');
        org.joda.time.Days days7 = days3.plus((int) ' ');
        org.joda.time.Days days9 = days7.multipliedBy(5);
        org.joda.time.Days days10 = org.joda.time.Days.ZERO;
        org.joda.time.ReadableInterval readableInterval11 = null;
        org.joda.time.Days days12 = org.joda.time.Days.daysIn(readableInterval11);
        int int14 = days12.getValue((int) (short) 0);
        org.joda.time.Days days15 = org.joda.time.Days.FIVE;
        org.joda.time.Days days16 = days12.minus(days15);
        org.joda.time.Days days17 = null;
        org.joda.time.Days days18 = days12.minus(days17);
        org.joda.time.Duration duration19 = days12.toStandardDuration();
        org.joda.time.DurationFieldType durationFieldType20 = days12.getFieldType();
        org.joda.time.Days days21 = days10.minus(days12);
        int int22 = days21.getDays();
        org.joda.time.ReadableInterval readableInterval23 = null;
        org.joda.time.Days days24 = org.joda.time.Days.daysIn(readableInterval23);
        int int26 = days24.getValue((int) (short) 0);
        org.joda.time.Days days27 = org.joda.time.Days.FIVE;
        org.joda.time.Days days28 = days24.minus(days27);
        org.joda.time.DurationFieldType durationFieldType29 = null;
        boolean boolean30 = days27.isSupported(durationFieldType29);
        org.joda.time.DurationFieldType durationFieldType32 = days27.getFieldType(0);
        org.joda.time.ReadableInterval readableInterval33 = null;
        org.joda.time.Days days34 = org.joda.time.Days.daysIn(readableInterval33);
        int int36 = days34.getValue((int) (short) 0);
        org.joda.time.Days days37 = org.joda.time.Days.FIVE;
        org.joda.time.Days days38 = days34.minus(days37);
        org.joda.time.Days days39 = null;
        org.joda.time.Days days40 = days34.minus(days39);
        org.joda.time.Days days42 = days34.minus((-1));
        org.joda.time.DurationFieldType durationFieldType43 = days34.getFieldType();
        boolean boolean44 = days27.isGreaterThan(days34);
        org.joda.time.ReadableInterval readableInterval45 = null;
        org.joda.time.Days days46 = org.joda.time.Days.daysIn(readableInterval45);
        org.joda.time.Days days48 = days46.plus((int) (byte) 10);
        org.joda.time.Days days49 = days34.plus(days48);
        org.joda.time.ReadableInterval readableInterval50 = null;
        org.joda.time.Days days51 = org.joda.time.Days.daysIn(readableInterval50);
        int int53 = days51.getValue((int) (short) 0);
        org.joda.time.Days days54 = org.joda.time.Days.FIVE;
        org.joda.time.Days days55 = days51.minus(days54);
        org.joda.time.Days days56 = null;
        org.joda.time.Days days57 = days51.minus(days56);
        org.joda.time.Duration duration58 = days51.toStandardDuration();
        org.joda.time.Days days59 = days49.minus(days51);
        org.joda.time.Days days61 = days51.multipliedBy(5);
        org.joda.time.ReadableInterval readableInterval62 = null;
        org.joda.time.Days days63 = org.joda.time.Days.daysIn(readableInterval62);
        int int65 = days63.getValue((int) (short) 0);
        org.joda.time.Days days66 = org.joda.time.Days.FIVE;
        org.joda.time.Days days67 = days63.minus(days66);
        org.joda.time.Days days68 = null;
        org.joda.time.Days days69 = days63.minus(days68);
        org.joda.time.Duration duration70 = days63.toStandardDuration();
        org.joda.time.DurationFieldType durationFieldType71 = days63.getFieldType();
        boolean boolean72 = days61.isSupported(durationFieldType71);
        org.joda.time.ReadableInterval readableInterval73 = null;
        org.joda.time.Days days74 = org.joda.time.Days.daysIn(readableInterval73);
        int int76 = days74.getValue((int) (short) 0);
        org.joda.time.Days days77 = org.joda.time.Days.FIVE;
        org.joda.time.Days days78 = days74.minus(days77);
        org.joda.time.Days days79 = null;
        org.joda.time.Days days80 = days74.minus(days79);
        org.joda.time.Days days82 = days74.minus((-1));
        org.joda.time.DurationFieldType durationFieldType83 = days74.getFieldType();
        org.joda.time.ReadableInterval readableInterval84 = null;
        org.joda.time.Days days85 = org.joda.time.Days.daysIn(readableInterval84);
        org.joda.time.Days days87 = days85.plus((int) (byte) 10);
        org.joda.time.Days days89 = days87.dividedBy((int) 'a');
        org.joda.time.Days days91 = days87.plus((int) ' ');
        org.joda.time.Days days92 = org.joda.time.Days.standardDaysIn((org.joda.time.ReadablePeriod) days91);
        int int93 = days92.size();
        boolean boolean94 = days74.isGreaterThan(days92);
        org.joda.time.DurationFieldType durationFieldType95 = days74.getFieldType();
        boolean boolean96 = days61.isSupported(durationFieldType95);
        boolean boolean97 = days21.isSupported(durationFieldType95);
        int int98 = days9.compareTo((org.joda.time.base.BaseSingleFieldPeriod) days21);
        org.junit.Assert.assertNotNull(days1);
        org.junit.Assert.assertNotNull(days3);
        org.junit.Assert.assertNotNull(days5);
        org.junit.Assert.assertNotNull(days7);
        org.junit.Assert.assertNotNull(days9);
        org.junit.Assert.assertNotNull(days10);
        org.junit.Assert.assertNotNull(days12);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNotNull(days15);
        org.junit.Assert.assertNotNull(days16);
        org.junit.Assert.assertNotNull(days18);
        org.junit.Assert.assertNotNull(duration19);
        org.junit.Assert.assertNotNull(durationFieldType20);
        org.junit.Assert.assertNotNull(days21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertNotNull(days24);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertNotNull(days27);
        org.junit.Assert.assertNotNull(days28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(durationFieldType32);
        org.junit.Assert.assertNotNull(days34);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertNotNull(days37);
        org.junit.Assert.assertNotNull(days38);
        org.junit.Assert.assertNotNull(days40);
        org.junit.Assert.assertNotNull(days42);
        org.junit.Assert.assertNotNull(durationFieldType43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(days46);
        org.junit.Assert.assertNotNull(days48);
        org.junit.Assert.assertNotNull(days49);
        org.junit.Assert.assertNotNull(days51);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 0 + "'", int53 == 0);
        org.junit.Assert.assertNotNull(days54);
        org.junit.Assert.assertNotNull(days55);
        org.junit.Assert.assertNotNull(days57);
        org.junit.Assert.assertNotNull(duration58);
        org.junit.Assert.assertNotNull(days59);
        org.junit.Assert.assertNotNull(days61);
        org.junit.Assert.assertNotNull(days63);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 0 + "'", int65 == 0);
        org.junit.Assert.assertNotNull(days66);
        org.junit.Assert.assertNotNull(days67);
        org.junit.Assert.assertNotNull(days69);
        org.junit.Assert.assertNotNull(duration70);
        org.junit.Assert.assertNotNull(durationFieldType71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertNotNull(days74);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + 0 + "'", int76 == 0);
        org.junit.Assert.assertNotNull(days77);
        org.junit.Assert.assertNotNull(days78);
        org.junit.Assert.assertNotNull(days80);
        org.junit.Assert.assertNotNull(days82);
        org.junit.Assert.assertNotNull(durationFieldType83);
        org.junit.Assert.assertNotNull(days85);
        org.junit.Assert.assertNotNull(days87);
        org.junit.Assert.assertNotNull(days89);
        org.junit.Assert.assertNotNull(days91);
        org.junit.Assert.assertNotNull(days92);
        org.junit.Assert.assertTrue("'" + int93 + "' != '" + 1 + "'", int93 == 1);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + false + "'", boolean94 == false);
        org.junit.Assert.assertNotNull(durationFieldType95);
        org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + true + "'", boolean96 == true);
        org.junit.Assert.assertTrue("'" + boolean97 + "' != '" + true + "'", boolean97 == true);
        org.junit.Assert.assertTrue("'" + int98 + "' != '" + 1 + "'", int98 == 1);
    }

    @Test
    public void test0435() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0435");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Days days1 = org.joda.time.Days.daysIn(readableInterval0);
        org.joda.time.Days days3 = days1.plus((int) (byte) 10);
        org.joda.time.MutablePeriod mutablePeriod4 = days1.toMutablePeriod();
        int int5 = days1.size();
        org.joda.time.Days days7 = days1.minus(10);
        org.joda.time.Days days8 = org.joda.time.Days.standardDaysIn((org.joda.time.ReadablePeriod) days1);
        java.lang.Class<?> wildcardClass9 = days8.getClass();
        org.junit.Assert.assertNotNull(days1);
        org.junit.Assert.assertNotNull(days3);
        org.junit.Assert.assertNotNull(mutablePeriod4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
        org.junit.Assert.assertNotNull(days7);
        org.junit.Assert.assertNotNull(days8);
        org.junit.Assert.assertNotNull(wildcardClass9);
    }

    @Test
    public void test0436() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0436");
        org.joda.time.Days days1 = org.joda.time.Days.parseDays("P62D");
        org.joda.time.Days days3 = days1.dividedBy((-2147483648));
        org.joda.time.ReadableInterval readableInterval4 = null;
        org.joda.time.Days days5 = org.joda.time.Days.daysIn(readableInterval4);
        int int7 = days5.getValue((int) (short) 0);
        org.joda.time.Days days8 = org.joda.time.Days.FIVE;
        org.joda.time.Days days9 = days5.minus(days8);
        org.joda.time.Days days10 = null;
        org.joda.time.Days days11 = days5.minus(days10);
        org.joda.time.ReadableInterval readableInterval12 = null;
        org.joda.time.Days days13 = org.joda.time.Days.daysIn(readableInterval12);
        int int15 = days13.getValue((int) (short) 0);
        org.joda.time.Days days16 = org.joda.time.Days.FIVE;
        org.joda.time.Days days17 = days13.minus(days16);
        org.joda.time.DurationFieldType durationFieldType18 = null;
        int int19 = days16.get(durationFieldType18);
        org.joda.time.DurationFieldType durationFieldType20 = null;
        int int21 = days16.get(durationFieldType20);
        boolean boolean23 = days16.equals((java.lang.Object) 0L);
        int int24 = days5.compareTo((org.joda.time.base.BaseSingleFieldPeriod) days16);
        org.joda.time.Days days26 = days5.minus(52);
        org.joda.time.Days days28 = days26.dividedBy((-1));
        org.joda.time.Days days30 = days28.dividedBy(8);
        org.joda.time.Days days31 = org.joda.time.Days.standardDaysIn((org.joda.time.ReadablePeriod) days30);
        org.joda.time.Days days32 = days1.plus(days30);
        org.joda.time.base.BaseSingleFieldPeriod baseSingleFieldPeriod33 = null;
        // The following exception was thrown during execution in test generation
        try {
            int int34 = days1.compareTo(baseSingleFieldPeriod33);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(days1);
        org.junit.Assert.assertNotNull(days3);
        org.junit.Assert.assertNotNull(days5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(days8);
        org.junit.Assert.assertNotNull(days9);
        org.junit.Assert.assertNotNull(days11);
        org.junit.Assert.assertNotNull(days13);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNotNull(days16);
        org.junit.Assert.assertNotNull(days17);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
        org.junit.Assert.assertNotNull(days26);
        org.junit.Assert.assertNotNull(days28);
        org.junit.Assert.assertNotNull(days30);
        org.junit.Assert.assertNotNull(days31);
        org.junit.Assert.assertNotNull(days32);
    }

    @Test
    public void test0437() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0437");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Days days1 = org.joda.time.Days.daysIn(readableInterval0);
        org.joda.time.Days days3 = days1.plus((int) (byte) 10);
        org.joda.time.Days days5 = days3.dividedBy((int) 'a');
        org.joda.time.Days days7 = days3.plus((int) ' ');
        org.joda.time.Days days8 = org.joda.time.Days.standardDaysIn((org.joda.time.ReadablePeriod) days7);
        org.joda.time.Days days10 = days8.minus((int) '#');
        org.joda.time.Days days12 = days8.multipliedBy((int) (short) 1);
        org.joda.time.ReadableInterval readableInterval13 = null;
        org.joda.time.Days days14 = org.joda.time.Days.daysIn(readableInterval13);
        int int16 = days14.getValue((int) (short) 0);
        org.joda.time.Days days17 = org.joda.time.Days.FIVE;
        org.joda.time.Days days18 = days14.minus(days17);
        org.joda.time.DurationFieldType durationFieldType19 = null;
        int int20 = days17.get(durationFieldType19);
        int int21 = days17.getDays();
        org.joda.time.Days days22 = days17.negated();
        org.joda.time.Days days24 = days17.plus(5);
        org.joda.time.Days days26 = days17.dividedBy(8);
        org.joda.time.Days days27 = days12.minus(days17);
        org.junit.Assert.assertNotNull(days1);
        org.junit.Assert.assertNotNull(days3);
        org.junit.Assert.assertNotNull(days5);
        org.junit.Assert.assertNotNull(days7);
        org.junit.Assert.assertNotNull(days8);
        org.junit.Assert.assertNotNull(days10);
        org.junit.Assert.assertNotNull(days12);
        org.junit.Assert.assertNotNull(days14);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertNotNull(days17);
        org.junit.Assert.assertNotNull(days18);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 5 + "'", int21 == 5);
        org.junit.Assert.assertNotNull(days22);
        org.junit.Assert.assertNotNull(days24);
        org.junit.Assert.assertNotNull(days26);
        org.junit.Assert.assertNotNull(days27);
    }

    @Test
    public void test0438() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0438");
        org.joda.time.Days days1 = org.joda.time.Days.days((int) (short) -1);
        org.junit.Assert.assertNotNull(days1);
    }

    @Test
    public void test0439() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0439");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Days days1 = org.joda.time.Days.daysIn(readableInterval0);
        int int3 = days1.getValue((int) (short) 0);
        org.joda.time.ReadableInterval readableInterval4 = null;
        org.joda.time.Days days5 = org.joda.time.Days.daysIn(readableInterval4);
        int int7 = days5.getValue((int) (short) 0);
        org.joda.time.Days days8 = org.joda.time.Days.FIVE;
        org.joda.time.Days days9 = days5.minus(days8);
        int int10 = days1.compareTo((org.joda.time.base.BaseSingleFieldPeriod) days8);
        org.joda.time.ReadableInterval readableInterval11 = null;
        org.joda.time.Days days12 = org.joda.time.Days.daysIn(readableInterval11);
        int int14 = days12.getValue((int) (short) 0);
        org.joda.time.Days days15 = org.joda.time.Days.FIVE;
        org.joda.time.Days days16 = days12.minus(days15);
        org.joda.time.DurationFieldType durationFieldType17 = null;
        boolean boolean18 = days15.isSupported(durationFieldType17);
        org.joda.time.DurationFieldType durationFieldType20 = days15.getFieldType(0);
        int int21 = days1.get(durationFieldType20);
        org.joda.time.ReadableInterval readableInterval22 = null;
        org.joda.time.Days days23 = org.joda.time.Days.daysIn(readableInterval22);
        int int25 = days23.getValue((int) (short) 0);
        org.joda.time.Days days26 = org.joda.time.Days.FIVE;
        org.joda.time.Days days27 = days23.minus(days26);
        org.joda.time.Days days28 = null;
        org.joda.time.Days days29 = days23.minus(days28);
        org.joda.time.Days days30 = days1.plus(days28);
        org.joda.time.Days days32 = days1.dividedBy((int) (short) -1);
        org.joda.time.ReadableInterval readableInterval33 = null;
        org.joda.time.Days days34 = org.joda.time.Days.daysIn(readableInterval33);
        int int36 = days34.getValue((int) (short) 0);
        org.joda.time.Days days37 = org.joda.time.Days.FIVE;
        org.joda.time.Days days38 = days34.minus(days37);
        org.joda.time.DurationFieldType durationFieldType39 = null;
        boolean boolean40 = days37.isSupported(durationFieldType39);
        org.joda.time.DurationFieldType durationFieldType42 = days37.getFieldType(0);
        org.joda.time.ReadableInterval readableInterval43 = null;
        org.joda.time.Days days44 = org.joda.time.Days.daysIn(readableInterval43);
        int int46 = days44.getValue((int) (short) 0);
        org.joda.time.Days days47 = org.joda.time.Days.FIVE;
        org.joda.time.Days days48 = days44.minus(days47);
        org.joda.time.Days days49 = null;
        org.joda.time.Days days50 = days44.minus(days49);
        org.joda.time.Days days52 = days44.minus((-1));
        org.joda.time.DurationFieldType durationFieldType53 = days44.getFieldType();
        boolean boolean54 = days37.isGreaterThan(days44);
        org.joda.time.Days days55 = org.joda.time.Days.THREE;
        org.joda.time.ReadableInterval readableInterval56 = null;
        org.joda.time.Days days57 = org.joda.time.Days.daysIn(readableInterval56);
        org.joda.time.ReadableInterval readableInterval58 = null;
        org.joda.time.Days days59 = org.joda.time.Days.daysIn(readableInterval58);
        int int61 = days59.getValue((int) (short) 0);
        org.joda.time.Days days62 = org.joda.time.Days.FIVE;
        org.joda.time.Days days63 = days59.minus(days62);
        org.joda.time.DurationFieldType durationFieldType64 = null;
        boolean boolean65 = days62.isSupported(durationFieldType64);
        org.joda.time.DurationFieldType durationFieldType67 = days62.getFieldType(0);
        int int68 = days57.get(durationFieldType67);
        org.joda.time.ReadableInterval readableInterval69 = null;
        org.joda.time.Days days70 = org.joda.time.Days.daysIn(readableInterval69);
        int int72 = days70.getValue((int) (short) 0);
        org.joda.time.ReadableInterval readableInterval73 = null;
        org.joda.time.Days days74 = org.joda.time.Days.daysIn(readableInterval73);
        int int76 = days74.getValue((int) (short) 0);
        org.joda.time.Days days77 = org.joda.time.Days.FIVE;
        org.joda.time.Days days78 = days74.minus(days77);
        int int79 = days70.compareTo((org.joda.time.base.BaseSingleFieldPeriod) days77);
        java.lang.String str80 = days70.toString();
        org.joda.time.Days days81 = null;
        boolean boolean82 = days70.isGreaterThan(days81);
        org.joda.time.Period period83 = days70.toPeriod();
        org.joda.time.Days days84 = days57.plus(days70);
        boolean boolean85 = days55.isLessThan(days70);
        org.joda.time.Days days86 = days37.minus(days55);
        java.lang.Object obj87 = null;
        boolean boolean88 = days55.equals(obj87);
        int int89 = days32.compareTo((org.joda.time.base.BaseSingleFieldPeriod) days55);
        org.junit.Assert.assertNotNull(days1);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(days5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(days8);
        org.junit.Assert.assertNotNull(days9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertNotNull(days12);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNotNull(days15);
        org.junit.Assert.assertNotNull(days16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(durationFieldType20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertNotNull(days23);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertNotNull(days26);
        org.junit.Assert.assertNotNull(days27);
        org.junit.Assert.assertNotNull(days29);
        org.junit.Assert.assertNotNull(days30);
        org.junit.Assert.assertNotNull(days32);
        org.junit.Assert.assertNotNull(days34);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertNotNull(days37);
        org.junit.Assert.assertNotNull(days38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(durationFieldType42);
        org.junit.Assert.assertNotNull(days44);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 0 + "'", int46 == 0);
        org.junit.Assert.assertNotNull(days47);
        org.junit.Assert.assertNotNull(days48);
        org.junit.Assert.assertNotNull(days50);
        org.junit.Assert.assertNotNull(days52);
        org.junit.Assert.assertNotNull(durationFieldType53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(days55);
        org.junit.Assert.assertNotNull(days57);
        org.junit.Assert.assertNotNull(days59);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 0 + "'", int61 == 0);
        org.junit.Assert.assertNotNull(days62);
        org.junit.Assert.assertNotNull(days63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(durationFieldType67);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 0 + "'", int68 == 0);
        org.junit.Assert.assertNotNull(days70);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 0 + "'", int72 == 0);
        org.junit.Assert.assertNotNull(days74);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + 0 + "'", int76 == 0);
        org.junit.Assert.assertNotNull(days77);
        org.junit.Assert.assertNotNull(days78);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + (-1) + "'", int79 == (-1));
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "P0D" + "'", str80, "P0D");
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertNotNull(period83);
        org.junit.Assert.assertNotNull(days84);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertNotNull(days86);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertTrue("'" + int89 + "' != '" + (-1) + "'", int89 == (-1));
    }

    @Test
    public void test0440() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0440");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Days days1 = org.joda.time.Days.daysIn(readableInterval0);
        org.joda.time.Days days3 = days1.plus((int) (byte) 10);
        org.joda.time.Days days5 = days3.dividedBy((int) 'a');
        org.joda.time.DurationFieldType durationFieldType6 = days5.getFieldType();
        org.joda.time.Days days7 = org.joda.time.Days.ZERO;
        org.joda.time.ReadableInterval readableInterval8 = null;
        org.joda.time.Days days9 = org.joda.time.Days.daysIn(readableInterval8);
        int int11 = days9.getValue((int) (short) 0);
        org.joda.time.Days days12 = org.joda.time.Days.FIVE;
        org.joda.time.Days days13 = days9.minus(days12);
        org.joda.time.Days days14 = null;
        org.joda.time.Days days15 = days9.minus(days14);
        org.joda.time.Duration duration16 = days9.toStandardDuration();
        org.joda.time.DurationFieldType durationFieldType17 = days9.getFieldType();
        org.joda.time.Days days18 = days7.minus(days9);
        int int19 = days18.getDays();
        org.joda.time.ReadableInterval readableInterval20 = null;
        org.joda.time.Days days21 = org.joda.time.Days.daysIn(readableInterval20);
        org.joda.time.ReadableInterval readableInterval22 = null;
        org.joda.time.Days days23 = org.joda.time.Days.daysIn(readableInterval22);
        int int25 = days23.getValue((int) (short) 0);
        org.joda.time.Days days26 = org.joda.time.Days.FIVE;
        org.joda.time.Days days27 = days23.minus(days26);
        org.joda.time.DurationFieldType durationFieldType28 = null;
        boolean boolean29 = days26.isSupported(durationFieldType28);
        org.joda.time.DurationFieldType durationFieldType31 = days26.getFieldType(0);
        int int32 = days21.get(durationFieldType31);
        org.joda.time.PeriodType periodType33 = days21.getPeriodType();
        org.joda.time.Days days35 = days21.multipliedBy((int) (short) -1);
        org.joda.time.MutablePeriod mutablePeriod36 = days21.toMutablePeriod();
        org.joda.time.Days days37 = days18.minus(days21);
        boolean boolean38 = days5.isLessThan(days37);
        // The following exception was thrown during execution in test generation
        try {
            int int40 = days5.getValue((int) (short) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 10");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(days1);
        org.junit.Assert.assertNotNull(days3);
        org.junit.Assert.assertNotNull(days5);
        org.junit.Assert.assertNotNull(durationFieldType6);
        org.junit.Assert.assertNotNull(days7);
        org.junit.Assert.assertNotNull(days9);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNotNull(days12);
        org.junit.Assert.assertNotNull(days13);
        org.junit.Assert.assertNotNull(days15);
        org.junit.Assert.assertNotNull(duration16);
        org.junit.Assert.assertNotNull(durationFieldType17);
        org.junit.Assert.assertNotNull(days18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertNotNull(days21);
        org.junit.Assert.assertNotNull(days23);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertNotNull(days26);
        org.junit.Assert.assertNotNull(days27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(durationFieldType31);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertNotNull(periodType33);
        org.junit.Assert.assertNotNull(days35);
        org.junit.Assert.assertNotNull(mutablePeriod36);
        org.junit.Assert.assertNotNull(days37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
    }

    @Test
    public void test0441() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0441");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Days days1 = org.joda.time.Days.daysIn(readableInterval0);
        int int3 = days1.getValue((int) (short) 0);
        org.joda.time.ReadableInterval readableInterval4 = null;
        org.joda.time.Days days5 = org.joda.time.Days.daysIn(readableInterval4);
        int int7 = days5.getValue((int) (short) 0);
        org.joda.time.Days days8 = org.joda.time.Days.FIVE;
        org.joda.time.Days days9 = days5.minus(days8);
        int int10 = days1.compareTo((org.joda.time.base.BaseSingleFieldPeriod) days8);
        java.lang.String str11 = days1.toString();
        org.joda.time.Days days13 = days1.plus((int) '4');
        org.joda.time.ReadableInterval readableInterval14 = null;
        org.joda.time.Days days15 = org.joda.time.Days.daysIn(readableInterval14);
        int int17 = days15.getValue((int) (short) 0);
        org.joda.time.Days days18 = org.joda.time.Days.FIVE;
        org.joda.time.Days days19 = days15.minus(days18);
        org.joda.time.DurationFieldType durationFieldType20 = null;
        boolean boolean21 = days18.isSupported(durationFieldType20);
        org.joda.time.DurationFieldType durationFieldType23 = days18.getFieldType(0);
        org.joda.time.ReadableInterval readableInterval24 = null;
        org.joda.time.Days days25 = org.joda.time.Days.daysIn(readableInterval24);
        int int27 = days25.getValue((int) (short) 0);
        org.joda.time.Days days28 = org.joda.time.Days.FIVE;
        org.joda.time.Days days29 = days25.minus(days28);
        org.joda.time.Days days30 = null;
        org.joda.time.Days days31 = days25.minus(days30);
        org.joda.time.Days days33 = days25.minus((-1));
        org.joda.time.DurationFieldType durationFieldType34 = days25.getFieldType();
        boolean boolean35 = days18.isGreaterThan(days25);
        org.joda.time.ReadableInterval readableInterval36 = null;
        org.joda.time.Days days37 = org.joda.time.Days.daysIn(readableInterval36);
        org.joda.time.Days days39 = days37.plus((int) (byte) 10);
        org.joda.time.Days days40 = days25.plus(days39);
        org.joda.time.ReadableInterval readableInterval41 = null;
        org.joda.time.Days days42 = org.joda.time.Days.daysIn(readableInterval41);
        int int44 = days42.getValue((int) (short) 0);
        org.joda.time.Days days45 = org.joda.time.Days.FIVE;
        org.joda.time.Days days46 = days42.minus(days45);
        org.joda.time.Days days47 = null;
        org.joda.time.Days days48 = days42.minus(days47);
        org.joda.time.Duration duration49 = days42.toStandardDuration();
        org.joda.time.Days days50 = days40.minus(days42);
        org.joda.time.Duration duration51 = days50.toStandardDuration();
        org.joda.time.PeriodType periodType52 = days50.getPeriodType();
        org.joda.time.Days days53 = days13.plus(days50);
        org.joda.time.Days days54 = org.joda.time.Days.SIX;
        org.joda.time.Days days56 = days54.plus(100);
        org.joda.time.ReadableInterval readableInterval57 = null;
        org.joda.time.Days days58 = org.joda.time.Days.daysIn(readableInterval57);
        int int60 = days58.getValue((int) (short) 0);
        org.joda.time.Days days61 = org.joda.time.Days.FIVE;
        org.joda.time.Days days62 = days58.minus(days61);
        org.joda.time.Days days63 = null;
        org.joda.time.Days days64 = days58.minus(days63);
        org.joda.time.Days days66 = days58.minus((-1));
        org.joda.time.DurationFieldType durationFieldType67 = days58.getFieldType();
        int int68 = days54.get(durationFieldType67);
        int int69 = days50.get(durationFieldType67);
        org.joda.time.Days days71 = org.joda.time.Days.parseDays("P5D");
        boolean boolean72 = days50.equals((java.lang.Object) "P5D");
        org.junit.Assert.assertNotNull(days1);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(days5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(days8);
        org.junit.Assert.assertNotNull(days9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "P0D" + "'", str11, "P0D");
        org.junit.Assert.assertNotNull(days13);
        org.junit.Assert.assertNotNull(days15);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNotNull(days18);
        org.junit.Assert.assertNotNull(days19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(durationFieldType23);
        org.junit.Assert.assertNotNull(days25);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertNotNull(days28);
        org.junit.Assert.assertNotNull(days29);
        org.junit.Assert.assertNotNull(days31);
        org.junit.Assert.assertNotNull(days33);
        org.junit.Assert.assertNotNull(durationFieldType34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(days37);
        org.junit.Assert.assertNotNull(days39);
        org.junit.Assert.assertNotNull(days40);
        org.junit.Assert.assertNotNull(days42);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 0 + "'", int44 == 0);
        org.junit.Assert.assertNotNull(days45);
        org.junit.Assert.assertNotNull(days46);
        org.junit.Assert.assertNotNull(days48);
        org.junit.Assert.assertNotNull(duration49);
        org.junit.Assert.assertNotNull(days50);
        org.junit.Assert.assertNotNull(duration51);
        org.junit.Assert.assertNotNull(periodType52);
        org.junit.Assert.assertNotNull(days53);
        org.junit.Assert.assertNotNull(days54);
        org.junit.Assert.assertNotNull(days56);
        org.junit.Assert.assertNotNull(days58);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 0 + "'", int60 == 0);
        org.junit.Assert.assertNotNull(days61);
        org.junit.Assert.assertNotNull(days62);
        org.junit.Assert.assertNotNull(days64);
        org.junit.Assert.assertNotNull(days66);
        org.junit.Assert.assertNotNull(durationFieldType67);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 6 + "'", int68 == 6);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 10 + "'", int69 == 10);
        org.junit.Assert.assertNotNull(days71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
    }

    @Test
    public void test0442() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0442");
        org.joda.time.Days days1 = org.joda.time.Days.days(5);
        org.joda.time.Days days2 = org.joda.time.Days.standardDaysIn((org.joda.time.ReadablePeriod) days1);
        java.lang.Class<?> wildcardClass3 = days1.getClass();
        org.junit.Assert.assertNotNull(days1);
        org.junit.Assert.assertNotNull(days2);
        org.junit.Assert.assertNotNull(wildcardClass3);
    }

    @Test
    public void test0443() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0443");
        org.joda.time.Days days0 = org.joda.time.Days.SEVEN;
        org.joda.time.Days days2 = days0.plus(1);
        org.joda.time.Days days3 = days0.negated();
        java.lang.String str4 = days0.toString();
        org.junit.Assert.assertNotNull(days0);
        org.junit.Assert.assertNotNull(days2);
        org.junit.Assert.assertNotNull(days3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "P7D" + "'", str4, "P7D");
    }

    @Test
    public void test0444() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0444");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Days days1 = org.joda.time.Days.daysIn(readableInterval0);
        int int3 = days1.getValue((int) (short) 0);
        org.joda.time.Period period4 = days1.toPeriod();
        org.joda.time.Days days5 = org.joda.time.Days.standardDaysIn((org.joda.time.ReadablePeriod) days1);
        org.joda.time.Days days6 = org.joda.time.Days.THREE;
        org.joda.time.ReadableInterval readableInterval7 = null;
        org.joda.time.Days days8 = org.joda.time.Days.daysIn(readableInterval7);
        org.joda.time.ReadableInterval readableInterval9 = null;
        org.joda.time.Days days10 = org.joda.time.Days.daysIn(readableInterval9);
        int int12 = days10.getValue((int) (short) 0);
        org.joda.time.Days days13 = org.joda.time.Days.FIVE;
        org.joda.time.Days days14 = days10.minus(days13);
        org.joda.time.DurationFieldType durationFieldType15 = null;
        boolean boolean16 = days13.isSupported(durationFieldType15);
        org.joda.time.DurationFieldType durationFieldType18 = days13.getFieldType(0);
        int int19 = days8.get(durationFieldType18);
        org.joda.time.ReadableInterval readableInterval20 = null;
        org.joda.time.Days days21 = org.joda.time.Days.daysIn(readableInterval20);
        int int23 = days21.getValue((int) (short) 0);
        org.joda.time.Days days24 = org.joda.time.Days.FIVE;
        org.joda.time.Days days25 = days21.minus(days24);
        org.joda.time.DurationFieldType durationFieldType26 = null;
        int int27 = days24.get(durationFieldType26);
        org.joda.time.DurationFieldType durationFieldType28 = null;
        int int29 = days24.get(durationFieldType28);
        boolean boolean31 = days24.equals((java.lang.Object) 0L);
        boolean boolean32 = days8.isGreaterThan(days24);
        org.joda.time.ReadableInterval readableInterval33 = null;
        org.joda.time.Days days34 = org.joda.time.Days.daysIn(readableInterval33);
        int int36 = days34.getValue((int) (short) 0);
        org.joda.time.Days days37 = org.joda.time.Days.FIVE;
        org.joda.time.Days days38 = days34.minus(days37);
        org.joda.time.DurationFieldType durationFieldType39 = null;
        int int40 = days37.get(durationFieldType39);
        org.joda.time.DurationFieldType durationFieldType41 = null;
        int int42 = days37.get(durationFieldType41);
        boolean boolean44 = days37.equals((java.lang.Object) 0L);
        org.joda.time.Period period45 = days37.toPeriod();
        org.joda.time.Days days46 = days8.plus(days37);
        boolean boolean47 = days6.isGreaterThan(days46);
        org.joda.time.Days days49 = days46.dividedBy(42);
        boolean boolean50 = days5.isLessThan(days46);
        org.joda.time.DurationFieldType durationFieldType51 = days46.getFieldType();
        org.joda.time.MutablePeriod mutablePeriod52 = days46.toMutablePeriod();
        org.junit.Assert.assertNotNull(days1);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(days5);
        org.junit.Assert.assertNotNull(days6);
        org.junit.Assert.assertNotNull(days8);
        org.junit.Assert.assertNotNull(days10);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNotNull(days13);
        org.junit.Assert.assertNotNull(days14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(durationFieldType18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertNotNull(days21);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertNotNull(days24);
        org.junit.Assert.assertNotNull(days25);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(days34);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertNotNull(days37);
        org.junit.Assert.assertNotNull(days38);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(period45);
        org.junit.Assert.assertNotNull(days46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(days49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(durationFieldType51);
        org.junit.Assert.assertNotNull(mutablePeriod52);
    }

    @Test
    public void test0445() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0445");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Days days1 = org.joda.time.Days.daysIn(readableInterval0);
        int int3 = days1.getValue((int) (short) 0);
        org.joda.time.ReadableInterval readableInterval4 = null;
        org.joda.time.Days days5 = org.joda.time.Days.daysIn(readableInterval4);
        int int7 = days5.getValue((int) (short) 0);
        org.joda.time.Days days8 = org.joda.time.Days.FIVE;
        org.joda.time.Days days9 = days5.minus(days8);
        int int10 = days1.compareTo((org.joda.time.base.BaseSingleFieldPeriod) days8);
        java.lang.String str11 = days1.toString();
        org.joda.time.Days days13 = days1.plus((int) '4');
        org.joda.time.ReadableInterval readableInterval14 = null;
        org.joda.time.Days days15 = org.joda.time.Days.daysIn(readableInterval14);
        int int17 = days15.getValue((int) (short) 0);
        org.joda.time.Days days18 = org.joda.time.Days.FIVE;
        org.joda.time.Days days19 = days15.minus(days18);
        org.joda.time.DurationFieldType durationFieldType20 = null;
        boolean boolean21 = days18.isSupported(durationFieldType20);
        org.joda.time.DurationFieldType durationFieldType23 = days18.getFieldType(0);
        org.joda.time.ReadableInterval readableInterval24 = null;
        org.joda.time.Days days25 = org.joda.time.Days.daysIn(readableInterval24);
        int int27 = days25.getValue((int) (short) 0);
        org.joda.time.Days days28 = org.joda.time.Days.FIVE;
        org.joda.time.Days days29 = days25.minus(days28);
        org.joda.time.Days days30 = null;
        org.joda.time.Days days31 = days25.minus(days30);
        org.joda.time.Days days33 = days25.minus((-1));
        org.joda.time.DurationFieldType durationFieldType34 = days25.getFieldType();
        boolean boolean35 = days18.isGreaterThan(days25);
        org.joda.time.ReadableInterval readableInterval36 = null;
        org.joda.time.Days days37 = org.joda.time.Days.daysIn(readableInterval36);
        org.joda.time.Days days39 = days37.plus((int) (byte) 10);
        org.joda.time.Days days40 = days25.plus(days39);
        org.joda.time.ReadableInterval readableInterval41 = null;
        org.joda.time.Days days42 = org.joda.time.Days.daysIn(readableInterval41);
        int int44 = days42.getValue((int) (short) 0);
        org.joda.time.Days days45 = org.joda.time.Days.FIVE;
        org.joda.time.Days days46 = days42.minus(days45);
        org.joda.time.Days days47 = null;
        org.joda.time.Days days48 = days42.minus(days47);
        org.joda.time.Duration duration49 = days42.toStandardDuration();
        org.joda.time.Days days50 = days40.minus(days42);
        org.joda.time.Duration duration51 = days50.toStandardDuration();
        org.joda.time.PeriodType periodType52 = days50.getPeriodType();
        org.joda.time.Days days53 = days13.plus(days50);
        org.joda.time.ReadableInterval readableInterval54 = null;
        org.joda.time.Days days55 = org.joda.time.Days.daysIn(readableInterval54);
        int int57 = days55.getValue((int) (short) 0);
        org.joda.time.ReadableInterval readableInterval58 = null;
        org.joda.time.Days days59 = org.joda.time.Days.daysIn(readableInterval58);
        int int61 = days59.getValue((int) (short) 0);
        org.joda.time.Days days62 = org.joda.time.Days.FIVE;
        org.joda.time.Days days63 = days59.minus(days62);
        int int64 = days55.compareTo((org.joda.time.base.BaseSingleFieldPeriod) days62);
        org.joda.time.MutablePeriod mutablePeriod65 = days62.toMutablePeriod();
        boolean boolean66 = days53.isLessThan(days62);
        org.joda.time.Days days67 = null;
        boolean boolean68 = days53.isGreaterThan(days67);
        org.junit.Assert.assertNotNull(days1);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(days5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(days8);
        org.junit.Assert.assertNotNull(days9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "P0D" + "'", str11, "P0D");
        org.junit.Assert.assertNotNull(days13);
        org.junit.Assert.assertNotNull(days15);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNotNull(days18);
        org.junit.Assert.assertNotNull(days19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(durationFieldType23);
        org.junit.Assert.assertNotNull(days25);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertNotNull(days28);
        org.junit.Assert.assertNotNull(days29);
        org.junit.Assert.assertNotNull(days31);
        org.junit.Assert.assertNotNull(days33);
        org.junit.Assert.assertNotNull(durationFieldType34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(days37);
        org.junit.Assert.assertNotNull(days39);
        org.junit.Assert.assertNotNull(days40);
        org.junit.Assert.assertNotNull(days42);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 0 + "'", int44 == 0);
        org.junit.Assert.assertNotNull(days45);
        org.junit.Assert.assertNotNull(days46);
        org.junit.Assert.assertNotNull(days48);
        org.junit.Assert.assertNotNull(duration49);
        org.junit.Assert.assertNotNull(days50);
        org.junit.Assert.assertNotNull(duration51);
        org.junit.Assert.assertNotNull(periodType52);
        org.junit.Assert.assertNotNull(days53);
        org.junit.Assert.assertNotNull(days55);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 0 + "'", int57 == 0);
        org.junit.Assert.assertNotNull(days59);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 0 + "'", int61 == 0);
        org.junit.Assert.assertNotNull(days62);
        org.junit.Assert.assertNotNull(days63);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + (-1) + "'", int64 == (-1));
        org.junit.Assert.assertNotNull(mutablePeriod65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
    }

    @Test
    public void test0446() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0446");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Days days1 = org.joda.time.Days.daysIn(readableInterval0);
        org.joda.time.Days days3 = days1.plus((int) (byte) 10);
        org.joda.time.Days days5 = days3.dividedBy((int) 'a');
        org.joda.time.Days days7 = days3.dividedBy(5);
        org.joda.time.Days days9 = days3.plus((int) (byte) -1);
        org.joda.time.Days days11 = days3.minus((int) (byte) 100);
        org.joda.time.Days days12 = days11.negated();
        org.joda.time.Days days14 = days12.multipliedBy((int) 'a');
        org.joda.time.Duration duration15 = days14.toStandardDuration();
        org.joda.time.ReadableInterval readableInterval16 = null;
        org.joda.time.Days days17 = org.joda.time.Days.daysIn(readableInterval16);
        org.joda.time.Days days19 = days17.plus((int) (byte) 10);
        org.joda.time.Days days21 = days19.dividedBy((int) 'a');
        org.joda.time.ReadableInterval readableInterval22 = null;
        org.joda.time.Days days23 = org.joda.time.Days.daysIn(readableInterval22);
        int int25 = days23.getValue((int) (short) 0);
        org.joda.time.Days days26 = org.joda.time.Days.FIVE;
        org.joda.time.Days days27 = days23.minus(days26);
        org.joda.time.DurationFieldType durationFieldType28 = null;
        boolean boolean29 = days26.isSupported(durationFieldType28);
        org.joda.time.DurationFieldType durationFieldType31 = days26.getFieldType(0);
        org.joda.time.Period period32 = days26.toPeriod();
        int int34 = days26.getValue(0);
        int int35 = days26.getDays();
        org.joda.time.Days days37 = days26.multipliedBy(10);
        boolean boolean38 = days19.equals((java.lang.Object) days26);
        org.joda.time.ReadableInterval readableInterval39 = null;
        org.joda.time.Days days40 = org.joda.time.Days.daysIn(readableInterval39);
        org.joda.time.Days days42 = days40.plus((int) (byte) 10);
        org.joda.time.Days days44 = days42.dividedBy((int) 'a');
        org.joda.time.DurationFieldType durationFieldType45 = days44.getFieldType();
        int int46 = days26.get(durationFieldType45);
        boolean boolean47 = days14.isSupported(durationFieldType45);
        org.junit.Assert.assertNotNull(days1);
        org.junit.Assert.assertNotNull(days3);
        org.junit.Assert.assertNotNull(days5);
        org.junit.Assert.assertNotNull(days7);
        org.junit.Assert.assertNotNull(days9);
        org.junit.Assert.assertNotNull(days11);
        org.junit.Assert.assertNotNull(days12);
        org.junit.Assert.assertNotNull(days14);
        org.junit.Assert.assertNotNull(duration15);
        org.junit.Assert.assertNotNull(days17);
        org.junit.Assert.assertNotNull(days19);
        org.junit.Assert.assertNotNull(days21);
        org.junit.Assert.assertNotNull(days23);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertNotNull(days26);
        org.junit.Assert.assertNotNull(days27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(durationFieldType31);
        org.junit.Assert.assertNotNull(period32);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 5 + "'", int34 == 5);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 5 + "'", int35 == 5);
        org.junit.Assert.assertNotNull(days37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(days40);
        org.junit.Assert.assertNotNull(days42);
        org.junit.Assert.assertNotNull(days44);
        org.junit.Assert.assertNotNull(durationFieldType45);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 5 + "'", int46 == 5);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
    }

    @Test
    public void test0447() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0447");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Days days1 = org.joda.time.Days.daysIn(readableInterval0);
        org.joda.time.Days days3 = days1.plus((int) (byte) 10);
        org.joda.time.Days days5 = days3.dividedBy((int) 'a');
        org.joda.time.Days days7 = days3.plus((int) ' ');
        org.joda.time.Days days8 = org.joda.time.Days.standardDaysIn((org.joda.time.ReadablePeriod) days7);
        org.joda.time.ReadableInterval readableInterval9 = null;
        org.joda.time.Days days10 = org.joda.time.Days.daysIn(readableInterval9);
        int int12 = days10.getValue((int) (short) 0);
        org.joda.time.ReadableInterval readableInterval13 = null;
        org.joda.time.Days days14 = org.joda.time.Days.daysIn(readableInterval13);
        int int16 = days14.getValue((int) (short) 0);
        org.joda.time.Days days17 = org.joda.time.Days.FIVE;
        org.joda.time.Days days18 = days14.minus(days17);
        int int19 = days10.compareTo((org.joda.time.base.BaseSingleFieldPeriod) days17);
        java.lang.String str20 = days10.toString();
        org.joda.time.Days days22 = days10.plus((int) '4');
        org.joda.time.PeriodType periodType23 = days22.getPeriodType();
        int int24 = days22.getDays();
        org.joda.time.Days days26 = days22.minus((int) ' ');
        org.joda.time.ReadableInterval readableInterval27 = null;
        org.joda.time.Days days28 = org.joda.time.Days.daysIn(readableInterval27);
        org.joda.time.Days days30 = days28.plus((int) (byte) 10);
        org.joda.time.Days days32 = days30.dividedBy((int) 'a');
        org.joda.time.Days days34 = days30.dividedBy(5);
        org.joda.time.Days days36 = days30.plus((int) (byte) -1);
        org.joda.time.Days days37 = days22.plus(days30);
        boolean boolean38 = days8.isLessThan(days37);
        org.joda.time.Period period39 = days8.toPeriod();
        org.joda.time.ReadableInterval readableInterval40 = null;
        org.joda.time.Days days41 = org.joda.time.Days.daysIn(readableInterval40);
        int int43 = days41.getValue((int) (short) 0);
        org.joda.time.ReadableInterval readableInterval44 = null;
        org.joda.time.Days days45 = org.joda.time.Days.daysIn(readableInterval44);
        int int47 = days45.getValue((int) (short) 0);
        org.joda.time.Days days48 = org.joda.time.Days.FIVE;
        org.joda.time.Days days49 = days45.minus(days48);
        int int50 = days41.compareTo((org.joda.time.base.BaseSingleFieldPeriod) days48);
        org.joda.time.MutablePeriod mutablePeriod51 = days48.toMutablePeriod();
        org.joda.time.ReadableInterval readableInterval52 = null;
        org.joda.time.Days days53 = org.joda.time.Days.daysIn(readableInterval52);
        int int55 = days53.getValue((int) (short) 0);
        org.joda.time.ReadableInterval readableInterval56 = null;
        org.joda.time.Days days57 = org.joda.time.Days.daysIn(readableInterval56);
        int int59 = days57.getValue((int) (short) 0);
        org.joda.time.Days days60 = org.joda.time.Days.FIVE;
        org.joda.time.Days days61 = days57.minus(days60);
        int int62 = days53.compareTo((org.joda.time.base.BaseSingleFieldPeriod) days60);
        org.joda.time.ReadableInterval readableInterval63 = null;
        org.joda.time.Days days64 = org.joda.time.Days.daysIn(readableInterval63);
        int int66 = days64.getValue((int) (short) 0);
        org.joda.time.Days days67 = org.joda.time.Days.FIVE;
        org.joda.time.Days days68 = days64.minus(days67);
        org.joda.time.DurationFieldType durationFieldType69 = null;
        boolean boolean70 = days67.isSupported(durationFieldType69);
        org.joda.time.DurationFieldType durationFieldType72 = days67.getFieldType(0);
        int int73 = days53.get(durationFieldType72);
        boolean boolean74 = days48.isSupported(durationFieldType72);
        boolean boolean75 = days8.isSupported(durationFieldType72);
        org.joda.time.MutablePeriod mutablePeriod76 = days8.toMutablePeriod();
        org.junit.Assert.assertNotNull(days1);
        org.junit.Assert.assertNotNull(days3);
        org.junit.Assert.assertNotNull(days5);
        org.junit.Assert.assertNotNull(days7);
        org.junit.Assert.assertNotNull(days8);
        org.junit.Assert.assertNotNull(days10);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNotNull(days14);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertNotNull(days17);
        org.junit.Assert.assertNotNull(days18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "P0D" + "'", str20, "P0D");
        org.junit.Assert.assertNotNull(days22);
        org.junit.Assert.assertNotNull(periodType23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 52 + "'", int24 == 52);
        org.junit.Assert.assertNotNull(days26);
        org.junit.Assert.assertNotNull(days28);
        org.junit.Assert.assertNotNull(days30);
        org.junit.Assert.assertNotNull(days32);
        org.junit.Assert.assertNotNull(days34);
        org.junit.Assert.assertNotNull(days36);
        org.junit.Assert.assertNotNull(days37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(period39);
        org.junit.Assert.assertNotNull(days41);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0);
        org.junit.Assert.assertNotNull(days45);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 0 + "'", int47 == 0);
        org.junit.Assert.assertNotNull(days48);
        org.junit.Assert.assertNotNull(days49);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + (-1) + "'", int50 == (-1));
        org.junit.Assert.assertNotNull(mutablePeriod51);
        org.junit.Assert.assertNotNull(days53);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 0 + "'", int55 == 0);
        org.junit.Assert.assertNotNull(days57);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 0 + "'", int59 == 0);
        org.junit.Assert.assertNotNull(days60);
        org.junit.Assert.assertNotNull(days61);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + (-1) + "'", int62 == (-1));
        org.junit.Assert.assertNotNull(days64);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 0 + "'", int66 == 0);
        org.junit.Assert.assertNotNull(days67);
        org.junit.Assert.assertNotNull(days68);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(durationFieldType72);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 0 + "'", int73 == 0);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertNotNull(mutablePeriod76);
    }

    @Test
    public void test0448() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0448");
        org.joda.time.Days days0 = org.joda.time.Days.THREE;
        org.joda.time.ReadableInterval readableInterval1 = null;
        org.joda.time.Days days2 = org.joda.time.Days.daysIn(readableInterval1);
        org.joda.time.ReadableInterval readableInterval3 = null;
        org.joda.time.Days days4 = org.joda.time.Days.daysIn(readableInterval3);
        int int6 = days4.getValue((int) (short) 0);
        org.joda.time.Days days7 = org.joda.time.Days.FIVE;
        org.joda.time.Days days8 = days4.minus(days7);
        org.joda.time.DurationFieldType durationFieldType9 = null;
        boolean boolean10 = days7.isSupported(durationFieldType9);
        org.joda.time.DurationFieldType durationFieldType12 = days7.getFieldType(0);
        int int13 = days2.get(durationFieldType12);
        org.joda.time.ReadableInterval readableInterval14 = null;
        org.joda.time.Days days15 = org.joda.time.Days.daysIn(readableInterval14);
        int int17 = days15.getValue((int) (short) 0);
        org.joda.time.Days days18 = org.joda.time.Days.FIVE;
        org.joda.time.Days days19 = days15.minus(days18);
        org.joda.time.DurationFieldType durationFieldType20 = null;
        int int21 = days18.get(durationFieldType20);
        org.joda.time.DurationFieldType durationFieldType22 = null;
        int int23 = days18.get(durationFieldType22);
        boolean boolean25 = days18.equals((java.lang.Object) 0L);
        boolean boolean26 = days2.isGreaterThan(days18);
        org.joda.time.ReadableInterval readableInterval27 = null;
        org.joda.time.Days days28 = org.joda.time.Days.daysIn(readableInterval27);
        int int30 = days28.getValue((int) (short) 0);
        org.joda.time.Days days31 = org.joda.time.Days.FIVE;
        org.joda.time.Days days32 = days28.minus(days31);
        org.joda.time.DurationFieldType durationFieldType33 = null;
        int int34 = days31.get(durationFieldType33);
        org.joda.time.DurationFieldType durationFieldType35 = null;
        int int36 = days31.get(durationFieldType35);
        boolean boolean38 = days31.equals((java.lang.Object) 0L);
        org.joda.time.Period period39 = days31.toPeriod();
        org.joda.time.Days days40 = days2.plus(days31);
        boolean boolean41 = days0.isGreaterThan(days40);
        org.joda.time.ReadableInterval readableInterval42 = null;
        org.joda.time.Days days43 = org.joda.time.Days.daysIn(readableInterval42);
        int int45 = days43.getValue((int) (short) 0);
        org.joda.time.Days days46 = org.joda.time.Days.FIVE;
        org.joda.time.Days days47 = days43.minus(days46);
        org.joda.time.Days days48 = null;
        org.joda.time.Days days49 = days43.minus(days48);
        boolean boolean50 = days0.equals((java.lang.Object) days49);
        org.joda.time.Days days52 = days49.multipliedBy(100);
        int int53 = days52.size();
        org.joda.time.MutablePeriod mutablePeriod54 = days52.toMutablePeriod();
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.DurationFieldType durationFieldType56 = days52.getFieldType(5);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 5");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(days0);
        org.junit.Assert.assertNotNull(days2);
        org.junit.Assert.assertNotNull(days4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNotNull(days7);
        org.junit.Assert.assertNotNull(days8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(durationFieldType12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(days15);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNotNull(days18);
        org.junit.Assert.assertNotNull(days19);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(days28);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertNotNull(days31);
        org.junit.Assert.assertNotNull(days32);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(period39);
        org.junit.Assert.assertNotNull(days40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(days43);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 0 + "'", int45 == 0);
        org.junit.Assert.assertNotNull(days46);
        org.junit.Assert.assertNotNull(days47);
        org.junit.Assert.assertNotNull(days49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(days52);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 1 + "'", int53 == 1);
        org.junit.Assert.assertNotNull(mutablePeriod54);
    }

    @Test
    public void test0449() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0449");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Days days1 = org.joda.time.Days.daysIn(readableInterval0);
        org.joda.time.ReadableInterval readableInterval2 = null;
        org.joda.time.Days days3 = org.joda.time.Days.daysIn(readableInterval2);
        int int5 = days3.getValue((int) (short) 0);
        org.joda.time.Days days6 = org.joda.time.Days.FIVE;
        org.joda.time.Days days7 = days3.minus(days6);
        org.joda.time.DurationFieldType durationFieldType8 = null;
        boolean boolean9 = days6.isSupported(durationFieldType8);
        org.joda.time.DurationFieldType durationFieldType11 = days6.getFieldType(0);
        int int12 = days1.get(durationFieldType11);
        org.joda.time.PeriodType periodType13 = days1.getPeriodType();
        org.joda.time.Days days15 = days1.multipliedBy((int) (short) -1);
        org.joda.time.ReadableInterval readableInterval16 = null;
        org.joda.time.Days days17 = org.joda.time.Days.daysIn(readableInterval16);
        int int19 = days17.getValue((int) (short) 0);
        org.joda.time.Days days20 = org.joda.time.Days.FIVE;
        org.joda.time.Days days21 = days17.minus(days20);
        org.joda.time.Days days22 = null;
        org.joda.time.Days days23 = days17.minus(days22);
        org.joda.time.Days days25 = days23.minus(100);
        org.joda.time.ReadableInterval readableInterval26 = null;
        org.joda.time.Days days27 = org.joda.time.Days.daysIn(readableInterval26);
        int int29 = days27.getValue((int) (short) 0);
        org.joda.time.Days days30 = org.joda.time.Days.FIVE;
        org.joda.time.Days days31 = days27.minus(days30);
        org.joda.time.Days days32 = null;
        org.joda.time.Days days33 = days27.minus(days32);
        org.joda.time.Days days35 = days27.minus((-1));
        org.joda.time.Days days36 = days23.plus(days27);
        boolean boolean37 = days1.isGreaterThan(days27);
        org.joda.time.ReadableInterval readableInterval38 = null;
        org.joda.time.Days days39 = org.joda.time.Days.daysIn(readableInterval38);
        int int41 = days39.getValue((int) (short) 0);
        org.joda.time.Days days42 = org.joda.time.Days.FIVE;
        org.joda.time.Days days43 = days39.minus(days42);
        org.joda.time.DurationFieldType durationFieldType44 = null;
        int int45 = days42.get(durationFieldType44);
        org.joda.time.DurationFieldType durationFieldType46 = null;
        int int47 = days42.get(durationFieldType46);
        boolean boolean49 = days42.equals((java.lang.Object) 0L);
        int int50 = days42.getDays();
        org.joda.time.Days days52 = days42.minus((int) ' ');
        org.joda.time.ReadableInterval readableInterval53 = null;
        org.joda.time.Days days54 = org.joda.time.Days.daysIn(readableInterval53);
        int int56 = days54.getValue((int) (short) 0);
        org.joda.time.Days days57 = org.joda.time.Days.FIVE;
        org.joda.time.Days days58 = days54.minus(days57);
        org.joda.time.DurationFieldType durationFieldType59 = null;
        boolean boolean60 = days57.isSupported(durationFieldType59);
        org.joda.time.DurationFieldType durationFieldType62 = days57.getFieldType(0);
        org.joda.time.ReadableInterval readableInterval63 = null;
        org.joda.time.Days days64 = org.joda.time.Days.daysIn(readableInterval63);
        int int66 = days64.getValue((int) (short) 0);
        org.joda.time.Days days67 = org.joda.time.Days.FIVE;
        org.joda.time.Days days68 = days64.minus(days67);
        org.joda.time.Days days69 = null;
        org.joda.time.Days days70 = days64.minus(days69);
        org.joda.time.Days days72 = days64.minus((-1));
        org.joda.time.DurationFieldType durationFieldType73 = days64.getFieldType();
        boolean boolean74 = days57.isGreaterThan(days64);
        org.joda.time.ReadableInterval readableInterval75 = null;
        org.joda.time.Days days76 = org.joda.time.Days.daysIn(readableInterval75);
        org.joda.time.Days days78 = days76.plus((int) (byte) 10);
        org.joda.time.Days days79 = days64.plus(days78);
        org.joda.time.ReadableInterval readableInterval80 = null;
        org.joda.time.Days days81 = org.joda.time.Days.daysIn(readableInterval80);
        int int83 = days81.getValue((int) (short) 0);
        org.joda.time.Days days84 = org.joda.time.Days.FIVE;
        org.joda.time.Days days85 = days81.minus(days84);
        org.joda.time.Days days86 = null;
        org.joda.time.Days days87 = days81.minus(days86);
        org.joda.time.Duration duration88 = days81.toStandardDuration();
        org.joda.time.Days days89 = days79.minus(days81);
        org.joda.time.Duration duration90 = days89.toStandardDuration();
        org.joda.time.Days days92 = days89.minus(5);
        org.joda.time.ReadableInterval readableInterval93 = null;
        org.joda.time.Days days94 = org.joda.time.Days.daysIn(readableInterval93);
        org.joda.time.Days days96 = days94.plus((int) (byte) 10);
        org.joda.time.Days days97 = days92.plus(days94);
        org.joda.time.Days days98 = days42.minus(days94);
        int int99 = days1.compareTo((org.joda.time.base.BaseSingleFieldPeriod) days42);
        org.junit.Assert.assertNotNull(days1);
        org.junit.Assert.assertNotNull(days3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(days6);
        org.junit.Assert.assertNotNull(days7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(durationFieldType11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNotNull(periodType13);
        org.junit.Assert.assertNotNull(days15);
        org.junit.Assert.assertNotNull(days17);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertNotNull(days20);
        org.junit.Assert.assertNotNull(days21);
        org.junit.Assert.assertNotNull(days23);
        org.junit.Assert.assertNotNull(days25);
        org.junit.Assert.assertNotNull(days27);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertNotNull(days30);
        org.junit.Assert.assertNotNull(days31);
        org.junit.Assert.assertNotNull(days33);
        org.junit.Assert.assertNotNull(days35);
        org.junit.Assert.assertNotNull(days36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(days39);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0);
        org.junit.Assert.assertNotNull(days42);
        org.junit.Assert.assertNotNull(days43);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 0 + "'", int45 == 0);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 0 + "'", int47 == 0);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 5 + "'", int50 == 5);
        org.junit.Assert.assertNotNull(days52);
        org.junit.Assert.assertNotNull(days54);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 0 + "'", int56 == 0);
        org.junit.Assert.assertNotNull(days57);
        org.junit.Assert.assertNotNull(days58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(durationFieldType62);
        org.junit.Assert.assertNotNull(days64);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 0 + "'", int66 == 0);
        org.junit.Assert.assertNotNull(days67);
        org.junit.Assert.assertNotNull(days68);
        org.junit.Assert.assertNotNull(days70);
        org.junit.Assert.assertNotNull(days72);
        org.junit.Assert.assertNotNull(durationFieldType73);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertNotNull(days76);
        org.junit.Assert.assertNotNull(days78);
        org.junit.Assert.assertNotNull(days79);
        org.junit.Assert.assertNotNull(days81);
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + 0 + "'", int83 == 0);
        org.junit.Assert.assertNotNull(days84);
        org.junit.Assert.assertNotNull(days85);
        org.junit.Assert.assertNotNull(days87);
        org.junit.Assert.assertNotNull(duration88);
        org.junit.Assert.assertNotNull(days89);
        org.junit.Assert.assertNotNull(duration90);
        org.junit.Assert.assertNotNull(days92);
        org.junit.Assert.assertNotNull(days94);
        org.junit.Assert.assertNotNull(days96);
        org.junit.Assert.assertNotNull(days97);
        org.junit.Assert.assertNotNull(days98);
        org.junit.Assert.assertTrue("'" + int99 + "' != '" + (-1) + "'", int99 == (-1));
    }

    @Test
    public void test0450() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0450");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Days days1 = org.joda.time.Days.daysIn(readableInterval0);
        int int3 = days1.getValue((int) (short) 0);
        org.joda.time.Days days4 = org.joda.time.Days.FIVE;
        org.joda.time.Days days5 = days1.minus(days4);
        org.joda.time.DurationFieldType durationFieldType6 = null;
        boolean boolean7 = days4.isSupported(durationFieldType6);
        org.joda.time.DurationFieldType durationFieldType9 = days4.getFieldType(0);
        org.joda.time.ReadableInterval readableInterval10 = null;
        org.joda.time.Days days11 = org.joda.time.Days.daysIn(readableInterval10);
        int int13 = days11.getValue((int) (short) 0);
        org.joda.time.Days days14 = org.joda.time.Days.FIVE;
        org.joda.time.Days days15 = days11.minus(days14);
        org.joda.time.Days days16 = null;
        org.joda.time.Days days17 = days11.minus(days16);
        org.joda.time.Days days19 = days11.minus((-1));
        org.joda.time.DurationFieldType durationFieldType20 = days11.getFieldType();
        boolean boolean21 = days4.isGreaterThan(days11);
        org.joda.time.ReadableInterval readableInterval22 = null;
        org.joda.time.Days days23 = org.joda.time.Days.daysIn(readableInterval22);
        org.joda.time.Days days25 = days23.plus((int) (byte) 10);
        org.joda.time.Days days26 = days11.plus(days25);
        org.joda.time.ReadableInterval readableInterval27 = null;
        org.joda.time.Days days28 = org.joda.time.Days.daysIn(readableInterval27);
        int int30 = days28.getValue((int) (short) 0);
        org.joda.time.Days days31 = org.joda.time.Days.FIVE;
        org.joda.time.Days days32 = days28.minus(days31);
        org.joda.time.Days days33 = null;
        org.joda.time.Days days34 = days28.minus(days33);
        org.joda.time.Duration duration35 = days28.toStandardDuration();
        org.joda.time.Days days36 = days26.minus(days28);
        org.joda.time.Days days38 = days36.plus(100);
        org.joda.time.Period period39 = days36.toPeriod();
        java.lang.Class<?> wildcardClass40 = period39.getClass();
        org.junit.Assert.assertNotNull(days1);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(days4);
        org.junit.Assert.assertNotNull(days5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(durationFieldType9);
        org.junit.Assert.assertNotNull(days11);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(days14);
        org.junit.Assert.assertNotNull(days15);
        org.junit.Assert.assertNotNull(days17);
        org.junit.Assert.assertNotNull(days19);
        org.junit.Assert.assertNotNull(durationFieldType20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(days23);
        org.junit.Assert.assertNotNull(days25);
        org.junit.Assert.assertNotNull(days26);
        org.junit.Assert.assertNotNull(days28);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertNotNull(days31);
        org.junit.Assert.assertNotNull(days32);
        org.junit.Assert.assertNotNull(days34);
        org.junit.Assert.assertNotNull(duration35);
        org.junit.Assert.assertNotNull(days36);
        org.junit.Assert.assertNotNull(days38);
        org.junit.Assert.assertNotNull(period39);
        org.junit.Assert.assertNotNull(wildcardClass40);
    }

    @Test
    public void test0451() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0451");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Days days1 = org.joda.time.Days.daysIn(readableInterval0);
        org.joda.time.Days days3 = days1.plus((int) (byte) 10);
        org.joda.time.Days days5 = days3.dividedBy((int) 'a');
        org.joda.time.Days days7 = days3.dividedBy(5);
        org.joda.time.Days days9 = days3.plus((int) (byte) -1);
        org.joda.time.Days days11 = days3.dividedBy((int) (byte) -1);
        java.lang.String str12 = days3.toString();
        org.joda.time.Period period13 = days3.toPeriod();
        org.junit.Assert.assertNotNull(days1);
        org.junit.Assert.assertNotNull(days3);
        org.junit.Assert.assertNotNull(days5);
        org.junit.Assert.assertNotNull(days7);
        org.junit.Assert.assertNotNull(days9);
        org.junit.Assert.assertNotNull(days11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "P10D" + "'", str12, "P10D");
        org.junit.Assert.assertNotNull(period13);
    }

    @Test
    public void test0452() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0452");
        org.joda.time.Days days1 = org.joda.time.Days.days((-47));
        org.junit.Assert.assertNotNull(days1);
    }

    @Test
    public void test0453() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0453");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Days days1 = org.joda.time.Days.daysIn(readableInterval0);
        int int3 = days1.getValue((int) (short) 0);
        org.joda.time.Days days4 = org.joda.time.Days.FIVE;
        org.joda.time.Days days5 = days1.minus(days4);
        org.joda.time.DurationFieldType durationFieldType6 = null;
        boolean boolean7 = days4.isSupported(durationFieldType6);
        org.joda.time.DurationFieldType durationFieldType9 = days4.getFieldType(0);
        org.joda.time.ReadableInterval readableInterval10 = null;
        org.joda.time.Days days11 = org.joda.time.Days.daysIn(readableInterval10);
        int int13 = days11.getValue((int) (short) 0);
        org.joda.time.Days days14 = org.joda.time.Days.FIVE;
        org.joda.time.Days days15 = days11.minus(days14);
        org.joda.time.Days days16 = null;
        org.joda.time.Days days17 = days11.minus(days16);
        org.joda.time.Days days19 = days11.minus((-1));
        org.joda.time.DurationFieldType durationFieldType20 = days11.getFieldType();
        boolean boolean21 = days4.isGreaterThan(days11);
        org.joda.time.ReadableInterval readableInterval22 = null;
        org.joda.time.Days days23 = org.joda.time.Days.daysIn(readableInterval22);
        org.joda.time.Days days25 = days23.plus((int) (byte) 10);
        org.joda.time.Days days26 = days11.plus(days25);
        org.joda.time.ReadableInterval readableInterval27 = null;
        org.joda.time.Days days28 = org.joda.time.Days.daysIn(readableInterval27);
        int int30 = days28.getValue((int) (short) 0);
        org.joda.time.Days days31 = org.joda.time.Days.FIVE;
        org.joda.time.Days days32 = days28.minus(days31);
        org.joda.time.Days days33 = null;
        org.joda.time.Days days34 = days28.minus(days33);
        org.joda.time.Duration duration35 = days28.toStandardDuration();
        org.joda.time.Days days36 = days26.minus(days28);
        int int37 = days26.getDays();
        org.junit.Assert.assertNotNull(days1);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(days4);
        org.junit.Assert.assertNotNull(days5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(durationFieldType9);
        org.junit.Assert.assertNotNull(days11);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(days14);
        org.junit.Assert.assertNotNull(days15);
        org.junit.Assert.assertNotNull(days17);
        org.junit.Assert.assertNotNull(days19);
        org.junit.Assert.assertNotNull(durationFieldType20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(days23);
        org.junit.Assert.assertNotNull(days25);
        org.junit.Assert.assertNotNull(days26);
        org.junit.Assert.assertNotNull(days28);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertNotNull(days31);
        org.junit.Assert.assertNotNull(days32);
        org.junit.Assert.assertNotNull(days34);
        org.junit.Assert.assertNotNull(duration35);
        org.junit.Assert.assertNotNull(days36);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 10 + "'", int37 == 10);
    }

    @Test
    public void test0454() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0454");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Days days1 = org.joda.time.Days.daysIn(readableInterval0);
        org.joda.time.Days days3 = days1.plus((int) (byte) 10);
        org.joda.time.Days days5 = days3.dividedBy((int) 'a');
        org.joda.time.Days days7 = days3.plus((int) ' ');
        org.joda.time.Days days8 = org.joda.time.Days.standardDaysIn((org.joda.time.ReadablePeriod) days7);
        org.joda.time.Days days10 = days8.minus((int) '#');
        org.joda.time.Days days12 = days8.multipliedBy((int) (short) 1);
        org.joda.time.Days days14 = days8.minus((int) '4');
        org.junit.Assert.assertNotNull(days1);
        org.junit.Assert.assertNotNull(days3);
        org.junit.Assert.assertNotNull(days5);
        org.junit.Assert.assertNotNull(days7);
        org.junit.Assert.assertNotNull(days8);
        org.junit.Assert.assertNotNull(days10);
        org.junit.Assert.assertNotNull(days12);
        org.junit.Assert.assertNotNull(days14);
    }

    @Test
    public void test0455() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0455");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Days days1 = org.joda.time.Days.daysIn(readableInterval0);
        org.joda.time.Days days3 = days1.plus((int) (byte) 10);
        org.joda.time.Days days5 = days3.dividedBy((int) 'a');
        org.joda.time.Days days7 = days3.plus((int) ' ');
        org.joda.time.Days days9 = days7.multipliedBy(5);
        org.joda.time.MutablePeriod mutablePeriod10 = days7.toMutablePeriod();
        org.junit.Assert.assertNotNull(days1);
        org.junit.Assert.assertNotNull(days3);
        org.junit.Assert.assertNotNull(days5);
        org.junit.Assert.assertNotNull(days7);
        org.junit.Assert.assertNotNull(days9);
        org.junit.Assert.assertNotNull(mutablePeriod10);
    }

    @Test
    public void test0456() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0456");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Days days1 = org.joda.time.Days.daysIn(readableInterval0);
        int int3 = days1.getValue((int) (short) 0);
        org.joda.time.Period period4 = days1.toPeriod();
        org.joda.time.Days days5 = org.joda.time.Days.standardDaysIn((org.joda.time.ReadablePeriod) days1);
        org.joda.time.Days days6 = org.joda.time.Days.THREE;
        org.joda.time.ReadableInterval readableInterval7 = null;
        org.joda.time.Days days8 = org.joda.time.Days.daysIn(readableInterval7);
        org.joda.time.ReadableInterval readableInterval9 = null;
        org.joda.time.Days days10 = org.joda.time.Days.daysIn(readableInterval9);
        int int12 = days10.getValue((int) (short) 0);
        org.joda.time.Days days13 = org.joda.time.Days.FIVE;
        org.joda.time.Days days14 = days10.minus(days13);
        org.joda.time.DurationFieldType durationFieldType15 = null;
        boolean boolean16 = days13.isSupported(durationFieldType15);
        org.joda.time.DurationFieldType durationFieldType18 = days13.getFieldType(0);
        int int19 = days8.get(durationFieldType18);
        org.joda.time.ReadableInterval readableInterval20 = null;
        org.joda.time.Days days21 = org.joda.time.Days.daysIn(readableInterval20);
        int int23 = days21.getValue((int) (short) 0);
        org.joda.time.Days days24 = org.joda.time.Days.FIVE;
        org.joda.time.Days days25 = days21.minus(days24);
        org.joda.time.DurationFieldType durationFieldType26 = null;
        int int27 = days24.get(durationFieldType26);
        org.joda.time.DurationFieldType durationFieldType28 = null;
        int int29 = days24.get(durationFieldType28);
        boolean boolean31 = days24.equals((java.lang.Object) 0L);
        boolean boolean32 = days8.isGreaterThan(days24);
        org.joda.time.ReadableInterval readableInterval33 = null;
        org.joda.time.Days days34 = org.joda.time.Days.daysIn(readableInterval33);
        int int36 = days34.getValue((int) (short) 0);
        org.joda.time.Days days37 = org.joda.time.Days.FIVE;
        org.joda.time.Days days38 = days34.minus(days37);
        org.joda.time.DurationFieldType durationFieldType39 = null;
        int int40 = days37.get(durationFieldType39);
        org.joda.time.DurationFieldType durationFieldType41 = null;
        int int42 = days37.get(durationFieldType41);
        boolean boolean44 = days37.equals((java.lang.Object) 0L);
        org.joda.time.Period period45 = days37.toPeriod();
        org.joda.time.Days days46 = days8.plus(days37);
        boolean boolean47 = days6.isGreaterThan(days46);
        org.joda.time.Days days49 = days46.dividedBy(42);
        boolean boolean50 = days5.isLessThan(days46);
        org.joda.time.DurationFieldType durationFieldType51 = days46.getFieldType();
        org.joda.time.ReadableInterval readableInterval52 = null;
        org.joda.time.Days days53 = org.joda.time.Days.daysIn(readableInterval52);
        int int55 = days53.getValue((int) (short) 0);
        org.joda.time.Days days56 = org.joda.time.Days.FIVE;
        org.joda.time.Days days57 = days53.minus(days56);
        org.joda.time.Days days58 = null;
        org.joda.time.Days days59 = days53.minus(days58);
        org.joda.time.ReadableInterval readableInterval60 = null;
        org.joda.time.Days days61 = org.joda.time.Days.daysIn(readableInterval60);
        org.joda.time.ReadableInterval readableInterval62 = null;
        org.joda.time.Days days63 = org.joda.time.Days.daysIn(readableInterval62);
        int int65 = days63.getValue((int) (short) 0);
        org.joda.time.Days days66 = org.joda.time.Days.FIVE;
        org.joda.time.Days days67 = days63.minus(days66);
        org.joda.time.DurationFieldType durationFieldType68 = null;
        boolean boolean69 = days66.isSupported(durationFieldType68);
        org.joda.time.DurationFieldType durationFieldType71 = days66.getFieldType(0);
        int int72 = days61.get(durationFieldType71);
        org.joda.time.PeriodType periodType73 = days61.getPeriodType();
        org.joda.time.Days days74 = days53.plus(days61);
        org.joda.time.Days days75 = org.joda.time.Days.standardDaysIn((org.joda.time.ReadablePeriod) days74);
        boolean boolean76 = days46.isLessThan(days74);
        org.junit.Assert.assertNotNull(days1);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(days5);
        org.junit.Assert.assertNotNull(days6);
        org.junit.Assert.assertNotNull(days8);
        org.junit.Assert.assertNotNull(days10);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNotNull(days13);
        org.junit.Assert.assertNotNull(days14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(durationFieldType18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertNotNull(days21);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertNotNull(days24);
        org.junit.Assert.assertNotNull(days25);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(days34);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertNotNull(days37);
        org.junit.Assert.assertNotNull(days38);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(period45);
        org.junit.Assert.assertNotNull(days46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(days49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(durationFieldType51);
        org.junit.Assert.assertNotNull(days53);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 0 + "'", int55 == 0);
        org.junit.Assert.assertNotNull(days56);
        org.junit.Assert.assertNotNull(days57);
        org.junit.Assert.assertNotNull(days59);
        org.junit.Assert.assertNotNull(days61);
        org.junit.Assert.assertNotNull(days63);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 0 + "'", int65 == 0);
        org.junit.Assert.assertNotNull(days66);
        org.junit.Assert.assertNotNull(days67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(durationFieldType71);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 0 + "'", int72 == 0);
        org.junit.Assert.assertNotNull(periodType73);
        org.junit.Assert.assertNotNull(days74);
        org.junit.Assert.assertNotNull(days75);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
    }

    @Test
    public void test0457() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0457");
        org.joda.time.Days days0 = org.joda.time.Days.MAX_VALUE;
        org.joda.time.Days days1 = days0.negated();
        org.joda.time.PeriodType periodType2 = days0.getPeriodType();
        org.joda.time.ReadableInterval readableInterval3 = null;
        org.joda.time.Days days4 = org.joda.time.Days.daysIn(readableInterval3);
        int int6 = days4.getValue((int) (short) 0);
        org.joda.time.Days days7 = org.joda.time.Days.FIVE;
        org.joda.time.Days days8 = days4.minus(days7);
        org.joda.time.DurationFieldType durationFieldType9 = null;
        int int10 = days7.get(durationFieldType9);
        org.joda.time.Days days12 = days7.dividedBy(100);
        int int13 = days0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) days7);
        int int14 = days0.getDays();
        java.lang.String str15 = days0.toString();
        org.joda.time.Period period16 = days0.toPeriod();
        java.lang.Class<?> wildcardClass17 = period16.getClass();
        org.junit.Assert.assertNotNull(days0);
        org.junit.Assert.assertNotNull(days1);
        org.junit.Assert.assertNotNull(periodType2);
        org.junit.Assert.assertNotNull(days4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNotNull(days7);
        org.junit.Assert.assertNotNull(days8);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(days12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 2147483647 + "'", int14 == 2147483647);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "P2147483647D" + "'", str15, "P2147483647D");
        org.junit.Assert.assertNotNull(period16);
        org.junit.Assert.assertNotNull(wildcardClass17);
    }

    @Test
    public void test0458() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0458");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Days days1 = org.joda.time.Days.daysIn(readableInterval0);
        int int3 = days1.getValue((int) (short) 0);
        org.joda.time.Days days4 = org.joda.time.Days.FIVE;
        org.joda.time.Days days5 = days1.minus(days4);
        org.joda.time.Days days6 = null;
        org.joda.time.Days days7 = days1.minus(days6);
        org.joda.time.MutablePeriod mutablePeriod8 = days7.toMutablePeriod();
        org.joda.time.ReadableInterval readableInterval9 = null;
        org.joda.time.Days days10 = org.joda.time.Days.daysIn(readableInterval9);
        int int12 = days10.getValue((int) (short) 0);
        org.joda.time.Days days13 = org.joda.time.Days.FIVE;
        org.joda.time.Days days14 = days10.minus(days13);
        org.joda.time.DurationFieldType durationFieldType15 = null;
        boolean boolean16 = days13.isSupported(durationFieldType15);
        org.joda.time.DurationFieldType durationFieldType18 = days13.getFieldType(0);
        org.joda.time.Days days20 = days13.dividedBy(42);
        org.joda.time.Days days22 = org.joda.time.Days.parseDays("P51D");
        org.joda.time.Period period23 = days22.toPeriod();
        org.joda.time.ReadableInterval readableInterval24 = null;
        org.joda.time.Days days25 = org.joda.time.Days.daysIn(readableInterval24);
        int int27 = days25.getValue((int) (short) 0);
        org.joda.time.ReadableInterval readableInterval28 = null;
        org.joda.time.Days days29 = org.joda.time.Days.daysIn(readableInterval28);
        int int31 = days29.getValue((int) (short) 0);
        org.joda.time.Days days32 = org.joda.time.Days.FIVE;
        org.joda.time.Days days33 = days29.minus(days32);
        int int34 = days25.compareTo((org.joda.time.base.BaseSingleFieldPeriod) days32);
        java.lang.String str35 = days25.toString();
        org.joda.time.Days days37 = days25.plus((int) '4');
        org.joda.time.PeriodType periodType38 = days37.getPeriodType();
        int int39 = days37.getDays();
        org.joda.time.Days days41 = days37.minus((int) ' ');
        org.joda.time.ReadableInterval readableInterval42 = null;
        org.joda.time.Days days43 = org.joda.time.Days.daysIn(readableInterval42);
        org.joda.time.Days days45 = days43.plus((int) (byte) 10);
        org.joda.time.Days days47 = days45.dividedBy((int) 'a');
        org.joda.time.Days days49 = days45.dividedBy(5);
        org.joda.time.Days days51 = days45.plus((int) (byte) -1);
        org.joda.time.Days days52 = days37.plus(days45);
        org.joda.time.Period period53 = days37.toPeriod();
        org.joda.time.DurationFieldType durationFieldType54 = days37.getFieldType();
        int int55 = days22.get(durationFieldType54);
        boolean boolean56 = days20.isSupported(durationFieldType54);
        int int57 = days7.get(durationFieldType54);
        org.junit.Assert.assertNotNull(days1);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(days4);
        org.junit.Assert.assertNotNull(days5);
        org.junit.Assert.assertNotNull(days7);
        org.junit.Assert.assertNotNull(mutablePeriod8);
        org.junit.Assert.assertNotNull(days10);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNotNull(days13);
        org.junit.Assert.assertNotNull(days14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(durationFieldType18);
        org.junit.Assert.assertNotNull(days20);
        org.junit.Assert.assertNotNull(days22);
        org.junit.Assert.assertNotNull(period23);
        org.junit.Assert.assertNotNull(days25);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertNotNull(days29);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertNotNull(days32);
        org.junit.Assert.assertNotNull(days33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + (-1) + "'", int34 == (-1));
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "P0D" + "'", str35, "P0D");
        org.junit.Assert.assertNotNull(days37);
        org.junit.Assert.assertNotNull(periodType38);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 52 + "'", int39 == 52);
        org.junit.Assert.assertNotNull(days41);
        org.junit.Assert.assertNotNull(days43);
        org.junit.Assert.assertNotNull(days45);
        org.junit.Assert.assertNotNull(days47);
        org.junit.Assert.assertNotNull(days49);
        org.junit.Assert.assertNotNull(days51);
        org.junit.Assert.assertNotNull(days52);
        org.junit.Assert.assertNotNull(period53);
        org.junit.Assert.assertNotNull(durationFieldType54);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 51 + "'", int55 == 51);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 0 + "'", int57 == 0);
    }

    @Test
    public void test0459() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0459");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Days days1 = org.joda.time.Days.daysIn(readableInterval0);
        int int3 = days1.getValue((int) (short) 0);
        org.joda.time.ReadableInterval readableInterval4 = null;
        org.joda.time.Days days5 = org.joda.time.Days.daysIn(readableInterval4);
        int int7 = days5.getValue((int) (short) 0);
        org.joda.time.Days days8 = org.joda.time.Days.FIVE;
        org.joda.time.Days days9 = days5.minus(days8);
        int int10 = days1.compareTo((org.joda.time.base.BaseSingleFieldPeriod) days8);
        java.lang.String str11 = days1.toString();
        org.joda.time.Days days13 = days1.multipliedBy((int) (byte) 100);
        org.joda.time.Days days15 = days13.dividedBy(42);
        org.joda.time.ReadableInterval readableInterval16 = null;
        org.joda.time.Days days17 = org.joda.time.Days.daysIn(readableInterval16);
        org.joda.time.ReadableInterval readableInterval18 = null;
        org.joda.time.Days days19 = org.joda.time.Days.daysIn(readableInterval18);
        int int21 = days19.getValue((int) (short) 0);
        org.joda.time.Days days22 = org.joda.time.Days.FIVE;
        org.joda.time.Days days23 = days19.minus(days22);
        org.joda.time.DurationFieldType durationFieldType24 = null;
        boolean boolean25 = days22.isSupported(durationFieldType24);
        org.joda.time.DurationFieldType durationFieldType27 = days22.getFieldType(0);
        int int28 = days17.get(durationFieldType27);
        org.joda.time.ReadableInterval readableInterval29 = null;
        org.joda.time.Days days30 = org.joda.time.Days.daysIn(readableInterval29);
        int int32 = days30.getValue((int) (short) 0);
        org.joda.time.Days days33 = org.joda.time.Days.FIVE;
        org.joda.time.Days days34 = days30.minus(days33);
        org.joda.time.DurationFieldType durationFieldType35 = null;
        int int36 = days33.get(durationFieldType35);
        org.joda.time.DurationFieldType durationFieldType37 = null;
        int int38 = days33.get(durationFieldType37);
        boolean boolean40 = days33.equals((java.lang.Object) 0L);
        boolean boolean41 = days17.isGreaterThan(days33);
        org.joda.time.ReadableInterval readableInterval42 = null;
        org.joda.time.Days days43 = org.joda.time.Days.daysIn(readableInterval42);
        int int45 = days43.getValue((int) (short) 0);
        org.joda.time.Days days46 = org.joda.time.Days.FIVE;
        org.joda.time.Days days47 = days43.minus(days46);
        org.joda.time.DurationFieldType durationFieldType48 = null;
        int int49 = days46.get(durationFieldType48);
        org.joda.time.DurationFieldType durationFieldType50 = null;
        int int51 = days46.get(durationFieldType50);
        boolean boolean53 = days46.equals((java.lang.Object) 0L);
        org.joda.time.Period period54 = days46.toPeriod();
        org.joda.time.Days days55 = days17.plus(days46);
        org.joda.time.ReadableInterval readableInterval56 = null;
        org.joda.time.Days days57 = org.joda.time.Days.daysIn(readableInterval56);
        int int59 = days57.getValue((int) (short) 0);
        org.joda.time.Period period60 = days57.toPeriod();
        org.joda.time.Days days61 = org.joda.time.Days.standardDaysIn((org.joda.time.ReadablePeriod) days57);
        boolean boolean62 = days17.equals((java.lang.Object) days61);
        org.joda.time.Days days64 = days61.multipliedBy(0);
        org.joda.time.Days days66 = days61.multipliedBy(5);
        org.joda.time.Days days67 = org.joda.time.Days.SIX;
        org.joda.time.Days days69 = days67.plus(100);
        org.joda.time.ReadableInterval readableInterval70 = null;
        org.joda.time.Days days71 = org.joda.time.Days.daysIn(readableInterval70);
        int int73 = days71.getValue((int) (short) 0);
        org.joda.time.Days days74 = org.joda.time.Days.FIVE;
        org.joda.time.Days days75 = days71.minus(days74);
        org.joda.time.Days days76 = null;
        org.joda.time.Days days77 = days71.minus(days76);
        org.joda.time.Days days79 = days71.minus((-1));
        org.joda.time.DurationFieldType durationFieldType80 = days71.getFieldType();
        int int81 = days67.get(durationFieldType80);
        org.joda.time.Days days82 = days67.negated();
        boolean boolean83 = days61.isLessThan(days82);
        org.joda.time.ReadableInterval readableInterval84 = null;
        org.joda.time.Days days85 = org.joda.time.Days.daysIn(readableInterval84);
        int int87 = days85.getValue((int) (short) 0);
        org.joda.time.Period period88 = days85.toPeriod();
        org.joda.time.Days days89 = org.joda.time.Days.standardDaysIn((org.joda.time.ReadablePeriod) period88);
        org.joda.time.Period period90 = days89.toPeriod();
        org.joda.time.Days days91 = days82.plus(days89);
        org.joda.time.Days days92 = days15.plus(days89);
        org.junit.Assert.assertNotNull(days1);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(days5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(days8);
        org.junit.Assert.assertNotNull(days9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "P0D" + "'", str11, "P0D");
        org.junit.Assert.assertNotNull(days13);
        org.junit.Assert.assertNotNull(days15);
        org.junit.Assert.assertNotNull(days17);
        org.junit.Assert.assertNotNull(days19);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertNotNull(days22);
        org.junit.Assert.assertNotNull(days23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(durationFieldType27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertNotNull(days30);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertNotNull(days33);
        org.junit.Assert.assertNotNull(days34);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 0 + "'", int38 == 0);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(days43);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 0 + "'", int45 == 0);
        org.junit.Assert.assertNotNull(days46);
        org.junit.Assert.assertNotNull(days47);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 0 + "'", int49 == 0);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 0 + "'", int51 == 0);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(period54);
        org.junit.Assert.assertNotNull(days55);
        org.junit.Assert.assertNotNull(days57);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 0 + "'", int59 == 0);
        org.junit.Assert.assertNotNull(period60);
        org.junit.Assert.assertNotNull(days61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNotNull(days64);
        org.junit.Assert.assertNotNull(days66);
        org.junit.Assert.assertNotNull(days67);
        org.junit.Assert.assertNotNull(days69);
        org.junit.Assert.assertNotNull(days71);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 0 + "'", int73 == 0);
        org.junit.Assert.assertNotNull(days74);
        org.junit.Assert.assertNotNull(days75);
        org.junit.Assert.assertNotNull(days77);
        org.junit.Assert.assertNotNull(days79);
        org.junit.Assert.assertNotNull(durationFieldType80);
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + 6 + "'", int81 == 6);
        org.junit.Assert.assertNotNull(days82);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertNotNull(days85);
        org.junit.Assert.assertTrue("'" + int87 + "' != '" + 0 + "'", int87 == 0);
        org.junit.Assert.assertNotNull(period88);
        org.junit.Assert.assertNotNull(days89);
        org.junit.Assert.assertNotNull(period90);
        org.junit.Assert.assertNotNull(days91);
        org.junit.Assert.assertNotNull(days92);
    }

    @Test
    public void test0460() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0460");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Days days1 = org.joda.time.Days.daysIn(readableInterval0);
        int int3 = days1.getValue((int) (short) 0);
        org.joda.time.Days days4 = org.joda.time.Days.FIVE;
        org.joda.time.Days days5 = days1.minus(days4);
        org.joda.time.Days days6 = null;
        org.joda.time.Days days7 = days1.minus(days6);
        org.joda.time.Days days9 = days1.minus((-1));
        org.joda.time.DurationFieldType durationFieldType10 = days1.getFieldType();
        org.joda.time.ReadableInterval readableInterval11 = null;
        org.joda.time.Days days12 = org.joda.time.Days.daysIn(readableInterval11);
        org.joda.time.Days days14 = days12.plus((int) (byte) 10);
        org.joda.time.Days days16 = days14.dividedBy((int) 'a');
        org.joda.time.Days days18 = days14.plus((int) ' ');
        org.joda.time.Days days19 = org.joda.time.Days.standardDaysIn((org.joda.time.ReadablePeriod) days18);
        int int20 = days19.size();
        boolean boolean21 = days1.isGreaterThan(days19);
        org.joda.time.Days days23 = days1.minus(7);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.DurationFieldType durationFieldType25 = days1.getFieldType(8);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 8");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(days1);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(days4);
        org.junit.Assert.assertNotNull(days5);
        org.junit.Assert.assertNotNull(days7);
        org.junit.Assert.assertNotNull(days9);
        org.junit.Assert.assertNotNull(durationFieldType10);
        org.junit.Assert.assertNotNull(days12);
        org.junit.Assert.assertNotNull(days14);
        org.junit.Assert.assertNotNull(days16);
        org.junit.Assert.assertNotNull(days18);
        org.junit.Assert.assertNotNull(days19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 1 + "'", int20 == 1);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(days23);
    }

    @Test
    public void test0461() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0461");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Days days1 = org.joda.time.Days.daysIn(readableInterval0);
        int int3 = days1.getValue((int) (short) 0);
        org.joda.time.Days days4 = org.joda.time.Days.FIVE;
        org.joda.time.Days days5 = days1.minus(days4);
        org.joda.time.DurationFieldType durationFieldType6 = null;
        int int7 = days4.get(durationFieldType6);
        org.joda.time.DurationFieldType durationFieldType8 = null;
        int int9 = days4.get(durationFieldType8);
        boolean boolean11 = days4.equals((java.lang.Object) 0L);
        org.joda.time.DurationFieldType durationFieldType12 = days4.getFieldType();
        org.joda.time.Days days13 = days4.negated();
        org.joda.time.ReadableInterval readableInterval14 = null;
        org.joda.time.Days days15 = org.joda.time.Days.daysIn(readableInterval14);
        int int17 = days15.getValue((int) (short) 0);
        org.joda.time.Days days18 = org.joda.time.Days.FIVE;
        org.joda.time.Days days19 = days15.minus(days18);
        org.joda.time.DurationFieldType durationFieldType20 = null;
        int int21 = days18.get(durationFieldType20);
        org.joda.time.DurationFieldType durationFieldType22 = null;
        int int23 = days18.get(durationFieldType22);
        boolean boolean25 = days18.equals((java.lang.Object) 0L);
        int int26 = days18.getDays();
        org.joda.time.Days days27 = days13.minus(days18);
        org.joda.time.Days days28 = org.joda.time.Days.ZERO;
        org.joda.time.ReadableInterval readableInterval29 = null;
        org.joda.time.Days days30 = org.joda.time.Days.daysIn(readableInterval29);
        int int32 = days30.getValue((int) (short) 0);
        org.joda.time.Days days33 = org.joda.time.Days.FIVE;
        org.joda.time.Days days34 = days30.minus(days33);
        org.joda.time.Days days35 = null;
        org.joda.time.Days days36 = days30.minus(days35);
        org.joda.time.Duration duration37 = days30.toStandardDuration();
        org.joda.time.DurationFieldType durationFieldType38 = days30.getFieldType();
        org.joda.time.Days days39 = days28.minus(days30);
        org.joda.time.ReadableInterval readableInterval40 = null;
        org.joda.time.Days days41 = org.joda.time.Days.daysIn(readableInterval40);
        int int43 = days41.getValue((int) (short) 0);
        org.joda.time.Days days44 = org.joda.time.Days.FIVE;
        org.joda.time.Days days45 = days41.minus(days44);
        org.joda.time.DurationFieldType durationFieldType46 = null;
        int int47 = days44.get(durationFieldType46);
        org.joda.time.DurationFieldType durationFieldType48 = null;
        int int49 = days44.get(durationFieldType48);
        boolean boolean51 = days44.equals((java.lang.Object) 0L);
        org.joda.time.DurationFieldType durationFieldType52 = days44.getFieldType();
        org.joda.time.Days days53 = days44.negated();
        org.joda.time.ReadableInterval readableInterval54 = null;
        org.joda.time.Days days55 = org.joda.time.Days.daysIn(readableInterval54);
        int int57 = days55.getValue((int) (short) 0);
        org.joda.time.Days days58 = org.joda.time.Days.FIVE;
        org.joda.time.Days days59 = days55.minus(days58);
        org.joda.time.DurationFieldType durationFieldType60 = null;
        int int61 = days58.get(durationFieldType60);
        org.joda.time.DurationFieldType durationFieldType62 = null;
        int int63 = days58.get(durationFieldType62);
        boolean boolean65 = days58.equals((java.lang.Object) 0L);
        int int66 = days58.getDays();
        org.joda.time.Days days67 = days53.minus(days58);
        org.joda.time.Days days68 = days39.minus(days53);
        boolean boolean69 = days27.isLessThan(days39);
        org.joda.time.Days days71 = days27.plus((int) 'a');
        org.joda.time.Days days73 = days71.dividedBy((int) '#');
        org.joda.time.Duration duration74 = days71.toStandardDuration();
        org.junit.Assert.assertNotNull(days1);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(days4);
        org.junit.Assert.assertNotNull(days5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(durationFieldType12);
        org.junit.Assert.assertNotNull(days13);
        org.junit.Assert.assertNotNull(days15);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNotNull(days18);
        org.junit.Assert.assertNotNull(days19);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 5 + "'", int26 == 5);
        org.junit.Assert.assertNotNull(days27);
        org.junit.Assert.assertNotNull(days28);
        org.junit.Assert.assertNotNull(days30);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertNotNull(days33);
        org.junit.Assert.assertNotNull(days34);
        org.junit.Assert.assertNotNull(days36);
        org.junit.Assert.assertNotNull(duration37);
        org.junit.Assert.assertNotNull(durationFieldType38);
        org.junit.Assert.assertNotNull(days39);
        org.junit.Assert.assertNotNull(days41);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0);
        org.junit.Assert.assertNotNull(days44);
        org.junit.Assert.assertNotNull(days45);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 0 + "'", int47 == 0);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 0 + "'", int49 == 0);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(durationFieldType52);
        org.junit.Assert.assertNotNull(days53);
        org.junit.Assert.assertNotNull(days55);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 0 + "'", int57 == 0);
        org.junit.Assert.assertNotNull(days58);
        org.junit.Assert.assertNotNull(days59);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 0 + "'", int61 == 0);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 0 + "'", int63 == 0);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 5 + "'", int66 == 5);
        org.junit.Assert.assertNotNull(days67);
        org.junit.Assert.assertNotNull(days68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertNotNull(days71);
        org.junit.Assert.assertNotNull(days73);
        org.junit.Assert.assertNotNull(duration74);
    }

    @Test
    public void test0462() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0462");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Days days1 = org.joda.time.Days.daysIn(readableInterval0);
        org.joda.time.ReadableInterval readableInterval2 = null;
        org.joda.time.Days days3 = org.joda.time.Days.daysIn(readableInterval2);
        int int5 = days3.getValue((int) (short) 0);
        org.joda.time.Days days6 = org.joda.time.Days.FIVE;
        org.joda.time.Days days7 = days3.minus(days6);
        org.joda.time.DurationFieldType durationFieldType8 = null;
        boolean boolean9 = days6.isSupported(durationFieldType8);
        org.joda.time.DurationFieldType durationFieldType11 = days6.getFieldType(0);
        int int12 = days1.get(durationFieldType11);
        org.joda.time.ReadableInterval readableInterval13 = null;
        org.joda.time.Days days14 = org.joda.time.Days.daysIn(readableInterval13);
        int int16 = days14.getValue((int) (short) 0);
        org.joda.time.Days days17 = org.joda.time.Days.FIVE;
        org.joda.time.Days days18 = days14.minus(days17);
        org.joda.time.DurationFieldType durationFieldType19 = null;
        int int20 = days17.get(durationFieldType19);
        org.joda.time.DurationFieldType durationFieldType21 = null;
        int int22 = days17.get(durationFieldType21);
        boolean boolean24 = days17.equals((java.lang.Object) 0L);
        boolean boolean25 = days1.isGreaterThan(days17);
        org.joda.time.ReadableInterval readableInterval26 = null;
        org.joda.time.Days days27 = org.joda.time.Days.daysIn(readableInterval26);
        int int29 = days27.getValue((int) (short) 0);
        org.joda.time.Days days30 = org.joda.time.Days.FIVE;
        org.joda.time.Days days31 = days27.minus(days30);
        org.joda.time.DurationFieldType durationFieldType32 = null;
        int int33 = days30.get(durationFieldType32);
        org.joda.time.DurationFieldType durationFieldType34 = null;
        int int35 = days30.get(durationFieldType34);
        boolean boolean37 = days30.equals((java.lang.Object) 0L);
        org.joda.time.Period period38 = days30.toPeriod();
        org.joda.time.Days days39 = days1.plus(days30);
        org.joda.time.ReadableInterval readableInterval40 = null;
        org.joda.time.Days days41 = org.joda.time.Days.daysIn(readableInterval40);
        int int43 = days41.getValue((int) (short) 0);
        org.joda.time.Period period44 = days41.toPeriod();
        org.joda.time.Days days45 = org.joda.time.Days.standardDaysIn((org.joda.time.ReadablePeriod) days41);
        boolean boolean46 = days1.equals((java.lang.Object) days45);
        org.joda.time.Days days48 = days45.multipliedBy(0);
        org.joda.time.Days days50 = org.joda.time.Days.parseDays("P3D");
        boolean boolean51 = days48.isLessThan(days50);
        org.junit.Assert.assertNotNull(days1);
        org.junit.Assert.assertNotNull(days3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(days6);
        org.junit.Assert.assertNotNull(days7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(durationFieldType11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNotNull(days14);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertNotNull(days17);
        org.junit.Assert.assertNotNull(days18);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(days27);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertNotNull(days30);
        org.junit.Assert.assertNotNull(days31);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(period38);
        org.junit.Assert.assertNotNull(days39);
        org.junit.Assert.assertNotNull(days41);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0);
        org.junit.Assert.assertNotNull(period44);
        org.junit.Assert.assertNotNull(days45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(days48);
        org.junit.Assert.assertNotNull(days50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
    }

    @Test
    public void test0463() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0463");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Days days1 = org.joda.time.Days.daysIn(readableInterval0);
        org.joda.time.Days days3 = days1.plus((int) (byte) 10);
        org.joda.time.Days days5 = days3.dividedBy((int) 'a');
        org.joda.time.Days days7 = days3.plus((int) ' ');
        org.joda.time.Days days8 = org.joda.time.Days.standardDaysIn((org.joda.time.ReadablePeriod) days7);
        org.joda.time.ReadableInterval readableInterval9 = null;
        org.joda.time.Days days10 = org.joda.time.Days.daysIn(readableInterval9);
        int int12 = days10.getValue((int) (short) 0);
        org.joda.time.ReadableInterval readableInterval13 = null;
        org.joda.time.Days days14 = org.joda.time.Days.daysIn(readableInterval13);
        int int16 = days14.getValue((int) (short) 0);
        org.joda.time.Days days17 = org.joda.time.Days.FIVE;
        org.joda.time.Days days18 = days14.minus(days17);
        int int19 = days10.compareTo((org.joda.time.base.BaseSingleFieldPeriod) days17);
        java.lang.String str20 = days10.toString();
        org.joda.time.Days days22 = days10.plus((int) '4');
        org.joda.time.PeriodType periodType23 = days22.getPeriodType();
        int int24 = days22.getDays();
        org.joda.time.Days days26 = days22.minus((int) ' ');
        org.joda.time.ReadableInterval readableInterval27 = null;
        org.joda.time.Days days28 = org.joda.time.Days.daysIn(readableInterval27);
        org.joda.time.Days days30 = days28.plus((int) (byte) 10);
        org.joda.time.Days days32 = days30.dividedBy((int) 'a');
        org.joda.time.Days days34 = days30.dividedBy(5);
        org.joda.time.Days days36 = days30.plus((int) (byte) -1);
        org.joda.time.Days days37 = days22.plus(days30);
        boolean boolean38 = days8.isLessThan(days37);
        org.joda.time.ReadableInterval readableInterval39 = null;
        org.joda.time.Days days40 = org.joda.time.Days.daysIn(readableInterval39);
        org.joda.time.Days days42 = days40.plus((int) (byte) 10);
        int int43 = days42.getDays();
        int int44 = days42.getDays();
        boolean boolean45 = days8.isGreaterThan(days42);
        org.joda.time.Period period46 = days42.toPeriod();
        org.junit.Assert.assertNotNull(days1);
        org.junit.Assert.assertNotNull(days3);
        org.junit.Assert.assertNotNull(days5);
        org.junit.Assert.assertNotNull(days7);
        org.junit.Assert.assertNotNull(days8);
        org.junit.Assert.assertNotNull(days10);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNotNull(days14);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertNotNull(days17);
        org.junit.Assert.assertNotNull(days18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "P0D" + "'", str20, "P0D");
        org.junit.Assert.assertNotNull(days22);
        org.junit.Assert.assertNotNull(periodType23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 52 + "'", int24 == 52);
        org.junit.Assert.assertNotNull(days26);
        org.junit.Assert.assertNotNull(days28);
        org.junit.Assert.assertNotNull(days30);
        org.junit.Assert.assertNotNull(days32);
        org.junit.Assert.assertNotNull(days34);
        org.junit.Assert.assertNotNull(days36);
        org.junit.Assert.assertNotNull(days37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(days40);
        org.junit.Assert.assertNotNull(days42);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 10 + "'", int43 == 10);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 10 + "'", int44 == 10);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(period46);
    }

    @Test
    public void test0464() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0464");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Days days1 = org.joda.time.Days.daysIn(readableInterval0);
        int int3 = days1.getValue((int) (short) 0);
        org.joda.time.Days days4 = org.joda.time.Days.FIVE;
        org.joda.time.Days days5 = days1.minus(days4);
        org.joda.time.DurationFieldType durationFieldType6 = null;
        int int7 = days4.get(durationFieldType6);
        org.joda.time.DurationFieldType durationFieldType8 = null;
        int int9 = days4.get(durationFieldType8);
        boolean boolean11 = days4.equals((java.lang.Object) 0L);
        org.joda.time.DurationFieldType durationFieldType12 = days4.getFieldType();
        org.joda.time.Days days13 = days4.negated();
        org.joda.time.ReadableInterval readableInterval14 = null;
        org.joda.time.Days days15 = org.joda.time.Days.daysIn(readableInterval14);
        int int17 = days15.getValue((int) (short) 0);
        org.joda.time.Days days18 = org.joda.time.Days.FIVE;
        org.joda.time.Days days19 = days15.minus(days18);
        org.joda.time.DurationFieldType durationFieldType20 = null;
        int int21 = days18.get(durationFieldType20);
        org.joda.time.DurationFieldType durationFieldType22 = null;
        int int23 = days18.get(durationFieldType22);
        boolean boolean25 = days18.equals((java.lang.Object) 0L);
        int int26 = days18.getDays();
        org.joda.time.Days days27 = days13.minus(days18);
        org.joda.time.Duration duration28 = days27.toStandardDuration();
        org.joda.time.Days days29 = org.joda.time.Days.standardDaysIn((org.joda.time.ReadablePeriod) days27);
        org.joda.time.ReadableInterval readableInterval30 = null;
        org.joda.time.Days days31 = org.joda.time.Days.daysIn(readableInterval30);
        org.joda.time.ReadableInterval readableInterval32 = null;
        org.joda.time.Days days33 = org.joda.time.Days.daysIn(readableInterval32);
        int int35 = days33.getValue((int) (short) 0);
        org.joda.time.Days days36 = org.joda.time.Days.FIVE;
        org.joda.time.Days days37 = days33.minus(days36);
        org.joda.time.DurationFieldType durationFieldType38 = null;
        boolean boolean39 = days36.isSupported(durationFieldType38);
        org.joda.time.DurationFieldType durationFieldType41 = days36.getFieldType(0);
        int int42 = days31.get(durationFieldType41);
        org.joda.time.ReadableInterval readableInterval43 = null;
        org.joda.time.Days days44 = org.joda.time.Days.daysIn(readableInterval43);
        int int46 = days44.getValue((int) (short) 0);
        org.joda.time.ReadableInterval readableInterval47 = null;
        org.joda.time.Days days48 = org.joda.time.Days.daysIn(readableInterval47);
        int int50 = days48.getValue((int) (short) 0);
        org.joda.time.Days days51 = org.joda.time.Days.FIVE;
        org.joda.time.Days days52 = days48.minus(days51);
        int int53 = days44.compareTo((org.joda.time.base.BaseSingleFieldPeriod) days51);
        java.lang.String str54 = days44.toString();
        org.joda.time.Days days55 = null;
        boolean boolean56 = days44.isGreaterThan(days55);
        org.joda.time.Period period57 = days44.toPeriod();
        org.joda.time.Days days58 = days31.plus(days44);
        org.joda.time.Days days60 = days44.multipliedBy(0);
        int int61 = days27.compareTo((org.joda.time.base.BaseSingleFieldPeriod) days60);
        org.junit.Assert.assertNotNull(days1);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(days4);
        org.junit.Assert.assertNotNull(days5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(durationFieldType12);
        org.junit.Assert.assertNotNull(days13);
        org.junit.Assert.assertNotNull(days15);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNotNull(days18);
        org.junit.Assert.assertNotNull(days19);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 5 + "'", int26 == 5);
        org.junit.Assert.assertNotNull(days27);
        org.junit.Assert.assertNotNull(duration28);
        org.junit.Assert.assertNotNull(days29);
        org.junit.Assert.assertNotNull(days31);
        org.junit.Assert.assertNotNull(days33);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertNotNull(days36);
        org.junit.Assert.assertNotNull(days37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(durationFieldType41);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0);
        org.junit.Assert.assertNotNull(days44);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 0 + "'", int46 == 0);
        org.junit.Assert.assertNotNull(days48);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 0 + "'", int50 == 0);
        org.junit.Assert.assertNotNull(days51);
        org.junit.Assert.assertNotNull(days52);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + (-1) + "'", int53 == (-1));
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "P0D" + "'", str54, "P0D");
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(period57);
        org.junit.Assert.assertNotNull(days58);
        org.junit.Assert.assertNotNull(days60);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + (-1) + "'", int61 == (-1));
    }

    @Test
    public void test0465() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0465");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Days days1 = org.joda.time.Days.daysIn(readableInterval0);
        int int3 = days1.getValue((int) (short) 0);
        org.joda.time.ReadableInterval readableInterval4 = null;
        org.joda.time.Days days5 = org.joda.time.Days.daysIn(readableInterval4);
        int int7 = days5.getValue((int) (short) 0);
        org.joda.time.Days days8 = org.joda.time.Days.FIVE;
        org.joda.time.Days days9 = days5.minus(days8);
        int int10 = days1.compareTo((org.joda.time.base.BaseSingleFieldPeriod) days8);
        org.joda.time.Days days11 = org.joda.time.Days.THREE;
        org.joda.time.ReadableInterval readableInterval12 = null;
        org.joda.time.Days days13 = org.joda.time.Days.daysIn(readableInterval12);
        org.joda.time.ReadableInterval readableInterval14 = null;
        org.joda.time.Days days15 = org.joda.time.Days.daysIn(readableInterval14);
        int int17 = days15.getValue((int) (short) 0);
        org.joda.time.Days days18 = org.joda.time.Days.FIVE;
        org.joda.time.Days days19 = days15.minus(days18);
        org.joda.time.DurationFieldType durationFieldType20 = null;
        boolean boolean21 = days18.isSupported(durationFieldType20);
        org.joda.time.DurationFieldType durationFieldType23 = days18.getFieldType(0);
        int int24 = days13.get(durationFieldType23);
        org.joda.time.ReadableInterval readableInterval25 = null;
        org.joda.time.Days days26 = org.joda.time.Days.daysIn(readableInterval25);
        int int28 = days26.getValue((int) (short) 0);
        org.joda.time.Days days29 = org.joda.time.Days.FIVE;
        org.joda.time.Days days30 = days26.minus(days29);
        org.joda.time.DurationFieldType durationFieldType31 = null;
        int int32 = days29.get(durationFieldType31);
        org.joda.time.DurationFieldType durationFieldType33 = null;
        int int34 = days29.get(durationFieldType33);
        boolean boolean36 = days29.equals((java.lang.Object) 0L);
        boolean boolean37 = days13.isGreaterThan(days29);
        org.joda.time.ReadableInterval readableInterval38 = null;
        org.joda.time.Days days39 = org.joda.time.Days.daysIn(readableInterval38);
        int int41 = days39.getValue((int) (short) 0);
        org.joda.time.Days days42 = org.joda.time.Days.FIVE;
        org.joda.time.Days days43 = days39.minus(days42);
        org.joda.time.DurationFieldType durationFieldType44 = null;
        int int45 = days42.get(durationFieldType44);
        org.joda.time.DurationFieldType durationFieldType46 = null;
        int int47 = days42.get(durationFieldType46);
        boolean boolean49 = days42.equals((java.lang.Object) 0L);
        org.joda.time.Period period50 = days42.toPeriod();
        org.joda.time.Days days51 = days13.plus(days42);
        boolean boolean52 = days11.isGreaterThan(days51);
        org.joda.time.ReadableInterval readableInterval53 = null;
        org.joda.time.Days days54 = org.joda.time.Days.daysIn(readableInterval53);
        int int56 = days54.getValue((int) (short) 0);
        org.joda.time.Days days57 = org.joda.time.Days.FIVE;
        org.joda.time.Days days58 = days54.minus(days57);
        org.joda.time.DurationFieldType durationFieldType59 = null;
        boolean boolean60 = days57.isSupported(durationFieldType59);
        org.joda.time.DurationFieldType durationFieldType62 = days57.getFieldType(0);
        org.joda.time.ReadableInterval readableInterval63 = null;
        org.joda.time.Days days64 = org.joda.time.Days.daysIn(readableInterval63);
        int int66 = days64.getValue((int) (short) 0);
        org.joda.time.Days days67 = org.joda.time.Days.FIVE;
        org.joda.time.Days days68 = days64.minus(days67);
        org.joda.time.Days days69 = null;
        org.joda.time.Days days70 = days64.minus(days69);
        org.joda.time.Days days72 = days64.minus((-1));
        org.joda.time.DurationFieldType durationFieldType73 = days64.getFieldType();
        boolean boolean74 = days57.isGreaterThan(days64);
        org.joda.time.ReadableInterval readableInterval75 = null;
        org.joda.time.Days days76 = org.joda.time.Days.daysIn(readableInterval75);
        org.joda.time.Days days78 = days76.plus((int) (byte) 10);
        org.joda.time.Days days79 = days64.plus(days78);
        org.joda.time.ReadableInterval readableInterval80 = null;
        org.joda.time.Days days81 = org.joda.time.Days.daysIn(readableInterval80);
        int int83 = days81.getValue((int) (short) 0);
        org.joda.time.Days days84 = org.joda.time.Days.FIVE;
        org.joda.time.Days days85 = days81.minus(days84);
        org.joda.time.Days days86 = null;
        org.joda.time.Days days87 = days81.minus(days86);
        org.joda.time.Duration duration88 = days81.toStandardDuration();
        org.joda.time.Days days89 = days79.minus(days81);
        org.joda.time.Days days90 = days11.minus(days79);
        boolean boolean91 = days8.isGreaterThan(days11);
        // The following exception was thrown during execution in test generation
        try {
            int int93 = days11.getValue((-2147483648));
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: -2147483648");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(days1);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(days5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(days8);
        org.junit.Assert.assertNotNull(days9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertNotNull(days11);
        org.junit.Assert.assertNotNull(days13);
        org.junit.Assert.assertNotNull(days15);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNotNull(days18);
        org.junit.Assert.assertNotNull(days19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(durationFieldType23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertNotNull(days26);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertNotNull(days29);
        org.junit.Assert.assertNotNull(days30);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(days39);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0);
        org.junit.Assert.assertNotNull(days42);
        org.junit.Assert.assertNotNull(days43);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 0 + "'", int45 == 0);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 0 + "'", int47 == 0);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(period50);
        org.junit.Assert.assertNotNull(days51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(days54);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 0 + "'", int56 == 0);
        org.junit.Assert.assertNotNull(days57);
        org.junit.Assert.assertNotNull(days58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(durationFieldType62);
        org.junit.Assert.assertNotNull(days64);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 0 + "'", int66 == 0);
        org.junit.Assert.assertNotNull(days67);
        org.junit.Assert.assertNotNull(days68);
        org.junit.Assert.assertNotNull(days70);
        org.junit.Assert.assertNotNull(days72);
        org.junit.Assert.assertNotNull(durationFieldType73);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertNotNull(days76);
        org.junit.Assert.assertNotNull(days78);
        org.junit.Assert.assertNotNull(days79);
        org.junit.Assert.assertNotNull(days81);
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + 0 + "'", int83 == 0);
        org.junit.Assert.assertNotNull(days84);
        org.junit.Assert.assertNotNull(days85);
        org.junit.Assert.assertNotNull(days87);
        org.junit.Assert.assertNotNull(duration88);
        org.junit.Assert.assertNotNull(days89);
        org.junit.Assert.assertNotNull(days90);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + true + "'", boolean91 == true);
    }

    @Test
    public void test0466() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0466");
        org.joda.time.Days days0 = org.joda.time.Days.SIX;
        org.joda.time.Days days2 = days0.plus(100);
        org.joda.time.Days days4 = days0.plus((int) (byte) 1);
        org.joda.time.ReadableInterval readableInterval5 = null;
        org.joda.time.Days days6 = org.joda.time.Days.daysIn(readableInterval5);
        org.joda.time.Days days8 = days6.plus((int) (byte) 10);
        org.joda.time.DurationFieldType durationFieldType9 = days8.getFieldType();
        org.joda.time.Days days11 = days8.plus(0);
        org.joda.time.ReadableInterval readableInterval12 = null;
        org.joda.time.Days days13 = org.joda.time.Days.daysIn(readableInterval12);
        int int15 = days13.getValue((int) (short) 0);
        org.joda.time.Days days16 = org.joda.time.Days.FIVE;
        org.joda.time.Days days17 = days13.minus(days16);
        org.joda.time.DurationFieldType durationFieldType18 = null;
        boolean boolean19 = days16.isSupported(durationFieldType18);
        org.joda.time.DurationFieldType durationFieldType21 = days16.getFieldType(0);
        org.joda.time.ReadableInterval readableInterval22 = null;
        org.joda.time.Days days23 = org.joda.time.Days.daysIn(readableInterval22);
        int int25 = days23.getValue((int) (short) 0);
        org.joda.time.Days days26 = org.joda.time.Days.FIVE;
        org.joda.time.Days days27 = days23.minus(days26);
        org.joda.time.Days days28 = null;
        org.joda.time.Days days29 = days23.minus(days28);
        org.joda.time.Days days31 = days23.minus((-1));
        org.joda.time.DurationFieldType durationFieldType32 = days23.getFieldType();
        boolean boolean33 = days16.isGreaterThan(days23);
        org.joda.time.ReadableInterval readableInterval34 = null;
        org.joda.time.Days days35 = org.joda.time.Days.daysIn(readableInterval34);
        org.joda.time.Days days37 = days35.plus((int) (byte) 10);
        org.joda.time.Days days38 = days23.plus(days37);
        int int39 = days11.compareTo((org.joda.time.base.BaseSingleFieldPeriod) days23);
        int int40 = days0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) days23);
        org.joda.time.ReadableInterval readableInterval41 = null;
        org.joda.time.Days days42 = org.joda.time.Days.daysIn(readableInterval41);
        int int44 = days42.getValue((int) (short) 0);
        org.joda.time.Days days45 = org.joda.time.Days.FIVE;
        org.joda.time.Days days46 = days42.minus(days45);
        org.joda.time.DurationFieldType durationFieldType47 = null;
        boolean boolean48 = days45.isSupported(durationFieldType47);
        org.joda.time.DurationFieldType durationFieldType50 = days45.getFieldType(0);
        org.joda.time.ReadableInterval readableInterval51 = null;
        org.joda.time.Days days52 = org.joda.time.Days.daysIn(readableInterval51);
        int int54 = days52.getValue((int) (short) 0);
        org.joda.time.Days days55 = org.joda.time.Days.FIVE;
        org.joda.time.Days days56 = days52.minus(days55);
        org.joda.time.Days days57 = null;
        org.joda.time.Days days58 = days52.minus(days57);
        org.joda.time.Days days60 = days52.minus((-1));
        org.joda.time.DurationFieldType durationFieldType61 = days52.getFieldType();
        boolean boolean62 = days45.isGreaterThan(days52);
        org.joda.time.ReadableInterval readableInterval63 = null;
        org.joda.time.Days days64 = org.joda.time.Days.daysIn(readableInterval63);
        org.joda.time.Days days66 = days64.plus((int) (byte) 10);
        org.joda.time.Days days67 = days52.plus(days66);
        org.joda.time.ReadableInterval readableInterval68 = null;
        org.joda.time.Days days69 = org.joda.time.Days.daysIn(readableInterval68);
        int int71 = days69.getValue((int) (short) 0);
        org.joda.time.Days days72 = org.joda.time.Days.FIVE;
        org.joda.time.Days days73 = days69.minus(days72);
        org.joda.time.Days days74 = null;
        org.joda.time.Days days75 = days69.minus(days74);
        org.joda.time.Duration duration76 = days69.toStandardDuration();
        org.joda.time.Days days77 = days67.minus(days69);
        org.joda.time.Days days79 = days69.multipliedBy(5);
        org.joda.time.Days days80 = days79.negated();
        org.joda.time.Days days81 = days0.minus(days79);
        org.joda.time.Days days82 = days0.negated();
        org.junit.Assert.assertNotNull(days0);
        org.junit.Assert.assertNotNull(days2);
        org.junit.Assert.assertNotNull(days4);
        org.junit.Assert.assertNotNull(days6);
        org.junit.Assert.assertNotNull(days8);
        org.junit.Assert.assertNotNull(durationFieldType9);
        org.junit.Assert.assertNotNull(days11);
        org.junit.Assert.assertNotNull(days13);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNotNull(days16);
        org.junit.Assert.assertNotNull(days17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(durationFieldType21);
        org.junit.Assert.assertNotNull(days23);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertNotNull(days26);
        org.junit.Assert.assertNotNull(days27);
        org.junit.Assert.assertNotNull(days29);
        org.junit.Assert.assertNotNull(days31);
        org.junit.Assert.assertNotNull(durationFieldType32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(days35);
        org.junit.Assert.assertNotNull(days37);
        org.junit.Assert.assertNotNull(days38);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 1 + "'", int39 == 1);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 1 + "'", int40 == 1);
        org.junit.Assert.assertNotNull(days42);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 0 + "'", int44 == 0);
        org.junit.Assert.assertNotNull(days45);
        org.junit.Assert.assertNotNull(days46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(durationFieldType50);
        org.junit.Assert.assertNotNull(days52);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 0 + "'", int54 == 0);
        org.junit.Assert.assertNotNull(days55);
        org.junit.Assert.assertNotNull(days56);
        org.junit.Assert.assertNotNull(days58);
        org.junit.Assert.assertNotNull(days60);
        org.junit.Assert.assertNotNull(durationFieldType61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNotNull(days64);
        org.junit.Assert.assertNotNull(days66);
        org.junit.Assert.assertNotNull(days67);
        org.junit.Assert.assertNotNull(days69);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 0 + "'", int71 == 0);
        org.junit.Assert.assertNotNull(days72);
        org.junit.Assert.assertNotNull(days73);
        org.junit.Assert.assertNotNull(days75);
        org.junit.Assert.assertNotNull(duration76);
        org.junit.Assert.assertNotNull(days77);
        org.junit.Assert.assertNotNull(days79);
        org.junit.Assert.assertNotNull(days80);
        org.junit.Assert.assertNotNull(days81);
        org.junit.Assert.assertNotNull(days82);
    }

    @Test
    public void test0467() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0467");
        org.joda.time.Days days0 = org.joda.time.Days.SIX;
        org.joda.time.Days days2 = days0.plus(100);
        org.joda.time.ReadableInterval readableInterval3 = null;
        org.joda.time.Days days4 = org.joda.time.Days.daysIn(readableInterval3);
        org.joda.time.Days days6 = days4.plus((int) (byte) 10);
        org.joda.time.Days days8 = days6.dividedBy((int) 'a');
        org.joda.time.Days days10 = days6.dividedBy(5);
        org.joda.time.Days days12 = days6.plus((int) (byte) -1);
        org.joda.time.Days days14 = days6.minus((int) (byte) 100);
        org.joda.time.Days days15 = days14.negated();
        int int16 = days14.size();
        org.joda.time.ReadableInterval readableInterval17 = null;
        org.joda.time.Days days18 = org.joda.time.Days.daysIn(readableInterval17);
        int int20 = days18.getValue((int) (short) 0);
        org.joda.time.Days days21 = org.joda.time.Days.FIVE;
        org.joda.time.Days days22 = days18.minus(days21);
        org.joda.time.Days days23 = null;
        org.joda.time.Days days24 = days18.minus(days23);
        org.joda.time.Duration duration25 = days18.toStandardDuration();
        org.joda.time.DurationFieldType durationFieldType26 = days18.getFieldType();
        org.joda.time.Days days27 = days14.minus(days18);
        org.joda.time.ReadableInterval readableInterval28 = null;
        org.joda.time.Days days29 = org.joda.time.Days.daysIn(readableInterval28);
        org.joda.time.Days days31 = days29.plus((int) (byte) 10);
        int int32 = days31.getDays();
        int int33 = days31.getDays();
        boolean boolean34 = days18.equals((java.lang.Object) days31);
        org.joda.time.Days days35 = days0.minus(days18);
        org.joda.time.Duration duration36 = days0.toStandardDuration();
        org.joda.time.Days days37 = org.joda.time.Days.FIVE;
        int int38 = days37.size();
        org.joda.time.Days days39 = org.joda.time.Days.SIX;
        org.joda.time.Days days41 = days39.plus(100);
        org.joda.time.ReadableInterval readableInterval42 = null;
        org.joda.time.Days days43 = org.joda.time.Days.daysIn(readableInterval42);
        int int45 = days43.getValue((int) (short) 0);
        org.joda.time.Days days46 = org.joda.time.Days.FIVE;
        org.joda.time.Days days47 = days43.minus(days46);
        org.joda.time.Days days48 = null;
        org.joda.time.Days days49 = days43.minus(days48);
        org.joda.time.Days days51 = days43.minus((-1));
        org.joda.time.DurationFieldType durationFieldType52 = days43.getFieldType();
        int int53 = days39.get(durationFieldType52);
        org.joda.time.Days days54 = days39.negated();
        org.joda.time.DurationFieldType durationFieldType55 = days54.getFieldType();
        boolean boolean56 = days37.isSupported(durationFieldType55);
        boolean boolean57 = days0.isSupported(durationFieldType55);
        org.junit.Assert.assertNotNull(days0);
        org.junit.Assert.assertNotNull(days2);
        org.junit.Assert.assertNotNull(days4);
        org.junit.Assert.assertNotNull(days6);
        org.junit.Assert.assertNotNull(days8);
        org.junit.Assert.assertNotNull(days10);
        org.junit.Assert.assertNotNull(days12);
        org.junit.Assert.assertNotNull(days14);
        org.junit.Assert.assertNotNull(days15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 1 + "'", int16 == 1);
        org.junit.Assert.assertNotNull(days18);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertNotNull(days21);
        org.junit.Assert.assertNotNull(days22);
        org.junit.Assert.assertNotNull(days24);
        org.junit.Assert.assertNotNull(duration25);
        org.junit.Assert.assertNotNull(durationFieldType26);
        org.junit.Assert.assertNotNull(days27);
        org.junit.Assert.assertNotNull(days29);
        org.junit.Assert.assertNotNull(days31);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 10 + "'", int32 == 10);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 10 + "'", int33 == 10);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(days35);
        org.junit.Assert.assertNotNull(duration36);
        org.junit.Assert.assertNotNull(days37);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 1 + "'", int38 == 1);
        org.junit.Assert.assertNotNull(days39);
        org.junit.Assert.assertNotNull(days41);
        org.junit.Assert.assertNotNull(days43);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 0 + "'", int45 == 0);
        org.junit.Assert.assertNotNull(days46);
        org.junit.Assert.assertNotNull(days47);
        org.junit.Assert.assertNotNull(days49);
        org.junit.Assert.assertNotNull(days51);
        org.junit.Assert.assertNotNull(durationFieldType52);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 6 + "'", int53 == 6);
        org.junit.Assert.assertNotNull(days54);
        org.junit.Assert.assertNotNull(durationFieldType55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
    }

    @Test
    public void test0468() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0468");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Days days1 = org.joda.time.Days.daysIn(readableInterval0);
        org.joda.time.Days days3 = days1.plus((int) (byte) 10);
        org.joda.time.Days days5 = days3.dividedBy((int) 'a');
        org.joda.time.Days days7 = days3.plus((int) ' ');
        org.joda.time.PeriodType periodType8 = days3.getPeriodType();
        org.junit.Assert.assertNotNull(days1);
        org.junit.Assert.assertNotNull(days3);
        org.junit.Assert.assertNotNull(days5);
        org.junit.Assert.assertNotNull(days7);
        org.junit.Assert.assertNotNull(periodType8);
    }

    @Test
    public void test0469() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0469");
        org.joda.time.Days days0 = org.joda.time.Days.SIX;
        org.joda.time.Days days2 = days0.plus(100);
        org.joda.time.ReadableInterval readableInterval3 = null;
        org.joda.time.Days days4 = org.joda.time.Days.daysIn(readableInterval3);
        int int6 = days4.getValue((int) (short) 0);
        org.joda.time.Days days7 = org.joda.time.Days.FIVE;
        org.joda.time.Days days8 = days4.minus(days7);
        org.joda.time.Days days9 = null;
        org.joda.time.Days days10 = days4.minus(days9);
        org.joda.time.Days days12 = days4.minus((-1));
        org.joda.time.DurationFieldType durationFieldType13 = days4.getFieldType();
        int int14 = days0.get(durationFieldType13);
        org.joda.time.Days days15 = days0.negated();
        org.joda.time.ReadableInterval readableInterval16 = null;
        org.joda.time.Days days17 = org.joda.time.Days.daysIn(readableInterval16);
        int int19 = days17.getValue((int) (short) 0);
        org.joda.time.Days days20 = org.joda.time.Days.FIVE;
        org.joda.time.Days days21 = days17.minus(days20);
        org.joda.time.DurationFieldType durationFieldType22 = null;
        boolean boolean23 = days20.isSupported(durationFieldType22);
        org.joda.time.DurationFieldType durationFieldType25 = days20.getFieldType(0);
        org.joda.time.Period period26 = days20.toPeriod();
        int int28 = days20.getValue(0);
        org.joda.time.Days days29 = org.joda.time.Days.TWO;
        org.joda.time.DurationFieldType durationFieldType30 = days29.getFieldType();
        int int31 = days20.get(durationFieldType30);
        org.joda.time.Days days33 = days20.minus((int) (short) -1);
        org.joda.time.Days days34 = days15.plus(days20);
        org.joda.time.ReadableInterval readableInterval35 = null;
        org.joda.time.Days days36 = org.joda.time.Days.daysIn(readableInterval35);
        org.joda.time.Days days38 = days36.plus((int) (byte) 10);
        org.joda.time.Days days40 = days38.dividedBy((int) 'a');
        org.joda.time.Days days42 = days38.dividedBy(5);
        org.joda.time.Days days44 = days38.plus((int) (byte) -1);
        org.joda.time.Days days46 = days38.minus((int) (byte) 100);
        org.joda.time.Days days48 = days46.dividedBy((int) (byte) 100);
        org.joda.time.Days days50 = days46.minus((int) (short) 0);
        boolean boolean51 = days15.isLessThan(days50);
        org.joda.time.Days days52 = org.joda.time.Days.SIX;
        org.joda.time.Days days54 = days52.plus(100);
        org.joda.time.Days days56 = days54.dividedBy(10);
        org.joda.time.Days days58 = days54.dividedBy((int) (byte) 10);
        boolean boolean59 = days50.isLessThan(days58);
        org.junit.Assert.assertNotNull(days0);
        org.junit.Assert.assertNotNull(days2);
        org.junit.Assert.assertNotNull(days4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNotNull(days7);
        org.junit.Assert.assertNotNull(days8);
        org.junit.Assert.assertNotNull(days10);
        org.junit.Assert.assertNotNull(days12);
        org.junit.Assert.assertNotNull(durationFieldType13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 6 + "'", int14 == 6);
        org.junit.Assert.assertNotNull(days15);
        org.junit.Assert.assertNotNull(days17);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertNotNull(days20);
        org.junit.Assert.assertNotNull(days21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(durationFieldType25);
        org.junit.Assert.assertNotNull(period26);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 5 + "'", int28 == 5);
        org.junit.Assert.assertNotNull(days29);
        org.junit.Assert.assertNotNull(durationFieldType30);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 5 + "'", int31 == 5);
        org.junit.Assert.assertNotNull(days33);
        org.junit.Assert.assertNotNull(days34);
        org.junit.Assert.assertNotNull(days36);
        org.junit.Assert.assertNotNull(days38);
        org.junit.Assert.assertNotNull(days40);
        org.junit.Assert.assertNotNull(days42);
        org.junit.Assert.assertNotNull(days44);
        org.junit.Assert.assertNotNull(days46);
        org.junit.Assert.assertNotNull(days48);
        org.junit.Assert.assertNotNull(days50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(days52);
        org.junit.Assert.assertNotNull(days54);
        org.junit.Assert.assertNotNull(days56);
        org.junit.Assert.assertNotNull(days58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
    }

    @Test
    public void test0470() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0470");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Days days1 = org.joda.time.Days.daysIn(readableInterval0);
        int int3 = days1.getValue((int) (short) 0);
        org.joda.time.Days days4 = org.joda.time.Days.FIVE;
        org.joda.time.Days days5 = days1.minus(days4);
        org.joda.time.DurationFieldType durationFieldType6 = null;
        int int7 = days4.get(durationFieldType6);
        org.joda.time.DurationFieldType durationFieldType8 = null;
        int int9 = days4.get(durationFieldType8);
        boolean boolean11 = days4.equals((java.lang.Object) 0L);
        int int12 = days4.getDays();
        org.joda.time.Days days14 = days4.minus((int) (short) 10);
        org.joda.time.Days days16 = days4.multipliedBy(3);
        org.joda.time.ReadableInterval readableInterval17 = null;
        org.joda.time.Days days18 = org.joda.time.Days.daysIn(readableInterval17);
        org.joda.time.ReadableInterval readableInterval19 = null;
        org.joda.time.Days days20 = org.joda.time.Days.daysIn(readableInterval19);
        int int22 = days20.getValue((int) (short) 0);
        org.joda.time.Days days23 = org.joda.time.Days.FIVE;
        org.joda.time.Days days24 = days20.minus(days23);
        org.joda.time.DurationFieldType durationFieldType25 = null;
        boolean boolean26 = days23.isSupported(durationFieldType25);
        org.joda.time.DurationFieldType durationFieldType28 = days23.getFieldType(0);
        int int29 = days18.get(durationFieldType28);
        org.joda.time.PeriodType periodType30 = days18.getPeriodType();
        org.joda.time.Days days32 = days18.multipliedBy((int) (short) -1);
        int int33 = days18.size();
        org.joda.time.Duration duration34 = days18.toStandardDuration();
        org.joda.time.ReadableInterval readableInterval35 = null;
        org.joda.time.Days days36 = org.joda.time.Days.daysIn(readableInterval35);
        int int38 = days36.getValue((int) (short) 0);
        org.joda.time.Days days39 = org.joda.time.Days.FIVE;
        org.joda.time.Days days40 = days36.minus(days39);
        org.joda.time.DurationFieldType durationFieldType41 = null;
        boolean boolean42 = days39.isSupported(durationFieldType41);
        org.joda.time.DurationFieldType durationFieldType44 = days39.getFieldType(0);
        org.joda.time.ReadableInterval readableInterval45 = null;
        org.joda.time.Days days46 = org.joda.time.Days.daysIn(readableInterval45);
        int int48 = days46.getValue((int) (short) 0);
        org.joda.time.Days days49 = org.joda.time.Days.FIVE;
        org.joda.time.Days days50 = days46.minus(days49);
        org.joda.time.Days days51 = null;
        org.joda.time.Days days52 = days46.minus(days51);
        org.joda.time.Days days54 = days46.minus((-1));
        org.joda.time.DurationFieldType durationFieldType55 = days46.getFieldType();
        boolean boolean56 = days39.isGreaterThan(days46);
        org.joda.time.ReadableInterval readableInterval57 = null;
        org.joda.time.Days days58 = org.joda.time.Days.daysIn(readableInterval57);
        org.joda.time.Days days60 = days58.plus((int) (byte) 10);
        org.joda.time.Days days61 = days46.plus(days60);
        org.joda.time.MutablePeriod mutablePeriod62 = days60.toMutablePeriod();
        org.joda.time.PeriodType periodType63 = days60.getPeriodType();
        org.joda.time.Days days64 = days60.negated();
        int int65 = days18.compareTo((org.joda.time.base.BaseSingleFieldPeriod) days64);
        boolean boolean66 = days4.equals((java.lang.Object) days18);
        org.junit.Assert.assertNotNull(days1);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(days4);
        org.junit.Assert.assertNotNull(days5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 5 + "'", int12 == 5);
        org.junit.Assert.assertNotNull(days14);
        org.junit.Assert.assertNotNull(days16);
        org.junit.Assert.assertNotNull(days18);
        org.junit.Assert.assertNotNull(days20);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertNotNull(days23);
        org.junit.Assert.assertNotNull(days24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(durationFieldType28);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertNotNull(periodType30);
        org.junit.Assert.assertNotNull(days32);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 1 + "'", int33 == 1);
        org.junit.Assert.assertNotNull(duration34);
        org.junit.Assert.assertNotNull(days36);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 0 + "'", int38 == 0);
        org.junit.Assert.assertNotNull(days39);
        org.junit.Assert.assertNotNull(days40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(durationFieldType44);
        org.junit.Assert.assertNotNull(days46);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 0 + "'", int48 == 0);
        org.junit.Assert.assertNotNull(days49);
        org.junit.Assert.assertNotNull(days50);
        org.junit.Assert.assertNotNull(days52);
        org.junit.Assert.assertNotNull(days54);
        org.junit.Assert.assertNotNull(durationFieldType55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(days58);
        org.junit.Assert.assertNotNull(days60);
        org.junit.Assert.assertNotNull(days61);
        org.junit.Assert.assertNotNull(mutablePeriod62);
        org.junit.Assert.assertNotNull(periodType63);
        org.junit.Assert.assertNotNull(days64);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 1 + "'", int65 == 1);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
    }

    @Test
    public void test0471() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0471");
        org.joda.time.Days days1 = org.joda.time.Days.parseDays("P51D");
        org.joda.time.Hours hours2 = days1.toStandardHours();
        org.junit.Assert.assertNotNull(days1);
        org.junit.Assert.assertNotNull(hours2);
    }

    @Test
    public void test0472() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0472");
        org.joda.time.Days days1 = org.joda.time.Days.days(1);
        org.joda.time.Days days2 = days1.negated();
        org.joda.time.Days days3 = null;
        org.joda.time.Days days4 = days1.minus(days3);
        org.joda.time.Duration duration5 = days4.toStandardDuration();
        org.junit.Assert.assertNotNull(days1);
        org.junit.Assert.assertNotNull(days2);
        org.junit.Assert.assertNotNull(days4);
        org.junit.Assert.assertNotNull(duration5);
    }

    @Test
    public void test0473() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0473");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Days days1 = org.joda.time.Days.daysIn(readableInterval0);
        org.joda.time.ReadableInterval readableInterval2 = null;
        org.joda.time.Days days3 = org.joda.time.Days.daysIn(readableInterval2);
        int int5 = days3.getValue((int) (short) 0);
        org.joda.time.Days days6 = org.joda.time.Days.FIVE;
        org.joda.time.Days days7 = days3.minus(days6);
        org.joda.time.DurationFieldType durationFieldType8 = null;
        boolean boolean9 = days6.isSupported(durationFieldType8);
        org.joda.time.DurationFieldType durationFieldType11 = days6.getFieldType(0);
        int int12 = days1.get(durationFieldType11);
        org.joda.time.ReadableInterval readableInterval13 = null;
        org.joda.time.Days days14 = org.joda.time.Days.daysIn(readableInterval13);
        int int16 = days14.getValue((int) (short) 0);
        org.joda.time.ReadableInterval readableInterval17 = null;
        org.joda.time.Days days18 = org.joda.time.Days.daysIn(readableInterval17);
        int int20 = days18.getValue((int) (short) 0);
        org.joda.time.Days days21 = org.joda.time.Days.FIVE;
        org.joda.time.Days days22 = days18.minus(days21);
        int int23 = days14.compareTo((org.joda.time.base.BaseSingleFieldPeriod) days21);
        java.lang.String str24 = days14.toString();
        org.joda.time.Days days25 = null;
        boolean boolean26 = days14.isGreaterThan(days25);
        org.joda.time.Period period27 = days14.toPeriod();
        org.joda.time.Days days28 = days1.plus(days14);
        org.joda.time.Days days30 = days14.multipliedBy((-1));
        org.joda.time.Days days31 = days14.negated();
        int int32 = days31.getDays();
        // The following exception was thrown during execution in test generation
        try {
            int int34 = days31.getValue((-100));
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: -100");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(days1);
        org.junit.Assert.assertNotNull(days3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(days6);
        org.junit.Assert.assertNotNull(days7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(durationFieldType11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNotNull(days14);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertNotNull(days18);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertNotNull(days21);
        org.junit.Assert.assertNotNull(days22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "P0D" + "'", str24, "P0D");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(period27);
        org.junit.Assert.assertNotNull(days28);
        org.junit.Assert.assertNotNull(days30);
        org.junit.Assert.assertNotNull(days31);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
    }

    @Test
    public void test0474() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0474");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Days days1 = org.joda.time.Days.daysIn(readableInterval0);
        int int3 = days1.getValue((int) (short) 0);
        org.joda.time.Days days4 = org.joda.time.Days.FIVE;
        org.joda.time.Days days5 = days1.minus(days4);
        org.joda.time.Days days6 = org.joda.time.Days.FIVE;
        org.joda.time.ReadableInterval readableInterval7 = null;
        org.joda.time.Days days8 = org.joda.time.Days.daysIn(readableInterval7);
        int int10 = days8.getValue((int) (short) 0);
        org.joda.time.ReadableInterval readableInterval11 = null;
        org.joda.time.Days days12 = org.joda.time.Days.daysIn(readableInterval11);
        int int14 = days12.getValue((int) (short) 0);
        org.joda.time.Days days15 = org.joda.time.Days.FIVE;
        org.joda.time.Days days16 = days12.minus(days15);
        int int17 = days8.compareTo((org.joda.time.base.BaseSingleFieldPeriod) days15);
        org.joda.time.ReadableInterval readableInterval18 = null;
        org.joda.time.Days days19 = org.joda.time.Days.daysIn(readableInterval18);
        int int21 = days19.getValue((int) (short) 0);
        org.joda.time.Days days22 = org.joda.time.Days.FIVE;
        org.joda.time.Days days23 = days19.minus(days22);
        org.joda.time.DurationFieldType durationFieldType24 = null;
        boolean boolean25 = days22.isSupported(durationFieldType24);
        org.joda.time.DurationFieldType durationFieldType27 = days22.getFieldType(0);
        int int28 = days8.get(durationFieldType27);
        boolean boolean29 = days6.isSupported(durationFieldType27);
        org.joda.time.Days days30 = days4.plus(days6);
        org.joda.time.Period period31 = days4.toPeriod();
        org.joda.time.ReadableInterval readableInterval32 = null;
        org.joda.time.Days days33 = org.joda.time.Days.daysIn(readableInterval32);
        org.joda.time.Days days35 = days33.plus((int) (byte) 10);
        int int36 = days35.getDays();
        int int37 = days35.getDays();
        org.joda.time.Days days38 = org.joda.time.Days.FIVE;
        org.joda.time.ReadableInterval readableInterval39 = null;
        org.joda.time.Days days40 = org.joda.time.Days.daysIn(readableInterval39);
        int int42 = days40.getValue((int) (short) 0);
        org.joda.time.ReadableInterval readableInterval43 = null;
        org.joda.time.Days days44 = org.joda.time.Days.daysIn(readableInterval43);
        int int46 = days44.getValue((int) (short) 0);
        org.joda.time.Days days47 = org.joda.time.Days.FIVE;
        org.joda.time.Days days48 = days44.minus(days47);
        int int49 = days40.compareTo((org.joda.time.base.BaseSingleFieldPeriod) days47);
        org.joda.time.ReadableInterval readableInterval50 = null;
        org.joda.time.Days days51 = org.joda.time.Days.daysIn(readableInterval50);
        int int53 = days51.getValue((int) (short) 0);
        org.joda.time.Days days54 = org.joda.time.Days.FIVE;
        org.joda.time.Days days55 = days51.minus(days54);
        org.joda.time.DurationFieldType durationFieldType56 = null;
        boolean boolean57 = days54.isSupported(durationFieldType56);
        org.joda.time.DurationFieldType durationFieldType59 = days54.getFieldType(0);
        int int60 = days40.get(durationFieldType59);
        boolean boolean61 = days38.isSupported(durationFieldType59);
        int int62 = days35.get(durationFieldType59);
        boolean boolean63 = days4.isSupported(durationFieldType59);
        int int64 = days4.size();
        org.junit.Assert.assertNotNull(days1);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(days4);
        org.junit.Assert.assertNotNull(days5);
        org.junit.Assert.assertNotNull(days6);
        org.junit.Assert.assertNotNull(days8);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(days12);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNotNull(days15);
        org.junit.Assert.assertNotNull(days16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertNotNull(days19);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertNotNull(days22);
        org.junit.Assert.assertNotNull(days23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(durationFieldType27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(days30);
        org.junit.Assert.assertNotNull(period31);
        org.junit.Assert.assertNotNull(days33);
        org.junit.Assert.assertNotNull(days35);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 10 + "'", int36 == 10);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 10 + "'", int37 == 10);
        org.junit.Assert.assertNotNull(days38);
        org.junit.Assert.assertNotNull(days40);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0);
        org.junit.Assert.assertNotNull(days44);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 0 + "'", int46 == 0);
        org.junit.Assert.assertNotNull(days47);
        org.junit.Assert.assertNotNull(days48);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + (-1) + "'", int49 == (-1));
        org.junit.Assert.assertNotNull(days51);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 0 + "'", int53 == 0);
        org.junit.Assert.assertNotNull(days54);
        org.junit.Assert.assertNotNull(days55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(durationFieldType59);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 0 + "'", int60 == 0);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 10 + "'", int62 == 10);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 1 + "'", int64 == 1);
    }

    @Test
    public void test0475() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0475");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Days days1 = org.joda.time.Days.daysIn(readableInterval0);
        int int3 = days1.getValue((int) (short) 0);
        org.joda.time.Days days4 = org.joda.time.Days.FIVE;
        org.joda.time.Days days5 = days1.minus(days4);
        org.joda.time.DurationFieldType durationFieldType6 = null;
        int int7 = days4.get(durationFieldType6);
        org.joda.time.DurationFieldType durationFieldType8 = null;
        int int9 = days4.get(durationFieldType8);
        boolean boolean11 = days4.equals((java.lang.Object) 0L);
        org.joda.time.DurationFieldType durationFieldType12 = days4.getFieldType();
        org.joda.time.Days days13 = days4.negated();
        org.joda.time.ReadableInterval readableInterval14 = null;
        org.joda.time.Days days15 = org.joda.time.Days.daysIn(readableInterval14);
        int int17 = days15.getValue((int) (short) 0);
        org.joda.time.Days days18 = org.joda.time.Days.FIVE;
        org.joda.time.Days days19 = days15.minus(days18);
        org.joda.time.DurationFieldType durationFieldType20 = null;
        int int21 = days18.get(durationFieldType20);
        org.joda.time.DurationFieldType durationFieldType22 = null;
        int int23 = days18.get(durationFieldType22);
        boolean boolean25 = days18.equals((java.lang.Object) 0L);
        int int26 = days18.getDays();
        org.joda.time.Days days27 = days13.minus(days18);
        int int28 = days27.size();
        org.joda.time.ReadableInterval readableInterval29 = null;
        org.joda.time.Days days30 = org.joda.time.Days.daysIn(readableInterval29);
        int int32 = days30.getValue((int) (short) 0);
        org.joda.time.Period period33 = days30.toPeriod();
        org.joda.time.Days days34 = org.joda.time.Days.standardDaysIn((org.joda.time.ReadablePeriod) days30);
        org.joda.time.DurationFieldType durationFieldType35 = days30.getFieldType();
        org.joda.time.Days days37 = days30.minus((int) (short) 100);
        boolean boolean38 = days27.equals((java.lang.Object) days30);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.DurationFieldType durationFieldType40 = days30.getFieldType(6);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 6");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(days1);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(days4);
        org.junit.Assert.assertNotNull(days5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(durationFieldType12);
        org.junit.Assert.assertNotNull(days13);
        org.junit.Assert.assertNotNull(days15);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNotNull(days18);
        org.junit.Assert.assertNotNull(days19);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 5 + "'", int26 == 5);
        org.junit.Assert.assertNotNull(days27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 1 + "'", int28 == 1);
        org.junit.Assert.assertNotNull(days30);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertNotNull(period33);
        org.junit.Assert.assertNotNull(days34);
        org.junit.Assert.assertNotNull(durationFieldType35);
        org.junit.Assert.assertNotNull(days37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
    }

    @Test
    public void test0476() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0476");
        org.joda.time.Days days0 = org.joda.time.Days.THREE;
        org.joda.time.ReadableInterval readableInterval1 = null;
        org.joda.time.Days days2 = org.joda.time.Days.daysIn(readableInterval1);
        org.joda.time.ReadableInterval readableInterval3 = null;
        org.joda.time.Days days4 = org.joda.time.Days.daysIn(readableInterval3);
        int int6 = days4.getValue((int) (short) 0);
        org.joda.time.Days days7 = org.joda.time.Days.FIVE;
        org.joda.time.Days days8 = days4.minus(days7);
        org.joda.time.DurationFieldType durationFieldType9 = null;
        boolean boolean10 = days7.isSupported(durationFieldType9);
        org.joda.time.DurationFieldType durationFieldType12 = days7.getFieldType(0);
        int int13 = days2.get(durationFieldType12);
        org.joda.time.ReadableInterval readableInterval14 = null;
        org.joda.time.Days days15 = org.joda.time.Days.daysIn(readableInterval14);
        int int17 = days15.getValue((int) (short) 0);
        org.joda.time.ReadableInterval readableInterval18 = null;
        org.joda.time.Days days19 = org.joda.time.Days.daysIn(readableInterval18);
        int int21 = days19.getValue((int) (short) 0);
        org.joda.time.Days days22 = org.joda.time.Days.FIVE;
        org.joda.time.Days days23 = days19.minus(days22);
        int int24 = days15.compareTo((org.joda.time.base.BaseSingleFieldPeriod) days22);
        java.lang.String str25 = days15.toString();
        org.joda.time.Days days26 = null;
        boolean boolean27 = days15.isGreaterThan(days26);
        org.joda.time.Period period28 = days15.toPeriod();
        org.joda.time.Days days29 = days2.plus(days15);
        boolean boolean30 = days0.isLessThan(days15);
        // The following exception was thrown during execution in test generation
        try {
            int int32 = days15.getValue(52);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 52");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(days0);
        org.junit.Assert.assertNotNull(days2);
        org.junit.Assert.assertNotNull(days4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNotNull(days7);
        org.junit.Assert.assertNotNull(days8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(durationFieldType12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(days15);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNotNull(days19);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertNotNull(days22);
        org.junit.Assert.assertNotNull(days23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "P0D" + "'", str25, "P0D");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(period28);
        org.junit.Assert.assertNotNull(days29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
    }

    @Test
    public void test0477() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0477");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Days days1 = org.joda.time.Days.daysIn(readableInterval0);
        int int3 = days1.getValue((int) (short) 0);
        org.joda.time.Days days4 = org.joda.time.Days.FIVE;
        org.joda.time.Days days5 = days1.minus(days4);
        org.joda.time.DurationFieldType durationFieldType6 = null;
        boolean boolean7 = days4.isSupported(durationFieldType6);
        org.joda.time.DurationFieldType durationFieldType9 = days4.getFieldType(0);
        org.joda.time.ReadableInterval readableInterval10 = null;
        org.joda.time.Days days11 = org.joda.time.Days.daysIn(readableInterval10);
        int int13 = days11.getValue((int) (short) 0);
        org.joda.time.Days days14 = org.joda.time.Days.FIVE;
        org.joda.time.Days days15 = days11.minus(days14);
        org.joda.time.Days days16 = null;
        org.joda.time.Days days17 = days11.minus(days16);
        org.joda.time.Days days19 = days11.minus((-1));
        org.joda.time.DurationFieldType durationFieldType20 = days11.getFieldType();
        boolean boolean21 = days4.isGreaterThan(days11);
        org.joda.time.ReadableInterval readableInterval22 = null;
        org.joda.time.Days days23 = org.joda.time.Days.daysIn(readableInterval22);
        org.joda.time.Days days25 = days23.plus((int) (byte) 10);
        org.joda.time.Days days26 = days11.plus(days25);
        org.joda.time.Days days27 = null;
        boolean boolean28 = days25.isGreaterThan(days27);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.DurationFieldType durationFieldType30 = days25.getFieldType(100);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 100");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(days1);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(days4);
        org.junit.Assert.assertNotNull(days5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(durationFieldType9);
        org.junit.Assert.assertNotNull(days11);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(days14);
        org.junit.Assert.assertNotNull(days15);
        org.junit.Assert.assertNotNull(days17);
        org.junit.Assert.assertNotNull(days19);
        org.junit.Assert.assertNotNull(durationFieldType20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(days23);
        org.junit.Assert.assertNotNull(days25);
        org.junit.Assert.assertNotNull(days26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
    }

    @Test
    public void test0478() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0478");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Days days1 = org.joda.time.Days.daysIn(readableInterval0);
        org.joda.time.Days days3 = days1.plus((int) (byte) 10);
        org.joda.time.Days days5 = days3.dividedBy((int) 'a');
        org.joda.time.Days days7 = days3.dividedBy(5);
        org.joda.time.Days days9 = days3.plus((int) (byte) -1);
        org.joda.time.Days days11 = days3.minus((int) (byte) 100);
        int int12 = days11.getDays();
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.DurationFieldType durationFieldType14 = days11.getFieldType(1);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 1");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(days1);
        org.junit.Assert.assertNotNull(days3);
        org.junit.Assert.assertNotNull(days5);
        org.junit.Assert.assertNotNull(days7);
        org.junit.Assert.assertNotNull(days9);
        org.junit.Assert.assertNotNull(days11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-90) + "'", int12 == (-90));
    }

    @Test
    public void test0479() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0479");
        org.joda.time.Days days0 = org.joda.time.Days.THREE;
        org.joda.time.ReadableInterval readableInterval1 = null;
        org.joda.time.Days days2 = org.joda.time.Days.daysIn(readableInterval1);
        org.joda.time.ReadableInterval readableInterval3 = null;
        org.joda.time.Days days4 = org.joda.time.Days.daysIn(readableInterval3);
        int int6 = days4.getValue((int) (short) 0);
        org.joda.time.Days days7 = org.joda.time.Days.FIVE;
        org.joda.time.Days days8 = days4.minus(days7);
        org.joda.time.DurationFieldType durationFieldType9 = null;
        boolean boolean10 = days7.isSupported(durationFieldType9);
        org.joda.time.DurationFieldType durationFieldType12 = days7.getFieldType(0);
        int int13 = days2.get(durationFieldType12);
        org.joda.time.ReadableInterval readableInterval14 = null;
        org.joda.time.Days days15 = org.joda.time.Days.daysIn(readableInterval14);
        int int17 = days15.getValue((int) (short) 0);
        org.joda.time.Days days18 = org.joda.time.Days.FIVE;
        org.joda.time.Days days19 = days15.minus(days18);
        org.joda.time.DurationFieldType durationFieldType20 = null;
        int int21 = days18.get(durationFieldType20);
        org.joda.time.DurationFieldType durationFieldType22 = null;
        int int23 = days18.get(durationFieldType22);
        boolean boolean25 = days18.equals((java.lang.Object) 0L);
        boolean boolean26 = days2.isGreaterThan(days18);
        org.joda.time.ReadableInterval readableInterval27 = null;
        org.joda.time.Days days28 = org.joda.time.Days.daysIn(readableInterval27);
        int int30 = days28.getValue((int) (short) 0);
        org.joda.time.Days days31 = org.joda.time.Days.FIVE;
        org.joda.time.Days days32 = days28.minus(days31);
        org.joda.time.DurationFieldType durationFieldType33 = null;
        int int34 = days31.get(durationFieldType33);
        org.joda.time.DurationFieldType durationFieldType35 = null;
        int int36 = days31.get(durationFieldType35);
        boolean boolean38 = days31.equals((java.lang.Object) 0L);
        org.joda.time.Period period39 = days31.toPeriod();
        org.joda.time.Days days40 = days2.plus(days31);
        boolean boolean41 = days0.isGreaterThan(days40);
        org.joda.time.ReadableInterval readableInterval42 = null;
        org.joda.time.Days days43 = org.joda.time.Days.daysIn(readableInterval42);
        org.joda.time.Days days45 = days43.plus((int) (byte) 10);
        org.joda.time.Days days47 = days45.dividedBy((int) 'a');
        int int48 = days40.compareTo((org.joda.time.base.BaseSingleFieldPeriod) days45);
        org.joda.time.Days days50 = days45.dividedBy((int) ' ');
        org.joda.time.Days days51 = org.joda.time.Days.standardDaysIn((org.joda.time.ReadablePeriod) days45);
        org.joda.time.ReadableInterval readableInterval52 = null;
        org.joda.time.Days days53 = org.joda.time.Days.daysIn(readableInterval52);
        int int55 = days53.getValue((int) (short) 0);
        org.joda.time.ReadableInterval readableInterval56 = null;
        org.joda.time.Days days57 = org.joda.time.Days.daysIn(readableInterval56);
        int int59 = days57.getValue((int) (short) 0);
        org.joda.time.Days days60 = org.joda.time.Days.FIVE;
        org.joda.time.Days days61 = days57.minus(days60);
        int int62 = days53.compareTo((org.joda.time.base.BaseSingleFieldPeriod) days60);
        java.lang.String str63 = days53.toString();
        org.joda.time.Days days64 = null;
        boolean boolean65 = days53.isGreaterThan(days64);
        org.joda.time.Period period66 = days53.toPeriod();
        org.joda.time.Duration duration67 = days53.toStandardDuration();
        org.joda.time.Days days69 = days53.multipliedBy(2147483647);
        org.joda.time.Days days70 = days51.minus(days53);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.DurationFieldType durationFieldType72 = days51.getFieldType(8);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 8");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(days0);
        org.junit.Assert.assertNotNull(days2);
        org.junit.Assert.assertNotNull(days4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNotNull(days7);
        org.junit.Assert.assertNotNull(days8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(durationFieldType12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(days15);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNotNull(days18);
        org.junit.Assert.assertNotNull(days19);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(days28);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertNotNull(days31);
        org.junit.Assert.assertNotNull(days32);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(period39);
        org.junit.Assert.assertNotNull(days40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(days43);
        org.junit.Assert.assertNotNull(days45);
        org.junit.Assert.assertNotNull(days47);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + (-1) + "'", int48 == (-1));
        org.junit.Assert.assertNotNull(days50);
        org.junit.Assert.assertNotNull(days51);
        org.junit.Assert.assertNotNull(days53);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 0 + "'", int55 == 0);
        org.junit.Assert.assertNotNull(days57);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 0 + "'", int59 == 0);
        org.junit.Assert.assertNotNull(days60);
        org.junit.Assert.assertNotNull(days61);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + (-1) + "'", int62 == (-1));
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "P0D" + "'", str63, "P0D");
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(period66);
        org.junit.Assert.assertNotNull(duration67);
        org.junit.Assert.assertNotNull(days69);
        org.junit.Assert.assertNotNull(days70);
    }

    @Test
    public void test0480() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0480");
        org.joda.time.Days days0 = org.joda.time.Days.THREE;
        org.joda.time.ReadableInterval readableInterval1 = null;
        org.joda.time.Days days2 = org.joda.time.Days.daysIn(readableInterval1);
        org.joda.time.ReadableInterval readableInterval3 = null;
        org.joda.time.Days days4 = org.joda.time.Days.daysIn(readableInterval3);
        int int6 = days4.getValue((int) (short) 0);
        org.joda.time.Days days7 = org.joda.time.Days.FIVE;
        org.joda.time.Days days8 = days4.minus(days7);
        org.joda.time.DurationFieldType durationFieldType9 = null;
        boolean boolean10 = days7.isSupported(durationFieldType9);
        org.joda.time.DurationFieldType durationFieldType12 = days7.getFieldType(0);
        int int13 = days2.get(durationFieldType12);
        org.joda.time.ReadableInterval readableInterval14 = null;
        org.joda.time.Days days15 = org.joda.time.Days.daysIn(readableInterval14);
        int int17 = days15.getValue((int) (short) 0);
        org.joda.time.Days days18 = org.joda.time.Days.FIVE;
        org.joda.time.Days days19 = days15.minus(days18);
        org.joda.time.DurationFieldType durationFieldType20 = null;
        int int21 = days18.get(durationFieldType20);
        org.joda.time.DurationFieldType durationFieldType22 = null;
        int int23 = days18.get(durationFieldType22);
        boolean boolean25 = days18.equals((java.lang.Object) 0L);
        boolean boolean26 = days2.isGreaterThan(days18);
        org.joda.time.ReadableInterval readableInterval27 = null;
        org.joda.time.Days days28 = org.joda.time.Days.daysIn(readableInterval27);
        int int30 = days28.getValue((int) (short) 0);
        org.joda.time.Days days31 = org.joda.time.Days.FIVE;
        org.joda.time.Days days32 = days28.minus(days31);
        org.joda.time.DurationFieldType durationFieldType33 = null;
        int int34 = days31.get(durationFieldType33);
        org.joda.time.DurationFieldType durationFieldType35 = null;
        int int36 = days31.get(durationFieldType35);
        boolean boolean38 = days31.equals((java.lang.Object) 0L);
        org.joda.time.Period period39 = days31.toPeriod();
        org.joda.time.Days days40 = days2.plus(days31);
        boolean boolean41 = days0.isGreaterThan(days40);
        org.joda.time.ReadableInterval readableInterval42 = null;
        org.joda.time.Days days43 = org.joda.time.Days.daysIn(readableInterval42);
        int int45 = days43.getValue((int) (short) 0);
        org.joda.time.Days days46 = org.joda.time.Days.FIVE;
        org.joda.time.Days days47 = days43.minus(days46);
        org.joda.time.DurationFieldType durationFieldType48 = null;
        boolean boolean49 = days46.isSupported(durationFieldType48);
        org.joda.time.DurationFieldType durationFieldType51 = days46.getFieldType(0);
        org.joda.time.ReadableInterval readableInterval52 = null;
        org.joda.time.Days days53 = org.joda.time.Days.daysIn(readableInterval52);
        int int55 = days53.getValue((int) (short) 0);
        org.joda.time.Days days56 = org.joda.time.Days.FIVE;
        org.joda.time.Days days57 = days53.minus(days56);
        org.joda.time.Days days58 = null;
        org.joda.time.Days days59 = days53.minus(days58);
        org.joda.time.Days days61 = days53.minus((-1));
        org.joda.time.DurationFieldType durationFieldType62 = days53.getFieldType();
        boolean boolean63 = days46.isGreaterThan(days53);
        org.joda.time.ReadableInterval readableInterval64 = null;
        org.joda.time.Days days65 = org.joda.time.Days.daysIn(readableInterval64);
        org.joda.time.Days days67 = days65.plus((int) (byte) 10);
        org.joda.time.Days days68 = days53.plus(days67);
        org.joda.time.ReadableInterval readableInterval69 = null;
        org.joda.time.Days days70 = org.joda.time.Days.daysIn(readableInterval69);
        int int72 = days70.getValue((int) (short) 0);
        org.joda.time.Days days73 = org.joda.time.Days.FIVE;
        org.joda.time.Days days74 = days70.minus(days73);
        org.joda.time.Days days75 = null;
        org.joda.time.Days days76 = days70.minus(days75);
        org.joda.time.Duration duration77 = days70.toStandardDuration();
        org.joda.time.Days days78 = days68.minus(days70);
        org.joda.time.Days days79 = days0.minus(days68);
        org.joda.time.Days days81 = days79.plus((int) '4');
        org.junit.Assert.assertNotNull(days0);
        org.junit.Assert.assertNotNull(days2);
        org.junit.Assert.assertNotNull(days4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNotNull(days7);
        org.junit.Assert.assertNotNull(days8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(durationFieldType12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(days15);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNotNull(days18);
        org.junit.Assert.assertNotNull(days19);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(days28);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertNotNull(days31);
        org.junit.Assert.assertNotNull(days32);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(period39);
        org.junit.Assert.assertNotNull(days40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(days43);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 0 + "'", int45 == 0);
        org.junit.Assert.assertNotNull(days46);
        org.junit.Assert.assertNotNull(days47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(durationFieldType51);
        org.junit.Assert.assertNotNull(days53);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 0 + "'", int55 == 0);
        org.junit.Assert.assertNotNull(days56);
        org.junit.Assert.assertNotNull(days57);
        org.junit.Assert.assertNotNull(days59);
        org.junit.Assert.assertNotNull(days61);
        org.junit.Assert.assertNotNull(durationFieldType62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(days65);
        org.junit.Assert.assertNotNull(days67);
        org.junit.Assert.assertNotNull(days68);
        org.junit.Assert.assertNotNull(days70);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 0 + "'", int72 == 0);
        org.junit.Assert.assertNotNull(days73);
        org.junit.Assert.assertNotNull(days74);
        org.junit.Assert.assertNotNull(days76);
        org.junit.Assert.assertNotNull(duration77);
        org.junit.Assert.assertNotNull(days78);
        org.junit.Assert.assertNotNull(days79);
        org.junit.Assert.assertNotNull(days81);
    }

    @Test
    public void test0481() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0481");
        org.joda.time.Days days0 = org.joda.time.Days.ONE;
        org.joda.time.ReadableInterval readableInterval1 = null;
        org.joda.time.Days days2 = org.joda.time.Days.daysIn(readableInterval1);
        org.joda.time.Days days4 = days2.plus((int) (byte) 10);
        org.joda.time.Days days6 = days4.dividedBy((int) 'a');
        org.joda.time.Days days8 = days4.plus((int) ' ');
        org.joda.time.Days days9 = org.joda.time.Days.standardDaysIn((org.joda.time.ReadablePeriod) days8);
        org.joda.time.ReadableInterval readableInterval10 = null;
        org.joda.time.Days days11 = org.joda.time.Days.daysIn(readableInterval10);
        int int13 = days11.getValue((int) (short) 0);
        org.joda.time.ReadableInterval readableInterval14 = null;
        org.joda.time.Days days15 = org.joda.time.Days.daysIn(readableInterval14);
        int int17 = days15.getValue((int) (short) 0);
        org.joda.time.Days days18 = org.joda.time.Days.FIVE;
        org.joda.time.Days days19 = days15.minus(days18);
        int int20 = days11.compareTo((org.joda.time.base.BaseSingleFieldPeriod) days18);
        java.lang.String str21 = days11.toString();
        org.joda.time.Days days23 = days11.plus((int) '4');
        org.joda.time.PeriodType periodType24 = days23.getPeriodType();
        int int25 = days23.getDays();
        org.joda.time.Days days27 = days23.minus((int) ' ');
        org.joda.time.ReadableInterval readableInterval28 = null;
        org.joda.time.Days days29 = org.joda.time.Days.daysIn(readableInterval28);
        org.joda.time.Days days31 = days29.plus((int) (byte) 10);
        org.joda.time.Days days33 = days31.dividedBy((int) 'a');
        org.joda.time.Days days35 = days31.dividedBy(5);
        org.joda.time.Days days37 = days31.plus((int) (byte) -1);
        org.joda.time.Days days38 = days23.plus(days31);
        boolean boolean39 = days9.isLessThan(days38);
        org.joda.time.Period period40 = days9.toPeriod();
        org.joda.time.ReadableInterval readableInterval41 = null;
        org.joda.time.Days days42 = org.joda.time.Days.daysIn(readableInterval41);
        int int44 = days42.getValue((int) (short) 0);
        org.joda.time.ReadableInterval readableInterval45 = null;
        org.joda.time.Days days46 = org.joda.time.Days.daysIn(readableInterval45);
        int int48 = days46.getValue((int) (short) 0);
        org.joda.time.Days days49 = org.joda.time.Days.FIVE;
        org.joda.time.Days days50 = days46.minus(days49);
        int int51 = days42.compareTo((org.joda.time.base.BaseSingleFieldPeriod) days49);
        org.joda.time.MutablePeriod mutablePeriod52 = days49.toMutablePeriod();
        org.joda.time.ReadableInterval readableInterval53 = null;
        org.joda.time.Days days54 = org.joda.time.Days.daysIn(readableInterval53);
        int int56 = days54.getValue((int) (short) 0);
        org.joda.time.ReadableInterval readableInterval57 = null;
        org.joda.time.Days days58 = org.joda.time.Days.daysIn(readableInterval57);
        int int60 = days58.getValue((int) (short) 0);
        org.joda.time.Days days61 = org.joda.time.Days.FIVE;
        org.joda.time.Days days62 = days58.minus(days61);
        int int63 = days54.compareTo((org.joda.time.base.BaseSingleFieldPeriod) days61);
        org.joda.time.ReadableInterval readableInterval64 = null;
        org.joda.time.Days days65 = org.joda.time.Days.daysIn(readableInterval64);
        int int67 = days65.getValue((int) (short) 0);
        org.joda.time.Days days68 = org.joda.time.Days.FIVE;
        org.joda.time.Days days69 = days65.minus(days68);
        org.joda.time.DurationFieldType durationFieldType70 = null;
        boolean boolean71 = days68.isSupported(durationFieldType70);
        org.joda.time.DurationFieldType durationFieldType73 = days68.getFieldType(0);
        int int74 = days54.get(durationFieldType73);
        boolean boolean75 = days49.isSupported(durationFieldType73);
        boolean boolean76 = days9.isSupported(durationFieldType73);
        int int77 = days0.get(durationFieldType73);
        org.junit.Assert.assertNotNull(days0);
        org.junit.Assert.assertNotNull(days2);
        org.junit.Assert.assertNotNull(days4);
        org.junit.Assert.assertNotNull(days6);
        org.junit.Assert.assertNotNull(days8);
        org.junit.Assert.assertNotNull(days9);
        org.junit.Assert.assertNotNull(days11);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(days15);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNotNull(days18);
        org.junit.Assert.assertNotNull(days19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "P0D" + "'", str21, "P0D");
        org.junit.Assert.assertNotNull(days23);
        org.junit.Assert.assertNotNull(periodType24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 52 + "'", int25 == 52);
        org.junit.Assert.assertNotNull(days27);
        org.junit.Assert.assertNotNull(days29);
        org.junit.Assert.assertNotNull(days31);
        org.junit.Assert.assertNotNull(days33);
        org.junit.Assert.assertNotNull(days35);
        org.junit.Assert.assertNotNull(days37);
        org.junit.Assert.assertNotNull(days38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(period40);
        org.junit.Assert.assertNotNull(days42);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 0 + "'", int44 == 0);
        org.junit.Assert.assertNotNull(days46);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 0 + "'", int48 == 0);
        org.junit.Assert.assertNotNull(days49);
        org.junit.Assert.assertNotNull(days50);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + (-1) + "'", int51 == (-1));
        org.junit.Assert.assertNotNull(mutablePeriod52);
        org.junit.Assert.assertNotNull(days54);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 0 + "'", int56 == 0);
        org.junit.Assert.assertNotNull(days58);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 0 + "'", int60 == 0);
        org.junit.Assert.assertNotNull(days61);
        org.junit.Assert.assertNotNull(days62);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + (-1) + "'", int63 == (-1));
        org.junit.Assert.assertNotNull(days65);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 0 + "'", int67 == 0);
        org.junit.Assert.assertNotNull(days68);
        org.junit.Assert.assertNotNull(days69);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(durationFieldType73);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 0 + "'", int74 == 0);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 1 + "'", int77 == 1);
    }

    @Test
    public void test0482() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0482");
        org.joda.time.Days days0 = org.joda.time.Days.ZERO;
        org.joda.time.ReadableInterval readableInterval1 = null;
        org.joda.time.Days days2 = org.joda.time.Days.daysIn(readableInterval1);
        int int4 = days2.getValue((int) (short) 0);
        org.joda.time.Days days5 = org.joda.time.Days.FIVE;
        org.joda.time.Days days6 = days2.minus(days5);
        org.joda.time.Days days7 = null;
        org.joda.time.Days days8 = days2.minus(days7);
        org.joda.time.Duration duration9 = days2.toStandardDuration();
        org.joda.time.DurationFieldType durationFieldType10 = days2.getFieldType();
        org.joda.time.Days days11 = days0.minus(days2);
        int int12 = days11.getDays();
        org.joda.time.ReadableInterval readableInterval13 = null;
        org.joda.time.Days days14 = org.joda.time.Days.daysIn(readableInterval13);
        org.joda.time.ReadableInterval readableInterval15 = null;
        org.joda.time.Days days16 = org.joda.time.Days.daysIn(readableInterval15);
        int int18 = days16.getValue((int) (short) 0);
        org.joda.time.Days days19 = org.joda.time.Days.FIVE;
        org.joda.time.Days days20 = days16.minus(days19);
        org.joda.time.DurationFieldType durationFieldType21 = null;
        boolean boolean22 = days19.isSupported(durationFieldType21);
        org.joda.time.DurationFieldType durationFieldType24 = days19.getFieldType(0);
        int int25 = days14.get(durationFieldType24);
        org.joda.time.PeriodType periodType26 = days14.getPeriodType();
        org.joda.time.Days days28 = days14.multipliedBy((int) (short) -1);
        org.joda.time.MutablePeriod mutablePeriod29 = days14.toMutablePeriod();
        org.joda.time.Days days30 = days11.minus(days14);
        org.joda.time.ReadableInterval readableInterval31 = null;
        org.joda.time.Days days32 = org.joda.time.Days.daysIn(readableInterval31);
        int int34 = days32.getValue((int) (short) 0);
        org.joda.time.ReadableInterval readableInterval35 = null;
        org.joda.time.Days days36 = org.joda.time.Days.daysIn(readableInterval35);
        int int38 = days36.getValue((int) (short) 0);
        org.joda.time.Days days39 = org.joda.time.Days.FIVE;
        org.joda.time.Days days40 = days36.minus(days39);
        int int41 = days32.compareTo((org.joda.time.base.BaseSingleFieldPeriod) days39);
        java.lang.String str42 = days32.toString();
        org.joda.time.Days days43 = null;
        boolean boolean44 = days32.isGreaterThan(days43);
        org.joda.time.Period period45 = days32.toPeriod();
        org.joda.time.MutablePeriod mutablePeriod46 = days32.toMutablePeriod();
        boolean boolean47 = days11.isGreaterThan(days32);
        org.joda.time.Days days48 = days32.negated();
        org.junit.Assert.assertNotNull(days0);
        org.junit.Assert.assertNotNull(days2);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(days5);
        org.junit.Assert.assertNotNull(days6);
        org.junit.Assert.assertNotNull(days8);
        org.junit.Assert.assertNotNull(duration9);
        org.junit.Assert.assertNotNull(durationFieldType10);
        org.junit.Assert.assertNotNull(days11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNotNull(days14);
        org.junit.Assert.assertNotNull(days16);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNotNull(days19);
        org.junit.Assert.assertNotNull(days20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(durationFieldType24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertNotNull(periodType26);
        org.junit.Assert.assertNotNull(days28);
        org.junit.Assert.assertNotNull(mutablePeriod29);
        org.junit.Assert.assertNotNull(days30);
        org.junit.Assert.assertNotNull(days32);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertNotNull(days36);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 0 + "'", int38 == 0);
        org.junit.Assert.assertNotNull(days39);
        org.junit.Assert.assertNotNull(days40);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + (-1) + "'", int41 == (-1));
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "P0D" + "'", str42, "P0D");
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(period45);
        org.junit.Assert.assertNotNull(mutablePeriod46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(days48);
    }

    @Test
    public void test0483() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0483");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Days days1 = org.joda.time.Days.daysIn(readableInterval0);
        org.joda.time.ReadableInterval readableInterval2 = null;
        org.joda.time.Days days3 = org.joda.time.Days.daysIn(readableInterval2);
        int int5 = days3.getValue((int) (short) 0);
        org.joda.time.Days days6 = org.joda.time.Days.FIVE;
        org.joda.time.Days days7 = days3.minus(days6);
        org.joda.time.DurationFieldType durationFieldType8 = null;
        boolean boolean9 = days6.isSupported(durationFieldType8);
        org.joda.time.DurationFieldType durationFieldType11 = days6.getFieldType(0);
        int int12 = days1.get(durationFieldType11);
        org.joda.time.ReadableInterval readableInterval13 = null;
        org.joda.time.Days days14 = org.joda.time.Days.daysIn(readableInterval13);
        int int16 = days14.getValue((int) (short) 0);
        org.joda.time.ReadableInterval readableInterval17 = null;
        org.joda.time.Days days18 = org.joda.time.Days.daysIn(readableInterval17);
        int int20 = days18.getValue((int) (short) 0);
        org.joda.time.Days days21 = org.joda.time.Days.FIVE;
        org.joda.time.Days days22 = days18.minus(days21);
        int int23 = days14.compareTo((org.joda.time.base.BaseSingleFieldPeriod) days21);
        java.lang.String str24 = days14.toString();
        org.joda.time.Days days25 = null;
        boolean boolean26 = days14.isGreaterThan(days25);
        org.joda.time.Period period27 = days14.toPeriod();
        org.joda.time.Days days28 = days1.plus(days14);
        org.joda.time.Days days30 = days14.multipliedBy((-1));
        org.joda.time.Days days31 = days14.negated();
        org.joda.time.ReadableInterval readableInterval32 = null;
        org.joda.time.Days days33 = org.joda.time.Days.daysIn(readableInterval32);
        int int35 = days33.getValue((int) (short) 0);
        org.joda.time.Days days36 = org.joda.time.Days.FIVE;
        org.joda.time.Days days37 = days33.minus(days36);
        org.joda.time.Days days38 = null;
        org.joda.time.Days days39 = days33.minus(days38);
        org.joda.time.Days days41 = days33.minus((-1));
        org.joda.time.DurationFieldType durationFieldType42 = days33.getFieldType();
        boolean boolean43 = days14.equals((java.lang.Object) durationFieldType42);
        org.junit.Assert.assertNotNull(days1);
        org.junit.Assert.assertNotNull(days3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(days6);
        org.junit.Assert.assertNotNull(days7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(durationFieldType11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNotNull(days14);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertNotNull(days18);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertNotNull(days21);
        org.junit.Assert.assertNotNull(days22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "P0D" + "'", str24, "P0D");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(period27);
        org.junit.Assert.assertNotNull(days28);
        org.junit.Assert.assertNotNull(days30);
        org.junit.Assert.assertNotNull(days31);
        org.junit.Assert.assertNotNull(days33);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertNotNull(days36);
        org.junit.Assert.assertNotNull(days37);
        org.junit.Assert.assertNotNull(days39);
        org.junit.Assert.assertNotNull(days41);
        org.junit.Assert.assertNotNull(durationFieldType42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
    }

    @Test
    public void test0484() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0484");
        org.joda.time.Days days1 = org.joda.time.Days.days(1);
        org.joda.time.ReadableInterval readableInterval2 = null;
        org.joda.time.Days days3 = org.joda.time.Days.daysIn(readableInterval2);
        int int5 = days3.getValue((int) (short) 0);
        org.joda.time.Days days6 = org.joda.time.Days.FIVE;
        org.joda.time.Days days7 = days3.minus(days6);
        org.joda.time.DurationFieldType durationFieldType8 = null;
        boolean boolean9 = days6.isSupported(durationFieldType8);
        org.joda.time.DurationFieldType durationFieldType11 = days6.getFieldType(0);
        org.joda.time.ReadableInterval readableInterval12 = null;
        org.joda.time.Days days13 = org.joda.time.Days.daysIn(readableInterval12);
        int int15 = days13.getValue((int) (short) 0);
        org.joda.time.Days days16 = org.joda.time.Days.FIVE;
        org.joda.time.Days days17 = days13.minus(days16);
        org.joda.time.Days days18 = null;
        org.joda.time.Days days19 = days13.minus(days18);
        org.joda.time.Days days21 = days13.minus((-1));
        org.joda.time.DurationFieldType durationFieldType22 = days13.getFieldType();
        boolean boolean23 = days6.isGreaterThan(days13);
        org.joda.time.ReadableInterval readableInterval24 = null;
        org.joda.time.Days days25 = org.joda.time.Days.daysIn(readableInterval24);
        org.joda.time.Days days27 = days25.plus((int) (byte) 10);
        org.joda.time.Days days28 = days13.plus(days27);
        org.joda.time.MutablePeriod mutablePeriod29 = days27.toMutablePeriod();
        org.joda.time.PeriodType periodType30 = days27.getPeriodType();
        org.joda.time.Days days31 = days1.minus(days27);
        org.joda.time.Days days33 = days1.minus((int) (byte) 10);
        org.joda.time.ReadableInterval readableInterval34 = null;
        org.joda.time.Days days35 = org.joda.time.Days.daysIn(readableInterval34);
        int int37 = days35.getValue((int) (short) 0);
        org.joda.time.Days days38 = org.joda.time.Days.FIVE;
        org.joda.time.Days days39 = days35.minus(days38);
        org.joda.time.Days days40 = null;
        org.joda.time.Days days41 = days35.minus(days40);
        org.joda.time.Days days43 = days41.minus(100);
        org.joda.time.ReadableInterval readableInterval44 = null;
        org.joda.time.Days days45 = org.joda.time.Days.daysIn(readableInterval44);
        int int47 = days45.getValue((int) (short) 0);
        org.joda.time.Days days48 = org.joda.time.Days.FIVE;
        org.joda.time.Days days49 = days45.minus(days48);
        org.joda.time.Days days50 = null;
        org.joda.time.Days days51 = days45.minus(days50);
        org.joda.time.Days days53 = days45.minus((-1));
        org.joda.time.Days days54 = days41.plus(days45);
        org.joda.time.ReadableInterval readableInterval55 = null;
        org.joda.time.Days days56 = org.joda.time.Days.daysIn(readableInterval55);
        int int58 = days56.getValue((int) (short) 0);
        org.joda.time.Days days59 = org.joda.time.Days.FIVE;
        org.joda.time.Days days60 = days56.minus(days59);
        org.joda.time.DurationFieldType durationFieldType61 = null;
        int int62 = days59.get(durationFieldType61);
        org.joda.time.DurationFieldType durationFieldType63 = null;
        int int64 = days59.get(durationFieldType63);
        boolean boolean66 = days59.equals((java.lang.Object) 0L);
        org.joda.time.DurationFieldType durationFieldType67 = days59.getFieldType();
        int int68 = days54.get(durationFieldType67);
        int int69 = days33.get(durationFieldType67);
        org.joda.time.Days days71 = org.joda.time.Days.days((int) (byte) 1);
        org.joda.time.Days days73 = days71.multipliedBy((int) (byte) 10);
        boolean boolean74 = days33.equals((java.lang.Object) days71);
        org.joda.time.Days days76 = days33.plus((int) (byte) 1);
        org.junit.Assert.assertNotNull(days1);
        org.junit.Assert.assertNotNull(days3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(days6);
        org.junit.Assert.assertNotNull(days7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(durationFieldType11);
        org.junit.Assert.assertNotNull(days13);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNotNull(days16);
        org.junit.Assert.assertNotNull(days17);
        org.junit.Assert.assertNotNull(days19);
        org.junit.Assert.assertNotNull(days21);
        org.junit.Assert.assertNotNull(durationFieldType22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(days25);
        org.junit.Assert.assertNotNull(days27);
        org.junit.Assert.assertNotNull(days28);
        org.junit.Assert.assertNotNull(mutablePeriod29);
        org.junit.Assert.assertNotNull(periodType30);
        org.junit.Assert.assertNotNull(days31);
        org.junit.Assert.assertNotNull(days33);
        org.junit.Assert.assertNotNull(days35);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0);
        org.junit.Assert.assertNotNull(days38);
        org.junit.Assert.assertNotNull(days39);
        org.junit.Assert.assertNotNull(days41);
        org.junit.Assert.assertNotNull(days43);
        org.junit.Assert.assertNotNull(days45);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 0 + "'", int47 == 0);
        org.junit.Assert.assertNotNull(days48);
        org.junit.Assert.assertNotNull(days49);
        org.junit.Assert.assertNotNull(days51);
        org.junit.Assert.assertNotNull(days53);
        org.junit.Assert.assertNotNull(days54);
        org.junit.Assert.assertNotNull(days56);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 0 + "'", int58 == 0);
        org.junit.Assert.assertNotNull(days59);
        org.junit.Assert.assertNotNull(days60);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 0 + "'", int62 == 0);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 0 + "'", int64 == 0);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(durationFieldType67);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 0 + "'", int68 == 0);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + (-9) + "'", int69 == (-9));
        org.junit.Assert.assertNotNull(days71);
        org.junit.Assert.assertNotNull(days73);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNotNull(days76);
    }

    @Test
    public void test0485() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0485");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Days days1 = org.joda.time.Days.daysIn(readableInterval0);
        int int3 = days1.getValue((int) (short) 0);
        org.joda.time.Days days4 = org.joda.time.Days.FIVE;
        org.joda.time.Days days5 = days1.minus(days4);
        org.joda.time.DurationFieldType durationFieldType6 = null;
        boolean boolean7 = days4.isSupported(durationFieldType6);
        org.joda.time.DurationFieldType durationFieldType9 = days4.getFieldType(0);
        org.joda.time.ReadableInterval readableInterval10 = null;
        org.joda.time.Days days11 = org.joda.time.Days.daysIn(readableInterval10);
        int int13 = days11.getValue((int) (short) 0);
        org.joda.time.Days days14 = org.joda.time.Days.FIVE;
        org.joda.time.Days days15 = days11.minus(days14);
        org.joda.time.Days days16 = null;
        org.joda.time.Days days17 = days11.minus(days16);
        org.joda.time.Days days19 = days11.minus((-1));
        org.joda.time.DurationFieldType durationFieldType20 = days11.getFieldType();
        boolean boolean21 = days4.isGreaterThan(days11);
        org.joda.time.ReadableInterval readableInterval22 = null;
        org.joda.time.Days days23 = org.joda.time.Days.daysIn(readableInterval22);
        org.joda.time.Days days25 = days23.plus((int) (byte) 10);
        org.joda.time.Days days26 = days11.plus(days25);
        org.joda.time.ReadableInterval readableInterval27 = null;
        org.joda.time.Days days28 = org.joda.time.Days.daysIn(readableInterval27);
        int int30 = days28.getValue((int) (short) 0);
        org.joda.time.Days days31 = org.joda.time.Days.FIVE;
        org.joda.time.Days days32 = days28.minus(days31);
        org.joda.time.Days days33 = null;
        org.joda.time.Days days34 = days28.minus(days33);
        org.joda.time.Duration duration35 = days28.toStandardDuration();
        org.joda.time.Days days36 = days26.minus(days28);
        org.joda.time.Duration duration37 = days36.toStandardDuration();
        org.joda.time.PeriodType periodType38 = days36.getPeriodType();
        java.lang.Class<?> wildcardClass39 = periodType38.getClass();
        org.junit.Assert.assertNotNull(days1);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(days4);
        org.junit.Assert.assertNotNull(days5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(durationFieldType9);
        org.junit.Assert.assertNotNull(days11);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(days14);
        org.junit.Assert.assertNotNull(days15);
        org.junit.Assert.assertNotNull(days17);
        org.junit.Assert.assertNotNull(days19);
        org.junit.Assert.assertNotNull(durationFieldType20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(days23);
        org.junit.Assert.assertNotNull(days25);
        org.junit.Assert.assertNotNull(days26);
        org.junit.Assert.assertNotNull(days28);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertNotNull(days31);
        org.junit.Assert.assertNotNull(days32);
        org.junit.Assert.assertNotNull(days34);
        org.junit.Assert.assertNotNull(duration35);
        org.junit.Assert.assertNotNull(days36);
        org.junit.Assert.assertNotNull(duration37);
        org.junit.Assert.assertNotNull(periodType38);
        org.junit.Assert.assertNotNull(wildcardClass39);
    }

    @Test
    public void test0486() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0486");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Days days1 = org.joda.time.Days.daysIn(readableInterval0);
        int int3 = days1.getValue((int) (short) 0);
        org.joda.time.Days days4 = org.joda.time.Days.FIVE;
        org.joda.time.Days days5 = days1.minus(days4);
        org.joda.time.DurationFieldType durationFieldType6 = null;
        boolean boolean7 = days4.isSupported(durationFieldType6);
        org.joda.time.DurationFieldType durationFieldType9 = days4.getFieldType(0);
        org.joda.time.ReadableInterval readableInterval10 = null;
        org.joda.time.Days days11 = org.joda.time.Days.daysIn(readableInterval10);
        int int13 = days11.getValue((int) (short) 0);
        org.joda.time.Days days14 = org.joda.time.Days.FIVE;
        org.joda.time.Days days15 = days11.minus(days14);
        org.joda.time.Days days16 = null;
        org.joda.time.Days days17 = days11.minus(days16);
        org.joda.time.Days days19 = days11.minus((-1));
        org.joda.time.DurationFieldType durationFieldType20 = days11.getFieldType();
        boolean boolean21 = days4.isGreaterThan(days11);
        org.joda.time.ReadableInterval readableInterval22 = null;
        org.joda.time.Days days23 = org.joda.time.Days.daysIn(readableInterval22);
        org.joda.time.Days days25 = days23.plus((int) (byte) 10);
        org.joda.time.Days days26 = days11.plus(days25);
        org.joda.time.ReadableInterval readableInterval27 = null;
        org.joda.time.Days days28 = org.joda.time.Days.daysIn(readableInterval27);
        int int30 = days28.getValue((int) (short) 0);
        org.joda.time.Days days31 = org.joda.time.Days.FIVE;
        org.joda.time.Days days32 = days28.minus(days31);
        org.joda.time.Days days33 = null;
        org.joda.time.Days days34 = days28.minus(days33);
        org.joda.time.Duration duration35 = days28.toStandardDuration();
        org.joda.time.Days days36 = days26.minus(days28);
        org.joda.time.Duration duration37 = days36.toStandardDuration();
        org.joda.time.PeriodType periodType38 = days36.getPeriodType();
        org.joda.time.MutablePeriod mutablePeriod39 = days36.toMutablePeriod();
        org.junit.Assert.assertNotNull(days1);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(days4);
        org.junit.Assert.assertNotNull(days5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(durationFieldType9);
        org.junit.Assert.assertNotNull(days11);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(days14);
        org.junit.Assert.assertNotNull(days15);
        org.junit.Assert.assertNotNull(days17);
        org.junit.Assert.assertNotNull(days19);
        org.junit.Assert.assertNotNull(durationFieldType20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(days23);
        org.junit.Assert.assertNotNull(days25);
        org.junit.Assert.assertNotNull(days26);
        org.junit.Assert.assertNotNull(days28);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertNotNull(days31);
        org.junit.Assert.assertNotNull(days32);
        org.junit.Assert.assertNotNull(days34);
        org.junit.Assert.assertNotNull(duration35);
        org.junit.Assert.assertNotNull(days36);
        org.junit.Assert.assertNotNull(duration37);
        org.junit.Assert.assertNotNull(periodType38);
        org.junit.Assert.assertNotNull(mutablePeriod39);
    }

    @Test
    public void test0487() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0487");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Days days1 = org.joda.time.Days.daysIn(readableInterval0);
        org.joda.time.Days days3 = days1.plus((int) (byte) 10);
        org.joda.time.Days days5 = days3.dividedBy((int) 'a');
        org.joda.time.Days days7 = days3.dividedBy(5);
        org.joda.time.Days days9 = days3.plus((int) (byte) -1);
        org.joda.time.Days days11 = days3.minus((int) (byte) 100);
        org.joda.time.Days days13 = days11.dividedBy((int) (byte) 100);
        org.joda.time.Days days15 = days13.dividedBy((-90));
        java.lang.String str16 = days13.toString();
        org.joda.time.ReadableInterval readableInterval17 = null;
        org.joda.time.Days days18 = org.joda.time.Days.daysIn(readableInterval17);
        int int20 = days18.getValue((int) (short) 0);
        org.joda.time.ReadableInterval readableInterval21 = null;
        org.joda.time.Days days22 = org.joda.time.Days.daysIn(readableInterval21);
        int int24 = days22.getValue((int) (short) 0);
        org.joda.time.Days days25 = org.joda.time.Days.FIVE;
        org.joda.time.Days days26 = days22.minus(days25);
        int int27 = days18.compareTo((org.joda.time.base.BaseSingleFieldPeriod) days25);
        java.lang.String str28 = days18.toString();
        org.joda.time.Days days30 = days18.plus((int) '4');
        org.joda.time.PeriodType periodType31 = days30.getPeriodType();
        int int32 = days30.getDays();
        org.joda.time.Days days34 = days30.minus((int) ' ');
        org.joda.time.ReadableInterval readableInterval35 = null;
        org.joda.time.Days days36 = org.joda.time.Days.daysIn(readableInterval35);
        org.joda.time.Days days38 = days36.plus((int) (byte) 10);
        org.joda.time.Days days40 = days38.dividedBy((int) 'a');
        org.joda.time.Days days42 = days38.dividedBy(5);
        org.joda.time.Days days44 = days38.plus((int) (byte) -1);
        org.joda.time.Days days45 = days30.plus(days38);
        org.joda.time.Days days46 = days45.negated();
        org.joda.time.Days days47 = days13.minus(days46);
        org.joda.time.ReadableInterval readableInterval48 = null;
        org.joda.time.Days days49 = org.joda.time.Days.daysIn(readableInterval48);
        int int51 = days49.getValue((int) (short) 0);
        org.joda.time.Days days52 = org.joda.time.Days.FIVE;
        org.joda.time.Days days53 = days49.minus(days52);
        org.joda.time.Days days54 = null;
        org.joda.time.Days days55 = days49.minus(days54);
        org.joda.time.ReadableInterval readableInterval56 = null;
        org.joda.time.Days days57 = org.joda.time.Days.daysIn(readableInterval56);
        int int59 = days57.getValue((int) (short) 0);
        org.joda.time.Days days60 = org.joda.time.Days.FIVE;
        org.joda.time.Days days61 = days57.minus(days60);
        org.joda.time.DurationFieldType durationFieldType62 = null;
        int int63 = days60.get(durationFieldType62);
        org.joda.time.DurationFieldType durationFieldType64 = null;
        int int65 = days60.get(durationFieldType64);
        boolean boolean67 = days60.equals((java.lang.Object) 0L);
        int int68 = days49.compareTo((org.joda.time.base.BaseSingleFieldPeriod) days60);
        org.joda.time.Days days70 = days49.minus(52);
        org.joda.time.Period period71 = days49.toPeriod();
        org.joda.time.Days days72 = days49.negated();
        org.joda.time.Days days73 = org.joda.time.Days.standardDaysIn((org.joda.time.ReadablePeriod) days49);
        boolean boolean74 = days46.equals((java.lang.Object) days73);
        org.junit.Assert.assertNotNull(days1);
        org.junit.Assert.assertNotNull(days3);
        org.junit.Assert.assertNotNull(days5);
        org.junit.Assert.assertNotNull(days7);
        org.junit.Assert.assertNotNull(days9);
        org.junit.Assert.assertNotNull(days11);
        org.junit.Assert.assertNotNull(days13);
        org.junit.Assert.assertNotNull(days15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "P0D" + "'", str16, "P0D");
        org.junit.Assert.assertNotNull(days18);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertNotNull(days22);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertNotNull(days25);
        org.junit.Assert.assertNotNull(days26);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "P0D" + "'", str28, "P0D");
        org.junit.Assert.assertNotNull(days30);
        org.junit.Assert.assertNotNull(periodType31);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 52 + "'", int32 == 52);
        org.junit.Assert.assertNotNull(days34);
        org.junit.Assert.assertNotNull(days36);
        org.junit.Assert.assertNotNull(days38);
        org.junit.Assert.assertNotNull(days40);
        org.junit.Assert.assertNotNull(days42);
        org.junit.Assert.assertNotNull(days44);
        org.junit.Assert.assertNotNull(days45);
        org.junit.Assert.assertNotNull(days46);
        org.junit.Assert.assertNotNull(days47);
        org.junit.Assert.assertNotNull(days49);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 0 + "'", int51 == 0);
        org.junit.Assert.assertNotNull(days52);
        org.junit.Assert.assertNotNull(days53);
        org.junit.Assert.assertNotNull(days55);
        org.junit.Assert.assertNotNull(days57);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 0 + "'", int59 == 0);
        org.junit.Assert.assertNotNull(days60);
        org.junit.Assert.assertNotNull(days61);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 0 + "'", int63 == 0);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 0 + "'", int65 == 0);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + (-1) + "'", int68 == (-1));
        org.junit.Assert.assertNotNull(days70);
        org.junit.Assert.assertNotNull(period71);
        org.junit.Assert.assertNotNull(days72);
        org.junit.Assert.assertNotNull(days73);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
    }

    @Test
    public void test0488() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0488");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Days days1 = org.joda.time.Days.daysIn(readableInterval0);
        int int3 = days1.getValue((int) (short) 0);
        org.joda.time.Days days4 = org.joda.time.Days.FIVE;
        org.joda.time.Days days5 = days1.minus(days4);
        org.joda.time.DurationFieldType durationFieldType6 = null;
        boolean boolean7 = days4.isSupported(durationFieldType6);
        org.joda.time.DurationFieldType durationFieldType9 = days4.getFieldType(0);
        org.joda.time.Period period10 = days4.toPeriod();
        int int12 = days4.getValue(0);
        org.joda.time.Days days13 = org.joda.time.Days.FOUR;
        org.joda.time.ReadableInterval readableInterval14 = null;
        org.joda.time.Days days15 = org.joda.time.Days.daysIn(readableInterval14);
        int int17 = days15.getValue((int) (short) 0);
        org.joda.time.Days days18 = org.joda.time.Days.FIVE;
        org.joda.time.Days days19 = days15.minus(days18);
        org.joda.time.DurationFieldType durationFieldType20 = null;
        boolean boolean21 = days18.isSupported(durationFieldType20);
        org.joda.time.DurationFieldType durationFieldType23 = days18.getFieldType(0);
        org.joda.time.ReadableInterval readableInterval24 = null;
        org.joda.time.Days days25 = org.joda.time.Days.daysIn(readableInterval24);
        int int27 = days25.getValue((int) (short) 0);
        org.joda.time.Days days28 = org.joda.time.Days.FIVE;
        org.joda.time.Days days29 = days25.minus(days28);
        org.joda.time.Days days30 = null;
        org.joda.time.Days days31 = days25.minus(days30);
        org.joda.time.Days days33 = days25.minus((-1));
        org.joda.time.DurationFieldType durationFieldType34 = days25.getFieldType();
        boolean boolean35 = days18.isGreaterThan(days25);
        org.joda.time.ReadableInterval readableInterval36 = null;
        org.joda.time.Days days37 = org.joda.time.Days.daysIn(readableInterval36);
        org.joda.time.Days days39 = days37.plus((int) (byte) 10);
        org.joda.time.Days days40 = days25.plus(days39);
        org.joda.time.ReadableInterval readableInterval41 = null;
        org.joda.time.Days days42 = org.joda.time.Days.daysIn(readableInterval41);
        int int44 = days42.getValue((int) (short) 0);
        org.joda.time.Days days45 = org.joda.time.Days.FIVE;
        org.joda.time.Days days46 = days42.minus(days45);
        org.joda.time.Days days47 = null;
        org.joda.time.Days days48 = days42.minus(days47);
        org.joda.time.Duration duration49 = days42.toStandardDuration();
        org.joda.time.Days days50 = days40.minus(days42);
        org.joda.time.Days days52 = days42.multipliedBy(5);
        org.joda.time.Days days53 = days13.plus(days42);
        int int54 = days42.size();
        org.joda.time.Days days55 = days4.minus(days42);
        int int56 = days42.size();
        org.junit.Assert.assertNotNull(days1);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(days4);
        org.junit.Assert.assertNotNull(days5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(durationFieldType9);
        org.junit.Assert.assertNotNull(period10);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 5 + "'", int12 == 5);
        org.junit.Assert.assertNotNull(days13);
        org.junit.Assert.assertNotNull(days15);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNotNull(days18);
        org.junit.Assert.assertNotNull(days19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(durationFieldType23);
        org.junit.Assert.assertNotNull(days25);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertNotNull(days28);
        org.junit.Assert.assertNotNull(days29);
        org.junit.Assert.assertNotNull(days31);
        org.junit.Assert.assertNotNull(days33);
        org.junit.Assert.assertNotNull(durationFieldType34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(days37);
        org.junit.Assert.assertNotNull(days39);
        org.junit.Assert.assertNotNull(days40);
        org.junit.Assert.assertNotNull(days42);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 0 + "'", int44 == 0);
        org.junit.Assert.assertNotNull(days45);
        org.junit.Assert.assertNotNull(days46);
        org.junit.Assert.assertNotNull(days48);
        org.junit.Assert.assertNotNull(duration49);
        org.junit.Assert.assertNotNull(days50);
        org.junit.Assert.assertNotNull(days52);
        org.junit.Assert.assertNotNull(days53);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 1 + "'", int54 == 1);
        org.junit.Assert.assertNotNull(days55);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 1 + "'", int56 == 1);
    }

    @Test
    public void test0489() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0489");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Days days1 = org.joda.time.Days.daysIn(readableInterval0);
        int int3 = days1.getValue((int) (short) 0);
        org.joda.time.Days days4 = org.joda.time.Days.FIVE;
        org.joda.time.Days days5 = days1.minus(days4);
        org.joda.time.DurationFieldType durationFieldType6 = null;
        int int7 = days4.get(durationFieldType6);
        org.joda.time.DurationFieldType durationFieldType8 = null;
        int int9 = days4.get(durationFieldType8);
        boolean boolean11 = days4.equals((java.lang.Object) 0L);
        org.joda.time.DurationFieldType durationFieldType12 = days4.getFieldType();
        org.joda.time.Days days13 = days4.negated();
        org.joda.time.ReadableInterval readableInterval14 = null;
        org.joda.time.Days days15 = org.joda.time.Days.daysIn(readableInterval14);
        int int17 = days15.getValue((int) (short) 0);
        org.joda.time.Days days18 = org.joda.time.Days.FIVE;
        org.joda.time.Days days19 = days15.minus(days18);
        org.joda.time.DurationFieldType durationFieldType20 = null;
        int int21 = days18.get(durationFieldType20);
        org.joda.time.DurationFieldType durationFieldType22 = null;
        int int23 = days18.get(durationFieldType22);
        boolean boolean25 = days18.equals((java.lang.Object) 0L);
        int int26 = days18.getDays();
        org.joda.time.Days days27 = days13.minus(days18);
        org.joda.time.Days days29 = org.joda.time.Days.parseDays("P0D");
        org.joda.time.ReadableInterval readableInterval30 = null;
        org.joda.time.Days days31 = org.joda.time.Days.daysIn(readableInterval30);
        org.joda.time.Days days33 = days31.plus((int) (byte) 10);
        org.joda.time.MutablePeriod mutablePeriod34 = days31.toMutablePeriod();
        int int35 = days31.size();
        int int36 = days29.compareTo((org.joda.time.base.BaseSingleFieldPeriod) days31);
        org.joda.time.Days days37 = days18.plus(days31);
        org.joda.time.Days days39 = days18.minus((int) (short) 100);
        int int40 = days18.size();
        org.junit.Assert.assertNotNull(days1);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(days4);
        org.junit.Assert.assertNotNull(days5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(durationFieldType12);
        org.junit.Assert.assertNotNull(days13);
        org.junit.Assert.assertNotNull(days15);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNotNull(days18);
        org.junit.Assert.assertNotNull(days19);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 5 + "'", int26 == 5);
        org.junit.Assert.assertNotNull(days27);
        org.junit.Assert.assertNotNull(days29);
        org.junit.Assert.assertNotNull(days31);
        org.junit.Assert.assertNotNull(days33);
        org.junit.Assert.assertNotNull(mutablePeriod34);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 1 + "'", int35 == 1);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertNotNull(days37);
        org.junit.Assert.assertNotNull(days39);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 1 + "'", int40 == 1);
    }

    @Test
    public void test0490() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0490");
        org.joda.time.Days days1 = org.joda.time.Days.parseDays("P0D");
        org.joda.time.ReadableInterval readableInterval2 = null;
        org.joda.time.Days days3 = org.joda.time.Days.daysIn(readableInterval2);
        org.joda.time.Days days5 = days3.plus((int) (byte) 10);
        org.joda.time.MutablePeriod mutablePeriod6 = days3.toMutablePeriod();
        int int7 = days3.size();
        int int8 = days1.compareTo((org.joda.time.base.BaseSingleFieldPeriod) days3);
        org.joda.time.Days days10 = org.joda.time.Days.days((int) 'a');
        org.joda.time.Days days11 = org.joda.time.Days.SIX;
        org.joda.time.Days days13 = days11.plus(100);
        org.joda.time.ReadableInterval readableInterval14 = null;
        org.joda.time.Days days15 = org.joda.time.Days.daysIn(readableInterval14);
        int int17 = days15.getValue((int) (short) 0);
        org.joda.time.Days days18 = org.joda.time.Days.FIVE;
        org.joda.time.Days days19 = days15.minus(days18);
        org.joda.time.Days days20 = null;
        org.joda.time.Days days21 = days15.minus(days20);
        org.joda.time.Days days23 = days15.minus((-1));
        org.joda.time.DurationFieldType durationFieldType24 = days15.getFieldType();
        int int25 = days11.get(durationFieldType24);
        int int26 = days10.get(durationFieldType24);
        org.joda.time.Days days28 = org.joda.time.Days.days((-1));
        boolean boolean29 = days10.isGreaterThan(days28);
        org.joda.time.Days days30 = null;
        boolean boolean31 = days10.isLessThan(days30);
        org.joda.time.Days days32 = days1.minus(days10);
        org.joda.time.Days days33 = days10.negated();
        org.joda.time.MutablePeriod mutablePeriod34 = days10.toMutablePeriod();
        org.junit.Assert.assertNotNull(days1);
        org.junit.Assert.assertNotNull(days3);
        org.junit.Assert.assertNotNull(days5);
        org.junit.Assert.assertNotNull(mutablePeriod6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNotNull(days10);
        org.junit.Assert.assertNotNull(days11);
        org.junit.Assert.assertNotNull(days13);
        org.junit.Assert.assertNotNull(days15);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNotNull(days18);
        org.junit.Assert.assertNotNull(days19);
        org.junit.Assert.assertNotNull(days21);
        org.junit.Assert.assertNotNull(days23);
        org.junit.Assert.assertNotNull(durationFieldType24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 6 + "'", int25 == 6);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 97 + "'", int26 == 97);
        org.junit.Assert.assertNotNull(days28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(days32);
        org.junit.Assert.assertNotNull(days33);
        org.junit.Assert.assertNotNull(mutablePeriod34);
    }

    @Test
    public void test0491() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0491");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Days days1 = org.joda.time.Days.daysIn(readableInterval0);
        int int3 = days1.getValue((int) (short) 0);
        org.joda.time.Days days4 = org.joda.time.Days.FIVE;
        org.joda.time.Days days5 = days1.minus(days4);
        org.joda.time.Days days6 = null;
        org.joda.time.Days days7 = days1.minus(days6);
        org.joda.time.ReadableInterval readableInterval8 = null;
        org.joda.time.Days days9 = org.joda.time.Days.daysIn(readableInterval8);
        org.joda.time.ReadableInterval readableInterval10 = null;
        org.joda.time.Days days11 = org.joda.time.Days.daysIn(readableInterval10);
        int int13 = days11.getValue((int) (short) 0);
        org.joda.time.Days days14 = org.joda.time.Days.FIVE;
        org.joda.time.Days days15 = days11.minus(days14);
        org.joda.time.DurationFieldType durationFieldType16 = null;
        boolean boolean17 = days14.isSupported(durationFieldType16);
        org.joda.time.DurationFieldType durationFieldType19 = days14.getFieldType(0);
        int int20 = days9.get(durationFieldType19);
        org.joda.time.PeriodType periodType21 = days9.getPeriodType();
        org.joda.time.Days days22 = days1.plus(days9);
        org.joda.time.ReadableInterval readableInterval23 = null;
        org.joda.time.Days days24 = org.joda.time.Days.daysIn(readableInterval23);
        int int26 = days24.getValue((int) (short) 0);
        org.joda.time.Days days27 = org.joda.time.Days.FIVE;
        org.joda.time.Days days28 = days24.minus(days27);
        org.joda.time.Days days29 = null;
        org.joda.time.Days days30 = days24.minus(days29);
        org.joda.time.Days days32 = days30.minus(100);
        org.joda.time.ReadableInterval readableInterval33 = null;
        org.joda.time.Days days34 = org.joda.time.Days.daysIn(readableInterval33);
        int int36 = days34.getValue((int) (short) 0);
        org.joda.time.Days days37 = org.joda.time.Days.FIVE;
        org.joda.time.Days days38 = days34.minus(days37);
        org.joda.time.Days days39 = null;
        org.joda.time.Days days40 = days34.minus(days39);
        org.joda.time.Days days42 = days34.minus((-1));
        org.joda.time.Days days43 = days30.plus(days34);
        boolean boolean44 = days22.equals((java.lang.Object) days34);
        int int45 = days34.size();
        org.joda.time.Days days46 = days34.negated();
        org.junit.Assert.assertNotNull(days1);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(days4);
        org.junit.Assert.assertNotNull(days5);
        org.junit.Assert.assertNotNull(days7);
        org.junit.Assert.assertNotNull(days9);
        org.junit.Assert.assertNotNull(days11);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(days14);
        org.junit.Assert.assertNotNull(days15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(durationFieldType19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertNotNull(periodType21);
        org.junit.Assert.assertNotNull(days22);
        org.junit.Assert.assertNotNull(days24);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertNotNull(days27);
        org.junit.Assert.assertNotNull(days28);
        org.junit.Assert.assertNotNull(days30);
        org.junit.Assert.assertNotNull(days32);
        org.junit.Assert.assertNotNull(days34);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertNotNull(days37);
        org.junit.Assert.assertNotNull(days38);
        org.junit.Assert.assertNotNull(days40);
        org.junit.Assert.assertNotNull(days42);
        org.junit.Assert.assertNotNull(days43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 1 + "'", int45 == 1);
        org.junit.Assert.assertNotNull(days46);
    }

    @Test
    public void test0492() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0492");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Days days1 = org.joda.time.Days.daysIn(readableInterval0);
        org.joda.time.Days days3 = days1.plus((int) (byte) 10);
        org.joda.time.Days days5 = days3.dividedBy((int) 'a');
        org.joda.time.Days days7 = days3.dividedBy(5);
        org.joda.time.Days days9 = days3.plus((int) (byte) -1);
        org.joda.time.Days days11 = days3.dividedBy((int) (byte) -1);
        org.joda.time.MutablePeriod mutablePeriod12 = days11.toMutablePeriod();
        int int13 = days11.getDays();
        org.joda.time.Duration duration14 = days11.toStandardDuration();
        org.junit.Assert.assertNotNull(days1);
        org.junit.Assert.assertNotNull(days3);
        org.junit.Assert.assertNotNull(days5);
        org.junit.Assert.assertNotNull(days7);
        org.junit.Assert.assertNotNull(days9);
        org.junit.Assert.assertNotNull(days11);
        org.junit.Assert.assertNotNull(mutablePeriod12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-10) + "'", int13 == (-10));
        org.junit.Assert.assertNotNull(duration14);
    }

    @Test
    public void test0493() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0493");
        org.joda.time.Days days1 = org.joda.time.Days.days((int) (byte) -1);
        org.joda.time.ReadableInterval readableInterval2 = null;
        org.joda.time.Days days3 = org.joda.time.Days.daysIn(readableInterval2);
        int int5 = days3.getValue((int) (short) 0);
        org.joda.time.ReadableInterval readableInterval6 = null;
        org.joda.time.Days days7 = org.joda.time.Days.daysIn(readableInterval6);
        int int9 = days7.getValue((int) (short) 0);
        org.joda.time.Days days10 = org.joda.time.Days.FIVE;
        org.joda.time.Days days11 = days7.minus(days10);
        int int12 = days3.compareTo((org.joda.time.base.BaseSingleFieldPeriod) days10);
        java.lang.String str13 = days3.toString();
        org.joda.time.Days days15 = days3.plus((int) '4');
        org.joda.time.ReadableInterval readableInterval16 = null;
        org.joda.time.Days days17 = org.joda.time.Days.daysIn(readableInterval16);
        int int19 = days17.getValue((int) (short) 0);
        org.joda.time.Days days20 = org.joda.time.Days.FIVE;
        org.joda.time.Days days21 = days17.minus(days20);
        org.joda.time.DurationFieldType durationFieldType22 = null;
        boolean boolean23 = days20.isSupported(durationFieldType22);
        org.joda.time.DurationFieldType durationFieldType25 = days20.getFieldType(0);
        org.joda.time.ReadableInterval readableInterval26 = null;
        org.joda.time.Days days27 = org.joda.time.Days.daysIn(readableInterval26);
        int int29 = days27.getValue((int) (short) 0);
        org.joda.time.Days days30 = org.joda.time.Days.FIVE;
        org.joda.time.Days days31 = days27.minus(days30);
        org.joda.time.Days days32 = null;
        org.joda.time.Days days33 = days27.minus(days32);
        org.joda.time.Days days35 = days27.minus((-1));
        org.joda.time.DurationFieldType durationFieldType36 = days27.getFieldType();
        boolean boolean37 = days20.isGreaterThan(days27);
        org.joda.time.ReadableInterval readableInterval38 = null;
        org.joda.time.Days days39 = org.joda.time.Days.daysIn(readableInterval38);
        org.joda.time.Days days41 = days39.plus((int) (byte) 10);
        org.joda.time.Days days42 = days27.plus(days41);
        org.joda.time.ReadableInterval readableInterval43 = null;
        org.joda.time.Days days44 = org.joda.time.Days.daysIn(readableInterval43);
        int int46 = days44.getValue((int) (short) 0);
        org.joda.time.Days days47 = org.joda.time.Days.FIVE;
        org.joda.time.Days days48 = days44.minus(days47);
        org.joda.time.Days days49 = null;
        org.joda.time.Days days50 = days44.minus(days49);
        org.joda.time.Duration duration51 = days44.toStandardDuration();
        org.joda.time.Days days52 = days42.minus(days44);
        org.joda.time.Duration duration53 = days52.toStandardDuration();
        org.joda.time.PeriodType periodType54 = days52.getPeriodType();
        org.joda.time.Days days55 = days15.plus(days52);
        org.joda.time.Days days56 = org.joda.time.Days.SIX;
        org.joda.time.Days days58 = days56.plus(100);
        org.joda.time.ReadableInterval readableInterval59 = null;
        org.joda.time.Days days60 = org.joda.time.Days.daysIn(readableInterval59);
        int int62 = days60.getValue((int) (short) 0);
        org.joda.time.Days days63 = org.joda.time.Days.FIVE;
        org.joda.time.Days days64 = days60.minus(days63);
        org.joda.time.Days days65 = null;
        org.joda.time.Days days66 = days60.minus(days65);
        org.joda.time.Days days68 = days60.minus((-1));
        org.joda.time.DurationFieldType durationFieldType69 = days60.getFieldType();
        int int70 = days56.get(durationFieldType69);
        int int71 = days52.get(durationFieldType69);
        boolean boolean72 = days1.isLessThan(days52);
        org.junit.Assert.assertNotNull(days1);
        org.junit.Assert.assertNotNull(days3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(days7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNotNull(days10);
        org.junit.Assert.assertNotNull(days11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "P0D" + "'", str13, "P0D");
        org.junit.Assert.assertNotNull(days15);
        org.junit.Assert.assertNotNull(days17);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertNotNull(days20);
        org.junit.Assert.assertNotNull(days21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(durationFieldType25);
        org.junit.Assert.assertNotNull(days27);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertNotNull(days30);
        org.junit.Assert.assertNotNull(days31);
        org.junit.Assert.assertNotNull(days33);
        org.junit.Assert.assertNotNull(days35);
        org.junit.Assert.assertNotNull(durationFieldType36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(days39);
        org.junit.Assert.assertNotNull(days41);
        org.junit.Assert.assertNotNull(days42);
        org.junit.Assert.assertNotNull(days44);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 0 + "'", int46 == 0);
        org.junit.Assert.assertNotNull(days47);
        org.junit.Assert.assertNotNull(days48);
        org.junit.Assert.assertNotNull(days50);
        org.junit.Assert.assertNotNull(duration51);
        org.junit.Assert.assertNotNull(days52);
        org.junit.Assert.assertNotNull(duration53);
        org.junit.Assert.assertNotNull(periodType54);
        org.junit.Assert.assertNotNull(days55);
        org.junit.Assert.assertNotNull(days56);
        org.junit.Assert.assertNotNull(days58);
        org.junit.Assert.assertNotNull(days60);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 0 + "'", int62 == 0);
        org.junit.Assert.assertNotNull(days63);
        org.junit.Assert.assertNotNull(days64);
        org.junit.Assert.assertNotNull(days66);
        org.junit.Assert.assertNotNull(days68);
        org.junit.Assert.assertNotNull(durationFieldType69);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 6 + "'", int70 == 6);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 10 + "'", int71 == 10);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
    }

    @Test
    public void test0494() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0494");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Days days1 = org.joda.time.Days.daysIn(readableInterval0);
        int int3 = days1.getValue((int) (short) 0);
        org.joda.time.Days days4 = org.joda.time.Days.FIVE;
        org.joda.time.Days days5 = days1.minus(days4);
        org.joda.time.Days days6 = org.joda.time.Days.FIVE;
        org.joda.time.ReadableInterval readableInterval7 = null;
        org.joda.time.Days days8 = org.joda.time.Days.daysIn(readableInterval7);
        int int10 = days8.getValue((int) (short) 0);
        org.joda.time.ReadableInterval readableInterval11 = null;
        org.joda.time.Days days12 = org.joda.time.Days.daysIn(readableInterval11);
        int int14 = days12.getValue((int) (short) 0);
        org.joda.time.Days days15 = org.joda.time.Days.FIVE;
        org.joda.time.Days days16 = days12.minus(days15);
        int int17 = days8.compareTo((org.joda.time.base.BaseSingleFieldPeriod) days15);
        org.joda.time.ReadableInterval readableInterval18 = null;
        org.joda.time.Days days19 = org.joda.time.Days.daysIn(readableInterval18);
        int int21 = days19.getValue((int) (short) 0);
        org.joda.time.Days days22 = org.joda.time.Days.FIVE;
        org.joda.time.Days days23 = days19.minus(days22);
        org.joda.time.DurationFieldType durationFieldType24 = null;
        boolean boolean25 = days22.isSupported(durationFieldType24);
        org.joda.time.DurationFieldType durationFieldType27 = days22.getFieldType(0);
        int int28 = days8.get(durationFieldType27);
        boolean boolean29 = days6.isSupported(durationFieldType27);
        org.joda.time.Days days30 = days4.plus(days6);
        org.joda.time.Period period31 = days4.toPeriod();
        org.joda.time.ReadableInterval readableInterval32 = null;
        org.joda.time.Days days33 = org.joda.time.Days.daysIn(readableInterval32);
        org.joda.time.Days days35 = days33.plus((int) (byte) 10);
        int int36 = days35.getDays();
        int int37 = days35.getDays();
        org.joda.time.Days days38 = org.joda.time.Days.FIVE;
        org.joda.time.ReadableInterval readableInterval39 = null;
        org.joda.time.Days days40 = org.joda.time.Days.daysIn(readableInterval39);
        int int42 = days40.getValue((int) (short) 0);
        org.joda.time.ReadableInterval readableInterval43 = null;
        org.joda.time.Days days44 = org.joda.time.Days.daysIn(readableInterval43);
        int int46 = days44.getValue((int) (short) 0);
        org.joda.time.Days days47 = org.joda.time.Days.FIVE;
        org.joda.time.Days days48 = days44.minus(days47);
        int int49 = days40.compareTo((org.joda.time.base.BaseSingleFieldPeriod) days47);
        org.joda.time.ReadableInterval readableInterval50 = null;
        org.joda.time.Days days51 = org.joda.time.Days.daysIn(readableInterval50);
        int int53 = days51.getValue((int) (short) 0);
        org.joda.time.Days days54 = org.joda.time.Days.FIVE;
        org.joda.time.Days days55 = days51.minus(days54);
        org.joda.time.DurationFieldType durationFieldType56 = null;
        boolean boolean57 = days54.isSupported(durationFieldType56);
        org.joda.time.DurationFieldType durationFieldType59 = days54.getFieldType(0);
        int int60 = days40.get(durationFieldType59);
        boolean boolean61 = days38.isSupported(durationFieldType59);
        int int62 = days35.get(durationFieldType59);
        boolean boolean63 = days4.isSupported(durationFieldType59);
        org.joda.time.Days days64 = days4.negated();
        org.junit.Assert.assertNotNull(days1);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(days4);
        org.junit.Assert.assertNotNull(days5);
        org.junit.Assert.assertNotNull(days6);
        org.junit.Assert.assertNotNull(days8);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(days12);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNotNull(days15);
        org.junit.Assert.assertNotNull(days16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertNotNull(days19);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertNotNull(days22);
        org.junit.Assert.assertNotNull(days23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(durationFieldType27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(days30);
        org.junit.Assert.assertNotNull(period31);
        org.junit.Assert.assertNotNull(days33);
        org.junit.Assert.assertNotNull(days35);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 10 + "'", int36 == 10);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 10 + "'", int37 == 10);
        org.junit.Assert.assertNotNull(days38);
        org.junit.Assert.assertNotNull(days40);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0);
        org.junit.Assert.assertNotNull(days44);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 0 + "'", int46 == 0);
        org.junit.Assert.assertNotNull(days47);
        org.junit.Assert.assertNotNull(days48);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + (-1) + "'", int49 == (-1));
        org.junit.Assert.assertNotNull(days51);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 0 + "'", int53 == 0);
        org.junit.Assert.assertNotNull(days54);
        org.junit.Assert.assertNotNull(days55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(durationFieldType59);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 0 + "'", int60 == 0);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 10 + "'", int62 == 10);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(days64);
    }

    @Test
    public void test0495() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0495");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Days days1 = org.joda.time.Days.daysIn(readableInterval0);
        int int3 = days1.getValue((int) (short) 0);
        org.joda.time.ReadableInterval readableInterval4 = null;
        org.joda.time.Days days5 = org.joda.time.Days.daysIn(readableInterval4);
        int int7 = days5.getValue((int) (short) 0);
        org.joda.time.Days days8 = org.joda.time.Days.FIVE;
        org.joda.time.Days days9 = days5.minus(days8);
        int int10 = days1.compareTo((org.joda.time.base.BaseSingleFieldPeriod) days8);
        java.lang.String str11 = days1.toString();
        org.joda.time.Days days13 = days1.plus((int) '4');
        org.joda.time.PeriodType periodType14 = days13.getPeriodType();
        int int15 = days13.getDays();
        org.joda.time.Days days17 = days13.minus((int) ' ');
        org.joda.time.ReadableInterval readableInterval18 = null;
        org.joda.time.Days days19 = org.joda.time.Days.daysIn(readableInterval18);
        org.joda.time.Days days21 = days19.plus((int) (byte) 10);
        org.joda.time.Days days23 = days21.dividedBy((int) 'a');
        org.joda.time.Days days25 = days21.dividedBy(5);
        org.joda.time.Days days27 = days21.plus((int) (byte) -1);
        org.joda.time.Days days28 = days13.plus(days21);
        org.joda.time.DurationFieldType durationFieldType29 = days28.getFieldType();
        org.joda.time.ReadableInterval readableInterval30 = null;
        org.joda.time.Days days31 = org.joda.time.Days.daysIn(readableInterval30);
        int int33 = days31.getValue((int) (short) 0);
        org.joda.time.ReadableInterval readableInterval34 = null;
        org.joda.time.Days days35 = org.joda.time.Days.daysIn(readableInterval34);
        int int37 = days35.getValue((int) (short) 0);
        org.joda.time.Days days38 = org.joda.time.Days.FIVE;
        org.joda.time.Days days39 = days35.minus(days38);
        int int40 = days31.compareTo((org.joda.time.base.BaseSingleFieldPeriod) days38);
        org.joda.time.MutablePeriod mutablePeriod41 = days38.toMutablePeriod();
        org.joda.time.Days days42 = days38.negated();
        org.joda.time.PeriodType periodType43 = days42.getPeriodType();
        int int44 = days28.compareTo((org.joda.time.base.BaseSingleFieldPeriod) days42);
        org.joda.time.Days days46 = days42.multipliedBy(1);
        org.joda.time.Period period47 = days42.toPeriod();
        org.junit.Assert.assertNotNull(days1);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(days5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(days8);
        org.junit.Assert.assertNotNull(days9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "P0D" + "'", str11, "P0D");
        org.junit.Assert.assertNotNull(days13);
        org.junit.Assert.assertNotNull(periodType14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 52 + "'", int15 == 52);
        org.junit.Assert.assertNotNull(days17);
        org.junit.Assert.assertNotNull(days19);
        org.junit.Assert.assertNotNull(days21);
        org.junit.Assert.assertNotNull(days23);
        org.junit.Assert.assertNotNull(days25);
        org.junit.Assert.assertNotNull(days27);
        org.junit.Assert.assertNotNull(days28);
        org.junit.Assert.assertNotNull(durationFieldType29);
        org.junit.Assert.assertNotNull(days31);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertNotNull(days35);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0);
        org.junit.Assert.assertNotNull(days38);
        org.junit.Assert.assertNotNull(days39);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + (-1) + "'", int40 == (-1));
        org.junit.Assert.assertNotNull(mutablePeriod41);
        org.junit.Assert.assertNotNull(days42);
        org.junit.Assert.assertNotNull(periodType43);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 1 + "'", int44 == 1);
        org.junit.Assert.assertNotNull(days46);
        org.junit.Assert.assertNotNull(period47);
    }

    @Test
    public void test0496() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0496");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Days days1 = org.joda.time.Days.daysIn(readableInterval0);
        int int3 = days1.getValue((int) (short) 0);
        org.joda.time.ReadableInterval readableInterval4 = null;
        org.joda.time.Days days5 = org.joda.time.Days.daysIn(readableInterval4);
        int int7 = days5.getValue((int) (short) 0);
        org.joda.time.Days days8 = org.joda.time.Days.FIVE;
        org.joda.time.Days days9 = days5.minus(days8);
        int int10 = days1.compareTo((org.joda.time.base.BaseSingleFieldPeriod) days8);
        java.lang.String str11 = days1.toString();
        org.joda.time.Days days12 = null;
        boolean boolean13 = days1.isGreaterThan(days12);
        org.joda.time.Period period14 = days1.toPeriod();
        org.joda.time.Duration duration15 = days1.toStandardDuration();
        int int16 = days1.size();
        org.joda.time.Days days17 = org.joda.time.Days.THREE;
        org.joda.time.ReadableInterval readableInterval18 = null;
        org.joda.time.Days days19 = org.joda.time.Days.daysIn(readableInterval18);
        org.joda.time.ReadableInterval readableInterval20 = null;
        org.joda.time.Days days21 = org.joda.time.Days.daysIn(readableInterval20);
        int int23 = days21.getValue((int) (short) 0);
        org.joda.time.Days days24 = org.joda.time.Days.FIVE;
        org.joda.time.Days days25 = days21.minus(days24);
        org.joda.time.DurationFieldType durationFieldType26 = null;
        boolean boolean27 = days24.isSupported(durationFieldType26);
        org.joda.time.DurationFieldType durationFieldType29 = days24.getFieldType(0);
        int int30 = days19.get(durationFieldType29);
        org.joda.time.ReadableInterval readableInterval31 = null;
        org.joda.time.Days days32 = org.joda.time.Days.daysIn(readableInterval31);
        int int34 = days32.getValue((int) (short) 0);
        org.joda.time.Days days35 = org.joda.time.Days.FIVE;
        org.joda.time.Days days36 = days32.minus(days35);
        org.joda.time.DurationFieldType durationFieldType37 = null;
        int int38 = days35.get(durationFieldType37);
        org.joda.time.DurationFieldType durationFieldType39 = null;
        int int40 = days35.get(durationFieldType39);
        boolean boolean42 = days35.equals((java.lang.Object) 0L);
        boolean boolean43 = days19.isGreaterThan(days35);
        org.joda.time.ReadableInterval readableInterval44 = null;
        org.joda.time.Days days45 = org.joda.time.Days.daysIn(readableInterval44);
        int int47 = days45.getValue((int) (short) 0);
        org.joda.time.Days days48 = org.joda.time.Days.FIVE;
        org.joda.time.Days days49 = days45.minus(days48);
        org.joda.time.DurationFieldType durationFieldType50 = null;
        int int51 = days48.get(durationFieldType50);
        org.joda.time.DurationFieldType durationFieldType52 = null;
        int int53 = days48.get(durationFieldType52);
        boolean boolean55 = days48.equals((java.lang.Object) 0L);
        org.joda.time.Period period56 = days48.toPeriod();
        org.joda.time.Days days57 = days19.plus(days48);
        boolean boolean58 = days17.isGreaterThan(days57);
        org.joda.time.ReadableInterval readableInterval59 = null;
        org.joda.time.Days days60 = org.joda.time.Days.daysIn(readableInterval59);
        int int62 = days60.getValue((int) (short) 0);
        org.joda.time.Days days63 = org.joda.time.Days.FIVE;
        org.joda.time.Days days64 = days60.minus(days63);
        org.joda.time.Days days65 = null;
        org.joda.time.Days days66 = days60.minus(days65);
        boolean boolean67 = days17.equals((java.lang.Object) days66);
        org.joda.time.Days days68 = days17.negated();
        int int69 = days17.size();
        boolean boolean70 = days1.isLessThan(days17);
        org.joda.time.ReadableInterval readableInterval71 = null;
        org.joda.time.Days days72 = org.joda.time.Days.daysIn(readableInterval71);
        int int74 = days72.getValue((int) (short) 0);
        org.joda.time.Days days75 = org.joda.time.Days.FIVE;
        org.joda.time.Days days76 = days72.minus(days75);
        boolean boolean77 = days1.isGreaterThan(days75);
        java.lang.Class<?> wildcardClass78 = days1.getClass();
        org.junit.Assert.assertNotNull(days1);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(days5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(days8);
        org.junit.Assert.assertNotNull(days9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "P0D" + "'", str11, "P0D");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(period14);
        org.junit.Assert.assertNotNull(duration15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 1 + "'", int16 == 1);
        org.junit.Assert.assertNotNull(days17);
        org.junit.Assert.assertNotNull(days19);
        org.junit.Assert.assertNotNull(days21);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertNotNull(days24);
        org.junit.Assert.assertNotNull(days25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(durationFieldType29);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertNotNull(days32);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertNotNull(days35);
        org.junit.Assert.assertNotNull(days36);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 0 + "'", int38 == 0);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(days45);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 0 + "'", int47 == 0);
        org.junit.Assert.assertNotNull(days48);
        org.junit.Assert.assertNotNull(days49);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 0 + "'", int51 == 0);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 0 + "'", int53 == 0);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(period56);
        org.junit.Assert.assertNotNull(days57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(days60);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 0 + "'", int62 == 0);
        org.junit.Assert.assertNotNull(days63);
        org.junit.Assert.assertNotNull(days64);
        org.junit.Assert.assertNotNull(days66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(days68);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 1 + "'", int69 == 1);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertNotNull(days72);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 0 + "'", int74 == 0);
        org.junit.Assert.assertNotNull(days75);
        org.junit.Assert.assertNotNull(days76);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertNotNull(wildcardClass78);
    }

    @Test
    public void test0497() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0497");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Days days1 = org.joda.time.Days.daysIn(readableInterval0);
        org.joda.time.Days days3 = days1.plus((int) (byte) 10);
        org.joda.time.Days days5 = days3.dividedBy((int) 'a');
        org.joda.time.Days days7 = days3.dividedBy(5);
        org.joda.time.Days days8 = org.joda.time.Days.standardDaysIn((org.joda.time.ReadablePeriod) days3);
        int int9 = days8.getDays();
        org.joda.time.Days days11 = days8.minus((int) 'a');
        org.joda.time.ReadableInterval readableInterval12 = null;
        org.joda.time.Days days13 = org.joda.time.Days.daysIn(readableInterval12);
        org.joda.time.ReadableInterval readableInterval14 = null;
        org.joda.time.Days days15 = org.joda.time.Days.daysIn(readableInterval14);
        int int17 = days15.getValue((int) (short) 0);
        org.joda.time.Days days18 = org.joda.time.Days.FIVE;
        org.joda.time.Days days19 = days15.minus(days18);
        org.joda.time.DurationFieldType durationFieldType20 = null;
        boolean boolean21 = days18.isSupported(durationFieldType20);
        org.joda.time.DurationFieldType durationFieldType23 = days18.getFieldType(0);
        int int24 = days13.get(durationFieldType23);
        org.joda.time.PeriodType periodType25 = days13.getPeriodType();
        org.joda.time.Days days27 = days13.multipliedBy((int) (short) -1);
        int int28 = days13.size();
        boolean boolean29 = days11.equals((java.lang.Object) int28);
        org.joda.time.Period period30 = days11.toPeriod();
        org.junit.Assert.assertNotNull(days1);
        org.junit.Assert.assertNotNull(days3);
        org.junit.Assert.assertNotNull(days5);
        org.junit.Assert.assertNotNull(days7);
        org.junit.Assert.assertNotNull(days8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 10 + "'", int9 == 10);
        org.junit.Assert.assertNotNull(days11);
        org.junit.Assert.assertNotNull(days13);
        org.junit.Assert.assertNotNull(days15);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNotNull(days18);
        org.junit.Assert.assertNotNull(days19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(durationFieldType23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertNotNull(periodType25);
        org.junit.Assert.assertNotNull(days27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 1 + "'", int28 == 1);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(period30);
    }

    @Test
    public void test0498() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0498");
        org.joda.time.Days days0 = org.joda.time.Days.FIVE;
        org.joda.time.ReadableInterval readableInterval1 = null;
        org.joda.time.Days days2 = org.joda.time.Days.daysIn(readableInterval1);
        org.joda.time.Days days4 = days2.plus((int) (byte) 10);
        org.joda.time.DurationFieldType durationFieldType5 = days4.getFieldType();
        org.joda.time.Days days7 = days4.plus(0);
        org.joda.time.ReadableInterval readableInterval8 = null;
        org.joda.time.Days days9 = org.joda.time.Days.daysIn(readableInterval8);
        int int11 = days9.getValue((int) (short) 0);
        org.joda.time.Days days12 = org.joda.time.Days.FIVE;
        org.joda.time.Days days13 = days9.minus(days12);
        org.joda.time.DurationFieldType durationFieldType14 = null;
        boolean boolean15 = days12.isSupported(durationFieldType14);
        org.joda.time.DurationFieldType durationFieldType17 = days12.getFieldType(0);
        org.joda.time.ReadableInterval readableInterval18 = null;
        org.joda.time.Days days19 = org.joda.time.Days.daysIn(readableInterval18);
        int int21 = days19.getValue((int) (short) 0);
        org.joda.time.Days days22 = org.joda.time.Days.FIVE;
        org.joda.time.Days days23 = days19.minus(days22);
        org.joda.time.Days days24 = null;
        org.joda.time.Days days25 = days19.minus(days24);
        org.joda.time.Days days27 = days19.minus((-1));
        org.joda.time.DurationFieldType durationFieldType28 = days19.getFieldType();
        boolean boolean29 = days12.isGreaterThan(days19);
        org.joda.time.ReadableInterval readableInterval30 = null;
        org.joda.time.Days days31 = org.joda.time.Days.daysIn(readableInterval30);
        org.joda.time.Days days33 = days31.plus((int) (byte) 10);
        org.joda.time.Days days34 = days19.plus(days33);
        int int35 = days7.compareTo((org.joda.time.base.BaseSingleFieldPeriod) days19);
        boolean boolean36 = days0.equals((java.lang.Object) days7);
        org.joda.time.Days days38 = days7.minus((int) (byte) -1);
        // The following exception was thrown during execution in test generation
        try {
            int int40 = days7.getValue((int) (short) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 10");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(days0);
        org.junit.Assert.assertNotNull(days2);
        org.junit.Assert.assertNotNull(days4);
        org.junit.Assert.assertNotNull(durationFieldType5);
        org.junit.Assert.assertNotNull(days7);
        org.junit.Assert.assertNotNull(days9);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNotNull(days12);
        org.junit.Assert.assertNotNull(days13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(durationFieldType17);
        org.junit.Assert.assertNotNull(days19);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertNotNull(days22);
        org.junit.Assert.assertNotNull(days23);
        org.junit.Assert.assertNotNull(days25);
        org.junit.Assert.assertNotNull(days27);
        org.junit.Assert.assertNotNull(durationFieldType28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(days31);
        org.junit.Assert.assertNotNull(days33);
        org.junit.Assert.assertNotNull(days34);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 1 + "'", int35 == 1);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(days38);
    }

    @Test
    public void test0499() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0499");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Days days1 = org.joda.time.Days.daysIn(readableInterval0);
        int int3 = days1.getValue((int) (short) 0);
        org.joda.time.Days days4 = org.joda.time.Days.FIVE;
        org.joda.time.Days days5 = days1.minus(days4);
        org.joda.time.DurationFieldType durationFieldType6 = null;
        int int7 = days4.get(durationFieldType6);
        org.joda.time.DurationFieldType durationFieldType8 = null;
        int int9 = days4.get(durationFieldType8);
        boolean boolean11 = days4.equals((java.lang.Object) false);
        org.joda.time.Days days12 = days4.negated();
        org.joda.time.Days days13 = days12.negated();
        org.junit.Assert.assertNotNull(days1);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(days4);
        org.junit.Assert.assertNotNull(days5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(days12);
        org.junit.Assert.assertNotNull(days13);
    }

    @Test
    public void test0500() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0500");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Days days1 = org.joda.time.Days.daysIn(readableInterval0);
        org.joda.time.ReadableInterval readableInterval2 = null;
        org.joda.time.Days days3 = org.joda.time.Days.daysIn(readableInterval2);
        int int5 = days3.getValue((int) (short) 0);
        org.joda.time.Days days6 = org.joda.time.Days.FIVE;
        org.joda.time.Days days7 = days3.minus(days6);
        org.joda.time.DurationFieldType durationFieldType8 = null;
        boolean boolean9 = days6.isSupported(durationFieldType8);
        org.joda.time.DurationFieldType durationFieldType11 = days6.getFieldType(0);
        int int12 = days1.get(durationFieldType11);
        org.joda.time.ReadableInterval readableInterval13 = null;
        org.joda.time.Days days14 = org.joda.time.Days.daysIn(readableInterval13);
        int int16 = days14.getValue((int) (short) 0);
        org.joda.time.Days days17 = org.joda.time.Days.FIVE;
        org.joda.time.Days days18 = days14.minus(days17);
        org.joda.time.DurationFieldType durationFieldType19 = null;
        int int20 = days17.get(durationFieldType19);
        org.joda.time.DurationFieldType durationFieldType21 = null;
        int int22 = days17.get(durationFieldType21);
        boolean boolean24 = days17.equals((java.lang.Object) 0L);
        boolean boolean25 = days1.isGreaterThan(days17);
        org.joda.time.ReadableInterval readableInterval26 = null;
        org.joda.time.Days days27 = org.joda.time.Days.daysIn(readableInterval26);
        int int29 = days27.getValue((int) (short) 0);
        org.joda.time.Days days30 = org.joda.time.Days.FIVE;
        org.joda.time.Days days31 = days27.minus(days30);
        org.joda.time.DurationFieldType durationFieldType32 = null;
        int int33 = days30.get(durationFieldType32);
        org.joda.time.DurationFieldType durationFieldType34 = null;
        int int35 = days30.get(durationFieldType34);
        boolean boolean37 = days30.equals((java.lang.Object) 0L);
        org.joda.time.Period period38 = days30.toPeriod();
        org.joda.time.Days days39 = days1.plus(days30);
        org.joda.time.ReadableInterval readableInterval40 = null;
        org.joda.time.Days days41 = org.joda.time.Days.daysIn(readableInterval40);
        int int43 = days41.getValue((int) (short) 0);
        org.joda.time.Period period44 = days41.toPeriod();
        org.joda.time.Days days45 = org.joda.time.Days.standardDaysIn((org.joda.time.ReadablePeriod) days41);
        boolean boolean46 = days1.equals((java.lang.Object) days45);
        org.joda.time.Days days48 = days45.multipliedBy(0);
        org.joda.time.Days days50 = days45.multipliedBy(5);
        org.joda.time.Days days52 = days50.dividedBy(5);
        org.joda.time.ReadableInterval readableInterval53 = null;
        org.joda.time.Days days54 = org.joda.time.Days.daysIn(readableInterval53);
        int int56 = days54.getValue((int) (short) 0);
        org.joda.time.Days days57 = org.joda.time.Days.FIVE;
        org.joda.time.Days days58 = days54.minus(days57);
        org.joda.time.Days days59 = null;
        org.joda.time.Days days60 = days54.minus(days59);
        org.joda.time.Days days62 = days54.minus((-1));
        org.joda.time.DurationFieldType durationFieldType63 = days54.getFieldType();
        boolean boolean64 = days50.isSupported(durationFieldType63);
        java.lang.Object obj65 = null;
        boolean boolean66 = days50.equals(obj65);
        org.junit.Assert.assertNotNull(days1);
        org.junit.Assert.assertNotNull(days3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(days6);
        org.junit.Assert.assertNotNull(days7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(durationFieldType11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNotNull(days14);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertNotNull(days17);
        org.junit.Assert.assertNotNull(days18);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(days27);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertNotNull(days30);
        org.junit.Assert.assertNotNull(days31);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(period38);
        org.junit.Assert.assertNotNull(days39);
        org.junit.Assert.assertNotNull(days41);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0);
        org.junit.Assert.assertNotNull(period44);
        org.junit.Assert.assertNotNull(days45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(days48);
        org.junit.Assert.assertNotNull(days50);
        org.junit.Assert.assertNotNull(days52);
        org.junit.Assert.assertNotNull(days54);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 0 + "'", int56 == 0);
        org.junit.Assert.assertNotNull(days57);
        org.junit.Assert.assertNotNull(days58);
        org.junit.Assert.assertNotNull(days60);
        org.junit.Assert.assertNotNull(days62);
        org.junit.Assert.assertNotNull(durationFieldType63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
    }
}

